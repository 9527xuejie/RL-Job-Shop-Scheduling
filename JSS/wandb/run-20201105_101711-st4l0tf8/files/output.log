2020-11-05 10:17:12,848	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.3 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1300b_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=5117)[0m 2020-11-05 10:17:15,696	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=5096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5096)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5098)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5098)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5098)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5079)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5079)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5079)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5084)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5084)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5084)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5089)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5089)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5089)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5089)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5089)[0m *** SIGSEGV (@0x0) received by PID 5089 (TID 0x7f3244e35700) from PID 0; stack trace: ***
[2m[36m(pid=5143)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5143)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5143)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5143)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5143)[0m *** SIGSEGV (@0x0) received by PID 5143 (TID 0x7f7ea847f700) from PID 0; stack trace: ***
[2m[36m(pid=5120)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5120)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5120)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5120)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5120)[0m *** SIGSEGV (@0x0) received by PID 5120 (TID 0x7f358a028700) from PID 0; stack trace: ***
[2m[36m(pid=5112)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5112)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5112)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5112)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5112)[0m *** SIGSEGV (@0x0) received by PID 5112 (TID 0x7fb7db62f700) from PID 0; stack trace: ***
[2m[36m(pid=5112)[0m     @     0x7fb7db208390 (unknown)
[2m[36m(pid=5112)[0m     @     0x7f88db115f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5112)[0m     @     0x7f88da8407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5092)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5092)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5092)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5092)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5092)[0m *** SIGSEGV (@0x0) received by PID 5092 (TID 0x7f552a90a700) from PID 0; stack trace: ***
[2m[36m(pid=5095)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5095)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5095)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5095)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5095)[0m *** SIGSEGV (@0x0) received by PID 5095 (TID 0x7f59d2cc7700) from PID 0; stack trace: ***
[2m[36m(pid=5095)[0m     @     0x7f59d28a0390 (unknown)
[2m[36m(pid=5095)[0m     @     0x7f2ad27bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5095)[0m     @     0x7f2ad1ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5108)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5108)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5108)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5108)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5108)[0m *** SIGSEGV (@0x0) received by PID 5108 (TID 0x7fee4e736700) from PID 0; stack trace: ***
[2m[36m(pid=5108)[0m     @     0x7fee4e30f390 (unknown)
[2m[36m(pid=5108)[0m     @     0x7fbf4e2b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5135)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5135)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5135)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5135)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5135)[0m *** SIGSEGV (@0x0) received by PID 5135 (TID 0x7f9d26fa8700) from PID 0; stack trace: ***
[2m[36m(pid=5135)[0m     @     0x7f9d26b81390 (unknown)
[2m[36m(pid=5135)[0m     @     0x7f6e26ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5135)[0m     @     0x7f6e261fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5087)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5087)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5087)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5087)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5087)[0m *** SIGSEGV (@0x0) received by PID 5087 (TID 0x7f6826f01700) from PID 0; stack trace: ***
[2m[36m(pid=5074)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5074)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5074)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5074)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5074)[0m *** SIGSEGV (@0x0) received by PID 5074 (TID 0x7f3ef93fd700) from PID 0; stack trace: ***
[2m[36m(pid=5074)[0m     @     0x7f3ef8fd6390 (unknown)
[2m[36m(pid=5074)[0m     @     0x7f0ff8ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5123)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5123)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5123)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5123)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5123)[0m *** SIGSEGV (@0x0) received by PID 5123 (TID 0x7f0eb8680700) from PID 0; stack trace: ***
[2m[36m(pid=5123)[0m     @     0x7f0eb8259390 (unknown)
[2m[36m(pid=5123)[0m     @     0x7edfb80cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5026)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5026)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5026)[0m *** SIGSEGV (@0x0) received by PID 5026 (TID 0x7f18e668c700) from PID 0; stack trace: ***
[2m[36m(pid=5103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5103)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5103)[0m *** SIGSEGV (@0x0) received by PID 5103 (TID 0x7f290c6b6700) from PID 0; stack trace: ***
[2m[36m(pid=5097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5097)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5097)[0m *** SIGSEGV (@0x0) received by PID 5097 (TID 0x7fec19e3e700) from PID 0; stack trace: ***
[2m[36m(pid=5097)[0m     @     0x7fec19a17390 (unknown)
[2m[36m(pid=5097)[0m     @     0x7fbd197f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5097)[0m     @     0x7fbd18f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5078)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5078)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5078)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5078)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5078)[0m *** SIGSEGV (@0x0) received by PID 5078 (TID 0x7fd98cade700) from PID 0; stack trace: ***
[2m[36m(pid=5078)[0m     @     0x7fd98c6b7390 (unknown)
[2m[36m(pid=5078)[0m     @     0x7faa8c67af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5106)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5106)[0m *** SIGSEGV (@0x0) received by PID 5106 (TID 0x7fb824f04700) from PID 0; stack trace: ***
[2m[36m(pid=5023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5023)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5023)[0m *** SIGSEGV (@0x0) received by PID 5023 (TID 0x7f1c177f0700) from PID 0; stack trace: ***
[2m[36m(pid=5023)[0m     @     0x7f1c173c9390 (unknown)
[2m[36m(pid=5127)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5127)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5127)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5127)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5127)[0m *** SIGSEGV (@0x0) received by PID 5127 (TID 0x7f9bc4cc6700) from PID 0; stack trace: ***
[2m[36m(pid=5127)[0m     @     0x7f9bc489f390 (unknown)
[2m[36m(pid=5127)[0m     @     0x7f6cc460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5127)[0m     @     0x7f6cc3d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5029)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5029)[0m *** SIGSEGV (@0x0) received by PID 5029 (TID 0x7f295f751700) from PID 0; stack trace: ***
[2m[36m(pid=5073)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5073)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5073)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5073)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5073)[0m *** SIGSEGV (@0x0) received by PID 5073 (TID 0x7f44ccafd700) from PID 0; stack trace: ***
[2m[36m(pid=5073)[0m     @     0x7f44cc6d6390 (unknown)
[2m[36m(pid=5115)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5115)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5115)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5115)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5115)[0m *** SIGSEGV (@0x0) received by PID 5115 (TID 0x7fb49ab6c700) from PID 0; stack trace: ***
[2m[36m(pid=5088)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5088)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5088)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5088)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5088)[0m *** SIGSEGV (@0x0) received by PID 5088 (TID 0x7fcc63ecd700) from PID 0; stack trace: ***
[2m[36m(pid=5088)[0m     @     0x7fcc63aa6390 (unknown)
[2m[36m(pid=5088)[0m     @     0x7f9d63a23f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5088)[0m     @     0x7f9d6314e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5077)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5077)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5077)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5077)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5077)[0m *** SIGSEGV (@0x0) received by PID 5077 (TID 0x7f585ce54700) from PID 0; stack trace: ***
[2m[36m(pid=5077)[0m     @     0x7f585ca2d390 (unknown)
[2m[36m(pid=5136)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5136)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5136)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5136)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5136)[0m *** SIGSEGV (@0x0) received by PID 5136 (TID 0x7f1a2d050700) from PID 0; stack trace: ***
[2m[36m(pid=5136)[0m     @     0x7f1a2cc29390 (unknown)
[2m[36m(pid=5085)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5085)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5085)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5085)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5085)[0m *** SIGSEGV (@0x0) received by PID 5085 (TID 0x7fb31734b700) from PID 0; stack trace: ***
[2m[36m(pid=5085)[0m     @     0x7fb316f24390 (unknown)
[2m[36m(pid=5085)[0m     @     0x7f8416ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5085)[0m     @     0x7f84165fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5131)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5131)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5131)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5131)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5131)[0m *** SIGSEGV (@0x0) received by PID 5131 (TID 0x7ff86a7f0700) from PID 0; stack trace: ***
[2m[36m(pid=5131)[0m     @     0x7ff86a3c9390 (unknown)
[2m[36m(pid=5018)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5018)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5018)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5018)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5018)[0m *** SIGSEGV (@0x0) received by PID 5018 (TID 0x7f55c1c26700) from PID 0; stack trace: ***
[2m[36m(pid=5018)[0m     @     0x7f55c17ff390 (unknown)
[2m[36m(pid=5101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5101)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5101)[0m *** SIGSEGV (@0x0) received by PID 5101 (TID 0x7fb6ab61e700) from PID 0; stack trace: ***
[2m[36m(pid=5101)[0m     @     0x7fb6ab1f7390 (unknown)
[2m[36m(pid=5101)[0m     @     0x7f87ab124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5011)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5011)[0m *** SIGSEGV (@0x0) received by PID 5011 (TID 0x7f692601f700) from PID 0; stack trace: ***
[2m[36m(pid=5011)[0m     @     0x7f6925bf8390 (unknown)
[2m[36m(pid=5065)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5065)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5065)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5065)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5065)[0m *** SIGSEGV (@0x0) received by PID 5065 (TID 0x7f71541b0700) from PID 0; stack trace: ***
[2m[36m(pid=5065)[0m     @     0x7f7153d89390 (unknown)
[2m[36m(pid=5065)[0m     @     0x7f4253d39f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5065)[0m     @     0x7f42534647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5002)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5002)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5002)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5002)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5002)[0m *** SIGSEGV (@0x0) received by PID 5002 (TID 0x7f3e5deaf700) from PID 0; stack trace: ***
[2m[36m(pid=5002)[0m     @     0x7f3e5da88390 (unknown)
[2m[36m(pid=5096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5096)[0m *** SIGSEGV (@0x0) received by PID 5096 (TID 0x7f2577a55700) from PID 0; stack trace: ***
[2m[36m(pid=5096)[0m     @     0x7f257762e390 (unknown)
[2m[36m(pid=5096)[0m     @     0x7ef6775f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5096)[0m     @     0x7ef676d1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5096)[0m     @     0x7ef676d208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5098)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5098)[0m *** SIGSEGV (@0x0) received by PID 5098 (TID 0x7efc59514700) from PID 0; stack trace: ***
[2m[36m(pid=5098)[0m     @     0x7efc590ed390 (unknown)
[2m[36m(pid=5098)[0m     @     0x7ecd59088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5098)[0m     @     0x7ecd587b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5079)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5079)[0m *** SIGSEGV (@0x0) received by PID 5079 (TID 0x7fec5219e700) from PID 0; stack trace: ***
[2m[36m(pid=5079)[0m     @     0x7fec51d77390 (unknown)
[2m[36m(pid=5079)[0m     @     0x7fbd51d12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5079)[0m     @     0x7fbd5143d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5084)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5084)[0m *** SIGSEGV (@0x0) received by PID 5084 (TID 0x7f2058ea3700) from PID 0; stack trace: ***
[2m[36m(pid=5084)[0m     @     0x7f2058a7c390 (unknown)
[2m[36m(pid=5084)[0m     @     0x7ef158774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5084)[0m     @     0x7ef157e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5093)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5093)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5093)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5093)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5093)[0m *** SIGSEGV (@0x0) received by PID 5093 (TID 0x7fd740e5a700) from PID 0; stack trace: ***
[2m[36m(pid=5093)[0m     @     0x7fd740a33390 (unknown)
[2m[36m(pid=5093)[0m     @     0x7fa840825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5089)[0m     @     0x7f3244a0e390 (unknown)
[2m[36m(pid=5089)[0m     @     0x7f0344774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5089)[0m     @     0x7f0343e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5143)[0m     @     0x7f7ea8058390 (unknown)
[2m[36m(pid=5143)[0m     @     0x7f4fa7feff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5143)[0m     @     0x7f4fa771a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5120)[0m     @     0x7f3589c01390 (unknown)
[2m[36m(pid=5120)[0m     @     0x7f0689b19f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5120)[0m     @     0x7f06892447db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5112)[0m     @     0x7f88da8438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5112)[0m     @     0x7f88da843ad3 at::TensorIterator::for_each()
[2m[36m(pid=5092)[0m     @     0x7f552a4e3390 (unknown)
[2m[36m(pid=5092)[0m     @     0x7f262a365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5092)[0m     @     0x7f2629a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5095)[0m     @     0x7f2ad1ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5108)[0m     @     0x7fbf4d9e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5108)[0m     @     0x7fbf4d9e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5135)[0m     @     0x7f6e261ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5087)[0m     @     0x7f6826ada390 (unknown)
[2m[36m(pid=5087)[0m     @     0x7f3926a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5087)[0m     @     0x7f392614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5074)[0m     @     0x7f0ff85cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5074)[0m     @     0x7f0ff85d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5123)[0m     @     0x7edfb77f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5123)[0m     @     0x7edfb77fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5026)[0m     @     0x7f18e6265390 (unknown)
[2m[36m(pid=5026)[0m     @     0x7ee9e613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5026)[0m     @     0x7ee9e58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5103)[0m     @     0x7f290c28f390 (unknown)
[2m[36m(pid=5103)[0m     @     0x7efa0c223f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5103)[0m     @     0x7efa0b94e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5097)[0m     @     0x7fbd18f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5097)[0m     @     0x7fbd18f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5078)[0m     @     0x7faa8bda57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5078)[0m     @     0x7faa8bda88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5106)[0m     @     0x7fb824add390 (unknown)
[2m[36m(pid=5106)[0m     @     0x7f89249e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5106)[0m     @     0x7f89241137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5023)[0m     @     0x7eed17229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5023)[0m     @     0x7eed169547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5023)[0m     @     0x7eed169578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5127)[0m     @     0x7f6cc3d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5029)[0m     @     0x7f295f32a390 (unknown)
[2m[36m(pid=5029)[0m     @     0x7efa5f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5029)[0m     @     0x7efa5e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5073)[0m     @     0x7f15cc563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5073)[0m     @     0x7f15cbc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5073)[0m     @     0x7f15cbc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5115)[0m     @     0x7fb49a745390 (unknown)
[2m[36m(pid=5115)[0m     @     0x7f859a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5115)[0m     @     0x7f8599c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5088)[0m     @     0x7f9d631518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5077)[0m     @     0x7f295c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5077)[0m     @     0x7f295bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5136)[0m     @     0x7eeb2ca8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5136)[0m     @     0x7eeb2c1b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5085)[0m     @     0x7f84166018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5085)[0m     @     0x7f8416601ad3 at::TensorIterator::for_each()
[2m[36m(pid=5131)[0m     @     0x7fc96a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5131)[0m     @     0x7fc969a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5131)[0m     @     0x7fc969a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5018)[0m     @     0x7f26c16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5018)[0m     @     0x7f26c0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5018)[0m     @     0x7f26c0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5101)[0m     @     0x7f87aa84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5101)[0m     @     0x7f87aa8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5011)[0m     @     0x7f3a25a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5011)[0m     @     0x7f3a251357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5011)[0m     @     0x7f3a251388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5065)[0m     @     0x7f42534678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5065)[0m     @     0x7f4253467ad3 at::TensorIterator::for_each()
[2m[36m(pid=5002)[0m     @     0x7f0f5da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5002)[0m     @     0x7f0f5d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5002)[0m     @     0x7f0f5d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5010)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5010)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5010)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5096)[0m     @     0x7ef676d20ad3 at::TensorIterator::for_each()
[2m[36m(pid=5096)[0m     @     0x7ef676d20d91 at::TensorIterator::for_each()
[2m[36m(pid=5096)[0m     @     0x7ef677603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5096)[0m     @     0x7ef677626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5098)[0m     @     0x7ecd587b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5098)[0m     @     0x7ecd587b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=5079)[0m     @     0x7fbd514408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5079)[0m     @     0x7fbd51440ad3 at::TensorIterator::for_each()
[2m[36m(pid=5079)[0m     @     0x7fbd51440d91 at::TensorIterator::for_each()
[2m[36m(pid=5079)[0m     @     0x7fbd51d23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5079)[0m     @     0x7fbd51d46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5079)[0m     @     0x7fbd511e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5084)[0m     @     0x7ef157ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5084)[0m     @     0x7ef157ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5084)[0m     @     0x7ef157ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=5093)[0m     @     0x7fa83ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5093)[0m     @     0x7fa83ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5093)[0m     @     0x7fa83ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=5007)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5007)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5007)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5007)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5007)[0m *** SIGSEGV (@0x0) received by PID 5007 (TID 0x7f7fc4c7e700) from PID 0; stack trace: ***
[2m[36m(pid=5021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5021)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5021)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5021)[0m *** SIGSEGV (@0x0) received by PID 5021 (TID 0x7f0170ab5700) from PID 0; stack trace: ***
[2m[36m(pid=5021)[0m     @     0x7f017068e390 (unknown)
[2m[36m(pid=5021)[0m     @     0x7ed270563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5021)[0m     @     0x7ed26fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5086)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5086)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5086)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5086)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5086)[0m *** SIGSEGV (@0x0) received by PID 5086 (TID 0x7f15822f6700) from PID 0; stack trace: ***
[2m[36m(pid=5086)[0m     @     0x7f1581ecf390 (unknown)
[2m[36m(pid=5089)[0m     @     0x7f0343ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5089)[0m     @     0x7f0343ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5089)[0m     @     0x7f0343ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=5089)[0m     @     0x7f0344785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5089)[0m     @     0x7f03447a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5143)[0m     @     0x7f4fa771d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5143)[0m     @     0x7f4fa771dad3 at::TensorIterator::for_each()
[2m[36m(pid=5143)[0m     @     0x7f4fa771dd91 at::TensorIterator::for_each()
[2m[36m(pid=5143)[0m     @     0x7f4fa8000b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5143)[0m     @     0x7f4fa8023c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5114)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5114)[0m *** SIGSEGV (@0x0) received by PID 5114 (TID 0x7fa89ae3a700) from PID 0; stack trace: ***
[2m[36m(pid=5126)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5126)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5126)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5126)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5126)[0m *** SIGSEGV (@0x0) received by PID 5126 (TID 0x7fcfff1ab700) from PID 0; stack trace: ***
[2m[36m(pid=5120)[0m     @     0x7f06892478f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5120)[0m     @     0x7f0689247ad3 at::TensorIterator::for_each()
[2m[36m(pid=5120)[0m     @     0x7f0689247d91 at::TensorIterator::for_each()
[2m[36m(pid=5112)[0m     @     0x7f88da843d91 at::TensorIterator::for_each()
[2m[36m(pid=5112)[0m     @     0x7f88db126b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5112)[0m     @     0x7f88db149c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5112)[0m     @     0x7f88da5eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5112)[0m     @     0x7f88da5e9388 at::native::copy_impl()
[2m[36m(pid=5112)[0m     @     0x7f88da5eb5a4 at::native::copy_()
[2m[36m(pid=5092)[0m     @     0x7f2629a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5092)[0m     @     0x7f2629a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=5092)[0m     @     0x7f2629a93d91 at::TensorIterator::for_each()
[2m[36m(pid=5095)[0m     @     0x7f2ad1ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=5095)[0m     @     0x7f2ad1ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=5095)[0m     @     0x7f2ad27ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5095)[0m     @     0x7f2ad27efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5095)[0m     @     0x7f2ad1c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5095)[0m     @     0x7f2ad1c8f388 at::native::copy_impl()
[2m[36m(pid=5108)[0m     @     0x7fbf4d9e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=5108)[0m     @     0x7fbf4d9e7d91 at::TensorIterator::for_each()
[2m[36m(pid=5108)[0m     @     0x7fbf4e2cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5108)[0m     @     0x7fbf4e2edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5135)[0m     @     0x7f6e261ffad3 at::TensorIterator::for_each()
[2m[36m(pid=5135)[0m     @     0x7f6e261ffd91 at::TensorIterator::for_each()
[2m[36m(pid=5135)[0m     @     0x7f6e26ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5135)[0m     @     0x7f6e26b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5087)[0m     @     0x7f392614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5087)[0m     @     0x7f392614fad3 at::TensorIterator::for_each()
[2m[36m(pid=5087)[0m     @     0x7f392614fd91 at::TensorIterator::for_each()
[2m[36m(pid=5074)[0m     @     0x7f0ff85d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5074)[0m     @     0x7f0ff85d2d91 at::TensorIterator::for_each()
[2m[36m(pid=5074)[0m     @     0x7f0ff8eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5074)[0m     @     0x7f0ff8ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5074)[0m     @     0x7f0ff837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5074)[0m     @     0x7f0ff8378388 at::native::copy_impl()
[2m[36m(pid=5123)[0m     @     0x7edfb77fbad3 at::TensorIterator::for_each()
[2m[36m(pid=5123)[0m     @     0x7edfb77fbd91 at::TensorIterator::for_each()
[2m[36m(pid=5123)[0m     @     0x7edfb80deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5123)[0m     @     0x7edfb8101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5123)[0m     @     0x7edfb75a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5123)[0m     @     0x7edfb75a1388 at::native::copy_impl()
[2m[36m(pid=5026)[0m     @     0x7ee9e58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5026)[0m     @     0x7ee9e5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=5026)[0m     @     0x7ee9e5868d91 at::TensorIterator::for_each()
[2m[36m(pid=5103)[0m     @     0x7efa0b9518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5103)[0m     @     0x7efa0b951ad3 at::TensorIterator::for_each()
[2m[36m(pid=5103)[0m     @     0x7efa0b951d91 at::TensorIterator::for_each()
[2m[36m(pid=5097)[0m     @     0x7fbd18f27d91 at::TensorIterator::for_each()
[2m[36m(pid=5097)[0m     @     0x7fbd1980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5097)[0m     @     0x7fbd1982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5097)[0m     @     0x7fbd18ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5097)[0m     @     0x7fbd18ccd388 at::native::copy_impl()
[2m[36m(pid=5097)[0m     @     0x7fbd18ccf5a4 at::native::copy_()
[2m[36m(pid=5078)[0m     @     0x7faa8bda8ad3 at::TensorIterator::for_each()
[2m[36m(pid=5078)[0m     @     0x7faa8bda8d91 at::TensorIterator::for_each()
[2m[36m(pid=5078)[0m     @     0x7faa8c68bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5078)[0m     @     0x7faa8c6aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5078)[0m     @     0x7faa8bb50a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5106)[0m     @     0x7f89241168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5106)[0m     @     0x7f8924116ad3 at::TensorIterator::for_each()
[2m[36m(pid=5023)[0m     @     0x7eed16957ad3 at::TensorIterator::for_each()
[2m[36m(pid=5023)[0m     @     0x7eed16957d91 at::TensorIterator::for_each()
[2m[36m(pid=5023)[0m     @     0x7eed1723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5023)[0m     @     0x7eed1725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5127)[0m     @     0x7f6cc3d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=5127)[0m     @     0x7f6cc3d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=5127)[0m     @     0x7f6cc461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5127)[0m     @     0x7f6cc4642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5127)[0m     @     0x7f6cc3ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5127)[0m     @     0x7f6cc3ae2388 at::native::copy_impl()
[2m[36m(pid=5029)[0m     @     0x7efa5e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5029)[0m     @     0x7efa5e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=5029)[0m     @     0x7efa5e957d91 at::TensorIterator::for_each()
[2m[36m(pid=5029)[0m     @     0x7efa5f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5029)[0m     @     0x7efa5f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5073)[0m     @     0x7f15cbc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=5073)[0m     @     0x7f15cbc91d91 at::TensorIterator::for_each()
[2m[36m(pid=5073)[0m     @     0x7f15cc574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5073)[0m     @     0x7f15cc597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5073)[0m     @     0x7f15cba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5036)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5036)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5036)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5036)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5036)[0m *** SIGSEGV (@0x0) received by PID 5036 (TID 0x7f43b15a4700) from PID 0; stack trace: ***
[2m[36m(pid=5036)[0m     @     0x7f43b117d390 (unknown)
[2m[36m(pid=5036)[0m     @     0x7f14b10b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5107)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5107)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5107)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5107)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5107)[0m *** SIGSEGV (@0x0) received by PID 5107 (TID 0x7fe33e00e700) from PID 0; stack trace: ***
[2m[36m(pid=5115)[0m     @     0x7f8599c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5115)[0m     @     0x7f8599c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5115)[0m     @     0x7f8599c27d91 at::TensorIterator::for_each()
[2m[36m(pid=5115)[0m     @     0x7f859a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5115)[0m     @     0x7f859a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5003)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5003)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5003)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5003)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5003)[0m *** SIGSEGV (@0x0) received by PID 5003 (TID 0x7f4c0df83700) from PID 0; stack trace: ***
[2m[36m(pid=5003)[0m     @     0x7f4c0db5c390 (unknown)
[2m[36m(pid=5003)[0m     @     0x7f1d0d7fff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5003)[0m     @     0x7f1d0cf2a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5088)[0m     @     0x7f9d63151ad3 at::TensorIterator::for_each()
[2m[36m(pid=5088)[0m     @     0x7f9d63151d91 at::TensorIterator::for_each()
[2m[36m(pid=5088)[0m     @     0x7f9d63a34b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5088)[0m     @     0x7f9d63a57c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5088)[0m     @     0x7f9d62ef9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5088)[0m     @     0x7f9d62ef7388 at::native::copy_impl()
[2m[36m(pid=5077)[0m     @     0x7f295bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5077)[0m     @     0x7f295bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=5077)[0m     @     0x7f295bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=5077)[0m     @     0x7f295c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5077)[0m     @     0x7f295c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5136)[0m     @     0x7eeb2c1b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5136)[0m     @     0x7eeb2c1b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=5136)[0m     @     0x7eeb2c1b9d91 at::TensorIterator::for_each()
[2m[36m(pid=5136)[0m     @     0x7eeb2ca9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5008)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5008)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5008)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5008)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5008)[0m *** SIGSEGV (@0x0) received by PID 5008 (TID 0x7f2147cf8700) from PID 0; stack trace: ***
[2m[36m(pid=5008)[0m     @     0x7f21478d1390 (unknown)
[2m[36m(pid=5008)[0m     @     0x7ef247871f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5008)[0m     @     0x7ef246f9c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5085)[0m     @     0x7f8416601d91 at::TensorIterator::for_each()
[2m[36m(pid=5085)[0m     @     0x7f8416ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5085)[0m     @     0x7f8416f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5085)[0m     @     0x7f84163a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5085)[0m     @     0x7f84163a7388 at::native::copy_impl()
[2m[36m(pid=5006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5006)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5006)[0m *** SIGSEGV (@0x0) received by PID 5006 (TID 0x7f16bf16a700) from PID 0; stack trace: ***
[2m[36m(pid=5006)[0m     @     0x7f16bed43390 (unknown)
[2m[36m(pid=5006)[0m     @     0x7ee7becfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5082)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5082)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5082)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5082)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5082)[0m *** SIGSEGV (@0x0) received by PID 5082 (TID 0x7f6977e8f700) from PID 0; stack trace: ***
[2m[36m(pid=5082)[0m     @     0x7f6977a68390 (unknown)
[2m[36m(pid=5082)[0m     @     0x7f3a778def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5082)[0m     @     0x7f3a770097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5069)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5069)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5069)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5069)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5069)[0m *** SIGSEGV (@0x0) received by PID 5069 (TID 0x7f4634587700) from PID 0; stack trace: ***
[2m[36m(pid=5069)[0m     @     0x7f4634160390 (unknown)
[2m[36m(pid=5069)[0m     @     0x7f173401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5069)[0m     @     0x7f17337477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5069)[0m     @     0x7f173374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5069)[0m     @     0x7f173374aad3 at::TensorIterator::for_each()
[2m[36m(pid=5009)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5009)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5009)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5009)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5009)[0m *** SIGSEGV (@0x0) received by PID 5009 (TID 0x7fbc62bb1700) from PID 0; stack trace: ***
[2m[36m(pid=5076)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5076)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5076)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5076)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5076)[0m *** SIGSEGV (@0x0) received by PID 5076 (TID 0x7f2847c46700) from PID 0; stack trace: ***
[2m[36m(pid=5131)[0m     @     0x7fc969a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=5131)[0m     @     0x7fc969a79d91 at::TensorIterator::for_each()
[2m[36m(pid=5131)[0m     @     0x7fc96a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5018)[0m     @     0x7f26c0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=5018)[0m     @     0x7f26c0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=5018)[0m     @     0x7f26c1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5018)[0m     @     0x7f26c1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5101)[0m     @     0x7f87aa852ad3 at::TensorIterator::for_each()
[2m[36m(pid=5101)[0m     @     0x7f87aa852d91 at::TensorIterator::for_each()
[2m[36m(pid=5101)[0m     @     0x7f87ab135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5101)[0m     @     0x7f87ab158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5011)[0m     @     0x7f3a25138ad3 at::TensorIterator::for_each()
[2m[36m(pid=5011)[0m     @     0x7f3a25138d91 at::TensorIterator::for_each()
[2m[36m(pid=5011)[0m     @     0x7f3a25a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5011)[0m     @     0x7f3a25a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5011)[0m     @     0x7f3a24ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5071)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5071)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5071)[0m *** SIGSEGV (@0x0) received by PID 5071 (TID 0x7f0e26087700) from PID 0; stack trace: ***
[2m[36m(pid=5071)[0m     @     0x7f0e25c60390 (unknown)
[2m[36m(pid=5071)[0m     @     0x7edf25c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5071)[0m     @     0x7edf2533c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5065)[0m     @     0x7f4253467d91 at::TensorIterator::for_each()
[2m[36m(pid=5065)[0m     @     0x7f4253d4ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5065)[0m     @     0x7f4253d6dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5065)[0m     @     0x7f425320fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5065)[0m     @     0x7f425320d388 at::native::copy_impl()
[2m[36m(pid=5091)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5091)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5091)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5017)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5017)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5017)[0m *** SIGSEGV (@0x0) received by PID 5017 (TID 0x7fa949a39700) from PID 0; stack trace: ***
[2m[36m(pid=5017)[0m     @     0x7fa949612390 (unknown)
[2m[36m(pid=5017)[0m     @     0x7f7a495a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5017)[0m     @     0x7f7a48ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5038)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5038)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5038)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5038)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5038)[0m *** SIGSEGV (@0x0) received by PID 5038 (TID 0x7f82f0eb1700) from PID 0; stack trace: ***
[2m[36m(pid=5038)[0m     @     0x7f82f0a8a390 (unknown)
[2m[36m(pid=5038)[0m     @     0x7f53f0825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5038)[0m     @     0x7f53eff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5002)[0m     @     0x7f0f5d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=5002)[0m     @     0x7f0f5d138d91 at::TensorIterator::for_each()
[2m[36m(pid=5002)[0m     @     0x7f0f5da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5002)[0m     @     0x7f0f5da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5022)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5022)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5022)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5022)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5022)[0m *** SIGSEGV (@0x0) received by PID 5022 (TID 0x7fe01eb4d700) from PID 0; stack trace: ***
[2m[36m(pid=5022)[0m     @     0x7fe01e726390 (unknown)
[2m[36m(pid=5022)[0m     @     0x7fb11e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5022)[0m     @     0x7fb11dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5024)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5024)[0m *** SIGSEGV (@0x0) received by PID 5024 (TID 0x7f2d2e0d6700) from PID 0; stack trace: ***
[2m[36m(pid=5024)[0m     @     0x7f2d2dcaf390 (unknown)
[2m[36m(pid=5024)[0m     @     0x7efe2dc51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5024)[0m     @     0x7efe2d37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5083)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5083)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5083)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5019)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5019)[0m *** SIGSEGV (@0x0) received by PID 5019 (TID 0x7f7ebd346700) from PID 0; stack trace: ***
[2m[36m(pid=5063)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5063)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5063)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5063)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5063)[0m *** SIGSEGV (@0x0) received by PID 5063 (TID 0x7fc4bf23b700) from PID 0; stack trace: ***
[2m[36m(pid=5063)[0m     @     0x7fc4bee14390 (unknown)
[2m[36m(pid=5063)[0m     @     0x7f95bedb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5063)[0m     @     0x7f95be4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5014)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5014)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5014)[0m *** SIGSEGV (@0x0) received by PID 5014 (TID 0x7fc3e812f700) from PID 0; stack trace: ***
[2m[36m(pid=5014)[0m     @     0x7fc3e7d08390 (unknown)
[2m[36m(pid=5014)[0m     @     0x7f94e7ca8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5014)[0m     @     0x7f94e73d37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5014)[0m     @     0x7f94e73d68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5043)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5043)[0m *** SIGSEGV (@0x0) received by PID 5043 (TID 0x7f8053811700) from PID 0; stack trace: ***
[2m[36m(pid=5043)[0m     @     0x7f80533ea390 (unknown)
[2m[36m(pid=5043)[0m     @     0x7f5153229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5043)[0m     @     0x7f51529547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5072)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5072)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5072)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5072)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5072)[0m *** SIGSEGV (@0x0) received by PID 5072 (TID 0x7f08cbc9e700) from PID 0; stack trace: ***
[2m[36m(pid=5072)[0m     @     0x7f08cb877390 (unknown)
[2m[36m(pid=5072)[0m     @     0x7ed9cb751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5072)[0m     @     0x7ed9cae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5004)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5004)[0m *** SIGSEGV (@0x0) received by PID 5004 (TID 0x7feff040f700) from PID 0; stack trace: ***
[2m[36m(pid=5004)[0m     @     0x7fefeffe8390 (unknown)
[2m[36m(pid=5004)[0m     @     0x7fc0efcd6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5004)[0m     @     0x7fc0ef4017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5004)[0m     @     0x7fc0ef4048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5013)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5013)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5013)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5013)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5013)[0m *** SIGSEGV (@0x0) received by PID 5013 (TID 0x7f96e64ac700) from PID 0; stack trace: ***
[2m[36m(pid=5013)[0m     @     0x7f96e6085390 (unknown)
[2m[36m(pid=5013)[0m     @     0x7f67e6028f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5013)[0m     @     0x7f67e57537db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5005)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5005)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5005)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5005)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5005)[0m *** SIGSEGV (@0x0) received by PID 5005 (TID 0x7f4e89ca2700) from PID 0; stack trace: ***
[2m[36m(pid=5005)[0m     @     0x7f4e8987b390 (unknown)
[2m[36m(pid=5005)[0m     @     0x7f1f897f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5005)[0m     @     0x7f1f88f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5068)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5068)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5068)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5068)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5068)[0m *** SIGSEGV (@0x0) received by PID 5068 (TID 0x7fc35ff4e700) from PID 0; stack trace: ***
[2m[36m(pid=5068)[0m     @     0x7fc35fb27390 (unknown)
[2m[36m(pid=5068)[0m     @     0x7f945f900f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5068)[0m     @     0x7f945f02b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5068)[0m     @     0x7f945f02e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5033)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5033)[0m *** SIGSEGV (@0x0) received by PID 5033 (TID 0x7f9eddff9700) from PID 0; stack trace: ***
[2m[36m(pid=5034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5034)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5034)[0m *** SIGSEGV (@0x0) received by PID 5034 (TID 0x7f9071130700) from PID 0; stack trace: ***
[2m[36m(pid=5034)[0m     @     0x7f9070d09390 (unknown)
[2m[36m(pid=5034)[0m     @     0x7f6170bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5034)[0m     @     0x7f61702fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5040)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5040)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5040)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5040)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5040)[0m *** SIGSEGV (@0x0) received by PID 5040 (TID 0x7efe246dd700) from PID 0; stack trace: ***
[2m[36m(pid=5040)[0m     @     0x7efe242b6390 (unknown)
[2m[36m(pid=5040)[0m     @     0x7ecf2425ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5040)[0m     @     0x7ecf239897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5040)[0m     @     0x7ecf2398c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5080)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5080)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5080)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5080)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5080)[0m *** SIGSEGV (@0x0) received by PID 5080 (TID 0x7fc00123b700) from PID 0; stack trace: ***
[2m[36m(pid=5080)[0m     @     0x7fc000e14390 (unknown)
[2m[36m(pid=5080)[0m     @     0x7f9100d89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5080)[0m     @     0x7f91004b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5010)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5010)[0m *** SIGSEGV (@0x0) received by PID 5010 (TID 0x7fd231c25700) from PID 0; stack trace: ***
[2m[36m(pid=5010)[0m     @     0x7fd2317fe390 (unknown)
[2m[36m(pid=5010)[0m     @     0x7fa3316f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5010)[0m     @     0x7fa330e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5096)[0m     @     0x7ef676ac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5096)[0m     @     0x7ef676ac6388 at::native::copy_impl()
[2m[36m(pid=5096)[0m     @     0x7ef676ac85a4 at::native::copy_()
[2m[36m(pid=5098)[0m     @     0x7ecd587b6d91 at::TensorIterator::for_each()
[2m[36m(pid=5098)[0m     @     0x7ecd59099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5098)[0m     @     0x7ecd590bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5098)[0m     @     0x7ecd5855ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5098)[0m     @     0x7ecd5855c388 at::native::copy_impl()
[2m[36m(pid=5079)[0m     @     0x7fbd511e6388 at::native::copy_impl()
[2m[36m(pid=5079)[0m     @     0x7fbd511e85a4 at::native::copy_()
[2m[36m(pid=5084)[0m     @     0x7ef158785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5084)[0m     @     0x7ef1587a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5084)[0m     @     0x7ef157c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5084)[0m     @     0x7ef157c48388 at::native::copy_impl()
[2m[36m(pid=5093)[0m     @     0x7fa83ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=5093)[0m     @     0x7fa840836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5093)[0m     @     0x7fa840859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5093)[0m     @     0x7fa83fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5007)[0m     @     0x7f7fc4857390 (unknown)
[2m[36m(pid=5007)[0m     @     0x7f50c470ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5007)[0m     @     0x7f50c3e397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5007)[0m     @     0x7f50c3e3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5021)[0m     @     0x7ed26fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5021)[0m     @     0x7ed26fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=5089)[0m     @     0x7f0343c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5089)[0m     @     0x7f0343c48388 at::native::copy_impl()
[2m[36m(pid=5089)[0m     @     0x7f0343c4a5a4 at::native::copy_()
[2m[36m(pid=5143)[0m     @     0x7f4fa74c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5143)[0m     @     0x7f4fa74c3388 at::native::copy_impl()
[2m[36m(pid=5143)[0m     @     0x7f4fa74c55a4 at::native::copy_()
[2m[36m(pid=5114)[0m     @     0x7fa89aa13390 (unknown)
[2m[36m(pid=5114)[0m     @     0x7f799a97ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5114)[0m     @     0x7f799a0a97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5126)[0m     @     0x7fcffed84390 (unknown)
[2m[36m(pid=5126)[0m     @     0x7fa0fecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5126)[0m     @     0x7fa0fe4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5120)[0m     @     0x7f0689b2ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5120)[0m     @     0x7f0689b4dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5120)[0m     @     0x7f0688fefa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5120)[0m     @     0x7f0688fed388 at::native::copy_impl()
[2m[36m(pid=5112)[0m     @     0x7f88dacd64f5 at::Tensor::copy_()
[2m[36m(pid=5112)[0m     @     0x7f88dd1a98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5112)[0m     @     0x7f88dacd64f5 at::Tensor::copy_()
[2m[36m(pid=5092)[0m     @     0x7f262a376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5092)[0m     @     0x7f262a399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5092)[0m     @     0x7f262983ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5092)[0m     @     0x7f2629839388 at::native::copy_impl()
[2m[36m(pid=5095)[0m     @     0x7f2ad1c915a4 at::native::copy_()
[2m[36m(pid=5095)[0m     @     0x7f2ad237c4f5 at::Tensor::copy_()
[2m[36m(pid=5095)[0m     @     0x7f2ad484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5108)[0m     @     0x7fbf4d78fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5108)[0m     @     0x7fbf4d78d388 at::native::copy_impl()
[2m[36m(pid=5108)[0m     @     0x7fbf4d78f5a4 at::native::copy_()
[2m[36m(pid=5135)[0m     @     0x7f6e25fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5135)[0m     @     0x7f6e25fa5388 at::native::copy_impl()
[2m[36m(pid=5135)[0m     @     0x7f6e25fa75a4 at::native::copy_()
[2m[36m(pid=5087)[0m     @     0x7f3926a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5087)[0m     @     0x7f3926a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5087)[0m     @     0x7f3925ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5087)[0m     @     0x7f3925ef5388 at::native::copy_impl()
[2m[36m(pid=5074)[0m     @     0x7f0ff837a5a4 at::native::copy_()
[2m[36m(pid=5074)[0m     @     0x7f0ff8a654f5 at::Tensor::copy_()
[2m[36m(pid=5123)[0m     @     0x7edfb75a35a4 at::native::copy_()
[2m[36m(pid=5123)[0m     @     0x7edfb7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=5123)[0m     @     0x7edfba1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5026)[0m     @     0x7ee9e614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5026)[0m     @     0x7ee9e616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5026)[0m     @     0x7ee9e5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5026)[0m     @     0x7ee9e560e388 at::native::copy_impl()
[2m[36m(pid=5103)[0m     @     0x7efa0c234b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5103)[0m     @     0x7efa0c257c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5103)[0m     @     0x7efa0b6f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5103)[0m     @     0x7efa0b6f7388 at::native::copy_impl()
[2m[36m(pid=5097)[0m     @     0x7fbd193ba4f5 at::Tensor::copy_()
[2m[36m(pid=5097)[0m     @     0x7fbd1b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5097)[0m     @     0x7fbd193ba4f5 at::Tensor::copy_()
[2m[36m(pid=5078)[0m     @     0x7faa8bb4e388 at::native::copy_impl()
[2m[36m(pid=5078)[0m     @     0x7faa8bb505a4 at::native::copy_()
[2m[36m(pid=5106)[0m     @     0x7f8924116d91 at::TensorIterator::for_each()
[2m[36m(pid=5106)[0m     @     0x7f89249f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5106)[0m     @     0x7f8924a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5106)[0m     @     0x7f8923ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5106)[0m     @     0x7f8923ebc388 at::native::copy_impl()
[2m[36m(pid=5023)[0m     @     0x7eed166ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5023)[0m     @     0x7eed166fd388 at::native::copy_impl()
[2m[36m(pid=5023)[0m     @     0x7eed166ff5a4 at::native::copy_()
[2m[36m(pid=5127)[0m     @     0x7f6cc3ae45a4 at::native::copy_()
[2m[36m(pid=5127)[0m     @     0x7f6cc41cf4f5 at::Tensor::copy_()
[2m[36m(pid=5029)[0m     @     0x7efa5e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5029)[0m     @     0x7efa5e6fd388 at::native::copy_impl()
[2m[36m(pid=5029)[0m     @     0x7efa5e6ff5a4 at::native::copy_()
[2m[36m(pid=5029)[0m     @     0x7efa5edea4f5 at::Tensor::copy_()
[2m[36m(pid=5073)[0m     @     0x7f15cba37388 at::native::copy_impl()
[2m[36m(pid=5073)[0m     @     0x7f15cba395a4 at::native::copy_()
[2m[36m(pid=5073)[0m     @     0x7f15cc1244f5 at::Tensor::copy_()
[2m[36m(pid=5015)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5015)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5015)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5015)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5015)[0m *** SIGSEGV (@0x0) received by PID 5015 (TID 0x7f49a732e700) from PID 0; stack trace: ***
[2m[36m(pid=5015)[0m     @     0x7f49a6f07390 (unknown)
[2m[36m(pid=5015)[0m     @     0x7f1aa6e93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5015)[0m     @     0x7f1aa65be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5036)[0m     @     0x7f14b07e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5036)[0m     @     0x7f14b07e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5036)[0m     @     0x7f14b07e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=5107)[0m     @     0x7fe33dbe7390 (unknown)
[2m[36m(pid=5107)[0m     @     0x7fb43db7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5107)[0m     @     0x7fb43d2a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5107)[0m     @     0x7fb43d2a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5115)[0m     @     0x7f85999cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5115)[0m     @     0x7f85999cd388 at::native::copy_impl()
[2m[36m(pid=5115)[0m     @     0x7f85999cf5a4 at::native::copy_()
[2m[36m(pid=5115)[0m     @     0x7f859a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=5003)[0m     @     0x7f1d0cf2d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5003)[0m     @     0x7f1d0cf2dad3 at::TensorIterator::for_each()
[2m[36m(pid=5003)[0m     @     0x7f1d0cf2dd91 at::TensorIterator::for_each()
[2m[36m(pid=5088)[0m     @     0x7f9d62ef95a4 at::native::copy_()
[2m[36m(pid=5088)[0m     @     0x7f9d635e44f5 at::Tensor::copy_()
[2m[36m(pid=5088)[0m     @     0x7f9d65ab78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5077)[0m     @     0x7f295bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5077)[0m     @     0x7f295bcf9388 at::native::copy_impl()
[2m[36m(pid=5077)[0m     @     0x7f295bcfb5a4 at::native::copy_()
[2m[36m(pid=5077)[0m     @     0x7f295c3e64f5 at::Tensor::copy_()
[2m[36m(pid=5136)[0m     @     0x7eeb2cabfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5136)[0m     @     0x7eeb2bf61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5136)[0m     @     0x7eeb2bf5f388 at::native::copy_impl()
[2m[36m(pid=5136)[0m     @     0x7eeb2bf615a4 at::native::copy_()
[2m[36m(pid=5008)[0m     @     0x7ef246f9f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5008)[0m     @     0x7ef246f9fad3 at::TensorIterator::for_each()
[2m[36m(pid=5008)[0m     @     0x7ef246f9fd91 at::TensorIterator::for_each()
[2m[36m(pid=5085)[0m     @     0x7f84163a95a4 at::native::copy_()
[2m[36m(pid=5085)[0m     @     0x7f8416a944f5 at::Tensor::copy_()
[2m[36m(pid=5085)[0m     @     0x7f8418f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5006)[0m     @     0x7ee7be4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5006)[0m     @     0x7ee7be42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5006)[0m     @     0x7ee7be42aad3 at::TensorIterator::for_each()
[2m[36m(pid=5082)[0m     @     0x7f3a7700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5082)[0m     @     0x7f3a7700cad3 at::TensorIterator::for_each()
[2m[36m(pid=5082)[0m     @     0x7f3a7700cd91 at::TensorIterator::for_each()
[2m[36m(pid=5069)[0m     @     0x7f173374ad91 at::TensorIterator::for_each()
[2m[36m(pid=5069)[0m     @     0x7f173402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5069)[0m     @     0x7f1734050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5069)[0m     @     0x7f17334f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5069)[0m     @     0x7f17334f0388 at::native::copy_impl()
[2m[36m(pid=5081)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5081)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5081)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5081)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5081)[0m *** SIGSEGV (@0x0) received by PID 5081 (TID 0x7f52b7312700) from PID 0; stack trace: ***
[2m[36m(pid=5081)[0m     @     0x7f52b6eeb390 (unknown)
[2m[36m(pid=5081)[0m     @     0x7f23b6e66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5081)[0m     @     0x7f23b65917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5028)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5028)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5028)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5028)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5028)[0m *** SIGSEGV (@0x0) received by PID 5028 (TID 0x7f1485ce1700) from PID 0; stack trace: ***
[2m[36m(pid=5028)[0m     @     0x7f14858ba390 (unknown)
[2m[36m(pid=5028)[0m     @     0x7ee5857f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5067)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5067)[0m *** SIGSEGV (@0x0) received by PID 5067 (TID 0x7f8fe3c3b700) from PID 0; stack trace: ***
[2m[36m(pid=5067)[0m     @     0x7f8fe3814390 (unknown)
[2m[36m(pid=5067)[0m     @     0x7f60e37a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5067)[0m     @     0x7f60e2ed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5009)[0m     @     0x7fbc6278a390 (unknown)
[2m[36m(pid=5009)[0m     @     0x7f8d624f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5009)[0m     @     0x7f8d61c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5009)[0m     @     0x7f8d61c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5009)[0m     @     0x7f8d61c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5076)[0m     @     0x7f284781f390 (unknown)
[2m[36m(pid=5075)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5075)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5075)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5075)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5075)[0m *** SIGSEGV (@0x0) received by PID 5075 (TID 0x7f64d9ea7700) from PID 0; stack trace: ***
[2m[36m(pid=5075)[0m     @     0x7f64d9a80390 (unknown)
[2m[36m(pid=5075)[0m     @     0x7f35d97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5090)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5090)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5090)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5090)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5090)[0m *** SIGSEGV (@0x0) received by PID 5090 (TID 0x7f6cf7300700) from PID 0; stack trace: ***
[2m[36m(pid=5090)[0m     @     0x7f6cf6ed9390 (unknown)
[2m[36m(pid=5031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=5031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=5031)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5031)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5031)[0m *** SIGSEGV (@0x0) received by PID 5031 (TID 0x7f8e6cba9700) from PID 0; stack trace: ***
[2m[36m(pid=5031)[0m     @     0x7f8e6c782390 (unknown)
[2m[36m(pid=5031)[0m     @     0x7f5f6c71ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5131)[0m     @     0x7fc96a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5131)[0m     @     0x7fc969821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5131)[0m     @     0x7fc96981f388 at::native::copy_impl()
[2m[36m(pid=5131)[0m     @     0x7fc9698215a4 at::native::copy_()
[2m[36m(pid=5018)[0m     @     0x7f26c0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5018)[0m     @     0x7f26c0bc8388 at::native::copy_impl()
[2m[36m(pid=5018)[0m     @     0x7f26c0bca5a4 at::native::copy_()
[2m[36m(pid=5018)[0m     @     0x7f26c12b54f5 at::Tensor::copy_()
[2m[36m(pid=5018)[0m     @     0x7f26c37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5101)[0m     @     0x7f87aa5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5101)[0m     @     0x7f87aa5f8388 at::native::copy_impl()
[2m[36m(pid=5101)[0m     @     0x7f87aa5fa5a4 at::native::copy_()
[2m[36m(pid=5011)[0m     @     0x7f3a24ede388 at::native::copy_impl()
[2m[36m(pid=5011)[0m     @     0x7f3a24ee05a4 at::native::copy_()
[2m[36m(pid=5011)[0m     @     0x7f3a255cb4f5 at::Tensor::copy_()
[2m[36m(pid=5011)[0m     @     0x7f3a27a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5071)[0m     @     0x7edf2533f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5071)[0m     @     0x7edf2533fad3 at::TensorIterator::for_each()
[2m[36m(pid=5071)[0m     @     0x7edf2533fd91 at::TensorIterator::for_each()
[2m[36m(pid=5065)[0m     @     0x7f425320f5a4 at::native::copy_()
[2m[36m(pid=5065)[0m     @     0x7f42538fa4f5 at::Tensor::copy_()
[2m[36m(pid=5065)[0m     @     0x7f4255dcd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5065)[0m     @     0x7f42538fa4f5 at::Tensor::copy_()
[2m[36m(pid=5091)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5091)[0m *** SIGSEGV (@0x0) received by PID 5091 (TID 0x7fcba622b700) from PID 0; stack trace: ***
[2m[36m(pid=5091)[0m     @     0x7fcba5e04390 (unknown)
[2m[36m(pid=5017)[0m     @     0x7f7a48cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5017)[0m     @     0x7f7a48cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5038)[0m     @     0x7f53eff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5038)[0m     @     0x7f53eff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=5002)[0m     @     0x7f0f5cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5002)[0m     @     0x7f0f5cede388 at::native::copy_impl()
[2m[36m(pid=5002)[0m     @     0x7f0f5cee05a4 at::native::copy_()
[2m[36m(pid=5022)[0m     @     0x7fb11dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5022)[0m     @     0x7fb11dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5024)[0m     @     0x7efe2d37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5024)[0m     @     0x7efe2d37fad3 at::TensorIterator::for_each()
[2m[36m(pid=5105)[0m *** Aborted at 1604571441 (unix time) try "date -d @1604571441" if you are using GNU date ***
[2m[36m(pid=5105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5105)[0m *** SIGSEGV (@0x0) received by PID 5105 (TID 0x7f6ece288700) from PID 0; stack trace: ***
[2m[36m(pid=5105)[0m     @     0x7f6ecde61390 (unknown)
[2m[36m(pid=5105)[0m     @     0x7f3fcddf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5083)[0m PC: @                0x0 (unknown)
[2m[36m(pid=5083)[0m *** SIGSEGV (@0x0) received by PID 5083 (TID 0x7fd56a8a3700) from PID 0; stack trace: ***
[2m[36m(pid=5083)[0m     @     0x7fd56a47c390 (unknown)
[2m[36m(pid=5083)[0m     @     0x7fa66a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5083)[0m     @     0x7fa669a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5019)[0m     @     0x7f7ebcf1f390 (unknown)
[2m[36m(pid=5019)[0m     @     0x7f4fbcea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5019)[0m     @     0x7f4fbc5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5063)[0m     @     0x7f95be4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5063)[0m     @     0x7f95be4dead3 at::TensorIterator::for_each()
[2m[36m(pid=5063)[0m     @     0x7f95be4ded91 at::TensorIterator::for_each()
[2m[36m(pid=5063)[0m     @     0x7f95bedc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5063)[0m     @     0x7f95bede4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5014)[0m     @     0x7f94e73d6ad3 at::TensorIterator::for_each()
[2m[36m(pid=5014)[0m     @     0x7f94e73d6d91 at::TensorIterator::for_each()
[2m[36m(pid=5014)[0m     @     0x7f94e7cb9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5014)[0m     @     0x7f94e7cdcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5043)[0m     @     0x7f51529578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5043)[0m     @     0x7f5152957ad3 at::TensorIterator::for_each()
[2m[36m(pid=5043)[0m     @     0x7f5152957d91 at::TensorIterator::for_each()
[2m[36m(pid=5043)[0m     @     0x7f515323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5072)[0m     @     0x7ed9cae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5072)[0m     @     0x7ed9cae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=5072)[0m     @     0x7ed9cae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=5004)[0m     @     0x7fc0ef404ad3 at::TensorIterator::for_each()
[2m[36m(pid=5004)[0m     @     0x7fc0ef404d91 at::TensorIterator::for_each()
[2m[36m(pid=5004)[0m     @     0x7fc0efce7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5004)[0m     @     0x7fc0efd0ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5004)[0m     @     0x7fc0ef1aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5004)[0m     @     0x7fc0ef1aa388 at::native::copy_impl()
[2m[36m(pid=5013)[0m     @     0x7f67e57568f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5013)[0m     @     0x7f67e5756ad3 at::TensorIterator::for_each()
[2m[36m(pid=5013)[0m     @     0x7f67e5756d91 at::TensorIterator::for_each()
[2m[36m(pid=5013)[0m     @     0x7f67e6039b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5005)[0m     @     0x7f1f88f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5005)[0m     @     0x7f1f88f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5005)[0m     @     0x7f1f88f27d91 at::TensorIterator::for_each()
[2m[36m(pid=5005)[0m     @     0x7f1f8980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5068)[0m     @     0x7f945f02ead3 at::TensorIterator::for_each()
[2m[36m(pid=5068)[0m     @     0x7f945f02ed91 at::TensorIterator::for_each()
[2m[36m(pid=5068)[0m     @     0x7f945f911b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5068)[0m     @     0x7f945f934c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5033)[0m     @     0x7f9eddbd2390 (unknown)
[2m[36m(pid=5033)[0m     @     0x7f6fddb7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5033)[0m     @     0x7f6fdd2a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5034)[0m     @     0x7f61702ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5034)[0m     @     0x7f61702ffad3 at::TensorIterator::for_each()
[2m[36m(pid=5034)[0m     @     0x7f61702ffd91 at::TensorIterator::for_each()
[2m[36m(pid=5034)[0m     @     0x7f6170be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5034)[0m     @     0x7f6170c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5040)[0m     @     0x7ecf2398cad3 at::TensorIterator::for_each()
[2m[36m(pid=5040)[0m     @     0x7ecf2398cd91 at::TensorIterator::for_each()
[2m[36m(pid=5040)[0m     @     0x7ecf2426fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5040)[0m     @     0x7ecf24292c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5040)[0m     @     0x7ecf23734a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5040)[0m     @     0x7ecf23732388 at::native::copy_impl()
[2m[36m(pid=5080)[0m     @     0x7f91004b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5080)[0m     @     0x7f91004b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=5080)[0m     @     0x7f91004b7d91 at::TensorIterator::for_each()
[2m[36m(pid=5080)[0m     @     0x7f9100d9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5010)[0m     @     0x7fa330e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5010)[0m     @     0x7fa330e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=5010)[0m     @     0x7fa330e22d91 at::TensorIterator::for_each()
[2m[36m(pid=5096)[0m     @     0x7ef6771b34f5 at::Tensor::copy_()
[2m[36m(pid=5096)[0m     @     0x7ef6796868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5096)[0m     @     0x7ef6771b34f5 at::Tensor::copy_()
[2m[36m(pid=5096)[0m     @     0x7ef67d25e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5096)[0m     @     0x5597323f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5096)[0m     @     0x55973234fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5096)[0m     @     0x5597323dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5096)[0m     @     0x5597323dba20 method_vectorcall
[2m[36m(pid=5096)[0m     @     0x55973234fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5096)[0m     @     0x5597323dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5096)[0m     @     0x5597323db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5096)[0m     @     0x559732350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5096)[0m     @     0x5597323dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5096)[0m     @     0x5597323db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5096)[0m     @     0x559732350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5096)[0m     @     0x5597323dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x7ecd5855e5a4 at::native::copy_()
[2m[36m(pid=5098)[0m     @     0x7ecd58c494f5 at::Tensor::copy_()
[2m[36m(pid=5098)[0m     @     0x7ecd5b11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5079)[0m     @     0x7fbd518d34f5 at::Tensor::copy_()
[2m[36m(pid=5079)[0m     @     0x7fbd53da68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5079)[0m     @     0x7fbd518d34f5 at::Tensor::copy_()
[2m[36m(pid=5079)[0m     @     0x7fbd5797e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5079)[0m     @     0x5584d5b5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5079)[0m     @     0x5584d5ab6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5079)[0m     @     0x5584d5b41baf _PyEval_EvalCodeWithName
[2m[36m(pid=5079)[0m     @     0x5584d5b42a20 method_vectorcall
[2m[36m(pid=5079)[0m     @     0x5584d5ab6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5079)[0m     @     0x5584d5b41baf _PyEval_EvalCodeWithName
[2m[36m(pid=5079)[0m     @     0x5584d5b42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5079)[0m     @     0x5584d5ab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5079)[0m     @     0x5584d5b41baf _PyEval_EvalCodeWithName
[2m[36m(pid=5079)[0m     @     0x5584d5b42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5079)[0m     @     0x5584d5ab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5079)[0m     @     0x5584d5b41baf _PyEval_EvalCodeWithName
[2m[36m(pid=5079)[0m     @     0x5584d5b42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5079)[0m     @     0x5584d5ab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5079)[0m     @     0x5584d5b41baf _PyEval_EvalCodeWithName
[2m[36m(pid=5079)[0m     @     0x5584d5b42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5079)[0m     @     0x5584d5ab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x7ef157c4a5a4 at::native::copy_()
[2m[36m(pid=5084)[0m     @     0x7ef1583354f5 at::Tensor::copy_()
[2m[36m(pid=5084)[0m     @     0x7ef15a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5093)[0m     @     0x7fa83fcf9388 at::native::copy_impl()
[2m[36m(pid=5093)[0m     @     0x7fa83fcfb5a4 at::native::copy_()
[2m[36m(pid=5093)[0m     @     0x7fa8403e64f5 at::Tensor::copy_()
[2m[36m(pid=5093)[0m     @     0x7fa8428b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5007)[0m     @     0x7f50c3e3cad3 at::TensorIterator::for_each()
[2m[36m(pid=5007)[0m     @     0x7f50c3e3cd91 at::TensorIterator::for_each()
[2m[36m(pid=5007)[0m     @     0x7f50c471fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5007)[0m     @     0x7f50c4742c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5007)[0m     @     0x7f50c3be4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5021)[0m     @     0x7ed26fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=5021)[0m     @     0x7ed270574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5021)[0m     @     0x7ed270597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5021)[0m     @     0x7ed26fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5021)[0m     @     0x7ed26fa37388 at::native::copy_impl()
[2m[36m(pid=5086)[0m     @     0x7ee681e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5086)[0m     @     0x7ee68154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5086)[0m     @     0x7ee6815528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5086)[0m     @     0x7ee681552ad3 at::TensorIterator::for_each()
[2m[36m(pid=5089)[0m     @     0x7f03443354f5 at::Tensor::copy_()
[2m[36m(pid=5089)[0m     @     0x7f03468088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5089)[0m     @     0x7f03443354f5 at::Tensor::copy_()
[2m[36m(pid=5089)[0m     @     0x7f034a3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5089)[0m     @     0x55d2b9cdefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5089)[0m     @     0x55d2b9c39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5089)[0m     @     0x55d2b9cc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5089)[0m     @     0x55d2b9cc5a20 method_vectorcall
[2m[36m(pid=5089)[0m     @     0x55d2b9c39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5089)[0m     @     0x55d2b9cc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5089)[0m     @     0x55d2b9cc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5089)[0m     @     0x55d2b9c3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5089)[0m     @     0x55d2b9cc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5089)[0m     @     0x55d2b9cc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5089)[0m     @     0x55d2b9c3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5089)[0m     @     0x55d2b9cc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5089)[0m     @     0x55d2b9cc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5143)[0m     @     0x7f4fa7bb04f5 at::Tensor::copy_()
[2m[36m(pid=5143)[0m     @     0x7f4faa0838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5143)[0m     @     0x7f4fa7bb04f5 at::Tensor::copy_()
[2m[36m(pid=5143)[0m     @     0x7f4fadc5b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5143)[0m     @     0x55d7a1bc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5143)[0m     @     0x55d7a1b21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5143)[0m     @     0x55d7a1bada20 method_vectorcall
[2m[36m(pid=5143)[0m     @     0x55d7a1b21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5143)[0m     @     0x55d7a1bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5143)[0m     @     0x55d7a1b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5143)[0m     @     0x55d7a1bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5143)[0m     @     0x55d7a1b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5143)[0m     @     0x55d7a1bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5114)[0m     @     0x7f799a0ac8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5114)[0m     @     0x7f799a0acad3 at::TensorIterator::for_each()
[2m[36m(pid=5126)[0m     @     0x7fa0fe42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5126)[0m     @     0x7fa0fe42aad3 at::TensorIterator::for_each()
[2m[36m(pid=5126)[0m     @     0x7fa0fe42ad91 at::TensorIterator::for_each()
[2m[36m(pid=5126)[0m     @     0x7fa0fed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5126)[0m     @     0x7fa0fed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5120)[0m     @     0x7f0688fef5a4 at::native::copy_()
[2m[36m(pid=5120)[0m     @     0x7f06896da4f5 at::Tensor::copy_()
[2m[36m(pid=5120)[0m     @     0x7f068bbad8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5120)[0m     @     0x7f06896da4f5 at::Tensor::copy_()
[2m[36m(pid=5112)[0m     @     0x7f88e0d8179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5112)[0m     @     0x55c37c568fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5112)[0m     @     0x55c37c4c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5112)[0m     @     0x55c37c54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5112)[0m     @     0x55c37c54fa20 method_vectorcall
[2m[36m(pid=5112)[0m     @     0x55c37c4c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5112)[0m     @     0x55c37c54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5112)[0m     @     0x55c37c54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5112)[0m     @     0x55c37c4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5112)[0m     @     0x55c37c54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5112)[0m     @     0x55c37c54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5112)[0m     @     0x55c37c4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5112)[0m     @     0x55c37c54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5112)[0m     @     0x55c37c54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5112)[0m     @     0x55c37c4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5112)[0m     @     0x55c37c54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5112)[0m     @     0x55c37c54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5112)[0m     @     0x55c37c4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x7f262983b5a4 at::native::copy_()
[2m[36m(pid=5092)[0m     @     0x7f2629f264f5 at::Tensor::copy_()
[2m[36m(pid=5092)[0m     @     0x7f262c3f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5095)[0m     @     0x7f2ad237c4f5 at::Tensor::copy_()
[2m[36m(pid=5095)[0m     @     0x7f2ad842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5095)[0m     @     0x5571b0beffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5095)[0m     @     0x5571b0b4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5095)[0m     @     0x5571b0bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5095)[0m     @     0x5571b0bd6a20 method_vectorcall
[2m[36m(pid=5095)[0m     @     0x5571b0b4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5095)[0m     @     0x5571b0bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5095)[0m     @     0x5571b0bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5095)[0m     @     0x5571b0b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5095)[0m     @     0x5571b0bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5095)[0m     @     0x5571b0bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5095)[0m     @     0x5571b0b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5095)[0m     @     0x5571b0bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5095)[0m     @     0x5571b0bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5095)[0m     @     0x5571b0b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5095)[0m     @     0x5571b0bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5095)[0m     @     0x5571b0bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5095)[0m     @     0x5571b0b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x7fbf4de7a4f5 at::Tensor::copy_()
[2m[36m(pid=5108)[0m     @     0x7fbf5034d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5108)[0m     @     0x7fbf4de7a4f5 at::Tensor::copy_()
[2m[36m(pid=5108)[0m     @     0x7fbf53f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5108)[0m     @     0x5589d86fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5108)[0m     @     0x5589d8659b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x5589d86e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5108)[0m     @     0x5589d86e5a20 method_vectorcall
[2m[36m(pid=5108)[0m     @     0x5589d8659bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x5589d86e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5108)[0m     @     0x5589d86e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5108)[0m     @     0x5589d865a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x5589d86e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5108)[0m     @     0x5589d86e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5108)[0m     @     0x5589d865a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x5589d86e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5108)[0m     @     0x5589d86e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5108)[0m     @     0x5589d865a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5108)[0m     @     0x5589d86e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5108)[0m     @     0x5589d86e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5108)[0m     @     0x5589d865a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x7f6e266924f5 at::Tensor::copy_()
[2m[36m(pid=5135)[0m     @     0x7f6e28b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5135)[0m     @     0x7f6e266924f5 at::Tensor::copy_()
[2m[36m(pid=5135)[0m     @     0x7f6e2c73d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5135)[0m     @     0x5619d353ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5135)[0m     @     0x5619d349ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x5619d3525baf _PyEval_EvalCodeWithName
[2m[36m(pid=5135)[0m     @     0x5619d3526a20 method_vectorcall
[2m[36m(pid=5135)[0m     @     0x5619d349abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x5619d3525baf _PyEval_EvalCodeWithName
[2m[36m(pid=5135)[0m     @     0x5619d3526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5135)[0m     @     0x5619d349b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x5619d3525baf _PyEval_EvalCodeWithName
[2m[36m(pid=5135)[0m     @     0x5619d3526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5135)[0m     @     0x5619d349b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x5619d3525baf _PyEval_EvalCodeWithName
[2m[36m(pid=5135)[0m     @     0x5619d3526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5135)[0m     @     0x5619d349b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5135)[0m     @     0x5619d3525baf _PyEval_EvalCodeWithName
[2m[36m(pid=5135)[0m     @     0x5619d3526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5135)[0m     @     0x5619d349b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x7f3925ef75a4 at::native::copy_()
[2m[36m(pid=5087)[0m     @     0x7f39265e24f5 at::Tensor::copy_()
[2m[36m(pid=5087)[0m     @     0x7f3928ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5074)[0m     @     0x7f0ffaf388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5074)[0m     @     0x7f0ff8a654f5 at::Tensor::copy_()
[2m[36m(pid=5074)[0m     @     0x7f0ffeb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5074)[0m     @     0x5569f2ea1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5074)[0m     @     0x5569f2dfcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5074)[0m     @     0x5569f2e87baf _PyEval_EvalCodeWithName
[2m[36m(pid=5074)[0m     @     0x5569f2e88a20 method_vectorcall
[2m[36m(pid=5074)[0m     @     0x5569f2dfcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5074)[0m     @     0x5569f2e87baf _PyEval_EvalCodeWithName
[2m[36m(pid=5074)[0m     @     0x5569f2e88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5074)[0m     @     0x5569f2dfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5074)[0m     @     0x5569f2e87baf _PyEval_EvalCodeWithName
[2m[36m(pid=5074)[0m     @     0x5569f2e88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5074)[0m     @     0x5569f2dfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5074)[0m     @     0x5569f2e87baf _PyEval_EvalCodeWithName
[2m[36m(pid=5074)[0m     @     0x5569f2e88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5074)[0m     @     0x5569f2dfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5074)[0m     @     0x5569f2e87baf _PyEval_EvalCodeWithName
[2m[36m(pid=5074)[0m     @     0x5569f2e88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5074)[0m     @     0x5569f2dfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x7edfb7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=5123)[0m     @     0x7edfbdd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5123)[0m     @     0x557c54a28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5123)[0m     @     0x557c54983b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x557c54a0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5123)[0m     @     0x557c54a0fa20 method_vectorcall
[2m[36m(pid=5123)[0m     @     0x557c54983bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x557c54a0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5123)[0m     @     0x557c54a0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5123)[0m     @     0x557c54984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x557c54a0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5123)[0m     @     0x557c54a0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5123)[0m     @     0x557c54984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x557c54a0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5123)[0m     @     0x557c54a0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5123)[0m     @     0x557c54984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5123)[0m     @     0x557c54a0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5123)[0m     @     0x557c54a0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5123)[0m     @     0x557c54984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x7ee9e56105a4 at::native::copy_()
[2m[36m(pid=5026)[0m     @     0x7ee9e5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=5026)[0m     @     0x7ee9e81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5026)[0m     @     0x7ee9e5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=5103)[0m     @     0x7efa0b6f95a4 at::native::copy_()
[2m[36m(pid=5103)[0m     @     0x7efa0bde44f5 at::Tensor::copy_()
[2m[36m(pid=5103)[0m     @     0x7efa0e2b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5097)[0m     @     0x7fbd1f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5097)[0m     @     0x559f26091fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5097)[0m     @     0x559f25fecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5097)[0m     @     0x559f26077baf _PyEval_EvalCodeWithName
[2m[36m(pid=5097)[0m     @     0x559f26078a20 method_vectorcall
[2m[36m(pid=5097)[0m     @     0x559f25fecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5097)[0m     @     0x559f26077baf _PyEval_EvalCodeWithName
[2m[36m(pid=5097)[0m     @     0x559f26078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5097)[0m     @     0x559f25fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5097)[0m     @     0x559f26077baf _PyEval_EvalCodeWithName
[2m[36m(pid=5097)[0m     @     0x559f26078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5097)[0m     @     0x559f25fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5097)[0m     @     0x559f26077baf _PyEval_EvalCodeWithName
[2m[36m(pid=5097)[0m     @     0x559f26078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5097)[0m     @     0x559f25fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5097)[0m     @     0x559f26077baf _PyEval_EvalCodeWithName
[2m[36m(pid=5097)[0m     @     0x559f26078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5097)[0m     @     0x559f25fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x7faa8c23b4f5 at::Tensor::copy_()
[2m[36m(pid=5078)[0m     @     0x7faa8e70e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5078)[0m     @     0x7faa8c23b4f5 at::Tensor::copy_()
[2m[36m(pid=5078)[0m     @     0x7faa922e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5078)[0m     @     0x55f2e0c30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5078)[0m     @     0x55f2e0b8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x55f2e0c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=5078)[0m     @     0x55f2e0c17a20 method_vectorcall
[2m[36m(pid=5078)[0m     @     0x55f2e0b8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x55f2e0c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=5078)[0m     @     0x55f2e0c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5078)[0m     @     0x55f2e0b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x55f2e0c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=5078)[0m     @     0x55f2e0c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5078)[0m     @     0x55f2e0b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x55f2e0c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=5078)[0m     @     0x55f2e0c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5078)[0m     @     0x55f2e0b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5078)[0m     @     0x55f2e0c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=5078)[0m     @     0x55f2e0c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5078)[0m     @     0x55f2e0b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x7f8923ebe5a4 at::native::copy_()
[2m[36m(pid=5106)[0m     @     0x7f89245a94f5 at::Tensor::copy_()
[2m[36m(pid=5106)[0m     @     0x7f8926a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5023)[0m     @     0x7eed16dea4f5 at::Tensor::copy_()
[2m[36m(pid=5023)[0m     @     0x7eed192bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5023)[0m     @     0x7eed16dea4f5 at::Tensor::copy_()
[2m[36m(pid=5023)[0m     @     0x7eed1ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5023)[0m     @     0x55aaf2b31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5023)[0m     @     0x55aaf2a8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5023)[0m     @     0x55aaf2b17baf _PyEval_EvalCodeWithName
[2m[36m(pid=5023)[0m     @     0x55aaf2b18a20 method_vectorcall
[2m[36m(pid=5023)[0m     @     0x55aaf2a8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5023)[0m     @     0x55aaf2b17baf _PyEval_EvalCodeWithName
[2m[36m(pid=5023)[0m     @     0x55aaf2b18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5023)[0m     @     0x55aaf2a8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5023)[0m     @     0x55aaf2b17baf _PyEval_EvalCodeWithName
[2m[36m(pid=5023)[0m     @     0x55aaf2b18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5023)[0m     @     0x55aaf2a8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5023)[0m     @     0x55aaf2b17baf _PyEval_EvalCodeWithName
[2m[36m(pid=5023)[0m     @     0x55aaf2b18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5023)[0m     @     0x55aaf2a8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5023)[0m     @     0x55aaf2b17baf _PyEval_EvalCodeWithName
[2m[36m(pid=5023)[0m     @     0x55aaf2b18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5023)[0m     @     0x55aaf2a8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x7f6cc66a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5127)[0m     @     0x7f6cc41cf4f5 at::Tensor::copy_()
[2m[36m(pid=5127)[0m     @     0x7f6cca27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5127)[0m     @     0x55c183dccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5127)[0m     @     0x55c183d27b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x55c183db2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5127)[0m     @     0x55c183db3a20 method_vectorcall
[2m[36m(pid=5127)[0m     @     0x55c183d27bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x55c183db2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5127)[0m     @     0x55c183db3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5127)[0m     @     0x55c183d28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x55c183db2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5127)[0m     @     0x55c183db3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5127)[0m     @     0x55c183d28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x55c183db2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5127)[0m     @     0x55c183db3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5127)[0m     @     0x55c183d28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5127)[0m     @     0x55c183db2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5127)[0m     @     0x55c183db3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5127)[0m     @     0x55c183d28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x7efa612bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5029)[0m     @     0x7efa5edea4f5 at::Tensor::copy_()
[2m[36m(pid=5029)[0m     @     0x7efa64e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5029)[0m     @     0x55cb4c855fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5029)[0m     @     0x55cb4c7b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x55cb4c83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5029)[0m     @     0x55cb4c83ca20 method_vectorcall
[2m[36m(pid=5029)[0m     @     0x55cb4c7b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x55cb4c83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5029)[0m     @     0x55cb4c83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5029)[0m     @     0x55cb4c7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x55cb4c83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5029)[0m     @     0x55cb4c83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5029)[0m     @     0x55cb4c7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x55cb4c83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5029)[0m     @     0x55cb4c83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5029)[0m     @     0x55cb4c7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5029)[0m     @     0x55cb4c83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5029)[0m     @     0x55cb4c83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5029)[0m     @     0x55cb4c7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x7f15ce5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5073)[0m     @     0x7f15cc1244f5 at::Tensor::copy_()
[2m[36m(pid=5073)[0m     @     0x7f15d21cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5073)[0m     @     0x55de8431efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5073)[0m     @     0x55de84279b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x55de84304baf _PyEval_EvalCodeWithName
[2m[36m(pid=5073)[0m     @     0x55de84305a20 method_vectorcall
[2m[36m(pid=5073)[0m     @     0x55de84279bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x55de84304baf _PyEval_EvalCodeWithName
[2m[36m(pid=5073)[0m     @     0x55de84305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5073)[0m     @     0x55de8427a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x55de84304baf _PyEval_EvalCodeWithName
[2m[36m(pid=5073)[0m     @     0x55de84305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5073)[0m     @     0x55de8427a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x7f1aa65c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5015)[0m     @     0x7f1aa65c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=5036)[0m     @     0x7f14b07e3d91 at::TensorIterator::for_each()
[2m[36m(pid=5036)[0m     @     0x7f14b10c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5036)[0m     @     0x7f14b10e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5036)[0m     @     0x7f14b058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5036)[0m     @     0x7f14b0589388 at::native::copy_impl()
[2m[36m(pid=5107)[0m     @     0x7fb43d2a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=5107)[0m     @     0x7fb43d2a8d91 at::TensorIterator::for_each()
[2m[36m(pid=5107)[0m     @     0x7fb43db8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5107)[0m     @     0x7fb43dbaec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5115)[0m     @     0x7f859c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5115)[0m     @     0x7f859a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=5115)[0m     @     0x7f85a016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5115)[0m     @     0x55ae1d8b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5115)[0m     @     0x55ae1d80eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5115)[0m     @     0x55ae1d899baf _PyEval_EvalCodeWithName
[2m[36m(pid=5115)[0m     @     0x55ae1d89aa20 method_vectorcall
[2m[36m(pid=5115)[0m     @     0x55ae1d80ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5115)[0m     @     0x55ae1d899baf _PyEval_EvalCodeWithName
[2m[36m(pid=5115)[0m     @     0x55ae1d89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5115)[0m     @     0x55ae1d80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5115)[0m     @     0x55ae1d899baf _PyEval_EvalCodeWithName
[2m[36m(pid=5115)[0m     @     0x55ae1d89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5115)[0m     @     0x55ae1d80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5115)[0m     @     0x55ae1d899baf _PyEval_EvalCodeWithName
[2m[36m(pid=5115)[0m     @     0x55ae1d89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5115)[0m     @     0x55ae1d80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5115)[0m     @     0x55ae1d899baf _PyEval_EvalCodeWithName
[2m[36m(pid=5115)[0m     @     0x55ae1d89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5115)[0m     @     0x55ae1d80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x7f1d0d810b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5003)[0m     @     0x7f1d0d833c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5003)[0m     @     0x7f1d0ccd5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5003)[0m     @     0x7f1d0ccd3388 at::native::copy_impl()
[2m[36m(pid=5003)[0m     @     0x7f1d0ccd55a4 at::native::copy_()
[2m[36m(pid=5088)[0m     @     0x7f9d635e44f5 at::Tensor::copy_()
[2m[36m(pid=5088)[0m     @     0x7f9d6968f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5088)[0m     @     0x5643b33f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5088)[0m     @     0x5643b334eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5088)[0m     @     0x5643b33d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5088)[0m     @     0x5643b33daa20 method_vectorcall
[2m[36m(pid=5088)[0m     @     0x5643b334ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5088)[0m     @     0x5643b33d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5088)[0m     @     0x5643b33da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5088)[0m     @     0x5643b334f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5088)[0m     @     0x5643b33d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5088)[0m     @     0x5643b33da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5088)[0m     @     0x5643b334f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5088)[0m     @     0x5643b33d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5088)[0m     @     0x5643b33da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5088)[0m     @     0x5643b334f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5088)[0m     @     0x5643b33d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5088)[0m     @     0x5643b33da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5088)[0m     @     0x5643b334f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x7f295e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5077)[0m     @     0x7f295c3e64f5 at::Tensor::copy_()
[2m[36m(pid=5077)[0m     @     0x7f296249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5077)[0m     @     0x5593d0e84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5077)[0m     @     0x5593d0ddfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x5593d0e6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=5077)[0m     @     0x5593d0e6ba20 method_vectorcall
[2m[36m(pid=5077)[0m     @     0x5593d0ddfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x5593d0e6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=5077)[0m     @     0x5593d0e6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5077)[0m     @     0x5593d0de0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x5593d0e6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=5077)[0m     @     0x5593d0e6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5077)[0m     @     0x5593d0de0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x5593d0e6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=5077)[0m     @     0x5593d0e6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5077)[0m     @     0x5593d0de0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5077)[0m     @     0x5593d0e6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=5077)[0m     @     0x5593d0e6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5077)[0m     @     0x5593d0de0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x7eeb2c64c4f5 at::Tensor::copy_()
[2m[36m(pid=5136)[0m     @     0x7eeb2eb1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5136)[0m     @     0x7eeb2c64c4f5 at::Tensor::copy_()
[2m[36m(pid=5136)[0m     @     0x7eeb326f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5136)[0m     @     0x55766dde6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5136)[0m     @     0x55766dd41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766ddccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5136)[0m     @     0x55766ddcda20 method_vectorcall
[2m[36m(pid=5136)[0m     @     0x55766dd41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766ddccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5136)[0m     @     0x55766ddcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5136)[0m     @     0x55766dd42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766ddccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5136)[0m     @     0x55766ddcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5008)[0m     @     0x7ef247882b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5008)[0m     @     0x7ef2478a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5008)[0m     @     0x7ef246d47a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5008)[0m     @     0x7ef246d45388 at::native::copy_impl()
[2m[36m(pid=5085)[0m     @     0x7f8416a944f5 at::Tensor::copy_()
[2m[36m(pid=5085)[0m     @     0x7f841cb3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5085)[0m     @     0x560a4fc93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5085)[0m     @     0x560a4fbeeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5085)[0m     @     0x560a4fc79baf _PyEval_EvalCodeWithName
[2m[36m(pid=5085)[0m     @     0x560a4fc7aa20 method_vectorcall
[2m[36m(pid=5085)[0m     @     0x560a4fbeebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5085)[0m     @     0x560a4fc79baf _PyEval_EvalCodeWithName
[2m[36m(pid=5085)[0m     @     0x560a4fc7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5085)[0m     @     0x560a4fbef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5085)[0m     @     0x560a4fc79baf _PyEval_EvalCodeWithName
[2m[36m(pid=5085)[0m     @     0x560a4fc7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5085)[0m     @     0x560a4fbef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5085)[0m     @     0x560a4fc79baf _PyEval_EvalCodeWithName
[2m[36m(pid=5085)[0m     @     0x560a4fc7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5085)[0m     @     0x560a4fbef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5085)[0m     @     0x560a4fc79baf _PyEval_EvalCodeWithName
[2m[36m(pid=5085)[0m     @     0x560a4fc7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5085)[0m     @     0x560a4fbef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x7ee7be42ad91 at::TensorIterator::for_each()
[2m[36m(pid=5006)[0m     @     0x7ee7bed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5006)[0m     @     0x7ee7bed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5006)[0m     @     0x7ee7be1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5006)[0m     @     0x7ee7be1d0388 at::native::copy_impl()
[2m[36m(pid=5082)[0m     @     0x7f3a778efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5082)[0m     @     0x7f3a77912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5082)[0m     @     0x7f3a76db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5082)[0m     @     0x7f3a76db2388 at::native::copy_impl()
[2m[36m(pid=5069)[0m     @     0x7f17334f25a4 at::native::copy_()
[2m[36m(pid=5069)[0m     @     0x7f1733bdd4f5 at::Tensor::copy_()
[2m[36m(pid=5069)[0m     @     0x7f17360b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5081)[0m     @     0x7f23b65948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5028)[0m     @     0x7ee584f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5028)[0m     @     0x7ee584f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5028)[0m     @     0x7ee584f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5067)[0m     @     0x7f60e2ed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5067)[0m     @     0x7f60e2ed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=5009)[0m     @     0x7f8d61c27d91 at::TensorIterator::for_each()
[2m[36m(pid=5009)[0m     @     0x7f8d6250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5009)[0m     @     0x7f8d6252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5009)[0m     @     0x7f8d619cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5076)[0m     @     0x7ef946c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5076)[0m     @     0x7ef9463407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5076)[0m     @     0x7ef9463438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5075)[0m     @     0x7f35d8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5075)[0m     @     0x7f35d8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5075)[0m     @     0x7f35d8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=5090)[0m     @     0x7f3df6c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5090)[0m     @     0x7f3df63407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5090)[0m     @     0x7f3df63438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5090)[0m     @     0x7f3df6343ad3 at::TensorIterator::for_each()
[2m[36m(pid=5031)[0m     @     0x7f5f6be4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5031)[0m     @     0x7f5f6be4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5131)[0m     @     0x7fc969f0c4f5 at::Tensor::copy_()
[2m[36m(pid=5131)[0m     @     0x7fc96c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5131)[0m     @     0x7fc969f0c4f5 at::Tensor::copy_()
[2m[36m(pid=5131)[0m     @     0x7fc96ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5131)[0m     @     0x55bc1a763fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5131)[0m     @     0x55bc1a6beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5131)[0m     @     0x55bc1a749baf _PyEval_EvalCodeWithName
[2m[36m(pid=5131)[0m     @     0x55bc1a74aa20 method_vectorcall
[2m[36m(pid=5131)[0m     @     0x55bc1a6bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5131)[0m     @     0x55bc1a749baf _PyEval_EvalCodeWithName
[2m[36m(pid=5131)[0m     @     0x55bc1a74a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5131)[0m     @     0x55bc1a6bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5131)[0m     @     0x55bc1a749baf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x7f26c12b54f5 at::Tensor::copy_()
[2m[36m(pid=5018)[0m     @     0x7f26c736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5018)[0m     @     0x55f280fc7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5018)[0m     @     0x55f280f22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5018)[0m     @     0x55f280fadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x55f280faea20 method_vectorcall
[2m[36m(pid=5018)[0m     @     0x55f280f22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5018)[0m     @     0x55f280fadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x55f280fae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5018)[0m     @     0x55f280f23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5018)[0m     @     0x55f280fadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x55f280fae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5018)[0m     @     0x55f280f23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5018)[0m     @     0x55f280fadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x55f280fae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5018)[0m     @     0x55f280f23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5018)[0m     @     0x55f280fadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5018)[0m     @     0x55f280fae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5018)[0m     @     0x55f280f23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x7f87aace54f5 at::Tensor::copy_()
[2m[36m(pid=5101)[0m     @     0x7f87ad1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5101)[0m     @     0x7f87aace54f5 at::Tensor::copy_()
[2m[36m(pid=5101)[0m     @     0x7f87b0d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5101)[0m     @     0x562b7028bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5101)[0m     @     0x562b701e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x562b70271baf _PyEval_EvalCodeWithName
[2m[36m(pid=5101)[0m     @     0x562b70272a20 method_vectorcall
[2m[36m(pid=5101)[0m     @     0x562b701e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x562b70271baf _PyEval_EvalCodeWithName
[2m[36m(pid=5101)[0m     @     0x562b70272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5101)[0m     @     0x562b701e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x562b70271baf _PyEval_EvalCodeWithName
[2m[36m(pid=5101)[0m     @     0x562b70272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5101)[0m     @     0x562b701e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x562b70271baf _PyEval_EvalCodeWithName
[2m[36m(pid=5101)[0m     @     0x562b70272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5101)[0m     @     0x562b701e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5101)[0m     @     0x562b70271baf _PyEval_EvalCodeWithName
[2m[36m(pid=5101)[0m     @     0x562b70272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5101)[0m     @     0x562b701e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x7f3a255cb4f5 at::Tensor::copy_()
[2m[36m(pid=5011)[0m     @     0x7f3a2b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5011)[0m     @     0x558dcafa6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5011)[0m     @     0x558dcaf01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x558dcaf8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5011)[0m     @     0x558dcaf8da20 method_vectorcall
[2m[36m(pid=5011)[0m     @     0x558dcaf01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x558dcaf8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5011)[0m     @     0x558dcaf8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5011)[0m     @     0x558dcaf02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x558dcaf8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5011)[0m     @     0x558dcaf8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5011)[0m     @     0x558dcaf02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x558dcaf8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5011)[0m     @     0x558dcaf8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5011)[0m     @     0x558dcaf02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5011)[0m     @     0x558dcaf8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5011)[0m     @     0x558dcaf8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5011)[0m     @     0x558dcaf02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x7edf25c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5071)[0m     @     0x7edf25c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5071)[0m     @     0x7edf250e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5071)[0m     @     0x7edf250e5388 at::native::copy_impl()
[2m[36m(pid=5071)[0m     @     0x7edf250e75a4 at::native::copy_()
[2m[36m(pid=5065)[0m     @     0x7f42599a579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5065)[0m     @     0x558a92d39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5065)[0m     @     0x558a92c94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5065)[0m     @     0x558a92d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5065)[0m     @     0x558a92d20a20 method_vectorcall
[2m[36m(pid=5065)[0m     @     0x558a92c94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5065)[0m     @     0x558a92d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5065)[0m     @     0x558a92d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5065)[0m     @     0x558a92c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5065)[0m     @     0x558a92d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5065)[0m     @     0x558a92d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5065)[0m     @     0x558a92c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5065)[0m     @     0x558a92d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5065)[0m     @     0x558a92d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5065)[0m     @     0x558a92c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5065)[0m     @     0x558a92d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5065)[0m     @     0x558a92d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5065)[0m     @     0x558a92c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x7f9ca5da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=5091)[0m     @     0x7f9ca54cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5091)[0m     @     0x7f9ca54d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5091)[0m     @     0x7f9ca54d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5017)[0m     @     0x7f7a48cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=5017)[0m     @     0x7f7a495b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5017)[0m     @     0x7f7a495d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5017)[0m     @     0x7f7a48a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5017)[0m     @     0x7f7a48a78388 at::native::copy_impl()
[2m[36m(pid=5038)[0m     @     0x7f53eff53d91 at::TensorIterator::for_each()
[2m[36m(pid=5038)[0m     @     0x7f53f0836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5038)[0m     @     0x7f53f0859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5038)[0m     @     0x7f53efcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5038)[0m     @     0x7f53efcf9388 at::native::copy_impl()
[2m[36m(pid=5038)[0m     @     0x7f53efcfb5a4 at::native::copy_()
[2m[36m(pid=5002)[0m     @     0x7f0f5d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=5002)[0m     @     0x7f0f5fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5002)[0m     @     0x7f0f5d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=5002)[0m     @     0x7f0f6367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5002)[0m     @     0x56149c151fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5002)[0m     @     0x56149c0acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5002)[0m     @     0x56149c137baf _PyEval_EvalCodeWithName
[2m[36m(pid=5002)[0m     @     0x56149c138a20 method_vectorcall
[2m[36m(pid=5002)[0m     @     0x56149c0acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5002)[0m     @     0x56149c137baf _PyEval_EvalCodeWithName
[2m[36m(pid=5002)[0m     @     0x56149c138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5002)[0m     @     0x56149c0ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5002)[0m     @     0x56149c137baf _PyEval_EvalCodeWithName
[2m[36m(pid=5002)[0m     @     0x56149c138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5002)[0m     @     0x56149c0ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5002)[0m     @     0x56149c137baf _PyEval_EvalCodeWithName
[2m[36m(pid=5002)[0m     @     0x56149c138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5002)[0m     @     0x56149c0ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5002)[0m     @     0x56149c137baf _PyEval_EvalCodeWithName
[2m[36m(pid=5002)[0m     @     0x56149c138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5002)[0m     @     0x56149c0ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x7fb11dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=5022)[0m     @     0x7fb11e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5022)[0m     @     0x7fb11e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5022)[0m     @     0x7fb11d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5022)[0m     @     0x7fb11d9cd388 at::native::copy_impl()
[2m[36m(pid=5022)[0m     @     0x7fb11d9cf5a4 at::native::copy_()
[2m[36m(pid=5024)[0m     @     0x7efe2d37fd91 at::TensorIterator::for_each()
[2m[36m(pid=5024)[0m     @     0x7efe2dc62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5024)[0m     @     0x7efe2dc85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5024)[0m     @     0x7efe2d127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5024)[0m     @     0x7efe2d125388 at::native::copy_impl()
[2m[36m(pid=5024)[0m     @     0x7efe2d1275a4 at::native::copy_()
[2m[36m(pid=5105)[0m     @     0x7f3fcd5227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=5105)[0m     @     0x7f3fcd5258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5105)[0m     @     0x7f3fcd525ad3 at::TensorIterator::for_each()
[2m[36m(pid=5105)[0m     @     0x7f3fcd525d91 at::TensorIterator::for_each()
[2m[36m(pid=5105)[0m     @     0x7f3fcde08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5083)[0m     @     0x7fa669a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5083)[0m     @     0x7fa669a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=5083)[0m     @     0x7fa669a79d91 at::TensorIterator::for_each()
[2m[36m(pid=5083)[0m     @     0x7fa66a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5083)[0m     @     0x7fa66a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5083)[0m     @     0x7fa669821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5019)[0m     @     0x7f4fbc5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5019)[0m     @     0x7f4fbc5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=5063)[0m     @     0x7f95be286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5063)[0m     @     0x7f95be284388 at::native::copy_impl()
[2m[36m(pid=5063)[0m     @     0x7f95be2865a4 at::native::copy_()
[2m[36m(pid=5063)[0m     @     0x7f95be9714f5 at::Tensor::copy_()
[2m[36m(pid=5014)[0m     @     0x7f94e717ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5014)[0m     @     0x7f94e717c388 at::native::copy_impl()
[2m[36m(pid=5014)[0m     @     0x7f94e717e5a4 at::native::copy_()
[2m[36m(pid=5014)[0m     @     0x7f94e78694f5 at::Tensor::copy_()
[2m[36m(pid=5043)[0m     @     0x7f515325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5043)[0m     @     0x7f51526ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5043)[0m     @     0x7f51526fd388 at::native::copy_impl()
[2m[36m(pid=5043)[0m     @     0x7f51526ff5a4 at::native::copy_()
[2m[36m(pid=5072)[0m     @     0x7ed9cb762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5072)[0m     @     0x7ed9cb785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5072)[0m     @     0x7ed9cac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5072)[0m     @     0x7ed9cac25388 at::native::copy_impl()
[2m[36m(pid=5072)[0m     @     0x7ed9cac275a4 at::native::copy_()
[2m[36m(pid=5004)[0m     @     0x7fc0ef1ac5a4 at::native::copy_()
[2m[36m(pid=5004)[0m     @     0x7fc0ef8974f5 at::Tensor::copy_()
[2m[36m(pid=5004)[0m     @     0x7fc0f1d6a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5013)[0m     @     0x7f67e605cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5013)[0m     @     0x7f67e54fea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5013)[0m     @     0x7f67e54fc388 at::native::copy_impl()
[2m[36m(pid=5013)[0m     @     0x7f67e54fe5a4 at::native::copy_()
[2m[36m(pid=5005)[0m     @     0x7f1f8982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5005)[0m     @     0x7f1f88ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5005)[0m     @     0x7f1f88ccd388 at::native::copy_impl()
[2m[36m(pid=5005)[0m     @     0x7f1f88ccf5a4 at::native::copy_()
[2m[36m(pid=5068)[0m     @     0x7f945edd6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5068)[0m     @     0x7f945edd4388 at::native::copy_impl()
[2m[36m(pid=5068)[0m     @     0x7f945edd65a4 at::native::copy_()
[2m[36m(pid=5068)[0m     @     0x7f945f4c14f5 at::Tensor::copy_()
[2m[36m(pid=5033)[0m     @     0x7f6fdd2a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=5033)[0m     @     0x7f6fdd2a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=5033)[0m     @     0x7f6fdd2a8d91 at::TensorIterator::for_each()
[2m[36m(pid=5034)[0m     @     0x7f61700a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5034)[0m     @     0x7f61700a5388 at::native::copy_impl()
[2m[36m(pid=5034)[0m     @     0x7f61700a75a4 at::native::copy_()
[2m[36m(pid=5040)[0m     @     0x7ecf237345a4 at::native::copy_()
[2m[36m(pid=5040)[0m     @     0x7ecf23e1f4f5 at::Tensor::copy_()
[2m[36m(pid=5040)[0m     @     0x7ecf262f28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5080)[0m     @     0x7f9100dbdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5080)[0m     @     0x7f910025fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5080)[0m     @     0x7f910025d388 at::native::copy_impl()
[2m[36m(pid=5080)[0m     @     0x7f910025f5a4 at::native::copy_()
[2m[36m(pid=5010)[0m     @     0x7fa331705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5010)[0m     @     0x7fa331728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5010)[0m     @     0x7fa330bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5010)[0m     @     0x7fa330bc8388 at::native::copy_impl()
[2m[36m(pid=5010)[0m     @     0x7fa330bca5a4 at::native::copy_()
[2m[36m(pid=5096)[0m     @     0x5597323db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5096)[0m     @     0x559732350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5096)[0m     @     0x5597323dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5096)[0m     @     0x5597323db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5096)[0m     @     0x559732350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x7ecd58c494f5 at::Tensor::copy_()
[2m[36m(pid=5098)[0m     @     0x7ecd5ecf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5098)[0m     @     0x55764291cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5098)[0m     @     0x557642877b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x557642902baf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x557642903a20 method_vectorcall
[2m[36m(pid=5098)[0m     @     0x557642877bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x557642902baf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x557642903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5098)[0m     @     0x557642878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x557642902baf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x557642903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5098)[0m     @     0x557642878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x557642902baf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x557642903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5098)[0m     @     0x557642878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5098)[0m     @     0x557642902baf _PyEval_EvalCodeWithName
[2m[36m(pid=5098)[0m     @     0x557642903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5098)[0m     @     0x557642878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x7ef1583354f5 at::Tensor::copy_()
[2m[36m(pid=5084)[0m     @     0x7ef15e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5084)[0m     @     0x56100e2b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5084)[0m     @     0x56100e213b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x56100e29ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5084)[0m     @     0x56100e29fa20 method_vectorcall
[2m[36m(pid=5084)[0m     @     0x56100e213bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x56100e29ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5084)[0m     @     0x56100e29f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5084)[0m     @     0x56100e214689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x56100e29ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5084)[0m     @     0x56100e29f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5084)[0m     @     0x56100e214689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x56100e29ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5084)[0m     @     0x56100e29f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5084)[0m     @     0x56100e214689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5084)[0m     @     0x56100e29ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5084)[0m     @     0x56100e29f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5084)[0m     @     0x56100e214689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x7fa8403e64f5 at::Tensor::copy_()
[2m[36m(pid=5093)[0m     @     0x7fa84649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5093)[0m     @     0x55cd7b60cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5093)[0m     @     0x55cd7b567b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x55cd7b5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5093)[0m     @     0x55cd7b5f3a20 method_vectorcall
[2m[36m(pid=5093)[0m     @     0x55cd7b567bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x55cd7b5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5093)[0m     @     0x55cd7b5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5093)[0m     @     0x55cd7b568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x55cd7b5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5093)[0m     @     0x55cd7b5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5093)[0m     @     0x55cd7b568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x55cd7b5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5093)[0m     @     0x55cd7b5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5093)[0m     @     0x55cd7b568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5093)[0m     @     0x55cd7b5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5093)[0m     @     0x55cd7b5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5093)[0m     @     0x55cd7b568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x7f50c3be2388 at::native::copy_impl()
[2m[36m(pid=5007)[0m     @     0x7f50c3be45a4 at::native::copy_()
[2m[36m(pid=5007)[0m     @     0x7f50c42cf4f5 at::Tensor::copy_()
[2m[36m(pid=5007)[0m     @     0x7f50c67a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5021)[0m     @     0x7ed26fa395a4 at::native::copy_()
[2m[36m(pid=5021)[0m     @     0x7ed2701244f5 at::Tensor::copy_()
[2m[36m(pid=5021)[0m     @     0x7ed2725f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5021)[0m     @     0x7ed2701244f5 at::Tensor::copy_()
[2m[36m(pid=5086)[0m     @     0x7ee681552d91 at::TensorIterator::for_each()
[2m[36m(pid=5086)[0m     @     0x7ee681e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5086)[0m     @     0x7ee681e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5086)[0m     @     0x7ee6812faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5086)[0m     @     0x7ee6812f8388 at::native::copy_impl()
[2m[36m(pid=5086)[0m     @     0x7ee6812fa5a4 at::native::copy_()
[2m[36m(pid=5089)[0m     @     0x55d2b9c3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5089)[0m     @     0x55d2b9cc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5089)[0m     @     0x55d2b9cc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5089)[0m     @     0x55d2b9c3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5143)[0m     @     0x55d7a1bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5143)[0m     @     0x55d7a1bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5143)[0m     @     0x55d7a1b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x7f799a0acd91 at::TensorIterator::for_each()
[2m[36m(pid=5114)[0m     @     0x7f799a98fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5114)[0m     @     0x7f799a9b2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5114)[0m     @     0x7f7999e54a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5114)[0m     @     0x7f7999e52388 at::native::copy_impl()
[2m[36m(pid=5126)[0m     @     0x7fa0fe1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5126)[0m     @     0x7fa0fe1d0388 at::native::copy_impl()
[2m[36m(pid=5126)[0m     @     0x7fa0fe1d25a4 at::native::copy_()
[2m[36m(pid=5126)[0m     @     0x7fa0fe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=5126)[0m     @     0x7fa100d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5120)[0m     @     0x7f068f78579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5120)[0m     @     0x556119db1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5120)[0m     @     0x556119d0cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5120)[0m     @     0x556119d97baf _PyEval_EvalCodeWithName
[2m[36m(pid=5120)[0m     @     0x556119d98a20 method_vectorcall
[2m[36m(pid=5120)[0m     @     0x556119d0cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5120)[0m     @     0x556119d97baf _PyEval_EvalCodeWithName
[2m[36m(pid=5120)[0m     @     0x556119d98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5120)[0m     @     0x556119d0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5120)[0m     @     0x556119d97baf _PyEval_EvalCodeWithName
[2m[36m(pid=5120)[0m     @     0x556119d98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5120)[0m     @     0x556119d0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5120)[0m     @     0x556119d97baf _PyEval_EvalCodeWithName
[2m[36m(pid=5120)[0m     @     0x556119d98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5120)[0m     @     0x556119d0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5120)[0m     @     0x556119d97baf _PyEval_EvalCodeWithName
[2m[36m(pid=5120)[0m     @     0x556119d98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5120)[0m     @     0x556119d0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x7f2629f264f5 at::Tensor::copy_()
[2m[36m(pid=5092)[0m     @     0x7f262ffd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5092)[0m     @     0x5600f9feffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5092)[0m     @     0x5600f9f4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x5600f9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5092)[0m     @     0x5600f9fd6a20 method_vectorcall
[2m[36m(pid=5092)[0m     @     0x5600f9f4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x5600f9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5092)[0m     @     0x5600f9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5092)[0m     @     0x5600f9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x5600f9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5092)[0m     @     0x5600f9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5092)[0m     @     0x5600f9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x5600f9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5092)[0m     @     0x5600f9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5092)[0m     @     0x5600f9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5092)[0m     @     0x5600f9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=5092)[0m     @     0x5600f9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5092)[0m     @     0x5600f9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x7f39265e24f5 at::Tensor::copy_()
[2m[36m(pid=5087)[0m     @     0x7f392c68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5087)[0m     @     0x5609098c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5087)[0m     @     0x56090981bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x5609098a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5087)[0m     @     0x5609098a7a20 method_vectorcall
[2m[36m(pid=5087)[0m     @     0x56090981bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x5609098a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5087)[0m     @     0x5609098a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5087)[0m     @     0x56090981c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x5609098a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5087)[0m     @     0x5609098a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5087)[0m     @     0x56090981c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x5609098a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5087)[0m     @     0x5609098a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5087)[0m     @     0x56090981c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5087)[0m     @     0x5609098a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5087)[0m     @     0x5609098a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5087)[0m     @     0x56090981c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x7ee9ebda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5026)[0m     @     0x55b5dc327fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5026)[0m     @     0x55b5dc282b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x55b5dc30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5026)[0m     @     0x55b5dc30ea20 method_vectorcall
[2m[36m(pid=5026)[0m     @     0x55b5dc282bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x55b5dc30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5026)[0m     @     0x55b5dc30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5026)[0m     @     0x55b5dc283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x55b5dc30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5026)[0m     @     0x55b5dc30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5026)[0m     @     0x55b5dc283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x55b5dc30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5026)[0m     @     0x55b5dc30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5026)[0m     @     0x55b5dc283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5026)[0m     @     0x55b5dc30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5026)[0m     @     0x55b5dc30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5026)[0m     @     0x55b5dc283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x7efa0bde44f5 at::Tensor::copy_()
[2m[36m(pid=5103)[0m     @     0x7efa11e8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5103)[0m     @     0x56525467afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5103)[0m     @     0x5652545d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x565254660baf _PyEval_EvalCodeWithName
[2m[36m(pid=5103)[0m     @     0x565254661a20 method_vectorcall
[2m[36m(pid=5103)[0m     @     0x5652545d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x565254660baf _PyEval_EvalCodeWithName
[2m[36m(pid=5103)[0m     @     0x565254661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5103)[0m     @     0x5652545d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x565254660baf _PyEval_EvalCodeWithName
[2m[36m(pid=5103)[0m     @     0x565254661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5103)[0m     @     0x5652545d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x565254660baf _PyEval_EvalCodeWithName
[2m[36m(pid=5103)[0m     @     0x565254661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5103)[0m     @     0x5652545d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5103)[0m     @     0x565254660baf _PyEval_EvalCodeWithName
[2m[36m(pid=5103)[0m     @     0x565254661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5103)[0m     @     0x5652545d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x7f89245a94f5 at::Tensor::copy_()
[2m[36m(pid=5106)[0m     @     0x7f892a65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5106)[0m     @     0x5640fc3eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5106)[0m     @     0x5640fc349b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x5640fc3d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5106)[0m     @     0x5640fc3d5a20 method_vectorcall
[2m[36m(pid=5106)[0m     @     0x5640fc349bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x5640fc3d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5106)[0m     @     0x5640fc3d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5106)[0m     @     0x5640fc34a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x5640fc3d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5106)[0m     @     0x5640fc3d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5106)[0m     @     0x5640fc34a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x5640fc3d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5106)[0m     @     0x5640fc3d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5106)[0m     @     0x5640fc34a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5106)[0m     @     0x5640fc3d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5106)[0m     @     0x5640fc3d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5106)[0m     @     0x5640fc34a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x55de84304baf _PyEval_EvalCodeWithName
[2m[36m(pid=5073)[0m     @     0x55de84305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5073)[0m     @     0x55de8427a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5073)[0m     @     0x55de84304baf _PyEval_EvalCodeWithName
[2m[36m(pid=5073)[0m     @     0x55de84305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5073)[0m     @     0x55de8427a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x7f1aa65c1d91 at::TensorIterator::for_each()
[2m[36m(pid=5015)[0m     @     0x7f1aa6ea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5015)[0m     @     0x7f1aa6ec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5015)[0m     @     0x7f1aa6369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5015)[0m     @     0x7f1aa6367388 at::native::copy_impl()
[2m[36m(pid=5015)[0m     @     0x7f1aa63695a4 at::native::copy_()
[2m[36m(pid=5015)[0m     @     0x7f1aa6a544f5 at::Tensor::copy_()
[2m[36m(pid=5036)[0m     @     0x7f14b058b5a4 at::native::copy_()
[2m[36m(pid=5036)[0m     @     0x7f14b0c764f5 at::Tensor::copy_()
[2m[36m(pid=5036)[0m     @     0x7f14b31498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5036)[0m     @     0x7f14b0c764f5 at::Tensor::copy_()
[2m[36m(pid=5036)[0m     @     0x7f14b6d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5036)[0m     @     0x55889309ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5036)[0m     @     0x558892ffab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x7fb43d050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5107)[0m     @     0x7fb43d04e388 at::native::copy_impl()
[2m[36m(pid=5107)[0m     @     0x7fb43d0505a4 at::native::copy_()
[2m[36m(pid=5003)[0m     @     0x7f1d0d3c04f5 at::Tensor::copy_()
[2m[36m(pid=5003)[0m     @     0x7f1d0f8938de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5003)[0m     @     0x7f1d0d3c04f5 at::Tensor::copy_()
[2m[36m(pid=5003)[0m     @     0x7f1d3c58379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5003)[0m     @     0x5568acf8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5003)[0m     @     0x5568acee7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x5568acf72baf _PyEval_EvalCodeWithName
[2m[36m(pid=5003)[0m     @     0x5568acf73a20 method_vectorcall
[2m[36m(pid=5003)[0m     @     0x5568acee7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x5568acf72baf _PyEval_EvalCodeWithName
[2m[36m(pid=5003)[0m     @     0x5568acf73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5003)[0m     @     0x5568acee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x5568acf72baf _PyEval_EvalCodeWithName
[2m[36m(pid=5003)[0m     @     0x5568acf73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5003)[0m     @     0x5568acee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x5568acf72baf _PyEval_EvalCodeWithName
[2m[36m(pid=5003)[0m     @     0x5568acf73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5003)[0m     @     0x5568acee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5003)[0m     @     0x5568acf72baf _PyEval_EvalCodeWithName
[2m[36m(pid=5003)[0m     @     0x5568acf73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5003)[0m     @     0x5568acee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766dd42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766ddccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5136)[0m     @     0x55766ddcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5136)[0m     @     0x55766dd42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5136)[0m     @     0x55766ddccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5136)[0m     @     0x55766ddcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5136)[0m     @     0x55766dd42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x7ef246d475a4 at::native::copy_()
[2m[36m(pid=5008)[0m     @     0x7ef2474324f5 at::Tensor::copy_()
[2m[36m(pid=5008)[0m     @     0x7ef2499058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5008)[0m     @     0x7ef2474324f5 at::Tensor::copy_()
[2m[36m(pid=5008)[0m     @     0x7ef24d4dd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5008)[0m     @     0x564c44b86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5008)[0m     @     0x564c44ae1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x564c44b6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5008)[0m     @     0x564c44b6da20 method_vectorcall
[2m[36m(pid=5008)[0m     @     0x564c44ae1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x564c44b6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5008)[0m     @     0x564c44b6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5008)[0m     @     0x564c44ae2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x564c44b6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5008)[0m     @     0x564c44b6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5008)[0m     @     0x564c44ae2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x564c44b6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5008)[0m     @     0x564c44b6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5008)[0m     @     0x564c44ae2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5008)[0m     @     0x564c44b6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5008)[0m     @     0x564c44b6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5008)[0m     @     0x564c44ae2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x7ee7be1d25a4 at::native::copy_()
[2m[36m(pid=5006)[0m     @     0x7ee7be8bd4f5 at::Tensor::copy_()
[2m[36m(pid=5006)[0m     @     0x7ee7c0d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5082)[0m     @     0x7f3a76db45a4 at::native::copy_()
[2m[36m(pid=5082)[0m     @     0x7f3a7749f4f5 at::Tensor::copy_()
[2m[36m(pid=5082)[0m     @     0x7f3a799728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5082)[0m     @     0x7f3a7749f4f5 at::Tensor::copy_()
[2m[36m(pid=5082)[0m     @     0x7f3a7d54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5082)[0m     @     0x55cd82ebdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5082)[0m     @     0x55cd82e18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5082)[0m     @     0x55cd82ea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=5082)[0m     @     0x55cd82ea4a20 method_vectorcall
[2m[36m(pid=5082)[0m     @     0x55cd82e18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5082)[0m     @     0x55cd82ea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=5082)[0m     @     0x55cd82ea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5082)[0m     @     0x55cd82e19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5082)[0m     @     0x55cd82ea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=5082)[0m     @     0x55cd82ea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5082)[0m     @     0x55cd82e19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5082)[0m     @     0x55cd82ea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=5082)[0m     @     0x55cd82ea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5082)[0m     @     0x55cd82e19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5082)[0m     @     0x55cd82ea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=5082)[0m     @     0x55cd82ea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5082)[0m     @     0x55cd82e19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x7f1733bdd4f5 at::Tensor::copy_()
[2m[36m(pid=5069)[0m     @     0x7f1739c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5069)[0m     @     0x557d65dcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5069)[0m     @     0x557d65d26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x557d65db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=5069)[0m     @     0x557d65db2a20 method_vectorcall
[2m[36m(pid=5069)[0m     @     0x557d65d26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x557d65db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=5069)[0m     @     0x557d65db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5069)[0m     @     0x557d65d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x557d65db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=5069)[0m     @     0x557d65db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5069)[0m     @     0x557d65d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x557d65db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=5069)[0m     @     0x557d65db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5069)[0m     @     0x557d65d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5069)[0m     @     0x557d65db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=5069)[0m     @     0x557d65db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5069)[0m     @     0x557d65d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x7ee584f27d91 at::TensorIterator::for_each()
[2m[36m(pid=5028)[0m     @     0x7ee58580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5028)[0m     @     0x7ee58582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5028)[0m     @     0x7ee584ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5028)[0m     @     0x7ee584ccd388 at::native::copy_impl()
[2m[36m(pid=5028)[0m     @     0x7ee584ccf5a4 at::native::copy_()
[2m[36m(pid=5067)[0m     @     0x7f60e2ed7d91 at::TensorIterator::for_each()
[2m[36m(pid=5067)[0m     @     0x7f60e37bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5067)[0m     @     0x7f60e37ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5067)[0m     @     0x7f60e2c7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5067)[0m     @     0x7f60e2c7d388 at::native::copy_impl()
[2m[36m(pid=5067)[0m     @     0x7f60e2c7f5a4 at::native::copy_()
[2m[36m(pid=5009)[0m     @     0x7f8d619cd388 at::native::copy_impl()
[2m[36m(pid=5009)[0m     @     0x7f8d619cf5a4 at::native::copy_()
[2m[36m(pid=5009)[0m     @     0x7f8d620ba4f5 at::Tensor::copy_()
[2m[36m(pid=5009)[0m     @     0x7f8d6458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5009)[0m     @     0x7f8d620ba4f5 at::Tensor::copy_()
[2m[36m(pid=5076)[0m     @     0x7ef946343ad3 at::TensorIterator::for_each()
[2m[36m(pid=5076)[0m     @     0x7ef946343d91 at::TensorIterator::for_each()
[2m[36m(pid=5076)[0m     @     0x7ef946c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5076)[0m     @     0x7ef946c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5076)[0m     @     0x7ef9460eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5076)[0m     @     0x7ef9460e9388 at::native::copy_impl()
[2m[36m(pid=5075)[0m     @     0x7f35d8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=5075)[0m     @     0x7f35d980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5075)[0m     @     0x7f35d982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5075)[0m     @     0x7f35d8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5075)[0m     @     0x7f35d8ccd388 at::native::copy_impl()
[2m[36m(pid=5075)[0m     @     0x7f35d8ccf5a4 at::native::copy_()
[2m[36m(pid=5090)[0m     @     0x7f3df6343d91 at::TensorIterator::for_each()
[2m[36m(pid=5090)[0m     @     0x7f3df6c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5090)[0m     @     0x7f3df6c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5090)[0m     @     0x7f3df60eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5090)[0m     @     0x7f3df60e9388 at::native::copy_impl()
[2m[36m(pid=5090)[0m     @     0x7f3df60eb5a4 at::native::copy_()
[2m[36m(pid=5031)[0m     @     0x7f5f6be4dad3 at::TensorIterator::for_each()
[2m[36m(pid=5031)[0m     @     0x7f5f6be4dd91 at::TensorIterator::for_each()
[2m[36m(pid=5031)[0m     @     0x7f5f6c730b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5031)[0m     @     0x7f5f6c753c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5031)[0m     @     0x7f5f6bbf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5031)[0m     @     0x7f5f6bbf3388 at::native::copy_impl()
[2m[36m(pid=5131)[0m     @     0x55bc1a74a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5131)[0m     @     0x55bc1a6bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5131)[0m     @     0x55bc1a749baf _PyEval_EvalCodeWithName
[2m[36m(pid=5131)[0m     @     0x55bc1a74a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5131)[0m     @     0x55bc1a6bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5131)[0m     @     0x55bc1a749baf _PyEval_EvalCodeWithName
[2m[36m(pid=5131)[0m     @     0x55bc1a74a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5131)[0m     @     0x55bc1a6bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x7edf257d24f5 at::Tensor::copy_()
[2m[36m(pid=5071)[0m     @     0x7edf27ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5071)[0m     @     0x7edf257d24f5 at::Tensor::copy_()
[2m[36m(pid=5071)[0m     @     0x7edf2b87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5071)[0m     @     0x55b3735e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5071)[0m     @     0x55b37353fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x55b3735cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5071)[0m     @     0x55b3735cba20 method_vectorcall
[2m[36m(pid=5071)[0m     @     0x55b37353fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x55b3735cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5071)[0m     @     0x55b3735cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5071)[0m     @     0x55b373540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x55b3735cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5071)[0m     @     0x55b3735cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5071)[0m     @     0x55b373540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x55b3735cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5071)[0m     @     0x55b3735cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5071)[0m     @     0x55b373540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5071)[0m     @     0x55b3735cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=5071)[0m     @     0x55b3735cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5071)[0m     @     0x55b373540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x7f9ca54d2d91 at::TensorIterator::for_each()
[2m[36m(pid=5091)[0m     @     0x7f9ca5db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5091)[0m     @     0x7f9ca5dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5017)[0m     @     0x7f7a48a7a5a4 at::native::copy_()
[2m[36m(pid=5017)[0m     @     0x7f7a491654f5 at::Tensor::copy_()
[2m[36m(pid=5017)[0m     @     0x7f7a4b6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5038)[0m     @     0x7f53f03e64f5 at::Tensor::copy_()
[2m[36m(pid=5038)[0m     @     0x7f53f28b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5022)[0m     @     0x7fb11e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=5022)[0m     @     0x7fb12058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5022)[0m     @     0x7fb11e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=5022)[0m     @     0x7fb12416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5022)[0m     @     0x55a42948dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5022)[0m     @     0x55a4293e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x55a429473baf _PyEval_EvalCodeWithName
[2m[36m(pid=5022)[0m     @     0x55a429474a20 method_vectorcall
[2m[36m(pid=5022)[0m     @     0x55a4293e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x55a429473baf _PyEval_EvalCodeWithName
[2m[36m(pid=5022)[0m     @     0x55a429474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5022)[0m     @     0x55a4293e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x55a429473baf _PyEval_EvalCodeWithName
[2m[36m(pid=5022)[0m     @     0x55a429474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5022)[0m     @     0x55a4293e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x55a429473baf _PyEval_EvalCodeWithName
[2m[36m(pid=5022)[0m     @     0x55a429474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5022)[0m     @     0x55a4293e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5022)[0m     @     0x55a429473baf _PyEval_EvalCodeWithName
[2m[36m(pid=5022)[0m     @     0x55a429474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5022)[0m     @     0x55a4293e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x7efe2d8124f5 at::Tensor::copy_()
[2m[36m(pid=5024)[0m     @     0x7efe2fce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5024)[0m     @     0x7efe2d8124f5 at::Tensor::copy_()
[2m[36m(pid=5024)[0m     @     0x7efe338bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5024)[0m     @     0x564c18c2cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5105)[0m     @     0x7f3fcde2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5105)[0m     @     0x7f3fcd2cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5105)[0m     @     0x7f3fcd2cb388 at::native::copy_impl()
[2m[36m(pid=5105)[0m     @     0x7f3fcd2cd5a4 at::native::copy_()
[2m[36m(pid=5083)[0m     @     0x7fa66981f388 at::native::copy_impl()
[2m[36m(pid=5083)[0m     @     0x7fa6698215a4 at::native::copy_()
[2m[36m(pid=5083)[0m     @     0x7fa669f0c4f5 at::Tensor::copy_()
[2m[36m(pid=5019)[0m     @     0x7f4fbc5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=5019)[0m     @     0x7f4fbceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5019)[0m     @     0x7f4fbced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5063)[0m     @     0x7f95c0e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5063)[0m     @     0x7f95be9714f5 at::Tensor::copy_()
[2m[36m(pid=5063)[0m     @     0x7f95c4a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5063)[0m     @     0x564645cfefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5063)[0m     @     0x564645c59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5063)[0m     @     0x564645ce4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5063)[0m     @     0x564645ce5a20 method_vectorcall
[2m[36m(pid=5063)[0m     @     0x564645c59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5063)[0m     @     0x564645ce4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5063)[0m     @     0x564645ce5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5063)[0m     @     0x564645c5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5063)[0m     @     0x564645ce4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5063)[0m     @     0x564645ce5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5063)[0m     @     0x564645c5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5063)[0m     @     0x564645ce4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5063)[0m     @     0x564645ce5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5063)[0m     @     0x564645c5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5063)[0m     @     0x564645ce4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5063)[0m     @     0x564645ce5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5063)[0m     @     0x564645c5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x7f94e9d3c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5014)[0m     @     0x7f94e78694f5 at::Tensor::copy_()
[2m[36m(pid=5014)[0m     @     0x7f94ed91479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5014)[0m     @     0x5578b5c38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5014)[0m     @     0x5578b5b93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x5578b5c1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5014)[0m     @     0x5578b5c1fa20 method_vectorcall
[2m[36m(pid=5014)[0m     @     0x5578b5b93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x5578b5c1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5014)[0m     @     0x5578b5c1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5014)[0m     @     0x5578b5b94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x5578b5c1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5014)[0m     @     0x5578b5c1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5014)[0m     @     0x5578b5b94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x5578b5c1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5014)[0m     @     0x5578b5c1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5014)[0m     @     0x5578b5b94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5014)[0m     @     0x5578b5c1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5014)[0m     @     0x5578b5c1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5014)[0m     @     0x5578b5b94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x7f5152dea4f5 at::Tensor::copy_()
[2m[36m(pid=5043)[0m     @     0x7f51552bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5043)[0m     @     0x7f5152dea4f5 at::Tensor::copy_()
[2m[36m(pid=5043)[0m     @     0x7f5158e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5043)[0m     @     0x55e6f58c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5043)[0m     @     0x55e6f5824b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x55e6f58afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5043)[0m     @     0x55e6f58b0a20 method_vectorcall
[2m[36m(pid=5043)[0m     @     0x55e6f5824bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x55e6f58afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5043)[0m     @     0x55e6f58b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5043)[0m     @     0x55e6f5825689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x55e6f58afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5043)[0m     @     0x55e6f58b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5043)[0m     @     0x55e6f5825689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x55e6f58afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5043)[0m     @     0x55e6f58b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5043)[0m     @     0x55e6f5825689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5043)[0m     @     0x55e6f58afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5043)[0m     @     0x55e6f58b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5043)[0m     @     0x55e6f5825689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x7ed9cb3124f5 at::Tensor::copy_()
[2m[36m(pid=5072)[0m     @     0x7ed9cd7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5072)[0m     @     0x7ed9cb3124f5 at::Tensor::copy_()
[2m[36m(pid=5072)[0m     @     0x7ed9d13bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5072)[0m     @     0x55a6bf2ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5072)[0m     @     0x55a6bf247b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x55a6bf2d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5072)[0m     @     0x55a6bf2d3a20 method_vectorcall
[2m[36m(pid=5072)[0m     @     0x55a6bf247bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x55a6bf2d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5072)[0m     @     0x55a6bf2d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5072)[0m     @     0x55a6bf248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x55a6bf2d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5072)[0m     @     0x55a6bf2d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5072)[0m     @     0x55a6bf248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x55a6bf2d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5072)[0m     @     0x55a6bf2d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5072)[0m     @     0x55a6bf248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5072)[0m     @     0x55a6bf2d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5072)[0m     @     0x55a6bf2d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5072)[0m     @     0x55a6bf248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x7fc0ef8974f5 at::Tensor::copy_()
[2m[36m(pid=5004)[0m     @     0x7fc1186af79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5004)[0m     @     0x55643fcbefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5004)[0m     @     0x55643fc19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x55643fca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5004)[0m     @     0x55643fca5a20 method_vectorcall
[2m[36m(pid=5004)[0m     @     0x55643fc19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x55643fca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5004)[0m     @     0x55643fca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5004)[0m     @     0x55643fc1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x55643fca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5004)[0m     @     0x55643fca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5004)[0m     @     0x55643fc1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x55643fca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5004)[0m     @     0x55643fca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5004)[0m     @     0x55643fc1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5004)[0m     @     0x55643fca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=5004)[0m     @     0x55643fca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5004)[0m     @     0x55643fc1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x7f67e5be94f5 at::Tensor::copy_()
[2m[36m(pid=5013)[0m     @     0x7f67e80bc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5013)[0m     @     0x7f67e5be94f5 at::Tensor::copy_()
[2m[36m(pid=5013)[0m     @     0x7f67ebc9479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5013)[0m     @     0x5602b7100fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5013)[0m     @     0x5602b705bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x5602b70e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5013)[0m     @     0x5602b70e7a20 method_vectorcall
[2m[36m(pid=5013)[0m     @     0x5602b705bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x5602b70e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5013)[0m     @     0x5602b70e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5013)[0m     @     0x5602b705c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x5602b70e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5013)[0m     @     0x5602b70e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5013)[0m     @     0x5602b705c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x5602b70e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5013)[0m     @     0x5602b70e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5013)[0m     @     0x5602b705c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5013)[0m     @     0x5602b70e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=5013)[0m     @     0x5602b70e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5013)[0m     @     0x5602b705c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x7f1f893ba4f5 at::Tensor::copy_()
[2m[36m(pid=5005)[0m     @     0x7f1f8b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5005)[0m     @     0x7f1f893ba4f5 at::Tensor::copy_()
[2m[36m(pid=5005)[0m     @     0x7f1f8f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5005)[0m     @     0x55d9e2f2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5005)[0m     @     0x55d9e2e89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x55d9e2f14baf _PyEval_EvalCodeWithName
[2m[36m(pid=5005)[0m     @     0x55d9e2f15a20 method_vectorcall
[2m[36m(pid=5005)[0m     @     0x55d9e2e89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x55d9e2f14baf _PyEval_EvalCodeWithName
[2m[36m(pid=5005)[0m     @     0x55d9e2f15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5005)[0m     @     0x55d9e2e8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x55d9e2f14baf _PyEval_EvalCodeWithName
[2m[36m(pid=5005)[0m     @     0x55d9e2f15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5005)[0m     @     0x55d9e2e8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x55d9e2f14baf _PyEval_EvalCodeWithName
[2m[36m(pid=5005)[0m     @     0x55d9e2f15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5005)[0m     @     0x55d9e2e8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5005)[0m     @     0x55d9e2f14baf _PyEval_EvalCodeWithName
[2m[36m(pid=5005)[0m     @     0x55d9e2f15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5005)[0m     @     0x55d9e2e8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x7f94619948de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5068)[0m     @     0x7f945f4c14f5 at::Tensor::copy_()
[2m[36m(pid=5068)[0m     @     0x7f946556c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5068)[0m     @     0x5652c169ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5068)[0m     @     0x5652c15fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x5652c1685baf _PyEval_EvalCodeWithName
[2m[36m(pid=5068)[0m     @     0x5652c1686a20 method_vectorcall
[2m[36m(pid=5068)[0m     @     0x5652c15fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x5652c1685baf _PyEval_EvalCodeWithName
[2m[36m(pid=5068)[0m     @     0x5652c1686643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5068)[0m     @     0x5652c15fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x5652c1685baf _PyEval_EvalCodeWithName
[2m[36m(pid=5068)[0m     @     0x5652c1686643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5068)[0m     @     0x5652c15fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x5652c1685baf _PyEval_EvalCodeWithName
[2m[36m(pid=5068)[0m     @     0x5652c1686643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5068)[0m     @     0x5652c15fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5068)[0m     @     0x5652c1685baf _PyEval_EvalCodeWithName
[2m[36m(pid=5068)[0m     @     0x5652c1686643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5068)[0m     @     0x5652c15fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x7f6fddb8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5033)[0m     @     0x7f6fddbaec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5033)[0m     @     0x7f6fdd050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5033)[0m     @     0x7f6fdd04e388 at::native::copy_impl()
[2m[36m(pid=5033)[0m     @     0x7f6fdd0505a4 at::native::copy_()
[2m[36m(pid=5034)[0m     @     0x7f61707924f5 at::Tensor::copy_()
[2m[36m(pid=5034)[0m     @     0x7f6172c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5034)[0m     @     0x7f61707924f5 at::Tensor::copy_()
[2m[36m(pid=5034)[0m     @     0x7f617683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5034)[0m     @     0x557f26a16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5034)[0m     @     0x557f26971b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5034)[0m     @     0x557f269fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5034)[0m     @     0x557f269fda20 method_vectorcall
[2m[36m(pid=5034)[0m     @     0x557f26971bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5034)[0m     @     0x557f269fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5034)[0m     @     0x557f269fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5034)[0m     @     0x557f26972689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5034)[0m     @     0x557f269fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5034)[0m     @     0x557f269fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5034)[0m     @     0x557f26972689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5034)[0m     @     0x557f269fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5034)[0m     @     0x557f269fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5034)[0m     @     0x557f26972689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5034)[0m     @     0x557f269fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5034)[0m     @     0x557f269fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5034)[0m     @     0x557f26972689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x7ecf23e1f4f5 at::Tensor::copy_()
[2m[36m(pid=5040)[0m     @     0x7ecf29eca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5040)[0m     @     0x56428a8dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5040)[0m     @     0x56428a837b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x56428a8c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5040)[0m     @     0x56428a8c3a20 method_vectorcall
[2m[36m(pid=5040)[0m     @     0x56428a837bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x56428a8c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5040)[0m     @     0x56428a8c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5040)[0m     @     0x56428a838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x56428a8c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5040)[0m     @     0x56428a8c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5040)[0m     @     0x56428a838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x56428a8c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5040)[0m     @     0x56428a8c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5040)[0m     @     0x56428a838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5040)[0m     @     0x56428a8c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5040)[0m     @     0x56428a8c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5040)[0m     @     0x56428a838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x7f910094a4f5 at::Tensor::copy_()
[2m[36m(pid=5080)[0m     @     0x7f9102e1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5080)[0m     @     0x7f910094a4f5 at::Tensor::copy_()
[2m[36m(pid=5080)[0m     @     0x7f91069f579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5080)[0m     @     0x556f75e9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5080)[0m     @     0x556f75df9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x556f75e84baf _PyEval_EvalCodeWithName
[2m[36m(pid=5080)[0m     @     0x556f75e85a20 method_vectorcall
[2m[36m(pid=5080)[0m     @     0x556f75df9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x556f75e84baf _PyEval_EvalCodeWithName
[2m[36m(pid=5080)[0m     @     0x556f75e85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5080)[0m     @     0x556f75dfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x556f75e84baf _PyEval_EvalCodeWithName
[2m[36m(pid=5080)[0m     @     0x556f75e85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5080)[0m     @     0x556f75dfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x556f75e84baf _PyEval_EvalCodeWithName
[2m[36m(pid=5080)[0m     @     0x556f75e85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5080)[0m     @     0x556f75dfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5080)[0m     @     0x556f75e84baf _PyEval_EvalCodeWithName
[2m[36m(pid=5080)[0m     @     0x556f75e85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5080)[0m     @     0x556f75dfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x7fa3312b54f5 at::Tensor::copy_()
[2m[36m(pid=5010)[0m     @     0x7fa3337888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5010)[0m     @     0x7fa3312b54f5 at::Tensor::copy_()
[2m[36m(pid=5010)[0m     @     0x7fa33736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5010)[0m     @     0x55addada9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5010)[0m     @     0x55addad04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x55addad8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5010)[0m     @     0x55addad90a20 method_vectorcall
[2m[36m(pid=5010)[0m     @     0x55addad04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x55addad8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5010)[0m     @     0x55addad90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5010)[0m     @     0x55addad05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x55addad8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5010)[0m     @     0x55addad90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5010)[0m     @     0x55addad05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x55addad8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5010)[0m     @     0x55addad90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5010)[0m     @     0x55addad05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5010)[0m     @     0x55addad8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5010)[0m     @     0x55addad90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5010)[0m     @     0x55addad05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x7f50c42cf4f5 at::Tensor::copy_()
[2m[36m(pid=5007)[0m     @     0x7f50ca37a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5007)[0m     @     0x55ab146b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5007)[0m     @     0x55ab14612b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x55ab1469dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5007)[0m     @     0x55ab1469ea20 method_vectorcall
[2m[36m(pid=5007)[0m     @     0x55ab14612bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x55ab1469dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5007)[0m     @     0x55ab1469e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5007)[0m     @     0x55ab14613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x55ab1469dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5007)[0m     @     0x55ab1469e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5007)[0m     @     0x55ab14613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x55ab1469dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5007)[0m     @     0x55ab1469e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5007)[0m     @     0x55ab14613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5007)[0m     @     0x55ab1469dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5007)[0m     @     0x55ab1469e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5007)[0m     @     0x55ab14613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x7ed2761cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5021)[0m     @     0x5638ee5d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5021)[0m     @     0x5638ee52eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x5638ee5b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5021)[0m     @     0x5638ee5baa20 method_vectorcall
[2m[36m(pid=5021)[0m     @     0x5638ee52ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x5638ee5b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5021)[0m     @     0x5638ee5ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5021)[0m     @     0x5638ee52f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x5638ee5b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5021)[0m     @     0x5638ee5ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5021)[0m     @     0x5638ee52f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x5638ee5b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5021)[0m     @     0x5638ee5ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5021)[0m     @     0x5638ee52f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5021)[0m     @     0x5638ee5b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=5021)[0m     @     0x5638ee5ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5021)[0m     @     0x5638ee52f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x7ee6819e54f5 at::Tensor::copy_()
[2m[36m(pid=5086)[0m     @     0x7ee683eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5086)[0m     @     0x7ee6819e54f5 at::Tensor::copy_()
[2m[36m(pid=5114)[0m     @     0x7f7999e545a4 at::native::copy_()
[2m[36m(pid=5126)[0m     @     0x7fa0fe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=5126)[0m     @     0x7fa10496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5126)[0m     @     0x5638a209efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5126)[0m     @     0x5638a1ff9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5126)[0m     @     0x5638a2084baf _PyEval_EvalCodeWithName
[2m[36m(pid=5126)[0m     @     0x5638a2085a20 method_vectorcall
[2m[36m(pid=5126)[0m     @     0x5638a1ff9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5126)[0m     @     0x5638a2084baf _PyEval_EvalCodeWithName
[2m[36m(pid=5126)[0m     @     0x5638a2085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5126)[0m     @     0x5638a1ffa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5126)[0m     @     0x5638a2084baf _PyEval_EvalCodeWithName
[2m[36m(pid=5126)[0m     @     0x5638a2085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5126)[0m     @     0x5638a1ffa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5126)[0m     @     0x5638a2084baf _PyEval_EvalCodeWithName
[2m[36m(pid=5126)[0m     @     0x5638a2085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5126)[0m     @     0x5638a1ffa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5126)[0m     @     0x5638a2084baf _PyEval_EvalCodeWithName
[2m[36m(pid=5126)[0m     @     0x5638a2085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5126)[0m     @     0x5638a1ffa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x7f1aa8f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5015)[0m     @     0x7f1aa6a544f5 at::Tensor::copy_()
[2m[36m(pid=5036)[0m     @     0x558893085baf _PyEval_EvalCodeWithName
[2m[36m(pid=5036)[0m     @     0x558893086a20 method_vectorcall
[2m[36m(pid=5036)[0m     @     0x558892ffabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5036)[0m     @     0x558893085baf _PyEval_EvalCodeWithName
[2m[36m(pid=5036)[0m     @     0x558893086643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5036)[0m     @     0x558892ffb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5036)[0m     @     0x558893085baf _PyEval_EvalCodeWithName
[2m[36m(pid=5036)[0m     @     0x558893086643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5036)[0m     @     0x558892ffb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5036)[0m     @     0x558893085baf _PyEval_EvalCodeWithName
[2m[36m(pid=5036)[0m     @     0x558893086643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5036)[0m     @     0x558892ffb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5036)[0m     @     0x558893085baf _PyEval_EvalCodeWithName
[2m[36m(pid=5036)[0m     @     0x558893086643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5036)[0m     @     0x558892ffb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x7fb43d73b4f5 at::Tensor::copy_()
[2m[36m(pid=5107)[0m     @     0x7fb43fc0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5006)[0m     @     0x7ee7be8bd4f5 at::Tensor::copy_()
[2m[36m(pid=5006)[0m     @     0x7ee7c496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5006)[0m     @     0x55e30373afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5006)[0m     @     0x55e303695b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x55e303720baf _PyEval_EvalCodeWithName
[2m[36m(pid=5006)[0m     @     0x55e303721a20 method_vectorcall
[2m[36m(pid=5006)[0m     @     0x55e303695bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x55e303720baf _PyEval_EvalCodeWithName
[2m[36m(pid=5006)[0m     @     0x55e303721643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5006)[0m     @     0x55e303696689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x55e303720baf _PyEval_EvalCodeWithName
[2m[36m(pid=5006)[0m     @     0x55e303721643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5006)[0m     @     0x55e303696689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x55e303720baf _PyEval_EvalCodeWithName
[2m[36m(pid=5006)[0m     @     0x55e303721643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5006)[0m     @     0x55e303696689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5006)[0m     @     0x55e303720baf _PyEval_EvalCodeWithName
[2m[36m(pid=5006)[0m     @     0x55e303721643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5006)[0m     @     0x55e303696689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x7ee5853ba4f5 at::Tensor::copy_()
[2m[36m(pid=5028)[0m     @     0x7ee58788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5067)[0m     @     0x7f60e336a4f5 at::Tensor::copy_()
[2m[36m(pid=5067)[0m     @     0x7f60e583d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5009)[0m     @     0x7f8d6816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5009)[0m     @     0x55f9deb0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5009)[0m     @     0x55f9dea65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5009)[0m     @     0x55f9deaf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5009)[0m     @     0x55f9deaf1a20 method_vectorcall
[2m[36m(pid=5009)[0m     @     0x55f9dea65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5009)[0m     @     0x55f9deaf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5009)[0m     @     0x55f9deaf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5009)[0m     @     0x55f9dea66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5009)[0m     @     0x55f9deaf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5009)[0m     @     0x55f9deaf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5009)[0m     @     0x55f9dea66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5009)[0m     @     0x55f9deaf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5009)[0m     @     0x55f9deaf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5009)[0m     @     0x55f9dea66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5009)[0m     @     0x55f9deaf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5009)[0m     @     0x55f9deaf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5009)[0m     @     0x55f9dea66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x7ef9460eb5a4 at::native::copy_()
[2m[36m(pid=5076)[0m     @     0x7ef9467d64f5 at::Tensor::copy_()
[2m[36m(pid=5076)[0m     @     0x7ef948ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5075)[0m     @     0x7f35d93ba4f5 at::Tensor::copy_()
[2m[36m(pid=5075)[0m     @     0x7f35db88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5075)[0m     @     0x7f35d93ba4f5 at::Tensor::copy_()
[2m[36m(pid=5090)[0m     @     0x7f3df67d64f5 at::Tensor::copy_()
[2m[36m(pid=5090)[0m     @     0x7f3df8ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5031)[0m     @     0x7f5f6bbf55a4 at::native::copy_()
[2m[36m(pid=5031)[0m     @     0x7f5f6c2e04f5 at::Tensor::copy_()
[2m[36m(pid=5091)[0m     @     0x7f9ca527aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5091)[0m     @     0x7f9ca5278388 at::native::copy_impl()
[2m[36m(pid=5091)[0m     @     0x7f9ca527a5a4 at::native::copy_()
[2m[36m(pid=5017)[0m     @     0x7f7a491654f5 at::Tensor::copy_()
[2m[36m(pid=5017)[0m     @     0x7f7a4f21079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5017)[0m     @     0x564ba0d52fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5017)[0m     @     0x564ba0cadb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5017)[0m     @     0x564ba0d38baf _PyEval_EvalCodeWithName
[2m[36m(pid=5017)[0m     @     0x564ba0d39a20 method_vectorcall
[2m[36m(pid=5017)[0m     @     0x564ba0cadbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5017)[0m     @     0x564ba0d38baf _PyEval_EvalCodeWithName
[2m[36m(pid=5017)[0m     @     0x564ba0d39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5017)[0m     @     0x564ba0cae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5017)[0m     @     0x564ba0d38baf _PyEval_EvalCodeWithName
[2m[36m(pid=5017)[0m     @     0x564ba0d39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5017)[0m     @     0x564ba0cae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5017)[0m     @     0x564ba0d38baf _PyEval_EvalCodeWithName
[2m[36m(pid=5017)[0m     @     0x564ba0d39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5017)[0m     @     0x564ba0cae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5017)[0m     @     0x564ba0d38baf _PyEval_EvalCodeWithName
[2m[36m(pid=5017)[0m     @     0x564ba0d39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5017)[0m     @     0x564ba0cae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x7f53f03e64f5 at::Tensor::copy_()
[2m[36m(pid=5038)[0m     @     0x7f53f649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5038)[0m     @     0x5595c3582fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5038)[0m     @     0x5595c34ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x5595c3568baf _PyEval_EvalCodeWithName
[2m[36m(pid=5038)[0m     @     0x5595c3569a20 method_vectorcall
[2m[36m(pid=5038)[0m     @     0x5595c34ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x5595c3568baf _PyEval_EvalCodeWithName
[2m[36m(pid=5038)[0m     @     0x5595c3569643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5038)[0m     @     0x5595c34de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x5595c3568baf _PyEval_EvalCodeWithName
[2m[36m(pid=5038)[0m     @     0x5595c3569643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5038)[0m     @     0x5595c34de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x5595c3568baf _PyEval_EvalCodeWithName
[2m[36m(pid=5038)[0m     @     0x5595c3569643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5038)[0m     @     0x5595c34de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5038)[0m     @     0x5595c3568baf _PyEval_EvalCodeWithName
[2m[36m(pid=5038)[0m     @     0x5595c3569643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5038)[0m     @     0x5595c34de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18b87b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18c12baf _PyEval_EvalCodeWithName
[2m[36m(pid=5024)[0m     @     0x564c18c13a20 method_vectorcall
[2m[36m(pid=5024)[0m     @     0x564c18b87bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18c12baf _PyEval_EvalCodeWithName
[2m[36m(pid=5024)[0m     @     0x564c18c13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5024)[0m     @     0x564c18b88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18c12baf _PyEval_EvalCodeWithName
[2m[36m(pid=5024)[0m     @     0x564c18c13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5024)[0m     @     0x564c18b88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18c12baf _PyEval_EvalCodeWithName
[2m[36m(pid=5024)[0m     @     0x564c18c13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5024)[0m     @     0x564c18b88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5024)[0m     @     0x564c18c12baf _PyEval_EvalCodeWithName
[2m[36m(pid=5024)[0m     @     0x564c18c13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5024)[0m     @     0x564c18b88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x7f3fcd9b84f5 at::Tensor::copy_()
[2m[36m(pid=5105)[0m     @     0x7f3fcfe8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5105)[0m     @     0x7f3fcd9b84f5 at::Tensor::copy_()
[2m[36m(pid=5083)[0m     @     0x7fa66c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5083)[0m     @     0x7fa669f0c4f5 at::Tensor::copy_()
[2m[36m(pid=5083)[0m     @     0x7fa66ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5083)[0m     @     0x561e48cfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5083)[0m     @     0x561e48c55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5083)[0m     @     0x561e48ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5083)[0m     @     0x561e48ce1a20 method_vectorcall
[2m[36m(pid=5083)[0m     @     0x561e48c55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5083)[0m     @     0x561e48ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5083)[0m     @     0x561e48ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5083)[0m     @     0x561e48c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5083)[0m     @     0x561e48ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5083)[0m     @     0x561e48ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5083)[0m     @     0x561e48c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5083)[0m     @     0x561e48ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5083)[0m     @     0x561e48ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5083)[0m     @     0x561e48c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5083)[0m     @     0x561e48ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=5083)[0m     @     0x561e48ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5083)[0m     @     0x561e48c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x7f4fbc37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5019)[0m     @     0x7f4fbc378388 at::native::copy_impl()
[2m[36m(pid=5019)[0m     @     0x7f4fbc37a5a4 at::native::copy_()
[2m[36m(pid=5019)[0m     @     0x7f4fbca654f5 at::Tensor::copy_()
[2m[36m(pid=5033)[0m     @     0x7f6fdd73b4f5 at::Tensor::copy_()
[2m[36m(pid=5033)[0m     @     0x7f6fdfc0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5086)[0m     @     0x7ee687a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5086)[0m     @     0x562e56776fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5086)[0m     @     0x562e566d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x562e5675cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5086)[0m     @     0x562e5675da20 method_vectorcall
[2m[36m(pid=5086)[0m     @     0x562e566d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x562e5675cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5086)[0m     @     0x562e5675d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5086)[0m     @     0x562e566d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x562e5675cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5086)[0m     @     0x562e5675d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5086)[0m     @     0x562e566d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x562e5675cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5086)[0m     @     0x562e5675d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5086)[0m     @     0x562e566d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5086)[0m     @     0x562e5675cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5086)[0m     @     0x562e5675d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5086)[0m     @     0x562e566d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x7f799a53f4f5 at::Tensor::copy_()
[2m[36m(pid=5114)[0m     @     0x7f799ca128de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5015)[0m     @     0x7f1aacaff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5015)[0m     @     0x558defa4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5015)[0m     @     0x558def9a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x558defa31baf _PyEval_EvalCodeWithName
[2m[36m(pid=5015)[0m     @     0x558defa32a20 method_vectorcall
[2m[36m(pid=5015)[0m     @     0x558def9a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x558defa31baf _PyEval_EvalCodeWithName
[2m[36m(pid=5015)[0m     @     0x558defa32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5015)[0m     @     0x558def9a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x558defa31baf _PyEval_EvalCodeWithName
[2m[36m(pid=5015)[0m     @     0x558defa32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5015)[0m     @     0x558def9a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x558defa31baf _PyEval_EvalCodeWithName
[2m[36m(pid=5015)[0m     @     0x558defa32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5015)[0m     @     0x558def9a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5015)[0m     @     0x558defa31baf _PyEval_EvalCodeWithName
[2m[36m(pid=5015)[0m     @     0x558defa32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5015)[0m     @     0x558def9a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x7fb43d73b4f5 at::Tensor::copy_()
[2m[36m(pid=5107)[0m     @     0x7fb4437e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5107)[0m     @     0x55d8b9d3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5107)[0m     @     0x55d8b9c95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x55d8b9d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=5107)[0m     @     0x55d8b9d21a20 method_vectorcall
[2m[36m(pid=5107)[0m     @     0x55d8b9c95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x55d8b9d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=5107)[0m     @     0x55d8b9d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5107)[0m     @     0x55d8b9c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x55d8b9d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=5107)[0m     @     0x55d8b9d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5107)[0m     @     0x55d8b9c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x55d8b9d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=5107)[0m     @     0x55d8b9d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5107)[0m     @     0x55d8b9c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5107)[0m     @     0x55d8b9d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=5107)[0m     @     0x55d8b9d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5107)[0m     @     0x55d8b9c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x7f23b6594ad3 at::TensorIterator::for_each()
[2m[36m(pid=5081)[0m     @     0x7f23b6594d91 at::TensorIterator::for_each()
[2m[36m(pid=5081)[0m     @     0x7f23b6e77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=5081)[0m     @     0x7f23b6e9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=5028)[0m     @     0x7ee5853ba4f5 at::Tensor::copy_()
[2m[36m(pid=5028)[0m     @     0x7ee58b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5028)[0m     @     0x564af35bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5028)[0m     @     0x564af3517b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x564af35a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5028)[0m     @     0x564af35a3a20 method_vectorcall
[2m[36m(pid=5028)[0m     @     0x564af3517bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x564af35a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5028)[0m     @     0x564af35a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5028)[0m     @     0x564af3518689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x564af35a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5028)[0m     @     0x564af35a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5028)[0m     @     0x564af3518689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x564af35a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5028)[0m     @     0x564af35a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5028)[0m     @     0x564af3518689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5028)[0m     @     0x564af35a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5028)[0m     @     0x564af35a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5028)[0m     @     0x564af3518689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x7f60e336a4f5 at::Tensor::copy_()
[2m[36m(pid=5067)[0m     @     0x7f60e941579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5067)[0m     @     0x55742429ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5067)[0m     @     0x5574241fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x557424285baf _PyEval_EvalCodeWithName
[2m[36m(pid=5067)[0m     @     0x557424286a20 method_vectorcall
[2m[36m(pid=5067)[0m     @     0x5574241fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x557424285baf _PyEval_EvalCodeWithName
[2m[36m(pid=5067)[0m     @     0x557424286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5067)[0m     @     0x5574241fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x557424285baf _PyEval_EvalCodeWithName
[2m[36m(pid=5067)[0m     @     0x557424286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5067)[0m     @     0x5574241fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x557424285baf _PyEval_EvalCodeWithName
[2m[36m(pid=5067)[0m     @     0x557424286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5067)[0m     @     0x5574241fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5067)[0m     @     0x557424285baf _PyEval_EvalCodeWithName
[2m[36m(pid=5067)[0m     @     0x557424286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5067)[0m     @     0x5574241fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x7ef9467d64f5 at::Tensor::copy_()
[2m[36m(pid=5076)[0m     @     0x7ef94c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5076)[0m     @     0x557131a88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5076)[0m     @     0x5571319e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x557131a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5076)[0m     @     0x557131a6fa20 method_vectorcall
[2m[36m(pid=5076)[0m     @     0x5571319e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x557131a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5076)[0m     @     0x557131a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5076)[0m     @     0x5571319e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x557131a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5076)[0m     @     0x557131a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5076)[0m     @     0x5571319e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x557131a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5076)[0m     @     0x557131a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5076)[0m     @     0x5571319e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5076)[0m     @     0x557131a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=5076)[0m     @     0x557131a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5076)[0m     @     0x5571319e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x7f35df46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5075)[0m     @     0x55905848ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5075)[0m     @     0x5590583eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x559058475baf _PyEval_EvalCodeWithName
[2m[36m(pid=5075)[0m     @     0x559058476a20 method_vectorcall
[2m[36m(pid=5075)[0m     @     0x5590583eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x559058475baf _PyEval_EvalCodeWithName
[2m[36m(pid=5075)[0m     @     0x559058476643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5075)[0m     @     0x5590583eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x559058475baf _PyEval_EvalCodeWithName
[2m[36m(pid=5075)[0m     @     0x559058476643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5075)[0m     @     0x5590583eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x559058475baf _PyEval_EvalCodeWithName
[2m[36m(pid=5075)[0m     @     0x559058476643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5075)[0m     @     0x5590583eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5075)[0m     @     0x559058475baf _PyEval_EvalCodeWithName
[2m[36m(pid=5075)[0m     @     0x559058476643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5075)[0m     @     0x5590583eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x7f3df67d64f5 at::Tensor::copy_()
[2m[36m(pid=5090)[0m     @     0x7f3dfc47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5090)[0m     @     0x558788ff9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5090)[0m     @     0x558788f54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x558788fdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5090)[0m     @     0x558788fe0a20 method_vectorcall
[2m[36m(pid=5090)[0m     @     0x558788f54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x558788fdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5090)[0m     @     0x558788fe0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5090)[0m     @     0x558788f55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x558788fdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5090)[0m     @     0x558788fe0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5090)[0m     @     0x558788f55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x558788fdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5090)[0m     @     0x558788fe0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5090)[0m     @     0x558788f55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5090)[0m     @     0x558788fdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5090)[0m     @     0x558788fe0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5090)[0m     @     0x558788f55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x7f5f6e7b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5031)[0m     @     0x7f5f6c2e04f5 at::Tensor::copy_()
[2m[36m(pid=5031)[0m     @     0x7f5f7238b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5031)[0m     @     0x556302d43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5091)[0m     @     0x7f9ca59654f5 at::Tensor::copy_()
[2m[36m(pid=5091)[0m     @     0x7f9ca7e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5091)[0m     @     0x7f9ca59654f5 at::Tensor::copy_()
[2m[36m(pid=5105)[0m     @     0x7f3fd3a6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5105)[0m     @     0x560f8d1b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5105)[0m     @     0x560f8d112b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x560f8d19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5105)[0m     @     0x560f8d19ea20 method_vectorcall
[2m[36m(pid=5105)[0m     @     0x560f8d112bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x560f8d19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5105)[0m     @     0x560f8d19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5105)[0m     @     0x560f8d113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x560f8d19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5105)[0m     @     0x560f8d19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5105)[0m     @     0x560f8d113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x560f8d19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5105)[0m     @     0x560f8d19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5105)[0m     @     0x560f8d113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5105)[0m     @     0x560f8d19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5105)[0m     @     0x560f8d19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5105)[0m     @     0x560f8d113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x7f4fbef388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5019)[0m     @     0x7f4fbca654f5 at::Tensor::copy_()
[2m[36m(pid=5019)[0m     @     0x7f4fc2b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5019)[0m     @     0x55b93b937fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5019)[0m     @     0x55b93b892b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x55b93b91dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5019)[0m     @     0x55b93b91ea20 method_vectorcall
[2m[36m(pid=5019)[0m     @     0x55b93b892bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x55b93b91dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5019)[0m     @     0x55b93b91e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5019)[0m     @     0x55b93b893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x55b93b91dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5019)[0m     @     0x55b93b91e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5019)[0m     @     0x55b93b893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x55b93b91dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5019)[0m     @     0x55b93b91e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5019)[0m     @     0x55b93b893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5019)[0m     @     0x55b93b91dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5019)[0m     @     0x55b93b91e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5019)[0m     @     0x55b93b893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x7f6fdd73b4f5 at::Tensor::copy_()
[2m[36m(pid=5033)[0m     @     0x7f6fe37e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5033)[0m     @     0x55bce1eb3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5033)[0m     @     0x55bce1e0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x55bce1e99baf _PyEval_EvalCodeWithName
[2m[36m(pid=5033)[0m     @     0x55bce1e9aa20 method_vectorcall
[2m[36m(pid=5033)[0m     @     0x55bce1e0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x55bce1e99baf _PyEval_EvalCodeWithName
[2m[36m(pid=5033)[0m     @     0x55bce1e9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5033)[0m     @     0x55bce1e0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x55bce1e99baf _PyEval_EvalCodeWithName
[2m[36m(pid=5033)[0m     @     0x55bce1e9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5033)[0m     @     0x55bce1e0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x55bce1e99baf _PyEval_EvalCodeWithName
[2m[36m(pid=5033)[0m     @     0x55bce1e9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5033)[0m     @     0x55bce1e0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5033)[0m     @     0x55bce1e99baf _PyEval_EvalCodeWithName
[2m[36m(pid=5033)[0m     @     0x55bce1e9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5033)[0m     @     0x55bce1e0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x7f799a53f4f5 at::Tensor::copy_()
[2m[36m(pid=5114)[0m     @     0x7f79a05ea79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5114)[0m     @     0x559bc7b41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5114)[0m     @     0x559bc7a9cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x559bc7b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=5114)[0m     @     0x559bc7b28a20 method_vectorcall
[2m[36m(pid=5114)[0m     @     0x559bc7a9cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x559bc7b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=5114)[0m     @     0x559bc7b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5114)[0m     @     0x559bc7a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x559bc7b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=5114)[0m     @     0x559bc7b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5114)[0m     @     0x559bc7a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x559bc7b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=5114)[0m     @     0x559bc7b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5114)[0m     @     0x559bc7a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5114)[0m     @     0x559bc7b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=5114)[0m     @     0x559bc7b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5114)[0m     @     0x559bc7a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x7f23b633ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=5081)[0m     @     0x7f23b633a388 at::native::copy_impl()
[2m[36m(pid=5081)[0m     @     0x7f23b633c5a4 at::native::copy_()
[2m[36m(pid=5081)[0m     @     0x7f23b6a274f5 at::Tensor::copy_()
[2m[36m(pid=5031)[0m     @     0x556302c9eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x556302d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=5031)[0m     @     0x556302d2aa20 method_vectorcall
[2m[36m(pid=5031)[0m     @     0x556302c9ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x556302d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=5031)[0m     @     0x556302d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5031)[0m     @     0x556302c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x556302d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=5031)[0m     @     0x556302d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5031)[0m     @     0x556302c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x556302d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=5031)[0m     @     0x556302d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5031)[0m     @     0x556302c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5031)[0m     @     0x556302d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=5031)[0m     @     0x556302d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5031)[0m     @     0x556302c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x7f9caba1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5091)[0m     @     0x563d30adcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5091)[0m     @     0x563d30a37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x563d30ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5091)[0m     @     0x563d30ac3a20 method_vectorcall
[2m[36m(pid=5091)[0m     @     0x563d30a37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x563d30ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5091)[0m     @     0x563d30ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5091)[0m     @     0x563d30a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x563d30ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5091)[0m     @     0x563d30ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5091)[0m     @     0x563d30a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x563d30ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5091)[0m     @     0x563d30ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5091)[0m     @     0x563d30a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5091)[0m     @     0x563d30ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=5091)[0m     @     0x563d30ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5091)[0m     @     0x563d30a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x7f23b8efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=5081)[0m     @     0x7f23b6a274f5 at::Tensor::copy_()
2020-11-05 10:17:21,608	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:17:21,613	ERROR trial_runner.py:567 -- Trial PPO_jss_env_1300b_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=5117, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=5081)[0m     @     0x7f23bcad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=5081)[0m     @     0x55780cf67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=5081)[0m     @     0x55780cec2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x55780cf4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5081)[0m     @     0x55780cf4ea20 method_vectorcall
[2m[36m(pid=5081)[0m     @     0x55780cec2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x55780cf4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5081)[0m     @     0x55780cf4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5081)[0m     @     0x55780cec3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x55780cf4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5081)[0m     @     0x55780cf4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5081)[0m     @     0x55780cec3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x55780cf4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5081)[0m     @     0x55780cf4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5081)[0m     @     0x55780cec3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=5081)[0m     @     0x55780cf4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=5081)[0m     @     0x55780cf4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=5081)[0m     @     0x55780cec3689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:17:21,640	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
== Status ==
Memory usage on this node: 26.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.3 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1300b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1300b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1300b_00000_0_2020-11-05_10-17-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 26.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.3 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1300b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1300b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1300b_00000_0_2020-11-05_10-17-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_1300b_00000])
