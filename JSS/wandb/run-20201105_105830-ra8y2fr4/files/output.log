2020-11-05 10:58:34,590	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.66 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da3ad_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=11123)[0m 2020-11-05 10:58:37,285	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=10996)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10996)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10996)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11063)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11063)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11063)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11063)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11063)[0m *** SIGSEGV (@0x0) received by PID 11063 (TID 0x7f2c3ac40700) from PID 0; stack trace: ***
[2m[36m(pid=11080)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11080)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11080)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11072)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11072)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11072)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11068)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11068)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11068)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11068)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11068)[0m *** SIGSEGV (@0x0) received by PID 11068 (TID 0x7fe8c6524700) from PID 0; stack trace: ***
[2m[36m(pid=11068)[0m     @     0x7fe8c60fd390 (unknown)
[2m[36m(pid=11114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11114)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11114)[0m *** SIGSEGV (@0x0) received by PID 11114 (TID 0x7f2ec07e3700) from PID 0; stack trace: ***
[2m[36m(pid=11114)[0m     @     0x7f2ec03bc390 (unknown)
[2m[36m(pid=11075)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11075)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11075)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11075)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11075)[0m *** SIGSEGV (@0x0) received by PID 11075 (TID 0x7fbb3ec14700) from PID 0; stack trace: ***
[2m[36m(pid=11075)[0m     @     0x7fbb3e7ed390 (unknown)
[2m[36m(pid=11121)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11121)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11121)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11121)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11121)[0m *** SIGSEGV (@0x0) received by PID 11121 (TID 0x7f89da167700) from PID 0; stack trace: ***
[2m[36m(pid=11121)[0m     @     0x7f89d9d40390 (unknown)
[2m[36m(pid=11121)[0m     @     0x7f5adbe84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11121)[0m     @     0x7f5ad917864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11064)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11064)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11064)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11064)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11064)[0m *** SIGSEGV (@0x0) received by PID 11064 (TID 0x7fd51ce05700) from PID 0; stack trace: ***
[2m[36m(pid=11064)[0m     @     0x7fd51c9de390 (unknown)
[2m[36m(pid=11091)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11091)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11091)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11091)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11091)[0m *** SIGSEGV (@0x0) received by PID 11091 (TID 0x7f6988c0e700) from PID 0; stack trace: ***
[2m[36m(pid=11091)[0m     @     0x7f69887e7390 (unknown)
[2m[36m(pid=11057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11057)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11057)[0m *** SIGSEGV (@0x0) received by PID 11057 (TID 0x7f1397592700) from PID 0; stack trace: ***
[2m[36m(pid=11057)[0m     @     0x7f139716b390 (unknown)
[2m[36m(pid=11111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11111)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11111)[0m *** SIGSEGV (@0x0) received by PID 11111 (TID 0x7f8f175d2700) from PID 0; stack trace: ***
[2m[36m(pid=10999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10999)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10999)[0m *** SIGSEGV (@0x0) received by PID 10999 (TID 0x7fd5abf05700) from PID 0; stack trace: ***
[2m[36m(pid=11054)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11054)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11054)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11054)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11054)[0m *** SIGSEGV (@0x0) received by PID 11054 (TID 0x7f206775e700) from PID 0; stack trace: ***
[2m[36m(pid=11054)[0m     @     0x7f2067337390 (unknown)
[2m[36m(pid=11054)[0m     @     0x7ef1694a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11011)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11011)[0m *** SIGSEGV (@0x0) received by PID 11011 (TID 0x7f8511719700) from PID 0; stack trace: ***
[2m[36m(pid=10990)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10990)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10990)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10990)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10990)[0m *** SIGSEGV (@0x0) received by PID 10990 (TID 0x7f5da084c700) from PID 0; stack trace: ***
[2m[36m(pid=11000)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11000)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11000)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11081)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11081)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11081)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11081)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11081)[0m *** SIGSEGV (@0x0) received by PID 11081 (TID 0x7f7297c86700) from PID 0; stack trace: ***
[2m[36m(pid=10998)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10998)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10998)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10998)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10998)[0m *** SIGSEGV (@0x0) received by PID 10998 (TID 0x7fb7f795c700) from PID 0; stack trace: ***
[2m[36m(pid=11017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11017)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11017)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11017)[0m *** SIGSEGV (@0x0) received by PID 11017 (TID 0x7fb5d2d3b700) from PID 0; stack trace: ***
[2m[36m(pid=11017)[0m     @     0x7fb5d2914390 (unknown)
[2m[36m(pid=11050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11050)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11116)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11116)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11116)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11116)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11116)[0m *** SIGSEGV (@0x0) received by PID 11116 (TID 0x7f625d936700) from PID 0; stack trace: ***
[2m[36m(pid=11116)[0m     @     0x7f625d50f390 (unknown)
[2m[36m(pid=11116)[0m     @     0x7f335f71afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11083)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11083)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11083)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11083)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11083)[0m *** SIGSEGV (@0x0) received by PID 11083 (TID 0x7f907941e700) from PID 0; stack trace: ***
[2m[36m(pid=11074)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11074)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11074)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11074)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11074)[0m *** SIGSEGV (@0x0) received by PID 11074 (TID 0x7fa5e5de0700) from PID 0; stack trace: ***
[2m[36m(pid=11074)[0m     @     0x7fa5e59b9390 (unknown)
[2m[36m(pid=10989)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10989)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10989)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10989)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10989)[0m *** SIGSEGV (@0x0) received by PID 10989 (TID 0x7f0a4d528700) from PID 0; stack trace: ***
[2m[36m(pid=10989)[0m     @     0x7f0a4d101390 (unknown)
[2m[36m(pid=11067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11067)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11067)[0m *** SIGSEGV (@0x0) received by PID 11067 (TID 0x7f6bee06f700) from PID 0; stack trace: ***
[2m[36m(pid=11067)[0m     @     0x7f6bedc48390 (unknown)
[2m[36m(pid=11088)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11088)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11088)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11088)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11088)[0m *** SIGSEGV (@0x0) received by PID 11088 (TID 0x7f40b7ab4700) from PID 0; stack trace: ***
[2m[36m(pid=11088)[0m     @     0x7f40b768d390 (unknown)
[2m[36m(pid=11071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11071)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11071)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11071)[0m *** SIGSEGV (@0x0) received by PID 11071 (TID 0x7f3939a2c700) from PID 0; stack trace: ***
[2m[36m(pid=11071)[0m     @     0x7f3939605390 (unknown)
[2m[36m(pid=11071)[0m     @     0x7f0a3b81bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11103)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11103)[0m *** SIGSEGV (@0x0) received by PID 11103 (TID 0x7facff3a3700) from PID 0; stack trace: ***
[2m[36m(pid=11103)[0m     @     0x7facfef7c390 (unknown)
[2m[36m(pid=11103)[0m     @     0x7f7e0118afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11096)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11096)[0m *** SIGSEGV (@0x0) received by PID 11096 (TID 0x7f9ee0d0f700) from PID 0; stack trace: ***
[2m[36m(pid=11096)[0m     @     0x7f9ee08e8390 (unknown)
[2m[36m(pid=11016)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11016)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11016)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11016)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11016)[0m *** SIGSEGV (@0x0) received by PID 11016 (TID 0x7f76f91d7700) from PID 0; stack trace: ***
[2m[36m(pid=10992)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10992)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10992)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10992)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10992)[0m *** SIGSEGV (@0x0) received by PID 10992 (TID 0x7f49be478700) from PID 0; stack trace: ***
[2m[36m(pid=10992)[0m     @     0x7f49be051390 (unknown)
[2m[36m(pid=10992)[0m     @     0x7f1ac009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10992)[0m     @     0x7f1abd38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11025)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11025)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11025)[0m *** SIGSEGV (@0x0) received by PID 11025 (TID 0x7f3eb0496700) from PID 0; stack trace: ***
[2m[36m(pid=11025)[0m     @     0x7f3eb006f390 (unknown)
[2m[36m(pid=11025)[0m     @     0x7f0fb2266fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11060)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11060)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11060)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11060)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11060)[0m *** SIGSEGV (@0x0) received by PID 11060 (TID 0x7f357c2c2700) from PID 0; stack trace: ***
[2m[36m(pid=11060)[0m     @     0x7f357be9b390 (unknown)
[2m[36m(pid=11060)[0m     @     0x7f067de6efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11060)[0m     @     0x7f067b16264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11048)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11048)[0m *** SIGSEGV (@0x0) received by PID 11048 (TID 0x7f14f4c0f700) from PID 0; stack trace: ***
[2m[36m(pid=11048)[0m     @     0x7f14f47e8390 (unknown)
[2m[36m(pid=11048)[0m     @     0x7ee5f67dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11048)[0m     @     0x7ee5f3ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11003)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11003)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11003)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11003)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11003)[0m *** SIGSEGV (@0x0) received by PID 11003 (TID 0x7f7dace4c700) from PID 0; stack trace: ***
[2m[36m(pid=11003)[0m     @     0x7f7daca25390 (unknown)
[2m[36m(pid=11003)[0m     @     0x7f4eaebd4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11003)[0m     @     0x7f4eabec864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11058)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11058)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11058)[0m *** SIGSEGV (@0x0) received by PID 11058 (TID 0x7f5c4405e700) from PID 0; stack trace: ***
[2m[36m(pid=11058)[0m     @     0x7f5c43c37390 (unknown)
[2m[36m(pid=11058)[0m     @     0x7f2d45d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11058)[0m     @     0x7f2d4306064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11106)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11106)[0m *** SIGSEGV (@0x0) received by PID 11106 (TID 0x7f6e235bb700) from PID 0; stack trace: ***
[2m[36m(pid=11106)[0m     @     0x7f6e23194390 (unknown)
[2m[36m(pid=11106)[0m     @     0x7f3f2538cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11106)[0m     @     0x7f3f2268064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11001)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11001)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11001)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11001)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11001)[0m *** SIGSEGV (@0x0) received by PID 11001 (TID 0x7fa80ca46700) from PID 0; stack trace: ***
[2m[36m(pid=11001)[0m     @     0x7fa80c61f390 (unknown)
[2m[36m(pid=11001)[0m     @     0x7f790e818fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11001)[0m     @     0x7f790bb0c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11104)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11104)[0m *** SIGSEGV (@0x0) received by PID 11104 (TID 0x7f81d1d71700) from PID 0; stack trace: ***
[2m[36m(pid=11104)[0m     @     0x7f81d194a390 (unknown)
[2m[36m(pid=11104)[0m     @     0x7f52d3a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11104)[0m     @     0x7f52d0d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11108)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11108)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11108)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11108)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11108)[0m *** SIGSEGV (@0x0) received by PID 11108 (TID 0x7fb5a98fa700) from PID 0; stack trace: ***
[2m[36m(pid=11108)[0m     @     0x7fb5a94d3390 (unknown)
[2m[36m(pid=11108)[0m     @     0x7f86ab6edfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11108)[0m     @     0x7f86a89e164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10991)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10991)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10991)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10991)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10991)[0m *** SIGSEGV (@0x0) received by PID 10991 (TID 0x7f219e955700) from PID 0; stack trace: ***
[2m[36m(pid=10991)[0m     @     0x7f219e52e390 (unknown)
[2m[36m(pid=10991)[0m     @     0x7ef2a040afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10991)[0m     @     0x7ef29d6fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10991)[0m     @     0x7ef29d701977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11069)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11069)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11069)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11069)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11069)[0m *** SIGSEGV (@0x0) received by PID 11069 (TID 0x7f7553240700) from PID 0; stack trace: ***
[2m[36m(pid=11069)[0m     @     0x7f7552e19390 (unknown)
[2m[36m(pid=11069)[0m     @     0x7f4655027fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11069)[0m     @     0x7f465231b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11019)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11019)[0m *** SIGSEGV (@0x0) received by PID 11019 (TID 0x7fd2c9943700) from PID 0; stack trace: ***
[2m[36m(pid=11019)[0m     @     0x7fd2c951c390 (unknown)
[2m[36m(pid=11019)[0m     @     0x7fa3cb71afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11019)[0m     @     0x7fa3c8a0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11019)[0m     @     0x7fa3c8a11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10984)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10984)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10984)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10984)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10984)[0m *** SIGSEGV (@0x0) received by PID 10984 (TID 0x7efc60d4c700) from PID 0; stack trace: ***
[2m[36m(pid=10984)[0m     @     0x7efc60925390 (unknown)
[2m[36m(pid=10984)[0m     @     0x7ecd62a9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10984)[0m     @     0x7ecd5fd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10984)[0m     @     0x7ecd5fd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11061)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11061)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11061)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11061)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11061)[0m *** SIGSEGV (@0x0) received by PID 11061 (TID 0x7f29f1d00700) from PID 0; stack trace: ***
[2m[36m(pid=11061)[0m     @     0x7f29f18d9390 (unknown)
[2m[36m(pid=11061)[0m     @     0x7efaf3a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11061)[0m     @     0x7efaf0d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10996)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10996)[0m *** SIGSEGV (@0x0) received by PID 10996 (TID 0x7fb868442700) from PID 0; stack trace: ***
[2m[36m(pid=10996)[0m     @     0x7fb86801b390 (unknown)
[2m[36m(pid=10996)[0m     @     0x7f896a226fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10996)[0m     @     0x7f896751a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10996)[0m     @     0x7f896751d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11063)[0m     @     0x7f2c3a819390 (unknown)
[2m[36m(pid=11063)[0m     @     0x7efd3ca32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11063)[0m     @     0x7efd39d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11063)[0m     @     0x7efd39d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11080)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11080)[0m *** SIGSEGV (@0x0) received by PID 11080 (TID 0x7ffb6898c700) from PID 0; stack trace: ***
[2m[36m(pid=11080)[0m     @     0x7ffb68565390 (unknown)
[2m[36m(pid=11080)[0m     @     0x7fcc6a76dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11080)[0m     @     0x7fcc67a6164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11080)[0m     @     0x7fcc67a64977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11072)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11072)[0m *** SIGSEGV (@0x0) received by PID 11072 (TID 0x7f7cf0343700) from PID 0; stack trace: ***
[2m[36m(pid=11072)[0m     @     0x7f7ceff1c390 (unknown)
[2m[36m(pid=11072)[0m     @     0x7f4df2082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11072)[0m     @     0x7f4def37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11072)[0m     @     0x7f4def379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11062)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11062)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11062)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11068)[0m     @     0x7fb9c831ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11068)[0m     @     0x7fb9c561364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11068)[0m     @     0x7fb9c5616977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11068)[0m     @     0x7fb9c5616b53 at::TensorIterator::for_each()
[2m[36m(pid=11068)[0m     @     0x7fb9c5616e11 at::TensorIterator::for_each()
[2m[36m(pid=11114)[0m     @     0x7effc25aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11114)[0m     @     0x7effbf89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11114)[0m     @     0x7effbf8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11114)[0m     @     0x7effbf8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=11075)[0m     @     0x7f8c40a05fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11075)[0m     @     0x7f8c3dcf964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11075)[0m     @     0x7f8c3dcfc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11075)[0m     @     0x7f8c3dcfcb53 at::TensorIterator::for_each()
[2m[36m(pid=11121)[0m     @     0x7f5ad917b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11121)[0m     @     0x7f5ad917bb53 at::TensorIterator::for_each()
[2m[36m(pid=11121)[0m     @     0x7f5ad917be11 at::TensorIterator::for_each()
[2m[36m(pid=11121)[0m     @     0x7f5adbe94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11121)[0m     @     0x7f5adbeb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11064)[0m     @     0x7fa61ea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11064)[0m     @     0x7fa61bd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11064)[0m     @     0x7fa61bd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11064)[0m     @     0x7fa61bd93b53 at::TensorIterator::for_each()
[2m[36m(pid=11091)[0m     @     0x7f3a8a885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11091)[0m     @     0x7f3a87b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11091)[0m     @     0x7f3a87b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11091)[0m     @     0x7f3a87b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=11057)[0m     @     0x7ee49936efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11057)[0m     @     0x7ee49666264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11057)[0m     @     0x7ee496665977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11057)[0m     @     0x7ee496665b53 at::TensorIterator::for_each()
[2m[36m(pid=11111)[0m     @     0x7f8f171ab390 (unknown)
[2m[36m(pid=11111)[0m     @     0x7f601939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11111)[0m     @     0x7f601668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11111)[0m     @     0x7f6016692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11111)[0m     @     0x7f6016692b53 at::TensorIterator::for_each()
[2m[36m(pid=10999)[0m     @     0x7fd5abade390 (unknown)
[2m[36m(pid=10999)[0m     @     0x7fa6adc3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10999)[0m     @     0x7fa6aaf3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10999)[0m     @     0x7fa6aaf33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10999)[0m     @     0x7fa6aaf33b53 at::TensorIterator::for_each()
[2m[36m(pid=11054)[0m     @     0x7ef16679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11054)[0m     @     0x7ef166797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11054)[0m     @     0x7ef166797b53 at::TensorIterator::for_each()
[2m[36m(pid=11054)[0m     @     0x7ef166797e11 at::TensorIterator::for_each()
[2m[36m(pid=11054)[0m     @     0x7ef1694b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11065)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11065)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11011)[0m     @     0x7f85112f2390 (unknown)
[2m[36m(pid=11011)[0m     @     0x7f56134c1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11011)[0m     @     0x7f56107b564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11011)[0m     @     0x7f56107b8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11011)[0m     @     0x7f56107b8b53 at::TensorIterator::for_each()
[2m[36m(pid=10990)[0m     @     0x7f5da0425390 (unknown)
[2m[36m(pid=10990)[0m     @     0x7f2ea262dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10990)[0m     @     0x7f2e9f92164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10990)[0m     @     0x7f2e9f924977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11000)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11000)[0m *** SIGSEGV (@0x0) received by PID 11000 (TID 0x7f8d09bcb700) from PID 0; stack trace: ***
[2m[36m(pid=11000)[0m     @     0x7f8d097a4390 (unknown)
[2m[36m(pid=11000)[0m     @     0x7f5e0b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11000)[0m     @     0x7f5e08c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11000)[0m     @     0x7f5e08c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11081)[0m     @     0x7f729785f390 (unknown)
[2m[36m(pid=11081)[0m     @     0x7f4399a85fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11081)[0m     @     0x7f4396d7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11081)[0m     @     0x7f4396d7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10998)[0m     @     0x7fb7f7535390 (unknown)
[2m[36m(pid=10998)[0m     @     0x7f88f9749fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10998)[0m     @     0x7f88f6a3d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10998)[0m     @     0x7f88f6a40977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10998)[0m     @     0x7f88f6a40b53 at::TensorIterator::for_each()
[2m[36m(pid=10985)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10985)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11017)[0m     @     0x7f86d4b31fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11017)[0m     @     0x7f86d1e2564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11017)[0m     @     0x7f86d1e28977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11017)[0m     @     0x7f86d1e28b53 at::TensorIterator::for_each()
[2m[36m(pid=11050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11050)[0m *** SIGSEGV (@0x0) received by PID 11050 (TID 0x7faa6fd0f700) from PID 0; stack trace: ***
[2m[36m(pid=11050)[0m     @     0x7faa6f8e8390 (unknown)
[2m[36m(pid=11050)[0m     @     0x7f7b71b15fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11050)[0m     @     0x7f7b6ee0964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11050)[0m     @     0x7f7b6ee0c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11116)[0m     @     0x7f335ca0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11116)[0m     @     0x7f335ca11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11116)[0m     @     0x7f335ca11b53 at::TensorIterator::for_each()
[2m[36m(pid=11116)[0m     @     0x7f335ca11e11 at::TensorIterator::for_each()
[2m[36m(pid=11116)[0m     @     0x7f335f72ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11083)[0m     @     0x7f9078ff7390 (unknown)
[2m[36m(pid=11083)[0m     @     0x7f617b11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11083)[0m     @     0x7f617840f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11083)[0m     @     0x7f6178412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11074)[0m     @     0x7f76e7a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11074)[0m     @     0x7f76e4d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11074)[0m     @     0x7f76e4d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11074)[0m     @     0x7f76e4d67b53 at::TensorIterator::for_each()
[2m[36m(pid=10989)[0m     @     0x7edb4f2fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10989)[0m     @     0x7edb4c5f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10989)[0m     @     0x7edb4c5f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10989)[0m     @     0x7edb4c5f6b53 at::TensorIterator::for_each()
[2m[36m(pid=11067)[0m     @     0x7f3cefe63fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11067)[0m     @     0x7f3ced15764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11067)[0m     @     0x7f3ced15a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11067)[0m     @     0x7f3ced15ab53 at::TensorIterator::for_each()
[2m[36m(pid=11088)[0m     @     0x7f11b9896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11088)[0m     @     0x7f11b6b8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11088)[0m     @     0x7f11b6b8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11088)[0m     @     0x7f11b6b8db53 at::TensorIterator::for_each()
[2m[36m(pid=11071)[0m     @     0x7f0a38b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11071)[0m     @     0x7f0a38b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11071)[0m     @     0x7f0a38b12b53 at::TensorIterator::for_each()
[2m[36m(pid=11103)[0m     @     0x7f7dfe47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11103)[0m     @     0x7f7dfe481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11103)[0m     @     0x7f7dfe481b53 at::TensorIterator::for_each()
[2m[36m(pid=11096)[0m     @     0x7f6fe29ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11096)[0m     @     0x7f6fdfcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11096)[0m     @     0x7f6fdfce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11016)[0m     @     0x7f76f8db0390 (unknown)
[2m[36m(pid=11016)[0m     @     0x7f47faeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11016)[0m     @     0x7f47f81df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11016)[0m     @     0x7f47f81e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10992)[0m     @     0x7f1abd392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10992)[0m     @     0x7f1abd392b53 at::TensorIterator::for_each()
[2m[36m(pid=11025)[0m     @     0x7f0faf55a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11025)[0m     @     0x7f0faf55d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11060)[0m     @     0x7f067b165977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11060)[0m     @     0x7f067b165b53 at::TensorIterator::for_each()
[2m[36m(pid=11048)[0m     @     0x7ee5f3ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11003)[0m     @     0x7f4eabecb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11003)[0m     @     0x7f4eabecbb53 at::TensorIterator::for_each()
[2m[36m(pid=11003)[0m     @     0x7f4eabecbe11 at::TensorIterator::for_each()
[2m[36m(pid=11058)[0m     @     0x7f2d43063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11058)[0m     @     0x7f2d43063b53 at::TensorIterator::for_each()
[2m[36m(pid=11106)[0m     @     0x7f3f22683977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11106)[0m     @     0x7f3f22683b53 at::TensorIterator::for_each()
[2m[36m(pid=11001)[0m     @     0x7f790bb0f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11001)[0m     @     0x7f790bb0fb53 at::TensorIterator::for_each()
[2m[36m(pid=11104)[0m     @     0x7f52d0d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11104)[0m     @     0x7f52d0d67b53 at::TensorIterator::for_each()
[2m[36m(pid=11108)[0m     @     0x7f86a89e4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10991)[0m     @     0x7ef29d701b53 at::TensorIterator::for_each()
[2m[36m(pid=10991)[0m     @     0x7ef29d701e11 at::TensorIterator::for_each()
[2m[36m(pid=11069)[0m     @     0x7f465231e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11069)[0m     @     0x7f465231eb53 at::TensorIterator::for_each()
[2m[36m(pid=11069)[0m     @     0x7f465231ee11 at::TensorIterator::for_each()
[2m[36m(pid=11019)[0m     @     0x7fa3c8a11b53 at::TensorIterator::for_each()
[2m[36m(pid=11019)[0m     @     0x7fa3c8a11e11 at::TensorIterator::for_each()
[2m[36m(pid=10984)[0m     @     0x7ecd5fd93b53 at::TensorIterator::for_each()
[2m[36m(pid=10984)[0m     @     0x7ecd5fd93e11 at::TensorIterator::for_each()
[2m[36m(pid=10984)[0m     @     0x7ecd62aacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11061)[0m     @     0x7efaf0d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10986)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10986)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10986)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11052)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11052)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11052)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11051)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11051)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11051)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11047)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11006)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11006)[0m *** SIGSEGV (@0x0) received by PID 11006 (TID 0x7fd0f85be700) from PID 0; stack trace: ***
[2m[36m(pid=11006)[0m     @     0x7fd0f8197390 (unknown)
[2m[36m(pid=11006)[0m     @     0x7fa1fa293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10996)[0m     @     0x7f896751db53 at::TensorIterator::for_each()
[2m[36m(pid=10996)[0m     @     0x7f896751de11 at::TensorIterator::for_each()
[2m[36m(pid=10996)[0m     @     0x7f896a236c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10996)[0m     @     0x7f896a259cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10987)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10987)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10987)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11059)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11059)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11059)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11004)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11004)[0m *** SIGSEGV (@0x0) received by PID 11004 (TID 0x7fba53ef7700) from PID 0; stack trace: ***
[2m[36m(pid=11004)[0m     @     0x7fba53ad0390 (unknown)
[2m[36m(pid=11004)[0m     @     0x7f8b55cdafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11063)[0m     @     0x7efd39d29b53 at::TensorIterator::for_each()
[2m[36m(pid=11063)[0m     @     0x7efd39d29e11 at::TensorIterator::for_each()
[2m[36m(pid=10988)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10988)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10988)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10988)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10988)[0m *** SIGSEGV (@0x0) received by PID 10988 (TID 0x7eff91c61700) from PID 0; stack trace: ***
[2m[36m(pid=10988)[0m     @     0x7eff9183a390 (unknown)
[2m[36m(pid=11080)[0m     @     0x7fcc67a64b53 at::TensorIterator::for_each()
[2m[36m(pid=11080)[0m     @     0x7fcc67a64e11 at::TensorIterator::for_each()
[2m[36m(pid=11080)[0m     @     0x7fcc6a77dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11080)[0m     @     0x7fcc6a7a0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11008)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11008)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11008)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10994)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10994)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10994)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11072)[0m     @     0x7f4def379b53 at::TensorIterator::for_each()
[2m[36m(pid=11072)[0m     @     0x7f4def379e11 at::TensorIterator::for_each()
[2m[36m(pid=11062)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11062)[0m *** SIGSEGV (@0x0) received by PID 11062 (TID 0x7f53822ef700) from PID 0; stack trace: ***
[2m[36m(pid=11062)[0m     @     0x7f5381ec8390 (unknown)
[2m[36m(pid=11062)[0m     @     0x7f248409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11062)[0m     @     0x7f248138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11068)[0m     @     0x7fb9c832fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11068)[0m     @     0x7fb9c8352cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11068)[0m     @     0x7fb9c5390009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11068)[0m     @     0x7fb9c538ec3f at::native::copy_impl()
[2m[36m(pid=11114)[0m     @     0x7effbf8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=11114)[0m     @     0x7effc25bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11114)[0m     @     0x7effc25ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11075)[0m     @     0x7f8c3dcfce11 at::TensorIterator::for_each()
[2m[36m(pid=11075)[0m     @     0x7f8c40a15c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11075)[0m     @     0x7f8c40a38cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11121)[0m     @     0x7f5ad8ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11121)[0m     @     0x7f5ad8ef3c3f at::native::copy_impl()
[2m[36m(pid=11121)[0m     @     0x7f5ad8ef4ed4 at::native::copy_()
[2m[36m(pid=11064)[0m     @     0x7fa61bd93e11 at::TensorIterator::for_each()
[2m[36m(pid=11064)[0m     @     0x7fa61eaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11064)[0m     @     0x7fa61eacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11091)[0m     @     0x7f3a87b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=11091)[0m     @     0x7f3a8a895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11091)[0m     @     0x7f3a8a8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11057)[0m     @     0x7ee496665e11 at::TensorIterator::for_each()
[2m[36m(pid=11057)[0m     @     0x7ee49937ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11057)[0m     @     0x7ee4993a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11111)[0m     @     0x7f6016692e11 at::TensorIterator::for_each()
[2m[36m(pid=11111)[0m     @     0x7f60193abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11111)[0m     @     0x7f60193cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11111)[0m     @     0x7f601640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11111)[0m     @     0x7f601640ac3f at::native::copy_impl()
[2m[36m(pid=10999)[0m     @     0x7fa6aaf33e11 at::TensorIterator::for_each()
[2m[36m(pid=10999)[0m     @     0x7fa6adc4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10999)[0m     @     0x7fa6adc6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11054)[0m     @     0x7ef1694d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11054)[0m     @     0x7ef166511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11054)[0m     @     0x7ef16650fc3f at::native::copy_impl()
[2m[36m(pid=11054)[0m     @     0x7ef166510ed4 at::native::copy_()
[2m[36m(pid=11065)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11065)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11065)[0m *** SIGSEGV (@0x0) received by PID 11065 (TID 0x7f909802a700) from PID 0; stack trace: ***
[2m[36m(pid=11065)[0m     @     0x7f9097c03390 (unknown)
[2m[36m(pid=11065)[0m     @     0x7f6199d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11011)[0m     @     0x7f56107b8e11 at::TensorIterator::for_each()
[2m[36m(pid=11011)[0m     @     0x7f56134d1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11011)[0m     @     0x7f56134f4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11011)[0m     @     0x7f5610532009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11011)[0m     @     0x7f5610530c3f at::native::copy_impl()
[2m[36m(pid=10990)[0m     @     0x7f2e9f924b53 at::TensorIterator::for_each()
[2m[36m(pid=10990)[0m     @     0x7f2e9f924e11 at::TensorIterator::for_each()
[2m[36m(pid=11000)[0m     @     0x7f5e08c62b53 at::TensorIterator::for_each()
[2m[36m(pid=11000)[0m     @     0x7f5e08c62e11 at::TensorIterator::for_each()
[2m[36m(pid=11000)[0m     @     0x7f5e0b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11000)[0m     @     0x7f5e0b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11081)[0m     @     0x7f4396d7cb53 at::TensorIterator::for_each()
[2m[36m(pid=11081)[0m     @     0x7f4396d7ce11 at::TensorIterator::for_each()
[2m[36m(pid=11081)[0m     @     0x7f4399a95c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11081)[0m     @     0x7f4399ab8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11081)[0m     @     0x7f4396af6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11081)[0m     @     0x7f4396af4c3f at::native::copy_impl()
[2m[36m(pid=10995)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10995)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10995)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10995)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10995)[0m *** SIGSEGV (@0x0) received by PID 10995 (TID 0x7f57290a9700) from PID 0; stack trace: ***
[2m[36m(pid=10995)[0m     @     0x7f5728c82390 (unknown)
[2m[36m(pid=10995)[0m     @     0x7f282ae96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10995)[0m     @     0x7f282818a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10998)[0m     @     0x7f88f6a40e11 at::TensorIterator::for_each()
[2m[36m(pid=10998)[0m     @     0x7f88f9759c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10998)[0m     @     0x7f88f977ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10998)[0m     @     0x7f88f67ba009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10998)[0m     @     0x7f88f67b8c3f at::native::copy_impl()
[2m[36m(pid=10998)[0m     @     0x7f88f67b9ed4 at::native::copy_()
[2m[36m(pid=10985)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10985)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10985)[0m *** SIGSEGV (@0x0) received by PID 10985 (TID 0x7f9024412700) from PID 0; stack trace: ***
[2m[36m(pid=10985)[0m     @     0x7f9023feb390 (unknown)
[2m[36m(pid=10985)[0m     @     0x7f6126067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10985)[0m     @     0x7f612335b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10985)[0m     @     0x7f612335e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11078)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11078)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11078)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11078)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11078)[0m *** SIGSEGV (@0x0) received by PID 11078 (TID 0x7f2e737ef700) from PID 0; stack trace: ***
[2m[36m(pid=11078)[0m     @     0x7f2e733c8390 (unknown)
[2m[36m(pid=11078)[0m     @     0x7eff754a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11078)[0m     @     0x7eff7279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11017)[0m     @     0x7f86d1e28e11 at::TensorIterator::for_each()
[2m[36m(pid=11017)[0m     @     0x7f86d4b41c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11017)[0m     @     0x7f86d4b64cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11017)[0m     @     0x7f86d1ba2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11017)[0m     @     0x7f86d1ba0c3f at::native::copy_impl()
[2m[36m(pid=11017)[0m     @     0x7f86d1ba1ed4 at::native::copy_()
[2m[36m(pid=11050)[0m     @     0x7f7b6ee0cb53 at::TensorIterator::for_each()
[2m[36m(pid=11050)[0m     @     0x7f7b6ee0ce11 at::TensorIterator::for_each()
[2m[36m(pid=11050)[0m     @     0x7f7b71b25c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11050)[0m     @     0x7f7b71b48cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11050)[0m     @     0x7f7b6eb86009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11116)[0m     @     0x7f335f74dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11116)[0m     @     0x7f335c78b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11116)[0m     @     0x7f335c789c3f at::native::copy_impl()
[2m[36m(pid=11116)[0m     @     0x7f335c78aed4 at::native::copy_()
[2m[36m(pid=11116)[0m     @     0x7f335cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11083)[0m     @     0x7f6178412b53 at::TensorIterator::for_each()
[2m[36m(pid=11083)[0m     @     0x7f6178412e11 at::TensorIterator::for_each()
[2m[36m(pid=11083)[0m     @     0x7f617b12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11083)[0m     @     0x7f617b14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11083)[0m     @     0x7f617818c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11083)[0m     @     0x7f617818ac3f at::native::copy_impl()
[2m[36m(pid=11074)[0m     @     0x7f76e4d67e11 at::TensorIterator::for_each()
[2m[36m(pid=11074)[0m     @     0x7f76e7a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11074)[0m     @     0x7f76e7aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11074)[0m     @     0x7f76e4ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11074)[0m     @     0x7f76e4adfc3f at::native::copy_impl()
[2m[36m(pid=10983)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=10983)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=10983)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=10983)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10983)[0m *** SIGSEGV (@0x0) received by PID 10983 (TID 0x7f540340f700) from PID 0; stack trace: ***
[2m[36m(pid=10983)[0m     @     0x7f5402fe8390 (unknown)
[2m[36m(pid=10983)[0m     @     0x7f250518afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10983)[0m     @     0x7f250247e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11022)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11022)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11022)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11022)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11022)[0m *** SIGSEGV (@0x0) received by PID 11022 (TID 0x7f5414c72700) from PID 0; stack trace: ***
[2m[36m(pid=11022)[0m     @     0x7f541484b390 (unknown)
[2m[36m(pid=11022)[0m     @     0x7f2516985fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11022)[0m     @     0x7f2513c7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11022)[0m     @     0x7f2513c7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10989)[0m     @     0x7edb4c5f6e11 at::TensorIterator::for_each()
[2m[36m(pid=10989)[0m     @     0x7edb4f30fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10989)[0m     @     0x7edb4f332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10989)[0m     @     0x7edb4c370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10989)[0m     @     0x7edb4c36ec3f at::native::copy_impl()
[2m[36m(pid=10989)[0m     @     0x7edb4c36fed4 at::native::copy_()
[2m[36m(pid=10989)[0m     @     0x7edb4cab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11067)[0m     @     0x7f3ced15ae11 at::TensorIterator::for_each()
[2m[36m(pid=11067)[0m     @     0x7f3cefe73c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11067)[0m     @     0x7f3cefe96cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11067)[0m     @     0x7f3ceced4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11067)[0m     @     0x7f3ceced2c3f at::native::copy_impl()
[2m[36m(pid=11088)[0m     @     0x7f11b6b8de11 at::TensorIterator::for_each()
[2m[36m(pid=11088)[0m     @     0x7f11b98a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11088)[0m     @     0x7f11b98c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11088)[0m     @     0x7f11b6907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11088)[0m     @     0x7f11b6905c3f at::native::copy_impl()
[2m[36m(pid=11071)[0m     @     0x7f0a38b12e11 at::TensorIterator::for_each()
[2m[36m(pid=11071)[0m     @     0x7f0a3b82bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11071)[0m     @     0x7f0a3b84ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11071)[0m     @     0x7f0a3888c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11071)[0m     @     0x7f0a3888ac3f at::native::copy_impl()
[2m[36m(pid=11103)[0m     @     0x7f7dfe481e11 at::TensorIterator::for_each()
[2m[36m(pid=11103)[0m     @     0x7f7e0119ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11103)[0m     @     0x7f7e011bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11103)[0m     @     0x7f7dfe1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11103)[0m     @     0x7f7dfe1f9c3f at::native::copy_impl()
[2m[36m(pid=11103)[0m     @     0x7f7dfe1faed4 at::native::copy_()
[2m[36m(pid=11096)[0m     @     0x7f6fdfce2b53 at::TensorIterator::for_each()
[2m[36m(pid=11096)[0m     @     0x7f6fdfce2e11 at::TensorIterator::for_each()
[2m[36m(pid=11096)[0m     @     0x7f6fe29fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11096)[0m     @     0x7f6fe2a1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11096)[0m     @     0x7f6fdfa5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11096)[0m     @     0x7f6fdfa5ac3f at::native::copy_impl()
[2m[36m(pid=11016)[0m     @     0x7f47f81e2b53 at::TensorIterator::for_each()
[2m[36m(pid=11016)[0m     @     0x7f47f81e2e11 at::TensorIterator::for_each()
[2m[36m(pid=11016)[0m     @     0x7f47faefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11016)[0m     @     0x7f47faf1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11016)[0m     @     0x7f47f7f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11016)[0m     @     0x7f47f7f5ac3f at::native::copy_impl()
[2m[36m(pid=10992)[0m     @     0x7f1abd392e11 at::TensorIterator::for_each()
[2m[36m(pid=10992)[0m     @     0x7f1ac00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10992)[0m     @     0x7f1ac00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10992)[0m     @     0x7f1abd10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10992)[0m     @     0x7f1abd10ac3f at::native::copy_impl()
[2m[36m(pid=10992)[0m     @     0x7f1abd10bed4 at::native::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0faf55db53 at::TensorIterator::for_each()
[2m[36m(pid=11025)[0m     @     0x7f0faf55de11 at::TensorIterator::for_each()
[2m[36m(pid=11025)[0m     @     0x7f0fb2276c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11025)[0m     @     0x7f0fb2299cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11025)[0m     @     0x7f0faf2d7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11025)[0m     @     0x7f0faf2d5c3f at::native::copy_impl()
[2m[36m(pid=11060)[0m     @     0x7f067b165e11 at::TensorIterator::for_each()
[2m[36m(pid=11060)[0m     @     0x7f067de7ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11060)[0m     @     0x7f067dea1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11060)[0m     @     0x7f067aedf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11060)[0m     @     0x7f067aeddc3f at::native::copy_impl()
[2m[36m(pid=11060)[0m     @     0x7f067aedeed4 at::native::copy_()
[2m[36m(pid=11060)[0m     @     0x7f067b6215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11048)[0m     @     0x7ee5f3ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=11048)[0m     @     0x7ee5f3ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=11048)[0m     @     0x7ee5f67eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11048)[0m     @     0x7ee5f680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11048)[0m     @     0x7ee5f384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11048)[0m     @     0x7ee5f3849c3f at::native::copy_impl()
[2m[36m(pid=11003)[0m     @     0x7f4eaebe4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11003)[0m     @     0x7f4eaec07cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11003)[0m     @     0x7f4eabc45009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11003)[0m     @     0x7f4eabc43c3f at::native::copy_impl()
[2m[36m(pid=11003)[0m     @     0x7f4eabc44ed4 at::native::copy_()
[2m[36m(pid=11058)[0m     @     0x7f2d43063e11 at::TensorIterator::for_each()
[2m[36m(pid=11058)[0m     @     0x7f2d45d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11058)[0m     @     0x7f2d45d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11058)[0m     @     0x7f2d42ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11058)[0m     @     0x7f2d42ddbc3f at::native::copy_impl()
[2m[36m(pid=11058)[0m     @     0x7f2d42ddced4 at::native::copy_()
[2m[36m(pid=11058)[0m     @     0x7f2d4351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11106)[0m     @     0x7f3f22683e11 at::TensorIterator::for_each()
[2m[36m(pid=11106)[0m     @     0x7f3f2539cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11106)[0m     @     0x7f3f253bfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11106)[0m     @     0x7f3f223fd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11106)[0m     @     0x7f3f223fbc3f at::native::copy_impl()
[2m[36m(pid=11106)[0m     @     0x7f3f223fced4 at::native::copy_()
[2m[36m(pid=11001)[0m     @     0x7f790bb0fe11 at::TensorIterator::for_each()
[2m[36m(pid=11001)[0m     @     0x7f790e828c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11001)[0m     @     0x7f790e84bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11001)[0m     @     0x7f790b889009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11001)[0m     @     0x7f790b887c3f at::native::copy_impl()
[2m[36m(pid=11014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11014)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11014)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11014)[0m *** SIGSEGV (@0x0) received by PID 11014 (TID 0x7f937068d700) from PID 0; stack trace: ***
[2m[36m(pid=11014)[0m     @     0x7f9370266390 (unknown)
[2m[36m(pid=11014)[0m     @     0x7f6472293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11014)[0m     @     0x7f646f58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11014)[0m     @     0x7f646f58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11056)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11056)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11056)[0m *** SIGSEGV (@0x0) received by PID 11056 (TID 0x7f35475ff700) from PID 0; stack trace: ***
[2m[36m(pid=11056)[0m     @     0x7f35471d8390 (unknown)
[2m[36m(pid=11056)[0m     @     0x7f064939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11056)[0m     @     0x7f064668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11097)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11097)[0m *** SIGSEGV (@0x0) received by PID 11097 (TID 0x7f6323085700) from PID 0; stack trace: ***
[2m[36m(pid=11097)[0m     @     0x7f6322c5e390 (unknown)
[2m[36m(pid=11097)[0m     @     0x7f3424c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11097)[0m     @     0x7f3421f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11024)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11024)[0m *** SIGSEGV (@0x0) received by PID 11024 (TID 0x7f549958d700) from PID 0; stack trace: ***
[2m[36m(pid=11024)[0m     @     0x7f5499166390 (unknown)
[2m[36m(pid=11024)[0m     @     0x7f259b1c6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11024)[0m     @     0x7f25984ba64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11024)[0m     @     0x7f25984bd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11070)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11070)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11070)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11070)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11070)[0m *** SIGSEGV (@0x0) received by PID 11070 (TID 0x7fa66a236700) from PID 0; stack trace: ***
[2m[36m(pid=11070)[0m     @     0x7fa669e0f390 (unknown)
[2m[36m(pid=11104)[0m     @     0x7f52d0d67e11 at::TensorIterator::for_each()
[2m[36m(pid=11104)[0m     @     0x7f52d3a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11104)[0m     @     0x7f52d3aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11104)[0m     @     0x7f52d0ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11104)[0m     @     0x7f52d0adfc3f at::native::copy_impl()
[2m[36m(pid=11104)[0m     @     0x7f52d0ae0ed4 at::native::copy_()
[2m[36m(pid=11108)[0m     @     0x7f86a89e4b53 at::TensorIterator::for_each()
[2m[36m(pid=11108)[0m     @     0x7f86a89e4e11 at::TensorIterator::for_each()
[2m[36m(pid=11108)[0m     @     0x7f86ab6fdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11108)[0m     @     0x7f86ab720cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11108)[0m     @     0x7f86a875e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11108)[0m     @     0x7f86a875cc3f at::native::copy_impl()
[2m[36m(pid=10991)[0m     @     0x7ef2a041ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10991)[0m     @     0x7ef2a043dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10991)[0m     @     0x7ef29d47b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10991)[0m     @     0x7ef29d479c3f at::native::copy_impl()
[2m[36m(pid=10991)[0m     @     0x7ef29d47aed4 at::native::copy_()
[2m[36m(pid=10991)[0m     @     0x7ef29dbbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11069)[0m     @     0x7f4655037c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11069)[0m     @     0x7f465505acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11069)[0m     @     0x7f4652098009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11069)[0m     @     0x7f4652096c3f at::native::copy_impl()
[2m[36m(pid=11069)[0m     @     0x7f4652097ed4 at::native::copy_()
[2m[36m(pid=11069)[0m     @     0x7f46527da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11019)[0m     @     0x7fa3cb72ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11019)[0m     @     0x7fa3cb74dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11019)[0m     @     0x7fa3c878b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11019)[0m     @     0x7fa3c8789c3f at::native::copy_impl()
[2m[36m(pid=11019)[0m     @     0x7fa3c878aed4 at::native::copy_()
[2m[36m(pid=11019)[0m     @     0x7fa3c8ecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10984)[0m     @     0x7ecd62acfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10984)[0m     @     0x7ecd5fb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10984)[0m     @     0x7ecd5fb0bc3f at::native::copy_impl()
[2m[36m(pid=10984)[0m     @     0x7ecd5fb0ced4 at::native::copy_()
[2m[36m(pid=10984)[0m     @     0x7ecd6024f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10984)[0m     @     0x7ecd60357148 at::Tensor::copy_()
[2m[36m(pid=11061)[0m     @     0x7efaf0d67b53 at::TensorIterator::for_each()
[2m[36m(pid=11061)[0m     @     0x7efaf0d67e11 at::TensorIterator::for_each()
[2m[36m(pid=11061)[0m     @     0x7efaf3a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11061)[0m     @     0x7efaf3aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11061)[0m     @     0x7efaf0ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11061)[0m     @     0x7efaf0adfc3f at::native::copy_impl()
[2m[36m(pid=10986)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10986)[0m *** SIGSEGV (@0x0) received by PID 10986 (TID 0x7f5c744b6700) from PID 0; stack trace: ***
[2m[36m(pid=10986)[0m     @     0x7f5c7408f390 (unknown)
[2m[36m(pid=10986)[0m     @     0x7f2d76293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10986)[0m     @     0x7f2d7358764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10986)[0m     @     0x7f2d7358a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10986)[0m     @     0x7f2d7358ab53 at::TensorIterator::for_each()
[2m[36m(pid=11002)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11002)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11002)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11002)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11002)[0m *** SIGSEGV (@0x0) received by PID 11002 (TID 0x7f230c265700) from PID 0; stack trace: ***
[2m[36m(pid=11002)[0m     @     0x7f230be3e390 (unknown)
[2m[36m(pid=11002)[0m     @     0x7ef40de3efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11002)[0m     @     0x7ef40b13264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11002)[0m     @     0x7ef40b135977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11094)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11094)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11094)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11094)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11094)[0m *** SIGSEGV (@0x0) received by PID 11094 (TID 0x7f0e73e73700) from PID 0; stack trace: ***
[2m[36m(pid=11094)[0m     @     0x7f0e73a4c390 (unknown)
[2m[36m(pid=11094)[0m     @     0x7edf75bf1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11094)[0m     @     0x7edf72ee564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11049)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11049)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11049)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11049)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11049)[0m *** SIGSEGV (@0x0) received by PID 11049 (TID 0x7fab98755700) from PID 0; stack trace: ***
[2m[36m(pid=11066)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11066)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11066)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11066)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11066)[0m *** SIGSEGV (@0x0) received by PID 11066 (TID 0x7fc164436700) from PID 0; stack trace: ***
[2m[36m(pid=11090)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11090)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11090)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11090)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11090)[0m *** SIGSEGV (@0x0) received by PID 11090 (TID 0x7f25fcc18700) from PID 0; stack trace: ***
[2m[36m(pid=11090)[0m     @     0x7f25fc7f1390 (unknown)
[2m[36m(pid=11090)[0m     @     0x7ef6fe885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11090)[0m     @     0x7ef6fbb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11052)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11052)[0m *** SIGSEGV (@0x0) received by PID 11052 (TID 0x7f37bba8a700) from PID 0; stack trace: ***
[2m[36m(pid=11052)[0m     @     0x7f37bb663390 (unknown)
[2m[36m(pid=11052)[0m     @     0x7f08bd869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11052)[0m     @     0x7f08bab5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11052)[0m     @     0x7f08bab60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11055)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11055)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11055)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11055)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11055)[0m *** SIGSEGV (@0x0) received by PID 11055 (TID 0x7f0d83114700) from PID 0; stack trace: ***
[2m[36m(pid=11051)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11051)[0m *** SIGSEGV (@0x0) received by PID 11051 (TID 0x7f29c94cd700) from PID 0; stack trace: ***
[2m[36m(pid=11051)[0m     @     0x7f29c90a6390 (unknown)
[2m[36m(pid=11051)[0m     @     0x7efacb1c6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11051)[0m     @     0x7efac84ba64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11051)[0m     @     0x7efac84bd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11082)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11082)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11082)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11082)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11082)[0m *** SIGSEGV (@0x0) received by PID 11082 (TID 0x7f956d083700) from PID 0; stack trace: ***
[2m[36m(pid=11047)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11047)[0m *** SIGSEGV (@0x0) received by PID 11047 (TID 0x7feba3270700) from PID 0; stack trace: ***
[2m[36m(pid=11047)[0m     @     0x7feba2e49390 (unknown)
[2m[36m(pid=11047)[0m     @     0x7fbca5067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11047)[0m     @     0x7fbca235b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11047)[0m     @     0x7fbca235e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11006)[0m     @     0x7fa1f758764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11006)[0m     @     0x7fa1f758a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11006)[0m     @     0x7fa1f758ab53 at::TensorIterator::for_each()
[2m[36m(pid=11006)[0m     @     0x7fa1f758ae11 at::TensorIterator::for_each()
[2m[36m(pid=11006)[0m     @     0x7fa1fa2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10996)[0m     @     0x7f8967297009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10996)[0m     @     0x7f8967295c3f at::native::copy_impl()
[2m[36m(pid=10996)[0m     @     0x7f8967296ed4 at::native::copy_()
[2m[36m(pid=10996)[0m     @     0x7f89679d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10987)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10987)[0m *** SIGSEGV (@0x0) received by PID 10987 (TID 0x7fe8cd169700) from PID 0; stack trace: ***
[2m[36m(pid=10987)[0m     @     0x7fe8ccd42390 (unknown)
[2m[36m(pid=10987)[0m     @     0x7fb9ceeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10987)[0m     @     0x7fb9cc1df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10987)[0m     @     0x7fb9cc1e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10987)[0m     @     0x7fb9cc1e2b53 at::TensorIterator::for_each()
[2m[36m(pid=11059)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11059)[0m *** SIGSEGV (@0x0) received by PID 11059 (TID 0x7f377d1e3700) from PID 0; stack trace: ***
[2m[36m(pid=11059)[0m     @     0x7f377cdbc390 (unknown)
[2m[36m(pid=11059)[0m     @     0x7f087eeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11059)[0m     @     0x7f087c1df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11059)[0m     @     0x7f087c1e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11059)[0m     @     0x7f087c1e2b53 at::TensorIterator::for_each()
[2m[36m(pid=11077)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11077)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11077)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11077)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11077)[0m *** SIGSEGV (@0x0) received by PID 11077 (TID 0x7ff065285700) from PID 0; stack trace: ***
[2m[36m(pid=11077)[0m     @     0x7ff064e5e390 (unknown)
[2m[36m(pid=11077)[0m     @     0x7fc166e96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11077)[0m     @     0x7fc16418a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11077)[0m     @     0x7fc16418d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11053)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11053)[0m *** SIGSEGV (@0x0) received by PID 11053 (TID 0x7f4107e23700) from PID 0; stack trace: ***
[2m[36m(pid=11053)[0m     @     0x7f41079fc390 (unknown)
[2m[36m(pid=11053)[0m     @     0x7f12099c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11053)[0m     @     0x7f1206cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11053)[0m     @     0x7f1206cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11053)[0m     @     0x7f1206cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=11004)[0m     @     0x7f8b52fce64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11004)[0m     @     0x7f8b52fd1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11004)[0m     @     0x7f8b52fd1b53 at::TensorIterator::for_each()
[2m[36m(pid=11004)[0m     @     0x7f8b52fd1e11 at::TensorIterator::for_each()
[2m[36m(pid=11004)[0m     @     0x7f8b55ceac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11063)[0m     @     0x7efd3ca42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11063)[0m     @     0x7efd3ca65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11063)[0m     @     0x7efd39aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11063)[0m     @     0x7efd39aa1c3f at::native::copy_impl()
[2m[36m(pid=11063)[0m     @     0x7efd39aa2ed4 at::native::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd3a1e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10988)[0m     @     0x7ed09396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10988)[0m     @     0x7ed090c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10988)[0m     @     0x7ed090c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10988)[0m     @     0x7ed090c62b53 at::TensorIterator::for_each()
[2m[36m(pid=10988)[0m     @     0x7ed090c62e11 at::TensorIterator::for_each()
[2m[36m(pid=10988)[0m     @     0x7ed09397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10988)[0m     @     0x7ed09399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11080)[0m     @     0x7fcc677de009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11080)[0m     @     0x7fcc677dcc3f at::native::copy_impl()
[2m[36m(pid=11080)[0m     @     0x7fcc677dded4 at::native::copy_()
[2m[36m(pid=11080)[0m     @     0x7fcc67f205cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11080)[0m     @     0x7fcc68028148 at::Tensor::copy_()
[2m[36m(pid=11101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=11101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=11101)[0m *** Aborted at 1604573923 (unix time) try "date -d @1604573923" if you are using GNU date ***
[2m[36m(pid=11101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11101)[0m *** SIGSEGV (@0x0) received by PID 11101 (TID 0x7f693f1c6700) from PID 0; stack trace: ***
[2m[36m(pid=11101)[0m     @     0x7f693ed9f390 (unknown)
[2m[36m(pid=11101)[0m     @     0x7f3a40f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11101)[0m     @     0x7f3a3e26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11101)[0m     @     0x7f3a3e26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11101)[0m     @     0x7f3a3e26ab53 at::TensorIterator::for_each()
[2m[36m(pid=11008)[0m PC: @                0x0 (unknown)
[2m[36m(pid=11008)[0m *** SIGSEGV (@0x0) received by PID 11008 (TID 0x7f30b8aec700) from PID 0; stack trace: ***
[2m[36m(pid=11008)[0m     @     0x7f30b86c5390 (unknown)
[2m[36m(pid=11008)[0m     @     0x7f01ba7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11008)[0m     @     0x7f01b7ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10994)[0m PC: @                0x0 (unknown)
[2m[36m(pid=10994)[0m *** SIGSEGV (@0x0) received by PID 10994 (TID 0x7fdb9cb10700) from PID 0; stack trace: ***
[2m[36m(pid=10994)[0m     @     0x7fdb9c6e9390 (unknown)
[2m[36m(pid=10994)[0m     @     0x7fac9e7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=10994)[0m     @     0x7fac9bace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=10994)[0m     @     0x7fac9bad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10994)[0m     @     0x7fac9bad1b53 at::TensorIterator::for_each()
[2m[36m(pid=10994)[0m     @     0x7fac9bad1e11 at::TensorIterator::for_each()
[2m[36m(pid=11072)[0m     @     0x7f4df2092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11072)[0m     @     0x7f4df20b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11072)[0m     @     0x7f4def0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11072)[0m     @     0x7f4def0f1c3f at::native::copy_impl()
[2m[36m(pid=11072)[0m     @     0x7f4def0f2ed4 at::native::copy_()
[2m[36m(pid=11072)[0m     @     0x7f4def8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11062)[0m     @     0x7f2481392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11062)[0m     @     0x7f2481392b53 at::TensorIterator::for_each()
[2m[36m(pid=11062)[0m     @     0x7f2481392e11 at::TensorIterator::for_each()
[2m[36m(pid=11062)[0m     @     0x7f24840abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11062)[0m     @     0x7f24840cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11068)[0m     @     0x7fb9c538fed4 at::native::copy_()
[2m[36m(pid=11068)[0m     @     0x7fb9c5ad25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11068)[0m     @     0x7fb9c5bda148 at::Tensor::copy_()
[2m[36m(pid=11068)[0m     @     0x7fb9c77d1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11068)[0m     @     0x7fb9c5ad25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11114)[0m     @     0x7effbf61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11114)[0m     @     0x7effbf619c3f at::native::copy_impl()
[2m[36m(pid=11114)[0m     @     0x7effbf61aed4 at::native::copy_()
[2m[36m(pid=11114)[0m     @     0x7effbfd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11114)[0m     @     0x7effbfe65148 at::Tensor::copy_()
[2m[36m(pid=11075)[0m     @     0x7f8c3da76009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11075)[0m     @     0x7f8c3da74c3f at::native::copy_impl()
[2m[36m(pid=11075)[0m     @     0x7f8c3da75ed4 at::native::copy_()
[2m[36m(pid=11075)[0m     @     0x7f8c3e1b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11075)[0m     @     0x7f8c3e2c0148 at::Tensor::copy_()
[2m[36m(pid=11121)[0m     @     0x7f5ad96375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11121)[0m     @     0x7f5ad973f148 at::Tensor::copy_()
[2m[36m(pid=11121)[0m     @     0x7f5adb336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11064)[0m     @     0x7fa61bb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11064)[0m     @     0x7fa61bb0bc3f at::native::copy_impl()
[2m[36m(pid=11064)[0m     @     0x7fa61bb0ced4 at::native::copy_()
[2m[36m(pid=11064)[0m     @     0x7fa61c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11064)[0m     @     0x7fa61c357148 at::Tensor::copy_()
[2m[36m(pid=11064)[0m     @     0x7fa61df4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11091)[0m     @     0x7f3a878f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11091)[0m     @     0x7f3a878f4c3f at::native::copy_impl()
[2m[36m(pid=11091)[0m     @     0x7f3a878f5ed4 at::native::copy_()
[2m[36m(pid=11091)[0m     @     0x7f3a880385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11091)[0m     @     0x7f3a88140148 at::Tensor::copy_()
[2m[36m(pid=11057)[0m     @     0x7ee4963df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11057)[0m     @     0x7ee4963ddc3f at::native::copy_impl()
[2m[36m(pid=11057)[0m     @     0x7ee4963deed4 at::native::copy_()
[2m[36m(pid=11057)[0m     @     0x7ee496b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11057)[0m     @     0x7ee496c29148 at::Tensor::copy_()
[2m[36m(pid=11057)[0m     @     0x7ee498820989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11111)[0m     @     0x7f601640bed4 at::native::copy_()
[2m[36m(pid=11111)[0m     @     0x7f6016b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11111)[0m     @     0x7f6016c56148 at::Tensor::copy_()
[2m[36m(pid=11111)[0m     @     0x7f601884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11111)[0m     @     0x7f6016b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10999)[0m     @     0x7fa6aacad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10999)[0m     @     0x7fa6aacabc3f at::native::copy_impl()
[2m[36m(pid=10999)[0m     @     0x7fa6aacaced4 at::native::copy_()
[2m[36m(pid=10999)[0m     @     0x7fa6ab3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10999)[0m     @     0x7fa6ab4f7148 at::Tensor::copy_()
[2m[36m(pid=10999)[0m     @     0x7fa6ad0ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11054)[0m     @     0x7ef166c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11054)[0m     @     0x7ef166d5b148 at::Tensor::copy_()
[2m[36m(pid=11054)[0m     @     0x7ef168952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11054)[0m     @     0x7ef166c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11054)[0m     @     0x7ef166d5b148 at::Tensor::copy_()
[2m[36m(pid=11054)[0m     @     0x7ef16d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11054)[0m     @     0x555a8e544fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11054)[0m     @     0x555a8e49fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x7f619706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11065)[0m     @     0x7f6197063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11065)[0m     @     0x7f6197063b53 at::TensorIterator::for_each()
[2m[36m(pid=11065)[0m     @     0x7f6197063e11 at::TensorIterator::for_each()
[2m[36m(pid=11065)[0m     @     0x7f6199d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11065)[0m     @     0x7f6199d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11011)[0m     @     0x7f5610531ed4 at::native::copy_()
[2m[36m(pid=11011)[0m     @     0x7f5610c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11011)[0m     @     0x7f5610d7c148 at::Tensor::copy_()
[2m[36m(pid=11011)[0m     @     0x7f5612973989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11011)[0m     @     0x7f5610c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10990)[0m     @     0x7f2ea263dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10990)[0m     @     0x7f2ea2660cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10990)[0m     @     0x7f2e9f69e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10990)[0m     @     0x7f2e9f69cc3f at::native::copy_impl()
[2m[36m(pid=10990)[0m     @     0x7f2e9f69ded4 at::native::copy_()
[2m[36m(pid=10990)[0m     @     0x7f2e9fde05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11000)[0m     @     0x7f5e089dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11000)[0m     @     0x7f5e089dac3f at::native::copy_impl()
[2m[36m(pid=11000)[0m     @     0x7f5e089dbed4 at::native::copy_()
[2m[36m(pid=11000)[0m     @     0x7f5e0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11081)[0m     @     0x7f4396af5ed4 at::native::copy_()
[2m[36m(pid=11081)[0m     @     0x7f43972385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10995)[0m     @     0x7f282818d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10995)[0m     @     0x7f282818db53 at::TensorIterator::for_each()
[2m[36m(pid=10995)[0m     @     0x7f282818de11 at::TensorIterator::for_each()
[2m[36m(pid=10995)[0m     @     0x7f282aea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10998)[0m     @     0x7f88f6efc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10998)[0m     @     0x7f88f7004148 at::Tensor::copy_()
[2m[36m(pid=10998)[0m     @     0x7f88f8bfb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10985)[0m     @     0x7f612335eb53 at::TensorIterator::for_each()
[2m[36m(pid=10985)[0m     @     0x7f612335ee11 at::TensorIterator::for_each()
[2m[36m(pid=10985)[0m     @     0x7f6126077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11078)[0m     @     0x7eff72797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11078)[0m     @     0x7eff72797b53 at::TensorIterator::for_each()
[2m[36m(pid=11017)[0m     @     0x7f86d22e45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11017)[0m     @     0x7f86d23ec148 at::Tensor::copy_()
[2m[36m(pid=11017)[0m     @     0x7f86d3fe3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11017)[0m     @     0x7f86d22e45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11050)[0m     @     0x7f7b6eb84c3f at::native::copy_impl()
[2m[36m(pid=11050)[0m     @     0x7f7b6eb85ed4 at::native::copy_()
[2m[36m(pid=11050)[0m     @     0x7f7b6f2c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11116)[0m     @     0x7f335cfd5148 at::Tensor::copy_()
[2m[36m(pid=11116)[0m     @     0x7f335ebcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11116)[0m     @     0x7f335cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11083)[0m     @     0x7f617818bed4 at::native::copy_()
[2m[36m(pid=11083)[0m     @     0x7f61788ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11083)[0m     @     0x7f61789d6148 at::Tensor::copy_()
[2m[36m(pid=11074)[0m     @     0x7f76e4ae0ed4 at::native::copy_()
[2m[36m(pid=11074)[0m     @     0x7f76e52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11074)[0m     @     0x7f76e532b148 at::Tensor::copy_()
[2m[36m(pid=11074)[0m     @     0x7f76e6f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10983)[0m     @     0x7f2502481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=10983)[0m     @     0x7f2502481b53 at::TensorIterator::for_each()
[2m[36m(pid=10983)[0m     @     0x7f2502481e11 at::TensorIterator::for_each()
[2m[36m(pid=11022)[0m     @     0x7f2513c7cb53 at::TensorIterator::for_each()
[2m[36m(pid=11022)[0m     @     0x7f2513c7ce11 at::TensorIterator::for_each()
[2m[36m(pid=11022)[0m     @     0x7f2516995c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11022)[0m     @     0x7f25169b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10989)[0m     @     0x7edb4cbba148 at::Tensor::copy_()
[2m[36m(pid=10989)[0m     @     0x7edb4e7b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10989)[0m     @     0x7edb4cab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11067)[0m     @     0x7f3ceced3ed4 at::native::copy_()
[2m[36m(pid=11067)[0m     @     0x7f3ced6165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11067)[0m     @     0x7f3ced71e148 at::Tensor::copy_()
[2m[36m(pid=11067)[0m     @     0x7f3cef315989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11088)[0m     @     0x7f11b6906ed4 at::native::copy_()
[2m[36m(pid=11088)[0m     @     0x7f11b70495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11088)[0m     @     0x7f11b7151148 at::Tensor::copy_()
[2m[36m(pid=11071)[0m     @     0x7f0a3888bed4 at::native::copy_()
[2m[36m(pid=11071)[0m     @     0x7f0a38fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11071)[0m     @     0x7f0a390d6148 at::Tensor::copy_()
[2m[36m(pid=11071)[0m     @     0x7f0a3accd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11103)[0m     @     0x7f7dfe93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11103)[0m     @     0x7f7dfea45148 at::Tensor::copy_()
[2m[36m(pid=11103)[0m     @     0x7f7e0063c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11096)[0m     @     0x7f6fdfa5bed4 at::native::copy_()
[2m[36m(pid=11096)[0m     @     0x7f6fe019e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11096)[0m     @     0x7f6fe02a6148 at::Tensor::copy_()
[2m[36m(pid=11016)[0m     @     0x7f47f7f5bed4 at::native::copy_()
[2m[36m(pid=11016)[0m     @     0x7f47f869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10992)[0m     @     0x7f1abd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10992)[0m     @     0x7f1abd956148 at::Tensor::copy_()
[2m[36m(pid=10992)[0m     @     0x7f1abf54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0faf2d6ed4 at::native::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0fafa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11060)[0m     @     0x7f067b729148 at::Tensor::copy_()
[2m[36m(pid=11060)[0m     @     0x7f067d320989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11060)[0m     @     0x7f067b6215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11048)[0m     @     0x7ee5f384aed4 at::native::copy_()
[2m[36m(pid=11048)[0m     @     0x7ee5f3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11048)[0m     @     0x7ee5f4095148 at::Tensor::copy_()
[2m[36m(pid=11003)[0m     @     0x7f4eac3875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11003)[0m     @     0x7f4eac48f148 at::Tensor::copy_()
[2m[36m(pid=11003)[0m     @     0x7f4eae086989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11003)[0m     @     0x7f4eac3875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11058)[0m     @     0x7f2d43627148 at::Tensor::copy_()
[2m[36m(pid=11058)[0m     @     0x7f2d4521e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11058)[0m     @     0x7f2d4351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11106)[0m     @     0x7f3f22b3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11106)[0m     @     0x7f3f22c47148 at::Tensor::copy_()
[2m[36m(pid=11106)[0m     @     0x7f3f2483e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11001)[0m     @     0x7f790b888ed4 at::native::copy_()
[2m[36m(pid=11001)[0m     @     0x7f790bfcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11001)[0m     @     0x7f790c0d3148 at::Tensor::copy_()
[2m[36m(pid=11001)[0m     @     0x7f790dcca989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11014)[0m     @     0x7f646f58ab53 at::TensorIterator::for_each()
[2m[36m(pid=11014)[0m     @     0x7f646f58ae11 at::TensorIterator::for_each()
[2m[36m(pid=11014)[0m     @     0x7f64722a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11014)[0m     @     0x7f64722c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11056)[0m     @     0x7f0646692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11056)[0m     @     0x7f0646692b53 at::TensorIterator::for_each()
[2m[36m(pid=11056)[0m     @     0x7f0646692e11 at::TensorIterator::for_each()
[2m[36m(pid=11097)[0m     @     0x7f3421f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11097)[0m     @     0x7f3421f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=11097)[0m     @     0x7f3421f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=11024)[0m     @     0x7f25984bdb53 at::TensorIterator::for_each()
[2m[36m(pid=11024)[0m     @     0x7f25984bde11 at::TensorIterator::for_each()
[2m[36m(pid=11024)[0m     @     0x7f259b1d6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11024)[0m     @     0x7f259b1f9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11070)[0m     @     0x7f776bff5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11070)[0m     @     0x7f77692e964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11070)[0m     @     0x7f77692ec977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11070)[0m     @     0x7f77692ecb53 at::TensorIterator::for_each()
[2m[36m(pid=11104)[0m     @     0x7f52d12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11104)[0m     @     0x7f52d132b148 at::Tensor::copy_()
[2m[36m(pid=11104)[0m     @     0x7f52d2f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11108)[0m     @     0x7f86a875ded4 at::native::copy_()
[2m[36m(pid=11108)[0m     @     0x7f86a8ea05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11108)[0m     @     0x7f86a8fa8148 at::Tensor::copy_()
[2m[36m(pid=10991)[0m     @     0x7ef29dcc5148 at::Tensor::copy_()
[2m[36m(pid=10991)[0m     @     0x7ef29f8bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10991)[0m     @     0x7ef29dbbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10991)[0m     @     0x7ef29dcc5148 at::Tensor::copy_()
[2m[36m(pid=11069)[0m     @     0x7f46528e2148 at::Tensor::copy_()
[2m[36m(pid=11069)[0m     @     0x7f46544d9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11069)[0m     @     0x7f46527da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11019)[0m     @     0x7fa3c8fd5148 at::Tensor::copy_()
[2m[36m(pid=11019)[0m     @     0x7fa3cabcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11019)[0m     @     0x7fa3c8ecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10984)[0m     @     0x7ecd61f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10984)[0m     @     0x7ecd6024f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10984)[0m     @     0x7ecd60357148 at::Tensor::copy_()
[2m[36m(pid=11061)[0m     @     0x7efaf0ae0ed4 at::native::copy_()
[2m[36m(pid=11061)[0m     @     0x7efaf12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11061)[0m     @     0x7efaf132b148 at::Tensor::copy_()
[2m[36m(pid=10986)[0m     @     0x7f2d7358ae11 at::TensorIterator::for_each()
[2m[36m(pid=10986)[0m     @     0x7f2d762a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10986)[0m     @     0x7f2d762c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10986)[0m     @     0x7f2d73304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10986)[0m     @     0x7f2d73302c3f at::native::copy_impl()
[2m[36m(pid=11002)[0m     @     0x7ef40b135b53 at::TensorIterator::for_each()
[2m[36m(pid=11002)[0m     @     0x7ef40b135e11 at::TensorIterator::for_each()
[2m[36m(pid=11002)[0m     @     0x7ef40de4ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11002)[0m     @     0x7ef40de71cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11002)[0m     @     0x7ef40aeaf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11002)[0m     @     0x7ef40aeadc3f at::native::copy_impl()
[2m[36m(pid=11094)[0m     @     0x7edf72ee8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11094)[0m     @     0x7edf72ee8b53 at::TensorIterator::for_each()
[2m[36m(pid=11094)[0m     @     0x7edf72ee8e11 at::TensorIterator::for_each()
[2m[36m(pid=11094)[0m     @     0x7edf75c01c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11049)[0m     @     0x7fab9832e390 (unknown)
[2m[36m(pid=11049)[0m     @     0x7f7c9a507fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11049)[0m     @     0x7f7c977fb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11066)[0m     @     0x7fc16400f390 (unknown)
[2m[36m(pid=11066)[0m     @     0x7f926612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11066)[0m     @     0x7f926342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11066)[0m     @     0x7f9263424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11090)[0m     @     0x7ef6fbb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11090)[0m     @     0x7ef6fbb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=11090)[0m     @     0x7ef6fbb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=11090)[0m     @     0x7ef6fe895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11090)[0m     @     0x7ef6fe8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11052)[0m     @     0x7f08bab60b53 at::TensorIterator::for_each()
[2m[36m(pid=11052)[0m     @     0x7f08bab60e11 at::TensorIterator::for_each()
[2m[36m(pid=11052)[0m     @     0x7f08bd879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11052)[0m     @     0x7f08bd89ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11052)[0m     @     0x7f08ba8da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11052)[0m     @     0x7f08ba8d8c3f at::native::copy_impl()
[2m[36m(pid=11055)[0m     @     0x7f0d82ced390 (unknown)
[2m[36m(pid=11055)[0m     @     0x7ede84ec7fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11055)[0m     @     0x7ede821bb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11051)[0m     @     0x7efac84bdb53 at::TensorIterator::for_each()
[2m[36m(pid=11051)[0m     @     0x7efac84bde11 at::TensorIterator::for_each()
[2m[36m(pid=11051)[0m     @     0x7efacb1d6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11051)[0m     @     0x7efacb1f9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11082)[0m     @     0x7f956cc5c390 (unknown)
[2m[36m(pid=11082)[0m     @     0x7f666ed02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=11082)[0m     @     0x7f666bff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=11082)[0m     @     0x7f666bff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11082)[0m     @     0x7f666bff9b53 at::TensorIterator::for_each()
[2m[36m(pid=11082)[0m     @     0x7f666bff9e11 at::TensorIterator::for_each()
[2m[36m(pid=11047)[0m     @     0x7fbca235eb53 at::TensorIterator::for_each()
[2m[36m(pid=11047)[0m     @     0x7fbca235ee11 at::TensorIterator::for_each()
[2m[36m(pid=11047)[0m     @     0x7fbca5077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11047)[0m     @     0x7fbca509acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11047)[0m     @     0x7fbca20d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11047)[0m     @     0x7fbca20d6c3f at::native::copy_impl()
[2m[36m(pid=11006)[0m     @     0x7fa1fa2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11006)[0m     @     0x7fa1f7304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11006)[0m     @     0x7fa1f7302c3f at::native::copy_impl()
[2m[36m(pid=11006)[0m     @     0x7fa1f7303ed4 at::native::copy_()
[2m[36m(pid=11006)[0m     @     0x7fa1f7a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10996)[0m     @     0x7f8967ae1148 at::Tensor::copy_()
[2m[36m(pid=10996)[0m     @     0x7f89696d8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10996)[0m     @     0x7f89679d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10996)[0m     @     0x7f8967ae1148 at::Tensor::copy_()
[2m[36m(pid=10996)[0m     @     0x7f896dd97bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10996)[0m     @     0x55871f855fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10996)[0m     @     0x55871f7b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10996)[0m     @     0x55871f83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10996)[0m     @     0x55871f83ca20 method_vectorcall
[2m[36m(pid=10996)[0m     @     0x55871f7b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10996)[0m     @     0x55871f83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10996)[0m     @     0x55871f83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10996)[0m     @     0x55871f7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10996)[0m     @     0x55871f83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10996)[0m     @     0x55871f83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10996)[0m     @     0x55871f7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10996)[0m     @     0x55871f83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10996)[0m     @     0x55871f83c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10996)[0m     @     0x55871f7b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10996)[0m     @     0x55871f83bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x7fb9cc1e2e11 at::TensorIterator::for_each()
[2m[36m(pid=10987)[0m     @     0x7fb9ceefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10987)[0m     @     0x7fb9cef1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10987)[0m     @     0x7fb9cbf5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10987)[0m     @     0x7fb9cbf5ac3f at::native::copy_impl()
[2m[36m(pid=11059)[0m     @     0x7f087c1e2e11 at::TensorIterator::for_each()
[2m[36m(pid=11059)[0m     @     0x7f087eefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11059)[0m     @     0x7f087ef1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11077)[0m     @     0x7fc16418db53 at::TensorIterator::for_each()
[2m[36m(pid=11077)[0m     @     0x7fc16418de11 at::TensorIterator::for_each()
[2m[36m(pid=11077)[0m     @     0x7fc166ea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11077)[0m     @     0x7fc166ec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11053)[0m     @     0x7f1206cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=11053)[0m     @     0x7f12099d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11053)[0m     @     0x7f12099fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11004)[0m     @     0x7f8b55d0dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11004)[0m     @     0x7f8b52d4b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11004)[0m     @     0x7f8b52d49c3f at::native::copy_impl()
[2m[36m(pid=11004)[0m     @     0x7f8b52d4aed4 at::native::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd3a2ed148 at::Tensor::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd3bee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd3a1e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10988)[0m     @     0x7ed0909dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10988)[0m     @     0x7ed0909dac3f at::native::copy_impl()
[2m[36m(pid=10988)[0m     @     0x7ed0909dbed4 at::native::copy_()
[2m[36m(pid=11080)[0m     @     0x7fcc69c1f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11080)[0m     @     0x7fcc67f205cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11080)[0m     @     0x7fcc68028148 at::Tensor::copy_()
[2m[36m(pid=11101)[0m     @     0x7f3a3e26ae11 at::TensorIterator::for_each()
[2m[36m(pid=11101)[0m     @     0x7f3a40f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11101)[0m     @     0x7f3a40fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11008)[0m     @     0x7f01b7ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11008)[0m     @     0x7f01b7ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=10994)[0m     @     0x7fac9e7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10994)[0m     @     0x7fac9e80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10994)[0m     @     0x7fac9b84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10994)[0m     @     0x7fac9b849c3f at::native::copy_impl()
[2m[36m(pid=11072)[0m     @     0x7f4def93d148 at::Tensor::copy_()
[2m[36m(pid=11072)[0m     @     0x7f4df1534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11072)[0m     @     0x7f4def8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11062)[0m     @     0x7f248110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11062)[0m     @     0x7f248110ac3f at::native::copy_impl()
[2m[36m(pid=11062)[0m     @     0x7f248110bed4 at::native::copy_()
[2m[36m(pid=11062)[0m     @     0x7f248184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11068)[0m     @     0x7fb9c5bda148 at::Tensor::copy_()
[2m[36m(pid=11068)[0m     @     0x7fb9cbe90bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11068)[0m     @     0x55eee7bbafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11068)[0m     @     0x55eee7b15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11068)[0m     @     0x55eee7ba0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11068)[0m     @     0x55eee7ba1a20 method_vectorcall
[2m[36m(pid=11068)[0m     @     0x55eee7b15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11068)[0m     @     0x55eee7ba0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11068)[0m     @     0x55eee7ba1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11068)[0m     @     0x55eee7b16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11068)[0m     @     0x55eee7ba0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11068)[0m     @     0x55eee7ba1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11068)[0m     @     0x55eee7b16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11068)[0m     @     0x55eee7ba0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11068)[0m     @     0x55eee7ba1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11068)[0m     @     0x55eee7b16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11068)[0m     @     0x55eee7ba0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11114)[0m     @     0x7effc1a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11114)[0m     @     0x7effbfd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11114)[0m     @     0x7effbfe65148 at::Tensor::copy_()
[2m[36m(pid=11114)[0m     @     0x7effc611bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11114)[0m     @     0x55556decafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11114)[0m     @     0x55556de25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11114)[0m     @     0x55556deb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11114)[0m     @     0x55556deb1a20 method_vectorcall
[2m[36m(pid=11114)[0m     @     0x55556de25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11114)[0m     @     0x55556deb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11114)[0m     @     0x55556deb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11114)[0m     @     0x55556de26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11114)[0m     @     0x55556deb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11114)[0m     @     0x55556deb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11114)[0m     @     0x55556de26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11114)[0m     @     0x55556deb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11114)[0m     @     0x55556deb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11114)[0m     @     0x55556de26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11114)[0m     @     0x55556deb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11075)[0m     @     0x7f8c3feb7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11075)[0m     @     0x7f8c3e1b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11075)[0m     @     0x7f8c3e2c0148 at::Tensor::copy_()
[2m[36m(pid=11075)[0m     @     0x7f8c44576bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11075)[0m     @     0x562c02a91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11075)[0m     @     0x562c029ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11075)[0m     @     0x562c02a77baf _PyEval_EvalCodeWithName
[2m[36m(pid=11075)[0m     @     0x562c02a78a20 method_vectorcall
[2m[36m(pid=11075)[0m     @     0x562c029ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11075)[0m     @     0x562c02a77baf _PyEval_EvalCodeWithName
[2m[36m(pid=11075)[0m     @     0x562c02a78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11075)[0m     @     0x562c029ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11075)[0m     @     0x562c02a77baf _PyEval_EvalCodeWithName
[2m[36m(pid=11075)[0m     @     0x562c02a78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11075)[0m     @     0x562c029ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11075)[0m     @     0x562c02a77baf _PyEval_EvalCodeWithName
[2m[36m(pid=11075)[0m     @     0x562c02a78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11075)[0m     @     0x562c029ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11075)[0m     @     0x562c02a77baf _PyEval_EvalCodeWithName
[2m[36m(pid=11121)[0m     @     0x7f5ad96375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11121)[0m     @     0x7f5ad973f148 at::Tensor::copy_()
[2m[36m(pid=11121)[0m     @     0x7f5adf9f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11121)[0m     @     0x55c158af7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11121)[0m     @     0x55c158a52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11121)[0m     @     0x55c158addbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11121)[0m     @     0x55c158adea20 method_vectorcall
[2m[36m(pid=11121)[0m     @     0x55c158a52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11121)[0m     @     0x55c158addbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11121)[0m     @     0x55c158ade643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11121)[0m     @     0x55c158a53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11121)[0m     @     0x55c158addbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11121)[0m     @     0x55c158ade643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11121)[0m     @     0x55c158a53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11121)[0m     @     0x55c158addbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11121)[0m     @     0x55c158ade643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11121)[0m     @     0x55c158a53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11121)[0m     @     0x55c158addbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11064)[0m     @     0x7fa61c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11064)[0m     @     0x7fa61c357148 at::Tensor::copy_()
[2m[36m(pid=11064)[0m     @     0x7fa62260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11064)[0m     @     0x5632b3be5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11064)[0m     @     0x5632b3b40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11064)[0m     @     0x5632b3bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11064)[0m     @     0x5632b3bcca20 method_vectorcall
[2m[36m(pid=11064)[0m     @     0x5632b3b40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11064)[0m     @     0x5632b3bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11064)[0m     @     0x5632b3bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11064)[0m     @     0x5632b3b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11064)[0m     @     0x5632b3bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11064)[0m     @     0x5632b3bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11064)[0m     @     0x5632b3b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11064)[0m     @     0x5632b3bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11064)[0m     @     0x5632b3bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11064)[0m     @     0x5632b3b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11064)[0m     @     0x5632b3bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11091)[0m     @     0x7f3a89d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11091)[0m     @     0x7f3a880385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11091)[0m     @     0x7f3a88140148 at::Tensor::copy_()
[2m[36m(pid=11091)[0m     @     0x7f3a8e3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11091)[0m     @     0x561ae5748fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11091)[0m     @     0x561ae56a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11091)[0m     @     0x561ae572ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11091)[0m     @     0x561ae572fa20 method_vectorcall
[2m[36m(pid=11091)[0m     @     0x561ae56a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11091)[0m     @     0x561ae572ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11091)[0m     @     0x561ae572f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11091)[0m     @     0x561ae56a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11091)[0m     @     0x561ae572ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11091)[0m     @     0x561ae572f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11091)[0m     @     0x561ae56a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11091)[0m     @     0x561ae572ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11091)[0m     @     0x561ae572f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11091)[0m     @     0x561ae56a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11091)[0m     @     0x561ae572ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11057)[0m     @     0x7ee496b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11057)[0m     @     0x7ee496c29148 at::Tensor::copy_()
[2m[36m(pid=11057)[0m     @     0x7ee49cedfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11057)[0m     @     0x55b72670dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11057)[0m     @     0x55b726668b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11057)[0m     @     0x55b7266f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11057)[0m     @     0x55b7266f4a20 method_vectorcall
[2m[36m(pid=11057)[0m     @     0x55b726668bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11057)[0m     @     0x55b7266f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11057)[0m     @     0x55b7266f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11057)[0m     @     0x55b726669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11057)[0m     @     0x55b7266f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11057)[0m     @     0x55b7266f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11057)[0m     @     0x55b726669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11057)[0m     @     0x55b7266f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11057)[0m     @     0x55b7266f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11057)[0m     @     0x55b726669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11057)[0m     @     0x55b7266f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11111)[0m     @     0x7f6016c56148 at::Tensor::copy_()
[2m[36m(pid=11111)[0m     @     0x7f601cf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11111)[0m     @     0x555563edafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11111)[0m     @     0x555563e35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11111)[0m     @     0x555563ec0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11111)[0m     @     0x555563ec1a20 method_vectorcall
[2m[36m(pid=11111)[0m     @     0x555563e35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11111)[0m     @     0x555563ec0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11111)[0m     @     0x555563ec1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11111)[0m     @     0x555563e36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11111)[0m     @     0x555563ec0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11111)[0m     @     0x555563ec1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11111)[0m     @     0x555563e36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11111)[0m     @     0x555563ec0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11111)[0m     @     0x555563ec1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11111)[0m     @     0x555563e36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11111)[0m     @     0x555563ec0baf _PyEval_EvalCodeWithName
[2m[36m(pid=10999)[0m     @     0x7fa6ab3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10999)[0m     @     0x7fa6ab4f7148 at::Tensor::copy_()
[2m[36m(pid=10999)[0m     @     0x7fa6b17adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10999)[0m     @     0x55b7624d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10999)[0m     @     0x55b762430b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10999)[0m     @     0x55b7624bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10999)[0m     @     0x55b7624bca20 method_vectorcall
[2m[36m(pid=10999)[0m     @     0x55b762430bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10999)[0m     @     0x55b7624bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10999)[0m     @     0x55b7624bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10999)[0m     @     0x55b762431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10999)[0m     @     0x55b7624bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10999)[0m     @     0x55b7624bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10999)[0m     @     0x55b762431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10999)[0m     @     0x55b7624bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10999)[0m     @     0x55b7624bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10999)[0m     @     0x55b762431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10999)[0m     @     0x55b7624bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11054)[0m     @     0x555a8e52abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11054)[0m     @     0x555a8e52ba20 method_vectorcall
[2m[36m(pid=11054)[0m     @     0x555a8e49fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11054)[0m     @     0x555a8e52abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11054)[0m     @     0x555a8e52b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11054)[0m     @     0x555a8e4a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11054)[0m     @     0x555a8e52abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11054)[0m     @     0x555a8e52b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11054)[0m     @     0x555a8e4a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11054)[0m     @     0x555a8e52abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11054)[0m     @     0x555a8e52b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11054)[0m     @     0x555a8e4a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11054)[0m     @     0x555a8e52abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x7f6196ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11065)[0m     @     0x7f6196ddbc3f at::native::copy_impl()
[2m[36m(pid=11065)[0m     @     0x7f6196ddced4 at::native::copy_()
[2m[36m(pid=11065)[0m     @     0x7f619751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11011)[0m     @     0x7f5610d7c148 at::Tensor::copy_()
[2m[36m(pid=11011)[0m     @     0x7f5617032bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11011)[0m     @     0x55d1e1637fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11011)[0m     @     0x55d1e1592b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11011)[0m     @     0x55d1e161dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11011)[0m     @     0x55d1e161ea20 method_vectorcall
[2m[36m(pid=11011)[0m     @     0x55d1e1592bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11011)[0m     @     0x55d1e161dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11011)[0m     @     0x55d1e161e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11011)[0m     @     0x55d1e1593689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11011)[0m     @     0x55d1e161dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11011)[0m     @     0x55d1e161e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11011)[0m     @     0x55d1e1593689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11011)[0m     @     0x55d1e161dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11011)[0m     @     0x55d1e161e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11011)[0m     @     0x55d1e1593689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11011)[0m     @     0x55d1e161dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10990)[0m     @     0x7f2e9fee8148 at::Tensor::copy_()
[2m[36m(pid=10990)[0m     @     0x7f2ea1adf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10990)[0m     @     0x7f2e9fde05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10990)[0m     @     0x7f2e9fee8148 at::Tensor::copy_()
[2m[36m(pid=10990)[0m     @     0x7f2ea619ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10990)[0m     @     0x560f94c4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10990)[0m     @     0x560f94ba9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10990)[0m     @     0x560f94c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=10990)[0m     @     0x560f94c35a20 method_vectorcall
[2m[36m(pid=10990)[0m     @     0x560f94ba9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10990)[0m     @     0x560f94c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=10990)[0m     @     0x560f94c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10990)[0m     @     0x560f94baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10990)[0m     @     0x560f94c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=10990)[0m     @     0x560f94c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10990)[0m     @     0x560f94baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10990)[0m     @     0x560f94c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=10990)[0m     @     0x560f94c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10990)[0m     @     0x560f94baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10990)[0m     @     0x560f94c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=11000)[0m     @     0x7f5e09226148 at::Tensor::copy_()
[2m[36m(pid=11000)[0m     @     0x7f5e0ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11000)[0m     @     0x7f5e0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11000)[0m     @     0x7f5e09226148 at::Tensor::copy_()
[2m[36m(pid=11000)[0m     @     0x7f5e0f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11000)[0m     @     0x558780082fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11000)[0m     @     0x55877ffddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11000)[0m     @     0x558780068baf _PyEval_EvalCodeWithName
[2m[36m(pid=11000)[0m     @     0x558780069a20 method_vectorcall
[2m[36m(pid=11000)[0m     @     0x55877ffddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x7f4397340148 at::Tensor::copy_()
[2m[36m(pid=11081)[0m     @     0x7f4398f37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11081)[0m     @     0x7f43972385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11081)[0m     @     0x7f4397340148 at::Tensor::copy_()
[2m[36m(pid=11081)[0m     @     0x7f439d5f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11081)[0m     @     0x555589985fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11081)[0m     @     0x5555898e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x55558996bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11081)[0m     @     0x55558996ca20 method_vectorcall
[2m[36m(pid=11081)[0m     @     0x5555898e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x55558996bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11081)[0m     @     0x55558996c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11081)[0m     @     0x5555898e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x55558996bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11081)[0m     @     0x55558996c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11081)[0m     @     0x5555898e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x55558996bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11081)[0m     @     0x55558996c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11081)[0m     @     0x5555898e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11081)[0m     @     0x55558996bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x7f282aec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10995)[0m     @     0x7f2827f07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10995)[0m     @     0x7f2827f05c3f at::native::copy_impl()
[2m[36m(pid=10995)[0m     @     0x7f2827f06ed4 at::native::copy_()
[2m[36m(pid=10995)[0m     @     0x7f28286495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10998)[0m     @     0x7f88f6efc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10998)[0m     @     0x7f88f7004148 at::Tensor::copy_()
[2m[36m(pid=10998)[0m     @     0x7f88fd2babd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10998)[0m     @     0x55676dd33fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10998)[0m     @     0x55676dc8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10998)[0m     @     0x55676dd19baf _PyEval_EvalCodeWithName
[2m[36m(pid=10998)[0m     @     0x55676dd1aa20 method_vectorcall
[2m[36m(pid=10998)[0m     @     0x55676dc8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10998)[0m     @     0x55676dd19baf _PyEval_EvalCodeWithName
[2m[36m(pid=10998)[0m     @     0x55676dd1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10998)[0m     @     0x55676dc8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10998)[0m     @     0x55676dd19baf _PyEval_EvalCodeWithName
[2m[36m(pid=10998)[0m     @     0x55676dd1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10998)[0m     @     0x55676dc8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10998)[0m     @     0x55676dd19baf _PyEval_EvalCodeWithName
[2m[36m(pid=10998)[0m     @     0x55676dd1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10998)[0m     @     0x55676dc8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10998)[0m     @     0x55676dd19baf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x7f612609acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10985)[0m     @     0x7f61230d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10985)[0m     @     0x7f61230d6c3f at::native::copy_impl()
[2m[36m(pid=10985)[0m     @     0x7f61230d7ed4 at::native::copy_()
[2m[36m(pid=10985)[0m     @     0x7f612381a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11078)[0m     @     0x7eff72797e11 at::TensorIterator::for_each()
[2m[36m(pid=11078)[0m     @     0x7eff754b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11078)[0m     @     0x7eff754d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11078)[0m     @     0x7eff72511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11078)[0m     @     0x7eff7250fc3f at::native::copy_impl()
[2m[36m(pid=11078)[0m     @     0x7eff72510ed4 at::native::copy_()
[2m[36m(pid=11017)[0m     @     0x7f86d23ec148 at::Tensor::copy_()
[2m[36m(pid=11017)[0m     @     0x7f86d86a2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11017)[0m     @     0x565430785fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11017)[0m     @     0x5654306e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11017)[0m     @     0x56543076bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11017)[0m     @     0x56543076ca20 method_vectorcall
[2m[36m(pid=11017)[0m     @     0x5654306e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11017)[0m     @     0x56543076bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11017)[0m     @     0x56543076c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11017)[0m     @     0x5654306e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11017)[0m     @     0x56543076bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11017)[0m     @     0x56543076c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11017)[0m     @     0x5654306e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11017)[0m     @     0x56543076bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11017)[0m     @     0x56543076c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11017)[0m     @     0x5654306e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11017)[0m     @     0x56543076bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11050)[0m     @     0x7f7b6f3d0148 at::Tensor::copy_()
[2m[36m(pid=11050)[0m     @     0x7f7b70fc7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11050)[0m     @     0x7f7b6f2c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11050)[0m     @     0x7f7b6f3d0148 at::Tensor::copy_()
[2m[36m(pid=11050)[0m     @     0x7f7b75686bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11050)[0m     @     0x55e90385dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11050)[0m     @     0x55e9037b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11050)[0m     @     0x55e903843baf _PyEval_EvalCodeWithName
[2m[36m(pid=11050)[0m     @     0x55e903844a20 method_vectorcall
[2m[36m(pid=11050)[0m     @     0x55e9037b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11050)[0m     @     0x55e903843baf _PyEval_EvalCodeWithName
[2m[36m(pid=11050)[0m     @     0x55e903844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11050)[0m     @     0x55e9037b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11050)[0m     @     0x55e903843baf _PyEval_EvalCodeWithName
[2m[36m(pid=11050)[0m     @     0x55e903844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11050)[0m     @     0x55e9037b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x7f335cfd5148 at::Tensor::copy_()
[2m[36m(pid=11116)[0m     @     0x7f336328bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11116)[0m     @     0x55e7455ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11116)[0m     @     0x55e745538b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x55e7455c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11116)[0m     @     0x55e7455c4a20 method_vectorcall
[2m[36m(pid=11116)[0m     @     0x55e745538bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x55e7455c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11116)[0m     @     0x55e7455c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11116)[0m     @     0x55e745539689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x55e7455c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11116)[0m     @     0x55e7455c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11116)[0m     @     0x55e745539689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x55e7455c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11116)[0m     @     0x55e7455c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11116)[0m     @     0x55e745539689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11116)[0m     @     0x55e7455c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11083)[0m     @     0x7f617a5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11083)[0m     @     0x7f61788ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11083)[0m     @     0x7f61789d6148 at::Tensor::copy_()
[2m[36m(pid=11083)[0m     @     0x7f617ec8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11083)[0m     @     0x5563814dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11083)[0m     @     0x556381436b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11083)[0m     @     0x5563814c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11083)[0m     @     0x5563814c2a20 method_vectorcall
[2m[36m(pid=11083)[0m     @     0x556381436bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11083)[0m     @     0x5563814c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11083)[0m     @     0x5563814c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11083)[0m     @     0x556381437689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11083)[0m     @     0x5563814c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11083)[0m     @     0x5563814c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11083)[0m     @     0x556381437689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11083)[0m     @     0x5563814c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11083)[0m     @     0x5563814c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11083)[0m     @     0x556381437689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11083)[0m     @     0x5563814c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x7f76e52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11074)[0m     @     0x7f76e532b148 at::Tensor::copy_()
[2m[36m(pid=11074)[0m     @     0x7f76eb5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11074)[0m     @     0x55caf113efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11074)[0m     @     0x55caf1099b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11074)[0m     @     0x55caf1124baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x55caf1125a20 method_vectorcall
[2m[36m(pid=11074)[0m     @     0x55caf1099bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11074)[0m     @     0x55caf1124baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x55caf1125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10983)[0m     @     0x7f250519ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=10983)[0m     @     0x7f25051bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=10983)[0m     @     0x7f25021fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=10983)[0m     @     0x7f25021f9c3f at::native::copy_impl()
[2m[36m(pid=10983)[0m     @     0x7f25021faed4 at::native::copy_()
[2m[36m(pid=11022)[0m     @     0x7f25139f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11022)[0m     @     0x7f25139f4c3f at::native::copy_impl()
[2m[36m(pid=11022)[0m     @     0x7f25139f5ed4 at::native::copy_()
[2m[36m(pid=11022)[0m     @     0x7f25141385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10989)[0m     @     0x7edb4cbba148 at::Tensor::copy_()
[2m[36m(pid=10989)[0m     @     0x7edb52e70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10989)[0m     @     0x55e082aacfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10989)[0m     @     0x55e082a07b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10989)[0m     @     0x55e082a92baf _PyEval_EvalCodeWithName
[2m[36m(pid=10989)[0m     @     0x55e082a93a20 method_vectorcall
[2m[36m(pid=10989)[0m     @     0x55e082a07bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10989)[0m     @     0x55e082a92baf _PyEval_EvalCodeWithName
[2m[36m(pid=10989)[0m     @     0x55e082a93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10989)[0m     @     0x55e082a08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10989)[0m     @     0x55e082a92baf _PyEval_EvalCodeWithName
[2m[36m(pid=10989)[0m     @     0x55e082a93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10989)[0m     @     0x55e082a08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10989)[0m     @     0x55e082a92baf _PyEval_EvalCodeWithName
[2m[36m(pid=10989)[0m     @     0x55e082a93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10989)[0m     @     0x55e082a08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10989)[0m     @     0x55e082a92baf _PyEval_EvalCodeWithName
[2m[36m(pid=11067)[0m     @     0x7f3ced6165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11067)[0m     @     0x7f3ced71e148 at::Tensor::copy_()
[2m[36m(pid=11067)[0m     @     0x7f3cf39d4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11067)[0m     @     0x55b3d63eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11067)[0m     @     0x55b3d6345b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11067)[0m     @     0x55b3d63d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11067)[0m     @     0x55b3d63d1a20 method_vectorcall
[2m[36m(pid=11067)[0m     @     0x55b3d6345bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11067)[0m     @     0x55b3d63d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11067)[0m     @     0x55b3d63d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11067)[0m     @     0x55b3d6346689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11067)[0m     @     0x55b3d63d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11067)[0m     @     0x55b3d63d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11067)[0m     @     0x55b3d6346689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11067)[0m     @     0x55b3d63d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11067)[0m     @     0x55b3d63d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11067)[0m     @     0x55b3d6346689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11067)[0m     @     0x55b3d63d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11088)[0m     @     0x7f11b8d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11088)[0m     @     0x7f11b70495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11088)[0m     @     0x7f11b7151148 at::Tensor::copy_()
[2m[36m(pid=11088)[0m     @     0x7f11bd407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11088)[0m     @     0x55ce9ae56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11088)[0m     @     0x55ce9adb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11088)[0m     @     0x55ce9ae3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11088)[0m     @     0x55ce9ae3da20 method_vectorcall
[2m[36m(pid=11088)[0m     @     0x55ce9adb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11088)[0m     @     0x55ce9ae3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11088)[0m     @     0x55ce9ae3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11088)[0m     @     0x55ce9adb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11088)[0m     @     0x55ce9ae3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11088)[0m     @     0x55ce9ae3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11088)[0m     @     0x55ce9adb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11088)[0m     @     0x55ce9ae3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11088)[0m     @     0x55ce9ae3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11088)[0m     @     0x55ce9adb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11088)[0m     @     0x55ce9ae3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11071)[0m     @     0x7f0a38fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11071)[0m     @     0x7f0a390d6148 at::Tensor::copy_()
[2m[36m(pid=11071)[0m     @     0x7f0a3f38cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11071)[0m     @     0x55736c9aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11071)[0m     @     0x55736c909b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11071)[0m     @     0x55736c994baf _PyEval_EvalCodeWithName
[2m[36m(pid=11071)[0m     @     0x55736c995a20 method_vectorcall
[2m[36m(pid=11071)[0m     @     0x55736c909bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11071)[0m     @     0x55736c994baf _PyEval_EvalCodeWithName
[2m[36m(pid=11071)[0m     @     0x55736c995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11071)[0m     @     0x55736c90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11071)[0m     @     0x55736c994baf _PyEval_EvalCodeWithName
[2m[36m(pid=11071)[0m     @     0x55736c995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11071)[0m     @     0x55736c90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11071)[0m     @     0x55736c994baf _PyEval_EvalCodeWithName
[2m[36m(pid=11071)[0m     @     0x55736c995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11071)[0m     @     0x55736c90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11071)[0m     @     0x55736c994baf _PyEval_EvalCodeWithName
[2m[36m(pid=11103)[0m     @     0x7f7dfe93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11103)[0m     @     0x7f7dfea45148 at::Tensor::copy_()
[2m[36m(pid=11103)[0m     @     0x7f7e04cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11103)[0m     @     0x559e82223fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11103)[0m     @     0x559e8217eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11103)[0m     @     0x559e82209baf _PyEval_EvalCodeWithName
[2m[36m(pid=11103)[0m     @     0x559e8220aa20 method_vectorcall
[2m[36m(pid=11103)[0m     @     0x559e8217ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11103)[0m     @     0x559e82209baf _PyEval_EvalCodeWithName
[2m[36m(pid=11103)[0m     @     0x559e8220a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11103)[0m     @     0x559e8217f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11103)[0m     @     0x559e82209baf _PyEval_EvalCodeWithName
[2m[36m(pid=11103)[0m     @     0x559e8220a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11103)[0m     @     0x559e8217f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11103)[0m     @     0x559e82209baf _PyEval_EvalCodeWithName
[2m[36m(pid=11103)[0m     @     0x559e8220a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11103)[0m     @     0x559e8217f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11103)[0m     @     0x559e82209baf _PyEval_EvalCodeWithName
[2m[36m(pid=11096)[0m     @     0x7f6fe1e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11096)[0m     @     0x7f6fe019e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11096)[0m     @     0x7f6fe02a6148 at::Tensor::copy_()
[2m[36m(pid=11096)[0m     @     0x7f6fe655cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11096)[0m     @     0x55f9b3c9dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11096)[0m     @     0x55f9b3bf8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11096)[0m     @     0x55f9b3c83baf _PyEval_EvalCodeWithName
[2m[36m(pid=11096)[0m     @     0x55f9b3c84a20 method_vectorcall
[2m[36m(pid=11096)[0m     @     0x55f9b3bf8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11096)[0m     @     0x55f9b3c83baf _PyEval_EvalCodeWithName
[2m[36m(pid=11096)[0m     @     0x55f9b3c84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11096)[0m     @     0x55f9b3bf9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11096)[0m     @     0x55f9b3c83baf _PyEval_EvalCodeWithName
[2m[36m(pid=11096)[0m     @     0x55f9b3c84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11096)[0m     @     0x55f9b3bf9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11096)[0m     @     0x55f9b3c83baf _PyEval_EvalCodeWithName
[2m[36m(pid=11096)[0m     @     0x55f9b3c84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11096)[0m     @     0x55f9b3bf9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11096)[0m     @     0x55f9b3c83baf _PyEval_EvalCodeWithName
[2m[36m(pid=11016)[0m     @     0x7f47f87a6148 at::Tensor::copy_()
[2m[36m(pid=11016)[0m     @     0x7f47fa39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11016)[0m     @     0x7f47f869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11016)[0m     @     0x7f47f87a6148 at::Tensor::copy_()
[2m[36m(pid=11016)[0m     @     0x7f47fea5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11016)[0m     @     0x55eb2f100fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11016)[0m     @     0x55eb2f05bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11016)[0m     @     0x55eb2f0e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11016)[0m     @     0x55eb2f0e7a20 method_vectorcall
[2m[36m(pid=11016)[0m     @     0x55eb2f05bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11016)[0m     @     0x55eb2f0e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11016)[0m     @     0x55eb2f0e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11016)[0m     @     0x55eb2f05c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11016)[0m     @     0x55eb2f0e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11016)[0m     @     0x55eb2f0e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11016)[0m     @     0x55eb2f05c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11016)[0m     @     0x55eb2f0e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11016)[0m     @     0x55eb2f0e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11016)[0m     @     0x55eb2f05c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11016)[0m     @     0x55eb2f0e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=10992)[0m     @     0x7f1abd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10992)[0m     @     0x7f1abd956148 at::Tensor::copy_()
[2m[36m(pid=10992)[0m     @     0x7f1ac3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10992)[0m     @     0x561ba9c82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10992)[0m     @     0x561ba9bddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10992)[0m     @     0x561ba9c68baf _PyEval_EvalCodeWithName
[2m[36m(pid=10992)[0m     @     0x561ba9c69a20 method_vectorcall
[2m[36m(pid=10992)[0m     @     0x561ba9bddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10992)[0m     @     0x561ba9c68baf _PyEval_EvalCodeWithName
[2m[36m(pid=10992)[0m     @     0x561ba9c69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10992)[0m     @     0x561ba9bde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10992)[0m     @     0x561ba9c68baf _PyEval_EvalCodeWithName
[2m[36m(pid=10992)[0m     @     0x561ba9c69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10992)[0m     @     0x561ba9bde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10992)[0m     @     0x561ba9c68baf _PyEval_EvalCodeWithName
[2m[36m(pid=10992)[0m     @     0x561ba9c69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10992)[0m     @     0x561ba9bde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10992)[0m     @     0x561ba9c68baf _PyEval_EvalCodeWithName
[2m[36m(pid=11025)[0m     @     0x7f0fafb21148 at::Tensor::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0fb1718989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0fafa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11025)[0m     @     0x7f0fafb21148 at::Tensor::copy_()
[2m[36m(pid=11025)[0m     @     0x7f0fb5dd7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11025)[0m     @     0x55f83ba17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11025)[0m     @     0x55f83b972b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11025)[0m     @     0x55f83b9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11025)[0m     @     0x55f83b9fea20 method_vectorcall
[2m[36m(pid=11025)[0m     @     0x55f83b972bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11025)[0m     @     0x55f83b9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11025)[0m     @     0x55f83b9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11025)[0m     @     0x55f83b973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11025)[0m     @     0x55f83b9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11025)[0m     @     0x55f83b9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11025)[0m     @     0x55f83b973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11025)[0m     @     0x55f83b9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11025)[0m     @     0x55f83b9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11025)[0m     @     0x55f83b973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11025)[0m     @     0x55f83b9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11060)[0m     @     0x7f067b729148 at::Tensor::copy_()
[2m[36m(pid=11060)[0m     @     0x7f06819dfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11060)[0m     @     0x56543d8cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11060)[0m     @     0x56543d825b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11060)[0m     @     0x56543d8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11060)[0m     @     0x56543d8b1a20 method_vectorcall
[2m[36m(pid=11060)[0m     @     0x56543d825bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11060)[0m     @     0x56543d8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11060)[0m     @     0x56543d8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11060)[0m     @     0x56543d826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11060)[0m     @     0x56543d8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11060)[0m     @     0x56543d8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11060)[0m     @     0x56543d826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11060)[0m     @     0x56543d8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11060)[0m     @     0x56543d8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11060)[0m     @     0x56543d826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11060)[0m     @     0x56543d8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11048)[0m     @     0x7ee5f5c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11048)[0m     @     0x7ee5f3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11048)[0m     @     0x7ee5f4095148 at::Tensor::copy_()
[2m[36m(pid=11048)[0m     @     0x7ee5fa34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11048)[0m     @     0x55994653dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11048)[0m     @     0x559946498b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11048)[0m     @     0x559946523baf _PyEval_EvalCodeWithName
[2m[36m(pid=11048)[0m     @     0x559946524a20 method_vectorcall
[2m[36m(pid=11048)[0m     @     0x559946498bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11048)[0m     @     0x559946523baf _PyEval_EvalCodeWithName
[2m[36m(pid=11048)[0m     @     0x559946524643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11048)[0m     @     0x559946499689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11048)[0m     @     0x559946523baf _PyEval_EvalCodeWithName
[2m[36m(pid=11048)[0m     @     0x559946524643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11048)[0m     @     0x559946499689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11048)[0m     @     0x559946523baf _PyEval_EvalCodeWithName
[2m[36m(pid=11048)[0m     @     0x559946524643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11048)[0m     @     0x559946499689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11048)[0m     @     0x559946523baf _PyEval_EvalCodeWithName
[2m[36m(pid=11003)[0m     @     0x7f4eac48f148 at::Tensor::copy_()
[2m[36m(pid=11003)[0m     @     0x7f4eb2745bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11003)[0m     @     0x55ce7a70dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11003)[0m     @     0x55ce7a668b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11003)[0m     @     0x55ce7a6f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11003)[0m     @     0x55ce7a6f4a20 method_vectorcall
[2m[36m(pid=11003)[0m     @     0x55ce7a668bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11003)[0m     @     0x55ce7a6f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11003)[0m     @     0x55ce7a6f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11003)[0m     @     0x55ce7a669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11003)[0m     @     0x55ce7a6f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11003)[0m     @     0x55ce7a6f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11003)[0m     @     0x55ce7a669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11003)[0m     @     0x55ce7a6f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11003)[0m     @     0x55ce7a6f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11003)[0m     @     0x55ce7a669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11003)[0m     @     0x55ce7a6f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=11058)[0m     @     0x7f2d43627148 at::Tensor::copy_()
[2m[36m(pid=11058)[0m     @     0x7f2d498ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11058)[0m     @     0x56051e3c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11058)[0m     @     0x56051e31cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11058)[0m     @     0x56051e3a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11058)[0m     @     0x56051e3a8a20 method_vectorcall
[2m[36m(pid=11058)[0m     @     0x56051e31cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11058)[0m     @     0x56051e3a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11058)[0m     @     0x56051e3a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11058)[0m     @     0x56051e31d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11058)[0m     @     0x56051e3a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11058)[0m     @     0x56051e3a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11058)[0m     @     0x56051e31d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11058)[0m     @     0x56051e3a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11058)[0m     @     0x56051e3a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11058)[0m     @     0x56051e31d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11058)[0m     @     0x56051e3a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11106)[0m     @     0x7f3f22b3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11106)[0m     @     0x7f3f22c47148 at::Tensor::copy_()
[2m[36m(pid=11106)[0m     @     0x7f3f28efdbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11106)[0m     @     0x561902051fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11106)[0m     @     0x561901facb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11106)[0m     @     0x561902037baf _PyEval_EvalCodeWithName
[2m[36m(pid=11106)[0m     @     0x561902038a20 method_vectorcall
[2m[36m(pid=11106)[0m     @     0x561901facbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11106)[0m     @     0x561902037baf _PyEval_EvalCodeWithName
[2m[36m(pid=11106)[0m     @     0x561902038643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11106)[0m     @     0x561901fad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11106)[0m     @     0x561902037baf _PyEval_EvalCodeWithName
[2m[36m(pid=11106)[0m     @     0x561902038643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11106)[0m     @     0x561901fad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11106)[0m     @     0x561902037baf _PyEval_EvalCodeWithName
[2m[36m(pid=11106)[0m     @     0x561902038643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11106)[0m     @     0x561901fad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11106)[0m     @     0x561902037baf _PyEval_EvalCodeWithName
[2m[36m(pid=11001)[0m     @     0x7f790bfcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11001)[0m     @     0x7f790c0d3148 at::Tensor::copy_()
[2m[36m(pid=11001)[0m     @     0x7f7912389bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11001)[0m     @     0x5598c1270fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11001)[0m     @     0x5598c11cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11001)[0m     @     0x5598c1256baf _PyEval_EvalCodeWithName
[2m[36m(pid=11001)[0m     @     0x5598c1257a20 method_vectorcall
[2m[36m(pid=11001)[0m     @     0x5598c11cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11001)[0m     @     0x5598c1256baf _PyEval_EvalCodeWithName
[2m[36m(pid=11001)[0m     @     0x5598c1257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11001)[0m     @     0x5598c11cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11001)[0m     @     0x5598c1256baf _PyEval_EvalCodeWithName
[2m[36m(pid=11001)[0m     @     0x5598c1257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11001)[0m     @     0x5598c11cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11001)[0m     @     0x5598c1256baf _PyEval_EvalCodeWithName
[2m[36m(pid=11001)[0m     @     0x5598c1257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11001)[0m     @     0x5598c11cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11001)[0m     @     0x5598c1256baf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x7f646f304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11014)[0m     @     0x7f646f302c3f at::native::copy_impl()
[2m[36m(pid=11014)[0m     @     0x7f646f303ed4 at::native::copy_()
[2m[36m(pid=11014)[0m     @     0x7f646fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11056)[0m     @     0x7f06493abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11056)[0m     @     0x7f06493cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11056)[0m     @     0x7f064640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11056)[0m     @     0x7f064640ac3f at::native::copy_impl()
[2m[36m(pid=11056)[0m     @     0x7f064640bed4 at::native::copy_()
[2m[36m(pid=11056)[0m     @     0x7f0646b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11097)[0m     @     0x7f3424ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11097)[0m     @     0x7f3424ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11097)[0m     @     0x7f3421d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11097)[0m     @     0x7f3421d07c3f at::native::copy_impl()
[2m[36m(pid=11097)[0m     @     0x7f3421d08ed4 at::native::copy_()
[2m[36m(pid=11097)[0m     @     0x7f342244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11024)[0m     @     0x7f2598237009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11024)[0m     @     0x7f2598235c3f at::native::copy_impl()
[2m[36m(pid=11024)[0m     @     0x7f2598236ed4 at::native::copy_()
[2m[36m(pid=11024)[0m     @     0x7f25989795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11070)[0m     @     0x7f77692ece11 at::TensorIterator::for_each()
[2m[36m(pid=11070)[0m     @     0x7f776c005c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11070)[0m     @     0x7f776c028cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11070)[0m     @     0x7f7769066009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11070)[0m     @     0x7f7769064c3f at::native::copy_impl()
[2m[36m(pid=11104)[0m     @     0x7f52d12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11104)[0m     @     0x7f52d132b148 at::Tensor::copy_()
[2m[36m(pid=11104)[0m     @     0x7f52d75e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11104)[0m     @     0x558b516dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11104)[0m     @     0x558b5163ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11104)[0m     @     0x558b516c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=11104)[0m     @     0x558b516c6a20 method_vectorcall
[2m[36m(pid=11104)[0m     @     0x558b5163abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11104)[0m     @     0x558b516c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=11104)[0m     @     0x558b516c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11104)[0m     @     0x558b5163b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11104)[0m     @     0x558b516c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=11104)[0m     @     0x558b516c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11104)[0m     @     0x558b5163b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11104)[0m     @     0x558b516c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=11104)[0m     @     0x558b516c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11104)[0m     @     0x558b5163b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11104)[0m     @     0x558b516c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=11108)[0m     @     0x7f86aab9f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11108)[0m     @     0x7f86a8ea05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11108)[0m     @     0x7f86a8fa8148 at::Tensor::copy_()
[2m[36m(pid=11108)[0m     @     0x7f86af25ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11108)[0m     @     0x55ce971dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11108)[0m     @     0x55ce97135b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11108)[0m     @     0x55ce971c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11108)[0m     @     0x55ce971c1a20 method_vectorcall
[2m[36m(pid=11108)[0m     @     0x55ce97135bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11108)[0m     @     0x55ce971c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11108)[0m     @     0x55ce971c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11108)[0m     @     0x55ce97136689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11108)[0m     @     0x55ce971c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11108)[0m     @     0x55ce971c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11108)[0m     @     0x55ce97136689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11108)[0m     @     0x55ce971c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11108)[0m     @     0x55ce971c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11108)[0m     @     0x55ce97136689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11108)[0m     @     0x55ce971c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=10991)[0m     @     0x7ef2a3f7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10991)[0m     @     0x56486577efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10991)[0m     @     0x5648656d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10991)[0m     @     0x564865764baf _PyEval_EvalCodeWithName
[2m[36m(pid=10991)[0m     @     0x564865765a20 method_vectorcall
[2m[36m(pid=10991)[0m     @     0x5648656d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10991)[0m     @     0x564865764baf _PyEval_EvalCodeWithName
[2m[36m(pid=10991)[0m     @     0x564865765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10991)[0m     @     0x5648656da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10991)[0m     @     0x564865764baf _PyEval_EvalCodeWithName
[2m[36m(pid=10991)[0m     @     0x564865765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10991)[0m     @     0x5648656da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10991)[0m     @     0x564865764baf _PyEval_EvalCodeWithName
[2m[36m(pid=10991)[0m     @     0x564865765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10991)[0m     @     0x5648656da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10991)[0m     @     0x564865764baf _PyEval_EvalCodeWithName
[2m[36m(pid=11069)[0m     @     0x7f46528e2148 at::Tensor::copy_()
[2m[36m(pid=11069)[0m     @     0x7f4658b98bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11069)[0m     @     0x561f5b3b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11069)[0m     @     0x561f5b30bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11069)[0m     @     0x561f5b396baf _PyEval_EvalCodeWithName
[2m[36m(pid=11069)[0m     @     0x561f5b397a20 method_vectorcall
[2m[36m(pid=11069)[0m     @     0x561f5b30bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11069)[0m     @     0x561f5b396baf _PyEval_EvalCodeWithName
[2m[36m(pid=11069)[0m     @     0x561f5b397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11069)[0m     @     0x561f5b30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11069)[0m     @     0x561f5b396baf _PyEval_EvalCodeWithName
[2m[36m(pid=11069)[0m     @     0x561f5b397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11069)[0m     @     0x561f5b30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11069)[0m     @     0x561f5b396baf _PyEval_EvalCodeWithName
[2m[36m(pid=11069)[0m     @     0x561f5b397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11069)[0m     @     0x561f5b30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11069)[0m     @     0x561f5b396baf _PyEval_EvalCodeWithName
[2m[36m(pid=11019)[0m     @     0x7fa3c8fd5148 at::Tensor::copy_()
[2m[36m(pid=11019)[0m     @     0x7fa3cf28bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11019)[0m     @     0x5584ff705fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11019)[0m     @     0x5584ff660b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11019)[0m     @     0x5584ff6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11019)[0m     @     0x5584ff6eca20 method_vectorcall
[2m[36m(pid=11019)[0m     @     0x5584ff660bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11019)[0m     @     0x5584ff6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11019)[0m     @     0x5584ff6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11019)[0m     @     0x5584ff661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11019)[0m     @     0x5584ff6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11019)[0m     @     0x5584ff6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11019)[0m     @     0x5584ff661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11019)[0m     @     0x5584ff6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11019)[0m     @     0x5584ff6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11019)[0m     @     0x5584ff661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11019)[0m     @     0x5584ff6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10984)[0m     @     0x7ecd6660dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10984)[0m     @     0x55fc0eb6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10984)[0m     @     0x55fc0eac8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10984)[0m     @     0x55fc0eb53baf _PyEval_EvalCodeWithName
[2m[36m(pid=10984)[0m     @     0x55fc0eb54a20 method_vectorcall
[2m[36m(pid=10984)[0m     @     0x55fc0eac8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10984)[0m     @     0x55fc0eb53baf _PyEval_EvalCodeWithName
[2m[36m(pid=10984)[0m     @     0x55fc0eb54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10984)[0m     @     0x55fc0eac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10984)[0m     @     0x55fc0eb53baf _PyEval_EvalCodeWithName
[2m[36m(pid=10984)[0m     @     0x55fc0eb54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10984)[0m     @     0x55fc0eac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10984)[0m     @     0x55fc0eb53baf _PyEval_EvalCodeWithName
[2m[36m(pid=10984)[0m     @     0x55fc0eb54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10984)[0m     @     0x55fc0eac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10984)[0m     @     0x55fc0eb53baf _PyEval_EvalCodeWithName
[2m[36m(pid=11061)[0m     @     0x7efaf2f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11061)[0m     @     0x7efaf12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11061)[0m     @     0x7efaf132b148 at::Tensor::copy_()
[2m[36m(pid=11061)[0m     @     0x7efaf75e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11061)[0m     @     0x55e60dc8dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11061)[0m     @     0x55e60dbe8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11061)[0m     @     0x55e60dc73baf _PyEval_EvalCodeWithName
[2m[36m(pid=11061)[0m     @     0x55e60dc74a20 method_vectorcall
[2m[36m(pid=11061)[0m     @     0x55e60dbe8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11061)[0m     @     0x55e60dc73baf _PyEval_EvalCodeWithName
[2m[36m(pid=11061)[0m     @     0x55e60dc74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11061)[0m     @     0x55e60dbe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11061)[0m     @     0x55e60dc73baf _PyEval_EvalCodeWithName
[2m[36m(pid=11061)[0m     @     0x55e60dc74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11061)[0m     @     0x55e60dbe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11061)[0m     @     0x55e60dc73baf _PyEval_EvalCodeWithName
[2m[36m(pid=11061)[0m     @     0x55e60dc74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11061)[0m     @     0x55e60dbe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11061)[0m     @     0x55e60dc73baf _PyEval_EvalCodeWithName
[2m[36m(pid=10986)[0m     @     0x7f2d73303ed4 at::native::copy_()
[2m[36m(pid=10986)[0m     @     0x7f2d73a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10986)[0m     @     0x7f2d73b4e148 at::Tensor::copy_()
[2m[36m(pid=11002)[0m     @     0x7ef40aeaeed4 at::native::copy_()
[2m[36m(pid=11002)[0m     @     0x7ef40b5f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11002)[0m     @     0x7ef40b6f9148 at::Tensor::copy_()
[2m[36m(pid=11094)[0m     @     0x7edf75c24cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11094)[0m     @     0x7edf72c62009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11094)[0m     @     0x7edf72c60c3f at::native::copy_impl()
[2m[36m(pid=11094)[0m     @     0x7edf72c61ed4 at::native::copy_()
[2m[36m(pid=11049)[0m     @     0x7f7c977fe977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11049)[0m     @     0x7f7c977feb53 at::TensorIterator::for_each()
[2m[36m(pid=11066)[0m     @     0x7f9263424b53 at::TensorIterator::for_each()
[2m[36m(pid=11066)[0m     @     0x7f9263424e11 at::TensorIterator::for_each()
[2m[36m(pid=11090)[0m     @     0x7ef6fb8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11090)[0m     @     0x7ef6fb8f4c3f at::native::copy_impl()
[2m[36m(pid=11090)[0m     @     0x7ef6fb8f5ed4 at::native::copy_()
[2m[36m(pid=11090)[0m     @     0x7ef6fc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11052)[0m     @     0x7f08ba8d9ed4 at::native::copy_()
[2m[36m(pid=11052)[0m     @     0x7f08bb01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11052)[0m     @     0x7f08bb124148 at::Tensor::copy_()
[2m[36m(pid=11052)[0m     @     0x7f08bcd1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede821be977 at::TensorIterator::serial_for_each()
[2m[36m(pid=11055)[0m     @     0x7ede821beb53 at::TensorIterator::for_each()
[2m[36m(pid=11051)[0m     @     0x7efac8237009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11051)[0m     @     0x7efac8235c3f at::native::copy_impl()
[2m[36m(pid=11051)[0m     @     0x7efac8236ed4 at::native::copy_()
[2m[36m(pid=11051)[0m     @     0x7efac89795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11051)[0m     @     0x7efac8a81148 at::Tensor::copy_()
[2m[36m(pid=11082)[0m     @     0x7f666ed12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11082)[0m     @     0x7f666ed35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11082)[0m     @     0x7f666bd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11082)[0m     @     0x7f666bd71c3f at::native::copy_impl()
[2m[36m(pid=11082)[0m     @     0x7f666bd72ed4 at::native::copy_()
[2m[36m(pid=11047)[0m     @     0x7fbca20d7ed4 at::native::copy_()
[2m[36m(pid=11047)[0m     @     0x7fbca281a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11047)[0m     @     0x7fbca2922148 at::Tensor::copy_()
[2m[36m(pid=11047)[0m     @     0x7fbca4519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11006)[0m     @     0x7fa1f7b4e148 at::Tensor::copy_()
[2m[36m(pid=11006)[0m     @     0x7fa1f9745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11006)[0m     @     0x7fa1f7a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10987)[0m     @     0x7fb9cbf5bed4 at::native::copy_()
[2m[36m(pid=10987)[0m     @     0x7fb9cc69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10987)[0m     @     0x7fb9cc7a6148 at::Tensor::copy_()
[2m[36m(pid=11059)[0m     @     0x7f087bf5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11059)[0m     @     0x7f087bf5ac3f at::native::copy_impl()
[2m[36m(pid=11059)[0m     @     0x7f087bf5bed4 at::native::copy_()
[2m[36m(pid=11059)[0m     @     0x7f087c69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11077)[0m     @     0x7fc163f07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11077)[0m     @     0x7fc163f05c3f at::native::copy_impl()
[2m[36m(pid=11077)[0m     @     0x7fc163f06ed4 at::native::copy_()
[2m[36m(pid=11077)[0m     @     0x7fc1646495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11053)[0m     @     0x7f1206a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11053)[0m     @     0x7f1206a37c3f at::native::copy_impl()
[2m[36m(pid=11053)[0m     @     0x7f1206a38ed4 at::native::copy_()
[2m[36m(pid=11053)[0m     @     0x7f120717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11004)[0m     @     0x7f8b5348d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11004)[0m     @     0x7f8b53595148 at::Tensor::copy_()
[2m[36m(pid=11004)[0m     @     0x7f8b5518c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd3a2ed148 at::Tensor::copy_()
[2m[36m(pid=11063)[0m     @     0x7efd405a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11063)[0m     @     0x5573cc768fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11063)[0m     @     0x5573cc6c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11063)[0m     @     0x5573cc74ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11063)[0m     @     0x5573cc74fa20 method_vectorcall
[2m[36m(pid=11063)[0m     @     0x5573cc6c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11063)[0m     @     0x5573cc74ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11063)[0m     @     0x5573cc74f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11063)[0m     @     0x5573cc6c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11063)[0m     @     0x5573cc74ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11063)[0m     @     0x5573cc74f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11063)[0m     @     0x5573cc6c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11063)[0m     @     0x5573cc74ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11063)[0m     @     0x5573cc74f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11063)[0m     @     0x5573cc6c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11063)[0m     @     0x5573cc74ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x7ed09111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10988)[0m     @     0x7ed091226148 at::Tensor::copy_()
[2m[36m(pid=10988)[0m     @     0x7ed092e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10988)[0m     @     0x7ed09111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10988)[0m     @     0x7ed091226148 at::Tensor::copy_()
[2m[36m(pid=11080)[0m     @     0x7fcc6e2debd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11080)[0m     @     0x55ef99dc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11080)[0m     @     0x55ef99d1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11080)[0m     @     0x55ef99da8baf _PyEval_EvalCodeWithName
[2m[36m(pid=11080)[0m     @     0x55ef99da9a20 method_vectorcall
[2m[36m(pid=11080)[0m     @     0x55ef99d1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11080)[0m     @     0x55ef99da8baf _PyEval_EvalCodeWithName
[2m[36m(pid=11080)[0m     @     0x55ef99da9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11080)[0m     @     0x55ef99d1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11080)[0m     @     0x55ef99da8baf _PyEval_EvalCodeWithName
[2m[36m(pid=11080)[0m     @     0x55ef99da9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11080)[0m     @     0x55ef99d1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11080)[0m     @     0x55ef99da8baf _PyEval_EvalCodeWithName
[2m[36m(pid=11080)[0m     @     0x55ef99da9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11080)[0m     @     0x55ef99d1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11080)[0m     @     0x55ef99da8baf _PyEval_EvalCodeWithName
2020-11-05 10:58:43,272	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=11101)[0m     @     0x7f3a3dfe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11101)[0m     @     0x7f3a3dfe2c3f at::native::copy_impl()
[2m[36m(pid=11101)[0m     @     0x7f3a3dfe3ed4 at::native::copy_()
[2m[36m(pid=11101)[0m     @     0x7f3a3e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11101)[0m     @     0x7f3a3e82e148 at::Tensor::copy_()
[2m[36m(pid=11008)[0m     @     0x7f01b7ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=11008)[0m     @     0x7f01ba7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11008)[0m     @     0x7f01ba80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11008)[0m     @     0x7f01b784b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11008)[0m     @     0x7f01b7849c3f at::native::copy_impl()
[2m[36m(pid=11008)[0m     @     0x7f01b784aed4 at::native::copy_()
[2m[36m(pid=10994)[0m     @     0x7fac9b84aed4 at::native::copy_()
[2m[36m(pid=10994)[0m     @     0x7fac9bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10994)[0m     @     0x7fac9c095148 at::Tensor::copy_()
[2m[36m(pid=10994)[0m     @     0x7fac9dc8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11072)[0m     @     0x7f4def93d148 at::Tensor::copy_()
[2m[36m(pid=11072)[0m     @     0x7f4df5bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11072)[0m     @     0x5623e6390fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11072)[0m     @     0x5623e62ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11072)[0m     @     0x5623e6376baf _PyEval_EvalCodeWithName
[2m[36m(pid=11072)[0m     @     0x5623e6377a20 method_vectorcall
[2m[36m(pid=11072)[0m     @     0x5623e62ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11072)[0m     @     0x5623e6376baf _PyEval_EvalCodeWithName
[2m[36m(pid=11072)[0m     @     0x5623e6377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11072)[0m     @     0x5623e62ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11072)[0m     @     0x5623e6376baf _PyEval_EvalCodeWithName
[2m[36m(pid=11072)[0m     @     0x5623e6377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11072)[0m     @     0x5623e62ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11072)[0m     @     0x5623e6376baf _PyEval_EvalCodeWithName
[2m[36m(pid=11072)[0m     @     0x5623e6377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11072)[0m     @     0x5623e62ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11072)[0m     @     0x5623e6376baf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x7f2481956148 at::Tensor::copy_()
[2m[36m(pid=11062)[0m     @     0x7f248354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11062)[0m     @     0x7f248184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11062)[0m     @     0x7f2481956148 at::Tensor::copy_()
[2m[36m(pid=11065)[0m     @     0x7f6197627148 at::Tensor::copy_()
[2m[36m(pid=11065)[0m     @     0x7f619921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11065)[0m     @     0x7f619751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11000)[0m     @     0x558780068baf _PyEval_EvalCodeWithName
[2m[36m(pid=11000)[0m     @     0x558780069643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11000)[0m     @     0x55877ffde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11000)[0m     @     0x558780068baf _PyEval_EvalCodeWithName
[2m[36m(pid=11000)[0m     @     0x558780069643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11000)[0m     @     0x55877ffde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11000)[0m     @     0x558780068baf _PyEval_EvalCodeWithName
[2m[36m(pid=11000)[0m     @     0x558780069643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11000)[0m     @     0x55877ffde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11000)[0m     @     0x558780068baf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x7f2828751148 at::Tensor::copy_()
[2m[36m(pid=10995)[0m     @     0x7f282a348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10995)[0m     @     0x7f28286495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10985)[0m     @     0x7f6123922148 at::Tensor::copy_()
[2m[36m(pid=10985)[0m     @     0x7f6125519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10985)[0m     @     0x7f612381a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11078)[0m     @     0x7eff72c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11078)[0m     @     0x7eff72d5b148 at::Tensor::copy_()
[2m[36m(pid=11078)[0m     @     0x7eff74952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11050)[0m     @     0x55e903843baf _PyEval_EvalCodeWithName
[2m[36m(pid=11050)[0m     @     0x55e903844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11050)[0m     @     0x55e9037b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11050)[0m     @     0x55e903843baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x55caf109a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11074)[0m     @     0x55caf1124baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x55caf1125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11074)[0m     @     0x55caf109a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11074)[0m     @     0x55caf1124baf _PyEval_EvalCodeWithName
[2m[36m(pid=11074)[0m     @     0x55caf1125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11074)[0m     @     0x55caf109a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11074)[0m     @     0x55caf1124baf _PyEval_EvalCodeWithName
[2m[36m(pid=10983)[0m     @     0x7f250293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10983)[0m     @     0x7f2502a45148 at::Tensor::copy_()
[2m[36m(pid=10983)[0m     @     0x7f250463c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11022)[0m     @     0x7f2514240148 at::Tensor::copy_()
[2m[36m(pid=11022)[0m     @     0x7f2515e37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11014)[0m     @     0x7f646fb4e148 at::Tensor::copy_()
[2m[36m(pid=11014)[0m     @     0x7f6471745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11014)[0m     @     0x7f646fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11056)[0m     @     0x7f0646c56148 at::Tensor::copy_()
[2m[36m(pid=11056)[0m     @     0x7f064884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11056)[0m     @     0x7f0646b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11097)[0m     @     0x7f3422553148 at::Tensor::copy_()
[2m[36m(pid=11097)[0m     @     0x7f342414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11097)[0m     @     0x7f342244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11024)[0m     @     0x7f2598a81148 at::Tensor::copy_()
[2m[36m(pid=11024)[0m     @     0x7f259a678989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11024)[0m     @     0x7f25989795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11024)[0m     @     0x7f2598a81148 at::Tensor::copy_()
[2m[36m(pid=11024)[0m     @     0x7f259ed37bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11024)[0m     @     0x55ea22b51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11024)[0m     @     0x55ea22aacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x7f7769065ed4 at::native::copy_()
[2m[36m(pid=11070)[0m     @     0x7f77697a85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11070)[0m     @     0x7f77698b0148 at::Tensor::copy_()
[2m[36m(pid=11070)[0m     @     0x7f776b4a7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10986)[0m     @     0x7f2d75745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10986)[0m     @     0x7f2d73a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10986)[0m     @     0x7f2d73b4e148 at::Tensor::copy_()
[2m[36m(pid=10986)[0m     @     0x7f2d79e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10986)[0m     @     0x557b0b7f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10986)[0m     @     0x557b0b752b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10986)[0m     @     0x557b0b7ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10986)[0m     @     0x557b0b7dea20 method_vectorcall
[2m[36m(pid=10986)[0m     @     0x557b0b752bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10986)[0m     @     0x557b0b7ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10986)[0m     @     0x557b0b7de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10986)[0m     @     0x557b0b753689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10986)[0m     @     0x557b0b7ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10986)[0m     @     0x557b0b7de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10986)[0m     @     0x557b0b753689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10986)[0m     @     0x557b0b7ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10986)[0m     @     0x557b0b7de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10986)[0m     @     0x557b0b753689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x7ef40d2f0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11002)[0m     @     0x7ef40b5f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11002)[0m     @     0x7ef40b6f9148 at::Tensor::copy_()
[2m[36m(pid=11094)[0m     @     0x7edf733a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11094)[0m     @     0x7edf734ac148 at::Tensor::copy_()
[2m[36m(pid=11094)[0m     @     0x7edf750a3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11049)[0m     @     0x7f7c977fee11 at::TensorIterator::for_each()
[2m[36m(pid=11049)[0m     @     0x7f7c9a517c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11049)[0m     @     0x7f7c9a53acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11066)[0m     @     0x7f926613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11066)[0m     @     0x7f9266160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11066)[0m     @     0x7f926319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11066)[0m     @     0x7f926319cc3f at::native::copy_impl()
[2m[36m(pid=11090)[0m     @     0x7ef6fc140148 at::Tensor::copy_()
[2m[36m(pid=11090)[0m     @     0x7ef6fdd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11090)[0m     @     0x7ef6fc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11052)[0m     @     0x7f08bb01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11052)[0m     @     0x7f08bb124148 at::Tensor::copy_()
[2m[36m(pid=11052)[0m     @     0x7f08c13dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11052)[0m     @     0x55ce5e696fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11052)[0m     @     0x55ce5e5f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11052)[0m     @     0x55ce5e67cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11052)[0m     @     0x55ce5e67da20 method_vectorcall
[2m[36m(pid=11052)[0m     @     0x55ce5e5f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11052)[0m     @     0x55ce5e67cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11052)[0m     @     0x55ce5e67d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11052)[0m     @     0x55ce5e5f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11052)[0m     @     0x55ce5e67cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11052)[0m     @     0x55ce5e67d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11052)[0m     @     0x55ce5e5f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11052)[0m     @     0x55ce5e67cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11052)[0m     @     0x55ce5e67d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11052)[0m     @     0x55ce5e5f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11052)[0m     @     0x55ce5e67cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x7ede821bee11 at::TensorIterator::for_each()
[2m[36m(pid=11051)[0m     @     0x7efaca678989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11051)[0m     @     0x7efac89795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11082)[0m     @     0x7f666c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11082)[0m     @     0x7f666c5bd148 at::Tensor::copy_()
[2m[36m(pid=11082)[0m     @     0x7f666e1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11047)[0m     @     0x7fbca281a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11047)[0m     @     0x7fbca2922148 at::Tensor::copy_()
[2m[36m(pid=11047)[0m     @     0x7fbca8bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11047)[0m     @     0x55c7d2cb2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11047)[0m     @     0x55c7d2c0db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11047)[0m     @     0x55c7d2c98baf _PyEval_EvalCodeWithName
[2m[36m(pid=11047)[0m     @     0x55c7d2c99a20 method_vectorcall
[2m[36m(pid=11047)[0m     @     0x55c7d2c0dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11047)[0m     @     0x55c7d2c98baf _PyEval_EvalCodeWithName
[2m[36m(pid=11047)[0m     @     0x55c7d2c99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11047)[0m     @     0x55c7d2c0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x7fa1f7b4e148 at::Tensor::copy_()
[2m[36m(pid=11006)[0m     @     0x7fa1fde04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11006)[0m     @     0x563e30fbafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11006)[0m     @     0x563e30f15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x563e30fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11006)[0m     @     0x563e30fa1a20 method_vectorcall
[2m[36m(pid=11006)[0m     @     0x563e30f15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x563e30fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11006)[0m     @     0x563e30fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11006)[0m     @     0x563e30f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x563e30fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11006)[0m     @     0x563e30fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11006)[0m     @     0x563e30f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x563e30fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11006)[0m     @     0x563e30fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11006)[0m     @     0x563e30f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11006)[0m     @     0x563e30fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=11059)[0m     @     0x7f087c7a6148 at::Tensor::copy_()
[2m[36m(pid=11059)[0m     @     0x7f087e39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11059)[0m     @     0x7f087c69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11059)[0m     @     0x7f087c7a6148 at::Tensor::copy_()
[2m[36m(pid=11077)[0m     @     0x7fc164751148 at::Tensor::copy_()
[2m[36m(pid=11077)[0m     @     0x7fc166348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11077)[0m     @     0x7fc1646495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11077)[0m     @     0x7fc164751148 at::Tensor::copy_()
[2m[36m(pid=11053)[0m     @     0x7f1207283148 at::Tensor::copy_()
[2m[36m(pid=11053)[0m     @     0x7f1208e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11053)[0m     @     0x7f120717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11004)[0m     @     0x7f8b5348d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11004)[0m     @     0x7f8b53595148 at::Tensor::copy_()
[2m[36m(pid=11004)[0m     @     0x7f8b5984bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11004)[0m     @     0x55adbfcebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11004)[0m     @     0x55adbfc46b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11004)[0m     @     0x55adbfcd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11004)[0m     @     0x55adbfcd2a20 method_vectorcall
[2m[36m(pid=11004)[0m     @     0x55adbfc46bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11004)[0m     @     0x55adbfcd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11004)[0m     @     0x55adbfcd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11004)[0m     @     0x55adbfc47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11004)[0m     @     0x55adbfcd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11004)[0m     @     0x55adbfcd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11004)[0m     @     0x55adbfc47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11004)[0m     @     0x55adbfcd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11004)[0m     @     0x55adbfcd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11004)[0m     @     0x55adbfc47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11004)[0m     @     0x55adbfcd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x7ed0974dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10988)[0m     @     0x5587d7bb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10988)[0m     @     0x5587d7b13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10988)[0m     @     0x5587d7b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x5587d7b9fa20 method_vectorcall
[2m[36m(pid=10988)[0m     @     0x5587d7b13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10988)[0m     @     0x5587d7b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x5587d7b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10988)[0m     @     0x5587d7b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10988)[0m     @     0x5587d7b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x5587d7b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10988)[0m     @     0x5587d7b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10988)[0m     @     0x5587d7b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10988)[0m     @     0x5587d7b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10988)[0m     @     0x5587d7b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10988)[0m     @     0x5587d7b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x7f3a40425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11008)[0m     @     0x7f01b7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11008)[0m     @     0x7f01b8095148 at::Tensor::copy_()
[2m[36m(pid=11008)[0m     @     0x7f01b9c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10994)[0m     @     0x7fac9bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10994)[0m     @     0x7fac9c095148 at::Tensor::copy_()
[2m[36m(pid=10994)[0m     @     0x7faca234bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10994)[0m     @     0x55ad1c0b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10994)[0m     @     0x55ad1c010b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10994)[0m     @     0x55ad1c09bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10994)[0m     @     0x55ad1c09ca20 method_vectorcall
[2m[36m(pid=10994)[0m     @     0x55ad1c010bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10994)[0m     @     0x55ad1c09bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10994)[0m     @     0x55ad1c09c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10994)[0m     @     0x55ad1c011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10994)[0m     @     0x55ad1c09bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10994)[0m     @     0x55ad1c09c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10994)[0m     @     0x55ad1c011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10994)[0m     @     0x55ad1c09bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=10994)[0m     @     0x55ad1c09c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10994)[0m     @     0x55ad1c011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10994)[0m     @     0x55ad1c09bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x7f2487c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11062)[0m     @     0x5575c76a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11062)[0m     @     0x5575c75ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11062)[0m     @     0x5575c768abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x5575c768ba20 method_vectorcall
[2m[36m(pid=11062)[0m     @     0x5575c75ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11062)[0m     @     0x5575c768abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x5575c768b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11062)[0m     @     0x5575c7600689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11062)[0m     @     0x5575c768abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x5575c768b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11062)[0m     @     0x5575c7600689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11062)[0m     @     0x5575c768abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11062)[0m     @     0x5575c768b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11062)[0m     @     0x5575c7600689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11062)[0m     @     0x5575c768abaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x7f6197627148 at::Tensor::copy_()
[2m[36m(pid=11065)[0m     @     0x7f619d8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11065)[0m     @     0x557ae1e78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11065)[0m     @     0x557ae1dd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x557ae1e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x557ae1e5fa20 method_vectorcall
[2m[36m(pid=11065)[0m     @     0x557ae1dd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x557ae1e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x557ae1e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11065)[0m     @     0x557ae1dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x557ae1e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x557ae1e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11065)[0m     @     0x557ae1dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x557ae1e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11065)[0m     @     0x557ae1e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11065)[0m     @     0x557ae1dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11065)[0m     @     0x557ae1e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x7f2828751148 at::Tensor::copy_()
[2m[36m(pid=10995)[0m     @     0x7f282ea07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10995)[0m     @     0x5575b1444fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10995)[0m     @     0x5575b139fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10995)[0m     @     0x5575b142abaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x5575b142ba20 method_vectorcall
[2m[36m(pid=10995)[0m     @     0x5575b139fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10995)[0m     @     0x5575b142abaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x5575b142b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10995)[0m     @     0x5575b13a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10995)[0m     @     0x5575b142abaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x5575b142b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10995)[0m     @     0x5575b13a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10995)[0m     @     0x5575b142abaf _PyEval_EvalCodeWithName
[2m[36m(pid=10995)[0m     @     0x5575b142b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10995)[0m     @     0x5575b13a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10995)[0m     @     0x5575b142abaf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x7f6123922148 at::Tensor::copy_()
[2m[36m(pid=10985)[0m     @     0x7f6129bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10985)[0m     @     0x55bb68de2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10985)[0m     @     0x55bb68d3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10985)[0m     @     0x55bb68dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x55bb68dc9a20 method_vectorcall
[2m[36m(pid=10985)[0m     @     0x55bb68d3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10985)[0m     @     0x55bb68dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x55bb68dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10985)[0m     @     0x55bb68d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10985)[0m     @     0x55bb68dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x55bb68dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10985)[0m     @     0x55bb68d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10985)[0m     @     0x55bb68dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=10985)[0m     @     0x55bb68dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10985)[0m     @     0x55bb68d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10985)[0m     @     0x55bb68dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=11078)[0m     @     0x7eff72c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11078)[0m     @     0x7eff72d5b148 at::Tensor::copy_()
[2m[36m(pid=11078)[0m     @     0x7eff79011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11078)[0m     @     0x5557e2fd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11078)[0m     @     0x5557e2f2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11078)[0m     @     0x5557e2fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11078)[0m     @     0x5557e2fb7a20 method_vectorcall
[2m[36m(pid=11078)[0m     @     0x5557e2f2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11078)[0m     @     0x5557e2fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11078)[0m     @     0x5557e2fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11078)[0m     @     0x5557e2f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11078)[0m     @     0x5557e2fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11078)[0m     @     0x5557e2fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11078)[0m     @     0x5557e2f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11078)[0m     @     0x5557e2fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11078)[0m     @     0x5557e2fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10983)[0m     @     0x7f250293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10983)[0m     @     0x7f2502a45148 at::Tensor::copy_()
[2m[36m(pid=10983)[0m     @     0x7f2508cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10983)[0m     @     0x56052cc30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10983)[0m     @     0x56052cb8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10983)[0m     @     0x56052cc16baf _PyEval_EvalCodeWithName
[2m[36m(pid=10983)[0m     @     0x56052cc17a20 method_vectorcall
[2m[36m(pid=10983)[0m     @     0x56052cb8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10983)[0m     @     0x56052cc16baf _PyEval_EvalCodeWithName
[2m[36m(pid=10983)[0m     @     0x56052cc17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10983)[0m     @     0x56052cb8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10983)[0m     @     0x56052cc16baf _PyEval_EvalCodeWithName
[2m[36m(pid=10983)[0m     @     0x56052cc17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10983)[0m     @     0x56052cb8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10983)[0m     @     0x56052cc16baf _PyEval_EvalCodeWithName
[2m[36m(pid=10983)[0m     @     0x56052cc17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10983)[0m     @     0x56052cb8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10983)[0m     @     0x56052cc16baf _PyEval_EvalCodeWithName
[2m[36m(pid=11022)[0m     @     0x7f25141385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11022)[0m     @     0x7f2514240148 at::Tensor::copy_()
[2m[36m(pid=11022)[0m     @     0x7f251a4f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11022)[0m     @     0x56385e391fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11022)[0m     @     0x56385e2ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11022)[0m     @     0x56385e377baf _PyEval_EvalCodeWithName
[2m[36m(pid=11022)[0m     @     0x56385e378a20 method_vectorcall
[2m[36m(pid=11022)[0m     @     0x56385e2ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11022)[0m     @     0x56385e377baf _PyEval_EvalCodeWithName
[2m[36m(pid=11022)[0m     @     0x56385e378643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11022)[0m     @     0x56385e2ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11022)[0m     @     0x56385e377baf _PyEval_EvalCodeWithName
[2m[36m(pid=11022)[0m     @     0x56385e378643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11022)[0m     @     0x56385e2ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11022)[0m     @     0x56385e377baf _PyEval_EvalCodeWithName
[2m[36m(pid=11022)[0m     @     0x56385e378643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11022)[0m     @     0x56385e2ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11022)[0m     @     0x56385e377baf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x7f646fb4e148 at::Tensor::copy_()
[2m[36m(pid=11014)[0m     @     0x7f6475e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11014)[0m     @     0x555e03d26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11014)[0m     @     0x555e03c81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11014)[0m     @     0x555e03d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x555e03d0da20 method_vectorcall
[2m[36m(pid=11014)[0m     @     0x555e03c81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11014)[0m     @     0x555e03d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x555e03d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11014)[0m     @     0x555e03c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11014)[0m     @     0x555e03d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x555e03d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11014)[0m     @     0x555e03c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11014)[0m     @     0x555e03d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11014)[0m     @     0x555e03d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11014)[0m     @     0x555e03c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11014)[0m     @     0x555e03d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11056)[0m     @     0x7f0646c56148 at::Tensor::copy_()
[2m[36m(pid=11056)[0m     @     0x7f064cf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11056)[0m     @     0x55c399db9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11056)[0m     @     0x55c399d14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11056)[0m     @     0x55c399d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11056)[0m     @     0x55c399da0a20 method_vectorcall
[2m[36m(pid=11056)[0m     @     0x55c399d14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11056)[0m     @     0x55c399d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11056)[0m     @     0x55c399da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11056)[0m     @     0x55c399d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11056)[0m     @     0x55c399d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11056)[0m     @     0x55c399da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11056)[0m     @     0x55c399d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11056)[0m     @     0x55c399d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11056)[0m     @     0x55c399da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11056)[0m     @     0x55c399d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11056)[0m     @     0x55c399d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11097)[0m     @     0x7f3422553148 at::Tensor::copy_()
[2m[36m(pid=11097)[0m     @     0x7f3428809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11097)[0m     @     0x55cd5c072fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11097)[0m     @     0x55cd5bfcdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11097)[0m     @     0x55cd5c058baf _PyEval_EvalCodeWithName
[2m[36m(pid=11097)[0m     @     0x55cd5c059a20 method_vectorcall
[2m[36m(pid=11097)[0m     @     0x55cd5bfcdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11097)[0m     @     0x55cd5c058baf _PyEval_EvalCodeWithName
[2m[36m(pid=11097)[0m     @     0x55cd5c059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11097)[0m     @     0x55cd5bfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11097)[0m     @     0x55cd5c058baf _PyEval_EvalCodeWithName
[2m[36m(pid=11097)[0m     @     0x55cd5c059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11097)[0m     @     0x55cd5bfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11097)[0m     @     0x55cd5c058baf _PyEval_EvalCodeWithName
[2m[36m(pid=11097)[0m     @     0x55cd5c059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11097)[0m     @     0x55cd5bfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11097)[0m     @     0x55cd5c058baf _PyEval_EvalCodeWithName
[2m[36m(pid=11024)[0m     @     0x55ea22b37baf _PyEval_EvalCodeWithName
[2m[36m(pid=11024)[0m     @     0x55ea22b38a20 method_vectorcall
[2m[36m(pid=11024)[0m     @     0x55ea22aacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11024)[0m     @     0x55ea22b37baf _PyEval_EvalCodeWithName
[2m[36m(pid=11024)[0m     @     0x55ea22b38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11024)[0m     @     0x55ea22aad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11024)[0m     @     0x55ea22b37baf _PyEval_EvalCodeWithName
[2m[36m(pid=11024)[0m     @     0x55ea22b38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11024)[0m     @     0x55ea22aad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11024)[0m     @     0x55ea22b37baf _PyEval_EvalCodeWithName
[2m[36m(pid=11024)[0m     @     0x55ea22b38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11024)[0m     @     0x55ea22aad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11024)[0m     @     0x55ea22b37baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x7f77697a85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10986)[0m     @     0x557b0b7ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11002)[0m     @     0x7ef4119afbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11002)[0m     @     0x558359433fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11002)[0m     @     0x55835938eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x558359419baf _PyEval_EvalCodeWithName
[2m[36m(pid=11002)[0m     @     0x55835941aa20 method_vectorcall
[2m[36m(pid=11002)[0m     @     0x55835938ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x558359419baf _PyEval_EvalCodeWithName
[2m[36m(pid=11002)[0m     @     0x55835941a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11002)[0m     @     0x55835938f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x558359419baf _PyEval_EvalCodeWithName
[2m[36m(pid=11002)[0m     @     0x55835941a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11002)[0m     @     0x55835938f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x558359419baf _PyEval_EvalCodeWithName
[2m[36m(pid=11002)[0m     @     0x55835941a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11002)[0m     @     0x55835938f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11002)[0m     @     0x558359419baf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x7edf733a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11049)[0m     @     0x7f7c97578009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11049)[0m     @     0x7f7c97576c3f at::native::copy_impl()
[2m[36m(pid=11066)[0m     @     0x7f926319ded4 at::native::copy_()
[2m[36m(pid=11066)[0m     @     0x7f92638e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11066)[0m     @     0x7f92639e8148 at::Tensor::copy_()
[2m[36m(pid=11066)[0m     @     0x7f92655df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11090)[0m     @     0x7ef6fc140148 at::Tensor::copy_()
[2m[36m(pid=11090)[0m     @     0x7ef7023f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11090)[0m     @     0x55e2226a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11090)[0m     @     0x55e222604b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11090)[0m     @     0x55e22268fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11090)[0m     @     0x55e222690a20 method_vectorcall
[2m[36m(pid=11090)[0m     @     0x55e222604bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11090)[0m     @     0x55e22268fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11090)[0m     @     0x55e222690643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11090)[0m     @     0x55e222605689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11090)[0m     @     0x55e22268fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11090)[0m     @     0x55e222690643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11090)[0m     @     0x55e222605689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11090)[0m     @     0x55e22268fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11090)[0m     @     0x55e222690643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11090)[0m     @     0x55e222605689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11090)[0m     @     0x55e22268fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x7ede84ed7c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=11055)[0m     @     0x7ede84efacfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=11055)[0m     @     0x7ede81f38009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=11055)[0m     @     0x7ede81f36c3f at::native::copy_impl()
[2m[36m(pid=11051)[0m     @     0x7efac8a81148 at::Tensor::copy_()
[2m[36m(pid=11051)[0m     @     0x7efaced37bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11051)[0m     @     0x55bc3bb8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11051)[0m     @     0x55bc3baeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11051)[0m     @     0x55bc3bb75baf _PyEval_EvalCodeWithName
[2m[36m(pid=11051)[0m     @     0x55bc3bb76a20 method_vectorcall
[2m[36m(pid=11051)[0m     @     0x55bc3baeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11051)[0m     @     0x55bc3bb75baf _PyEval_EvalCodeWithName
[2m[36m(pid=11051)[0m     @     0x55bc3bb76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11051)[0m     @     0x55bc3baeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11051)[0m     @     0x55bc3bb75baf _PyEval_EvalCodeWithName
[2m[36m(pid=11051)[0m     @     0x55bc3bb76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11051)[0m     @     0x55bc3baeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11051)[0m     @     0x55bc3bb75baf _PyEval_EvalCodeWithName
[2m[36m(pid=11051)[0m     @     0x55bc3bb76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11051)[0m     @     0x55bc3baeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11051)[0m     @     0x55bc3bb75baf _PyEval_EvalCodeWithName
[2m[36m(pid=11082)[0m     @     0x7f666c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11082)[0m     @     0x7f666c5bd148 at::Tensor::copy_()
[2m[36m(pid=11082)[0m     @     0x7f6672873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11082)[0m     @     0x55c6a6992fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11082)[0m     @     0x55c6a68edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11082)[0m     @     0x55c6a6978baf _PyEval_EvalCodeWithName
[2m[36m(pid=11082)[0m     @     0x55c6a6979a20 method_vectorcall
[2m[36m(pid=11082)[0m     @     0x55c6a68edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11082)[0m     @     0x55c6a6978baf _PyEval_EvalCodeWithName
[2m[36m(pid=11082)[0m     @     0x55c6a6979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11082)[0m     @     0x55c6a68ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11082)[0m     @     0x55c6a6978baf _PyEval_EvalCodeWithName
[2m[36m(pid=11082)[0m     @     0x55c6a6979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11082)[0m     @     0x55c6a68ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11082)[0m     @     0x55c6a6978baf _PyEval_EvalCodeWithName
[2m[36m(pid=11082)[0m     @     0x55c6a6979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11082)[0m     @     0x55c6a68ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11082)[0m     @     0x55c6a6978baf _PyEval_EvalCodeWithName
[2m[36m(pid=11047)[0m     @     0x55c7d2c98baf _PyEval_EvalCodeWithName
[2m[36m(pid=11047)[0m     @     0x55c7d2c99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11047)[0m     @     0x55c7d2c0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11047)[0m     @     0x55c7d2c98baf _PyEval_EvalCodeWithName
[2m[36m(pid=11047)[0m     @     0x55c7d2c99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11047)[0m     @     0x55c7d2c0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11047)[0m     @     0x55c7d2c98baf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x7fb9ce39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=10987)[0m     @     0x7fb9cc69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11059)[0m     @     0x7f0882a5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11059)[0m     @     0x55d6eb3fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11059)[0m     @     0x55d6eb357b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11059)[0m     @     0x55d6eb3e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=11059)[0m     @     0x55d6eb3e3a20 method_vectorcall
[2m[36m(pid=11059)[0m     @     0x55d6eb357bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11059)[0m     @     0x55d6eb3e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=11059)[0m     @     0x55d6eb3e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11059)[0m     @     0x55d6eb358689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11059)[0m     @     0x55d6eb3e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=11059)[0m     @     0x55d6eb3e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11059)[0m     @     0x55d6eb358689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11059)[0m     @     0x55d6eb3e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=11059)[0m     @     0x55d6eb3e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11059)[0m     @     0x55d6eb358689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11059)[0m     @     0x55d6eb3e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=11077)[0m     @     0x7fc16aa07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11077)[0m     @     0x564a874a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11077)[0m     @     0x564a87404b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11077)[0m     @     0x564a8748fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11077)[0m     @     0x564a87490a20 method_vectorcall
[2m[36m(pid=11077)[0m     @     0x564a87404bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11077)[0m     @     0x564a8748fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11077)[0m     @     0x564a87490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11077)[0m     @     0x564a87405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11077)[0m     @     0x564a8748fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11077)[0m     @     0x564a87490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11077)[0m     @     0x564a87405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11077)[0m     @     0x564a8748fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11077)[0m     @     0x564a87490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11077)[0m     @     0x564a87405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11077)[0m     @     0x564a8748fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11053)[0m     @     0x7f1207283148 at::Tensor::copy_()
[2m[36m(pid=11053)[0m     @     0x7f120d539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11053)[0m     @     0x5645d1863fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11053)[0m     @     0x5645d17beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11053)[0m     @     0x5645d1849baf _PyEval_EvalCodeWithName
[2m[36m(pid=11053)[0m     @     0x5645d184aa20 method_vectorcall
[2m[36m(pid=11053)[0m     @     0x5645d17bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11053)[0m     @     0x5645d1849baf _PyEval_EvalCodeWithName
[2m[36m(pid=11053)[0m     @     0x5645d184a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11053)[0m     @     0x5645d17bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11053)[0m     @     0x5645d1849baf _PyEval_EvalCodeWithName
[2m[36m(pid=11053)[0m     @     0x5645d184a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11053)[0m     @     0x5645d17bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11053)[0m     @     0x5645d1849baf _PyEval_EvalCodeWithName
[2m[36m(pid=11053)[0m     @     0x5645d184a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11053)[0m     @     0x5645d17bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11053)[0m     @     0x5645d1849baf _PyEval_EvalCodeWithName
[2m[36m(pid=11008)[0m     @     0x7f01b7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11008)[0m     @     0x7f01b8095148 at::Tensor::copy_()
[2m[36m(pid=11078)[0m     @     0x5557e2f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11078)[0m     @     0x5557e2fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x7f77698b0148 at::Tensor::copy_()
[2m[36m(pid=11070)[0m     @     0x7f776fb66bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11070)[0m     @     0x561434432fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11070)[0m     @     0x56143438db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x561434418baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x561434419a20 method_vectorcall
[2m[36m(pid=11070)[0m     @     0x56143438dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x561434418baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x561434419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11070)[0m     @     0x56143438e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x561434418baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x561434419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11070)[0m     @     0x56143438e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x561434418baf _PyEval_EvalCodeWithName
[2m[36m(pid=11070)[0m     @     0x561434419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11070)[0m     @     0x56143438e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11070)[0m     @     0x561434418baf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x7edf734ac148 at::Tensor::copy_()
[2m[36m(pid=11094)[0m     @     0x7edf79762bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11094)[0m     @     0x55d45a7e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11094)[0m     @     0x55d45a740b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11094)[0m     @     0x55d45a7cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x55d45a7cca20 method_vectorcall
[2m[36m(pid=11094)[0m     @     0x55d45a740bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11094)[0m     @     0x55d45a7cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x55d45a7cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11094)[0m     @     0x55d45a741689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11094)[0m     @     0x55d45a7cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x55d45a7cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11094)[0m     @     0x55d45a741689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11094)[0m     @     0x55d45a7cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11094)[0m     @     0x55d45a7cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11094)[0m     @     0x55d45a741689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11094)[0m     @     0x55d45a7cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11066)[0m     @     0x7f92638e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11055)[0m     @     0x7ede81f37ed4 at::native::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede8267a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=10987)[0m     @     0x7fb9cc7a6148 at::Tensor::copy_()
[2m[36m(pid=10987)[0m     @     0x7fb9d2a5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=10987)[0m     @     0x56064bdc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=10987)[0m     @     0x56064bd1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10987)[0m     @     0x56064bda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x56064bda8a20 method_vectorcall
[2m[36m(pid=10987)[0m     @     0x56064bd1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10987)[0m     @     0x56064bda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x56064bda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10987)[0m     @     0x56064bd1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10987)[0m     @     0x56064bda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x56064bda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10987)[0m     @     0x56064bd1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10987)[0m     @     0x56064bda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=10987)[0m     @     0x56064bda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=10987)[0m     @     0x56064bd1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=10987)[0m     @     0x56064bda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x7f3a3e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11101)[0m     @     0x7f3a3e82e148 at::Tensor::copy_()
[2m[36m(pid=11101)[0m     @     0x7f3a44ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11101)[0m     @     0x560f7d548fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11101)[0m     @     0x560f7d4a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11101)[0m     @     0x560f7d52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x560f7d52fa20 method_vectorcall
[2m[36m(pid=11101)[0m     @     0x560f7d4a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11101)[0m     @     0x560f7d52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x560f7d52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11101)[0m     @     0x560f7d4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x7f01be34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11008)[0m     @     0x55a1d6692fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11008)[0m     @     0x55a1d65edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x55a1d6678baf _PyEval_EvalCodeWithName
[2m[36m(pid=11008)[0m     @     0x55a1d6679a20 method_vectorcall
[2m[36m(pid=11008)[0m     @     0x55a1d65edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x55a1d6678baf _PyEval_EvalCodeWithName
[2m[36m(pid=11008)[0m     @     0x55a1d6679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11008)[0m     @     0x55a1d65ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x55a1d6678baf _PyEval_EvalCodeWithName
[2m[36m(pid=11008)[0m     @     0x55a1d6679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11008)[0m     @     0x55a1d65ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x55a1d6678baf _PyEval_EvalCodeWithName
[2m[36m(pid=11008)[0m     @     0x55a1d6679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11008)[0m     @     0x55a1d65ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11008)[0m     @     0x55a1d6678baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x7f7c97577ed4 at::native::copy_()
[2m[36m(pid=11049)[0m     @     0x7f7c97cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11066)[0m     @     0x7f92639e8148 at::Tensor::copy_()
[2m[36m(pid=11066)[0m     @     0x7f9269c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11066)[0m     @     0x558eca996fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11066)[0m     @     0x558eca8f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11066)[0m     @     0x558eca97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11066)[0m     @     0x558eca97da20 method_vectorcall
[2m[36m(pid=11066)[0m     @     0x558eca8f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11066)[0m     @     0x558eca97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11066)[0m     @     0x558eca97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11066)[0m     @     0x558eca8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11066)[0m     @     0x558eca97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11066)[0m     @     0x558eca97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11066)[0m     @     0x558eca8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11066)[0m     @     0x558eca97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11066)[0m     @     0x558eca97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11066)[0m     @     0x558eca8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11066)[0m     @     0x558eca97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x7ede82782148 at::Tensor::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede84379989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede8267a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11101)[0m     @     0x560f7d52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x560f7d52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11101)[0m     @     0x560f7d4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11101)[0m     @     0x560f7d52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11101)[0m     @     0x560f7d52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11101)[0m     @     0x560f7d4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11101)[0m     @     0x560f7d52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x7f7c97dc2148 at::Tensor::copy_()
[2m[36m(pid=11049)[0m     @     0x7f7c999b9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede82782148 at::Tensor::copy_()
[2m[36m(pid=11055)[0m     @     0x7ede88a38bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11055)[0m     @     0x558a9620efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11055)[0m     @     0x558a96169b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11055)[0m     @     0x558a961f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x558a961f5a20 method_vectorcall
[2m[36m(pid=11055)[0m     @     0x558a96169bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11055)[0m     @     0x558a961f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x558a961f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11055)[0m     @     0x558a9616a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11055)[0m     @     0x558a961f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x558a961f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11055)[0m     @     0x558a9616a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11055)[0m     @     0x558a961f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=11055)[0m     @     0x558a961f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11055)[0m     @     0x558a9616a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11055)[0m     @     0x558a961f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x7f7c97cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=11049)[0m     @     0x7f7c97dc2148 at::Tensor::copy_()
[2m[36m(pid=11049)[0m     @     0x7f7c9e078bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=11049)[0m     @     0x558f76eebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=11049)[0m     @     0x558f76e46b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11049)[0m     @     0x558f76ed1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x558f76ed2a20 method_vectorcall
[2m[36m(pid=11049)[0m     @     0x558f76e46bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11049)[0m     @     0x558f76ed1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x558f76ed2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11049)[0m     @     0x558f76e47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11049)[0m     @     0x558f76ed1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x558f76ed2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11049)[0m     @     0x558f76e47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11049)[0m     @     0x558f76ed1baf _PyEval_EvalCodeWithName
[2m[36m(pid=11049)[0m     @     0x558f76ed2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=11049)[0m     @     0x558f76e47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=11049)[0m     @     0x558f76ed1baf _PyEval_EvalCodeWithName
2020-11-05 10:58:43,400	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffd784bf0601000000.
2020-11-05 10:58:43,400	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:58:43,404	ERROR trial_runner.py:567 -- Trial PPO_jss_env_da3ad_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=11123, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=11123)[0m E1105 10:58:43.393812 11123 12232 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=0e76d0d84610e872d784bf0601000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=d784bf0601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=11123)[0m E1105 10:58:43.394037 11123 12232 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=780d54838962e0d2d784bf0601000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=d784bf0601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=11123)[0m E1105 10:58:43.394232 11123 12232 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=11123)[0m E1105 10:58:43.394335 11123 12232 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
== Status ==
Memory usage on this node: 25.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.66 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da3ad_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_da3ad_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_da3ad_00000_0_2020-11-05_10-58-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 25.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.66 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da3ad_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_da3ad_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_da3ad_00000_0_2020-11-05_10-58-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=11123)[0m E1105 10:58:43.415062 11123 12232 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=575b3faf45c7d0bd8168b55d01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_da3ad_00000])
