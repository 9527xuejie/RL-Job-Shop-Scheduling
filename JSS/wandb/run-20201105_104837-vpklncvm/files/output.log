2020-11-05 10:48:41,617	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_78c8b_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=56817)[0m 2020-11-05 10:48:44,427	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=56817)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=56817)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=56817)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=56817)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=56817)[0m 
[2m[36m(pid=56817)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=56799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56799)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56799)[0m *** SIGSEGV (@0x0) received by PID 56799 (TID 0x7ffad5a5c700) from PID 0; stack trace: ***
[2m[36m(pid=56799)[0m     @     0x7ffad5635390 (unknown)
[2m[36m(pid=56799)[0m     @     0x7fcbd55e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56799)[0m     @     0x7fcbd4d0f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56799)[0m     @     0x7fcbd4d128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56799)[0m     @     0x7fcbd4d12ad3 at::TensorIterator::for_each()
[2m[36m(pid=56680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56680)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56680)[0m *** SIGSEGV (@0x0) received by PID 56680 (TID 0x7f11e20db700) from PID 0; stack trace: ***
[2m[36m(pid=56680)[0m     @     0x7f11e1cb4390 (unknown)
[2m[36m(pid=56680)[0m     @     0x7ee2e1b62f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56680)[0m     @     0x7ee2e128d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56680)[0m     @     0x7ee2e12908f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56708)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56708)[0m *** SIGSEGV (@0x0) received by PID 56708 (TID 0x7f15618db700) from PID 0; stack trace: ***
[2m[36m(pid=56708)[0m     @     0x7f15614b4390 (unknown)
[2m[36m(pid=56708)[0m     @     0x7ee6613ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56708)[0m     @     0x7ee660af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56808)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56808)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56808)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56808)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56808)[0m *** SIGSEGV (@0x0) received by PID 56808 (TID 0x7f52451fe700) from PID 0; stack trace: ***
[2m[36m(pid=56808)[0m     @     0x7f5244dd7390 (unknown)
[2m[36m(pid=56808)[0m     @     0x7f2344c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56808)[0m     @     0x7f234439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56808)[0m     @     0x7f23443a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56808)[0m     @     0x7f23443a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=56808)[0m     @     0x7f23443a2d91 at::TensorIterator::for_each()
[2m[36m(pid=56700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56700)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56700)[0m *** SIGSEGV (@0x0) received by PID 56700 (TID 0x7f7e97d41700) from PID 0; stack trace: ***
[2m[36m(pid=56700)[0m     @     0x7f7e9791a390 (unknown)
[2m[36m(pid=56700)[0m     @     0x7f4f978b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56700)[0m     @     0x7f4f96fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56768)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56768)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56768)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56768)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56768)[0m *** SIGSEGV (@0x0) received by PID 56768 (TID 0x7f0386571700) from PID 0; stack trace: ***
[2m[36m(pid=56768)[0m     @     0x7f038614a390 (unknown)
[2m[36m(pid=56768)[0m     @     0x7ed4860faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56768)[0m     @     0x7ed4858257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56768)[0m     @     0x7ed4858288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56763)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56763)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56763)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56763)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56763)[0m *** SIGSEGV (@0x0) received by PID 56763 (TID 0x7f85748a6700) from PID 0; stack trace: ***
[2m[36m(pid=56763)[0m     @     0x7f857447f390 (unknown)
[2m[36m(pid=56763)[0m     @     0x7f5674136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56763)[0m     @     0x7f56738617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56763)[0m     @     0x7f56738648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56753)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56753)[0m *** SIGSEGV (@0x0) received by PID 56753 (TID 0x7fa911270700) from PID 0; stack trace: ***
[2m[36m(pid=56753)[0m     @     0x7fa910e49390 (unknown)
[2m[36m(pid=56753)[0m     @     0x7f7a10e00f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56753)[0m     @     0x7f7a1052b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56753)[0m     @     0x7f7a1052e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56753)[0m     @     0x7f7a1052ead3 at::TensorIterator::for_each()
[2m[36m(pid=56751)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56751)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56751)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56751)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56751)[0m *** SIGSEGV (@0x0) received by PID 56751 (TID 0x7f2f1b475700) from PID 0; stack trace: ***
[2m[36m(pid=56751)[0m     @     0x7f2f1b04e390 (unknown)
[2m[36m(pid=56751)[0m     @     0x7f001afeff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56751)[0m     @     0x7f001a71a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56751)[0m     @     0x7f001a71d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56794)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56794)[0m *** SIGSEGV (@0x0) received by PID 56794 (TID 0x7fa95b72d700) from PID 0; stack trace: ***
[2m[36m(pid=56794)[0m     @     0x7fa95b306390 (unknown)
[2m[36m(pid=56794)[0m     @     0x7f7a5b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56794)[0m     @     0x7f7a5a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56794)[0m     @     0x7f7a5a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56743)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56743)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56743)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56743)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56743)[0m *** SIGSEGV (@0x0) received by PID 56743 (TID 0x7f48b5e21700) from PID 0; stack trace: ***
[2m[36m(pid=56743)[0m     @     0x7f48b59fa390 (unknown)
[2m[36m(pid=56743)[0m     @     0x7f19b57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56743)[0m     @     0x7f19b4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56743)[0m     @     0x7f19b4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56743)[0m     @     0x7f19b4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=56810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56810)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56810)[0m *** SIGSEGV (@0x0) received by PID 56810 (TID 0x7f5a7ec57700) from PID 0; stack trace: ***
[2m[36m(pid=56810)[0m     @     0x7f5a7e830390 (unknown)
[2m[36m(pid=56810)[0m     @     0x7f2b7e7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56810)[0m     @     0x7f2b7dee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56810)[0m     @     0x7f2b7dee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56810)[0m     @     0x7f2b7dee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=56792)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56792)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56792)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56792)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56792)[0m *** SIGSEGV (@0x0) received by PID 56792 (TID 0x7ffb5e865700) from PID 0; stack trace: ***
[2m[36m(pid=56792)[0m     @     0x7ffb5e43e390 (unknown)
[2m[36m(pid=56792)[0m     @     0x7fcc5e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56792)[0m     @     0x7fcc5da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56792)[0m     @     0x7fcc5da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56691)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56691)[0m *** SIGSEGV (@0x0) received by PID 56691 (TID 0x7fd642a1e700) from PID 0; stack trace: ***
[2m[36m(pid=56691)[0m     @     0x7fd6425f7390 (unknown)
[2m[36m(pid=56691)[0m     @     0x7fa742577f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56691)[0m     @     0x7fa741ca27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56711)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56711)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56711)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56711)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56711)[0m *** SIGSEGV (@0x0) received by PID 56711 (TID 0x7f36e4040700) from PID 0; stack trace: ***
[2m[36m(pid=56711)[0m     @     0x7f36e3c19390 (unknown)
[2m[36m(pid=56711)[0m     @     0x7f07e3bcaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56711)[0m     @     0x7f07e32f57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56711)[0m     @     0x7f07e32f88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56754)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56754)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56754)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56754)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56754)[0m *** SIGSEGV (@0x0) received by PID 56754 (TID 0x7fdbd9fc5700) from PID 0; stack trace: ***
[2m[36m(pid=56754)[0m     @     0x7fdbd9b9e390 (unknown)
[2m[36m(pid=56754)[0m     @     0x7facd9b3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56754)[0m     @     0x7facd92657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56754)[0m     @     0x7facd92688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56714)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56714)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56714)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56714)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56714)[0m *** SIGSEGV (@0x0) received by PID 56714 (TID 0x7f5370ed8700) from PID 0; stack trace: ***
[2m[36m(pid=56714)[0m     @     0x7f5370ab1390 (unknown)
[2m[36m(pid=56714)[0m     @     0x7f247095df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56714)[0m     @     0x7f24700887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56714)[0m     @     0x7f247008b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56773)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56773)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56773)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56773)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56773)[0m *** SIGSEGV (@0x0) received by PID 56773 (TID 0x7ff3c119e700) from PID 0; stack trace: ***
[2m[36m(pid=56773)[0m     @     0x7ff3c0d77390 (unknown)
[2m[36m(pid=56773)[0m     @     0x7fc4c0c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56773)[0m     @     0x7fc4c039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56773)[0m     @     0x7fc4c03a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56773)[0m     @     0x7fc4c03a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=56773)[0m     @     0x7fc4c03a2d91 at::TensorIterator::for_each()
[2m[36m(pid=56773)[0m     @     0x7fc4c0c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56773)[0m     @     0x7fc4c0ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56816)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56816)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56816)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56816)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56816)[0m *** SIGSEGV (@0x0) received by PID 56816 (TID 0x7f0feb8aa700) from PID 0; stack trace: ***
[2m[36m(pid=56816)[0m     @     0x7f0feb483390 (unknown)
[2m[36m(pid=56816)[0m     @     0x7ee0eb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56816)[0m     @     0x7ee0ea9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56816)[0m     @     0x7ee0ea9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56816)[0m     @     0x7ee0ea957ad3 at::TensorIterator::for_each()
[2m[36m(pid=56795)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56795)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56795)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56795)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56795)[0m *** SIGSEGV (@0x0) received by PID 56795 (TID 0x7f3f12aeb700) from PID 0; stack trace: ***
[2m[36m(pid=56795)[0m     @     0x7f3f126c4390 (unknown)
[2m[36m(pid=56795)[0m     @     0x7f10125a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56795)[0m     @     0x7f1011ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56795)[0m     @     0x7f1011cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56795)[0m     @     0x7f1011cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=56776)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56776)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56776)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56776)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56776)[0m *** SIGSEGV (@0x0) received by PID 56776 (TID 0x7f9554568700) from PID 0; stack trace: ***
[2m[36m(pid=56776)[0m     @     0x7f9554141390 (unknown)
[2m[36m(pid=56776)[0m     @     0x7f6653eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56776)[0m     @     0x7f66535e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56776)[0m     @     0x7f66535e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56776)[0m     @     0x7f66535e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=56776)[0m     @     0x7f66535e4d91 at::TensorIterator::for_each()
[2m[36m(pid=56776)[0m     @     0x7f6653ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56712)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56712)[0m *** SIGSEGV (@0x0) received by PID 56712 (TID 0x7fc5e98cd700) from PID 0; stack trace: ***
[2m[36m(pid=56712)[0m     @     0x7fc5e94a6390 (unknown)
[2m[36m(pid=56712)[0m     @     0x7f96e93ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56712)[0m     @     0x7f96e8af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56712)[0m     @     0x7f96e8afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56712)[0m     @     0x7f96e8afaad3 at::TensorIterator::for_each()
[2m[36m(pid=56771)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56771)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56771)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56771)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56771)[0m *** SIGSEGV (@0x0) received by PID 56771 (TID 0x7fa68be78700) from PID 0; stack trace: ***
[2m[36m(pid=56771)[0m     @     0x7fa68ba51390 (unknown)
[2m[36m(pid=56771)[0m     @     0x7f778b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56771)[0m     @     0x7f778b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56771)[0m     @     0x7f778b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56771)[0m     @     0x7f778b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=56767)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56767)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56767)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56767)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56767)[0m *** SIGSEGV (@0x0) received by PID 56767 (TID 0x7fbd5d4fa700) from PID 0; stack trace: ***
[2m[36m(pid=56767)[0m     @     0x7fbd5d0d3390 (unknown)
[2m[36m(pid=56767)[0m     @     0x7f8e5d075f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56767)[0m     @     0x7f8e5c7a07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56767)[0m     @     0x7f8e5c7a38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56796)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56796)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56796)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56796)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56796)[0m *** SIGSEGV (@0x0) received by PID 56796 (TID 0x7fbcc823b700) from PID 0; stack trace: ***
[2m[36m(pid=56796)[0m     @     0x7fbcc7e14390 (unknown)
[2m[36m(pid=56796)[0m     @     0x7f8dc7da6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56796)[0m     @     0x7f8dc74d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56796)[0m     @     0x7f8dc74d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56750)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56750)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56750)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56750)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56750)[0m *** SIGSEGV (@0x0) received by PID 56750 (TID 0x7f1383f3e700) from PID 0; stack trace: ***
[2m[36m(pid=56750)[0m     @     0x7f1383b17390 (unknown)
[2m[36m(pid=56750)[0m     @     0x7ee4839c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56750)[0m     @     0x7ee4830f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56750)[0m     @     0x7ee4830f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56750)[0m     @     0x7ee4830f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=56696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56696)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56696)[0m *** SIGSEGV (@0x0) received by PID 56696 (TID 0x7ff24e0f2700) from PID 0; stack trace: ***
[2m[36m(pid=56696)[0m     @     0x7ff24dccb390 (unknown)
[2m[36m(pid=56696)[0m     @     0x7fc34dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56696)[0m     @     0x7fc34d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56696)[0m     @     0x7fc34d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56696)[0m     @     0x7fc34d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=56682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56682)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56682)[0m *** SIGSEGV (@0x0) received by PID 56682 (TID 0x7f898e229700) from PID 0; stack trace: ***
[2m[36m(pid=56682)[0m     @     0x7f898de02390 (unknown)
[2m[36m(pid=56682)[0m     @     0x7f5a8db19f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56682)[0m     @     0x7f5a8d2447db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56682)[0m     @     0x7f5a8d2478f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56752)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56752)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56752)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56752)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56752)[0m *** SIGSEGV (@0x0) received by PID 56752 (TID 0x7f80aa3f4700) from PID 0; stack trace: ***
[2m[36m(pid=56752)[0m     @     0x7f80a9fcd390 (unknown)
[2m[36m(pid=56752)[0m     @     0x7f51a9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56752)[0m     @     0x7f51a954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56752)[0m     @     0x7f51a95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56752)[0m     @     0x7f51a9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=56709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56709)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56709)[0m *** SIGSEGV (@0x0) received by PID 56709 (TID 0x7ff0a6f82700) from PID 0; stack trace: ***
[2m[36m(pid=56709)[0m     @     0x7ff0a6b5b390 (unknown)
[2m[36m(pid=56709)[0m     @     0x7fc1a69ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56709)[0m     @     0x7fc1a60f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56709)[0m     @     0x7fc1a60fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56756)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56756)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56756)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56756)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56756)[0m *** SIGSEGV (@0x0) received by PID 56756 (TID 0x7f78ba78b700) from PID 0; stack trace: ***
[2m[36m(pid=56756)[0m     @     0x7f78ba364390 (unknown)
[2m[36m(pid=56756)[0m     @     0x7f49ba30bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56756)[0m     @     0x7f49b9a367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56756)[0m     @     0x7f49b9a398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56756)[0m     @     0x7f49b9a39ad3 at::TensorIterator::for_each()
[2m[36m(pid=56688)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56688)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56688)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56688)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56688)[0m *** SIGSEGV (@0x0) received by PID 56688 (TID 0x7f4d2e4cd700) from PID 0; stack trace: ***
[2m[36m(pid=56688)[0m     @     0x7f4d2e0a6390 (unknown)
[2m[36m(pid=56688)[0m     @     0x7f1e2e04df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56688)[0m     @     0x7f1e2d7787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56688)[0m     @     0x7f1e2d77b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56688)[0m     @     0x7f1e2d77bad3 at::TensorIterator::for_each()
[2m[36m(pid=56745)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56745)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56745)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56745)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56745)[0m *** SIGSEGV (@0x0) received by PID 56745 (TID 0x7fc79b724700) from PID 0; stack trace: ***
[2m[36m(pid=56745)[0m     @     0x7fc79b2fd390 (unknown)
[2m[36m(pid=56745)[0m     @     0x7f989b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56745)[0m     @     0x7f989a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56745)[0m     @     0x7f989a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56745)[0m     @     0x7f989a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=56745)[0m     @     0x7f989a957d91 at::TensorIterator::for_each()
[2m[36m(pid=56681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56681)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56681)[0m *** SIGSEGV (@0x0) received by PID 56681 (TID 0x7fbe4b56c700) from PID 0; stack trace: ***
[2m[36m(pid=56681)[0m     @     0x7fbe4b145390 (unknown)
[2m[36m(pid=56681)[0m     @     0x7f8f4af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56681)[0m     @     0x7f8f4a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56681)[0m     @     0x7f8f4a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56814)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56814)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56814)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56814)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56814)[0m *** SIGSEGV (@0x0) received by PID 56814 (TID 0x7f5174f5e700) from PID 0; stack trace: ***
[2m[36m(pid=56814)[0m     @     0x7f5174b37390 (unknown)
[2m[36m(pid=56814)[0m     @     0x7f2274a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56814)[0m     @     0x7f22741617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56814)[0m     @     0x7f22741648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56693)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56693)[0m *** SIGSEGV (@0x0) received by PID 56693 (TID 0x7febb30de700) from PID 0; stack trace: ***
[2m[36m(pid=56693)[0m     @     0x7febb2cb7390 (unknown)
[2m[36m(pid=56789)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56789)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56789)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56782)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56782)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56782)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56782)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56782)[0m *** SIGSEGV (@0x0) received by PID 56782 (TID 0x7fd0ff1fa700) from PID 0; stack trace: ***
[2m[36m(pid=56685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56685)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56685)[0m *** SIGSEGV (@0x0) received by PID 56685 (TID 0x7fa3244d0700) from PID 0; stack trace: ***
[2m[36m(pid=56788)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56788)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56788)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56788)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56788)[0m *** SIGSEGV (@0x0) received by PID 56788 (TID 0x7fa84eb71700) from PID 0; stack trace: ***
[2m[36m(pid=56699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56699)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56747)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56697)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56697)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56697)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56697)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56697)[0m *** SIGSEGV (@0x0) received by PID 56697 (TID 0x7fa2e16eb700) from PID 0; stack trace: ***
[2m[36m(pid=56686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56686)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56761)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56761)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56761)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56799)[0m     @     0x7fcbd4d12d91 at::TensorIterator::for_each()
[2m[36m(pid=56799)[0m     @     0x7fcbd55f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56799)[0m     @     0x7fcbd5618c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56799)[0m     @     0x7fcbd4abaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56799)[0m     @     0x7fcbd4ab8388 at::native::copy_impl()
[2m[36m(pid=56799)[0m     @     0x7fcbd4aba5a4 at::native::copy_()
[2m[36m(pid=56698)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56698)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56698)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56698)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56698)[0m *** SIGSEGV (@0x0) received by PID 56698 (TID 0x7fbcf1a0e700) from PID 0; stack trace: ***
[2m[36m(pid=56762)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56762)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56762)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56762)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56762)[0m *** SIGSEGV (@0x0) received by PID 56762 (TID 0x7fcfb72cb700) from PID 0; stack trace: ***
[2m[36m(pid=56705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56705)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56705)[0m *** SIGSEGV (@0x0) received by PID 56705 (TID 0x7fb5ef044700) from PID 0; stack trace: ***
[2m[36m(pid=56689)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56689)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56689)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56689)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56689)[0m *** SIGSEGV (@0x0) received by PID 56689 (TID 0x7f72fa44b700) from PID 0; stack trace: ***
[2m[36m(pid=56689)[0m     @     0x7f72fa024390 (unknown)
[2m[36m(pid=56790)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56790)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56790)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56790)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56790)[0m *** SIGSEGV (@0x0) received by PID 56790 (TID 0x7fbfe6210700) from PID 0; stack trace: ***
[2m[36m(pid=56804)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56804)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56804)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56804)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56804)[0m *** SIGSEGV (@0x0) received by PID 56804 (TID 0x7f5fdb5c2700) from PID 0; stack trace: ***
[2m[36m(pid=56804)[0m     @     0x7f5fdb19b390 (unknown)
[2m[36m(pid=56804)[0m     @     0x7f30db124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56804)[0m     @     0x7f30da84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56680)[0m     @     0x7ee2e1290ad3 at::TensorIterator::for_each()
[2m[36m(pid=56680)[0m     @     0x7ee2e1290d91 at::TensorIterator::for_each()
[2m[36m(pid=56680)[0m     @     0x7ee2e1b73b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56680)[0m     @     0x7ee2e1b96c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56680)[0m     @     0x7ee2e1038a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56680)[0m     @     0x7ee2e1036388 at::native::copy_impl()
[2m[36m(pid=56708)[0m     @     0x7ee660afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56708)[0m     @     0x7ee660afaad3 at::TensorIterator::for_each()
[2m[36m(pid=56708)[0m     @     0x7ee660afad91 at::TensorIterator::for_each()
[2m[36m(pid=56708)[0m     @     0x7ee6613ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56708)[0m     @     0x7ee661400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56708)[0m     @     0x7ee6608a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56708)[0m     @     0x7ee6608a0388 at::native::copy_impl()
[2m[36m(pid=56694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56694)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56694)[0m *** SIGSEGV (@0x0) received by PID 56694 (TID 0x7f8341fb1700) from PID 0; stack trace: ***
[2m[36m(pid=56694)[0m     @     0x7f8341b8a390 (unknown)
[2m[36m(pid=56694)[0m     @     0x7f5441b3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56694)[0m     @     0x7f54412657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56694)[0m     @     0x7f54412688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56706)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56706)[0m *** SIGSEGV (@0x0) received by PID 56706 (TID 0x7fe180aa5700) from PID 0; stack trace: ***
[2m[36m(pid=56808)[0m     @     0x7f2344c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56808)[0m     @     0x7f2344ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56808)[0m     @     0x7f234414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56808)[0m     @     0x7f2344148388 at::native::copy_impl()
[2m[36m(pid=56808)[0m     @     0x7f234414a5a4 at::native::copy_()
[2m[36m(pid=56808)[0m     @     0x7f23448354f5 at::Tensor::copy_()
[2m[36m(pid=56808)[0m     @     0x7f2346d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56700)[0m     @     0x7f4f96fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56700)[0m     @     0x7f4f96fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=56700)[0m     @     0x7f4f96fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=56700)[0m     @     0x7f4f978c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56700)[0m     @     0x7f4f978e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56700)[0m     @     0x7f4f96d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56700)[0m     @     0x7f4f96d85388 at::native::copy_impl()
[2m[36m(pid=56768)[0m     @     0x7ed485828ad3 at::TensorIterator::for_each()
[2m[36m(pid=56768)[0m     @     0x7ed485828d91 at::TensorIterator::for_each()
[2m[36m(pid=56768)[0m     @     0x7ed48610bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56768)[0m     @     0x7ed48612ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56768)[0m     @     0x7ed4855d0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56768)[0m     @     0x7ed4855ce388 at::native::copy_impl()
[2m[36m(pid=56768)[0m     @     0x7ed4855d05a4 at::native::copy_()
[2m[36m(pid=56763)[0m     @     0x7f5673864ad3 at::TensorIterator::for_each()
[2m[36m(pid=56763)[0m     @     0x7f5673864d91 at::TensorIterator::for_each()
[2m[36m(pid=56763)[0m     @     0x7f5674147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56763)[0m     @     0x7f567416ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56763)[0m     @     0x7f567360ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56763)[0m     @     0x7f567360a388 at::native::copy_impl()
[2m[36m(pid=56763)[0m     @     0x7f567360c5a4 at::native::copy_()
[2m[36m(pid=56753)[0m     @     0x7f7a1052ed91 at::TensorIterator::for_each()
[2m[36m(pid=56753)[0m     @     0x7f7a10e11b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56753)[0m     @     0x7f7a10e34c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56753)[0m     @     0x7f7a102d6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56753)[0m     @     0x7f7a102d4388 at::native::copy_impl()
[2m[36m(pid=56753)[0m     @     0x7f7a102d65a4 at::native::copy_()
[2m[36m(pid=56753)[0m     @     0x7f7a109c14f5 at::Tensor::copy_()
[2m[36m(pid=56753)[0m     @     0x7f7a12e948de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56751)[0m     @     0x7f001a71dad3 at::TensorIterator::for_each()
[2m[36m(pid=56751)[0m     @     0x7f001a71dd91 at::TensorIterator::for_each()
[2m[36m(pid=56751)[0m     @     0x7f001b000b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56751)[0m     @     0x7f001b023c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56751)[0m     @     0x7f001a4c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56751)[0m     @     0x7f001a4c3388 at::native::copy_impl()
[2m[36m(pid=56751)[0m     @     0x7f001a4c55a4 at::native::copy_()
[2m[36m(pid=56794)[0m     @     0x7f7a5a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=56794)[0m     @     0x7f7a5a957d91 at::TensorIterator::for_each()
[2m[36m(pid=56794)[0m     @     0x7f7a5b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56794)[0m     @     0x7f7a5b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56794)[0m     @     0x7f7a5a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56794)[0m     @     0x7f7a5a6fd388 at::native::copy_impl()
[2m[36m(pid=56743)[0m     @     0x7f19b4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=56743)[0m     @     0x7f19b580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56743)[0m     @     0x7f19b582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56743)[0m     @     0x7f19b4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56743)[0m     @     0x7f19b4ccd388 at::native::copy_impl()
[2m[36m(pid=56743)[0m     @     0x7f19b4ccf5a4 at::native::copy_()
[2m[36m(pid=56743)[0m     @     0x7f19b53ba4f5 at::Tensor::copy_()
[2m[36m(pid=56743)[0m     @     0x7f19b788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56810)[0m     @     0x7f2b7dee9d91 at::TensorIterator::for_each()
[2m[36m(pid=56810)[0m     @     0x7f2b7e7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56810)[0m     @     0x7f2b7e7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56810)[0m     @     0x7f2b7dc91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56810)[0m     @     0x7f2b7dc8f388 at::native::copy_impl()
[2m[36m(pid=56810)[0m     @     0x7f2b7dc915a4 at::native::copy_()
[2m[36m(pid=56810)[0m     @     0x7f2b7e37c4f5 at::Tensor::copy_()
[2m[36m(pid=56810)[0m     @     0x7f2b8084f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56792)[0m     @     0x7fcc5da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=56792)[0m     @     0x7fcc5da79d91 at::TensorIterator::for_each()
[2m[36m(pid=56792)[0m     @     0x7fcc5e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56792)[0m     @     0x7fcc5e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56792)[0m     @     0x7fcc5d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56792)[0m     @     0x7fcc5d81f388 at::native::copy_impl()
[2m[36m(pid=56691)[0m     @     0x7fa741ca58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56691)[0m     @     0x7fa741ca5ad3 at::TensorIterator::for_each()
[2m[36m(pid=56691)[0m     @     0x7fa741ca5d91 at::TensorIterator::for_each()
[2m[36m(pid=56691)[0m     @     0x7fa742588b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56691)[0m     @     0x7fa7425abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56691)[0m     @     0x7fa741a4da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56691)[0m     @     0x7fa741a4b388 at::native::copy_impl()
[2m[36m(pid=56691)[0m     @     0x7fa741a4d5a4 at::native::copy_()
[2m[36m(pid=56759)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56759)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56759)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56759)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56759)[0m *** SIGSEGV (@0x0) received by PID 56759 (TID 0x7f096a078700) from PID 0; stack trace: ***
[2m[36m(pid=56759)[0m     @     0x7f0969c51390 (unknown)
[2m[36m(pid=56759)[0m     @     0x7eda69becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56759)[0m     @     0x7eda693177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56711)[0m     @     0x7f07e32f8ad3 at::TensorIterator::for_each()
[2m[36m(pid=56711)[0m     @     0x7f07e32f8d91 at::TensorIterator::for_each()
[2m[36m(pid=56711)[0m     @     0x7f07e3bdbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56711)[0m     @     0x7f07e3bfec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56711)[0m     @     0x7f07e30a0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56711)[0m     @     0x7f07e309e388 at::native::copy_impl()
[2m[36m(pid=56755)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56755)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56755)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56755)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56755)[0m *** SIGSEGV (@0x0) received by PID 56755 (TID 0x7ff2efcc3700) from PID 0; stack trace: ***
[2m[36m(pid=56755)[0m     @     0x7ff2ef89c390 (unknown)
[2m[36m(pid=56754)[0m     @     0x7facd9268ad3 at::TensorIterator::for_each()
[2m[36m(pid=56754)[0m     @     0x7facd9268d91 at::TensorIterator::for_each()
[2m[36m(pid=56754)[0m     @     0x7facd9b4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56754)[0m     @     0x7facd9b6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56754)[0m     @     0x7facd9010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56754)[0m     @     0x7facd900e388 at::native::copy_impl()
[2m[36m(pid=56683)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56683)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56683)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56683)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56683)[0m *** SIGSEGV (@0x0) received by PID 56683 (TID 0x7ffb8feae700) from PID 0; stack trace: ***
[2m[36m(pid=56683)[0m     @     0x7ffb8fa87390 (unknown)
[2m[36m(pid=56683)[0m     @     0x7fcc8fa08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56683)[0m     @     0x7fcc8f1337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56683)[0m     @     0x7fcc8f1368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56714)[0m     @     0x7f247008bad3 at::TensorIterator::for_each()
[2m[36m(pid=56714)[0m     @     0x7f247008bd91 at::TensorIterator::for_each()
[2m[36m(pid=56714)[0m     @     0x7f247096eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56714)[0m     @     0x7f2470991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56714)[0m     @     0x7f246fe33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56714)[0m     @     0x7f246fe31388 at::native::copy_impl()
[2m[36m(pid=56714)[0m     @     0x7f246fe335a4 at::native::copy_()
[2m[36m(pid=56690)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56690)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56690)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56690)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56690)[0m *** SIGSEGV (@0x0) received by PID 56690 (TID 0x7fee7e1e4700) from PID 0; stack trace: ***
[2m[36m(pid=56690)[0m     @     0x7fee7ddbd390 (unknown)
[2m[36m(pid=56690)[0m     @     0x7fbf7dd52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56690)[0m     @     0x7fbf7d47d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56690)[0m     @     0x7fbf7d4808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56773)[0m     @     0x7fc4c014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56773)[0m     @     0x7fc4c0148388 at::native::copy_impl()
[2m[36m(pid=56773)[0m     @     0x7fc4c014a5a4 at::native::copy_()
[2m[36m(pid=56773)[0m     @     0x7fc4c08354f5 at::Tensor::copy_()
[2m[36m(pid=56773)[0m     @     0x7fc4c2d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56773)[0m     @     0x7fc4c08354f5 at::Tensor::copy_()
[2m[36m(pid=56816)[0m     @     0x7ee0ea957d91 at::TensorIterator::for_each()
[2m[36m(pid=56816)[0m     @     0x7ee0eb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56816)[0m     @     0x7ee0eb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56816)[0m     @     0x7ee0ea6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56816)[0m     @     0x7ee0ea6fd388 at::native::copy_impl()
[2m[36m(pid=56816)[0m     @     0x7ee0ea6ff5a4 at::native::copy_()
[2m[36m(pid=56795)[0m     @     0x7f1011cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=56795)[0m     @     0x7f10125b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56795)[0m     @     0x7f10125d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56795)[0m     @     0x7f1011a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56795)[0m     @     0x7f1011a78388 at::native::copy_impl()
[2m[36m(pid=56795)[0m     @     0x7f1011a7a5a4 at::native::copy_()
[2m[36m(pid=56776)[0m     @     0x7f6653eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56776)[0m     @     0x7f665338ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56776)[0m     @     0x7f665338a388 at::native::copy_impl()
[2m[36m(pid=56776)[0m     @     0x7f665338c5a4 at::native::copy_()
[2m[36m(pid=56776)[0m     @     0x7f6653a774f5 at::Tensor::copy_()
[2m[36m(pid=56776)[0m     @     0x7f6655f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56712)[0m     @     0x7f96e8afad91 at::TensorIterator::for_each()
[2m[36m(pid=56712)[0m     @     0x7f96e93ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56712)[0m     @     0x7f96e9400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56712)[0m     @     0x7f96e88a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56712)[0m     @     0x7f96e88a0388 at::native::copy_impl()
[2m[36m(pid=56712)[0m     @     0x7f96e88a25a4 at::native::copy_()
[2m[36m(pid=56712)[0m     @     0x7f96e8f8d4f5 at::Tensor::copy_()
[2m[36m(pid=56712)[0m     @     0x7f96eb4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56712)[0m     @     0x7f96e8f8d4f5 at::Tensor::copy_()
[2m[36m(pid=56771)[0m     @     0x7f778b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=56771)[0m     @     0x7f778b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56771)[0m     @     0x7f778b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56771)[0m     @     0x7f778adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56771)[0m     @     0x7f778adb2388 at::native::copy_impl()
[2m[36m(pid=56771)[0m     @     0x7f778adb45a4 at::native::copy_()
[2m[36m(pid=56771)[0m     @     0x7f778b49f4f5 at::Tensor::copy_()
[2m[36m(pid=56771)[0m     @     0x7f778d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56767)[0m     @     0x7f8e5c7a3ad3 at::TensorIterator::for_each()
[2m[36m(pid=56767)[0m     @     0x7f8e5c7a3d91 at::TensorIterator::for_each()
[2m[36m(pid=56767)[0m     @     0x7f8e5d086b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56767)[0m     @     0x7f8e5d0a9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56767)[0m     @     0x7f8e5c54ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56767)[0m     @     0x7f8e5c549388 at::native::copy_impl()
[2m[36m(pid=56796)[0m     @     0x7f8dc74d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=56796)[0m     @     0x7f8dc74d4d91 at::TensorIterator::for_each()
[2m[36m(pid=56796)[0m     @     0x7f8dc7db7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56796)[0m     @     0x7f8dc7ddac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56796)[0m     @     0x7f8dc727ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56796)[0m     @     0x7f8dc727a388 at::native::copy_impl()
[2m[36m(pid=56796)[0m     @     0x7f8dc727c5a4 at::native::copy_()
[2m[36m(pid=56750)[0m     @     0x7ee4830f3d91 at::TensorIterator::for_each()
[2m[36m(pid=56750)[0m     @     0x7ee4839d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56750)[0m     @     0x7ee4839f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56750)[0m     @     0x7ee482e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56750)[0m     @     0x7ee482e99388 at::native::copy_impl()
[2m[36m(pid=56750)[0m     @     0x7ee482e9b5a4 at::native::copy_()
[2m[36m(pid=56750)[0m     @     0x7ee4835864f5 at::Tensor::copy_()
[2m[36m(pid=56750)[0m     @     0x7ee485a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56696)[0m     @     0x7fc34d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=56696)[0m     @     0x7fc34dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56696)[0m     @     0x7fc34dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56696)[0m     @     0x7fc34d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56696)[0m     @     0x7fc34d0e1388 at::native::copy_impl()
[2m[36m(pid=56696)[0m     @     0x7fc34d0e35a4 at::native::copy_()
[2m[36m(pid=56696)[0m     @     0x7fc34d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=56696)[0m     @     0x7fc34fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56715)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56715)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56715)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56715)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56715)[0m *** SIGSEGV (@0x0) received by PID 56715 (TID 0x7f1a5f1c8700) from PID 0; stack trace: ***
[2m[36m(pid=56715)[0m     @     0x7f1a5eda1390 (unknown)
[2m[36m(pid=56715)[0m     @     0x7eeb5ecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56715)[0m     @     0x7eeb5e4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56715)[0m     @     0x7eeb5e42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56682)[0m     @     0x7f5a8d247ad3 at::TensorIterator::for_each()
[2m[36m(pid=56682)[0m     @     0x7f5a8d247d91 at::TensorIterator::for_each()
[2m[36m(pid=56682)[0m     @     0x7f5a8db2ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56682)[0m     @     0x7f5a8db4dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56682)[0m     @     0x7f5a8cfefa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56682)[0m     @     0x7f5a8cfed388 at::native::copy_impl()
[2m[36m(pid=56682)[0m     @     0x7f5a8cfef5a4 at::native::copy_()
[2m[36m(pid=56780)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56780)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56780)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56780)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56780)[0m *** SIGSEGV (@0x0) received by PID 56780 (TID 0x7f7cb0662700) from PID 0; stack trace: ***
[2m[36m(pid=56780)[0m     @     0x7f7cb023b390 (unknown)
[2m[36m(pid=56758)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56758)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56758)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56758)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56758)[0m *** SIGSEGV (@0x0) received by PID 56758 (TID 0x7fb1fa6a6700) from PID 0; stack trace: ***
[2m[36m(pid=56779)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56779)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56779)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56779)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56779)[0m *** SIGSEGV (@0x0) received by PID 56779 (TID 0x7f7deff95700) from PID 0; stack trace: ***
[2m[36m(pid=56779)[0m     @     0x7f7defb6e390 (unknown)
[2m[36m(pid=56779)[0m     @     0x7f4eefaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56779)[0m     @     0x7f4eef2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56779)[0m     @     0x7f4eef2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56774)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56774)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56774)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56793)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56793)[0m *** SIGSEGV (@0x0) received by PID 56793 (TID 0x7eff7d49b700) from PID 0; stack trace: ***
[2m[36m(pid=56793)[0m     @     0x7eff7d074390 (unknown)
[2m[36m(pid=56793)[0m     @     0x7ed07cfe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56713)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56713)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56713)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56713)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56713)[0m *** SIGSEGV (@0x0) received by PID 56713 (TID 0x7fa2f2a2e700) from PID 0; stack trace: ***
[2m[36m(pid=56713)[0m     @     0x7fa2f2607390 (unknown)
[2m[36m(pid=56713)[0m     @     0x7f73f2577f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56752)[0m     @     0x7f51a9552d91 at::TensorIterator::for_each()
[2m[36m(pid=56752)[0m     @     0x7f51a9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56752)[0m     @     0x7f51a9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56752)[0m     @     0x7f51a92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56752)[0m     @     0x7f51a92f8388 at::native::copy_impl()
[2m[36m(pid=56752)[0m     @     0x7f51a92fa5a4 at::native::copy_()
[2m[36m(pid=56752)[0m     @     0x7f51a99e54f5 at::Tensor::copy_()
[2m[36m(pid=56752)[0m     @     0x7f51abeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56709)[0m     @     0x7fc1a60faad3 at::TensorIterator::for_each()
[2m[36m(pid=56709)[0m     @     0x7fc1a60fad91 at::TensorIterator::for_each()
[2m[36m(pid=56709)[0m     @     0x7fc1a69ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56709)[0m     @     0x7fc1a6a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56709)[0m     @     0x7fc1a5ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56709)[0m     @     0x7fc1a5ea0388 at::native::copy_impl()
[2m[36m(pid=56709)[0m     @     0x7fc1a5ea25a4 at::native::copy_()
[2m[36m(pid=56756)[0m     @     0x7f49b9a39d91 at::TensorIterator::for_each()
[2m[36m(pid=56756)[0m     @     0x7f49ba31cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56756)[0m     @     0x7f49ba33fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56756)[0m     @     0x7f49b97e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56756)[0m     @     0x7f49b97df388 at::native::copy_impl()
[2m[36m(pid=56756)[0m     @     0x7f49b97e15a4 at::native::copy_()
[2m[36m(pid=56695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56695)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56695)[0m *** SIGSEGV (@0x0) received by PID 56695 (TID 0x7f83a00dc700) from PID 0; stack trace: ***
[2m[36m(pid=56695)[0m     @     0x7f839fcb5390 (unknown)
[2m[36m(pid=56695)[0m     @     0x7f549faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56695)[0m     @     0x7f549f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56695)[0m     @     0x7f549f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56688)[0m     @     0x7f1e2d77bd91 at::TensorIterator::for_each()
[2m[36m(pid=56688)[0m     @     0x7f1e2e05eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56688)[0m     @     0x7f1e2e081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56688)[0m     @     0x7f1e2d523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56688)[0m     @     0x7f1e2d521388 at::native::copy_impl()
[2m[36m(pid=56688)[0m     @     0x7f1e2d5235a4 at::native::copy_()
[2m[36m(pid=56688)[0m     @     0x7f1e2dc0e4f5 at::Tensor::copy_()
[2m[36m(pid=56688)[0m     @     0x7f1e300e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56688)[0m     @     0x7f1e2dc0e4f5 at::Tensor::copy_()
[2m[36m(pid=56688)[0m     @     0x7f1e33cb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56688)[0m     @     0x556609ec1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56688)[0m     @     0x556609e1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x7f989b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56745)[0m     @     0x7f989b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56745)[0m     @     0x7f989a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56745)[0m     @     0x7f989a6fd388 at::native::copy_impl()
[2m[36m(pid=56745)[0m     @     0x7f989a6ff5a4 at::native::copy_()
[2m[36m(pid=56745)[0m     @     0x7f989adea4f5 at::Tensor::copy_()
[2m[36m(pid=56745)[0m     @     0x7f989d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56702)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56702)[0m *** SIGSEGV (@0x0) received by PID 56702 (TID 0x7f260b210700) from PID 0; stack trace: ***
[2m[36m(pid=56702)[0m     @     0x7f260ade9390 (unknown)
[2m[36m(pid=56702)[0m     @     0x7ef70ad83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56702)[0m     @     0x7ef70a4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56702)[0m     @     0x7ef70a4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56681)[0m     @     0x7f8f4a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=56681)[0m     @     0x7f8f4a641d91 at::TensorIterator::for_each()
[2m[36m(pid=56681)[0m     @     0x7f8f4af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56681)[0m     @     0x7f8f4af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56681)[0m     @     0x7f8f4a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56681)[0m     @     0x7f8f4a3e7388 at::native::copy_impl()
[2m[36m(pid=56681)[0m     @     0x7f8f4a3e95a4 at::native::copy_()
[2m[36m(pid=56814)[0m     @     0x7f2274164ad3 at::TensorIterator::for_each()
[2m[36m(pid=56814)[0m     @     0x7f2274164d91 at::TensorIterator::for_each()
[2m[36m(pid=56814)[0m     @     0x7f2274a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56814)[0m     @     0x7f2274a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56814)[0m     @     0x7f2273f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56814)[0m     @     0x7f2273f0a388 at::native::copy_impl()
[2m[36m(pid=56814)[0m     @     0x7f2273f0c5a4 at::native::copy_()
[2m[36m(pid=56693)[0m     @     0x7fbcb2c50f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56693)[0m     @     0x7fbcb237b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56693)[0m     @     0x7fbcb237e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56693)[0m     @     0x7fbcb237ead3 at::TensorIterator::for_each()
[2m[36m(pid=56789)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56789)[0m *** SIGSEGV (@0x0) received by PID 56789 (TID 0x7f0005320700) from PID 0; stack trace: ***
[2m[36m(pid=56789)[0m     @     0x7f0004ef9390 (unknown)
[2m[36m(pid=56789)[0m     @     0x7ed104e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56789)[0m     @     0x7ed1045a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56775)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56775)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56775)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56775)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56775)[0m *** SIGSEGV (@0x0) received by PID 56775 (TID 0x7f0042af0700) from PID 0; stack trace: ***
[2m[36m(pid=56782)[0m     @     0x7fd0fedd3390 (unknown)
[2m[36m(pid=56782)[0m     @     0x7fa1fecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56782)[0m     @     0x7fa1fe4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56782)[0m     @     0x7fa1fe42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56685)[0m     @     0x7fa3240a9390 (unknown)
[2m[36m(pid=56685)[0m     @     0x7f742401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56685)[0m     @     0x7f74237477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56685)[0m     @     0x7f742374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56766)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56766)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56766)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56766)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56766)[0m *** SIGSEGV (@0x0) received by PID 56766 (TID 0x7faca232a700) from PID 0; stack trace: ***
[2m[36m(pid=56766)[0m     @     0x7faca1f03390 (unknown)
[2m[36m(pid=56766)[0m     @     0x7f7da1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56766)[0m     @     0x7f7da154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56788)[0m     @     0x7fa84e74a390 (unknown)
[2m[36m(pid=56788)[0m     @     0x7f794e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56788)[0m     @     0x7f794dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56788)[0m     @     0x7f794dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56764)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56764)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56764)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56764)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56764)[0m *** SIGSEGV (@0x0) received by PID 56764 (TID 0x7f87e310b700) from PID 0; stack trace: ***
[2m[36m(pid=56764)[0m     @     0x7f87e2ce4390 (unknown)
[2m[36m(pid=56764)[0m     @     0x7f58e2a13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56764)[0m     @     0x7f58e213e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56760)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56760)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56760)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56760)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56760)[0m *** SIGSEGV (@0x0) received by PID 56760 (TID 0x7f10c24e0700) from PID 0; stack trace: ***
[2m[36m(pid=56699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56699)[0m *** SIGSEGV (@0x0) received by PID 56699 (TID 0x7ff82a419700) from PID 0; stack trace: ***
[2m[36m(pid=56699)[0m     @     0x7ff829ff2390 (unknown)
[2m[36m(pid=56699)[0m     @     0x7fc929e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56699)[0m     @     0x7fc92954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56699)[0m     @     0x7fc9295528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56699)[0m     @     0x7fc929552ad3 at::TensorIterator::for_each()
[2m[36m(pid=56747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56747)[0m *** SIGSEGV (@0x0) received by PID 56747 (TID 0x7fdd51c98700) from PID 0; stack trace: ***
[2m[36m(pid=56747)[0m     @     0x7fdd51871390 (unknown)
[2m[36m(pid=56747)[0m     @     0x7fae516f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56747)[0m     @     0x7fae50e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56747)[0m     @     0x7fae50e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56747)[0m     @     0x7fae50e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=56697)[0m     @     0x7fa2e12c4390 (unknown)
[2m[36m(pid=56697)[0m     @     0x7f73e115df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56697)[0m     @     0x7f73e08887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56697)[0m     @     0x7f73e088b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56697)[0m     @     0x7f73e088bad3 at::TensorIterator::for_each()
[2m[36m(pid=56697)[0m     @     0x7f73e088bd91 at::TensorIterator::for_each()
[2m[36m(pid=56686)[0m *** SIGSEGV (@0x0) received by PID 56686 (TID 0x7f938f850700) from PID 0; stack trace: ***
[2m[36m(pid=56686)[0m     @     0x7f938f429390 (unknown)
[2m[36m(pid=56686)[0m     @     0x7f648f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56686)[0m     @     0x7f648e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56686)[0m     @     0x7f648e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56746)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56746)[0m *** SIGSEGV (@0x0) received by PID 56746 (TID 0x7f60fd025700) from PID 0; stack trace: ***
[2m[36m(pid=56746)[0m     @     0x7f60fcbfe390 (unknown)
[2m[36m(pid=56746)[0m     @     0x7f31fca8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56746)[0m     @     0x7f31fc1b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56746)[0m     @     0x7f31fc1b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56761)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56761)[0m *** SIGSEGV (@0x0) received by PID 56761 (TID 0x7fa060602700) from PID 0; stack trace: ***
[2m[36m(pid=56761)[0m     @     0x7fa0601db390 (unknown)
[2m[36m(pid=56761)[0m     @     0x7f716001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56761)[0m     @     0x7f715f7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56761)[0m     @     0x7f715f74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56799)[0m     @     0x7fcbd51a54f5 at::Tensor::copy_()
[2m[36m(pid=56799)[0m     @     0x7fcbd76788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56799)[0m     @     0x7fcbd51a54f5 at::Tensor::copy_()
[2m[36m(pid=56799)[0m     @     0x7fcbdb25079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56799)[0m     @     0x56351813efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56799)[0m     @     0x563518099b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56799)[0m     @     0x563518124baf _PyEval_EvalCodeWithName
[2m[36m(pid=56799)[0m     @     0x563518125a20 method_vectorcall
[2m[36m(pid=56799)[0m     @     0x563518099bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56799)[0m     @     0x563518124baf _PyEval_EvalCodeWithName
[2m[36m(pid=56799)[0m     @     0x563518125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56799)[0m     @     0x56351809a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56799)[0m     @     0x563518124baf _PyEval_EvalCodeWithName
[2m[36m(pid=56799)[0m     @     0x563518125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56799)[0m     @     0x56351809a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56799)[0m     @     0x563518124baf _PyEval_EvalCodeWithName
[2m[36m(pid=56799)[0m     @     0x563518125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56799)[0m     @     0x56351809a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56799)[0m     @     0x563518124baf _PyEval_EvalCodeWithName
[2m[36m(pid=56799)[0m     @     0x563518125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56799)[0m     @     0x56351809a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x7fbcf15e7390 (unknown)
[2m[36m(pid=56698)[0m     @     0x7f8df157ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56698)[0m     @     0x7f8df0caa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56698)[0m     @     0x7f8df0cad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56698)[0m     @     0x7f8df0cadad3 at::TensorIterator::for_each()
[2m[36m(pid=56698)[0m     @     0x7f8df0cadd91 at::TensorIterator::for_each()
[2m[36m(pid=56762)[0m     @     0x7fcfb6ea4390 (unknown)
[2m[36m(pid=56762)[0m     @     0x7fa0b6e53f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56762)[0m     @     0x7fa0b657e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56762)[0m     @     0x7fa0b65818f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56762)[0m     @     0x7fa0b6581ad3 at::TensorIterator::for_each()
[2m[36m(pid=56741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56741)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56741)[0m *** SIGSEGV (@0x0) received by PID 56741 (TID 0x7fe3ba6d9700) from PID 0; stack trace: ***
[2m[36m(pid=56741)[0m     @     0x7fe3ba2b2390 (unknown)
[2m[36m(pid=56741)[0m     @     0x7fb4ba25ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56741)[0m     @     0x7fb4b99897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56705)[0m     @     0x7fb5eec1d390 (unknown)
[2m[36m(pid=56705)[0m     @     0x7f86eea13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56705)[0m     @     0x7f86ee13e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56705)[0m     @     0x7f86ee1418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56705)[0m     @     0x7f86ee141ad3 at::TensorIterator::for_each()
[2m[36m(pid=56705)[0m     @     0x7f86ee141d91 at::TensorIterator::for_each()
[2m[36m(pid=56689)[0m     @     0x7f43f9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56689)[0m     @     0x7f43f954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56689)[0m     @     0x7f43f95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56689)[0m     @     0x7f43f9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=56790)[0m     @     0x7fbfe5de9390 (unknown)
[2m[36m(pid=56790)[0m     @     0x7f90e5d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56790)[0m     @     0x7f90e54a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56790)[0m     @     0x7f90e54a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56790)[0m     @     0x7f90e54a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=56797)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56797)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56797)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56797)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56797)[0m *** SIGSEGV (@0x0) received by PID 56797 (TID 0x7fea8d8ea700) from PID 0; stack trace: ***
[2m[36m(pid=56797)[0m     @     0x7fea8d4c3390 (unknown)
[2m[36m(pid=56797)[0m     @     0x7fbb8d476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56797)[0m     @     0x7fbb8cba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56805)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56786)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56786)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56786)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56804)[0m     @     0x7f30da8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56804)[0m     @     0x7f30da852ad3 at::TensorIterator::for_each()
[2m[36m(pid=56680)[0m     @     0x7ee2e10385a4 at::native::copy_()
[2m[36m(pid=56680)[0m     @     0x7ee2e17234f5 at::Tensor::copy_()
[2m[36m(pid=56680)[0m     @     0x7ee2e3bf68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56708)[0m     @     0x7ee6608a25a4 at::native::copy_()
[2m[36m(pid=56708)[0m     @     0x7ee660f8d4f5 at::Tensor::copy_()
[2m[36m(pid=56708)[0m     @     0x7ee6634608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56694)[0m     @     0x7f5441268ad3 at::TensorIterator::for_each()
[2m[36m(pid=56694)[0m     @     0x7f5441268d91 at::TensorIterator::for_each()
[2m[36m(pid=56694)[0m     @     0x7f5441b4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56706)[0m     @     0x7fe18067e390 (unknown)
[2m[36m(pid=56706)[0m     @     0x7fb28060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56706)[0m     @     0x7fb27fd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56706)[0m     @     0x7fb27fd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56808)[0m     @     0x7f23448354f5 at::Tensor::copy_()
[2m[36m(pid=56808)[0m     @     0x7f234a8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56808)[0m     @     0x555d3cae0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56808)[0m     @     0x555d3ca3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56808)[0m     @     0x555d3cac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56808)[0m     @     0x555d3cac7a20 method_vectorcall
[2m[36m(pid=56808)[0m     @     0x555d3ca3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56808)[0m     @     0x555d3cac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56808)[0m     @     0x555d3cac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56808)[0m     @     0x555d3ca3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56808)[0m     @     0x555d3cac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56808)[0m     @     0x555d3cac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56808)[0m     @     0x555d3ca3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56808)[0m     @     0x555d3cac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56808)[0m     @     0x555d3cac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56808)[0m     @     0x555d3ca3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56808)[0m     @     0x555d3cac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56808)[0m     @     0x555d3cac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56808)[0m     @     0x555d3ca3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x7f4f96d875a4 at::native::copy_()
[2m[36m(pid=56700)[0m     @     0x7f4f974724f5 at::Tensor::copy_()
[2m[36m(pid=56768)[0m     @     0x7ed485cbb4f5 at::Tensor::copy_()
[2m[36m(pid=56768)[0m     @     0x7ed48818e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56763)[0m     @     0x7f5673cf74f5 at::Tensor::copy_()
[2m[36m(pid=56763)[0m     @     0x7f56761ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56753)[0m     @     0x7f7a109c14f5 at::Tensor::copy_()
[2m[36m(pid=56753)[0m     @     0x7f7a16a6c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56753)[0m     @     0x561ecb092fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56753)[0m     @     0x561ecafedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56753)[0m     @     0x561ecb078baf _PyEval_EvalCodeWithName
[2m[36m(pid=56753)[0m     @     0x561ecb079a20 method_vectorcall
[2m[36m(pid=56753)[0m     @     0x561ecafedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56753)[0m     @     0x561ecb078baf _PyEval_EvalCodeWithName
[2m[36m(pid=56753)[0m     @     0x561ecb079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56753)[0m     @     0x561ecafee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56753)[0m     @     0x561ecb078baf _PyEval_EvalCodeWithName
[2m[36m(pid=56753)[0m     @     0x561ecb079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56753)[0m     @     0x561ecafee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56753)[0m     @     0x561ecb078baf _PyEval_EvalCodeWithName
[2m[36m(pid=56753)[0m     @     0x561ecb079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56753)[0m     @     0x561ecafee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56753)[0m     @     0x561ecb078baf _PyEval_EvalCodeWithName
[2m[36m(pid=56753)[0m     @     0x561ecb079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56753)[0m     @     0x561ecafee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x7f001abb04f5 at::Tensor::copy_()
[2m[36m(pid=56751)[0m     @     0x7f001d0838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56794)[0m     @     0x7f7a5a6ff5a4 at::native::copy_()
[2m[36m(pid=56794)[0m     @     0x7f7a5adea4f5 at::Tensor::copy_()
[2m[36m(pid=56794)[0m     @     0x7f7a5d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56743)[0m     @     0x7f19b53ba4f5 at::Tensor::copy_()
[2m[36m(pid=56743)[0m     @     0x7f19bb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56743)[0m     @     0x55b3e26c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56743)[0m     @     0x55b3e2622b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56743)[0m     @     0x55b3e26adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56743)[0m     @     0x55b3e26aea20 method_vectorcall
[2m[36m(pid=56743)[0m     @     0x55b3e2622bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56743)[0m     @     0x55b3e26adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56743)[0m     @     0x55b3e26ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56743)[0m     @     0x55b3e2623689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56743)[0m     @     0x55b3e26adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56743)[0m     @     0x55b3e26ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56743)[0m     @     0x55b3e2623689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56743)[0m     @     0x55b3e26adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56743)[0m     @     0x55b3e26ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56743)[0m     @     0x55b3e2623689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56743)[0m     @     0x55b3e26adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56743)[0m     @     0x55b3e26ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56743)[0m     @     0x55b3e2623689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x7f2b7e37c4f5 at::Tensor::copy_()
[2m[36m(pid=56810)[0m     @     0x7f2b8442779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56810)[0m     @     0x558a0e5e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56810)[0m     @     0x558a0e543b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x558a0e5cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56810)[0m     @     0x558a0e5cfa20 method_vectorcall
[2m[36m(pid=56810)[0m     @     0x558a0e543bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x558a0e5cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56810)[0m     @     0x558a0e5cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56810)[0m     @     0x558a0e544689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x558a0e5cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56810)[0m     @     0x558a0e5cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56810)[0m     @     0x558a0e544689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x558a0e5cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56810)[0m     @     0x558a0e5cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56810)[0m     @     0x558a0e544689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56810)[0m     @     0x558a0e5cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56810)[0m     @     0x558a0e5cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56810)[0m     @     0x558a0e544689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x7fcc5d8215a4 at::native::copy_()
[2m[36m(pid=56792)[0m     @     0x7fcc5df0c4f5 at::Tensor::copy_()
[2m[36m(pid=56792)[0m     @     0x7fcc603df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56691)[0m     @     0x7fa7421384f5 at::Tensor::copy_()
[2m[36m(pid=56691)[0m     @     0x7fa74460b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56759)[0m     @     0x7eda6931a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56759)[0m     @     0x7eda6931aad3 at::TensorIterator::for_each()
[2m[36m(pid=56711)[0m     @     0x7f07e30a05a4 at::native::copy_()
[2m[36m(pid=56711)[0m     @     0x7f07e378b4f5 at::Tensor::copy_()
[2m[36m(pid=56755)[0m     @     0x7fc3eec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56755)[0m     @     0x7fc3ee3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56755)[0m     @     0x7fc3ee3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56754)[0m     @     0x7facd90105a4 at::native::copy_()
[2m[36m(pid=56754)[0m     @     0x7facd96fb4f5 at::Tensor::copy_()
[2m[36m(pid=56754)[0m     @     0x7facdbbce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56683)[0m     @     0x7fcc8f136ad3 at::TensorIterator::for_each()
[2m[36m(pid=56683)[0m     @     0x7fcc8f136d91 at::TensorIterator::for_each()
[2m[36m(pid=56683)[0m     @     0x7fcc8fa19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56683)[0m     @     0x7fcc8fa3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56714)[0m     @     0x7f247051e4f5 at::Tensor::copy_()
[2m[36m(pid=56714)[0m     @     0x7f24729f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56714)[0m     @     0x7f247051e4f5 at::Tensor::copy_()
[2m[36m(pid=56714)[0m     @     0x7f24765c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56714)[0m     @     0x55913961ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56690)[0m     @     0x7fbf7d480ad3 at::TensorIterator::for_each()
[2m[36m(pid=56690)[0m     @     0x7fbf7d480d91 at::TensorIterator::for_each()
[2m[36m(pid=56690)[0m     @     0x7fbf7dd63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56773)[0m     @     0x7fc4c68e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56773)[0m     @     0x55f20b53bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56773)[0m     @     0x55f20b496b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56773)[0m     @     0x55f20b521baf _PyEval_EvalCodeWithName
[2m[36m(pid=56773)[0m     @     0x55f20b522a20 method_vectorcall
[2m[36m(pid=56773)[0m     @     0x55f20b496bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56773)[0m     @     0x55f20b521baf _PyEval_EvalCodeWithName
[2m[36m(pid=56773)[0m     @     0x55f20b522643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56773)[0m     @     0x55f20b497689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56773)[0m     @     0x55f20b521baf _PyEval_EvalCodeWithName
[2m[36m(pid=56773)[0m     @     0x55f20b522643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56773)[0m     @     0x55f20b497689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56773)[0m     @     0x55f20b521baf _PyEval_EvalCodeWithName
[2m[36m(pid=56773)[0m     @     0x55f20b522643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56773)[0m     @     0x55f20b497689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56773)[0m     @     0x55f20b521baf _PyEval_EvalCodeWithName
[2m[36m(pid=56773)[0m     @     0x55f20b522643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56773)[0m     @     0x55f20b497689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x7ee0eadea4f5 at::Tensor::copy_()
[2m[36m(pid=56816)[0m     @     0x7ee0ed2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56795)[0m     @     0x7f10121654f5 at::Tensor::copy_()
[2m[36m(pid=56795)[0m     @     0x7f10146388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56776)[0m     @     0x7f6653a774f5 at::Tensor::copy_()
[2m[36m(pid=56776)[0m     @     0x7f6659b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56776)[0m     @     0x55e234b7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56776)[0m     @     0x55e234adab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56776)[0m     @     0x55e234b65baf _PyEval_EvalCodeWithName
[2m[36m(pid=56776)[0m     @     0x55e234b66a20 method_vectorcall
[2m[36m(pid=56776)[0m     @     0x55e234adabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56776)[0m     @     0x55e234b65baf _PyEval_EvalCodeWithName
[2m[36m(pid=56776)[0m     @     0x55e234b66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56776)[0m     @     0x55e234adb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56776)[0m     @     0x55e234b65baf _PyEval_EvalCodeWithName
[2m[36m(pid=56776)[0m     @     0x55e234b66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56776)[0m     @     0x55e234adb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56776)[0m     @     0x55e234b65baf _PyEval_EvalCodeWithName
[2m[36m(pid=56776)[0m     @     0x55e234b66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56776)[0m     @     0x55e234adb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56776)[0m     @     0x55e234b65baf _PyEval_EvalCodeWithName
[2m[36m(pid=56776)[0m     @     0x55e234b66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56776)[0m     @     0x55e234adb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x7f96ef03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56712)[0m     @     0x5594881a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56712)[0m     @     0x559488101b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x55948818cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56712)[0m     @     0x55948818da20 method_vectorcall
[2m[36m(pid=56712)[0m     @     0x559488101bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x55948818cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56712)[0m     @     0x55948818d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56712)[0m     @     0x559488102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x55948818cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56712)[0m     @     0x55948818d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56712)[0m     @     0x559488102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x55948818cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56712)[0m     @     0x55948818d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56712)[0m     @     0x559488102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56712)[0m     @     0x55948818cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56712)[0m     @     0x55948818d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56712)[0m     @     0x559488102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x7f778b49f4f5 at::Tensor::copy_()
[2m[36m(pid=56771)[0m     @     0x7f779154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56771)[0m     @     0x55fd654fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56771)[0m     @     0x55fd65459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x55fd654e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=56771)[0m     @     0x55fd654e5a20 method_vectorcall
[2m[36m(pid=56771)[0m     @     0x55fd65459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x55fd654e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=56771)[0m     @     0x55fd654e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56771)[0m     @     0x55fd6545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x55fd654e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=56771)[0m     @     0x55fd654e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56771)[0m     @     0x55fd6545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x55fd654e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=56771)[0m     @     0x55fd654e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56771)[0m     @     0x55fd6545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56771)[0m     @     0x55fd654e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=56771)[0m     @     0x55fd654e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56771)[0m     @     0x55fd6545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x7f8e5c54b5a4 at::native::copy_()
[2m[36m(pid=56767)[0m     @     0x7f8e5cc364f5 at::Tensor::copy_()
[2m[36m(pid=56767)[0m     @     0x7f8e5f1098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56767)[0m     @     0x7f8e5cc364f5 at::Tensor::copy_()
[2m[36m(pid=56767)[0m     @     0x7f8e62ce179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56767)[0m     @     0x559e2d027fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56767)[0m     @     0x559e2cf82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x559e2d00dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56767)[0m     @     0x559e2d00ea20 method_vectorcall
[2m[36m(pid=56767)[0m     @     0x559e2cf82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x7f8dc79674f5 at::Tensor::copy_()
[2m[36m(pid=56796)[0m     @     0x7f8dc9e3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56796)[0m     @     0x7f8dc79674f5 at::Tensor::copy_()
[2m[36m(pid=56796)[0m     @     0x7f8dcda1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56796)[0m     @     0x564f8dddffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56796)[0m     @     0x564f8dd3ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8ddc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56796)[0m     @     0x564f8ddc6a20 method_vectorcall
[2m[36m(pid=56796)[0m     @     0x564f8dd3abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8ddc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56796)[0m     @     0x564f8ddc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56796)[0m     @     0x564f8dd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8ddc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56796)[0m     @     0x564f8ddc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56750)[0m     @     0x7ee4835864f5 at::Tensor::copy_()
[2m[36m(pid=56750)[0m     @     0x7ee48963179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56750)[0m     @     0x55e87ded4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56750)[0m     @     0x55e87de2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56750)[0m     @     0x55e87debabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56750)[0m     @     0x55e87debba20 method_vectorcall
[2m[36m(pid=56750)[0m     @     0x55e87de2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56750)[0m     @     0x55e87debabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56750)[0m     @     0x55e87debb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56750)[0m     @     0x55e87de30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56750)[0m     @     0x55e87debabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56750)[0m     @     0x55e87debb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56750)[0m     @     0x55e87de30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56750)[0m     @     0x55e87debabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56750)[0m     @     0x55e87debb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56750)[0m     @     0x55e87de30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56750)[0m     @     0x55e87debabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56750)[0m     @     0x55e87debb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56750)[0m     @     0x55e87de30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x7fc34d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=56696)[0m     @     0x7fc35387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56696)[0m     @     0x5632e83e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56696)[0m     @     0x5632e833eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x5632e83c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=56696)[0m     @     0x5632e83caa20 method_vectorcall
[2m[36m(pid=56696)[0m     @     0x5632e833ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x5632e83c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=56696)[0m     @     0x5632e83ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56696)[0m     @     0x5632e833f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x5632e83c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=56696)[0m     @     0x5632e83ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56696)[0m     @     0x5632e833f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x5632e83c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=56696)[0m     @     0x5632e83ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56696)[0m     @     0x5632e833f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56696)[0m     @     0x5632e83c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=56696)[0m     @     0x5632e83ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56696)[0m     @     0x5632e833f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x7eeb5e42aad3 at::TensorIterator::for_each()
[2m[36m(pid=56715)[0m     @     0x7eeb5e42ad91 at::TensorIterator::for_each()
[2m[36m(pid=56715)[0m     @     0x7eeb5ed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56715)[0m     @     0x7eeb5ed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56715)[0m     @     0x7eeb5e1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56682)[0m     @     0x7f5a8d6da4f5 at::Tensor::copy_()
[2m[36m(pid=56682)[0m     @     0x7f5a8fbad8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56682)[0m     @     0x7f5a8d6da4f5 at::Tensor::copy_()
[2m[36m(pid=56682)[0m     @     0x7f5a9378579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56682)[0m     @     0x559702cd5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56682)[0m     @     0x559702c30b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56682)[0m     @     0x559702cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56682)[0m     @     0x559702cbca20 method_vectorcall
[2m[36m(pid=56682)[0m     @     0x559702c30bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56682)[0m     @     0x559702cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56682)[0m     @     0x559702cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56682)[0m     @     0x559702c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56682)[0m     @     0x559702cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56682)[0m     @     0x559702cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56682)[0m     @     0x559702c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56682)[0m     @     0x559702cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56682)[0m     @     0x559702cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56682)[0m     @     0x559702c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x7f4db001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56780)[0m     @     0x7f4daf7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56780)[0m     @     0x7f4daf74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56780)[0m     @     0x7f4daf74aad3 at::TensorIterator::for_each()
[2m[36m(pid=56758)[0m     @     0x7fb1fa27f390 (unknown)
[2m[36m(pid=56758)[0m     @     0x7f82fa13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56758)[0m     @     0x7f82f98657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56758)[0m     @     0x7f82f98688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56758)[0m     @     0x7f82f9868ad3 at::TensorIterator::for_each()
[2m[36m(pid=56779)[0m     @     0x7f4eef223ad3 at::TensorIterator::for_each()
[2m[36m(pid=56779)[0m     @     0x7f4eef223d91 at::TensorIterator::for_each()
[2m[36m(pid=56779)[0m     @     0x7f4eefb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56779)[0m     @     0x7f4eefb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56774)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56774)[0m *** SIGSEGV (@0x0) received by PID 56774 (TID 0x7f527b1ab700) from PID 0; stack trace: ***
[2m[36m(pid=56774)[0m     @     0x7f527ad84390 (unknown)
[2m[36m(pid=56774)[0m     @     0x7f237acfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56774)[0m     @     0x7f237a4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56774)[0m     @     0x7f237a42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56793)[0m     @     0x7ed07c70e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56793)[0m     @     0x7ed07c7118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56793)[0m     @     0x7ed07c711ad3 at::TensorIterator::for_each()
[2m[36m(pid=56713)[0m     @     0x7f73f1ca27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56713)[0m     @     0x7f73f1ca58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56713)[0m     @     0x7f73f1ca5ad3 at::TensorIterator::for_each()
[2m[36m(pid=56752)[0m     @     0x7f51a99e54f5 at::Tensor::copy_()
[2m[36m(pid=56752)[0m     @     0x7f51afa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56752)[0m     @     0x55eb27675fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56752)[0m     @     0x55eb275d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56752)[0m     @     0x55eb2765bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56752)[0m     @     0x55eb2765ca20 method_vectorcall
[2m[36m(pid=56752)[0m     @     0x55eb275d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56752)[0m     @     0x55eb2765bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56752)[0m     @     0x55eb2765c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56752)[0m     @     0x55eb275d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56752)[0m     @     0x55eb2765bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56752)[0m     @     0x55eb2765c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56752)[0m     @     0x55eb275d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56752)[0m     @     0x55eb2765bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56752)[0m     @     0x55eb2765c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56752)[0m     @     0x55eb275d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56752)[0m     @     0x55eb2765bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56752)[0m     @     0x55eb2765c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56752)[0m     @     0x55eb275d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x7fc1a658d4f5 at::Tensor::copy_()
[2m[36m(pid=56709)[0m     @     0x7fc1a8a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56709)[0m     @     0x7fc1a658d4f5 at::Tensor::copy_()
[2m[36m(pid=56709)[0m     @     0x7fc1ac63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56709)[0m     @     0x561586de1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56709)[0m     @     0x561586d3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x561586dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56709)[0m     @     0x561586dc8a20 method_vectorcall
[2m[36m(pid=56709)[0m     @     0x561586d3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x561586dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56709)[0m     @     0x561586dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56709)[0m     @     0x561586d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x561586dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56709)[0m     @     0x561586dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56709)[0m     @     0x561586d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x561586dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56709)[0m     @     0x561586dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56756)[0m     @     0x7f49b9ecc4f5 at::Tensor::copy_()
[2m[36m(pid=56756)[0m     @     0x7f49bc39f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56756)[0m     @     0x7f49b9ecc4f5 at::Tensor::copy_()
[2m[36m(pid=56756)[0m     @     0x7f49bff7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56756)[0m     @     0x55684e4d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56756)[0m     @     0x55684e42bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56756)[0m     @     0x55684e4b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56756)[0m     @     0x55684e4b7a20 method_vectorcall
[2m[36m(pid=56756)[0m     @     0x55684e42bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56756)[0m     @     0x55684e4b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56756)[0m     @     0x55684e4b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56756)[0m     @     0x55684e42c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56756)[0m     @     0x55684e4b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56756)[0m     @     0x55684e4b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56756)[0m     @     0x55684e42c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56756)[0m     @     0x55684e4b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56756)[0m     @     0x55684e4b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56756)[0m     @     0x55684e42c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56756)[0m     @     0x55684e4b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=56756)[0m     @     0x55684e4b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56756)[0m     @     0x55684e42c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x7f549f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=56695)[0m     @     0x7f549f223d91 at::TensorIterator::for_each()
[2m[36m(pid=56695)[0m     @     0x7f549fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56695)[0m     @     0x7f549fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56695)[0m     @     0x7f549efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56695)[0m     @     0x7f549efc9388 at::native::copy_impl()
[2m[36m(pid=56688)[0m     @     0x556609ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56688)[0m     @     0x556609ea8a20 method_vectorcall
[2m[36m(pid=56688)[0m     @     0x556609e1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56688)[0m     @     0x556609ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56688)[0m     @     0x556609ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56688)[0m     @     0x556609e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56688)[0m     @     0x556609ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56688)[0m     @     0x556609ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56688)[0m     @     0x556609e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56688)[0m     @     0x556609ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56688)[0m     @     0x556609ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56688)[0m     @     0x556609e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56688)[0m     @     0x556609ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56688)[0m     @     0x556609ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56688)[0m     @     0x556609e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x7f989adea4f5 at::Tensor::copy_()
[2m[36m(pid=56745)[0m     @     0x7f98a0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56745)[0m     @     0x55d3659e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56745)[0m     @     0x55d36593cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x55d3659c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56745)[0m     @     0x55d3659c8a20 method_vectorcall
[2m[36m(pid=56745)[0m     @     0x55d36593cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x55d3659c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56745)[0m     @     0x55d3659c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56745)[0m     @     0x55d36593d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x55d3659c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56745)[0m     @     0x55d3659c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56745)[0m     @     0x55d36593d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x55d3659c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56745)[0m     @     0x55d3659c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56745)[0m     @     0x55d36593d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56745)[0m     @     0x55d3659c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56745)[0m     @     0x55d3659c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56745)[0m     @     0x55d36593d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x7ef70a4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=56702)[0m     @     0x7ef70a4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=56702)[0m     @     0x7ef70ad94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56702)[0m     @     0x7ef70adb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56702)[0m     @     0x7ef70a259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56702)[0m     @     0x7ef70a257388 at::native::copy_impl()
[2m[36m(pid=56681)[0m     @     0x7f8f4aad44f5 at::Tensor::copy_()
[2m[36m(pid=56681)[0m     @     0x7f8f4cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56681)[0m     @     0x7f8f4aad44f5 at::Tensor::copy_()
[2m[36m(pid=56681)[0m     @     0x7f8f50b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56681)[0m     @     0x55a63d1b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56681)[0m     @     0x55a63d10db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56681)[0m     @     0x55a63d198baf _PyEval_EvalCodeWithName
[2m[36m(pid=56681)[0m     @     0x55a63d199a20 method_vectorcall
[2m[36m(pid=56681)[0m     @     0x55a63d10dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56681)[0m     @     0x55a63d198baf _PyEval_EvalCodeWithName
[2m[36m(pid=56681)[0m     @     0x55a63d199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56681)[0m     @     0x55a63d10e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56681)[0m     @     0x55a63d198baf _PyEval_EvalCodeWithName
[2m[36m(pid=56681)[0m     @     0x55a63d199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56681)[0m     @     0x55a63d10e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56681)[0m     @     0x55a63d198baf _PyEval_EvalCodeWithName
[2m[36m(pid=56681)[0m     @     0x55a63d199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56681)[0m     @     0x55a63d10e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56681)[0m     @     0x55a63d198baf _PyEval_EvalCodeWithName
[2m[36m(pid=56681)[0m     @     0x55a63d199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56681)[0m     @     0x55a63d10e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x7f22745f74f5 at::Tensor::copy_()
[2m[36m(pid=56814)[0m     @     0x7f2276aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56814)[0m     @     0x7f22745f74f5 at::Tensor::copy_()
[2m[36m(pid=56814)[0m     @     0x7f227a6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56814)[0m     @     0x55e6c5fe4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56814)[0m     @     0x55e6c5f3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x55e6c5fcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56814)[0m     @     0x55e6c5fcba20 method_vectorcall
[2m[36m(pid=56814)[0m     @     0x55e6c5f3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x55e6c5fcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56814)[0m     @     0x55e6c5fcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56814)[0m     @     0x55e6c5f40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x55e6c5fcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56814)[0m     @     0x55e6c5fcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56814)[0m     @     0x55e6c5f40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x55e6c5fcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56814)[0m     @     0x55e6c5fcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56814)[0m     @     0x55e6c5f40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56814)[0m     @     0x55e6c5fcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56814)[0m     @     0x55e6c5fcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56814)[0m     @     0x55e6c5f40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x7fbcb237ed91 at::TensorIterator::for_each()
[2m[36m(pid=56693)[0m     @     0x7fbcb2c61b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56693)[0m     @     0x7fbcb2c84c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56693)[0m     @     0x7fbcb2126a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56693)[0m     @     0x7fbcb2124388 at::native::copy_impl()
[2m[36m(pid=56789)[0m     @     0x7ed1045a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56789)[0m     @     0x7ed1045a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=56789)[0m     @     0x7ed1045a5d91 at::TensorIterator::for_each()
[2m[36m(pid=56789)[0m     @     0x7ed104e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56789)[0m     @     0x7ed104eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56716)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56716)[0m *** SIGSEGV (@0x0) received by PID 56716 (TID 0x7f834c8e7700) from PID 0; stack trace: ***
[2m[36m(pid=56716)[0m     @     0x7f834c4c0390 (unknown)
[2m[36m(pid=56775)[0m     @     0x7f00426c9390 (unknown)
[2m[36m(pid=56775)[0m     @     0x7ed14257cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56775)[0m     @     0x7ed141ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56775)[0m     @     0x7ed141caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56775)[0m     @     0x7ed141caaad3 at::TensorIterator::for_each()
[2m[36m(pid=56782)[0m     @     0x7fa1fe42aad3 at::TensorIterator::for_each()
[2m[36m(pid=56782)[0m     @     0x7fa1fe42ad91 at::TensorIterator::for_each()
[2m[36m(pid=56782)[0m     @     0x7fa1fed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56782)[0m     @     0x7fa1fed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56685)[0m     @     0x7f742374aad3 at::TensorIterator::for_each()
[2m[36m(pid=56685)[0m     @     0x7f742374ad91 at::TensorIterator::for_each()
[2m[36m(pid=56685)[0m     @     0x7f742402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56685)[0m     @     0x7f7424050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56685)[0m     @     0x7f74234f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56685)[0m     @     0x7f74234f0388 at::native::copy_impl()
[2m[36m(pid=56766)[0m     @     0x7f7da15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56766)[0m     @     0x7f7da1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=56766)[0m     @     0x7f7da1552d91 at::TensorIterator::for_each()
[2m[36m(pid=56766)[0m     @     0x7f7da1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56788)[0m     @     0x7f794dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=56788)[0m     @     0x7f794dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=56788)[0m     @     0x7f794e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56788)[0m     @     0x7f794e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56788)[0m     @     0x7f794d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56788)[0m     @     0x7f794d9cd388 at::native::copy_impl()
[2m[36m(pid=56757)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56757)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56757)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56757)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56757)[0m *** SIGSEGV (@0x0) received by PID 56757 (TID 0x7f4e8508c700) from PID 0; stack trace: ***
[2m[36m(pid=56757)[0m     @     0x7f4e84c65390 (unknown)
[2m[36m(pid=56757)[0m     @     0x7f1f84b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56764)[0m     @     0x7f58e21418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56744)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56744)[0m *** SIGSEGV (@0x0) received by PID 56744 (TID 0x7f2c1c2bd700) from PID 0; stack trace: ***
[2m[36m(pid=56744)[0m     @     0x7f2c1be96390 (unknown)
[2m[36m(pid=56744)[0m     @     0x7efd1be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56744)[0m     @     0x7efd1b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56760)[0m     @     0x7f10c20b9390 (unknown)
[2m[36m(pid=56760)[0m     @     0x7ee1c1d89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56760)[0m     @     0x7ee1c14b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56699)[0m     @     0x7fc929552d91 at::TensorIterator::for_each()
[2m[36m(pid=56699)[0m     @     0x7fc929e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56699)[0m     @     0x7fc929e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56699)[0m     @     0x7fc9292faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56699)[0m     @     0x7fc9292f8388 at::native::copy_impl()
[2m[36m(pid=56747)[0m     @     0x7fae50e22d91 at::TensorIterator::for_each()
[2m[36m(pid=56747)[0m     @     0x7fae51705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56747)[0m     @     0x7fae51728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56747)[0m     @     0x7fae50bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56747)[0m     @     0x7fae50bc8388 at::native::copy_impl()
[2m[36m(pid=56697)[0m     @     0x7f73e116eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56697)[0m     @     0x7f73e1191c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56697)[0m     @     0x7f73e0633a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56697)[0m     @     0x7f73e0631388 at::native::copy_impl()
[2m[36m(pid=56686)[0m     @     0x7f648e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=56686)[0m     @     0x7f648e957d91 at::TensorIterator::for_each()
[2m[36m(pid=56686)[0m     @     0x7f648f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56686)[0m     @     0x7f648f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56746)[0m     @     0x7f31fc1b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=56746)[0m     @     0x7f31fc1b9d91 at::TensorIterator::for_each()
[2m[36m(pid=56746)[0m     @     0x7f31fca9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56761)[0m     @     0x7f715f74aad3 at::TensorIterator::for_each()
[2m[36m(pid=56761)[0m     @     0x7f715f74ad91 at::TensorIterator::for_each()
[2m[36m(pid=56761)[0m     @     0x7f716002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56761)[0m     @     0x7f7160050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56698)[0m     @     0x7f8df1590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56698)[0m     @     0x7f8df15b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56698)[0m     @     0x7f8df0a55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56698)[0m     @     0x7f8df0a53388 at::native::copy_impl()
[2m[36m(pid=56698)[0m     @     0x7f8df0a555a4 at::native::copy_()
[2m[36m(pid=56762)[0m     @     0x7fa0b6581d91 at::TensorIterator::for_each()
[2m[36m(pid=56762)[0m     @     0x7fa0b6e64b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56762)[0m     @     0x7fa0b6e87c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56741)[0m     @     0x7fb4b998c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56741)[0m     @     0x7fb4b998cad3 at::TensorIterator::for_each()
[2m[36m(pid=56705)[0m     @     0x7f86eea24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56705)[0m     @     0x7f86eea47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56705)[0m     @     0x7f86edee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56705)[0m     @     0x7f86edee7388 at::native::copy_impl()
[2m[36m(pid=56705)[0m     @     0x7f86edee95a4 at::native::copy_()
[2m[36m(pid=56705)[0m     @     0x7f86ee5d44f5 at::Tensor::copy_()
[2m[36m(pid=56705)[0m     @     0x7f86f0aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56689)[0m     @     0x7f43f9552d91 at::TensorIterator::for_each()
[2m[36m(pid=56689)[0m     @     0x7f43f9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56689)[0m     @     0x7f43f9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56689)[0m     @     0x7f43f92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56689)[0m     @     0x7f43f92f8388 at::native::copy_impl()
[2m[36m(pid=56689)[0m     @     0x7f43f92fa5a4 at::native::copy_()
[2m[36m(pid=56689)[0m     @     0x7f43f99e54f5 at::Tensor::copy_()
[2m[36m(pid=56790)[0m     @     0x7f90e54a5d91 at::TensorIterator::for_each()
[2m[36m(pid=56790)[0m     @     0x7f90e5d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56790)[0m     @     0x7f90e5dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56790)[0m     @     0x7f90e524da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56790)[0m     @     0x7f90e524b388 at::native::copy_impl()
[2m[36m(pid=56797)[0m     @     0x7fbb8cba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56797)[0m     @     0x7fbb8cba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=56797)[0m     @     0x7fbb8cba4d91 at::TensorIterator::for_each()
[2m[36m(pid=56797)[0m     @     0x7fbb8d487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56797)[0m     @     0x7fbb8d4aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56805)[0m *** SIGSEGV (@0x0) received by PID 56805 (TID 0x7f7082981700) from PID 0; stack trace: ***
[2m[36m(pid=56805)[0m     @     0x7f708255a390 (unknown)
[2m[36m(pid=56805)[0m     @     0x7f4182365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56805)[0m     @     0x7f4181a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56805)[0m     @     0x7f4181a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56805)[0m     @     0x7f4181a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=56786)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56786)[0m *** SIGSEGV (@0x0) received by PID 56786 (TID 0x7fc34f024700) from PID 0; stack trace: ***
[2m[36m(pid=56786)[0m     @     0x7fc34ebfd390 (unknown)
[2m[36m(pid=56786)[0m     @     0x7f944eb92f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56786)[0m     @     0x7f944e2bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56786)[0m     @     0x7f944e2c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56804)[0m     @     0x7f30da852d91 at::TensorIterator::for_each()
[2m[36m(pid=56804)[0m     @     0x7f30db135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56804)[0m     @     0x7f30db158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56804)[0m     @     0x7f30da5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56804)[0m     @     0x7f30da5f8388 at::native::copy_impl()
[2m[36m(pid=56680)[0m     @     0x7ee2e17234f5 at::Tensor::copy_()
[2m[36m(pid=56680)[0m     @     0x7ee2e77ce79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56680)[0m     @     0x558ad11d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56680)[0m     @     0x558ad1133b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56680)[0m     @     0x558ad11bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56680)[0m     @     0x558ad11bfa20 method_vectorcall
[2m[36m(pid=56680)[0m     @     0x558ad1133bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56680)[0m     @     0x558ad11bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56680)[0m     @     0x558ad11bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56680)[0m     @     0x558ad1134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56680)[0m     @     0x558ad11bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56680)[0m     @     0x558ad11bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56680)[0m     @     0x558ad1134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56680)[0m     @     0x558ad11bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56680)[0m     @     0x558ad11bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56680)[0m     @     0x558ad1134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56680)[0m     @     0x558ad11bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56680)[0m     @     0x558ad11bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56680)[0m     @     0x558ad1134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x7ee660f8d4f5 at::Tensor::copy_()
[2m[36m(pid=56708)[0m     @     0x7ee66703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56708)[0m     @     0x561d278e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56708)[0m     @     0x561d27844b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x561d278cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56708)[0m     @     0x561d278d0a20 method_vectorcall
[2m[36m(pid=56708)[0m     @     0x561d27844bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x561d278cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56708)[0m     @     0x561d278d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56708)[0m     @     0x561d27845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x561d278cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56708)[0m     @     0x561d278d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56708)[0m     @     0x561d27845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x561d278cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56708)[0m     @     0x561d278d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56708)[0m     @     0x561d27845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56708)[0m     @     0x561d278cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56708)[0m     @     0x561d278d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56708)[0m     @     0x561d27845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x7f5441b6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56694)[0m     @     0x7f5441010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56694)[0m     @     0x7f544100e388 at::native::copy_impl()
[2m[36m(pid=56694)[0m     @     0x7f54410105a4 at::native::copy_()
[2m[36m(pid=56694)[0m     @     0x7f54416fb4f5 at::Tensor::copy_()
[2m[36m(pid=56694)[0m     @     0x7f5443bce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56706)[0m     @     0x7fb27fd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=56706)[0m     @     0x7fb27fd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=56706)[0m     @     0x7fb28061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56706)[0m     @     0x7fb280642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=56684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=56684)[0m *** Aborted at 1604573329 (unix time) try "date -d @1604573329" if you are using GNU date ***
[2m[36m(pid=56684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=56684)[0m *** SIGSEGV (@0x0) received by PID 56684 (TID 0x7fed5e1c0700) from PID 0; stack trace: ***
[2m[36m(pid=56684)[0m     @     0x7fed5dd99390 (unknown)
[2m[36m(pid=56684)[0m     @     0x7fbe5dd37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56684)[0m     @     0x7fbe5d4627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56700)[0m     @     0x7f4f999458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56700)[0m     @     0x7f4f974724f5 at::Tensor::copy_()
[2m[36m(pid=56700)[0m     @     0x7f4f9d51d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56700)[0m     @     0x561049a14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56700)[0m     @     0x56104996fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x5610499fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56700)[0m     @     0x5610499fba20 method_vectorcall
[2m[36m(pid=56700)[0m     @     0x56104996fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x5610499fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56700)[0m     @     0x5610499fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56700)[0m     @     0x561049970689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x5610499fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56700)[0m     @     0x5610499fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56700)[0m     @     0x561049970689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x5610499fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56700)[0m     @     0x5610499fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56700)[0m     @     0x561049970689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56700)[0m     @     0x5610499fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=56700)[0m     @     0x5610499fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56700)[0m     @     0x561049970689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x7ed485cbb4f5 at::Tensor::copy_()
[2m[36m(pid=56768)[0m     @     0x7ed48bd6679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56768)[0m     @     0x55697511ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56768)[0m     @     0x55697507ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x556975105baf _PyEval_EvalCodeWithName
[2m[36m(pid=56768)[0m     @     0x556975106a20 method_vectorcall
[2m[36m(pid=56768)[0m     @     0x55697507abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x556975105baf _PyEval_EvalCodeWithName
[2m[36m(pid=56768)[0m     @     0x556975106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56768)[0m     @     0x55697507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x556975105baf _PyEval_EvalCodeWithName
[2m[36m(pid=56768)[0m     @     0x556975106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56768)[0m     @     0x55697507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x556975105baf _PyEval_EvalCodeWithName
[2m[36m(pid=56768)[0m     @     0x556975106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56768)[0m     @     0x55697507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56768)[0m     @     0x556975105baf _PyEval_EvalCodeWithName
[2m[36m(pid=56768)[0m     @     0x556975106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56768)[0m     @     0x55697507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x7f5673cf74f5 at::Tensor::copy_()
[2m[36m(pid=56763)[0m     @     0x7f5679da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56763)[0m     @     0x555818948fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56763)[0m     @     0x5558188a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x55581892ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56763)[0m     @     0x55581892fa20 method_vectorcall
[2m[36m(pid=56763)[0m     @     0x5558188a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x55581892ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56763)[0m     @     0x55581892f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56763)[0m     @     0x5558188a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x55581892ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56763)[0m     @     0x55581892f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56763)[0m     @     0x5558188a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x55581892ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56763)[0m     @     0x55581892f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56763)[0m     @     0x5558188a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56763)[0m     @     0x55581892ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56763)[0m     @     0x55581892f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56763)[0m     @     0x5558188a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x7f001abb04f5 at::Tensor::copy_()
[2m[36m(pid=56751)[0m     @     0x7f0020c5b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56751)[0m     @     0x55affaa7dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56751)[0m     @     0x55affa9d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x55affaa63baf _PyEval_EvalCodeWithName
[2m[36m(pid=56751)[0m     @     0x55affaa64a20 method_vectorcall
[2m[36m(pid=56751)[0m     @     0x55affa9d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x55affaa63baf _PyEval_EvalCodeWithName
[2m[36m(pid=56751)[0m     @     0x55affaa64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56751)[0m     @     0x55affa9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x55affaa63baf _PyEval_EvalCodeWithName
[2m[36m(pid=56751)[0m     @     0x55affaa64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56751)[0m     @     0x55affa9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x55affaa63baf _PyEval_EvalCodeWithName
[2m[36m(pid=56751)[0m     @     0x55affaa64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56751)[0m     @     0x55affa9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56751)[0m     @     0x55affaa63baf _PyEval_EvalCodeWithName
[2m[36m(pid=56751)[0m     @     0x55affaa64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56751)[0m     @     0x55affa9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x7f7a5adea4f5 at::Tensor::copy_()
[2m[36m(pid=56794)[0m     @     0x7f7a60e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56794)[0m     @     0x556e428cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56794)[0m     @     0x556e42826b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x556e428b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56794)[0m     @     0x556e428b2a20 method_vectorcall
[2m[36m(pid=56794)[0m     @     0x556e42826bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x556e428b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56794)[0m     @     0x556e428b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56794)[0m     @     0x556e42827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x556e428b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56794)[0m     @     0x556e428b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56794)[0m     @     0x556e42827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x556e428b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56794)[0m     @     0x556e428b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56794)[0m     @     0x556e42827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56794)[0m     @     0x556e428b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56794)[0m     @     0x556e428b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56794)[0m     @     0x556e42827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x7fcc5df0c4f5 at::Tensor::copy_()
[2m[36m(pid=56792)[0m     @     0x7fcc63fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56792)[0m     @     0x55f7363ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56792)[0m     @     0x55f736347b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x55f7363d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56792)[0m     @     0x55f7363d3a20 method_vectorcall
[2m[36m(pid=56792)[0m     @     0x55f736347bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x55f7363d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56792)[0m     @     0x55f7363d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56792)[0m     @     0x55f736348689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x55f7363d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56792)[0m     @     0x55f7363d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56792)[0m     @     0x55f736348689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x55f7363d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56792)[0m     @     0x55f7363d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56792)[0m     @     0x55f736348689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56792)[0m     @     0x55f7363d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56792)[0m     @     0x55f7363d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56792)[0m     @     0x55f736348689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x7fa7421384f5 at::Tensor::copy_()
[2m[36m(pid=56691)[0m     @     0x7fa7481e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56691)[0m     @     0x555d78965fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56691)[0m     @     0x555d788c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x555d7894bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56691)[0m     @     0x555d7894ca20 method_vectorcall
[2m[36m(pid=56691)[0m     @     0x555d788c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x555d7894bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56691)[0m     @     0x555d7894c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56691)[0m     @     0x555d788c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x555d7894bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56691)[0m     @     0x555d7894c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56691)[0m     @     0x555d788c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x555d7894bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56691)[0m     @     0x555d7894c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56691)[0m     @     0x555d788c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56691)[0m     @     0x555d7894bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56691)[0m     @     0x555d7894c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56691)[0m     @     0x555d788c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x7eda6931ad91 at::TensorIterator::for_each()
[2m[36m(pid=56759)[0m     @     0x7eda69bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56759)[0m     @     0x7eda69c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56759)[0m     @     0x7eda690c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56759)[0m     @     0x7eda690c0388 at::native::copy_impl()
[2m[36m(pid=56759)[0m     @     0x7eda690c25a4 at::native::copy_()
[2m[36m(pid=56711)[0m     @     0x7f07e5c5e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56711)[0m     @     0x7f07e378b4f5 at::Tensor::copy_()
[2m[36m(pid=56711)[0m     @     0x7f07e983679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56711)[0m     @     0x55de2fb47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56711)[0m     @     0x55de2faa2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56711)[0m     @     0x55de2fb2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56711)[0m     @     0x55de2fb2ea20 method_vectorcall
[2m[36m(pid=56711)[0m     @     0x55de2faa2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56711)[0m     @     0x55de2fb2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56711)[0m     @     0x55de2fb2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56711)[0m     @     0x55de2faa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56711)[0m     @     0x55de2fb2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56711)[0m     @     0x55de2fb2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56711)[0m     @     0x55de2faa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56711)[0m     @     0x55de2fb2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56711)[0m     @     0x55de2fb2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56711)[0m     @     0x55de2faa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56711)[0m     @     0x55de2fb2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56711)[0m     @     0x55de2fb2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56711)[0m     @     0x55de2faa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x7fc3ee343ad3 at::TensorIterator::for_each()
[2m[36m(pid=56755)[0m     @     0x7fc3ee343d91 at::TensorIterator::for_each()
[2m[36m(pid=56755)[0m     @     0x7fc3eec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56755)[0m     @     0x7fc3eec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56755)[0m     @     0x7fc3ee0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56755)[0m     @     0x7fc3ee0e9388 at::native::copy_impl()
[2m[36m(pid=56754)[0m     @     0x7facd96fb4f5 at::Tensor::copy_()
[2m[36m(pid=56754)[0m     @     0x7facdf7a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56754)[0m     @     0x55700fab7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56754)[0m     @     0x55700fa12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56754)[0m     @     0x55700fa9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56754)[0m     @     0x55700fa9ea20 method_vectorcall
[2m[36m(pid=56754)[0m     @     0x55700fa12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56754)[0m     @     0x55700fa9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56754)[0m     @     0x55700fa9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56754)[0m     @     0x55700fa13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56754)[0m     @     0x55700fa9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56754)[0m     @     0x55700fa9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56754)[0m     @     0x55700fa13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56754)[0m     @     0x55700fa9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56754)[0m     @     0x55700fa9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56754)[0m     @     0x55700fa13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56754)[0m     @     0x55700fa9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56754)[0m     @     0x55700fa9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56754)[0m     @     0x55700fa13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x7fcc8eedea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56683)[0m     @     0x7fcc8eedc388 at::native::copy_impl()
[2m[36m(pid=56683)[0m     @     0x7fcc8eede5a4 at::native::copy_()
[2m[36m(pid=56683)[0m     @     0x7fcc8f5c94f5 at::Tensor::copy_()
[2m[36m(pid=56683)[0m     @     0x7fcc91a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56714)[0m     @     0x55913957ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56714)[0m     @     0x559139605baf _PyEval_EvalCodeWithName
[2m[36m(pid=56714)[0m     @     0x559139606a20 method_vectorcall
[2m[36m(pid=56714)[0m     @     0x55913957abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56714)[0m     @     0x559139605baf _PyEval_EvalCodeWithName
[2m[36m(pid=56714)[0m     @     0x559139606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56714)[0m     @     0x55913957b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56714)[0m     @     0x559139605baf _PyEval_EvalCodeWithName
[2m[36m(pid=56714)[0m     @     0x559139606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56714)[0m     @     0x55913957b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56714)[0m     @     0x559139605baf _PyEval_EvalCodeWithName
[2m[36m(pid=56714)[0m     @     0x559139606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56714)[0m     @     0x55913957b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56714)[0m     @     0x559139605baf _PyEval_EvalCodeWithName
[2m[36m(pid=56714)[0m     @     0x559139606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56714)[0m     @     0x55913957b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x7fbf7dd86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56690)[0m     @     0x7fbf7d228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56690)[0m     @     0x7fbf7d226388 at::native::copy_impl()
[2m[36m(pid=56690)[0m     @     0x7fbf7d2285a4 at::native::copy_()
[2m[36m(pid=56690)[0m     @     0x7fbf7d9134f5 at::Tensor::copy_()
[2m[36m(pid=56690)[0m     @     0x7fbf7fde68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56816)[0m     @     0x7ee0eadea4f5 at::Tensor::copy_()
[2m[36m(pid=56816)[0m     @     0x7ee0f0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56816)[0m     @     0x55a415a88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56816)[0m     @     0x55a4159e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x55a415a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56816)[0m     @     0x55a415a6fa20 method_vectorcall
[2m[36m(pid=56816)[0m     @     0x55a4159e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x55a415a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56816)[0m     @     0x55a415a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56816)[0m     @     0x55a4159e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x55a415a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56816)[0m     @     0x55a415a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56816)[0m     @     0x55a4159e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x55a415a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56816)[0m     @     0x55a415a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56816)[0m     @     0x55a4159e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56816)[0m     @     0x55a415a6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56816)[0m     @     0x55a415a6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56816)[0m     @     0x55a4159e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x7f10121654f5 at::Tensor::copy_()
[2m[36m(pid=56795)[0m     @     0x7f101821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56795)[0m     @     0x5627ddf2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56795)[0m     @     0x5627dde89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x5627ddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=56795)[0m     @     0x5627ddf15a20 method_vectorcall
[2m[36m(pid=56795)[0m     @     0x5627dde89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x5627ddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=56795)[0m     @     0x5627ddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56795)[0m     @     0x5627dde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x5627ddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=56795)[0m     @     0x5627ddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56795)[0m     @     0x5627dde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x5627ddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=56795)[0m     @     0x5627ddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56795)[0m     @     0x5627dde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56795)[0m     @     0x5627ddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=56795)[0m     @     0x5627ddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56795)[0m     @     0x5627dde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x559e2d00dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56767)[0m     @     0x559e2d00e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56767)[0m     @     0x559e2cf83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x559e2d00dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56767)[0m     @     0x559e2d00e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56767)[0m     @     0x559e2cf83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x559e2d00dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56767)[0m     @     0x559e2d00e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56767)[0m     @     0x559e2cf83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56767)[0m     @     0x559e2d00dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56767)[0m     @     0x559e2d00e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56767)[0m     @     0x559e2cf83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8dd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8ddc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56796)[0m     @     0x564f8ddc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56796)[0m     @     0x564f8dd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56796)[0m     @     0x564f8ddc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56796)[0m     @     0x564f8ddc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56796)[0m     @     0x564f8dd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x7eeb5e1d0388 at::native::copy_impl()
[2m[36m(pid=56715)[0m     @     0x7eeb5e1d25a4 at::native::copy_()
[2m[36m(pid=56715)[0m     @     0x7eeb5e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56682)[0m     @     0x559702cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56682)[0m     @     0x559702cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56682)[0m     @     0x559702c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x7f4daf74ad91 at::TensorIterator::for_each()
[2m[36m(pid=56780)[0m     @     0x7f4db002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56780)[0m     @     0x7f4db0050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56780)[0m     @     0x7f4daf4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56780)[0m     @     0x7f4daf4f0388 at::native::copy_impl()
[2m[36m(pid=56758)[0m     @     0x7f82f9868d91 at::TensorIterator::for_each()
[2m[36m(pid=56758)[0m     @     0x7f82fa14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56758)[0m     @     0x7f82fa16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56758)[0m     @     0x7f82f9610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56758)[0m     @     0x7f82f960e388 at::native::copy_impl()
[2m[36m(pid=56779)[0m     @     0x7f4eeefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56779)[0m     @     0x7f4eeefc9388 at::native::copy_impl()
[2m[36m(pid=56779)[0m     @     0x7f4eeefcb5a4 at::native::copy_()
[2m[36m(pid=56779)[0m     @     0x7f4eef6b64f5 at::Tensor::copy_()
[2m[36m(pid=56774)[0m     @     0x7f237a42aad3 at::TensorIterator::for_each()
[2m[36m(pid=56774)[0m     @     0x7f237a42ad91 at::TensorIterator::for_each()
[2m[36m(pid=56774)[0m     @     0x7f237ad0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56774)[0m     @     0x7f237ad30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56774)[0m     @     0x7f237a1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56793)[0m     @     0x7ed07c711d91 at::TensorIterator::for_each()
[2m[36m(pid=56793)[0m     @     0x7ed07cff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56793)[0m     @     0x7ed07d017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56793)[0m     @     0x7ed07c4b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56793)[0m     @     0x7ed07c4b7388 at::native::copy_impl()
[2m[36m(pid=56713)[0m     @     0x7f73f1ca5d91 at::TensorIterator::for_each()
[2m[36m(pid=56713)[0m     @     0x7f73f2588b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56713)[0m     @     0x7f73f25abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56713)[0m     @     0x7f73f1a4da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56713)[0m     @     0x7f73f1a4b388 at::native::copy_impl()
[2m[36m(pid=56709)[0m     @     0x561586d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56709)[0m     @     0x561586dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=56709)[0m     @     0x561586dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56709)[0m     @     0x561586d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x7f549efcb5a4 at::native::copy_()
[2m[36m(pid=56695)[0m     @     0x7f549f6b64f5 at::Tensor::copy_()
[2m[36m(pid=56695)[0m     @     0x7f54a1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56702)[0m     @     0x7ef70a2595a4 at::native::copy_()
[2m[36m(pid=56702)[0m     @     0x7ef70a9444f5 at::Tensor::copy_()
[2m[36m(pid=56702)[0m     @     0x7ef70ce178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56693)[0m     @     0x7fbcb21265a4 at::native::copy_()
[2m[36m(pid=56693)[0m     @     0x7fbcb28114f5 at::Tensor::copy_()
[2m[36m(pid=56693)[0m     @     0x7fbcb4ce48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56789)[0m     @     0x7ed10434da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56789)[0m     @     0x7ed10434b388 at::native::copy_impl()
[2m[36m(pid=56789)[0m     @     0x7ed10434d5a4 at::native::copy_()
[2m[36m(pid=56716)[0m     @     0x7f544c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=56716)[0m     @     0x7f544ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56716)[0m     @     0x7f544ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56716)[0m     @     0x7f544ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=56716)[0m     @     0x7f544ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=56775)[0m     @     0x7ed141caad91 at::TensorIterator::for_each()
[2m[36m(pid=56775)[0m     @     0x7ed14258db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56775)[0m     @     0x7ed1425b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56775)[0m     @     0x7ed141a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56775)[0m     @     0x7ed141a50388 at::native::copy_impl()
[2m[36m(pid=56775)[0m     @     0x7ed141a525a4 at::native::copy_()
[2m[36m(pid=56782)[0m     @     0x7fa1fe1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56782)[0m     @     0x7fa1fe1d0388 at::native::copy_impl()
[2m[36m(pid=56782)[0m     @     0x7fa1fe1d25a4 at::native::copy_()
[2m[36m(pid=56782)[0m     @     0x7fa1fe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56782)[0m     @     0x7fa200d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56685)[0m     @     0x7f74234f25a4 at::native::copy_()
[2m[36m(pid=56685)[0m     @     0x7f7423bdd4f5 at::Tensor::copy_()
[2m[36m(pid=56685)[0m     @     0x7f74260b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56766)[0m     @     0x7f7da1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56766)[0m     @     0x7f7da12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56766)[0m     @     0x7f7da12f8388 at::native::copy_impl()
[2m[36m(pid=56766)[0m     @     0x7f7da12fa5a4 at::native::copy_()
[2m[36m(pid=56766)[0m     @     0x7f7da19e54f5 at::Tensor::copy_()
[2m[36m(pid=56788)[0m     @     0x7f794d9cf5a4 at::native::copy_()
[2m[36m(pid=56788)[0m     @     0x7f794e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=56788)[0m     @     0x7f795058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56788)[0m     @     0x7f794e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=56757)[0m     @     0x7f1f842667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=56757)[0m     @     0x7f1f842698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56757)[0m     @     0x7f1f84269ad3 at::TensorIterator::for_each()
[2m[36m(pid=56757)[0m     @     0x7f1f84269d91 at::TensorIterator::for_each()
[2m[36m(pid=56764)[0m     @     0x7f58e2141ad3 at::TensorIterator::for_each()
[2m[36m(pid=56764)[0m     @     0x7f58e2141d91 at::TensorIterator::for_each()
[2m[36m(pid=56764)[0m     @     0x7f58e2a24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56764)[0m     @     0x7f58e2a47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56764)[0m     @     0x7f58e1ee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56764)[0m     @     0x7f58e1ee7388 at::native::copy_impl()
[2m[36m(pid=56744)[0m     @     0x7efd1b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56744)[0m     @     0x7efd1b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=56744)[0m     @     0x7efd1b539d91 at::TensorIterator::for_each()
[2m[36m(pid=56744)[0m     @     0x7efd1be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56744)[0m     @     0x7efd1be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56760)[0m     @     0x7ee1c14b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56760)[0m     @     0x7ee1c14b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=56760)[0m     @     0x7ee1c14b7d91 at::TensorIterator::for_each()
[2m[36m(pid=56760)[0m     @     0x7ee1c1d9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56699)[0m     @     0x7fc9292fa5a4 at::native::copy_()
[2m[36m(pid=56699)[0m     @     0x7fc9299e54f5 at::Tensor::copy_()
[2m[36m(pid=56699)[0m     @     0x7fc92beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56699)[0m     @     0x7fc9299e54f5 at::Tensor::copy_()
[2m[36m(pid=56699)[0m     @     0x7fc92fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56699)[0m     @     0x55d238290fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56699)[0m     @     0x55d2381ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56699)[0m     @     0x55d238276baf _PyEval_EvalCodeWithName
[2m[36m(pid=56699)[0m     @     0x55d238277a20 method_vectorcall
[2m[36m(pid=56699)[0m     @     0x55d2381ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56699)[0m     @     0x55d238276baf _PyEval_EvalCodeWithName
[2m[36m(pid=56699)[0m     @     0x55d238277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56699)[0m     @     0x55d2381ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56699)[0m     @     0x55d238276baf _PyEval_EvalCodeWithName
[2m[36m(pid=56699)[0m     @     0x55d238277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56699)[0m     @     0x55d2381ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56699)[0m     @     0x55d238276baf _PyEval_EvalCodeWithName
[2m[36m(pid=56699)[0m     @     0x55d238277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56699)[0m     @     0x55d2381ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56699)[0m     @     0x55d238276baf _PyEval_EvalCodeWithName
[2m[36m(pid=56699)[0m     @     0x55d238277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56699)[0m     @     0x55d2381ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x7fae50bca5a4 at::native::copy_()
[2m[36m(pid=56747)[0m     @     0x7fae512b54f5 at::Tensor::copy_()
[2m[36m(pid=56747)[0m     @     0x7fae537888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56747)[0m     @     0x7fae512b54f5 at::Tensor::copy_()
[2m[36m(pid=56747)[0m     @     0x7fae5736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56747)[0m     @     0x5628b6aa2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56697)[0m     @     0x7f73e06335a4 at::native::copy_()
[2m[36m(pid=56697)[0m     @     0x7f73e0d1e4f5 at::Tensor::copy_()
[2m[36m(pid=56697)[0m     @     0x7f73e31f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56697)[0m     @     0x7f73e0d1e4f5 at::Tensor::copy_()
[2m[36m(pid=56697)[0m     @     0x7f73e6dc979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56697)[0m     @     0x560624445fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56697)[0m     @     0x5606243a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56697)[0m     @     0x56062442bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56697)[0m     @     0x56062442ca20 method_vectorcall
[2m[36m(pid=56697)[0m     @     0x5606243a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56697)[0m     @     0x56062442bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56697)[0m     @     0x56062442c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56697)[0m     @     0x5606243a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56697)[0m     @     0x56062442bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56697)[0m     @     0x56062442c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56697)[0m     @     0x5606243a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56697)[0m     @     0x56062442bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56697)[0m     @     0x56062442c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56697)[0m     @     0x5606243a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56697)[0m     @     0x56062442bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56697)[0m     @     0x56062442c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56697)[0m     @     0x5606243a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x7f648e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56686)[0m     @     0x7f648e6fd388 at::native::copy_impl()
[2m[36m(pid=56686)[0m     @     0x7f648e6ff5a4 at::native::copy_()
[2m[36m(pid=56686)[0m     @     0x7f648edea4f5 at::Tensor::copy_()
[2m[36m(pid=56686)[0m     @     0x7f64912bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56746)[0m     @     0x7f31fcabfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56746)[0m     @     0x7f31fbf61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56746)[0m     @     0x7f31fbf5f388 at::native::copy_impl()
[2m[36m(pid=56746)[0m     @     0x7f31fbf615a4 at::native::copy_()
[2m[36m(pid=56746)[0m     @     0x7f31fc64c4f5 at::Tensor::copy_()
[2m[36m(pid=56761)[0m     @     0x7f715f4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56761)[0m     @     0x7f715f4f0388 at::native::copy_impl()
[2m[36m(pid=56761)[0m     @     0x7f715f4f25a4 at::native::copy_()
[2m[36m(pid=56761)[0m     @     0x7f715fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=56761)[0m     @     0x7f71620b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56698)[0m     @     0x7f8df11404f5 at::Tensor::copy_()
[2m[36m(pid=56698)[0m     @     0x7f8df36138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56698)[0m     @     0x7f8df11404f5 at::Tensor::copy_()
[2m[36m(pid=56698)[0m     @     0x7f8df71eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56698)[0m     @     0x55e71950afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56698)[0m     @     0x55e719465b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x55e7194f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56698)[0m     @     0x55e7194f1a20 method_vectorcall
[2m[36m(pid=56698)[0m     @     0x55e719465bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x55e7194f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56698)[0m     @     0x55e7194f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56698)[0m     @     0x55e719466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x55e7194f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56698)[0m     @     0x55e7194f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56698)[0m     @     0x55e719466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x55e7194f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56698)[0m     @     0x55e7194f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56698)[0m     @     0x55e719466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56698)[0m     @     0x55e7194f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56698)[0m     @     0x55e7194f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56698)[0m     @     0x55e719466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x7fa0b6329a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56741)[0m     @     0x7fb4b998cd91 at::TensorIterator::for_each()
[2m[36m(pid=56741)[0m     @     0x7fb4ba26fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56741)[0m     @     0x7fb4ba292c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56741)[0m     @     0x7fb4b9734a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56741)[0m     @     0x7fb4b9732388 at::native::copy_impl()
[2m[36m(pid=56705)[0m     @     0x7f86ee5d44f5 at::Tensor::copy_()
[2m[36m(pid=56705)[0m     @     0x7f86f447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56705)[0m     @     0x55e13d74bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56705)[0m     @     0x55e13d6a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56705)[0m     @     0x55e13d731baf _PyEval_EvalCodeWithName
[2m[36m(pid=56705)[0m     @     0x55e13d732a20 method_vectorcall
[2m[36m(pid=56705)[0m     @     0x55e13d6a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56705)[0m     @     0x55e13d731baf _PyEval_EvalCodeWithName
[2m[36m(pid=56705)[0m     @     0x55e13d732643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56705)[0m     @     0x55e13d6a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56705)[0m     @     0x55e13d731baf _PyEval_EvalCodeWithName
[2m[36m(pid=56705)[0m     @     0x55e13d732643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56705)[0m     @     0x55e13d6a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56705)[0m     @     0x55e13d731baf _PyEval_EvalCodeWithName
[2m[36m(pid=56705)[0m     @     0x55e13d732643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56705)[0m     @     0x55e13d6a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56705)[0m     @     0x55e13d731baf _PyEval_EvalCodeWithName
[2m[36m(pid=56705)[0m     @     0x55e13d732643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56705)[0m     @     0x55e13d6a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x7f43fbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56689)[0m     @     0x7f43f99e54f5 at::Tensor::copy_()
[2m[36m(pid=56689)[0m     @     0x7f43ffa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56689)[0m     @     0x5604796edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56689)[0m     @     0x560479648b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x5604796d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56689)[0m     @     0x5604796d4a20 method_vectorcall
[2m[36m(pid=56689)[0m     @     0x560479648bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x5604796d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56689)[0m     @     0x5604796d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56689)[0m     @     0x560479649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x5604796d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56689)[0m     @     0x5604796d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56689)[0m     @     0x560479649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x5604796d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56689)[0m     @     0x5604796d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56689)[0m     @     0x560479649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56689)[0m     @     0x5604796d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56689)[0m     @     0x5604796d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56689)[0m     @     0x560479649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x7f90e524d5a4 at::native::copy_()
[2m[36m(pid=56790)[0m     @     0x7f90e59384f5 at::Tensor::copy_()
[2m[36m(pid=56790)[0m     @     0x7f90e7e0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56797)[0m     @     0x7fbb8c94ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56797)[0m     @     0x7fbb8c94a388 at::native::copy_impl()
[2m[36m(pid=56797)[0m     @     0x7fbb8c94c5a4 at::native::copy_()
[2m[36m(pid=56805)[0m     @     0x7f4181a93d91 at::TensorIterator::for_each()
[2m[36m(pid=56805)[0m     @     0x7f4182376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56805)[0m     @     0x7f4182399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56805)[0m     @     0x7f418183ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56805)[0m     @     0x7f4181839388 at::native::copy_impl()
[2m[36m(pid=56786)[0m     @     0x7f944e2c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=56786)[0m     @     0x7f944e2c0d91 at::TensorIterator::for_each()
[2m[36m(pid=56786)[0m     @     0x7f944eba3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56786)[0m     @     0x7f944ebc6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56804)[0m     @     0x7f30da5fa5a4 at::native::copy_()
[2m[36m(pid=56804)[0m     @     0x7f30dace54f5 at::Tensor::copy_()
[2m[36m(pid=56804)[0m     @     0x7f30dd1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56694)[0m     @     0x7f54416fb4f5 at::Tensor::copy_()
[2m[36m(pid=56694)[0m     @     0x7f54477a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56694)[0m     @     0x55d7229b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56694)[0m     @     0x55d72290cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x55d722997baf _PyEval_EvalCodeWithName
[2m[36m(pid=56694)[0m     @     0x55d722998a20 method_vectorcall
[2m[36m(pid=56694)[0m     @     0x55d72290cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x55d722997baf _PyEval_EvalCodeWithName
[2m[36m(pid=56694)[0m     @     0x55d722998643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56694)[0m     @     0x55d72290d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x55d722997baf _PyEval_EvalCodeWithName
[2m[36m(pid=56694)[0m     @     0x55d722998643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56694)[0m     @     0x55d72290d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x55d722997baf _PyEval_EvalCodeWithName
[2m[36m(pid=56694)[0m     @     0x55d722998643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56694)[0m     @     0x55d72290d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56694)[0m     @     0x55d722997baf _PyEval_EvalCodeWithName
[2m[36m(pid=56694)[0m     @     0x55d722998643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56694)[0m     @     0x55d72290d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x7fb27fae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56706)[0m     @     0x7fb27fae2388 at::native::copy_impl()
[2m[36m(pid=56684)[0m     @     0x7fbe5d4658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=56684)[0m     @     0x7fbe5d465ad3 at::TensorIterator::for_each()
[2m[36m(pid=56759)[0m     @     0x7eda697ad4f5 at::Tensor::copy_()
[2m[36m(pid=56759)[0m     @     0x7eda6bc808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56759)[0m     @     0x7eda697ad4f5 at::Tensor::copy_()
[2m[36m(pid=56759)[0m     @     0x7eda6f85879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56759)[0m     @     0x563ab1295fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56759)[0m     @     0x563ab11f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x563ab127bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56759)[0m     @     0x563ab127ca20 method_vectorcall
[2m[36m(pid=56755)[0m     @     0x7fc3ee0eb5a4 at::native::copy_()
[2m[36m(pid=56755)[0m     @     0x7fc3ee7d64f5 at::Tensor::copy_()
[2m[36m(pid=56755)[0m     @     0x7fc3f0ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56683)[0m     @     0x7fcc8f5c94f5 at::Tensor::copy_()
[2m[36m(pid=56683)[0m     @     0x7fcc9567479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56683)[0m     @     0x55b71c8c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56683)[0m     @     0x55b71c820b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x55b71c8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56683)[0m     @     0x55b71c8aca20 method_vectorcall
[2m[36m(pid=56683)[0m     @     0x55b71c820bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x55b71c8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56683)[0m     @     0x55b71c8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56683)[0m     @     0x55b71c821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x55b71c8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56683)[0m     @     0x55b71c8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56683)[0m     @     0x55b71c821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x55b71c8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56683)[0m     @     0x55b71c8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56683)[0m     @     0x55b71c821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56683)[0m     @     0x55b71c8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56683)[0m     @     0x55b71c8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56683)[0m     @     0x55b71c821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x7fbf7d9134f5 at::Tensor::copy_()
[2m[36m(pid=56690)[0m     @     0x7fbf839be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56690)[0m     @     0x55ec26540fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56690)[0m     @     0x55ec2649bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x55ec26526baf _PyEval_EvalCodeWithName
[2m[36m(pid=56690)[0m     @     0x55ec26527a20 method_vectorcall
[2m[36m(pid=56690)[0m     @     0x55ec2649bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x55ec26526baf _PyEval_EvalCodeWithName
[2m[36m(pid=56690)[0m     @     0x55ec26527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56690)[0m     @     0x55ec2649c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x55ec26526baf _PyEval_EvalCodeWithName
[2m[36m(pid=56690)[0m     @     0x55ec26527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56690)[0m     @     0x55ec2649c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x55ec26526baf _PyEval_EvalCodeWithName
[2m[36m(pid=56690)[0m     @     0x55ec26527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56690)[0m     @     0x55ec2649c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56690)[0m     @     0x55ec26526baf _PyEval_EvalCodeWithName
[2m[36m(pid=56690)[0m     @     0x55ec26527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56690)[0m     @     0x55ec2649c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x7eeb60d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56715)[0m     @     0x7eeb5e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56715)[0m     @     0x7eeb6496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56715)[0m     @     0x55c11aa05fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56715)[0m     @     0x55c11a960b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x55c11a9ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56715)[0m     @     0x55c11a9eca20 method_vectorcall
[2m[36m(pid=56715)[0m     @     0x55c11a960bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x55c11a9ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56715)[0m     @     0x55c11a9ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56715)[0m     @     0x55c11a961689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x55c11a9ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56715)[0m     @     0x55c11a9ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56715)[0m     @     0x55c11a961689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x55c11a9ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56715)[0m     @     0x55c11a9ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56715)[0m     @     0x55c11a961689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56715)[0m     @     0x55c11a9ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56715)[0m     @     0x55c11a9ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56715)[0m     @     0x55c11a961689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x7f4daf4f25a4 at::native::copy_()
[2m[36m(pid=56780)[0m     @     0x7f4dafbdd4f5 at::Tensor::copy_()
[2m[36m(pid=56780)[0m     @     0x7f4db20b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56758)[0m     @     0x7f82f96105a4 at::native::copy_()
[2m[36m(pid=56758)[0m     @     0x7f82f9cfb4f5 at::Tensor::copy_()
[2m[36m(pid=56758)[0m     @     0x7f82fc1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56779)[0m     @     0x7f4ef1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56779)[0m     @     0x7f4eef6b64f5 at::Tensor::copy_()
[2m[36m(pid=56779)[0m     @     0x7f4ef576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56779)[0m     @     0x562699102fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56779)[0m     @     0x56269905db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56779)[0m     @     0x5626990e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=56779)[0m     @     0x5626990e9a20 method_vectorcall
[2m[36m(pid=56779)[0m     @     0x56269905dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x7f237a1d0388 at::native::copy_impl()
[2m[36m(pid=56774)[0m     @     0x7f237a1d25a4 at::native::copy_()
[2m[36m(pid=56774)[0m     @     0x7f237a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56793)[0m     @     0x7ed07c4b95a4 at::native::copy_()
[2m[36m(pid=56793)[0m     @     0x7ed07cba44f5 at::Tensor::copy_()
[2m[36m(pid=56793)[0m     @     0x7ed07f0778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56713)[0m     @     0x7f73f1a4d5a4 at::native::copy_()
[2m[36m(pid=56713)[0m     @     0x7f73f21384f5 at::Tensor::copy_()
[2m[36m(pid=56713)[0m     @     0x7f73f460b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56695)[0m     @     0x7f549f6b64f5 at::Tensor::copy_()
[2m[36m(pid=56695)[0m     @     0x7f54a576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56695)[0m     @     0x56421c0c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56695)[0m     @     0x56421c021b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x56421c0acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56695)[0m     @     0x56421c0ada20 method_vectorcall
[2m[36m(pid=56695)[0m     @     0x56421c021bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x56421c0acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56695)[0m     @     0x56421c0ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56695)[0m     @     0x56421c022689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x56421c0acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56695)[0m     @     0x56421c0ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56695)[0m     @     0x56421c022689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x56421c0acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56695)[0m     @     0x56421c0ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56695)[0m     @     0x56421c022689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56695)[0m     @     0x56421c0acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56695)[0m     @     0x56421c0ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56695)[0m     @     0x56421c022689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x7ef70a9444f5 at::Tensor::copy_()
[2m[36m(pid=56702)[0m     @     0x7ef7109ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56702)[0m     @     0x55e56b2eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56702)[0m     @     0x55e56b245b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x55e56b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56702)[0m     @     0x55e56b2d1a20 method_vectorcall
[2m[36m(pid=56702)[0m     @     0x55e56b245bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x55e56b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56702)[0m     @     0x55e56b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56702)[0m     @     0x55e56b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x55e56b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56702)[0m     @     0x55e56b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56702)[0m     @     0x55e56b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x55e56b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56702)[0m     @     0x55e56b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56702)[0m     @     0x55e56b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56702)[0m     @     0x55e56b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=56702)[0m     @     0x55e56b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56702)[0m     @     0x55e56b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x7fbcb28114f5 at::Tensor::copy_()
[2m[36m(pid=56693)[0m     @     0x7fbcb88bc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56693)[0m     @     0x55aa0f85dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56693)[0m     @     0x55aa0f7b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x55aa0f843baf _PyEval_EvalCodeWithName
[2m[36m(pid=56693)[0m     @     0x55aa0f844a20 method_vectorcall
[2m[36m(pid=56693)[0m     @     0x55aa0f7b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x55aa0f843baf _PyEval_EvalCodeWithName
[2m[36m(pid=56693)[0m     @     0x55aa0f844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56693)[0m     @     0x55aa0f7b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x55aa0f843baf _PyEval_EvalCodeWithName
[2m[36m(pid=56693)[0m     @     0x55aa0f844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56693)[0m     @     0x55aa0f7b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x55aa0f843baf _PyEval_EvalCodeWithName
[2m[36m(pid=56693)[0m     @     0x55aa0f844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56693)[0m     @     0x55aa0f7b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56693)[0m     @     0x55aa0f843baf _PyEval_EvalCodeWithName
[2m[36m(pid=56693)[0m     @     0x55aa0f844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56693)[0m     @     0x55aa0f7b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x7ed104a384f5 at::Tensor::copy_()
[2m[36m(pid=56789)[0m     @     0x7ed106f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56716)[0m     @     0x7f544c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56716)[0m     @     0x7f544c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56716)[0m     @     0x7f544b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56775)[0m     @     0x7ed14213d4f5 at::Tensor::copy_()
[2m[36m(pid=56782)[0m     @     0x7fa1fe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56685)[0m     @     0x7f7423bdd4f5 at::Tensor::copy_()
[2m[36m(pid=56685)[0m     @     0x7f7429c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56685)[0m     @     0x563ae43a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56685)[0m     @     0x563ae42fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56685)[0m     @     0x563ae4386baf _PyEval_EvalCodeWithName
[2m[36m(pid=56685)[0m     @     0x563ae4387a20 method_vectorcall
[2m[36m(pid=56685)[0m     @     0x563ae42fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56685)[0m     @     0x563ae4386baf _PyEval_EvalCodeWithName
[2m[36m(pid=56685)[0m     @     0x563ae4387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56685)[0m     @     0x563ae42fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56685)[0m     @     0x563ae4386baf _PyEval_EvalCodeWithName
[2m[36m(pid=56685)[0m     @     0x563ae4387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56685)[0m     @     0x563ae42fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56685)[0m     @     0x563ae4386baf _PyEval_EvalCodeWithName
[2m[36m(pid=56685)[0m     @     0x563ae4387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56685)[0m     @     0x563ae42fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56685)[0m     @     0x563ae4386baf _PyEval_EvalCodeWithName
[2m[36m(pid=56685)[0m     @     0x563ae4387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56685)[0m     @     0x563ae42fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x7f7da3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56788)[0m     @     0x7f795416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56788)[0m     @     0x5617dd5bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56788)[0m     @     0x5617dd516b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56788)[0m     @     0x5617dd5a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56788)[0m     @     0x5617dd5a2a20 method_vectorcall
[2m[36m(pid=56788)[0m     @     0x5617dd516bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56788)[0m     @     0x5617dd5a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56788)[0m     @     0x5617dd5a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56788)[0m     @     0x5617dd517689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56788)[0m     @     0x5617dd5a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56788)[0m     @     0x5617dd5a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56788)[0m     @     0x5617dd517689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56788)[0m     @     0x5617dd5a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56788)[0m     @     0x5617dd5a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56788)[0m     @     0x5617dd517689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56788)[0m     @     0x5617dd5a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=56788)[0m     @     0x5617dd5a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56788)[0m     @     0x5617dd517689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x7f1f84b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56757)[0m     @     0x7f1f84b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56757)[0m     @     0x7f1f84011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56764)[0m     @     0x7f58e1ee95a4 at::native::copy_()
[2m[36m(pid=56744)[0m     @     0x7efd1b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56744)[0m     @     0x7efd1b2df388 at::native::copy_impl()
[2m[36m(pid=56760)[0m     @     0x7ee1c1dbdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56760)[0m     @     0x7ee1c125fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56760)[0m     @     0x7ee1c125d388 at::native::copy_impl()
[2m[36m(pid=56747)[0m     @     0x5628b69fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x5628b6a88baf _PyEval_EvalCodeWithName
[2m[36m(pid=56747)[0m     @     0x5628b6a89a20 method_vectorcall
[2m[36m(pid=56747)[0m     @     0x5628b69fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x5628b6a88baf _PyEval_EvalCodeWithName
[2m[36m(pid=56747)[0m     @     0x5628b6a89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56747)[0m     @     0x5628b69fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x5628b6a88baf _PyEval_EvalCodeWithName
[2m[36m(pid=56747)[0m     @     0x5628b6a89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56747)[0m     @     0x5628b69fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x5628b6a88baf _PyEval_EvalCodeWithName
[2m[36m(pid=56747)[0m     @     0x5628b6a89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56747)[0m     @     0x5628b69fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56747)[0m     @     0x5628b6a88baf _PyEval_EvalCodeWithName
[2m[36m(pid=56747)[0m     @     0x5628b6a89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56747)[0m     @     0x5628b69fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x7f648edea4f5 at::Tensor::copy_()
[2m[36m(pid=56686)[0m     @     0x7f6494e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56686)[0m     @     0x558029021fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56686)[0m     @     0x558028f7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x558029007baf _PyEval_EvalCodeWithName
[2m[36m(pid=56686)[0m     @     0x558029008a20 method_vectorcall
[2m[36m(pid=56686)[0m     @     0x558028f7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x558029007baf _PyEval_EvalCodeWithName
[2m[36m(pid=56686)[0m     @     0x558029008643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56686)[0m     @     0x558028f7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x558029007baf _PyEval_EvalCodeWithName
[2m[36m(pid=56686)[0m     @     0x558029008643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56686)[0m     @     0x558028f7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x558029007baf _PyEval_EvalCodeWithName
[2m[36m(pid=56686)[0m     @     0x558029008643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56686)[0m     @     0x558028f7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56686)[0m     @     0x558029007baf _PyEval_EvalCodeWithName
[2m[36m(pid=56686)[0m     @     0x558029008643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56686)[0m     @     0x558028f7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x7f31feb1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56746)[0m     @     0x7f31fc64c4f5 at::Tensor::copy_()
[2m[36m(pid=56746)[0m     @     0x7f32026f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56746)[0m     @     0x55d90cfddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56746)[0m     @     0x55d90cf38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x55d90cfc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56746)[0m     @     0x55d90cfc4a20 method_vectorcall
[2m[36m(pid=56746)[0m     @     0x55d90cf38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x55d90cfc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56746)[0m     @     0x55d90cfc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56746)[0m     @     0x55d90cf39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x55d90cfc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56746)[0m     @     0x55d90cfc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56746)[0m     @     0x55d90cf39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x55d90cfc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56746)[0m     @     0x55d90cfc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56746)[0m     @     0x55d90cf39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56746)[0m     @     0x55d90cfc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56746)[0m     @     0x55d90cfc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56746)[0m     @     0x55d90cf39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x7f715fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=56761)[0m     @     0x7f7165c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56761)[0m     @     0x55a3f71d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56761)[0m     @     0x55a3f7130b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x55a3f71bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56761)[0m     @     0x55a3f71bca20 method_vectorcall
[2m[36m(pid=56761)[0m     @     0x55a3f7130bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x55a3f71bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56761)[0m     @     0x55a3f71bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56761)[0m     @     0x55a3f7131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x55a3f71bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56761)[0m     @     0x55a3f71bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56761)[0m     @     0x55a3f7131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x55a3f71bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56761)[0m     @     0x55a3f71bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56761)[0m     @     0x55a3f7131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56761)[0m     @     0x55a3f71bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56761)[0m     @     0x55a3f71bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56761)[0m     @     0x55a3f7131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x7fa0b6327388 at::native::copy_impl()
[2m[36m(pid=56741)[0m     @     0x7fb4b97345a4 at::native::copy_()
[2m[36m(pid=56741)[0m     @     0x7fb4b9e1f4f5 at::Tensor::copy_()
[2m[36m(pid=56741)[0m     @     0x7fb4bc2f28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56790)[0m     @     0x7f90e59384f5 at::Tensor::copy_()
[2m[36m(pid=56790)[0m     @     0x7f90eb9e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56790)[0m     @     0x5592c1660fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56790)[0m     @     0x5592c15bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x5592c1646baf _PyEval_EvalCodeWithName
[2m[36m(pid=56790)[0m     @     0x5592c1647a20 method_vectorcall
[2m[36m(pid=56790)[0m     @     0x5592c15bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x5592c1646baf _PyEval_EvalCodeWithName
[2m[36m(pid=56790)[0m     @     0x5592c1647643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56790)[0m     @     0x5592c15bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x5592c1646baf _PyEval_EvalCodeWithName
[2m[36m(pid=56790)[0m     @     0x5592c1647643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56790)[0m     @     0x5592c15bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x5592c1646baf _PyEval_EvalCodeWithName
[2m[36m(pid=56790)[0m     @     0x5592c1647643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56790)[0m     @     0x5592c15bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56790)[0m     @     0x5592c1646baf _PyEval_EvalCodeWithName
[2m[36m(pid=56790)[0m     @     0x5592c1647643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56790)[0m     @     0x5592c15bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x7fbb8d0374f5 at::Tensor::copy_()
[2m[36m(pid=56797)[0m     @     0x7fbb8f50a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56797)[0m     @     0x7fbb8d0374f5 at::Tensor::copy_()
[2m[36m(pid=56805)[0m     @     0x7f418183b5a4 at::native::copy_()
[2m[36m(pid=56805)[0m     @     0x7f4181f264f5 at::Tensor::copy_()
[2m[36m(pid=56786)[0m     @     0x7f944e068a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56786)[0m     @     0x7f944e066388 at::native::copy_impl()
[2m[36m(pid=56786)[0m     @     0x7f944e0685a4 at::native::copy_()
[2m[36m(pid=56804)[0m     @     0x7f30dace54f5 at::Tensor::copy_()
[2m[36m(pid=56804)[0m     @     0x7f30e0d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56804)[0m     @     0x55c5e5991fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56804)[0m     @     0x55c5e58ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56804)[0m     @     0x55c5e5977baf _PyEval_EvalCodeWithName
[2m[36m(pid=56804)[0m     @     0x55c5e5978a20 method_vectorcall
[2m[36m(pid=56804)[0m     @     0x55c5e58ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56804)[0m     @     0x55c5e5977baf _PyEval_EvalCodeWithName
[2m[36m(pid=56804)[0m     @     0x55c5e5978643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56804)[0m     @     0x55c5e58ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56804)[0m     @     0x55c5e5977baf _PyEval_EvalCodeWithName
[2m[36m(pid=56804)[0m     @     0x55c5e5978643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56804)[0m     @     0x55c5e58ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56804)[0m     @     0x55c5e5977baf _PyEval_EvalCodeWithName
[2m[36m(pid=56804)[0m     @     0x55c5e5978643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56804)[0m     @     0x55c5e58ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56804)[0m     @     0x55c5e5977baf _PyEval_EvalCodeWithName
[2m[36m(pid=56804)[0m     @     0x55c5e5978643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56804)[0m     @     0x55c5e58ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x7fb27fae45a4 at::native::copy_()
[2m[36m(pid=56706)[0m     @     0x7fb2801cf4f5 at::Tensor::copy_()
[2m[36m(pid=56706)[0m     @     0x7fb2826a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56684)[0m     @     0x7fbe5d465d91 at::TensorIterator::for_each()
[2m[36m(pid=56684)[0m     @     0x7fbe5dd48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=56684)[0m     @     0x7fbe5dd6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=56684)[0m     @     0x7fbe5d20da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=56684)[0m     @     0x7fbe5d20b388 at::native::copy_impl()
[2m[36m(pid=56759)[0m     @     0x563ab11f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x563ab127bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56759)[0m     @     0x563ab127c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56759)[0m     @     0x563ab11f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x563ab127bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56759)[0m     @     0x563ab127c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56759)[0m     @     0x563ab11f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x563ab127bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56759)[0m     @     0x563ab127c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56759)[0m     @     0x563ab11f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56759)[0m     @     0x563ab127bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56759)[0m     @     0x563ab127c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56759)[0m     @     0x563ab11f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x7fc3ee7d64f5 at::Tensor::copy_()
[2m[36m(pid=56755)[0m     @     0x7fc3f447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56755)[0m     @     0x55fe5705afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56755)[0m     @     0x55fe56fb5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x55fe57040baf _PyEval_EvalCodeWithName
[2m[36m(pid=56755)[0m     @     0x55fe57041a20 method_vectorcall
[2m[36m(pid=56755)[0m     @     0x55fe56fb5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x55fe57040baf _PyEval_EvalCodeWithName
[2m[36m(pid=56755)[0m     @     0x55fe57041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56755)[0m     @     0x55fe56fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x55fe57040baf _PyEval_EvalCodeWithName
[2m[36m(pid=56755)[0m     @     0x55fe57041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56755)[0m     @     0x55fe56fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x55fe57040baf _PyEval_EvalCodeWithName
[2m[36m(pid=56755)[0m     @     0x55fe57041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56755)[0m     @     0x55fe56fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56755)[0m     @     0x55fe57040baf _PyEval_EvalCodeWithName
[2m[36m(pid=56755)[0m     @     0x55fe57041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56755)[0m     @     0x55fe56fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x7f4dafbdd4f5 at::Tensor::copy_()
[2m[36m(pid=56780)[0m     @     0x7f4db5c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56780)[0m     @     0x5593eaaacfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56780)[0m     @     0x5593eaa07b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x5593eaa92baf _PyEval_EvalCodeWithName
[2m[36m(pid=56780)[0m     @     0x5593eaa93a20 method_vectorcall
[2m[36m(pid=56780)[0m     @     0x5593eaa07bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x5593eaa92baf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x7f82f9cfb4f5 at::Tensor::copy_()
[2m[36m(pid=56758)[0m     @     0x7f82ffda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56758)[0m     @     0x563e87fe9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56758)[0m     @     0x563e87f44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56758)[0m     @     0x563e87fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x563e87fd0a20 method_vectorcall
[2m[36m(pid=56758)[0m     @     0x563e87f44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56758)[0m     @     0x563e87fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x563e87fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56758)[0m     @     0x563e87f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56779)[0m     @     0x5626990e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=56779)[0m     @     0x5626990e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56779)[0m     @     0x56269905e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56779)[0m     @     0x5626990e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=56779)[0m     @     0x5626990e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56779)[0m     @     0x56269905e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56779)[0m     @     0x5626990e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=56779)[0m     @     0x5626990e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56779)[0m     @     0x56269905e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56779)[0m     @     0x5626990e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=56779)[0m     @     0x5626990e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56779)[0m     @     0x56269905e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x7f237cd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56774)[0m     @     0x7f237a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=56774)[0m     @     0x7f238096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56774)[0m     @     0x55bdf46bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56774)[0m     @     0x55bdf4617b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x7ed07cba44f5 at::Tensor::copy_()
[2m[36m(pid=56793)[0m     @     0x7ed082c4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56793)[0m     @     0x55e85a5dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56793)[0m     @     0x55e85a537b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x55e85a5c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56793)[0m     @     0x55e85a5c3a20 method_vectorcall
[2m[36m(pid=56793)[0m     @     0x55e85a537bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x55e85a5c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56793)[0m     @     0x55e85a5c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56793)[0m     @     0x55e85a538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x55e85a5c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56793)[0m     @     0x55e85a5c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56793)[0m     @     0x55e85a538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x55e85a5c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56793)[0m     @     0x55e85a5c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56793)[0m     @     0x55e85a538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56793)[0m     @     0x55e85a5c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56793)[0m     @     0x55e85a5c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56793)[0m     @     0x55e85a538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x7f73f21384f5 at::Tensor::copy_()
[2m[36m(pid=56713)[0m     @     0x7f73f81e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56713)[0m     @     0x5624c8a7efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56713)[0m     @     0x5624c89d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x5624c8a64baf _PyEval_EvalCodeWithName
[2m[36m(pid=56713)[0m     @     0x5624c8a65a20 method_vectorcall
[2m[36m(pid=56713)[0m     @     0x5624c89d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x5624c8a64baf _PyEval_EvalCodeWithName
[2m[36m(pid=56713)[0m     @     0x5624c8a65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56713)[0m     @     0x5624c89da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x5624c8a64baf _PyEval_EvalCodeWithName
[2m[36m(pid=56713)[0m     @     0x5624c8a65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56713)[0m     @     0x5624c89da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x5624c8a64baf _PyEval_EvalCodeWithName
[2m[36m(pid=56713)[0m     @     0x5624c8a65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56713)[0m     @     0x5624c89da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56713)[0m     @     0x5624c8a64baf _PyEval_EvalCodeWithName
[2m[36m(pid=56713)[0m     @     0x5624c8a65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56713)[0m     @     0x5624c89da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x7ed104a384f5 at::Tensor::copy_()
[2m[36m(pid=56789)[0m     @     0x7ed10aae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56789)[0m     @     0x5646978a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56789)[0m     @     0x5646977fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x564697886baf _PyEval_EvalCodeWithName
[2m[36m(pid=56789)[0m     @     0x564697887a20 method_vectorcall
[2m[36m(pid=56789)[0m     @     0x5646977fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x564697886baf _PyEval_EvalCodeWithName
[2m[36m(pid=56789)[0m     @     0x564697887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56789)[0m     @     0x5646977fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x564697886baf _PyEval_EvalCodeWithName
[2m[36m(pid=56789)[0m     @     0x564697887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56789)[0m     @     0x5646977fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x564697886baf _PyEval_EvalCodeWithName
[2m[36m(pid=56789)[0m     @     0x564697887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56789)[0m     @     0x5646977fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56789)[0m     @     0x564697886baf _PyEval_EvalCodeWithName
[2m[36m(pid=56789)[0m     @     0x564697887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56789)[0m     @     0x5646977fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x7f544b807388 at::native::copy_impl()
[2m[36m(pid=56716)[0m     @     0x7f544b8095a4 at::native::copy_()
[2m[36m(pid=56716)[0m     @     0x7f544bef44f5 at::Tensor::copy_()
[2m[36m(pid=56775)[0m     @     0x7ed1446108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56775)[0m     @     0x7ed14213d4f5 at::Tensor::copy_()
[2m[36m(pid=56775)[0m     @     0x7ed1481e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56775)[0m     @     0x564a80a98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56775)[0m     @     0x564a809f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56775)[0m     @     0x564a80a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56775)[0m     @     0x564a80a7fa20 method_vectorcall
[2m[36m(pid=56775)[0m     @     0x564a809f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56775)[0m     @     0x564a80a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56775)[0m     @     0x564a80a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56775)[0m     @     0x564a809f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56775)[0m     @     0x564a80a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56775)[0m     @     0x564a80a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56775)[0m     @     0x564a809f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56775)[0m     @     0x564a80a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56775)[0m     @     0x564a80a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56775)[0m     @     0x564a809f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56775)[0m     @     0x564a80a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56775)[0m     @     0x564a80a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56775)[0m     @     0x564a809f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x7fa20496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56782)[0m     @     0x560ef9ff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56782)[0m     @     0x560ef9f53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x560ef9fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56782)[0m     @     0x560ef9fdfa20 method_vectorcall
[2m[36m(pid=56782)[0m     @     0x560ef9f53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x560ef9fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56782)[0m     @     0x560ef9fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56782)[0m     @     0x560ef9f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x560ef9fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56782)[0m     @     0x560ef9fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56782)[0m     @     0x560ef9f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x560ef9fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56782)[0m     @     0x560ef9fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56782)[0m     @     0x560ef9f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56782)[0m     @     0x560ef9fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56782)[0m     @     0x560ef9fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56782)[0m     @     0x560ef9f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x7f7da19e54f5 at::Tensor::copy_()
[2m[36m(pid=56766)[0m     @     0x7f7da7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56766)[0m     @     0x55874490ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56766)[0m     @     0x55874486ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x5587448f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56766)[0m     @     0x5587448f6a20 method_vectorcall
[2m[36m(pid=56766)[0m     @     0x55874486abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x5587448f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56766)[0m     @     0x5587448f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56766)[0m     @     0x55874486b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x5587448f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56766)[0m     @     0x5587448f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56766)[0m     @     0x55874486b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x5587448f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56766)[0m     @     0x5587448f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56766)[0m     @     0x55874486b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56766)[0m     @     0x5587448f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=56766)[0m     @     0x5587448f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56766)[0m     @     0x55874486b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x7f1f8400f388 at::native::copy_impl()
[2m[36m(pid=56757)[0m     @     0x7f1f840115a4 at::native::copy_()
[2m[36m(pid=56757)[0m     @     0x7f1f846fc4f5 at::Tensor::copy_()
[2m[36m(pid=56764)[0m     @     0x7f58e25d44f5 at::Tensor::copy_()
[2m[36m(pid=56764)[0m     @     0x7f58e4aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56764)[0m     @     0x7f58e25d44f5 at::Tensor::copy_()
[2m[36m(pid=56764)[0m     @     0x7f58e847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56764)[0m     @     0x5619ce3d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56764)[0m     @     0x5619ce334b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56764)[0m     @     0x5619ce3bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56764)[0m     @     0x5619ce3c0a20 method_vectorcall
[2m[36m(pid=56764)[0m     @     0x5619ce334bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56764)[0m     @     0x5619ce3bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56764)[0m     @     0x5619ce3c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56764)[0m     @     0x5619ce335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56764)[0m     @     0x5619ce3bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56764)[0m     @     0x5619ce3c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56764)[0m     @     0x5619ce335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56764)[0m     @     0x5619ce3bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56764)[0m     @     0x5619ce3c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56764)[0m     @     0x5619ce335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56764)[0m     @     0x5619ce3bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56764)[0m     @     0x5619ce3c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56764)[0m     @     0x5619ce335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x7efd1b2e15a4 at::native::copy_()
[2m[36m(pid=56744)[0m     @     0x7efd1b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=56744)[0m     @     0x7efd1de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56760)[0m     @     0x7ee1c125f5a4 at::native::copy_()
[2m[36m(pid=56760)[0m     @     0x7ee1c194a4f5 at::Tensor::copy_()
[2m[36m(pid=56760)[0m     @     0x7ee1c3e1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56762)[0m     @     0x7fa0b63295a4 at::native::copy_()
[2m[36m(pid=56762)[0m     @     0x7fa0b6a144f5 at::Tensor::copy_()
[2m[36m(pid=56762)[0m     @     0x7fa0b8ee78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56741)[0m     @     0x7fb4b9e1f4f5 at::Tensor::copy_()
[2m[36m(pid=56741)[0m     @     0x7fb4bfeca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56741)[0m     @     0x55c7cfa47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56741)[0m     @     0x55c7cf9a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56741)[0m     @     0x55c7cfa2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56741)[0m     @     0x55c7cfa2ea20 method_vectorcall
[2m[36m(pid=56741)[0m     @     0x55c7cf9a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56741)[0m     @     0x55c7cfa2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56741)[0m     @     0x55c7cfa2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56741)[0m     @     0x55c7cf9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56741)[0m     @     0x55c7cfa2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56741)[0m     @     0x55c7cfa2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56741)[0m     @     0x55c7cf9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56741)[0m     @     0x55c7cfa2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56741)[0m     @     0x55c7cfa2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56741)[0m     @     0x55c7cf9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56741)[0m     @     0x55c7cfa2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56741)[0m     @     0x55c7cfa2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56741)[0m     @     0x55c7cf9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x7fbb930e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56797)[0m     @     0x5577fa05efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56797)[0m     @     0x5577f9fb9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x5577fa044baf _PyEval_EvalCodeWithName
[2m[36m(pid=56797)[0m     @     0x5577fa045a20 method_vectorcall
[2m[36m(pid=56797)[0m     @     0x5577f9fb9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x5577fa044baf _PyEval_EvalCodeWithName
[2m[36m(pid=56797)[0m     @     0x5577fa045643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56797)[0m     @     0x5577f9fba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x5577fa044baf _PyEval_EvalCodeWithName
[2m[36m(pid=56797)[0m     @     0x5577fa045643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56797)[0m     @     0x5577f9fba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x5577fa044baf _PyEval_EvalCodeWithName
[2m[36m(pid=56797)[0m     @     0x5577fa045643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56797)[0m     @     0x5577f9fba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56797)[0m     @     0x5577fa044baf _PyEval_EvalCodeWithName
[2m[36m(pid=56797)[0m     @     0x5577fa045643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56797)[0m     @     0x5577f9fba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x7f41843f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56805)[0m     @     0x7f4181f264f5 at::Tensor::copy_()
[2m[36m(pid=56805)[0m     @     0x7f4187fd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56805)[0m     @     0x55e4cd03bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56805)[0m     @     0x55e4ccf96b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x55e4cd021baf _PyEval_EvalCodeWithName
[2m[36m(pid=56805)[0m     @     0x55e4cd022a20 method_vectorcall
[2m[36m(pid=56805)[0m     @     0x55e4ccf96bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x55e4cd021baf _PyEval_EvalCodeWithName
[2m[36m(pid=56805)[0m     @     0x55e4cd022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56805)[0m     @     0x55e4ccf97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x55e4cd021baf _PyEval_EvalCodeWithName
[2m[36m(pid=56805)[0m     @     0x55e4cd022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56805)[0m     @     0x55e4ccf97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x7f944e7534f5 at::Tensor::copy_()
[2m[36m(pid=56786)[0m     @     0x7f9450c268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56706)[0m     @     0x7fb2801cf4f5 at::Tensor::copy_()
[2m[36m(pid=56706)[0m     @     0x7fb28627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56706)[0m     @     0x55ff73d6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56706)[0m     @     0x55ff73ccab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x55ff73d55baf _PyEval_EvalCodeWithName
[2m[36m(pid=56706)[0m     @     0x55ff73d56a20 method_vectorcall
[2m[36m(pid=56706)[0m     @     0x55ff73ccabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x55ff73d55baf _PyEval_EvalCodeWithName
[2m[36m(pid=56706)[0m     @     0x55ff73d56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56706)[0m     @     0x55ff73ccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x55ff73d55baf _PyEval_EvalCodeWithName
[2m[36m(pid=56706)[0m     @     0x55ff73d56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56706)[0m     @     0x55ff73ccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x55ff73d55baf _PyEval_EvalCodeWithName
[2m[36m(pid=56706)[0m     @     0x55ff73d56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56706)[0m     @     0x55ff73ccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56706)[0m     @     0x55ff73d55baf _PyEval_EvalCodeWithName
[2m[36m(pid=56706)[0m     @     0x55ff73d56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56706)[0m     @     0x55ff73ccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x7fbe5d20d5a4 at::native::copy_()
[2m[36m(pid=56684)[0m     @     0x7fbe5d8f84f5 at::Tensor::copy_()
[2m[36m(pid=56684)[0m     @     0x7fbe5fdcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56780)[0m     @     0x5593eaa93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56780)[0m     @     0x5593eaa08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x5593eaa92baf _PyEval_EvalCodeWithName
[2m[36m(pid=56780)[0m     @     0x5593eaa93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56780)[0m     @     0x5593eaa08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x5593eaa92baf _PyEval_EvalCodeWithName
[2m[36m(pid=56780)[0m     @     0x5593eaa93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56780)[0m     @     0x5593eaa08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56780)[0m     @     0x5593eaa92baf _PyEval_EvalCodeWithName
[2m[36m(pid=56780)[0m     @     0x5593eaa93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56780)[0m     @     0x5593eaa08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56758)[0m     @     0x563e87fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x563e87fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56758)[0m     @     0x563e87f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56758)[0m     @     0x563e87fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x563e87fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56758)[0m     @     0x563e87f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56758)[0m     @     0x563e87fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56758)[0m     @     0x563e87fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56758)[0m     @     0x563e87f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x55bdf46a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56774)[0m     @     0x55bdf46a3a20 method_vectorcall
[2m[36m(pid=56774)[0m     @     0x55bdf4617bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x55bdf46a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56774)[0m     @     0x55bdf46a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56774)[0m     @     0x55bdf4618689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x55bdf46a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56774)[0m     @     0x55bdf46a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56774)[0m     @     0x55bdf4618689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x55bdf46a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56774)[0m     @     0x55bdf46a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56774)[0m     @     0x55bdf4618689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56774)[0m     @     0x55bdf46a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=56774)[0m     @     0x55bdf46a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56774)[0m     @     0x55bdf4618689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x7f544e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56716)[0m     @     0x7f544bef44f5 at::Tensor::copy_()
[2m[36m(pid=56716)[0m     @     0x7f5451f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56716)[0m     @     0x559034cc5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56716)[0m     @     0x559034c20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034cabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56716)[0m     @     0x559034caca20 method_vectorcall
[2m[36m(pid=56716)[0m     @     0x559034c20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034cabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56716)[0m     @     0x559034cac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56716)[0m     @     0x559034c21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034cabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56716)[0m     @     0x559034cac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56757)[0m     @     0x7f1f86bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=56757)[0m     @     0x7f1f846fc4f5 at::Tensor::copy_()
[2m[36m(pid=56757)[0m     @     0x7f1f8a7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56757)[0m     @     0x563fd8c0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56757)[0m     @     0x563fd8b68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x563fd8bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56757)[0m     @     0x563fd8bf4a20 method_vectorcall
[2m[36m(pid=56757)[0m     @     0x563fd8b68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x7efd1b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=56744)[0m     @     0x7efd21a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56744)[0m     @     0x55fb07b38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56744)[0m     @     0x55fb07a93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x55fb07b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56744)[0m     @     0x55fb07b1fa20 method_vectorcall
[2m[36m(pid=56744)[0m     @     0x55fb07a93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x55fb07b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56744)[0m     @     0x55fb07b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56744)[0m     @     0x55fb07a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x55fb07b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56744)[0m     @     0x55fb07b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56744)[0m     @     0x55fb07a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x55fb07b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56744)[0m     @     0x55fb07b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56744)[0m     @     0x55fb07a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56744)[0m     @     0x55fb07b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=56744)[0m     @     0x55fb07b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56744)[0m     @     0x55fb07a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x7ee1c194a4f5 at::Tensor::copy_()
[2m[36m(pid=56760)[0m     @     0x7ee1c79f579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56760)[0m     @     0x556f1a423fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56760)[0m     @     0x556f1a37eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x556f1a409baf _PyEval_EvalCodeWithName
[2m[36m(pid=56760)[0m     @     0x556f1a40aa20 method_vectorcall
[2m[36m(pid=56760)[0m     @     0x556f1a37ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x556f1a409baf _PyEval_EvalCodeWithName
[2m[36m(pid=56760)[0m     @     0x556f1a40a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56760)[0m     @     0x556f1a37f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x556f1a409baf _PyEval_EvalCodeWithName
[2m[36m(pid=56760)[0m     @     0x556f1a40a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56760)[0m     @     0x556f1a37f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x556f1a409baf _PyEval_EvalCodeWithName
[2m[36m(pid=56760)[0m     @     0x556f1a40a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56760)[0m     @     0x556f1a37f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56760)[0m     @     0x556f1a409baf _PyEval_EvalCodeWithName
[2m[36m(pid=56760)[0m     @     0x556f1a40a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56760)[0m     @     0x556f1a37f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x7fa0b6a144f5 at::Tensor::copy_()
[2m[36m(pid=56762)[0m     @     0x7fa0bcabf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56762)[0m     @     0x55abb32c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56762)[0m     @     0x55abb3220b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x55abb32abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56762)[0m     @     0x55abb32aca20 method_vectorcall
[2m[36m(pid=56762)[0m     @     0x55abb3220bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x55abb32abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56762)[0m     @     0x55abb32ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56762)[0m     @     0x55abb3221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x55abb32abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56762)[0m     @     0x55abb32ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56762)[0m     @     0x55abb3221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x55abb32abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56762)[0m     @     0x55abb32ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56762)[0m     @     0x55abb3221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56762)[0m     @     0x55abb32abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56762)[0m     @     0x55abb32ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56762)[0m     @     0x55abb3221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x55e4cd021baf _PyEval_EvalCodeWithName
[2m[36m(pid=56805)[0m     @     0x55e4cd022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56805)[0m     @     0x55e4ccf97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56805)[0m     @     0x55e4cd021baf _PyEval_EvalCodeWithName
[2m[36m(pid=56805)[0m     @     0x55e4cd022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56805)[0m     @     0x55e4ccf97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x7f944e7534f5 at::Tensor::copy_()
[2m[36m(pid=56786)[0m     @     0x7f94547fe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56786)[0m     @     0x561900042fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56786)[0m     @     0x5618fff9db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x561900028baf _PyEval_EvalCodeWithName
[2m[36m(pid=56786)[0m     @     0x561900029a20 method_vectorcall
[2m[36m(pid=56786)[0m     @     0x5618fff9dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x561900028baf _PyEval_EvalCodeWithName
[2m[36m(pid=56786)[0m     @     0x561900029643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56786)[0m     @     0x5618fff9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x561900028baf _PyEval_EvalCodeWithName
[2m[36m(pid=56786)[0m     @     0x561900029643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56786)[0m     @     0x5618fff9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x561900028baf _PyEval_EvalCodeWithName
[2m[36m(pid=56786)[0m     @     0x561900029643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56786)[0m     @     0x5618fff9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56786)[0m     @     0x561900028baf _PyEval_EvalCodeWithName
[2m[36m(pid=56786)[0m     @     0x561900029643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56786)[0m     @     0x5618fff9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x7fbe5d8f84f5 at::Tensor::copy_()
[2m[36m(pid=56684)[0m     @     0x7fbe639a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=56684)[0m     @     0x55600a2cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=56684)[0m     @     0x55600a228b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x55600a2b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56684)[0m     @     0x55600a2b4a20 method_vectorcall
[2m[36m(pid=56684)[0m     @     0x55600a228bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x55600a2b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56684)[0m     @     0x55600a2b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56684)[0m     @     0x55600a229689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x55600a2b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56684)[0m     @     0x55600a2b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56684)[0m     @     0x55600a229689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x55600a2b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56684)[0m     @     0x55600a2b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56684)[0m     @     0x55600a229689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56684)[0m     @     0x55600a2b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56684)[0m     @     0x55600a2b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56684)[0m     @     0x55600a229689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034c21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034cabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56716)[0m     @     0x559034cac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56716)[0m     @     0x559034c21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56716)[0m     @     0x559034cabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=56716)[0m     @     0x559034cac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56716)[0m     @     0x559034c21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x563fd8bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56757)[0m     @     0x563fd8bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56757)[0m     @     0x563fd8b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x563fd8bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56757)[0m     @     0x563fd8bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56757)[0m     @     0x563fd8b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x563fd8bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56757)[0m     @     0x563fd8bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56757)[0m     @     0x563fd8b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=56757)[0m     @     0x563fd8bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=56757)[0m     @     0x563fd8bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=56757)[0m     @     0x563fd8b69689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:48:50,211	ERROR trial_runner.py:567 -- Trial PPO_jss_env_78c8b_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=56817, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:48:50,217	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff7ef9157101000000.
2020-11-05 10:48:50,217	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8edbbd3001000000.
2020-11-05 10:48:50,217	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
== Status ==
Memory usage on this node: 24.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_78c8b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_78c8b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_78c8b_00000_0_2020-11-05_10-48-42/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_78c8b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_78c8b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_78c8b_00000_0_2020-11-05_10-48-42/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:48:50,227	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.

[2m[36m(pid=56817)[0m E1105 10:48:50.203356 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=eb0057ff902d31287ef9157101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=7ef9157101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=56817)[0m E1105 10:48:50.203523 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c72f258bb1224db7ef9157101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=7ef9157101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=56817)[0m E1105 10:48:50.214645 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4027410178b738888edbbd3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8edbbd3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=56817)[0m E1105 10:48:50.214773 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f4290d8c04f479ac8edbbd3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8edbbd3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=56817)[0m E1105 10:48:50.217363 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=56817)[0m E1105 10:48:50.217496 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=56817)[0m E1105 10:48:50.217569 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=56817)[0m E1105 10:48:50.223299 56817 57996 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=a4e1f5da99aef89f8edbbd3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8edbbd3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=56817)[0m E1105 10:48:50.224027 56817 57996 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=db864355021abf067ef9157101000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=7ef9157101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=56817)[0m E1105 10:48:50.225383 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f26c08df806c9b079d526f0201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=56817)[0m E1105 10:48:50.225487 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3501fe38550fe14a9d526f0201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=56817)[0m E1105 10:48:50.225569 56817 57996 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d9b69b81196304409d526f0201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:48:50,238	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:48:50,238	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:48:50,238	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_78c8b_00000])
2020-11-05 10:48:50,254	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0d557f6601000000.
