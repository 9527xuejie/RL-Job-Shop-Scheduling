2020-11-05 10:06:17,420	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c57e_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=34568)[0m 2020-11-05 10:06:20,239	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=34526)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34526)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34526)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34526)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34526)[0m *** SIGSEGV (@0x0) received by PID 34526 (TID 0x7fc120d26700) from PID 0; stack trace: ***
[2m[36m(pid=34526)[0m     @     0x7fc1208ff390 (unknown)
[2m[36m(pid=34526)[0m     @     0x7f9220774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34526)[0m     @     0x7f921fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34526)[0m     @     0x7f921fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34535)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34535)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34535)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34535)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34535)[0m *** SIGSEGV (@0x0) received by PID 34535 (TID 0x7f71379cf700) from PID 0; stack trace: ***
[2m[36m(pid=34535)[0m     @     0x7f71375a8390 (unknown)
[2m[36m(pid=34535)[0m     @     0x7f423754df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34535)[0m     @     0x7f4236c787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34535)[0m     @     0x7f4236c7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34536)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34536)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34536)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34536)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34536)[0m *** SIGSEGV (@0x0) received by PID 34536 (TID 0x7f598e0dc700) from PID 0; stack trace: ***
[2m[36m(pid=34536)[0m     @     0x7f598dcb5390 (unknown)
[2m[36m(pid=34536)[0m     @     0x7f2a8dc51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34536)[0m     @     0x7f2a8d37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34541)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34541)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34541)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34541)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34541)[0m *** SIGSEGV (@0x0) received by PID 34541 (TID 0x7f8d2924b700) from PID 0; stack trace: ***
[2m[36m(pid=34541)[0m     @     0x7f8d28e24390 (unknown)
[2m[36m(pid=34541)[0m     @     0x7f5e28da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34541)[0m     @     0x7f5e284cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34559)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34559)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34559)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34559)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34559)[0m *** SIGSEGV (@0x0) received by PID 34559 (TID 0x7f3307d94700) from PID 0; stack trace: ***
[2m[36m(pid=34559)[0m     @     0x7f330796d390 (unknown)
[2m[36m(pid=34559)[0m     @     0x7f04078def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34559)[0m     @     0x7f04070097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34559)[0m     @     0x7f040700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34558)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34558)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34558)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34558)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34558)[0m *** SIGSEGV (@0x0) received by PID 34558 (TID 0x7f65445c1700) from PID 0; stack trace: ***
[2m[36m(pid=34558)[0m     @     0x7f654419a390 (unknown)
[2m[36m(pid=34558)[0m     @     0x7f364401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34558)[0m     @     0x7f36437477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34558)[0m     @     0x7f364374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34561)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34561)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34561)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34561)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34561)[0m *** SIGSEGV (@0x0) received by PID 34561 (TID 0x7f2c27b9f700) from PID 0; stack trace: ***
[2m[36m(pid=34561)[0m     @     0x7f2c27778390 (unknown)
[2m[36m(pid=34561)[0m     @     0x7efd2761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34561)[0m     @     0x7efd26d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34561)[0m     @     0x7efd26d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34507)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34507)[0m *** SIGSEGV (@0x0) received by PID 34507 (TID 0x7f62f2054700) from PID 0; stack trace: ***
[2m[36m(pid=34507)[0m     @     0x7f62f1c2d390 (unknown)
[2m[36m(pid=34507)[0m     @     0x7f33f1becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34507)[0m     @     0x7f33f13177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34556)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34556)[0m *** SIGSEGV (@0x0) received by PID 34556 (TID 0x7f420fc5d700) from PID 0; stack trace: ***
[2m[36m(pid=34556)[0m     @     0x7f420f836390 (unknown)
[2m[36m(pid=34556)[0m     @     0x7f130f7cef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34556)[0m     @     0x7f130eef97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34516)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34516)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34516)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34516)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34516)[0m *** SIGSEGV (@0x0) received by PID 34516 (TID 0x7fc4af683700) from PID 0; stack trace: ***
[2m[36m(pid=34516)[0m     @     0x7fc4af25c390 (unknown)
[2m[36m(pid=34516)[0m     @     0x7f95af124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34516)[0m     @     0x7f95ae84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34514)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34514)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34514)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34514)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34514)[0m *** SIGSEGV (@0x0) received by PID 34514 (TID 0x7ff6316ae700) from PID 0; stack trace: ***
[2m[36m(pid=34514)[0m     @     0x7ff631287390 (unknown)
[2m[36m(pid=34514)[0m     @     0x7fc731225f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34514)[0m     @     0x7fc7309507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34560)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34560)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34560)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34560)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34560)[0m *** SIGSEGV (@0x0) received by PID 34560 (TID 0x7ff7f76b6700) from PID 0; stack trace: ***
[2m[36m(pid=34560)[0m     @     0x7ff7f728f390 (unknown)
[2m[36m(pid=34560)[0m     @     0x7fc8f7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34560)[0m     @     0x7fc8f69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34531)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34531)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34531)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34531)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34531)[0m *** SIGSEGV (@0x0) received by PID 34531 (TID 0x7f94f6ac3700) from PID 0; stack trace: ***
[2m[36m(pid=34531)[0m     @     0x7f94f669c390 (unknown)
[2m[36m(pid=34531)[0m     @     0x7f65f64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34531)[0m     @     0x7f65f5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34562)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34562)[0m *** SIGSEGV (@0x0) received by PID 34562 (TID 0x7fcd0a916700) from PID 0; stack trace: ***
[2m[36m(pid=34562)[0m     @     0x7fcd0a4ef390 (unknown)
[2m[36m(pid=34562)[0m     @     0x7f9e0a365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34562)[0m     @     0x7f9e09a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34525)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34525)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34525)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34525)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34525)[0m *** SIGSEGV (@0x0) received by PID 34525 (TID 0x7f26566f7700) from PID 0; stack trace: ***
[2m[36m(pid=34525)[0m     @     0x7f26562d0390 (unknown)
[2m[36m(pid=34525)[0m     @     0x7ef756255f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34525)[0m     @     0x7ef7559807db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34525)[0m     @     0x7ef7559838f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34525)[0m     @     0x7ef755983ad3 at::TensorIterator::for_each()
[2m[36m(pid=34574)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34574)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34574)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34574)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34574)[0m *** SIGSEGV (@0x0) received by PID 34574 (TID 0x7f445ffe7700) from PID 0; stack trace: ***
[2m[36m(pid=34574)[0m     @     0x7f445fbc0390 (unknown)
[2m[36m(pid=34574)[0m     @     0x7f155f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34574)[0m     @     0x7f155f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34574)[0m     @     0x7f155f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34574)[0m     @     0x7f155f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=34546)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34546)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34546)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34526)[0m     @     0x7f921fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34526)[0m     @     0x7f921fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=34526)[0m     @     0x7f9220785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34526)[0m     @     0x7f92207a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34526)[0m     @     0x7f921fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34526)[0m     @     0x7f921fc48388 at::native::copy_impl()
[2m[36m(pid=34535)[0m     @     0x7f4236c7bad3 at::TensorIterator::for_each()
[2m[36m(pid=34535)[0m     @     0x7f4236c7bd91 at::TensorIterator::for_each()
[2m[36m(pid=34535)[0m     @     0x7f423755eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34535)[0m     @     0x7f4237581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34535)[0m     @     0x7f4236a23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34535)[0m     @     0x7f4236a21388 at::native::copy_impl()
[2m[36m(pid=34536)[0m     @     0x7f2a8d37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34536)[0m     @     0x7f2a8d37fad3 at::TensorIterator::for_each()
[2m[36m(pid=34536)[0m     @     0x7f2a8d37fd91 at::TensorIterator::for_each()
[2m[36m(pid=34536)[0m     @     0x7f2a8dc62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34536)[0m     @     0x7f2a8dc85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34541)[0m     @     0x7f5e284d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34541)[0m     @     0x7f5e284d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34559)[0m     @     0x7f040700cad3 at::TensorIterator::for_each()
[2m[36m(pid=34559)[0m     @     0x7f040700cd91 at::TensorIterator::for_each()
[2m[36m(pid=34559)[0m     @     0x7f04078efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34559)[0m     @     0x7f0407912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34559)[0m     @     0x7f0406db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34559)[0m     @     0x7f0406db2388 at::native::copy_impl()
[2m[36m(pid=34558)[0m     @     0x7f364374aad3 at::TensorIterator::for_each()
[2m[36m(pid=34558)[0m     @     0x7f364374ad91 at::TensorIterator::for_each()
[2m[36m(pid=34558)[0m     @     0x7f364402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34558)[0m     @     0x7f3644050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34558)[0m     @     0x7f36434f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34558)[0m     @     0x7f36434f0388 at::native::copy_impl()
[2m[36m(pid=34561)[0m     @     0x7efd26d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34561)[0m     @     0x7efd26d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34561)[0m     @     0x7efd27630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34561)[0m     @     0x7efd27653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34561)[0m     @     0x7efd26af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34561)[0m     @     0x7efd26af3388 at::native::copy_impl()
[2m[36m(pid=34507)[0m     @     0x7f33f131a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34507)[0m     @     0x7f33f131aad3 at::TensorIterator::for_each()
[2m[36m(pid=34507)[0m     @     0x7f33f131ad91 at::TensorIterator::for_each()
[2m[36m(pid=34507)[0m     @     0x7f33f1bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34507)[0m     @     0x7f33f1c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34556)[0m     @     0x7f130eefc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34556)[0m     @     0x7f130eefcad3 at::TensorIterator::for_each()
[2m[36m(pid=34540)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34540)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34540)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34540)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34540)[0m *** SIGSEGV (@0x0) received by PID 34540 (TID 0x7f7d33366700) from PID 0; stack trace: ***
[2m[36m(pid=34447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34447)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34552)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34552)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34552)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34552)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34552)[0m *** SIGSEGV (@0x0) received by PID 34552 (TID 0x7f62284af700) from PID 0; stack trace: ***
[2m[36m(pid=34449)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34449)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34449)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34449)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34449)[0m *** SIGSEGV (@0x0) received by PID 34449 (TID 0x7fe1389ae700) from PID 0; stack trace: ***
[2m[36m(pid=34529)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34529)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34529)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34529)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34529)[0m *** SIGSEGV (@0x0) received by PID 34529 (TID 0x7fb60f918700) from PID 0; stack trace: ***
[2m[36m(pid=34455)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34455)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34455)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34459)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34480)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34480)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34480)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34524)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34524)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34524)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34454)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34454)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34454)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34484)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34484)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34484)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34484)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34484)[0m *** SIGSEGV (@0x0) received by PID 34484 (TID 0x7fad7663d700) from PID 0; stack trace: ***
[2m[36m(pid=34483)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34483)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34483)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34483)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34483)[0m *** SIGSEGV (@0x0) received by PID 34483 (TID 0x7fa4f2e3e700) from PID 0; stack trace: ***
[2m[36m(pid=34476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34476)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34539)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34539)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34539)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34539)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34539)[0m *** SIGSEGV (@0x0) received by PID 34539 (TID 0x7fb81f1e9700) from PID 0; stack trace: ***
[2m[36m(pid=34539)[0m     @     0x7fb81edc2390 (unknown)
[2m[36m(pid=34516)[0m     @     0x7f95ae8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34516)[0m     @     0x7f95ae852ad3 at::TensorIterator::for_each()
[2m[36m(pid=34516)[0m     @     0x7f95ae852d91 at::TensorIterator::for_each()
[2m[36m(pid=34516)[0m     @     0x7f95af135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34516)[0m     @     0x7f95af158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34532)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34532)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34532)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34532)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34532)[0m *** SIGSEGV (@0x0) received by PID 34532 (TID 0x7f7bd5f27700) from PID 0; stack trace: ***
[2m[36m(pid=34532)[0m     @     0x7f7bd5b00390 (unknown)
[2m[36m(pid=34532)[0m     @     0x7f4cd57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34532)[0m     @     0x7f4cd4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34514)[0m     @     0x7fc7309538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34514)[0m     @     0x7fc730953ad3 at::TensorIterator::for_each()
[2m[36m(pid=34514)[0m     @     0x7fc730953d91 at::TensorIterator::for_each()
[2m[36m(pid=34514)[0m     @     0x7fc731236b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34514)[0m     @     0x7fc731259c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34460)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34460)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34460)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34460)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34460)[0m *** SIGSEGV (@0x0) received by PID 34460 (TID 0x7f98afeb5700) from PID 0; stack trace: ***
[2m[36m(pid=34521)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34521)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34521)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34521)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34521)[0m *** SIGSEGV (@0x0) received by PID 34521 (TID 0x7f1d773da700) from PID 0; stack trace: ***
[2m[36m(pid=34521)[0m     @     0x7f1d76fb3390 (unknown)
[2m[36m(pid=34521)[0m     @     0x7eee76e62f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34458)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34458)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34458)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34458)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34458)[0m *** SIGSEGV (@0x0) received by PID 34458 (TID 0x7fbf48f82700) from PID 0; stack trace: ***
[2m[36m(pid=34463)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34463)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34463)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34463)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34463)[0m *** SIGSEGV (@0x0) received by PID 34463 (TID 0x7fb7bdc32700) from PID 0; stack trace: ***
[2m[36m(pid=34474)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34474)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34474)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34511)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34511)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34511)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34453)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34566)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34566)[0m *** SIGSEGV (@0x0) received by PID 34566 (TID 0x7faec3f15700) from PID 0; stack trace: ***
[2m[36m(pid=34566)[0m     @     0x7faec3aee390 (unknown)
[2m[36m(pid=34560)[0m     @     0x7fc8f69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34560)[0m     @     0x7fc8f6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34560)[0m     @     0x7fc8f6957d91 at::TensorIterator::for_each()
[2m[36m(pid=34560)[0m     @     0x7fc8f723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34560)[0m     @     0x7fc8f725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34503)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34527)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34527)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34527)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34527)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34527)[0m *** SIGSEGV (@0x0) received by PID 34527 (TID 0x7fe82dfa1700) from PID 0; stack trace: ***
[2m[36m(pid=34527)[0m     @     0x7fe82db7a390 (unknown)
[2m[36m(pid=34466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34466)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34466)[0m *** SIGSEGV (@0x0) received by PID 34466 (TID 0x7f47421c3700) from PID 0; stack trace: ***
[2m[36m(pid=34466)[0m     @     0x7f4741d9c390 (unknown)
[2m[36m(pid=34466)[0m     @     0x7f1841d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34466)[0m     @     0x7f184147d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34518)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34518)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34518)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34518)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34518)[0m *** SIGSEGV (@0x0) received by PID 34518 (TID 0x7f1f8ff4d700) from PID 0; stack trace: ***
[2m[36m(pid=34462)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34462)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34462)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34531)[0m     @     0x7f65f5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34531)[0m     @     0x7f65f5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34531)[0m     @     0x7f65f5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=34531)[0m     @     0x7f65f650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34531)[0m     @     0x7f65f652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34531)[0m     @     0x7f65f59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34531)[0m     @     0x7f65f59cd388 at::native::copy_impl()
[2m[36m(pid=34562)[0m     @     0x7f9e09a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34562)[0m     @     0x7f9e09a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=34562)[0m     @     0x7f9e09a93d91 at::TensorIterator::for_each()
[2m[36m(pid=34562)[0m     @     0x7f9e0a376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34562)[0m     @     0x7f9e0a399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34457)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34457)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34457)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34530)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34530)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34530)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34530)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34530)[0m *** SIGSEGV (@0x0) received by PID 34530 (TID 0x7f247bf37700) from PID 0; stack trace: ***
[2m[36m(pid=34464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34464)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34464)[0m *** SIGSEGV (@0x0) received by PID 34464 (TID 0x7fc33844c700) from PID 0; stack trace: ***
[2m[36m(pid=34464)[0m     @     0x7fc338025390 (unknown)
[2m[36m(pid=34553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34553)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34553)[0m *** SIGSEGV (@0x0) received by PID 34553 (TID 0x7f045b66b700) from PID 0; stack trace: ***
[2m[36m(pid=34553)[0m     @     0x7f045b244390 (unknown)
[2m[36m(pid=34553)[0m     @     0x7ed55b115f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34553)[0m     @     0x7ed55a8407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34461)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34448)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34448)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34448)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34448)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34448)[0m *** SIGSEGV (@0x0) received by PID 34448 (TID 0x7f633f7c5700) from PID 0; stack trace: ***
[2m[36m(pid=34448)[0m     @     0x7f633f39e390 (unknown)
[2m[36m(pid=34448)[0m     @     0x7f343f340f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34477)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34477)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34477)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34477)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34477)[0m *** SIGSEGV (@0x0) received by PID 34477 (TID 0x7fd22bbd4700) from PID 0; stack trace: ***
[2m[36m(pid=34485)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34485)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34485)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34485)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34485)[0m *** SIGSEGV (@0x0) received by PID 34485 (TID 0x7f5b1245c700) from PID 0; stack trace: ***
[2m[36m(pid=34485)[0m     @     0x7f5b12035390 (unknown)
[2m[36m(pid=34485)[0m     @     0x7f2c11e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34502)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34502)[0m *** SIGSEGV (@0x0) received by PID 34502 (TID 0x7fa85f613700) from PID 0; stack trace: ***
[2m[36m(pid=34502)[0m     @     0x7fa85f1ec390 (unknown)
[2m[36m(pid=34502)[0m     @     0x7f795f124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34525)[0m     @     0x7ef755983d91 at::TensorIterator::for_each()
[2m[36m(pid=34525)[0m     @     0x7ef756266b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34525)[0m     @     0x7ef756289c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34525)[0m     @     0x7ef75572ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34450)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34450)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34450)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34468)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34468)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34468)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34468)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34468)[0m *** SIGSEGV (@0x0) received by PID 34468 (TID 0x7f326a1f3700) from PID 0; stack trace: ***
[2m[36m(pid=34574)[0m     @     0x7f155f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=34574)[0m     @     0x7f155f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34574)[0m     @     0x7f155f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34574)[0m     @     0x7f155ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34574)[0m     @     0x7f155ee99388 at::native::copy_impl()
[2m[36m(pid=34555)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34555)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34555)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34570)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34546)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34546)[0m *** SIGSEGV (@0x0) received by PID 34546 (TID 0x7f17683e5700) from PID 0; stack trace: ***
[2m[36m(pid=34546)[0m     @     0x7f1767fbe390 (unknown)
[2m[36m(pid=34546)[0m     @     0x7ee867d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34546)[0m     @     0x7ee8674577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34451)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34451)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34451)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34564)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34564)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34564)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34446)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34446)[0m *** SIGSEGV (@0x0) received by PID 34446 (TID 0x7f9ea8c8b700) from PID 0; stack trace: ***
[2m[36m(pid=34550)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34550)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34550)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34452)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34452)[0m *** SIGSEGV (@0x0) received by PID 34452 (TID 0x7fb231167700) from PID 0; stack trace: ***
[2m[36m(pid=34506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34506)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34506)[0m *** SIGSEGV (@0x0) received by PID 34506 (TID 0x7f6724264700) from PID 0; stack trace: ***
[2m[36m(pid=34506)[0m     @     0x7f6723e3d390 (unknown)
[2m[36m(pid=34506)[0m     @     0x7f3823ddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34506)[0m     @     0x7f38235097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34544)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34544)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34544)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34471)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34471)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34471)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34549)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34549)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34549)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34549)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34549)[0m *** SIGSEGV (@0x0) received by PID 34549 (TID 0x7fee6e622700) from PID 0; stack trace: ***
[2m[36m(pid=34549)[0m     @     0x7fee6e1fb390 (unknown)
[2m[36m(pid=34549)[0m     @     0x7fbf6e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34549)[0m     @     0x7fbf6d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34545)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34545)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34545)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34545)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34545)[0m *** SIGSEGV (@0x0) received by PID 34545 (TID 0x7f7a0aed8700) from PID 0; stack trace: ***
[2m[36m(pid=34545)[0m     @     0x7f7a0aab1390 (unknown)
[2m[36m(pid=34545)[0m     @     0x7f4b0aa24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34545)[0m     @     0x7f4b0a14f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34475)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34475)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34475)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34475)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34475)[0m *** SIGSEGV (@0x0) received by PID 34475 (TID 0x7ff2c375c700) from PID 0; stack trace: ***
[2m[36m(pid=34523)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34523)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34523)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34522)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34522)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34522)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34522)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34522)[0m *** SIGSEGV (@0x0) received by PID 34522 (TID 0x7fad39422700) from PID 0; stack trace: ***
[2m[36m(pid=34522)[0m     @     0x7fad38ffb390 (unknown)
[2m[36m(pid=34528)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34528)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34528)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34528)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34528)[0m *** SIGSEGV (@0x0) received by PID 34528 (TID 0x7f8b84a04700) from PID 0; stack trace: ***
[2m[36m(pid=34554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34554)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34509)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34509)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34509)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34509)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34509)[0m *** SIGSEGV (@0x0) received by PID 34509 (TID 0x7fabdb85a700) from PID 0; stack trace: ***
[2m[36m(pid=34509)[0m     @     0x7fabdb433390 (unknown)
[2m[36m(pid=34526)[0m     @     0x7f921fc4a5a4 at::native::copy_()
[2m[36m(pid=34526)[0m     @     0x7f92203354f5 at::Tensor::copy_()
[2m[36m(pid=34535)[0m     @     0x7f4236a235a4 at::native::copy_()
[2m[36m(pid=34535)[0m     @     0x7f423710e4f5 at::Tensor::copy_()
[2m[36m(pid=34536)[0m     @     0x7f2a8d127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34536)[0m     @     0x7f2a8d125388 at::native::copy_impl()
[2m[36m(pid=34536)[0m     @     0x7f2a8d1275a4 at::native::copy_()
[2m[36m(pid=34541)[0m     @     0x7f5e284d2d91 at::TensorIterator::for_each()
[2m[36m(pid=34541)[0m     @     0x7f5e28db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34541)[0m     @     0x7f5e28dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34541)[0m     @     0x7f5e2827aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34559)[0m     @     0x7f0406db45a4 at::native::copy_()
[2m[36m(pid=34559)[0m     @     0x7f040749f4f5 at::Tensor::copy_()
[2m[36m(pid=34559)[0m     @     0x7f04099728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34558)[0m     @     0x7f36434f25a4 at::native::copy_()
[2m[36m(pid=34561)[0m     @     0x7efd26af55a4 at::native::copy_()
[2m[36m(pid=34561)[0m     @     0x7efd271e04f5 at::Tensor::copy_()
[2m[36m(pid=34507)[0m     @     0x7f33f10c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34507)[0m     @     0x7f33f10c0388 at::native::copy_impl()
[2m[36m(pid=34507)[0m     @     0x7f33f10c25a4 at::native::copy_()
[2m[36m(pid=34556)[0m     @     0x7f130eefcd91 at::TensorIterator::for_each()
[2m[36m(pid=34556)[0m     @     0x7f130f7dfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34556)[0m     @     0x7f130f802c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34556)[0m     @     0x7f130eca4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34540)[0m     @     0x7f7d32f3f390 (unknown)
[2m[36m(pid=34540)[0m     @     0x7f4e32ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34540)[0m     @     0x7f4e325fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34540)[0m     @     0x7f4e326018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34447)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34447)[0m *** SIGSEGV (@0x0) received by PID 34447 (TID 0x7f2cc33e3700) from PID 0; stack trace: ***
[2m[36m(pid=34447)[0m     @     0x7f2cc2fbc390 (unknown)
[2m[36m(pid=34447)[0m     @     0x7efdc2f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34447)[0m     @     0x7efdc263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34552)[0m     @     0x7f6228088390 (unknown)
[2m[36m(pid=34552)[0m     @     0x7f3327eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34552)[0m     @     0x7f33275e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34552)[0m     @     0x7f33275e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34449)[0m     @     0x7fe138587390 (unknown)
[2m[36m(pid=34449)[0m     @     0x7fb238521f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34449)[0m     @     0x7fb237c4c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34529)[0m     @     0x7fb60f4f1390 (unknown)
[2m[36m(pid=34529)[0m     @     0x7f870f48ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34529)[0m     @     0x7f870ebba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34529)[0m     @     0x7f870ebbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34455)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34455)[0m *** SIGSEGV (@0x0) received by PID 34455 (TID 0x7f00f147c700) from PID 0; stack trace: ***
[2m[36m(pid=34455)[0m     @     0x7f00f1055390 (unknown)
[2m[36m(pid=34455)[0m     @     0x7ed1f0ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34459)[0m *** SIGSEGV (@0x0) received by PID 34459 (TID 0x7fb988fa5700) from PID 0; stack trace: ***
[2m[36m(pid=34459)[0m     @     0x7fb988b7e390 (unknown)
[2m[36m(pid=34547)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34547)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34547)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34480)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34480)[0m *** SIGSEGV (@0x0) received by PID 34480 (TID 0x7f0858dc1700) from PID 0; stack trace: ***
[2m[36m(pid=34480)[0m     @     0x7f085899a390 (unknown)
[2m[36m(pid=34480)[0m     @     0x7ed958825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34524)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34524)[0m *** SIGSEGV (@0x0) received by PID 34524 (TID 0x7f6b2e80e700) from PID 0; stack trace: ***
[2m[36m(pid=34524)[0m     @     0x7f6b2e3e7390 (unknown)
[2m[36m(pid=34524)[0m     @     0x7f3c2e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34524)[0m     @     0x7f3c2da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34454)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34454)[0m *** SIGSEGV (@0x0) received by PID 34454 (TID 0x7f548d366700) from PID 0; stack trace: ***
[2m[36m(pid=34454)[0m     @     0x7f548cf3f390 (unknown)
[2m[36m(pid=34454)[0m     @     0x7f258cea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34454)[0m     @     0x7f258c5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34484)[0m     @     0x7fad76216390 (unknown)
[2m[36m(pid=34484)[0m     @     0x7f7e7613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34484)[0m     @     0x7f7e758657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34484)[0m     @     0x7f7e758688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34483)[0m     @     0x7fa4f2a17390 (unknown)
[2m[36m(pid=34483)[0m     @     0x7f75f299ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34483)[0m     @     0x7f75f20ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34476)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34476)[0m *** SIGSEGV (@0x0) received by PID 34476 (TID 0x7f7097308700) from PID 0; stack trace: ***
[2m[36m(pid=34476)[0m     @     0x7f7096ee1390 (unknown)
[2m[36m(pid=34476)[0m     @     0x7f4196e93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34539)[0m     @     0x7f891ecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34539)[0m     @     0x7f891e4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34539)[0m     @     0x7f891e42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34516)[0m     @     0x7f95ae5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34516)[0m     @     0x7f95ae5f8388 at::native::copy_impl()
[2m[36m(pid=34516)[0m     @     0x7f95ae5fa5a4 at::native::copy_()
[2m[36m(pid=34532)[0m     @     0x7f4cd4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34532)[0m     @     0x7f4cd4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34514)[0m     @     0x7fc7306fba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34514)[0m     @     0x7fc7306f9388 at::native::copy_impl()
[2m[36m(pid=34514)[0m     @     0x7fc7306fb5a4 at::native::copy_()
[2m[36m(pid=34460)[0m     @     0x7f98afa8e390 (unknown)
[2m[36m(pid=34460)[0m     @     0x7f69afa42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34460)[0m     @     0x7f69af16d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34460)[0m     @     0x7f69af1708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34521)[0m     @     0x7eee7658d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34521)[0m     @     0x7eee765908f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34467)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34467)[0m *** SIGSEGV (@0x0) received by PID 34467 (TID 0x7fd0b9120700) from PID 0; stack trace: ***
[2m[36m(pid=34458)[0m     @     0x7fbf48b5b390 (unknown)
[2m[36m(pid=34458)[0m     @     0x7f9048b0ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34458)[0m     @     0x7f904823a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34458)[0m     @     0x7f904823d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34463)[0m     @     0x7fb7bd80b390 (unknown)
[2m[36m(pid=34463)[0m     @     0x7f88bd6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34463)[0m     @     0x7f88bce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34463)[0m     @     0x7f88bce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34474)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34474)[0m *** SIGSEGV (@0x0) received by PID 34474 (TID 0x7f6b6ac7f700) from PID 0; stack trace: ***
[2m[36m(pid=34474)[0m     @     0x7f6b6a858390 (unknown)
[2m[36m(pid=34474)[0m     @     0x7f3c6a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34474)[0m     @     0x7f3c69e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34474)[0m     @     0x7f3c69e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34511)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34511)[0m *** SIGSEGV (@0x0) received by PID 34511 (TID 0x7f9171dcb700) from PID 0; stack trace: ***
[2m[36m(pid=34511)[0m     @     0x7f91719a4390 (unknown)
[2m[36m(pid=34511)[0m     @     0x7f62717f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34511)[0m     @     0x7f6270f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34453)[0m *** SIGSEGV (@0x0) received by PID 34453 (TID 0x7fe05a20b700) from PID 0; stack trace: ***
[2m[36m(pid=34453)[0m     @     0x7fe059de4390 (unknown)
[2m[36m(pid=34453)[0m     @     0x7fb159d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34453)[0m     @     0x7fb1594a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34453)[0m     @     0x7fb1594a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34566)[0m     @     0x7f7fc3a88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34566)[0m     @     0x7f7fc31b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34566)[0m     @     0x7f7fc31b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34560)[0m     @     0x7fc8f66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34560)[0m     @     0x7fc8f66fd388 at::native::copy_impl()
[2m[36m(pid=34560)[0m     @     0x7fc8f66ff5a4 at::native::copy_()
[2m[36m(pid=34560)[0m     @     0x7fc8f6dea4f5 at::Tensor::copy_()
[2m[36m(pid=34503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34503)[0m *** SIGSEGV (@0x0) received by PID 34503 (TID 0x7f734b119700) from PID 0; stack trace: ***
[2m[36m(pid=34503)[0m     @     0x7f734acf2390 (unknown)
[2m[36m(pid=34503)[0m     @     0x7f444ac8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34503)[0m     @     0x7f444a3ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34503)[0m     @     0x7f444a3bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34527)[0m     @     0x7fb92da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34527)[0m     @     0x7fb92d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34527)[0m     @     0x7fb92d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34527)[0m     @     0x7fb92d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=34466)[0m     @     0x7f18414808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34466)[0m     @     0x7f1841480ad3 at::TensorIterator::for_each()
[2m[36m(pid=34518)[0m     @     0x7f1f8fb26390 (unknown)
[2m[36m(pid=34518)[0m     @     0x7ef08f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34518)[0m     @     0x7ef08f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34518)[0m     @     0x7ef08f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34462)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34462)[0m *** SIGSEGV (@0x0) received by PID 34462 (TID 0x7fac0706e700) from PID 0; stack trace: ***
[2m[36m(pid=34462)[0m     @     0x7fac06c47390 (unknown)
[2m[36m(pid=34462)[0m     @     0x7f7d06ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34462)[0m     @     0x7f7d061fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34462)[0m     @     0x7f7d061ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34531)[0m     @     0x7f65f59cf5a4 at::native::copy_()
[2m[36m(pid=34531)[0m     @     0x7f65f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=34531)[0m     @     0x7f65f858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34562)[0m     @     0x7f9e0983ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34562)[0m     @     0x7f9e09839388 at::native::copy_impl()
[2m[36m(pid=34562)[0m     @     0x7f9e0983b5a4 at::native::copy_()
[2m[36m(pid=34457)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34457)[0m *** SIGSEGV (@0x0) received by PID 34457 (TID 0x7fb4ebb0d700) from PID 0; stack trace: ***
[2m[36m(pid=34457)[0m     @     0x7fb4eb6e6390 (unknown)
[2m[36m(pid=34457)[0m     @     0x7f85eb61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34457)[0m     @     0x7f85ead4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34457)[0m     @     0x7f85ead4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34530)[0m     @     0x7f247bb10390 (unknown)
[2m[36m(pid=34530)[0m     @     0x7ef57bab5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34530)[0m     @     0x7ef57b1e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34530)[0m     @     0x7ef57b1e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34464)[0m     @     0x7f9437eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34464)[0m     @     0x7f94375e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34464)[0m     @     0x7f94375e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34464)[0m     @     0x7f94375e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=34553)[0m     @     0x7ed55a8438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34553)[0m     @     0x7ed55a843ad3 at::TensorIterator::for_each()
[2m[36m(pid=34553)[0m     @     0x7ed55a843d91 at::TensorIterator::for_each()
[2m[36m(pid=34461)[0m *** SIGSEGV (@0x0) received by PID 34461 (TID 0x7fbc27b14700) from PID 0; stack trace: ***
[2m[36m(pid=34461)[0m     @     0x7fbc276ed390 (unknown)
[2m[36m(pid=34461)[0m     @     0x7f8d2761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34461)[0m     @     0x7f8d26d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34461)[0m     @     0x7f8d26d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34448)[0m     @     0x7f343ea6b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34448)[0m     @     0x7f343ea6e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34448)[0m     @     0x7f343ea6ead3 at::TensorIterator::for_each()
[2m[36m(pid=34533)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34533)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34533)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34533)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34533)[0m *** SIGSEGV (@0x0) received by PID 34533 (TID 0x7eff865d1700) from PID 0; stack trace: ***
[2m[36m(pid=34477)[0m     @     0x7fd22b7ad390 (unknown)
[2m[36m(pid=34477)[0m     @     0x7fa32b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34477)[0m     @     0x7fa32ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34477)[0m     @     0x7fa32ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34485)[0m     @     0x7f2c1154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34485)[0m     @     0x7f2c115528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34485)[0m     @     0x7f2c11552ad3 at::TensorIterator::for_each()
[2m[36m(pid=34502)[0m     @     0x7f795e84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34502)[0m     @     0x7f795e8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34502)[0m     @     0x7f795e852ad3 at::TensorIterator::for_each()
[2m[36m(pid=34525)[0m     @     0x7ef755729388 at::native::copy_impl()
[2m[36m(pid=34525)[0m     @     0x7ef75572b5a4 at::native::copy_()
[2m[36m(pid=34525)[0m     @     0x7ef755e164f5 at::Tensor::copy_()
[2m[36m(pid=34525)[0m     @     0x7ef7582e98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34450)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34450)[0m *** SIGSEGV (@0x0) received by PID 34450 (TID 0x7f45f6a4c700) from PID 0; stack trace: ***
[2m[36m(pid=34450)[0m     @     0x7f45f6625390 (unknown)
[2m[36m(pid=34450)[0m     @     0x7f16f65a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34450)[0m     @     0x7f16f5ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34450)[0m     @     0x7f16f5cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34468)[0m     @     0x7f3269dcc390 (unknown)
[2m[36m(pid=34468)[0m     @     0x7f0369d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34468)[0m     @     0x7f036947d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34468)[0m     @     0x7f03694808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34574)[0m     @     0x7f155ee9b5a4 at::native::copy_()
[2m[36m(pid=34574)[0m     @     0x7f155f5864f5 at::Tensor::copy_()
[2m[36m(pid=34574)[0m     @     0x7f1561a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34555)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34555)[0m *** SIGSEGV (@0x0) received by PID 34555 (TID 0x7f9c13380700) from PID 0; stack trace: ***
[2m[36m(pid=34555)[0m     @     0x7f9c12f59390 (unknown)
[2m[36m(pid=34555)[0m     @     0x7f6d12cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34555)[0m     @     0x7f6d124277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34555)[0m     @     0x7f6d1242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34570)[0m *** SIGSEGV (@0x0) received by PID 34570 (TID 0x7f1c21b7e700) from PID 0; stack trace: ***
[2m[36m(pid=34570)[0m     @     0x7f1c21757390 (unknown)
[2m[36m(pid=34570)[0m     @     0x7eed216f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34570)[0m     @     0x7eed20e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34570)[0m     @     0x7eed20e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34546)[0m     @     0x7ee86745a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34546)[0m     @     0x7ee86745aad3 at::TensorIterator::for_each()
[2m[36m(pid=34451)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34451)[0m *** SIGSEGV (@0x0) received by PID 34451 (TID 0x7f59122e7700) from PID 0; stack trace: ***
[2m[36m(pid=34451)[0m     @     0x7f5911ec0390 (unknown)
[2m[36m(pid=34451)[0m     @     0x7f2a11e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34451)[0m     @     0x7f2a1154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34451)[0m     @     0x7f2a115528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34564)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34564)[0m *** SIGSEGV (@0x0) received by PID 34564 (TID 0x7f2dba24d700) from PID 0; stack trace: ***
[2m[36m(pid=34564)[0m     @     0x7f2db9e26390 (unknown)
[2m[36m(pid=34564)[0m     @     0x7efeb9db7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34564)[0m     @     0x7efeb94e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34564)[0m     @     0x7efeb94e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34519)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34519)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34519)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34519)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34519)[0m *** SIGSEGV (@0x0) received by PID 34519 (TID 0x7ff8ee637700) from PID 0; stack trace: ***
[2m[36m(pid=34519)[0m     @     0x7ff8ee210390 (unknown)
[2m[36m(pid=34519)[0m     @     0x7fc9ee13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34519)[0m     @     0x7fc9ed8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34520)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34520)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34520)[0m *** Aborted at 1604570785 (unix time) try "date -d @1604570785" if you are using GNU date ***
[2m[36m(pid=34520)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34520)[0m *** SIGSEGV (@0x0) received by PID 34520 (TID 0x7f5f0938e700) from PID 0; stack trace: ***
[2m[36m(pid=34520)[0m     @     0x7f5f08f67390 (unknown)
[2m[36m(pid=34520)[0m     @     0x7f3008ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34520)[0m     @     0x7f30085cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34446)[0m     @     0x7f9ea8864390 (unknown)
[2m[36m(pid=34446)[0m     @     0x7f6fa874cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34446)[0m     @     0x7f6fa7e777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34550)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34550)[0m *** SIGSEGV (@0x0) received by PID 34550 (TID 0x7ff456cca700) from PID 0; stack trace: ***
[2m[36m(pid=34550)[0m     @     0x7ff4568a3390 (unknown)
[2m[36m(pid=34550)[0m     @     0x7fc5567bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34550)[0m     @     0x7fc555ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34452)[0m     @     0x7fb230d40390 (unknown)
[2m[36m(pid=34452)[0m     @     0x7f8330c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34452)[0m     @     0x7f833039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34452)[0m     @     0x7f83303a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34506)[0m     @     0x7f382350c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34506)[0m     @     0x7f382350cad3 at::TensorIterator::for_each()
[2m[36m(pid=34544)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34544)[0m *** SIGSEGV (@0x0) received by PID 34544 (TID 0x7f7877d3e700) from PID 0; stack trace: ***
[2m[36m(pid=34471)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34471)[0m *** SIGSEGV (@0x0) received by PID 34471 (TID 0x7fdc52142700) from PID 0; stack trace: ***
[2m[36m(pid=34471)[0m     @     0x7fdc51d1b390 (unknown)
[2m[36m(pid=34471)[0m     @     0x7fad51c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34471)[0m     @     0x7fad513387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34549)[0m     @     0x7fbf6d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34549)[0m     @     0x7fbf6d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=34545)[0m     @     0x7f4b0a1528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34545)[0m     @     0x7f4b0a152ad3 at::TensorIterator::for_each()
[2m[36m(pid=34545)[0m     @     0x7f4b0a152d91 at::TensorIterator::for_each()
[2m[36m(pid=34545)[0m     @     0x7f4b0aa35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34545)[0m     @     0x7f4b0aa58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34475)[0m     @     0x7ff2c3335390 (unknown)
[2m[36m(pid=34475)[0m     @     0x7fc3c3229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34475)[0m     @     0x7fc3c29547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34523)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34523)[0m *** SIGSEGV (@0x0) received by PID 34523 (TID 0x7f0fcb22d700) from PID 0; stack trace: ***
[2m[36m(pid=34523)[0m     @     0x7f0fcae06390 (unknown)
[2m[36m(pid=34523)[0m     @     0x7ee0caa13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34523)[0m     @     0x7ee0ca13e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34523)[0m     @     0x7ee0ca1418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34522)[0m     @     0x7f7e38f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34522)[0m     @     0x7f7e3867a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34522)[0m     @     0x7f7e3867d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34522)[0m     @     0x7f7e3867dad3 at::TensorIterator::for_each()
[2m[36m(pid=34528)[0m     @     0x7f8b845dd390 (unknown)
[2m[36m(pid=34528)[0m     @     0x7f5c84339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34528)[0m     @     0x7f5c83a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34528)[0m     @     0x7f5c83a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34554)[0m *** SIGSEGV (@0x0) received by PID 34554 (TID 0x7f9d7928e700) from PID 0; stack trace: ***
[2m[36m(pid=34554)[0m     @     0x7f9d78e67390 (unknown)
[2m[36m(pid=34554)[0m     @     0x7f6e78dd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34554)[0m     @     0x7f6e784fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34509)[0m     @     0x7f7cdb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34509)[0m     @     0x7f7cda9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34509)[0m     @     0x7f7cda9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34509)[0m     @     0x7f7cda957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34526)[0m     @     0x7f92228088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34526)[0m     @     0x7f92203354f5 at::Tensor::copy_()
[2m[36m(pid=34526)[0m     @     0x7f92263e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34526)[0m     @     0x560f11269fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34526)[0m     @     0x560f111c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34526)[0m     @     0x560f1124fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34526)[0m     @     0x560f11250a20 method_vectorcall
[2m[36m(pid=34526)[0m     @     0x560f111c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34526)[0m     @     0x560f1124fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34526)[0m     @     0x560f11250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34526)[0m     @     0x560f111c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34526)[0m     @     0x560f1124fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34526)[0m     @     0x560f11250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34526)[0m     @     0x560f111c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34526)[0m     @     0x560f1124fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34526)[0m     @     0x560f11250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34526)[0m     @     0x560f111c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34526)[0m     @     0x560f1124fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34526)[0m     @     0x560f11250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34526)[0m     @     0x560f111c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x7f42395e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34535)[0m     @     0x7f423710e4f5 at::Tensor::copy_()
[2m[36m(pid=34535)[0m     @     0x7f423d1b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34535)[0m     @     0x563743908fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34535)[0m     @     0x563743863b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x5637438eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34535)[0m     @     0x5637438efa20 method_vectorcall
[2m[36m(pid=34535)[0m     @     0x563743863bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x5637438eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34535)[0m     @     0x5637438ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34535)[0m     @     0x563743864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x5637438eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34535)[0m     @     0x5637438ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34535)[0m     @     0x563743864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x5637438eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34535)[0m     @     0x5637438ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34535)[0m     @     0x563743864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34535)[0m     @     0x5637438eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34535)[0m     @     0x5637438ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34535)[0m     @     0x563743864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x7f2a8d8124f5 at::Tensor::copy_()
[2m[36m(pid=34536)[0m     @     0x7f2a8fce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34536)[0m     @     0x7f2a8d8124f5 at::Tensor::copy_()
[2m[36m(pid=34536)[0m     @     0x7f2a938bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34536)[0m     @     0x5605132adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34536)[0m     @     0x560513208b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x560513293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34536)[0m     @     0x560513294a20 method_vectorcall
[2m[36m(pid=34536)[0m     @     0x560513208bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x560513293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34536)[0m     @     0x560513294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34536)[0m     @     0x560513209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x560513293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x7f5e28278388 at::native::copy_impl()
[2m[36m(pid=34541)[0m     @     0x7f5e2827a5a4 at::native::copy_()
[2m[36m(pid=34541)[0m     @     0x7f5e289654f5 at::Tensor::copy_()
[2m[36m(pid=34541)[0m     @     0x7f5e2ae388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34559)[0m     @     0x7f040749f4f5 at::Tensor::copy_()
[2m[36m(pid=34559)[0m     @     0x7f040d54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34559)[0m     @     0x5565854a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34559)[0m     @     0x556585404b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34559)[0m     @     0x55658548fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34559)[0m     @     0x556585490a20 method_vectorcall
[2m[36m(pid=34559)[0m     @     0x556585404bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34559)[0m     @     0x55658548fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34559)[0m     @     0x556585490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34559)[0m     @     0x556585405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34559)[0m     @     0x55658548fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34559)[0m     @     0x556585490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34559)[0m     @     0x556585405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34559)[0m     @     0x55658548fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34559)[0m     @     0x556585490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34559)[0m     @     0x556585405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34559)[0m     @     0x55658548fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34559)[0m     @     0x556585490643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34559)[0m     @     0x556585405689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x7f3643bdd4f5 at::Tensor::copy_()
[2m[36m(pid=34558)[0m     @     0x7f36460b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34558)[0m     @     0x7f3643bdd4f5 at::Tensor::copy_()
[2m[36m(pid=34558)[0m     @     0x7f3649c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34558)[0m     @     0x55d376d22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34558)[0m     @     0x55d376c7db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x55d376d08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34558)[0m     @     0x55d376d09a20 method_vectorcall
[2m[36m(pid=34558)[0m     @     0x55d376c7dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x55d376d08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34558)[0m     @     0x55d376d09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34558)[0m     @     0x55d376c7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x55d376d08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34558)[0m     @     0x55d376d09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34558)[0m     @     0x55d376c7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x55d376d08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34558)[0m     @     0x55d376d09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34558)[0m     @     0x55d376c7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34558)[0m     @     0x55d376d08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34558)[0m     @     0x55d376d09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34558)[0m     @     0x55d376c7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x7efd296b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34561)[0m     @     0x7efd271e04f5 at::Tensor::copy_()
[2m[36m(pid=34561)[0m     @     0x7efd2d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34561)[0m     @     0x5568ad95afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34561)[0m     @     0x5568ad8b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x5568ad940baf _PyEval_EvalCodeWithName
[2m[36m(pid=34561)[0m     @     0x5568ad941a20 method_vectorcall
[2m[36m(pid=34561)[0m     @     0x5568ad8b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x5568ad940baf _PyEval_EvalCodeWithName
[2m[36m(pid=34561)[0m     @     0x5568ad941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34561)[0m     @     0x5568ad8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x5568ad940baf _PyEval_EvalCodeWithName
[2m[36m(pid=34561)[0m     @     0x5568ad941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34561)[0m     @     0x5568ad8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x5568ad940baf _PyEval_EvalCodeWithName
[2m[36m(pid=34561)[0m     @     0x5568ad941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34561)[0m     @     0x5568ad8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34561)[0m     @     0x5568ad940baf _PyEval_EvalCodeWithName
[2m[36m(pid=34561)[0m     @     0x5568ad941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34561)[0m     @     0x5568ad8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x7f33f17ad4f5 at::Tensor::copy_()
[2m[36m(pid=34507)[0m     @     0x7f33f3c808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34507)[0m     @     0x7f33f17ad4f5 at::Tensor::copy_()
[2m[36m(pid=34507)[0m     @     0x7f33f785879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34507)[0m     @     0x559ddf565fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34507)[0m     @     0x559ddf4c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x559ddf54bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34507)[0m     @     0x559ddf54ca20 method_vectorcall
[2m[36m(pid=34507)[0m     @     0x559ddf4c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x559ddf54bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34507)[0m     @     0x559ddf54c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34507)[0m     @     0x559ddf4c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x559ddf54bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34507)[0m     @     0x559ddf54c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34507)[0m     @     0x559ddf4c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x7f130eca2388 at::native::copy_impl()
[2m[36m(pid=34556)[0m     @     0x7f130eca45a4 at::native::copy_()
[2m[36m(pid=34556)[0m     @     0x7f130f38f4f5 at::Tensor::copy_()
[2m[36m(pid=34556)[0m     @     0x7f13118628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34540)[0m     @     0x7f4e32601ad3 at::TensorIterator::for_each()
[2m[36m(pid=34540)[0m     @     0x7f4e32601d91 at::TensorIterator::for_each()
[2m[36m(pid=34540)[0m     @     0x7f4e32ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34540)[0m     @     0x7f4e32f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34447)[0m     @     0x7efdc26418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34447)[0m     @     0x7efdc2641ad3 at::TensorIterator::for_each()
[2m[36m(pid=34447)[0m     @     0x7efdc2641d91 at::TensorIterator::for_each()
[2m[36m(pid=34447)[0m     @     0x7efdc2f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34552)[0m     @     0x7f33275e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=34552)[0m     @     0x7f33275e4d91 at::TensorIterator::for_each()
[2m[36m(pid=34552)[0m     @     0x7f3327ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34552)[0m     @     0x7f3327eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34449)[0m     @     0x7fb237c4f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34449)[0m     @     0x7fb237c4fad3 at::TensorIterator::for_each()
[2m[36m(pid=34449)[0m     @     0x7fb237c4fd91 at::TensorIterator::for_each()
[2m[36m(pid=34449)[0m     @     0x7fb238532b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34449)[0m     @     0x7fb238555c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34529)[0m     @     0x7f870ebbdad3 at::TensorIterator::for_each()
[2m[36m(pid=34529)[0m     @     0x7f870ebbdd91 at::TensorIterator::for_each()
[2m[36m(pid=34529)[0m     @     0x7f870f4a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34529)[0m     @     0x7f870f4c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34529)[0m     @     0x7f870e965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34455)[0m     @     0x7ed1f05cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34455)[0m     @     0x7ed1f05d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34455)[0m     @     0x7ed1f05d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34459)[0m     @     0x7f8a889e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34459)[0m     @     0x7f8a881137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34459)[0m     @     0x7f8a881168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34459)[0m     @     0x7f8a88116ad3 at::TensorIterator::for_each()
[2m[36m(pid=34547)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34547)[0m *** SIGSEGV (@0x0) received by PID 34547 (TID 0x7ff1ab3bc700) from PID 0; stack trace: ***
[2m[36m(pid=34547)[0m     @     0x7ff1aaf95390 (unknown)
[2m[36m(pid=34547)[0m     @     0x7fc2aaf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34547)[0m     @     0x7fc2aa63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34547)[0m     @     0x7fc2aa6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34480)[0m     @     0x7ed957f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34480)[0m     @     0x7ed957f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34480)[0m     @     0x7ed957f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=34524)[0m     @     0x7f3c2da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34524)[0m     @     0x7f3c2da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=34524)[0m     @     0x7f3c2da79d91 at::TensorIterator::for_each()
[2m[36m(pid=34454)[0m     @     0x7f258c5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34454)[0m     @     0x7f258c5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34454)[0m     @     0x7f258c5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=34454)[0m     @     0x7f258ceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34484)[0m     @     0x7f7e75868ad3 at::TensorIterator::for_each()
[2m[36m(pid=34484)[0m     @     0x7f7e75868d91 at::TensorIterator::for_each()
[2m[36m(pid=34484)[0m     @     0x7f7e7614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34484)[0m     @     0x7f7e7616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34483)[0m     @     0x7f75f20cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34483)[0m     @     0x7f75f20cdad3 at::TensorIterator::for_each()
[2m[36m(pid=34483)[0m     @     0x7f75f20cdd91 at::TensorIterator::for_each()
[2m[36m(pid=34483)[0m     @     0x7f75f29b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34476)[0m     @     0x7f41965be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34476)[0m     @     0x7f41965c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34476)[0m     @     0x7f41965c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=34539)[0m     @     0x7f891e42aad3 at::TensorIterator::for_each()
[2m[36m(pid=34539)[0m     @     0x7f891e42ad91 at::TensorIterator::for_each()
[2m[36m(pid=34539)[0m     @     0x7f891ed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34539)[0m     @     0x7f891ed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34516)[0m     @     0x7f95aece54f5 at::Tensor::copy_()
[2m[36m(pid=34516)[0m     @     0x7f95b11b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34516)[0m     @     0x7f95aece54f5 at::Tensor::copy_()
[2m[36m(pid=34516)[0m     @     0x7f95b4d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34516)[0m     @     0x55b43bf0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34516)[0m     @     0x55b43be66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34516)[0m     @     0x55b43bef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34516)[0m     @     0x55b43bef2a20 method_vectorcall
[2m[36m(pid=34516)[0m     @     0x55b43be66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34516)[0m     @     0x55b43bef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34516)[0m     @     0x55b43bef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34516)[0m     @     0x55b43be67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34516)[0m     @     0x55b43bef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34516)[0m     @     0x55b43bef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34516)[0m     @     0x55b43be67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34516)[0m     @     0x55b43bef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34516)[0m     @     0x55b43bef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34516)[0m     @     0x55b43be67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34516)[0m     @     0x55b43bef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34516)[0m     @     0x55b43bef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34516)[0m     @     0x55b43be67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x7f4cd4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=34532)[0m     @     0x7f4cd580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34532)[0m     @     0x7f4cd582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34532)[0m     @     0x7f4cd4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34532)[0m     @     0x7f4cd4ccd388 at::native::copy_impl()
[2m[36m(pid=34514)[0m     @     0x7fc730de64f5 at::Tensor::copy_()
[2m[36m(pid=34514)[0m     @     0x7fc7332b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34514)[0m     @     0x7fc730de64f5 at::Tensor::copy_()
[2m[36m(pid=34514)[0m     @     0x7fc736e9179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34514)[0m     @     0x56042e907fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34514)[0m     @     0x56042e862b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34514)[0m     @     0x56042e8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34514)[0m     @     0x56042e8eea20 method_vectorcall
[2m[36m(pid=34514)[0m     @     0x56042e862bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34514)[0m     @     0x56042e8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34514)[0m     @     0x56042e8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34514)[0m     @     0x56042e863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34514)[0m     @     0x56042e8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34514)[0m     @     0x56042e8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34514)[0m     @     0x56042e863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34514)[0m     @     0x56042e8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34514)[0m     @     0x56042e8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34514)[0m     @     0x56042e863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x7f69af170ad3 at::TensorIterator::for_each()
[2m[36m(pid=34460)[0m     @     0x7f69af170d91 at::TensorIterator::for_each()
[2m[36m(pid=34460)[0m     @     0x7f69afa53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34460)[0m     @     0x7f69afa76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34521)[0m     @     0x7eee76590ad3 at::TensorIterator::for_each()
[2m[36m(pid=34521)[0m     @     0x7eee76590d91 at::TensorIterator::for_each()
[2m[36m(pid=34521)[0m     @     0x7eee76e73b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34521)[0m     @     0x7eee76e96c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34521)[0m     @     0x7eee76338a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34467)[0m     @     0x7fd0b8cf9390 (unknown)
[2m[36m(pid=34467)[0m     @     0x7fa1b8bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34467)[0m     @     0x7fa1b82fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34458)[0m     @     0x7f904823dad3 at::TensorIterator::for_each()
[2m[36m(pid=34458)[0m     @     0x7f904823dd91 at::TensorIterator::for_each()
[2m[36m(pid=34458)[0m     @     0x7f9048b20b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34463)[0m     @     0x7f88bce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=34463)[0m     @     0x7f88bce22d91 at::TensorIterator::for_each()
[2m[36m(pid=34463)[0m     @     0x7f88bd705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34463)[0m     @     0x7f88bd728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34474)[0m     @     0x7f3c69e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=34474)[0m     @     0x7f3c69e38d91 at::TensorIterator::for_each()
[2m[36m(pid=34511)[0m     @     0x7f6270f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34511)[0m     @     0x7f6270f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34453)[0m     @     0x7fb1594a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=34453)[0m     @     0x7fb1594a5d91 at::TensorIterator::for_each()
[2m[36m(pid=34566)[0m     @     0x7f7fc31b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=34566)[0m     @     0x7f7fc31b6d91 at::TensorIterator::for_each()
[2m[36m(pid=34566)[0m     @     0x7f7fc3a99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34566)[0m     @     0x7f7fc3abcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34560)[0m     @     0x7fc8f92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34560)[0m     @     0x7fc8f6dea4f5 at::Tensor::copy_()
[2m[36m(pid=34560)[0m     @     0x7fc8fce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34560)[0m     @     0x55c8166c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34560)[0m     @     0x55c816623b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34560)[0m     @     0x55c8166aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34560)[0m     @     0x55c8166afa20 method_vectorcall
[2m[36m(pid=34560)[0m     @     0x55c816623bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34560)[0m     @     0x55c8166aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34560)[0m     @     0x55c8166af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34560)[0m     @     0x55c816624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34560)[0m     @     0x55c8166aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x7f444a3bdad3 at::TensorIterator::for_each()
[2m[36m(pid=34527)[0m     @     0x7fb92d138d91 at::TensorIterator::for_each()
[2m[36m(pid=34527)[0m     @     0x7fb92da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34527)[0m     @     0x7fb92da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34466)[0m     @     0x7f1841480d91 at::TensorIterator::for_each()
[2m[36m(pid=34466)[0m     @     0x7f1841d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34466)[0m     @     0x7f1841d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34466)[0m     @     0x7f1841228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34466)[0m     @     0x7f1841226388 at::native::copy_impl()
[2m[36m(pid=34518)[0m     @     0x7ef08f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=34518)[0m     @     0x7ef08f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=34518)[0m     @     0x7ef08f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34518)[0m     @     0x7ef08f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34462)[0m     @     0x7f7d061ffad3 at::TensorIterator::for_each()
[2m[36m(pid=34531)[0m     @     0x7f65f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=34531)[0m     @     0x7f65fc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34531)[0m     @     0x559e46ad1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34531)[0m     @     0x559e46a2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34531)[0m     @     0x559e46ab7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34531)[0m     @     0x559e46ab8a20 method_vectorcall
[2m[36m(pid=34531)[0m     @     0x559e46a2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34531)[0m     @     0x559e46ab7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34531)[0m     @     0x559e46ab8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34531)[0m     @     0x559e46a2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34531)[0m     @     0x559e46ab7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34531)[0m     @     0x559e46ab8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34531)[0m     @     0x559e46a2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34531)[0m     @     0x559e46ab7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34531)[0m     @     0x559e46ab8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34531)[0m     @     0x559e46a2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34531)[0m     @     0x559e46ab7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34531)[0m     @     0x559e46ab8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34531)[0m     @     0x559e46a2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34562)[0m     @     0x7f9e09f264f5 at::Tensor::copy_()
[2m[36m(pid=34562)[0m     @     0x7f9e0c3f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34562)[0m     @     0x7f9e09f264f5 at::Tensor::copy_()
[2m[36m(pid=34562)[0m     @     0x7f9e0ffd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34562)[0m     @     0x5622d9701fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34562)[0m     @     0x5622d965cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34562)[0m     @     0x5622d96e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34562)[0m     @     0x5622d96e8a20 method_vectorcall
[2m[36m(pid=34562)[0m     @     0x5622d965cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x7f85ead4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34530)[0m     @     0x7ef57b1e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=34530)[0m     @     0x7ef57b1e3d91 at::TensorIterator::for_each()
[2m[36m(pid=34530)[0m     @     0x7ef57bac6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34530)[0m     @     0x7ef57bae9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34464)[0m     @     0x7f94375e4d91 at::TensorIterator::for_each()
[2m[36m(pid=34464)[0m     @     0x7f9437ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34464)[0m     @     0x7f9437eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34553)[0m     @     0x7ed55b126b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34553)[0m     @     0x7ed55b149c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34553)[0m     @     0x7ed55a5eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34553)[0m     @     0x7ed55a5e9388 at::native::copy_impl()
[2m[36m(pid=34461)[0m     @     0x7f8d26d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34461)[0m     @     0x7f8d26d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34461)[0m     @     0x7f8d27630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34448)[0m     @     0x7f343ea6ed91 at::TensorIterator::for_each()
[2m[36m(pid=34448)[0m     @     0x7f343f351b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34448)[0m     @     0x7f343f374c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34448)[0m     @     0x7f343e816a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34533)[0m     @     0x7eff861aa390 (unknown)
[2m[36m(pid=34533)[0m     @     0x7ed08613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34533)[0m     @     0x7ed0858657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34477)[0m     @     0x7fa32ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34477)[0m     @     0x7fa32ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34477)[0m     @     0x7fa32b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34485)[0m     @     0x7f2c11552d91 at::TensorIterator::for_each()
[2m[36m(pid=34485)[0m     @     0x7f2c11e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34485)[0m     @     0x7f2c11e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34502)[0m     @     0x7f795e852d91 at::TensorIterator::for_each()
[2m[36m(pid=34502)[0m     @     0x7f795f135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34502)[0m     @     0x7f795f158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34525)[0m     @     0x7ef755e164f5 at::Tensor::copy_()
[2m[36m(pid=34525)[0m     @     0x7ef75bec179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34525)[0m     @     0x564f3ccb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34525)[0m     @     0x564f3cc0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34525)[0m     @     0x564f3cc9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34525)[0m     @     0x564f3cc9ba20 method_vectorcall
[2m[36m(pid=34525)[0m     @     0x564f3cc0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34525)[0m     @     0x564f3cc9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34525)[0m     @     0x564f3cc9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34525)[0m     @     0x564f3cc10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34525)[0m     @     0x564f3cc9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34525)[0m     @     0x564f3cc9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34525)[0m     @     0x564f3cc10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34525)[0m     @     0x564f3cc9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34525)[0m     @     0x564f3cc9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34525)[0m     @     0x564f3cc10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34525)[0m     @     0x564f3cc9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34525)[0m     @     0x564f3cc9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34525)[0m     @     0x564f3cc10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x7f16f5cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34450)[0m     @     0x7f16f5cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=34468)[0m     @     0x7f0369480ad3 at::TensorIterator::for_each()
[2m[36m(pid=34468)[0m     @     0x7f0369480d91 at::TensorIterator::for_each()
[2m[36m(pid=34468)[0m     @     0x7f0369d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34468)[0m     @     0x7f0369d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34574)[0m     @     0x7f155f5864f5 at::Tensor::copy_()
[2m[36m(pid=34574)[0m     @     0x7f156563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34574)[0m     @     0x563bdb36cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34574)[0m     @     0x563bdb2c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34574)[0m     @     0x563bdb352baf _PyEval_EvalCodeWithName
[2m[36m(pid=34574)[0m     @     0x563bdb353a20 method_vectorcall
[2m[36m(pid=34574)[0m     @     0x563bdb2c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34574)[0m     @     0x563bdb352baf _PyEval_EvalCodeWithName
[2m[36m(pid=34574)[0m     @     0x563bdb353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34574)[0m     @     0x563bdb2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34574)[0m     @     0x563bdb352baf _PyEval_EvalCodeWithName
[2m[36m(pid=34574)[0m     @     0x563bdb353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34574)[0m     @     0x563bdb2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34574)[0m     @     0x563bdb352baf _PyEval_EvalCodeWithName
[2m[36m(pid=34574)[0m     @     0x563bdb353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34574)[0m     @     0x563bdb2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34574)[0m     @     0x563bdb352baf _PyEval_EvalCodeWithName
[2m[36m(pid=34574)[0m     @     0x563bdb353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34574)[0m     @     0x563bdb2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x7f6d1242aad3 at::TensorIterator::for_each()
[2m[36m(pid=34555)[0m     @     0x7f6d1242ad91 at::TensorIterator::for_each()
[2m[36m(pid=34570)[0m     @     0x7eed20e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=34570)[0m     @     0x7eed20e22d91 at::TensorIterator::for_each()
[2m[36m(pid=34546)[0m     @     0x7ee86745ad91 at::TensorIterator::for_each()
[2m[36m(pid=34546)[0m     @     0x7ee867d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34546)[0m     @     0x7ee867d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34546)[0m     @     0x7ee867202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34546)[0m     @     0x7ee867200388 at::native::copy_impl()
[2m[36m(pid=34451)[0m     @     0x7f2a11552ad3 at::TensorIterator::for_each()
[2m[36m(pid=34451)[0m     @     0x7f2a11552d91 at::TensorIterator::for_each()
[2m[36m(pid=34564)[0m     @     0x7efeb94e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=34564)[0m     @     0x7efeb94e5d91 at::TensorIterator::for_each()
[2m[36m(pid=34564)[0m     @     0x7efeb9dc8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34564)[0m     @     0x7efeb9debc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34519)[0m     @     0x7fc9ed8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34519)[0m     @     0x7fc9ed868ad3 at::TensorIterator::for_each()
[2m[36m(pid=34519)[0m     @     0x7fc9ed868d91 at::TensorIterator::for_each()
[2m[36m(pid=34520)[0m     @     0x7f30085d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34520)[0m     @     0x7f30085d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34520)[0m     @     0x7f30085d2d91 at::TensorIterator::for_each()
[2m[36m(pid=34520)[0m     @     0x7f3008eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34446)[0m     @     0x7f6fa7e7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34550)[0m     @     0x7fc555ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34550)[0m     @     0x7fc555ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=34550)[0m     @     0x7fc555ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=34550)[0m     @     0x7fc5567ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34452)[0m     @     0x7f83303a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34452)[0m     @     0x7f83303a2d91 at::TensorIterator::for_each()
[2m[36m(pid=34452)[0m     @     0x7f8330c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34452)[0m     @     0x7f8330ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34506)[0m     @     0x7f382350cd91 at::TensorIterator::for_each()
[2m[36m(pid=34506)[0m     @     0x7f3823defb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34506)[0m     @     0x7f3823e12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34506)[0m     @     0x7f38232b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34506)[0m     @     0x7f38232b2388 at::native::copy_impl()
[2m[36m(pid=34544)[0m     @     0x7f7877917390 (unknown)
[2m[36m(pid=34544)[0m     @     0x7f49778b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34544)[0m     @     0x7f4976fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34471)[0m     @     0x7fad5133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34471)[0m     @     0x7fad5133bad3 at::TensorIterator::for_each()
[2m[36m(pid=34471)[0m     @     0x7fad5133bd91 at::TensorIterator::for_each()
[2m[36m(pid=34549)[0m     @     0x7fbf6d868d91 at::TensorIterator::for_each()
[2m[36m(pid=34549)[0m     @     0x7fbf6e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34549)[0m     @     0x7fbf6e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34549)[0m     @     0x7fbf6d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34545)[0m     @     0x7f4b09efaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34545)[0m     @     0x7f4b09ef8388 at::native::copy_impl()
[2m[36m(pid=34545)[0m     @     0x7f4b09efa5a4 at::native::copy_()
[2m[36m(pid=34475)[0m     @     0x7fc3c29578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34523)[0m     @     0x7ee0ca141ad3 at::TensorIterator::for_each()
[2m[36m(pid=34523)[0m     @     0x7ee0ca141d91 at::TensorIterator::for_each()
[2m[36m(pid=34528)[0m     @     0x7f5c83a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=34528)[0m     @     0x7f5c83a67d91 at::TensorIterator::for_each()
[2m[36m(pid=34528)[0m     @     0x7f5c8434ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34509)[0m     @     0x7f7cda957d91 at::TensorIterator::for_each()
[2m[36m(pid=34509)[0m     @     0x7f7cdb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34509)[0m     @     0x7f7cdb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34536)[0m     @     0x560513294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34536)[0m     @     0x560513209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x560513293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34536)[0m     @     0x560513294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34536)[0m     @     0x560513209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34536)[0m     @     0x560513293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34536)[0m     @     0x560513294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34536)[0m     @     0x560513209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x7f5e289654f5 at::Tensor::copy_()
[2m[36m(pid=34541)[0m     @     0x7f5e2ea1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34541)[0m     @     0x55d6e2908fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34541)[0m     @     0x55d6e2863b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x55d6e28eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x55d6e28efa20 method_vectorcall
[2m[36m(pid=34541)[0m     @     0x55d6e2863bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x55d6e28eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x55d6e28ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34541)[0m     @     0x55d6e2864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x55d6e28eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x55d6e28ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34541)[0m     @     0x55d6e2864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x55d6e28eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x55d6e28ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34541)[0m     @     0x55d6e2864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34541)[0m     @     0x55d6e28eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34541)[0m     @     0x55d6e28ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34541)[0m     @     0x55d6e2864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x559ddf54bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34507)[0m     @     0x559ddf54c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34507)[0m     @     0x559ddf4c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34507)[0m     @     0x559ddf54bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34507)[0m     @     0x559ddf54c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34507)[0m     @     0x559ddf4c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x7f130f38f4f5 at::Tensor::copy_()
[2m[36m(pid=34556)[0m     @     0x7f131543a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34556)[0m     @     0x55d6c1d88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34556)[0m     @     0x55d6c1ce3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x55d6c1d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34556)[0m     @     0x55d6c1d6fa20 method_vectorcall
[2m[36m(pid=34556)[0m     @     0x55d6c1ce3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x55d6c1d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34556)[0m     @     0x55d6c1d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34556)[0m     @     0x55d6c1ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x55d6c1d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34556)[0m     @     0x55d6c1d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34556)[0m     @     0x55d6c1ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x55d6c1d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34556)[0m     @     0x55d6c1d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34556)[0m     @     0x55d6c1ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34556)[0m     @     0x55d6c1d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34556)[0m     @     0x55d6c1d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34540)[0m     @     0x7f4e323a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34540)[0m     @     0x7f4e323a7388 at::native::copy_impl()
[2m[36m(pid=34447)[0m     @     0x7efdc2f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34447)[0m     @     0x7efdc23e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34447)[0m     @     0x7efdc23e7388 at::native::copy_impl()
[2m[36m(pid=34552)[0m     @     0x7f332738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34552)[0m     @     0x7f332738a388 at::native::copy_impl()
[2m[36m(pid=34552)[0m     @     0x7f332738c5a4 at::native::copy_()
[2m[36m(pid=34449)[0m     @     0x7fb2379f7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34449)[0m     @     0x7fb2379f5388 at::native::copy_impl()
[2m[36m(pid=34449)[0m     @     0x7fb2379f75a4 at::native::copy_()
[2m[36m(pid=34529)[0m     @     0x7f870e963388 at::native::copy_impl()
[2m[36m(pid=34529)[0m     @     0x7f870e9655a4 at::native::copy_()
[2m[36m(pid=34529)[0m     @     0x7f870f0504f5 at::Tensor::copy_()
[2m[36m(pid=34529)[0m     @     0x7f87115238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34455)[0m     @     0x7ed1f05d2d91 at::TensorIterator::for_each()
[2m[36m(pid=34455)[0m     @     0x7ed1f0eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34455)[0m     @     0x7ed1f0ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34455)[0m     @     0x7ed1f037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34455)[0m     @     0x7ed1f0378388 at::native::copy_impl()
[2m[36m(pid=34459)[0m     @     0x7f8a88116d91 at::TensorIterator::for_each()
[2m[36m(pid=34459)[0m     @     0x7f8a889f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34459)[0m     @     0x7f8a88a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34459)[0m     @     0x7f8a87ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34459)[0m     @     0x7f8a87ebc388 at::native::copy_impl()
[2m[36m(pid=34547)[0m     @     0x7fc2aa641ad3 at::TensorIterator::for_each()
[2m[36m(pid=34547)[0m     @     0x7fc2aa641d91 at::TensorIterator::for_each()
[2m[36m(pid=34547)[0m     @     0x7fc2aaf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34547)[0m     @     0x7fc2aaf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34480)[0m     @     0x7ed957f53d91 at::TensorIterator::for_each()
[2m[36m(pid=34480)[0m     @     0x7ed958836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34480)[0m     @     0x7ed958859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34480)[0m     @     0x7ed957cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34480)[0m     @     0x7ed957cf9388 at::native::copy_impl()
[2m[36m(pid=34524)[0m     @     0x7f3c2e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34524)[0m     @     0x7f3c2e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34524)[0m     @     0x7f3c2d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34524)[0m     @     0x7f3c2d81f388 at::native::copy_impl()
[2m[36m(pid=34524)[0m     @     0x7f3c2d8215a4 at::native::copy_()
[2m[36m(pid=34454)[0m     @     0x7f258ced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34454)[0m     @     0x7f258c37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34454)[0m     @     0x7f258c378388 at::native::copy_impl()
[2m[36m(pid=34454)[0m     @     0x7f258c37a5a4 at::native::copy_()
[2m[36m(pid=34484)[0m     @     0x7f7e75610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34484)[0m     @     0x7f7e7560e388 at::native::copy_impl()
[2m[36m(pid=34484)[0m     @     0x7f7e756105a4 at::native::copy_()
[2m[36m(pid=34483)[0m     @     0x7f75f29d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34483)[0m     @     0x7f75f1e75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34483)[0m     @     0x7f75f1e73388 at::native::copy_impl()
[2m[36m(pid=34483)[0m     @     0x7f75f1e755a4 at::native::copy_()
[2m[36m(pid=34476)[0m     @     0x7f41965c1d91 at::TensorIterator::for_each()
[2m[36m(pid=34476)[0m     @     0x7f4196ea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34476)[0m     @     0x7f4196ec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34476)[0m     @     0x7f4196369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34476)[0m     @     0x7f4196367388 at::native::copy_impl()
[2m[36m(pid=34539)[0m     @     0x7f891e1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34539)[0m     @     0x7f891e1d0388 at::native::copy_impl()
[2m[36m(pid=34539)[0m     @     0x7f891e1d25a4 at::native::copy_()
[2m[36m(pid=34532)[0m     @     0x7f4cd4ccf5a4 at::native::copy_()
[2m[36m(pid=34532)[0m     @     0x7f4cd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=34532)[0m     @     0x7f4cd788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34514)[0m     @     0x56042e8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34514)[0m     @     0x56042e8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34514)[0m     @     0x56042e863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x7f69aef18a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34460)[0m     @     0x7f69aef16388 at::native::copy_impl()
[2m[36m(pid=34460)[0m     @     0x7f69aef185a4 at::native::copy_()
[2m[36m(pid=34521)[0m     @     0x7eee76336388 at::native::copy_impl()
[2m[36m(pid=34521)[0m     @     0x7eee763385a4 at::native::copy_()
[2m[36m(pid=34521)[0m     @     0x7eee76a234f5 at::Tensor::copy_()
[2m[36m(pid=34467)[0m     @     0x7fa1b82ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34458)[0m     @     0x7f9048b43c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34458)[0m     @     0x7f9047fe5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34458)[0m     @     0x7f9047fe3388 at::native::copy_impl()
[2m[36m(pid=34458)[0m     @     0x7f9047fe55a4 at::native::copy_()
[2m[36m(pid=34463)[0m     @     0x7f88bcbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34463)[0m     @     0x7f88bcbc8388 at::native::copy_impl()
[2m[36m(pid=34463)[0m     @     0x7f88bcbca5a4 at::native::copy_()
[2m[36m(pid=34474)[0m     @     0x7f3c6a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34474)[0m     @     0x7f3c6a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34474)[0m     @     0x7f3c69be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34474)[0m     @     0x7f3c69bde388 at::native::copy_impl()
[2m[36m(pid=34511)[0m     @     0x7f6270f27d91 at::TensorIterator::for_each()
[2m[36m(pid=34511)[0m     @     0x7f627180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34511)[0m     @     0x7f627182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34511)[0m     @     0x7f6270ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34511)[0m     @     0x7f6270ccd388 at::native::copy_impl()
[2m[36m(pid=34453)[0m     @     0x7fb159d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34453)[0m     @     0x7fb159dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34453)[0m     @     0x7fb15924da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34453)[0m     @     0x7fb15924b388 at::native::copy_impl()
[2m[36m(pid=34566)[0m     @     0x7f7fc2f5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34566)[0m     @     0x7f7fc2f5c388 at::native::copy_impl()
[2m[36m(pid=34566)[0m     @     0x7f7fc2f5e5a4 at::native::copy_()
[2m[36m(pid=34560)[0m     @     0x55c8166af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34560)[0m     @     0x55c816624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34560)[0m     @     0x55c8166aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34560)[0m     @     0x55c8166af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34560)[0m     @     0x55c816624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34560)[0m     @     0x55c8166aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34560)[0m     @     0x55c8166af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34560)[0m     @     0x55c816624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x7f444a3bdd91 at::TensorIterator::for_each()
[2m[36m(pid=34503)[0m     @     0x7f444aca0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34503)[0m     @     0x7f444acc3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34503)[0m     @     0x7f444a165a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34503)[0m     @     0x7f444a163388 at::native::copy_impl()
[2m[36m(pid=34527)[0m     @     0x7fb92cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34527)[0m     @     0x7fb92cede388 at::native::copy_impl()
[2m[36m(pid=34527)[0m     @     0x7fb92cee05a4 at::native::copy_()
[2m[36m(pid=34466)[0m     @     0x7f18412285a4 at::native::copy_()
[2m[36m(pid=34466)[0m     @     0x7f18419134f5 at::Tensor::copy_()
[2m[36m(pid=34466)[0m     @     0x7f1843de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34518)[0m     @     0x7ef08ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34518)[0m     @     0x7ef08ee99388 at::native::copy_impl()
[2m[36m(pid=34518)[0m     @     0x7ef08ee9b5a4 at::native::copy_()
[2m[36m(pid=34462)[0m     @     0x7f7d061ffd91 at::TensorIterator::for_each()
[2m[36m(pid=34462)[0m     @     0x7f7d06ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34462)[0m     @     0x7f7d06b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34462)[0m     @     0x7f7d05fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34462)[0m     @     0x7f7d05fa5388 at::native::copy_impl()
[2m[36m(pid=34562)[0m     @     0x5622d96e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34562)[0m     @     0x5622d96e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34562)[0m     @     0x5622d965d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34562)[0m     @     0x5622d96e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34562)[0m     @     0x5622d96e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34562)[0m     @     0x5622d965d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34562)[0m     @     0x5622d96e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34562)[0m     @     0x5622d96e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34562)[0m     @     0x5622d965d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34562)[0m     @     0x5622d96e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34562)[0m     @     0x5622d96e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34562)[0m     @     0x5622d965d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x7f85ead4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34457)[0m     @     0x7f85eb630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34457)[0m     @     0x7f85eb653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34457)[0m     @     0x7f85eaaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34457)[0m     @     0x7f85eaaf3388 at::native::copy_impl()
[2m[36m(pid=34530)[0m     @     0x7ef57af8ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34530)[0m     @     0x7ef57af89388 at::native::copy_impl()
[2m[36m(pid=34530)[0m     @     0x7ef57af8b5a4 at::native::copy_()
[2m[36m(pid=34464)[0m     @     0x7f943738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34464)[0m     @     0x7f943738a388 at::native::copy_impl()
[2m[36m(pid=34464)[0m     @     0x7f943738c5a4 at::native::copy_()
[2m[36m(pid=34553)[0m     @     0x7ed55a5eb5a4 at::native::copy_()
[2m[36m(pid=34553)[0m     @     0x7ed55acd64f5 at::Tensor::copy_()
[2m[36m(pid=34553)[0m     @     0x7ed55d1a98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34461)[0m     @     0x7f8d27653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34461)[0m     @     0x7f8d26af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34461)[0m     @     0x7f8d26af3388 at::native::copy_impl()
[2m[36m(pid=34461)[0m     @     0x7f8d26af55a4 at::native::copy_()
[2m[36m(pid=34448)[0m     @     0x7f343e814388 at::native::copy_impl()
[2m[36m(pid=34448)[0m     @     0x7f343e8165a4 at::native::copy_()
[2m[36m(pid=34448)[0m     @     0x7f343ef014f5 at::Tensor::copy_()
[2m[36m(pid=34533)[0m     @     0x7ed0858688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34477)[0m     @     0x7fa32b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34477)[0m     @     0x7fa32aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34477)[0m     @     0x7fa32aaf3388 at::native::copy_impl()
[2m[36m(pid=34477)[0m     @     0x7fa32aaf55a4 at::native::copy_()
[2m[36m(pid=34485)[0m     @     0x7f2c112faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34485)[0m     @     0x7f2c112f8388 at::native::copy_impl()
[2m[36m(pid=34485)[0m     @     0x7f2c112fa5a4 at::native::copy_()
[2m[36m(pid=34485)[0m     @     0x7f2c119e54f5 at::Tensor::copy_()
[2m[36m(pid=34502)[0m     @     0x7f795e5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34502)[0m     @     0x7f795e5f8388 at::native::copy_impl()
[2m[36m(pid=34502)[0m     @     0x7f795e5fa5a4 at::native::copy_()
[2m[36m(pid=34502)[0m     @     0x7f795ece54f5 at::Tensor::copy_()
[2m[36m(pid=34450)[0m     @     0x7f16f65b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34450)[0m     @     0x7f16f65d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34450)[0m     @     0x7f16f5a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34450)[0m     @     0x7f16f5a78388 at::native::copy_impl()
[2m[36m(pid=34468)[0m     @     0x7f0369228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34468)[0m     @     0x7f0369226388 at::native::copy_impl()
[2m[36m(pid=34468)[0m     @     0x7f03692285a4 at::native::copy_()
[2m[36m(pid=34555)[0m     @     0x7f6d12d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34555)[0m     @     0x7f6d12d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34555)[0m     @     0x7f6d121d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34555)[0m     @     0x7f6d121d0388 at::native::copy_impl()
[2m[36m(pid=34555)[0m     @     0x7f6d121d25a4 at::native::copy_()
[2m[36m(pid=34570)[0m     @     0x7eed21705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34570)[0m     @     0x7eed21728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34570)[0m     @     0x7eed20bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34570)[0m     @     0x7eed20bc8388 at::native::copy_impl()
[2m[36m(pid=34570)[0m     @     0x7eed20bca5a4 at::native::copy_()
[2m[36m(pid=34546)[0m     @     0x7ee8672025a4 at::native::copy_()
[2m[36m(pid=34546)[0m     @     0x7ee8678ed4f5 at::Tensor::copy_()
[2m[36m(pid=34451)[0m     @     0x7f2a11e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34451)[0m     @     0x7f2a11e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34451)[0m     @     0x7f2a112faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34451)[0m     @     0x7f2a112f8388 at::native::copy_impl()
[2m[36m(pid=34564)[0m     @     0x7efeb928da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34564)[0m     @     0x7efeb928b388 at::native::copy_impl()
[2m[36m(pid=34564)[0m     @     0x7efeb928d5a4 at::native::copy_()
[2m[36m(pid=34519)[0m     @     0x7fc9ee14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34519)[0m     @     0x7fc9ee16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34519)[0m     @     0x7fc9ed610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34519)[0m     @     0x7fc9ed60e388 at::native::copy_impl()
[2m[36m(pid=34520)[0m     @     0x7f3008ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34520)[0m     @     0x7f300837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34520)[0m     @     0x7f3008378388 at::native::copy_impl()
[2m[36m(pid=34446)[0m     @     0x7f6fa7e7aad3 at::TensorIterator::for_each()
[2m[36m(pid=34550)[0m     @     0x7fc5567efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34550)[0m     @     0x7fc555c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34550)[0m     @     0x7fc555c8f388 at::native::copy_impl()
[2m[36m(pid=34452)[0m     @     0x7f833014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34452)[0m     @     0x7f8330148388 at::native::copy_impl()
[2m[36m(pid=34452)[0m     @     0x7f833014a5a4 at::native::copy_()
[2m[36m(pid=34506)[0m     @     0x7f38232b45a4 at::native::copy_()
[2m[36m(pid=34506)[0m     @     0x7f382399f4f5 at::Tensor::copy_()
[2m[36m(pid=34506)[0m     @     0x7f3825e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34544)[0m     @     0x7f4976fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34544)[0m     @     0x7f4976fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=34471)[0m     @     0x7fad51c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34471)[0m     @     0x7fad51c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34471)[0m     @     0x7fad510e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34471)[0m     @     0x7fad510e1388 at::native::copy_impl()
[2m[36m(pid=34471)[0m     @     0x7fad510e35a4 at::native::copy_()
[2m[36m(pid=34549)[0m     @     0x7fbf6d60e388 at::native::copy_impl()
[2m[36m(pid=34549)[0m     @     0x7fbf6d6105a4 at::native::copy_()
[2m[36m(pid=34549)[0m     @     0x7fbf6dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=34549)[0m     @     0x7fbf701ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34545)[0m     @     0x7f4b0a5e54f5 at::Tensor::copy_()
[2m[36m(pid=34545)[0m     @     0x7f4b0cab88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34545)[0m     @     0x7f4b0a5e54f5 at::Tensor::copy_()
[2m[36m(pid=34545)[0m     @     0x7f4b1069079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34545)[0m     @     0x55f015bbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34545)[0m     @     0x55f015b16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34545)[0m     @     0x55f015ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34545)[0m     @     0x55f015ba2a20 method_vectorcall
[2m[36m(pid=34545)[0m     @     0x55f015b16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34545)[0m     @     0x55f015ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34545)[0m     @     0x55f015ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34545)[0m     @     0x55f015b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34545)[0m     @     0x55f015ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34545)[0m     @     0x55f015ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34545)[0m     @     0x55f015b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34545)[0m     @     0x55f015ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34545)[0m     @     0x55f015ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34545)[0m     @     0x55f015b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34545)[0m     @     0x55f015ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34545)[0m     @     0x55f015ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34545)[0m     @     0x55f015b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x7fc3c2957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34475)[0m     @     0x7fc3c2957d91 at::TensorIterator::for_each()
[2m[36m(pid=34475)[0m     @     0x7fc3c323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34523)[0m     @     0x7ee0caa24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34523)[0m     @     0x7ee0caa47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34523)[0m     @     0x7ee0c9ee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34523)[0m     @     0x7ee0c9ee7388 at::native::copy_impl()
[2m[36m(pid=34523)[0m     @     0x7ee0c9ee95a4 at::native::copy_()
[2m[36m(pid=34522)[0m     @     0x7f7e3867dd91 at::TensorIterator::for_each()
[2m[36m(pid=34522)[0m     @     0x7f7e38f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34522)[0m     @     0x7f7e38f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34522)[0m     @     0x7f7e38425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34522)[0m     @     0x7f7e38423388 at::native::copy_impl()
[2m[36m(pid=34522)[0m     @     0x7f7e384255a4 at::native::copy_()
[2m[36m(pid=34528)[0m     @     0x7f5c8436dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34528)[0m     @     0x7f5c8380fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34528)[0m     @     0x7f5c8380d388 at::native::copy_impl()
[2m[36m(pid=34528)[0m     @     0x7f5c8380f5a4 at::native::copy_()
[2m[36m(pid=34554)[0m     @     0x7f6e785008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34509)[0m     @     0x7f7cda6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34509)[0m     @     0x7f7cda6fd388 at::native::copy_impl()
[2m[36m(pid=34509)[0m     @     0x7f7cda6ff5a4 at::native::copy_()
[2m[36m(pid=34509)[0m     @     0x7f7cdadea4f5 at::Tensor::copy_()
[2m[36m(pid=34556)[0m     @     0x55d6c1ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x7f4e323a95a4 at::native::copy_()
[2m[36m(pid=34540)[0m     @     0x7f4e32a944f5 at::Tensor::copy_()
[2m[36m(pid=34540)[0m     @     0x7f4e34f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34447)[0m     @     0x7efdc23e95a4 at::native::copy_()
[2m[36m(pid=34447)[0m     @     0x7efdc2ad44f5 at::Tensor::copy_()
[2m[36m(pid=34447)[0m     @     0x7efdc4fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34552)[0m     @     0x7f3327a774f5 at::Tensor::copy_()
[2m[36m(pid=34552)[0m     @     0x7f3329f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34552)[0m     @     0x7f3327a774f5 at::Tensor::copy_()
[2m[36m(pid=34552)[0m     @     0x7f332db2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34552)[0m     @     0x5615047a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34552)[0m     @     0x561504702b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34552)[0m     @     0x56150478dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34552)[0m     @     0x56150478ea20 method_vectorcall
[2m[36m(pid=34552)[0m     @     0x561504702bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x7fb2380e24f5 at::Tensor::copy_()
[2m[36m(pid=34449)[0m     @     0x7fb23a5b58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34529)[0m     @     0x7f870f0504f5 at::Tensor::copy_()
[2m[36m(pid=34529)[0m     @     0x7f87150fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34529)[0m     @     0x5606fa40ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34529)[0m     @     0x5606fa36ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34529)[0m     @     0x5606fa3f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34529)[0m     @     0x5606fa3f6a20 method_vectorcall
[2m[36m(pid=34529)[0m     @     0x5606fa36abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34529)[0m     @     0x5606fa3f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34529)[0m     @     0x5606fa3f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34529)[0m     @     0x5606fa36b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34529)[0m     @     0x5606fa3f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34529)[0m     @     0x5606fa3f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34529)[0m     @     0x5606fa36b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34529)[0m     @     0x5606fa3f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34529)[0m     @     0x5606fa3f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34529)[0m     @     0x5606fa36b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34529)[0m     @     0x5606fa3f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34529)[0m     @     0x5606fa3f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34529)[0m     @     0x5606fa36b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x7ed1f037a5a4 at::native::copy_()
[2m[36m(pid=34455)[0m     @     0x7ed1f0a654f5 at::Tensor::copy_()
[2m[36m(pid=34459)[0m     @     0x7f8a87ebe5a4 at::native::copy_()
[2m[36m(pid=34459)[0m     @     0x7f8a885a94f5 at::Tensor::copy_()
[2m[36m(pid=34547)[0m     @     0x7fc2aa3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34547)[0m     @     0x7fc2aa3e7388 at::native::copy_impl()
[2m[36m(pid=34547)[0m     @     0x7fc2aa3e95a4 at::native::copy_()
[2m[36m(pid=34480)[0m     @     0x7ed957cfb5a4 at::native::copy_()
[2m[36m(pid=34480)[0m     @     0x7ed9583e64f5 at::Tensor::copy_()
[2m[36m(pid=34524)[0m     @     0x7f3c2df0c4f5 at::Tensor::copy_()
[2m[36m(pid=34524)[0m     @     0x7f3c303df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34454)[0m     @     0x7f258ca654f5 at::Tensor::copy_()
[2m[36m(pid=34454)[0m     @     0x7f258ef388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34454)[0m     @     0x7f258ca654f5 at::Tensor::copy_()
[2m[36m(pid=34454)[0m     @     0x7f2592b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34454)[0m     @     0x55a560609fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34454)[0m     @     0x55a560564b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34454)[0m     @     0x55a5605f0a20 method_vectorcall
[2m[36m(pid=34454)[0m     @     0x55a560564bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34454)[0m     @     0x55a5605f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34454)[0m     @     0x55a560565689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x7f7e75cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34484)[0m     @     0x7f7e781ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34484)[0m     @     0x7f7e75cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34483)[0m     @     0x7f75f25604f5 at::Tensor::copy_()
[2m[36m(pid=34483)[0m     @     0x7f75f4a338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34476)[0m     @     0x7f41963695a4 at::native::copy_()
[2m[36m(pid=34476)[0m     @     0x7f4196a544f5 at::Tensor::copy_()
[2m[36m(pid=34539)[0m     @     0x7f891e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=34539)[0m     @     0x7f8920d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34539)[0m     @     0x7f891e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=34539)[0m     @     0x7f892496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34539)[0m     @     0x55f9bfc70fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34539)[0m     @     0x55f9bfbcbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34539)[0m     @     0x55f9bfc56baf _PyEval_EvalCodeWithName
[2m[36m(pid=34539)[0m     @     0x55f9bfc57a20 method_vectorcall
[2m[36m(pid=34539)[0m     @     0x55f9bfbcbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34539)[0m     @     0x55f9bfc56baf _PyEval_EvalCodeWithName
[2m[36m(pid=34539)[0m     @     0x55f9bfc57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34539)[0m     @     0x55f9bfbcc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34539)[0m     @     0x55f9bfc56baf _PyEval_EvalCodeWithName
[2m[36m(pid=34539)[0m     @     0x55f9bfc57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34539)[0m     @     0x55f9bfbcc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34539)[0m     @     0x55f9bfc56baf _PyEval_EvalCodeWithName
[2m[36m(pid=34539)[0m     @     0x55f9bfc57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34539)[0m     @     0x55f9bfbcc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34539)[0m     @     0x55f9bfc56baf _PyEval_EvalCodeWithName
[2m[36m(pid=34539)[0m     @     0x55f9bfc57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34539)[0m     @     0x55f9bfbcc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x7f4cd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=34532)[0m     @     0x7f4cdb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34532)[0m     @     0x55750d38afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34532)[0m     @     0x55750d2e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x55750d370baf _PyEval_EvalCodeWithName
[2m[36m(pid=34532)[0m     @     0x55750d371a20 method_vectorcall
[2m[36m(pid=34532)[0m     @     0x55750d2e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x55750d370baf _PyEval_EvalCodeWithName
[2m[36m(pid=34532)[0m     @     0x55750d371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34532)[0m     @     0x55750d2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x55750d370baf _PyEval_EvalCodeWithName
[2m[36m(pid=34532)[0m     @     0x55750d371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34532)[0m     @     0x55750d2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x55750d370baf _PyEval_EvalCodeWithName
[2m[36m(pid=34532)[0m     @     0x55750d371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34532)[0m     @     0x55750d2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34532)[0m     @     0x55750d370baf _PyEval_EvalCodeWithName
[2m[36m(pid=34532)[0m     @     0x55750d371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34532)[0m     @     0x55750d2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x7f69af6034f5 at::Tensor::copy_()
[2m[36m(pid=34460)[0m     @     0x7f69b1ad68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34460)[0m     @     0x7f69af6034f5 at::Tensor::copy_()
[2m[36m(pid=34460)[0m     @     0x7f69b56ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34460)[0m     @     0x560e43fdefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34521)[0m     @     0x7eee78ef68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34521)[0m     @     0x7eee76a234f5 at::Tensor::copy_()
[2m[36m(pid=34521)[0m     @     0x7eee7cace79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34521)[0m     @     0x55faaa102fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34521)[0m     @     0x55faaa05db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34521)[0m     @     0x55faaa0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34521)[0m     @     0x55faaa0e9a20 method_vectorcall
[2m[36m(pid=34521)[0m     @     0x55faaa05dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34521)[0m     @     0x55faaa0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34521)[0m     @     0x55faaa0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34521)[0m     @     0x55faaa05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34521)[0m     @     0x55faaa0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34521)[0m     @     0x55faaa0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34521)[0m     @     0x55faaa05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34521)[0m     @     0x55faaa0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34521)[0m     @     0x55faaa0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34521)[0m     @     0x55faaa05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34521)[0m     @     0x55faaa0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34521)[0m     @     0x55faaa0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34521)[0m     @     0x55faaa05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x7fa1b82ffad3 at::TensorIterator::for_each()
[2m[36m(pid=34458)[0m     @     0x7f90486d04f5 at::Tensor::copy_()
[2m[36m(pid=34458)[0m     @     0x7f904aba38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34463)[0m     @     0x7f88bd2b54f5 at::Tensor::copy_()
[2m[36m(pid=34463)[0m     @     0x7f88bf7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34463)[0m     @     0x7f88bd2b54f5 at::Tensor::copy_()
[2m[36m(pid=34474)[0m     @     0x7f3c69be05a4 at::native::copy_()
[2m[36m(pid=34474)[0m     @     0x7f3c6a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=34474)[0m     @     0x7f3c6c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34511)[0m     @     0x7f6270ccf5a4 at::native::copy_()
[2m[36m(pid=34511)[0m     @     0x7f62713ba4f5 at::Tensor::copy_()
[2m[36m(pid=34453)[0m     @     0x7fb15924d5a4 at::native::copy_()
[2m[36m(pid=34453)[0m     @     0x7fb1599384f5 at::Tensor::copy_()
[2m[36m(pid=34453)[0m     @     0x7fb15be0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34566)[0m     @     0x7f7fc36494f5 at::Tensor::copy_()
[2m[36m(pid=34566)[0m     @     0x7f7fc5b1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34566)[0m     @     0x7f7fc36494f5 at::Tensor::copy_()
[2m[36m(pid=34503)[0m     @     0x7f444a1655a4 at::native::copy_()
[2m[36m(pid=34503)[0m     @     0x7f444a8504f5 at::Tensor::copy_()
[2m[36m(pid=34503)[0m     @     0x7f444cd238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34527)[0m     @     0x7fb92d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=34527)[0m     @     0x7fb92fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34527)[0m     @     0x7fb92d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=34527)[0m     @     0x7fb93367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34527)[0m     @     0x55faa0d74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34527)[0m     @     0x55faa0ccfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x7f18419134f5 at::Tensor::copy_()
[2m[36m(pid=34466)[0m     @     0x7f18479be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34466)[0m     @     0x55821ef91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34466)[0m     @     0x55821eeecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x55821ef77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34466)[0m     @     0x55821ef78a20 method_vectorcall
[2m[36m(pid=34466)[0m     @     0x55821eeecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x55821ef77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34466)[0m     @     0x55821ef78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34466)[0m     @     0x55821eeed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x55821ef77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34466)[0m     @     0x55821ef78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34466)[0m     @     0x55821eeed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x55821ef77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34466)[0m     @     0x55821ef78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34466)[0m     @     0x55821eeed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34466)[0m     @     0x55821ef77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34466)[0m     @     0x55821ef78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34466)[0m     @     0x55821eeed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x7ef08f5864f5 at::Tensor::copy_()
[2m[36m(pid=34518)[0m     @     0x7ef091a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34518)[0m     @     0x7ef08f5864f5 at::Tensor::copy_()
[2m[36m(pid=34518)[0m     @     0x7ef09563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34462)[0m     @     0x7f7d05fa75a4 at::native::copy_()
[2m[36m(pid=34462)[0m     @     0x7f7d066924f5 at::Tensor::copy_()
[2m[36m(pid=34462)[0m     @     0x7f7d08b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34457)[0m     @     0x7f85eaaf55a4 at::native::copy_()
[2m[36m(pid=34457)[0m     @     0x7f85eb1e04f5 at::Tensor::copy_()
[2m[36m(pid=34457)[0m     @     0x7f85ed6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34530)[0m     @     0x7ef57b6764f5 at::Tensor::copy_()
[2m[36m(pid=34530)[0m     @     0x7ef57db498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34530)[0m     @     0x7ef57b6764f5 at::Tensor::copy_()
[2m[36m(pid=34464)[0m     @     0x7f9437a774f5 at::Tensor::copy_()
[2m[36m(pid=34464)[0m     @     0x7f9439f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34464)[0m     @     0x7f9437a774f5 at::Tensor::copy_()
[2m[36m(pid=34464)[0m     @     0x7f943db2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34464)[0m     @     0x55aa51083fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34464)[0m     @     0x55aa50fdeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34464)[0m     @     0x55aa51069baf _PyEval_EvalCodeWithName
[2m[36m(pid=34464)[0m     @     0x55aa5106aa20 method_vectorcall
[2m[36m(pid=34464)[0m     @     0x55aa50fdebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34464)[0m     @     0x55aa51069baf _PyEval_EvalCodeWithName
[2m[36m(pid=34464)[0m     @     0x55aa5106a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34464)[0m     @     0x55aa50fdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34464)[0m     @     0x55aa51069baf _PyEval_EvalCodeWithName
[2m[36m(pid=34464)[0m     @     0x55aa5106a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34464)[0m     @     0x55aa50fdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34464)[0m     @     0x55aa51069baf _PyEval_EvalCodeWithName
[2m[36m(pid=34464)[0m     @     0x55aa5106a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34464)[0m     @     0x55aa50fdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34464)[0m     @     0x55aa51069baf _PyEval_EvalCodeWithName
[2m[36m(pid=34464)[0m     @     0x55aa5106a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34464)[0m     @     0x55aa50fdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x7ed55acd64f5 at::Tensor::copy_()
[2m[36m(pid=34553)[0m     @     0x7ed560d8179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34553)[0m     @     0x559056decfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34553)[0m     @     0x559056d47b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x559056dd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34553)[0m     @     0x559056dd3a20 method_vectorcall
[2m[36m(pid=34553)[0m     @     0x559056d47bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x559056dd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34553)[0m     @     0x559056dd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34553)[0m     @     0x559056d48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x559056dd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34553)[0m     @     0x559056dd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34553)[0m     @     0x559056d48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x559056dd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34553)[0m     @     0x559056dd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34553)[0m     @     0x559056d48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34553)[0m     @     0x559056dd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34553)[0m     @     0x559056dd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34553)[0m     @     0x559056d48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x7f8d271e04f5 at::Tensor::copy_()
[2m[36m(pid=34461)[0m     @     0x7f8d296b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34448)[0m     @     0x7f34413d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34448)[0m     @     0x7f343ef014f5 at::Tensor::copy_()
[2m[36m(pid=34448)[0m     @     0x7f3444fac79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34448)[0m     @     0x55f7ff333fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34448)[0m     @     0x55f7ff28eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34448)[0m     @     0x55f7ff319baf _PyEval_EvalCodeWithName
[2m[36m(pid=34448)[0m     @     0x55f7ff31aa20 method_vectorcall
[2m[36m(pid=34448)[0m     @     0x55f7ff28ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34448)[0m     @     0x55f7ff319baf _PyEval_EvalCodeWithName
[2m[36m(pid=34448)[0m     @     0x55f7ff31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34448)[0m     @     0x55f7ff28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34448)[0m     @     0x55f7ff319baf _PyEval_EvalCodeWithName
[2m[36m(pid=34448)[0m     @     0x55f7ff31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34448)[0m     @     0x55f7ff28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34448)[0m     @     0x55f7ff319baf _PyEval_EvalCodeWithName
[2m[36m(pid=34448)[0m     @     0x55f7ff31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34448)[0m     @     0x55f7ff28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34448)[0m     @     0x55f7ff319baf _PyEval_EvalCodeWithName
[2m[36m(pid=34448)[0m     @     0x55f7ff31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34448)[0m     @     0x55f7ff28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x7ed085868ad3 at::TensorIterator::for_each()
[2m[36m(pid=34533)[0m     @     0x7ed085868d91 at::TensorIterator::for_each()
[2m[36m(pid=34477)[0m     @     0x7fa32b1e04f5 at::Tensor::copy_()
[2m[36m(pid=34477)[0m     @     0x7fa32d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34485)[0m     @     0x7f2c13eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34485)[0m     @     0x7f2c119e54f5 at::Tensor::copy_()
[2m[36m(pid=34485)[0m     @     0x7f2c17a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34485)[0m     @     0x55f2a8475fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34485)[0m     @     0x55f2a83d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34485)[0m     @     0x55f2a845bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34485)[0m     @     0x55f2a845ca20 method_vectorcall
[2m[36m(pid=34485)[0m     @     0x55f2a83d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34485)[0m     @     0x55f2a845bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34485)[0m     @     0x55f2a845c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34485)[0m     @     0x55f2a83d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34485)[0m     @     0x55f2a845bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34485)[0m     @     0x55f2a845c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34485)[0m     @     0x55f2a83d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34485)[0m     @     0x55f2a845bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34485)[0m     @     0x55f2a845c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34485)[0m     @     0x55f2a83d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34485)[0m     @     0x55f2a845bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34485)[0m     @     0x55f2a845c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34485)[0m     @     0x55f2a83d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x7f79611b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34502)[0m     @     0x7f795ece54f5 at::Tensor::copy_()
[2m[36m(pid=34502)[0m     @     0x7f7964d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34502)[0m     @     0x56359c743fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34502)[0m     @     0x56359c69eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x56359c729baf _PyEval_EvalCodeWithName
[2m[36m(pid=34502)[0m     @     0x56359c72aa20 method_vectorcall
[2m[36m(pid=34502)[0m     @     0x56359c69ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x56359c729baf _PyEval_EvalCodeWithName
[2m[36m(pid=34502)[0m     @     0x56359c72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34502)[0m     @     0x56359c69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x56359c729baf _PyEval_EvalCodeWithName
[2m[36m(pid=34502)[0m     @     0x56359c72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34502)[0m     @     0x56359c69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x56359c729baf _PyEval_EvalCodeWithName
[2m[36m(pid=34502)[0m     @     0x56359c72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34502)[0m     @     0x56359c69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34502)[0m     @     0x56359c729baf _PyEval_EvalCodeWithName
[2m[36m(pid=34502)[0m     @     0x56359c72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34502)[0m     @     0x56359c69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x7f16f5a7a5a4 at::native::copy_()
[2m[36m(pid=34450)[0m     @     0x7f16f61654f5 at::Tensor::copy_()
[2m[36m(pid=34450)[0m     @     0x7f16f86388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34450)[0m     @     0x7f16f61654f5 at::Tensor::copy_()
[2m[36m(pid=34450)[0m     @     0x7f16fc21079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34450)[0m     @     0x560fe65c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34450)[0m     @     0x560fe651fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x560fe65aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34450)[0m     @     0x560fe65aba20 method_vectorcall
[2m[36m(pid=34450)[0m     @     0x560fe651fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x560fe65aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34450)[0m     @     0x560fe65ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34450)[0m     @     0x560fe6520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x560fe65aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34450)[0m     @     0x560fe65ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34450)[0m     @     0x560fe6520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x7f03699134f5 at::Tensor::copy_()
[2m[36m(pid=34468)[0m     @     0x7f036bde68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34468)[0m     @     0x7f03699134f5 at::Tensor::copy_()
[2m[36m(pid=34468)[0m     @     0x7f036f9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34468)[0m     @     0x5567b61f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34468)[0m     @     0x5567b614fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x5567b61dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34468)[0m     @     0x5567b61dba20 method_vectorcall
[2m[36m(pid=34468)[0m     @     0x5567b614fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x5567b61dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34468)[0m     @     0x5567b61db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34468)[0m     @     0x5567b6150689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x5567b61dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34468)[0m     @     0x5567b61db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34468)[0m     @     0x5567b6150689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x5567b61dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34468)[0m     @     0x5567b61db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34468)[0m     @     0x5567b6150689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34468)[0m     @     0x5567b61dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34468)[0m     @     0x5567b61db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34468)[0m     @     0x5567b6150689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x7f6d128bd4f5 at::Tensor::copy_()
[2m[36m(pid=34555)[0m     @     0x7f6d14d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34555)[0m     @     0x7f6d128bd4f5 at::Tensor::copy_()
[2m[36m(pid=34555)[0m     @     0x7f6d1896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34555)[0m     @     0x561d55ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34555)[0m     @     0x561d55e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x561d55ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=34555)[0m     @     0x561d55eaaa20 method_vectorcall
[2m[36m(pid=34555)[0m     @     0x561d55e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x561d55ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=34555)[0m     @     0x561d55eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34555)[0m     @     0x561d55e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x561d55ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=34555)[0m     @     0x561d55eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34555)[0m     @     0x561d55e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x561d55ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=34555)[0m     @     0x561d55eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34555)[0m     @     0x561d55e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x7eed212b54f5 at::Tensor::copy_()
[2m[36m(pid=34570)[0m     @     0x7eed237888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34570)[0m     @     0x7eed212b54f5 at::Tensor::copy_()
[2m[36m(pid=34570)[0m     @     0x7eed2736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34570)[0m     @     0x558c98f27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34570)[0m     @     0x558c98e82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34570)[0m     @     0x558c98f0ea20 method_vectorcall
[2m[36m(pid=34570)[0m     @     0x558c98e82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34570)[0m     @     0x558c98f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34570)[0m     @     0x558c98e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34570)[0m     @     0x558c98f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34570)[0m     @     0x558c98e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x7ee869dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34546)[0m     @     0x7ee8678ed4f5 at::Tensor::copy_()
[2m[36m(pid=34546)[0m     @     0x7ee86d99879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34546)[0m     @     0x55e329b6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34546)[0m     @     0x55e329ac6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34546)[0m     @     0x55e329b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x55e329b52a20 method_vectorcall
[2m[36m(pid=34546)[0m     @     0x55e329ac6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34546)[0m     @     0x55e329b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x55e329b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34546)[0m     @     0x55e329ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34546)[0m     @     0x55e329b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x55e329b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34546)[0m     @     0x55e329ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34546)[0m     @     0x55e329b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x55e329b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34546)[0m     @     0x55e329ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34546)[0m     @     0x55e329b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=34546)[0m     @     0x55e329b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34546)[0m     @     0x55e329ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x7f2a112fa5a4 at::native::copy_()
[2m[36m(pid=34451)[0m     @     0x7f2a119e54f5 at::Tensor::copy_()
[2m[36m(pid=34451)[0m     @     0x7f2a13eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34451)[0m     @     0x7f2a119e54f5 at::Tensor::copy_()
[2m[36m(pid=34451)[0m     @     0x7f2a17a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34451)[0m     @     0x56310029efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34451)[0m     @     0x5631001f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x563100284baf _PyEval_EvalCodeWithName
[2m[36m(pid=34451)[0m     @     0x563100285a20 method_vectorcall
[2m[36m(pid=34451)[0m     @     0x5631001f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x563100284baf _PyEval_EvalCodeWithName
[2m[36m(pid=34451)[0m     @     0x563100285643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34451)[0m     @     0x5631001fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x563100284baf _PyEval_EvalCodeWithName
[2m[36m(pid=34451)[0m     @     0x563100285643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34564)[0m     @     0x7efeb99784f5 at::Tensor::copy_()
[2m[36m(pid=34564)[0m     @     0x7efebbe4b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34564)[0m     @     0x7efeb99784f5 at::Tensor::copy_()
[2m[36m(pid=34564)[0m     @     0x7efebfa2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34564)[0m     @     0x562e28453fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34564)[0m     @     0x562e283aeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x7fc9ed6105a4 at::native::copy_()
[2m[36m(pid=34519)[0m     @     0x7fc9edcfb4f5 at::Tensor::copy_()
[2m[36m(pid=34519)[0m     @     0x7fc9f01ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34520)[0m     @     0x7f300837a5a4 at::native::copy_()
[2m[36m(pid=34520)[0m     @     0x7f3008a654f5 at::Tensor::copy_()
[2m[36m(pid=34520)[0m     @     0x7f300af388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34520)[0m     @     0x7f3008a654f5 at::Tensor::copy_()
[2m[36m(pid=34446)[0m     @     0x7f6fa7e7ad91 at::TensorIterator::for_each()
[2m[36m(pid=34446)[0m     @     0x7f6fa875db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34446)[0m     @     0x7f6fa8780c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34550)[0m     @     0x7fc555c915a4 at::native::copy_()
[2m[36m(pid=34550)[0m     @     0x7fc55637c4f5 at::Tensor::copy_()
[2m[36m(pid=34550)[0m     @     0x7fc55884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34550)[0m     @     0x7fc55637c4f5 at::Tensor::copy_()
[2m[36m(pid=34452)[0m     @     0x7f83308354f5 at::Tensor::copy_()
[2m[36m(pid=34452)[0m     @     0x7f8332d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34452)[0m     @     0x7f83308354f5 at::Tensor::copy_()
[2m[36m(pid=34452)[0m     @     0x7f83368e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34452)[0m     @     0x559593841fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34452)[0m     @     0x55959379cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x559593827baf _PyEval_EvalCodeWithName
[2m[36m(pid=34452)[0m     @     0x559593828a20 method_vectorcall
[2m[36m(pid=34452)[0m     @     0x55959379cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x559593827baf _PyEval_EvalCodeWithName
[2m[36m(pid=34452)[0m     @     0x559593828643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34452)[0m     @     0x55959379d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x559593827baf _PyEval_EvalCodeWithName
[2m[36m(pid=34452)[0m     @     0x559593828643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34506)[0m     @     0x7f382399f4f5 at::Tensor::copy_()
[2m[36m(pid=34506)[0m     @     0x7f3829a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34506)[0m     @     0x562d4a499fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34506)[0m     @     0x562d4a3f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34506)[0m     @     0x562d4a47fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34506)[0m     @     0x562d4a480a20 method_vectorcall
[2m[36m(pid=34506)[0m     @     0x562d4a3f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34506)[0m     @     0x562d4a47fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34506)[0m     @     0x562d4a480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34506)[0m     @     0x562d4a3f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34506)[0m     @     0x562d4a47fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34506)[0m     @     0x562d4a480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34506)[0m     @     0x562d4a3f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34506)[0m     @     0x562d4a47fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34506)[0m     @     0x562d4a480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34506)[0m     @     0x562d4a3f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34506)[0m     @     0x562d4a47fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34506)[0m     @     0x562d4a480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34506)[0m     @     0x562d4a3f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x7f4976fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=34471)[0m     @     0x7fad517ce4f5 at::Tensor::copy_()
[2m[36m(pid=34471)[0m     @     0x7fad53ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34549)[0m     @     0x7fbf6dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=34549)[0m     @     0x7fbf73da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34549)[0m     @     0x55af6e63dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34549)[0m     @     0x55af6e598b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34549)[0m     @     0x55af6e623baf _PyEval_EvalCodeWithName
[2m[36m(pid=34549)[0m     @     0x55af6e624a20 method_vectorcall
[2m[36m(pid=34549)[0m     @     0x55af6e598bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34549)[0m     @     0x55af6e623baf _PyEval_EvalCodeWithName
[2m[36m(pid=34549)[0m     @     0x55af6e624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34549)[0m     @     0x55af6e599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34549)[0m     @     0x55af6e623baf _PyEval_EvalCodeWithName
[2m[36m(pid=34549)[0m     @     0x55af6e624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34549)[0m     @     0x55af6e599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34549)[0m     @     0x55af6e623baf _PyEval_EvalCodeWithName
[2m[36m(pid=34549)[0m     @     0x55af6e624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34549)[0m     @     0x55af6e599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34549)[0m     @     0x55af6e623baf _PyEval_EvalCodeWithName
[2m[36m(pid=34549)[0m     @     0x55af6e624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34549)[0m     @     0x55af6e599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x7fc3c325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34475)[0m     @     0x7fc3c26ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34475)[0m     @     0x7fc3c26fd388 at::native::copy_impl()
[2m[36m(pid=34523)[0m     @     0x7ee0ca5d44f5 at::Tensor::copy_()
[2m[36m(pid=34523)[0m     @     0x7ee0ccaa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34523)[0m     @     0x7ee0ca5d44f5 at::Tensor::copy_()
[2m[36m(pid=34522)[0m     @     0x7f7e38b104f5 at::Tensor::copy_()
[2m[36m(pid=34522)[0m     @     0x7f7e3afe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34522)[0m     @     0x7f7e38b104f5 at::Tensor::copy_()
[2m[36m(pid=34528)[0m     @     0x7f5c83efa4f5 at::Tensor::copy_()
[2m[36m(pid=34528)[0m     @     0x7f5c863cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34554)[0m     @     0x7f6e78500ad3 at::TensorIterator::for_each()
[2m[36m(pid=34554)[0m     @     0x7f6e78500d91 at::TensorIterator::for_each()
[2m[36m(pid=34509)[0m     @     0x7f7cdd2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34509)[0m     @     0x7f7cdadea4f5 at::Tensor::copy_()
[2m[36m(pid=34509)[0m     @     0x7f7ce0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34509)[0m     @     0x5622ddd09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34509)[0m     @     0x5622ddc64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34509)[0m     @     0x5622ddcefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34509)[0m     @     0x5622ddcf0a20 method_vectorcall
[2m[36m(pid=34509)[0m     @     0x5622ddc64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34509)[0m     @     0x5622ddcefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34509)[0m     @     0x5622ddcf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34509)[0m     @     0x5622ddc65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34509)[0m     @     0x5622ddcefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34509)[0m     @     0x5622ddcf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34509)[0m     @     0x5622ddc65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34509)[0m     @     0x5622ddcefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34509)[0m     @     0x5622ddcf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34509)[0m     @     0x5622ddc65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34509)[0m     @     0x5622ddcefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34509)[0m     @     0x5622ddcf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34509)[0m     @     0x5622ddc65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x7f4e32a944f5 at::Tensor::copy_()
[2m[36m(pid=34540)[0m     @     0x7f4e38b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34540)[0m     @     0x557e3da4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34540)[0m     @     0x557e3d9a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x557e3da33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34540)[0m     @     0x557e3da34a20 method_vectorcall
[2m[36m(pid=34540)[0m     @     0x557e3d9a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x557e3da33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34540)[0m     @     0x557e3da34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34540)[0m     @     0x557e3d9a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x557e3da33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34540)[0m     @     0x557e3da34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34540)[0m     @     0x557e3d9a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x557e3da33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34540)[0m     @     0x557e3da34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34540)[0m     @     0x557e3d9a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34540)[0m     @     0x557e3da33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34540)[0m     @     0x557e3da34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34540)[0m     @     0x557e3d9a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x7efdc2ad44f5 at::Tensor::copy_()
[2m[36m(pid=34447)[0m     @     0x7efdc8b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34447)[0m     @     0x561e88448fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34447)[0m     @     0x561e883a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x561e8842ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34447)[0m     @     0x561e8842fa20 method_vectorcall
[2m[36m(pid=34447)[0m     @     0x561e883a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x561e8842ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34447)[0m     @     0x561e8842f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34447)[0m     @     0x561e883a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x561e8842ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34447)[0m     @     0x561e8842f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34447)[0m     @     0x561e883a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x561e8842ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34447)[0m     @     0x561e8842f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34447)[0m     @     0x561e883a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34447)[0m     @     0x561e8842ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34447)[0m     @     0x561e8842f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34447)[0m     @     0x561e883a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34552)[0m     @     0x56150478dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34552)[0m     @     0x56150478e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34552)[0m     @     0x561504703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34552)[0m     @     0x56150478dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34552)[0m     @     0x56150478e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34552)[0m     @     0x561504703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34552)[0m     @     0x56150478dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34552)[0m     @     0x56150478e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34552)[0m     @     0x561504703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34552)[0m     @     0x56150478dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34552)[0m     @     0x56150478e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34552)[0m     @     0x561504703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x7fb2380e24f5 at::Tensor::copy_()
[2m[36m(pid=34449)[0m     @     0x7fb23e18d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34449)[0m     @     0x55f862bf2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34449)[0m     @     0x55f862b4db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x55f862bd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34449)[0m     @     0x55f862bd9a20 method_vectorcall
[2m[36m(pid=34449)[0m     @     0x55f862b4dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x55f862bd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34449)[0m     @     0x55f862bd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34449)[0m     @     0x55f862b4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x55f862bd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34449)[0m     @     0x55f862bd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34449)[0m     @     0x55f862b4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x55f862bd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34449)[0m     @     0x55f862bd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34449)[0m     @     0x55f862b4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34449)[0m     @     0x55f862bd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34449)[0m     @     0x55f862bd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34449)[0m     @     0x55f862b4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x7ed1f2f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34455)[0m     @     0x7ed1f0a654f5 at::Tensor::copy_()
[2m[36m(pid=34455)[0m     @     0x7ed1f6b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34455)[0m     @     0x5609cda22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34455)[0m     @     0x5609cd97db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x5609cda08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34455)[0m     @     0x5609cda09a20 method_vectorcall
[2m[36m(pid=34455)[0m     @     0x5609cd97dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x5609cda08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34455)[0m     @     0x5609cda09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34455)[0m     @     0x5609cd97e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x5609cda08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34455)[0m     @     0x5609cda09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34455)[0m     @     0x5609cd97e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x5609cda08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34455)[0m     @     0x5609cda09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34455)[0m     @     0x5609cd97e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34455)[0m     @     0x5609cda08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34455)[0m     @     0x5609cda09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34455)[0m     @     0x5609cd97e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x7f8a8aa7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34459)[0m     @     0x7f8a885a94f5 at::Tensor::copy_()
[2m[36m(pid=34459)[0m     @     0x7f8a8e65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34459)[0m     @     0x55ff9c26bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34459)[0m     @     0x55ff9c1c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x55ff9c251baf _PyEval_EvalCodeWithName
[2m[36m(pid=34459)[0m     @     0x55ff9c252a20 method_vectorcall
[2m[36m(pid=34459)[0m     @     0x55ff9c1c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x55ff9c251baf _PyEval_EvalCodeWithName
[2m[36m(pid=34459)[0m     @     0x55ff9c252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34459)[0m     @     0x55ff9c1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x55ff9c251baf _PyEval_EvalCodeWithName
[2m[36m(pid=34459)[0m     @     0x55ff9c252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34459)[0m     @     0x55ff9c1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x55ff9c251baf _PyEval_EvalCodeWithName
[2m[36m(pid=34459)[0m     @     0x55ff9c252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34459)[0m     @     0x55ff9c1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34459)[0m     @     0x55ff9c251baf _PyEval_EvalCodeWithName
[2m[36m(pid=34459)[0m     @     0x55ff9c252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34459)[0m     @     0x55ff9c1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x7fc2aaad44f5 at::Tensor::copy_()
[2m[36m(pid=34547)[0m     @     0x7fc2acfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34547)[0m     @     0x7fc2aaad44f5 at::Tensor::copy_()
[2m[36m(pid=34547)[0m     @     0x7fc2b0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34547)[0m     @     0x559d31d88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34547)[0m     @     0x559d31ce3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x559d31d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34547)[0m     @     0x559d31d6fa20 method_vectorcall
[2m[36m(pid=34547)[0m     @     0x559d31ce3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x559d31d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34547)[0m     @     0x559d31d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34547)[0m     @     0x559d31ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x559d31d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34547)[0m     @     0x559d31d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34547)[0m     @     0x559d31ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x559d31d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34547)[0m     @     0x559d31d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34547)[0m     @     0x559d31ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34547)[0m     @     0x559d31d6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34547)[0m     @     0x559d31d6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34547)[0m     @     0x559d31ce4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x7ed95a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34480)[0m     @     0x7ed9583e64f5 at::Tensor::copy_()
[2m[36m(pid=34480)[0m     @     0x7ed95e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34480)[0m     @     0x55fa1dd0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34480)[0m     @     0x55fa1dc66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x55fa1dcf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34480)[0m     @     0x55fa1dcf2a20 method_vectorcall
[2m[36m(pid=34480)[0m     @     0x55fa1dc66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x55fa1dcf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34480)[0m     @     0x55fa1dcf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34480)[0m     @     0x55fa1dc67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x55fa1dcf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34480)[0m     @     0x55fa1dcf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34480)[0m     @     0x55fa1dc67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x55fa1dcf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34480)[0m     @     0x55fa1dcf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34480)[0m     @     0x55fa1dc67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34480)[0m     @     0x55fa1dcf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34480)[0m     @     0x55fa1dcf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34480)[0m     @     0x55fa1dc67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x7f3c2df0c4f5 at::Tensor::copy_()
[2m[36m(pid=34524)[0m     @     0x7f3c33fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34524)[0m     @     0x55efd2dd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34524)[0m     @     0x55efd2d2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x55efd2db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34524)[0m     @     0x55efd2db7a20 method_vectorcall
[2m[36m(pid=34524)[0m     @     0x55efd2d2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x55efd2db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34524)[0m     @     0x55efd2db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34524)[0m     @     0x55efd2d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x55efd2db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34524)[0m     @     0x55efd2db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34524)[0m     @     0x55efd2d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x55efd2db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34524)[0m     @     0x55efd2db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34524)[0m     @     0x55efd2d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34524)[0m     @     0x55efd2db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34524)[0m     @     0x55efd2db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34524)[0m     @     0x55efd2d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34454)[0m     @     0x55a560565689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34454)[0m     @     0x55a5605f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34454)[0m     @     0x55a560565689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34454)[0m     @     0x55a5605efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34454)[0m     @     0x55a5605f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34454)[0m     @     0x55a560565689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x7f7e7bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34484)[0m     @     0x56149a282fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34484)[0m     @     0x56149a1ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x56149a268baf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x56149a269a20 method_vectorcall
[2m[36m(pid=34484)[0m     @     0x56149a1ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x56149a268baf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x56149a269643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34484)[0m     @     0x56149a1de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x56149a268baf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x56149a269643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34484)[0m     @     0x56149a1de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x56149a268baf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x56149a269643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34484)[0m     @     0x56149a1de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34484)[0m     @     0x56149a268baf _PyEval_EvalCodeWithName
[2m[36m(pid=34484)[0m     @     0x56149a269643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34484)[0m     @     0x56149a1de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x7f75f25604f5 at::Tensor::copy_()
[2m[36m(pid=34483)[0m     @     0x7f75f860b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34483)[0m     @     0x558dd6c45fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34483)[0m     @     0x558dd6ba0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x558dd6c2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34483)[0m     @     0x558dd6c2ca20 method_vectorcall
[2m[36m(pid=34483)[0m     @     0x558dd6ba0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x558dd6c2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34483)[0m     @     0x558dd6c2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34483)[0m     @     0x558dd6ba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x558dd6c2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34483)[0m     @     0x558dd6c2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34483)[0m     @     0x558dd6ba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x558dd6c2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34483)[0m     @     0x558dd6c2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34483)[0m     @     0x558dd6ba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34483)[0m     @     0x558dd6c2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34483)[0m     @     0x558dd6c2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34483)[0m     @     0x558dd6ba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x7f4198f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34476)[0m     @     0x7f4196a544f5 at::Tensor::copy_()
[2m[36m(pid=34476)[0m     @     0x7f419caff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34476)[0m     @     0x556487c24fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34476)[0m     @     0x556487b7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x556487c0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34476)[0m     @     0x556487c0ba20 method_vectorcall
[2m[36m(pid=34476)[0m     @     0x556487b7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x556487c0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43f39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x560e43fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43fc5a20 method_vectorcall
[2m[36m(pid=34460)[0m     @     0x560e43f39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x560e43fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34460)[0m     @     0x560e43f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x560e43fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34460)[0m     @     0x560e43f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x560e43fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34460)[0m     @     0x560e43f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34460)[0m     @     0x560e43fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34460)[0m     @     0x560e43fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34460)[0m     @     0x560e43f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x7fa1b82ffd91 at::TensorIterator::for_each()
[2m[36m(pid=34467)[0m     @     0x7fa1b8be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34467)[0m     @     0x7fa1b8c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34467)[0m     @     0x7fa1b80a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34467)[0m     @     0x7fa1b80a5388 at::native::copy_impl()
[2m[36m(pid=34458)[0m     @     0x7f90486d04f5 at::Tensor::copy_()
[2m[36m(pid=34458)[0m     @     0x7f904e77b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34458)[0m     @     0x55bedb20efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34458)[0m     @     0x55bedb169b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34458)[0m     @     0x55bedb1f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34458)[0m     @     0x55bedb1f5a20 method_vectorcall
[2m[36m(pid=34458)[0m     @     0x55bedb169bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34458)[0m     @     0x55bedb1f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34458)[0m     @     0x55bedb1f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34458)[0m     @     0x55bedb16a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34458)[0m     @     0x55bedb1f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34458)[0m     @     0x55bedb1f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34458)[0m     @     0x55bedb16a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34458)[0m     @     0x55bedb1f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34458)[0m     @     0x55bedb1f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34458)[0m     @     0x55bedb16a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34458)[0m     @     0x55bedb1f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34458)[0m     @     0x55bedb1f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34458)[0m     @     0x55bedb16a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x7f88c336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34463)[0m     @     0x557a2df08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34463)[0m     @     0x557a2de63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x557a2deeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34463)[0m     @     0x557a2deefa20 method_vectorcall
[2m[36m(pid=34463)[0m     @     0x557a2de63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x557a2deeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34463)[0m     @     0x557a2deef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34463)[0m     @     0x557a2de64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x557a2deeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34463)[0m     @     0x557a2deef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34463)[0m     @     0x557a2de64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x557a2deeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34463)[0m     @     0x557a2deef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34463)[0m     @     0x557a2de64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34463)[0m     @     0x557a2deeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34463)[0m     @     0x557a2deef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34463)[0m     @     0x557a2de64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x7f3c6a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=34474)[0m     @     0x7f3c7037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34474)[0m     @     0x55e50d84dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34474)[0m     @     0x55e50d7a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x55e50d833baf _PyEval_EvalCodeWithName
[2m[36m(pid=34474)[0m     @     0x55e50d834a20 method_vectorcall
[2m[36m(pid=34474)[0m     @     0x55e50d7a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x55e50d833baf _PyEval_EvalCodeWithName
[2m[36m(pid=34474)[0m     @     0x55e50d834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34474)[0m     @     0x55e50d7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x55e50d833baf _PyEval_EvalCodeWithName
[2m[36m(pid=34474)[0m     @     0x55e50d834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34474)[0m     @     0x55e50d7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x55e50d833baf _PyEval_EvalCodeWithName
[2m[36m(pid=34474)[0m     @     0x55e50d834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34474)[0m     @     0x55e50d7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34474)[0m     @     0x55e50d833baf _PyEval_EvalCodeWithName
[2m[36m(pid=34474)[0m     @     0x55e50d834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34474)[0m     @     0x55e50d7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x7f627388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34511)[0m     @     0x7f62713ba4f5 at::Tensor::copy_()
[2m[36m(pid=34511)[0m     @     0x7f627746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34511)[0m     @     0x5598512f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34511)[0m     @     0x559851252b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x5598512ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34511)[0m     @     0x5598512dea20 method_vectorcall
[2m[36m(pid=34511)[0m     @     0x559851252bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x5598512ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34511)[0m     @     0x5598512de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34511)[0m     @     0x559851253689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x5598512ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34511)[0m     @     0x5598512de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34511)[0m     @     0x559851253689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x5598512ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34511)[0m     @     0x5598512de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34511)[0m     @     0x559851253689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34511)[0m     @     0x5598512ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34511)[0m     @     0x5598512de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34511)[0m     @     0x559851253689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x7fb1599384f5 at::Tensor::copy_()
[2m[36m(pid=34453)[0m     @     0x7fb15f9e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34453)[0m     @     0x560b4a5a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34453)[0m     @     0x560b4a500b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x560b4a58bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34453)[0m     @     0x560b4a58ca20 method_vectorcall
[2m[36m(pid=34453)[0m     @     0x560b4a500bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x560b4a58bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34453)[0m     @     0x560b4a58c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34453)[0m     @     0x560b4a501689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x560b4a58bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34453)[0m     @     0x560b4a58c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34453)[0m     @     0x560b4a501689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x560b4a58bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34453)[0m     @     0x560b4a58c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34453)[0m     @     0x560b4a501689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34453)[0m     @     0x560b4a58bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34453)[0m     @     0x560b4a58c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34453)[0m     @     0x560b4a501689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x7f7fc96f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34566)[0m     @     0x564a2d5c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34566)[0m     @     0x564a2d522b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x564a2d5adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34566)[0m     @     0x564a2d5aea20 method_vectorcall
[2m[36m(pid=34566)[0m     @     0x564a2d522bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x564a2d5adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34566)[0m     @     0x564a2d5ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34566)[0m     @     0x564a2d523689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x564a2d5adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34566)[0m     @     0x564a2d5ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34566)[0m     @     0x564a2d523689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x564a2d5adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34566)[0m     @     0x564a2d5ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34566)[0m     @     0x564a2d523689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34566)[0m     @     0x564a2d5adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34566)[0m     @     0x564a2d5ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34566)[0m     @     0x564a2d523689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x7f444a8504f5 at::Tensor::copy_()
[2m[36m(pid=34503)[0m     @     0x7f44508fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34503)[0m     @     0x561be7438fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34503)[0m     @     0x561be7393b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x561be741ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x561be741fa20 method_vectorcall
[2m[36m(pid=34503)[0m     @     0x561be7393bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x561be741ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x561be741f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34503)[0m     @     0x561be7394689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x561be741ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x561be741f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34503)[0m     @     0x561be7394689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x561be741ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x561be741f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34503)[0m     @     0x561be7394689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34503)[0m     @     0x561be741ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34503)[0m     @     0x561be741f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34503)[0m     @     0x561be7394689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34527)[0m     @     0x55faa0d5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34527)[0m     @     0x55faa0d5ba20 method_vectorcall
[2m[36m(pid=34527)[0m     @     0x55faa0ccfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34527)[0m     @     0x55faa0d5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34527)[0m     @     0x55faa0d5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34527)[0m     @     0x55faa0cd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34527)[0m     @     0x55faa0d5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34527)[0m     @     0x55faa0d5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34527)[0m     @     0x55faa0cd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34527)[0m     @     0x55faa0d5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34527)[0m     @     0x55faa0d5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34527)[0m     @     0x55faa0cd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34527)[0m     @     0x55faa0d5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34527)[0m     @     0x55faa0d5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34527)[0m     @     0x55faa0cd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad54869fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34518)[0m     @     0x55ad547c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad5484fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34518)[0m     @     0x55ad54850a20 method_vectorcall
[2m[36m(pid=34518)[0m     @     0x55ad547c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad5484fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34518)[0m     @     0x55ad54850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34518)[0m     @     0x55ad547c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad5484fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34518)[0m     @     0x55ad54850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34518)[0m     @     0x55ad547c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad5484fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34518)[0m     @     0x55ad54850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34518)[0m     @     0x55ad547c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34518)[0m     @     0x55ad5484fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34518)[0m     @     0x55ad54850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34518)[0m     @     0x55ad547c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x7f7d066924f5 at::Tensor::copy_()
[2m[36m(pid=34462)[0m     @     0x7f7d0c73d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34462)[0m     @     0x55d965943fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34462)[0m     @     0x55d96589eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x55d965929baf _PyEval_EvalCodeWithName
[2m[36m(pid=34462)[0m     @     0x55d96592aa20 method_vectorcall
[2m[36m(pid=34462)[0m     @     0x55d96589ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x55d965929baf _PyEval_EvalCodeWithName
[2m[36m(pid=34462)[0m     @     0x55d96592a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34462)[0m     @     0x55d96589f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x55d965929baf _PyEval_EvalCodeWithName
[2m[36m(pid=34462)[0m     @     0x55d96592a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34462)[0m     @     0x55d96589f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x55d965929baf _PyEval_EvalCodeWithName
[2m[36m(pid=34462)[0m     @     0x55d96592a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34462)[0m     @     0x55d96589f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34462)[0m     @     0x55d965929baf _PyEval_EvalCodeWithName
[2m[36m(pid=34462)[0m     @     0x55d96592a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34462)[0m     @     0x55d96589f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x7f85eb1e04f5 at::Tensor::copy_()
[2m[36m(pid=34457)[0m     @     0x7f85f128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34457)[0m     @     0x55aba5214fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34457)[0m     @     0x55aba516fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x55aba51fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34457)[0m     @     0x55aba51fba20 method_vectorcall
[2m[36m(pid=34457)[0m     @     0x55aba516fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x55aba51fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34457)[0m     @     0x55aba51fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34457)[0m     @     0x55aba5170689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x55aba51fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34457)[0m     @     0x55aba51fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34457)[0m     @     0x55aba5170689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x55aba51fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34457)[0m     @     0x55aba51fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34457)[0m     @     0x55aba5170689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34457)[0m     @     0x55aba51fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34457)[0m     @     0x55aba51fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34457)[0m     @     0x55aba5170689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x7ef58172179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34530)[0m     @     0x55bb06dbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34530)[0m     @     0x55bb06d16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x55bb06da1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34530)[0m     @     0x55bb06da2a20 method_vectorcall
[2m[36m(pid=34530)[0m     @     0x55bb06d16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x55bb06da1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34530)[0m     @     0x55bb06da2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34530)[0m     @     0x55bb06d17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x55bb06da1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34530)[0m     @     0x55bb06da2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34530)[0m     @     0x55bb06d17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x55bb06da1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34530)[0m     @     0x55bb06da2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34530)[0m     @     0x55bb06d17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34530)[0m     @     0x55bb06da1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34530)[0m     @     0x55bb06da2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34530)[0m     @     0x55bb06d17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x7f8d271e04f5 at::Tensor::copy_()
[2m[36m(pid=34461)[0m     @     0x7f8d2d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34461)[0m     @     0x56412486dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34461)[0m     @     0x5641247c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x564124853baf _PyEval_EvalCodeWithName
[2m[36m(pid=34461)[0m     @     0x564124854a20 method_vectorcall
[2m[36m(pid=34461)[0m     @     0x5641247c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x564124853baf _PyEval_EvalCodeWithName
[2m[36m(pid=34461)[0m     @     0x564124854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34461)[0m     @     0x5641247c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x564124853baf _PyEval_EvalCodeWithName
[2m[36m(pid=34461)[0m     @     0x564124854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34461)[0m     @     0x5641247c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x564124853baf _PyEval_EvalCodeWithName
[2m[36m(pid=34461)[0m     @     0x564124854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34461)[0m     @     0x5641247c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34461)[0m     @     0x564124853baf _PyEval_EvalCodeWithName
[2m[36m(pid=34461)[0m     @     0x564124854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34461)[0m     @     0x5641247c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x7ed08614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34533)[0m     @     0x7ed08616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34533)[0m     @     0x7ed085610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34533)[0m     @     0x7ed08560e388 at::native::copy_impl()
[2m[36m(pid=34533)[0m     @     0x7ed0856105a4 at::native::copy_()
[2m[36m(pid=34477)[0m     @     0x7fa32b1e04f5 at::Tensor::copy_()
[2m[36m(pid=34477)[0m     @     0x7fa33128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34477)[0m     @     0x5570287e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34477)[0m     @     0x557028743b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34477)[0m     @     0x5570287cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34477)[0m     @     0x5570287cfa20 method_vectorcall
[2m[36m(pid=34477)[0m     @     0x557028743bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34477)[0m     @     0x5570287cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34477)[0m     @     0x5570287cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34477)[0m     @     0x557028744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34477)[0m     @     0x5570287cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34477)[0m     @     0x5570287cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34477)[0m     @     0x557028744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34477)[0m     @     0x5570287cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34477)[0m     @     0x5570287cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34477)[0m     @     0x557028744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34477)[0m     @     0x5570287cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34477)[0m     @     0x5570287cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34477)[0m     @     0x557028744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x560fe65aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34450)[0m     @     0x560fe65ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34450)[0m     @     0x560fe6520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34450)[0m     @     0x560fe65aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34450)[0m     @     0x560fe65ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34450)[0m     @     0x560fe6520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34555)[0m     @     0x561d55ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=34555)[0m     @     0x561d55eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34555)[0m     @     0x561d55e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34570)[0m     @     0x558c98e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34570)[0m     @     0x558c98f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34570)[0m     @     0x558c98f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34570)[0m     @     0x558c98e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x5631001fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x563100284baf _PyEval_EvalCodeWithName
[2m[36m(pid=34451)[0m     @     0x563100285643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34451)[0m     @     0x5631001fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34451)[0m     @     0x563100284baf _PyEval_EvalCodeWithName
[2m[36m(pid=34451)[0m     @     0x563100285643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34451)[0m     @     0x5631001fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34564)[0m     @     0x562e28439baf _PyEval_EvalCodeWithName
[2m[36m(pid=34564)[0m     @     0x562e2843aa20 method_vectorcall
[2m[36m(pid=34564)[0m     @     0x562e283aebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34564)[0m     @     0x562e28439baf _PyEval_EvalCodeWithName
[2m[36m(pid=34564)[0m     @     0x562e2843a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34564)[0m     @     0x562e283af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34564)[0m     @     0x562e28439baf _PyEval_EvalCodeWithName
[2m[36m(pid=34564)[0m     @     0x562e2843a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34564)[0m     @     0x562e283af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34564)[0m     @     0x562e28439baf _PyEval_EvalCodeWithName
[2m[36m(pid=34564)[0m     @     0x562e2843a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34564)[0m     @     0x562e283af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34564)[0m     @     0x562e28439baf _PyEval_EvalCodeWithName
[2m[36m(pid=34564)[0m     @     0x562e2843a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34564)[0m     @     0x562e283af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x7fc9edcfb4f5 at::Tensor::copy_()
[2m[36m(pid=34519)[0m     @     0x7fc9f3da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34519)[0m     @     0x55717c46ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34519)[0m     @     0x55717c3cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x55717c455baf _PyEval_EvalCodeWithName
[2m[36m(pid=34519)[0m     @     0x55717c456a20 method_vectorcall
[2m[36m(pid=34519)[0m     @     0x55717c3cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x55717c455baf _PyEval_EvalCodeWithName
[2m[36m(pid=34519)[0m     @     0x55717c456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34519)[0m     @     0x55717c3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x55717c455baf _PyEval_EvalCodeWithName
[2m[36m(pid=34519)[0m     @     0x55717c456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34519)[0m     @     0x55717c3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x55717c455baf _PyEval_EvalCodeWithName
[2m[36m(pid=34519)[0m     @     0x55717c456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34519)[0m     @     0x55717c3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34519)[0m     @     0x55717c455baf _PyEval_EvalCodeWithName
[2m[36m(pid=34519)[0m     @     0x55717c456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34519)[0m     @     0x55717c3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x7f300eb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34520)[0m     @     0x55a6ebcbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34520)[0m     @     0x55a6ebc1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x55a6ebca5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34520)[0m     @     0x55a6ebca6a20 method_vectorcall
[2m[36m(pid=34520)[0m     @     0x55a6ebc1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x55a6ebca5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34520)[0m     @     0x55a6ebca6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34520)[0m     @     0x55a6ebc1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x55a6ebca5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34520)[0m     @     0x55a6ebca6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34520)[0m     @     0x55a6ebc1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x55a6ebca5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34520)[0m     @     0x55a6ebca6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34520)[0m     @     0x55a6ebc1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34520)[0m     @     0x55a6ebca5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34520)[0m     @     0x55a6ebca6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34520)[0m     @     0x55a6ebc1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x7f6fa7c22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34446)[0m     @     0x7f6fa7c20388 at::native::copy_impl()
[2m[36m(pid=34550)[0m     @     0x7fc55c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34550)[0m     @     0x55fa3c236fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34550)[0m     @     0x55fa3c191b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34550)[0m     @     0x55fa3c21cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34550)[0m     @     0x55fa3c21da20 method_vectorcall
[2m[36m(pid=34550)[0m     @     0x55fa3c191bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34550)[0m     @     0x55fa3c21cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34550)[0m     @     0x55fa3c21d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34550)[0m     @     0x55fa3c192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34550)[0m     @     0x55fa3c21cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34550)[0m     @     0x55fa3c21d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34550)[0m     @     0x55fa3c192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34550)[0m     @     0x55fa3c21cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34550)[0m     @     0x55fa3c21d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34550)[0m     @     0x55fa3c192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34550)[0m     @     0x55fa3c21cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34550)[0m     @     0x55fa3c21d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34550)[0m     @     0x55fa3c192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x55959379d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x559593827baf _PyEval_EvalCodeWithName
[2m[36m(pid=34452)[0m     @     0x559593828643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34452)[0m     @     0x55959379d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34452)[0m     @     0x559593827baf _PyEval_EvalCodeWithName
[2m[36m(pid=34452)[0m     @     0x559593828643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34452)[0m     @     0x55959379d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x7f49778c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34544)[0m     @     0x7f49778e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34544)[0m     @     0x7f4976d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34544)[0m     @     0x7f4976d85388 at::native::copy_impl()
[2m[36m(pid=34544)[0m     @     0x7f4976d875a4 at::native::copy_()
[2m[36m(pid=34471)[0m     @     0x7fad517ce4f5 at::Tensor::copy_()
[2m[36m(pid=34471)[0m     @     0x7fad5787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34471)[0m     @     0x55d8aaf46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34471)[0m     @     0x55d8aaea1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34471)[0m     @     0x55d8aaf2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34471)[0m     @     0x55d8aaf2da20 method_vectorcall
[2m[36m(pid=34471)[0m     @     0x55d8aaea1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34471)[0m     @     0x55d8aaf2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34471)[0m     @     0x55d8aaf2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34471)[0m     @     0x55d8aaea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34471)[0m     @     0x55d8aaf2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34471)[0m     @     0x55d8aaf2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34471)[0m     @     0x55d8aaea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34471)[0m     @     0x55d8aaf2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34471)[0m     @     0x55d8aaf2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34471)[0m     @     0x55d8aaea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34471)[0m     @     0x55d8aaf2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34471)[0m     @     0x55d8aaf2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34471)[0m     @     0x55d8aaea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x7fc3c26ff5a4 at::native::copy_()
[2m[36m(pid=34475)[0m     @     0x7fc3c2dea4f5 at::Tensor::copy_()
[2m[36m(pid=34475)[0m     @     0x7fc3c52bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34523)[0m     @     0x7ee0d047779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34523)[0m     @     0x55d2fd869fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34523)[0m     @     0x55d2fd7c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34523)[0m     @     0x55d2fd84fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34523)[0m     @     0x55d2fd850a20 method_vectorcall
[2m[36m(pid=34523)[0m     @     0x55d2fd7c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34523)[0m     @     0x55d2fd84fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34523)[0m     @     0x55d2fd850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34523)[0m     @     0x55d2fd7c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34523)[0m     @     0x55d2fd84fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34523)[0m     @     0x55d2fd850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34523)[0m     @     0x55d2fd7c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34523)[0m     @     0x55d2fd84fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34523)[0m     @     0x55d2fd850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34523)[0m     @     0x55d2fd7c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34523)[0m     @     0x55d2fd84fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34523)[0m     @     0x55d2fd850643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34523)[0m     @     0x55d2fd7c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x7f7e3ebbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34522)[0m     @     0x55656e68bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34522)[0m     @     0x55656e5e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x55656e671baf _PyEval_EvalCodeWithName
[2m[36m(pid=34522)[0m     @     0x55656e672a20 method_vectorcall
[2m[36m(pid=34522)[0m     @     0x55656e5e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x55656e671baf _PyEval_EvalCodeWithName
[2m[36m(pid=34522)[0m     @     0x55656e672643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34522)[0m     @     0x55656e5e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x55656e671baf _PyEval_EvalCodeWithName
[2m[36m(pid=34522)[0m     @     0x55656e672643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34522)[0m     @     0x55656e5e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x55656e671baf _PyEval_EvalCodeWithName
[2m[36m(pid=34522)[0m     @     0x55656e672643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34522)[0m     @     0x55656e5e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34522)[0m     @     0x55656e671baf _PyEval_EvalCodeWithName
[2m[36m(pid=34522)[0m     @     0x55656e672643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34522)[0m     @     0x55656e5e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x7f5c83efa4f5 at::Tensor::copy_()
[2m[36m(pid=34528)[0m     @     0x7f5c89fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34528)[0m     @     0x56274fb40fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34528)[0m     @     0x56274fa9bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x56274fb26baf _PyEval_EvalCodeWithName
[2m[36m(pid=34528)[0m     @     0x56274fb27a20 method_vectorcall
[2m[36m(pid=34528)[0m     @     0x56274fa9bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x56274fb26baf _PyEval_EvalCodeWithName
[2m[36m(pid=34528)[0m     @     0x56274fb27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34528)[0m     @     0x56274fa9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x56274fb26baf _PyEval_EvalCodeWithName
[2m[36m(pid=34528)[0m     @     0x56274fb27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34528)[0m     @     0x56274fa9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x56274fb26baf _PyEval_EvalCodeWithName
[2m[36m(pid=34528)[0m     @     0x56274fb27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34528)[0m     @     0x56274fa9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34528)[0m     @     0x56274fb26baf _PyEval_EvalCodeWithName
[2m[36m(pid=34528)[0m     @     0x56274fb27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34528)[0m     @     0x56274fa9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x7f6e78de3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34554)[0m     @     0x7f6e78e06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34554)[0m     @     0x7f6e782a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34554)[0m     @     0x7f6e782a6388 at::native::copy_impl()
[2m[36m(pid=34554)[0m     @     0x7f6e782a85a4 at::native::copy_()
[2m[36m(pid=34476)[0m     @     0x556487c0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34476)[0m     @     0x556487b80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x556487c0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34476)[0m     @     0x556487c0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34476)[0m     @     0x556487b80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x556487c0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34476)[0m     @     0x556487c0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34476)[0m     @     0x556487b80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34476)[0m     @     0x556487c0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34476)[0m     @     0x556487c0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34476)[0m     @     0x556487b80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x7fa1b80a75a4 at::native::copy_()
[2m[36m(pid=34467)[0m     @     0x7fa1b87924f5 at::Tensor::copy_()
[2m[36m(pid=34533)[0m     @     0x7ed085cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34533)[0m     @     0x7ed0881ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34533)[0m     @     0x7ed085cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34533)[0m     @     0x7ed08bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34533)[0m     @     0x560e5dd34fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34533)[0m     @     0x560e5dc8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x7f6fa7c225a4 at::native::copy_()
[2m[36m(pid=34446)[0m     @     0x7f6fa830d4f5 at::Tensor::copy_()
[2m[36m(pid=34446)[0m     @     0x7f6faa7e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34544)[0m     @     0x7f49774724f5 at::Tensor::copy_()
[2m[36m(pid=34544)[0m     @     0x7f49799458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34475)[0m     @     0x7fc3c2dea4f5 at::Tensor::copy_()
[2m[36m(pid=34475)[0m     @     0x7fc3c8e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34475)[0m     @     0x560b3c91bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34475)[0m     @     0x560b3c876b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x560b3c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34475)[0m     @     0x560b3c902a20 method_vectorcall
[2m[36m(pid=34475)[0m     @     0x560b3c876bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x560b3c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34475)[0m     @     0x560b3c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34475)[0m     @     0x560b3c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x560b3c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34475)[0m     @     0x560b3c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34475)[0m     @     0x560b3c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x560b3c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34475)[0m     @     0x560b3c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34475)[0m     @     0x560b3c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34475)[0m     @     0x560b3c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34475)[0m     @     0x560b3c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34475)[0m     @     0x560b3c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x7f6e789934f5 at::Tensor::copy_()
[2m[36m(pid=34554)[0m     @     0x7f6e7ae668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34554)[0m     @     0x7f6e789934f5 at::Tensor::copy_()
[2m[36m(pid=34467)[0m     @     0x7fa1bac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34467)[0m     @     0x7fa1b87924f5 at::Tensor::copy_()
[2m[36m(pid=34467)[0m     @     0x7fa1be83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34467)[0m     @     0x558de0af4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34467)[0m     @     0x558de0a4fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x558de0adabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34467)[0m     @     0x558de0adba20 method_vectorcall
[2m[36m(pid=34467)[0m     @     0x558de0a4fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x558de0adabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34467)[0m     @     0x558de0adb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34467)[0m     @     0x558de0a50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x558de0adabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34467)[0m     @     0x558de0adb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34467)[0m     @     0x558de0a50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x558de0adabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34467)[0m     @     0x558de0adb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34467)[0m     @     0x558de0a50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34467)[0m     @     0x558de0adabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34467)[0m     @     0x558de0adb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34467)[0m     @     0x558de0a50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x560e5dd1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34533)[0m     @     0x560e5dd1ba20 method_vectorcall
[2m[36m(pid=34533)[0m     @     0x560e5dc8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x560e5dd1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34533)[0m     @     0x560e5dd1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34533)[0m     @     0x560e5dc90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x560e5dd1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34533)[0m     @     0x560e5dd1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34533)[0m     @     0x560e5dc90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x560e5dd1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34533)[0m     @     0x560e5dd1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34533)[0m     @     0x560e5dc90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34533)[0m     @     0x560e5dd1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=34533)[0m     @     0x560e5dd1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34533)[0m     @     0x560e5dc90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x7f6fa830d4f5 at::Tensor::copy_()
[2m[36m(pid=34446)[0m     @     0x7f6fae3b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34446)[0m     @     0x5562ac76efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34446)[0m     @     0x5562ac6c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x5562ac754baf _PyEval_EvalCodeWithName
[2m[36m(pid=34446)[0m     @     0x5562ac755a20 method_vectorcall
[2m[36m(pid=34446)[0m     @     0x5562ac6c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x5562ac754baf _PyEval_EvalCodeWithName
[2m[36m(pid=34446)[0m     @     0x5562ac755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34446)[0m     @     0x5562ac6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x5562ac754baf _PyEval_EvalCodeWithName
[2m[36m(pid=34446)[0m     @     0x5562ac755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34446)[0m     @     0x5562ac6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x5562ac754baf _PyEval_EvalCodeWithName
[2m[36m(pid=34446)[0m     @     0x5562ac755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34446)[0m     @     0x5562ac6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34446)[0m     @     0x5562ac754baf _PyEval_EvalCodeWithName
[2m[36m(pid=34446)[0m     @     0x5562ac755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34446)[0m     @     0x5562ac6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x7f49774724f5 at::Tensor::copy_()
[2m[36m(pid=34544)[0m     @     0x7f497d51d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34544)[0m     @     0x55f61942cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34544)[0m     @     0x55f619387b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x55f619412baf _PyEval_EvalCodeWithName
[2m[36m(pid=34544)[0m     @     0x55f619413a20 method_vectorcall
[2m[36m(pid=34544)[0m     @     0x55f619387bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x55f619412baf _PyEval_EvalCodeWithName
[2m[36m(pid=34544)[0m     @     0x55f619413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34544)[0m     @     0x55f619388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x55f619412baf _PyEval_EvalCodeWithName
[2m[36m(pid=34544)[0m     @     0x55f619413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34544)[0m     @     0x55f619388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x55f619412baf _PyEval_EvalCodeWithName
[2m[36m(pid=34544)[0m     @     0x55f619413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34544)[0m     @     0x55f619388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34544)[0m     @     0x55f619412baf _PyEval_EvalCodeWithName
[2m[36m(pid=34544)[0m     @     0x55f619413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34544)[0m     @     0x55f619388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x7f6e7ea3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34554)[0m     @     0x55c04e273fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34554)[0m     @     0x55c04e1ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x55c04e259baf _PyEval_EvalCodeWithName
[2m[36m(pid=34554)[0m     @     0x55c04e25aa20 method_vectorcall
[2m[36m(pid=34554)[0m     @     0x55c04e1cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x55c04e259baf _PyEval_EvalCodeWithName
[2m[36m(pid=34554)[0m     @     0x55c04e25a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34554)[0m     @     0x55c04e1cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x55c04e259baf _PyEval_EvalCodeWithName
[2m[36m(pid=34554)[0m     @     0x55c04e25a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34554)[0m     @     0x55c04e1cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x55c04e259baf _PyEval_EvalCodeWithName
[2m[36m(pid=34554)[0m     @     0x55c04e25a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34554)[0m     @     0x55c04e1cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34554)[0m     @     0x55c04e259baf _PyEval_EvalCodeWithName
[2m[36m(pid=34554)[0m     @     0x55c04e25a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34554)[0m     @     0x55c04e1cf689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:06:25,970	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:06:25,998	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:06:25,999	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:06:25,999	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:06:25,999	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:06:26,019	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:06:26,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:06:26,030	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:06:26,031	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:06:26,051	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:06:26,051	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:06:26,054	ERROR trial_runner.py:567 -- Trial PPO_jss_env_8c57e_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=34568, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 20.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c57e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8c57e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8c57e_00000_0_2020-11-05_10-06-18/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
[2m[36m(pid=34568)[0m E1105 10:06:26.048283 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}

[2m[36m(pid=34568)[0m E1105 10:06:26.048418 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.048475 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.048625 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.048743 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.048810 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.048866 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.048974 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049086 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.049144 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049249 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8b485cbbeaa005a559d91ef301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
2020-11-05 10:06:26,062	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff7ef9157101000000.
[2m[36m(pid=34568)[0m E1105 10:06:26.049304 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4db1cba171d56c3356c9ec1501000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
2020-11-05 10:06:26,063	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.
[2m[36m(pid=34568)[0m E1105 10:06:26.049355 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ca546fa1af7e507159d91ef301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049455 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=5cf29c5b7b7ed08d56c9ec1501000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049553 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.049616 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049716 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.049783 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.049888 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.049944 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.0== Status ==
Memory usage on this node: 20.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c57e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8c57e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8c57e_00000_0_2020-11-05_10-06-18/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
50058 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050107 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050204 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1f6f5417a7b065f9091d563401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050256 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e76b5820fbdeb0f2091d563401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050357 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=efaf5dbfabc208739f3cc57a01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050426 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=b3b45bae970c41729f3cc57a01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050531 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=37f0cff2c5fdc1c790aded9101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050586 34568 35650 task_manager.cc:323] Task f
ailed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ff02fc67a478da9090aded9101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050680 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=bf6cd9795b8b23124e242e9f01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050729 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c5da4173a1c517cf4e242e9f01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050827 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.050880 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=34568)[0m E1105 10:06:26.050979 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9ecf84e34eb8e61dc2621d1401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=34568)[0m E1105 10:06:26.051035 34568 35650 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f3cba62d4c01820bc2621d1401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:06:25.967126 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:25.986599 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:25.987879 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:25.993906 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:25.995369 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.012833 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.014303 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.014788 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.016731 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.018128 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.018208 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.018252 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.018616 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.020604 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.023252 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:06:26.040598 34405 34405 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_8c57e_00000])
