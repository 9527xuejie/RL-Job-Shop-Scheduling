2020-11-05 10:36:26,900	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c2e3e_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=27047)[0m 2020-11-05 10:36:29,738	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=27047)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=27047)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=27047)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=27047)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=27047)[0m 
[2m[36m(pid=27047)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=27045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27045)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27039)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27043)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27070)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27070)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27070)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27044)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27019)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27074)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27074)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27074)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27077)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27077)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27077)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27029)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27021)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27021)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27021)[0m *** SIGSEGV (@0x0) received by PID 27021 (TID 0x7fbf5dcfd700) from PID 0; stack trace: ***
[2m[36m(pid=27028)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27028)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27028)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27028)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27028)[0m *** SIGSEGV (@0x0) received by PID 27028 (TID 0x7f04529e7700) from PID 0; stack trace: ***
[2m[36m(pid=27028)[0m     @     0x7f04525c0390 (unknown)
[2m[36m(pid=27042)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27042)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27042)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27042)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27042)[0m *** SIGSEGV (@0x0) received by PID 27042 (TID 0x7f7f5d8cf700) from PID 0; stack trace: ***
[2m[36m(pid=27042)[0m     @     0x7f7f5d4a8390 (unknown)
[2m[36m(pid=27048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27048)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27048)[0m *** SIGSEGV (@0x0) received by PID 27048 (TID 0x7fbe66fc3700) from PID 0; stack trace: ***
[2m[36m(pid=27048)[0m     @     0x7fbe66b9c390 (unknown)
[2m[36m(pid=27061)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27061)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27061)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27061)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27061)[0m *** SIGSEGV (@0x0) received by PID 27061 (TID 0x7f2ad4551700) from PID 0; stack trace: ***
[2m[36m(pid=27061)[0m     @     0x7f2ad412a390 (unknown)
[2m[36m(pid=27051)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27051)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27051)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27051)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27051)[0m *** SIGSEGV (@0x0) received by PID 27051 (TID 0x7fcc0361b700) from PID 0; stack trace: ***
[2m[36m(pid=27051)[0m     @     0x7fcc031f4390 (unknown)
[2m[36m(pid=27059)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27059)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27059)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27059)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27059)[0m *** SIGSEGV (@0x0) received by PID 27059 (TID 0x7fd511433700) from PID 0; stack trace: ***
[2m[36m(pid=27059)[0m     @     0x7fd51100c390 (unknown)
[2m[36m(pid=27064)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27064)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27064)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27064)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27064)[0m *** SIGSEGV (@0x0) received by PID 27064 (TID 0x7fbecadfe700) from PID 0; stack trace: ***
[2m[36m(pid=27064)[0m     @     0x7fbeca9d7390 (unknown)
[2m[36m(pid=27064)[0m     @     0x7f8fca7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27041)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27041)[0m *** SIGSEGV (@0x0) received by PID 27041 (TID 0x7f952ec6b700) from PID 0; stack trace: ***
[2m[36m(pid=27041)[0m     @     0x7f952e844390 (unknown)
[2m[36m(pid=27041)[0m     @     0x7f662e7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27041)[0m     @     0x7f662dee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27045)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27045)[0m *** SIGSEGV (@0x0) received by PID 27045 (TID 0x7fbbbc055700) from PID 0; stack trace: ***
[2m[36m(pid=27045)[0m     @     0x7fbbbbc2e390 (unknown)
[2m[36m(pid=27039)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27039)[0m *** SIGSEGV (@0x0) received by PID 27039 (TID 0x7f7902ef9700) from PID 0; stack trace: ***
[2m[36m(pid=27043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27043)[0m *** SIGSEGV (@0x0) received by PID 27043 (TID 0x7f1c51b78700) from PID 0; stack trace: ***
[2m[36m(pid=27070)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27070)[0m *** SIGSEGV (@0x0) received by PID 27070 (TID 0x7fbb8dba7700) from PID 0; stack trace: ***
[2m[36m(pid=27044)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27044)[0m *** SIGSEGV (@0x0) received by PID 27044 (TID 0x7fb83b137700) from PID 0; stack trace: ***
[2m[36m(pid=27019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27019)[0m *** SIGSEGV (@0x0) received by PID 27019 (TID 0x7f007d13e700) from PID 0; stack trace: ***
[2m[36m(pid=27019)[0m     @     0x7f007cd17390 (unknown)
[2m[36m(pid=27019)[0m     @     0x7ed17cbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27074)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27074)[0m *** SIGSEGV (@0x0) received by PID 27074 (TID 0x7fcb4b0e7700) from PID 0; stack trace: ***
[2m[36m(pid=27074)[0m     @     0x7fcb4acc0390 (unknown)
[2m[36m(pid=27077)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27077)[0m *** SIGSEGV (@0x0) received by PID 27077 (TID 0x7f182ea22700) from PID 0; stack trace: ***
[2m[36m(pid=27077)[0m     @     0x7f182e5fb390 (unknown)
[2m[36m(pid=27029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27029)[0m *** SIGSEGV (@0x0) received by PID 27029 (TID 0x7f1b73d23700) from PID 0; stack trace: ***
[2m[36m(pid=27029)[0m     @     0x7f1b738fc390 (unknown)
[2m[36m(pid=27029)[0m     @     0x7eec73751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27021)[0m     @     0x7fbf5d8d6390 (unknown)
[2m[36m(pid=27021)[0m     @     0x7f905d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27028)[0m     @     0x7ed5524f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27028)[0m     @     0x7ed551c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27042)[0m     @     0x7f505d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27042)[0m     @     0x7f505caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27048)[0m     @     0x7f8f66ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27048)[0m     @     0x7f8f661fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27061)[0m     @     0x7efbd401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27061)[0m     @     0x7efbd37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27051)[0m     @     0x7f9d03124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27051)[0m     @     0x7f9d0284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27059)[0m     @     0x7fa610ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27059)[0m     @     0x7fa6105cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27059)[0m     @     0x7fa6105d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27064)[0m     @     0x7f8fc9ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27064)[0m     @     0x7f8fc9ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27041)[0m     @     0x7f662dee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27041)[0m     @     0x7f662dee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=27045)[0m     @     0x7f8cbbaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27045)[0m     @     0x7f8cbb2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27045)[0m     @     0x7f8cbb2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27039)[0m     @     0x7f7902ad2390 (unknown)
[2m[36m(pid=27039)[0m     @     0x7f4a02a64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27039)[0m     @     0x7f4a0218f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27043)[0m     @     0x7f1c51751390 (unknown)
[2m[36m(pid=27043)[0m     @     0x7eed516f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27043)[0m     @     0x7eed50e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27070)[0m     @     0x7fbb8d780390 (unknown)
[2m[36m(pid=27070)[0m     @     0x7f8c8d6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27070)[0m     @     0x7f8c8ce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27044)[0m     @     0x7fb83ad10390 (unknown)
[2m[36m(pid=27044)[0m     @     0x7f893ac75f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27044)[0m     @     0x7f893a3a07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27019)[0m     @     0x7ed17c2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27019)[0m     @     0x7ed17c2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27074)[0m     @     0x7f9c4ac6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27074)[0m     @     0x7f9c4a3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27074)[0m     @     0x7f9c4a3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27077)[0m     @     0x7ee92e577f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27077)[0m     @     0x7ee92dca27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27029)[0m     @     0x7eec72e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27029)[0m     @     0x7eec72e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27021)[0m     @     0x7f905cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27021)[0m     @     0x7f905cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27028)[0m     @     0x7ed551c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27028)[0m     @     0x7ed551c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=27042)[0m     @     0x7f505cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27042)[0m     @     0x7f505cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=27048)[0m     @     0x7f8f661ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27048)[0m     @     0x7f8f661ffad3 at::TensorIterator::for_each()
[2m[36m(pid=27061)[0m     @     0x7efbd374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27061)[0m     @     0x7efbd374aad3 at::TensorIterator::for_each()
[2m[36m(pid=27051)[0m     @     0x7f9d028528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27051)[0m     @     0x7f9d02852ad3 at::TensorIterator::for_each()
[2m[36m(pid=27059)[0m     @     0x7fa6105d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=27064)[0m     @     0x7f8fc9ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=27041)[0m     @     0x7f662dee9d91 at::TensorIterator::for_each()
[2m[36m(pid=27041)[0m     @     0x7f662e7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27041)[0m     @     0x7f662e7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27045)[0m     @     0x7f8cbb223ad3 at::TensorIterator::for_each()
[2m[36m(pid=27039)[0m     @     0x7f4a021928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27043)[0m     @     0x7eed50e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27070)[0m     @     0x7f8c8ce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27044)[0m     @     0x7f893a3a38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27019)[0m     @     0x7ed17c2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=27074)[0m     @     0x7f9c4a398ad3 at::TensorIterator::for_each()
[2m[36m(pid=27077)[0m     @     0x7ee92dca58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27029)[0m     @     0x7eec72e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=27029)[0m     @     0x7eec72e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=27021)[0m     @     0x7f905cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=27021)[0m     @     0x7f905cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=27021)[0m     @     0x7f905d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27028)[0m     @     0x7ed551c27d91 at::TensorIterator::for_each()
[2m[36m(pid=27028)[0m     @     0x7ed55250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27028)[0m     @     0x7ed55252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27042)[0m     @     0x7f505cafad91 at::TensorIterator::for_each()
[2m[36m(pid=27042)[0m     @     0x7f505d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27042)[0m     @     0x7f505d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27048)[0m     @     0x7f8f661ffd91 at::TensorIterator::for_each()
[2m[36m(pid=27048)[0m     @     0x7f8f66ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27048)[0m     @     0x7f8f66b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27061)[0m     @     0x7efbd374ad91 at::TensorIterator::for_each()
[2m[36m(pid=27061)[0m     @     0x7efbd402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27061)[0m     @     0x7efbd4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27007)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27007)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27007)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27007)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27007)[0m *** SIGSEGV (@0x0) received by PID 27007 (TID 0x7f32a8d8a700) from PID 0; stack trace: ***
[2m[36m(pid=27051)[0m     @     0x7f9d02852d91 at::TensorIterator::for_each()
[2m[36m(pid=27051)[0m     @     0x7f9d03135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27051)[0m     @     0x7f9d03158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27020)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27059)[0m     @     0x7fa6105d2d91 at::TensorIterator::for_each()
[2m[36m(pid=27059)[0m     @     0x7fa610eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27059)[0m     @     0x7fa610ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27064)[0m     @     0x7f8fc9ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=27064)[0m     @     0x7f8fca7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27064)[0m     @     0x7f8fca7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27071)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26954)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27041)[0m     @     0x7f662dc91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27041)[0m     @     0x7f662dc8f388 at::native::copy_impl()
[2m[36m(pid=27045)[0m     @     0x7f8cbb223d91 at::TensorIterator::for_each()
[2m[36m(pid=27045)[0m     @     0x7f8cbbb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27045)[0m     @     0x7f8cbbb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27039)[0m     @     0x7f4a02192ad3 at::TensorIterator::for_each()
[2m[36m(pid=27039)[0m     @     0x7f4a02192d91 at::TensorIterator::for_each()
[2m[36m(pid=27039)[0m     @     0x7f4a02a75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27039)[0m     @     0x7f4a02a98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27052)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27052)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27052)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27043)[0m     @     0x7eed50e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=27043)[0m     @     0x7eed50e22d91 at::TensorIterator::for_each()
[2m[36m(pid=27043)[0m     @     0x7eed51705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27070)[0m     @     0x7f8c8ce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=26976)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26976)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26976)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27044)[0m     @     0x7f893a3a3ad3 at::TensorIterator::for_each()
[2m[36m(pid=27044)[0m     @     0x7f893a3a3d91 at::TensorIterator::for_each()
[2m[36m(pid=27044)[0m     @     0x7f893ac86b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27044)[0m     @     0x7f893aca9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27019)[0m     @     0x7ed17c2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=27019)[0m     @     0x7ed17cbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27019)[0m     @     0x7ed17cc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27019)[0m     @     0x7ed17c0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27092)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27092)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27092)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27074)[0m     @     0x7f9c4a398d91 at::TensorIterator::for_each()
[2m[36m(pid=27074)[0m     @     0x7f9c4ac7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27074)[0m     @     0x7f9c4ac9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27023)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26978)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26978)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27077)[0m     @     0x7ee92dca5ad3 at::TensorIterator::for_each()
[2m[36m(pid=26951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27029)[0m     @     0x7eec73762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27029)[0m     @     0x7eec73785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27029)[0m     @     0x7eec72c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26971)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26971)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26971)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27000)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27000)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27000)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27000)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27000)[0m *** SIGSEGV (@0x0) received by PID 27000 (TID 0x7f8e342c1700) from PID 0; stack trace: ***
[2m[36m(pid=26956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26956)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26968)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26968)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26968)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27034)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27034)[0m *** SIGSEGV (@0x0) received by PID 27034 (TID 0x7f70fce95700) from PID 0; stack trace: ***
[2m[36m(pid=26964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26964)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26964)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26964)[0m *** SIGSEGV (@0x0) received by PID 26964 (TID 0x7f829862e700) from PID 0; stack trace: ***
[2m[36m(pid=26969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26969)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26958)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26958)[0m *** SIGSEGV (@0x0) received by PID 26958 (TID 0x7f5e2c566700) from PID 0; stack trace: ***
[2m[36m(pid=26958)[0m     @     0x7f5e2c13f390 (unknown)
[2m[36m(pid=26958)[0m     @     0x7f2f2c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26955)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26955)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26955)[0m *** SIGSEGV (@0x0) received by PID 26955 (TID 0x7fb0eb7fe700) from PID 0; stack trace: ***
[2m[36m(pid=26972)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26972)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26972)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27066)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27066)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27066)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27032)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27032)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27032)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27032)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27032)[0m *** SIGSEGV (@0x0) received by PID 27032 (TID 0x7fd5540a8700) from PID 0; stack trace: ***
[2m[36m(pid=27021)[0m     @     0x7f905d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27021)[0m     @     0x7f905cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27021)[0m     @     0x7f905cccd388 at::native::copy_impl()
[2m[36m(pid=27021)[0m     @     0x7f905cccf5a4 at::native::copy_()
[2m[36m(pid=27028)[0m     @     0x7ed5519cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27028)[0m     @     0x7ed5519cd388 at::native::copy_impl()
[2m[36m(pid=27028)[0m     @     0x7ed5519cf5a4 at::native::copy_()
[2m[36m(pid=27028)[0m     @     0x7ed5520ba4f5 at::Tensor::copy_()
[2m[36m(pid=27042)[0m     @     0x7f505c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27042)[0m     @     0x7f505c8a0388 at::native::copy_impl()
[2m[36m(pid=27042)[0m     @     0x7f505c8a25a4 at::native::copy_()
[2m[36m(pid=27042)[0m     @     0x7f505cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=27048)[0m     @     0x7f8f65fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27048)[0m     @     0x7f8f65fa5388 at::native::copy_impl()
[2m[36m(pid=27048)[0m     @     0x7f8f65fa75a4 at::native::copy_()
[2m[36m(pid=27048)[0m     @     0x7f8f666924f5 at::Tensor::copy_()
[2m[36m(pid=27048)[0m     @     0x7f8f68b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27061)[0m     @     0x7efbd34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27061)[0m     @     0x7efbd34f0388 at::native::copy_impl()
[2m[36m(pid=27061)[0m     @     0x7efbd34f25a4 at::native::copy_()
[2m[36m(pid=27007)[0m     @     0x7f32a8963390 (unknown)
[2m[36m(pid=27007)[0m     @     0x7f03a8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27007)[0m     @     0x7f03a7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27007)[0m     @     0x7f03a7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27051)[0m     @     0x7f9d025faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27051)[0m     @     0x7f9d025f8388 at::native::copy_impl()
[2m[36m(pid=27051)[0m     @     0x7f9d025fa5a4 at::native::copy_()
[2m[36m(pid=27051)[0m     @     0x7f9d02ce54f5 at::Tensor::copy_()
[2m[36m(pid=27051)[0m     @     0x7f9d051b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26957)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26957)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26957)[0m *** SIGSEGV (@0x0) received by PID 26957 (TID 0x7f91fe7d5700) from PID 0; stack trace: ***
[2m[36m(pid=26953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26953)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26953)[0m *** SIGSEGV (@0x0) received by PID 26953 (TID 0x7f4c4fbf2700) from PID 0; stack trace: ***
[2m[36m(pid=26953)[0m     @     0x7f4c4f7cb390 (unknown)
[2m[36m(pid=27027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27027)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27027)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27027)[0m *** SIGSEGV (@0x0) received by PID 27027 (TID 0x7f3546360700) from PID 0; stack trace: ***
[2m[36m(pid=26973)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26973)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26973)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27011)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27011)[0m *** SIGSEGV (@0x0) received by PID 27011 (TID 0x7fafb419a700) from PID 0; stack trace: ***
[2m[36m(pid=27011)[0m     @     0x7fafb3d73390 (unknown)
[2m[36m(pid=27011)[0m     @     0x7f80b3cf9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27011)[0m     @     0x7f80b34247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27087)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27087)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27087)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26965)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26965)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26965)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26965)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26965)[0m *** SIGSEGV (@0x0) received by PID 26965 (TID 0x7fbf20a68700) from PID 0; stack trace: ***
[2m[36m(pid=27004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27004)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26974)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27025)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27025)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27025)[0m *** SIGSEGV (@0x0) received by PID 27025 (TID 0x7f5874f0f700) from PID 0; stack trace: ***
[2m[36m(pid=27025)[0m     @     0x7f5874ae8390 (unknown)
[2m[36m(pid=27020)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27020)[0m *** SIGSEGV (@0x0) received by PID 27020 (TID 0x7f644bdea700) from PID 0; stack trace: ***
[2m[36m(pid=27020)[0m     @     0x7f644b9c3390 (unknown)
[2m[36m(pid=27020)[0m     @     0x7f354b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27020)[0m     @     0x7f354b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27059)[0m     @     0x7fa61037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27059)[0m     @     0x7fa610378388 at::native::copy_impl()
[2m[36m(pid=27059)[0m     @     0x7fa61037a5a4 at::native::copy_()
[2m[36m(pid=27059)[0m     @     0x7fa610a654f5 at::Tensor::copy_()
[2m[36m(pid=27059)[0m     @     0x7fa612f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27064)[0m     @     0x7f8fc9c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27064)[0m     @     0x7f8fc9c8f388 at::native::copy_impl()
[2m[36m(pid=27064)[0m     @     0x7f8fc9c915a4 at::native::copy_()
[2m[36m(pid=27064)[0m     @     0x7f8fca37c4f5 at::Tensor::copy_()
[2m[36m(pid=27064)[0m     @     0x7f8fcc84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27071)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27071)[0m *** SIGSEGV (@0x0) received by PID 27071 (TID 0x7fc789ffe700) from PID 0; stack trace: ***
[2m[36m(pid=27071)[0m     @     0x7fc789bd7390 (unknown)
[2m[36m(pid=27071)[0m     @     0x7f9889b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27071)[0m     @     0x7f98892a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26954)[0m *** SIGSEGV (@0x0) received by PID 26954 (TID 0x7f7c72a3b700) from PID 0; stack trace: ***
[2m[36m(pid=26954)[0m     @     0x7f7c72614390 (unknown)
[2m[36m(pid=26954)[0m     @     0x7f4d724f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26954)[0m     @     0x7f4d71c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27041)[0m     @     0x7f662dc915a4 at::native::copy_()
[2m[36m(pid=27041)[0m     @     0x7f662e37c4f5 at::Tensor::copy_()
[2m[36m(pid=27041)[0m     @     0x7f663084f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27045)[0m     @     0x7f8cbafcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27045)[0m     @     0x7f8cbafc9388 at::native::copy_impl()
[2m[36m(pid=27045)[0m     @     0x7f8cbafcb5a4 at::native::copy_()
[2m[36m(pid=27045)[0m     @     0x7f8cbb6b64f5 at::Tensor::copy_()
[2m[36m(pid=27045)[0m     @     0x7f8cbdb898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27045)[0m     @     0x7f8cbb6b64f5 at::Tensor::copy_()
[2m[36m(pid=27039)[0m     @     0x7f4a01f3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27039)[0m     @     0x7f4a01f38388 at::native::copy_impl()
[2m[36m(pid=27039)[0m     @     0x7f4a01f3a5a4 at::native::copy_()
[2m[36m(pid=27039)[0m     @     0x7f4a026254f5 at::Tensor::copy_()
[2m[36m(pid=27039)[0m     @     0x7f4a04af88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26981)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26981)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26981)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26981)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26981)[0m *** SIGSEGV (@0x0) received by PID 26981 (TID 0x7f6436c70700) from PID 0; stack trace: ***
[2m[36m(pid=26981)[0m     @     0x7f6436849390 (unknown)
[2m[36m(pid=26981)[0m     @     0x7f35367bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26981)[0m     @     0x7f3535ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26981)[0m     @     0x7f3535ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27052)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27052)[0m *** SIGSEGV (@0x0) received by PID 27052 (TID 0x7f4686e80700) from PID 0; stack trace: ***
[2m[36m(pid=27052)[0m     @     0x7f4686a59390 (unknown)
[2m[36m(pid=27052)[0m     @     0x7f17867bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27052)[0m     @     0x7f1785ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27052)[0m     @     0x7f1785ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26975)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26975)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26975)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26975)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26975)[0m *** SIGSEGV (@0x0) received by PID 26975 (TID 0x7f980db26700) from PID 0; stack trace: ***
[2m[36m(pid=26975)[0m     @     0x7f980d6ff390 (unknown)
[2m[36m(pid=26975)[0m     @     0x7f690d4dff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26975)[0m     @     0x7f690cc0a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26975)[0m     @     0x7f690cc0d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27043)[0m     @     0x7eed51728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27043)[0m     @     0x7eed50bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27043)[0m     @     0x7eed50bc8388 at::native::copy_impl()
[2m[36m(pid=27043)[0m     @     0x7eed50bca5a4 at::native::copy_()
[2m[36m(pid=27043)[0m     @     0x7eed512b54f5 at::Tensor::copy_()
[2m[36m(pid=27070)[0m     @     0x7f8c8ce22d91 at::TensorIterator::for_each()
[2m[36m(pid=27070)[0m     @     0x7f8c8d705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27070)[0m     @     0x7f8c8d728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27070)[0m     @     0x7f8c8cbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27070)[0m     @     0x7f8c8cbc8388 at::native::copy_impl()
[2m[36m(pid=27050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27050)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27050)[0m *** SIGSEGV (@0x0) received by PID 27050 (TID 0x7f6b4320c700) from PID 0; stack trace: ***
[2m[36m(pid=27050)[0m     @     0x7f6b42de5390 (unknown)
[2m[36m(pid=27050)[0m     @     0x7f3c42cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27050)[0m     @     0x7f3c424277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27050)[0m     @     0x7f3c4242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26960)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26960)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26960)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26960)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26960)[0m *** SIGSEGV (@0x0) received by PID 26960 (TID 0x7f5b8e879700) from PID 0; stack trace: ***
[2m[36m(pid=26960)[0m     @     0x7f5b8e452390 (unknown)
[2m[36m(pid=26960)[0m     @     0x7f2c8e193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26960)[0m     @     0x7f2c8d8be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26959)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26959)[0m *** SIGSEGV (@0x0) received by PID 26959 (TID 0x7eff405ff700) from PID 0; stack trace: ***
[2m[36m(pid=26959)[0m     @     0x7eff401d8390 (unknown)
[2m[36m(pid=26959)[0m     @     0x7ed0400cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26959)[0m     @     0x7ed03f7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26959)[0m     @     0x7ed03f7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27014)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27014)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27014)[0m *** SIGSEGV (@0x0) received by PID 27014 (TID 0x7fc1f99eb700) from PID 0; stack trace: ***
[2m[36m(pid=27014)[0m     @     0x7fc1f95c4390 (unknown)
[2m[36m(pid=27014)[0m     @     0x7f92f9564f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27014)[0m     @     0x7f92f8c8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27014)[0m     @     0x7f92f8c928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26976)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26976)[0m *** SIGSEGV (@0x0) received by PID 26976 (TID 0x7ff445952700) from PID 0; stack trace: ***
[2m[36m(pid=26976)[0m     @     0x7ff44552b390 (unknown)
[2m[36m(pid=26976)[0m     @     0x7fc5454e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26976)[0m     @     0x7fc544c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26976)[0m     @     0x7fc544c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27044)[0m     @     0x7f893a14ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27044)[0m     @     0x7f893a149388 at::native::copy_impl()
[2m[36m(pid=27044)[0m     @     0x7f893a14b5a4 at::native::copy_()
[2m[36m(pid=27044)[0m     @     0x7f893a8364f5 at::Tensor::copy_()
[2m[36m(pid=27044)[0m     @     0x7f893cd098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27019)[0m     @     0x7ed17c0a5388 at::native::copy_impl()
[2m[36m(pid=27019)[0m     @     0x7ed17c0a75a4 at::native::copy_()
[2m[36m(pid=27019)[0m     @     0x7ed17c7924f5 at::Tensor::copy_()
[2m[36m(pid=27019)[0m     @     0x7ed17ec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27019)[0m     @     0x7ed17c7924f5 at::Tensor::copy_()
[2m[36m(pid=27092)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27092)[0m *** SIGSEGV (@0x0) received by PID 27092 (TID 0x7f44a53f7700) from PID 0; stack trace: ***
[2m[36m(pid=27092)[0m     @     0x7f44a4fd0390 (unknown)
[2m[36m(pid=27092)[0m     @     0x7f15a4ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27092)[0m     @     0x7f15a45cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27092)[0m     @     0x7f15a45d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27092)[0m     @     0x7f15a45d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=27074)[0m     @     0x7f9c4a140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27074)[0m     @     0x7f9c4a13e388 at::native::copy_impl()
[2m[36m(pid=27074)[0m     @     0x7f9c4a1405a4 at::native::copy_()
[2m[36m(pid=27074)[0m     @     0x7f9c4a82b4f5 at::Tensor::copy_()
[2m[36m(pid=27074)[0m     @     0x7f9c4ccfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26984)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26984)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26984)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26984)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26984)[0m *** SIGSEGV (@0x0) received by PID 26984 (TID 0x7f3f09bad700) from PID 0; stack trace: ***
[2m[36m(pid=26984)[0m     @     0x7f3f09786390 (unknown)
[2m[36m(pid=26984)[0m     @     0x7f10096f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26984)[0m     @     0x7f1008e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26984)[0m     @     0x7f1008e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27023)[0m *** SIGSEGV (@0x0) received by PID 27023 (TID 0x7f8b3e634700) from PID 0; stack trace: ***
[2m[36m(pid=27023)[0m     @     0x7f8b3e20d390 (unknown)
[2m[36m(pid=27023)[0m     @     0x7f5c3e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27023)[0m     @     0x7f5c3d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27023)[0m     @     0x7f5c3d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26978)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26978)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26978)[0m *** SIGSEGV (@0x0) received by PID 26978 (TID 0x7fa2502f7700) from PID 0; stack trace: ***
[2m[36m(pid=26978)[0m     @     0x7fa24fed0390 (unknown)
[2m[36m(pid=26978)[0m     @     0x7f734fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26978)[0m     @     0x7f734f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26978)[0m     @     0x7f734f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26978)[0m     @     0x7f734f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=27077)[0m     @     0x7ee92dca5d91 at::TensorIterator::for_each()
[2m[36m(pid=27077)[0m     @     0x7ee92e588b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27077)[0m     @     0x7ee92e5abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27077)[0m     @     0x7ee92da4da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27077)[0m     @     0x7ee92da4b388 at::native::copy_impl()
[2m[36m(pid=26951)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26951)[0m *** SIGSEGV (@0x0) received by PID 26951 (TID 0x7f2327bbb700) from PID 0; stack trace: ***
[2m[36m(pid=26951)[0m     @     0x7f2327794390 (unknown)
[2m[36m(pid=26951)[0m     @     0x7ef42761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26951)[0m     @     0x7ef426d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26951)[0m     @     0x7ef426d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26951)[0m     @     0x7ef426d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=27029)[0m     @     0x7eec72c25388 at::native::copy_impl()
[2m[36m(pid=27029)[0m     @     0x7eec72c275a4 at::native::copy_()
[2m[36m(pid=27029)[0m     @     0x7eec733124f5 at::Tensor::copy_()
[2m[36m(pid=27029)[0m     @     0x7eec757e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27029)[0m     @     0x7eec733124f5 at::Tensor::copy_()
[2m[36m(pid=27029)[0m     @     0x7eec793bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27029)[0m     @     0x5568356d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27029)[0m     @     0x55683562bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27029)[0m     @     0x5568356b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27029)[0m     @     0x5568356b7a20 method_vectorcall
[2m[36m(pid=27029)[0m     @     0x55683562bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26971)[0m *** SIGSEGV (@0x0) received by PID 26971 (TID 0x7fb6d5c57700) from PID 0; stack trace: ***
[2m[36m(pid=26971)[0m     @     0x7fb6d5830390 (unknown)
[2m[36m(pid=26971)[0m     @     0x7f87d56f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26971)[0m     @     0x7f87d4e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26971)[0m     @     0x7f87d4e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26971)[0m     @     0x7f87d4e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=27072)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27072)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27072)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26966)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26966)[0m *** SIGSEGV (@0x0) received by PID 26966 (TID 0x7f2b0096c700) from PID 0; stack trace: ***
[2m[36m(pid=26966)[0m     @     0x7f2b00545390 (unknown)
[2m[36m(pid=26966)[0m     @     0x7efc004f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26966)[0m     @     0x7efbffc217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26962)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26962)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26962)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26962)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26962)[0m *** SIGSEGV (@0x0) received by PID 26962 (TID 0x7f91da4f2700) from PID 0; stack trace: ***
[2m[36m(pid=26962)[0m     @     0x7f91da0cb390 (unknown)
[2m[36m(pid=26962)[0m     @     0x7f62da04af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26962)[0m     @     0x7f62d97757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27033)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27033)[0m *** SIGSEGV (@0x0) received by PID 27033 (TID 0x7f8f7d86d700) from PID 0; stack trace: ***
[2m[36m(pid=27033)[0m     @     0x7f8f7d446390 (unknown)
[2m[36m(pid=27033)[0m     @     0x7f607d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27067)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27067)[0m *** SIGSEGV (@0x0) received by PID 27067 (TID 0x7f0fe1ea8700) from PID 0; stack trace: ***
[2m[36m(pid=27067)[0m     @     0x7f0fe1a81390 (unknown)
[2m[36m(pid=27073)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27073)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27073)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27073)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27073)[0m *** SIGSEGV (@0x0) received by PID 27073 (TID 0x7f3edb8ce700) from PID 0; stack trace: ***
[2m[36m(pid=27073)[0m     @     0x7f3edb4a7390 (unknown)
[2m[36m(pid=27073)[0m     @     0x7f0fdb398f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27073)[0m     @     0x7f0fdaac37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26970)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26970)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26970)[0m *** SIGSEGV (@0x0) received by PID 26970 (TID 0x7f9e888f3700) from PID 0; stack trace: ***
[2m[36m(pid=26970)[0m     @     0x7f9e884cc390 (unknown)
[2m[36m(pid=26970)[0m     @     0x7f6f88476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26970)[0m     @     0x7f6f87ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27057)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27057)[0m *** SIGSEGV (@0x0) received by PID 27057 (TID 0x7f35e12af700) from PID 0; stack trace: ***
[2m[36m(pid=27057)[0m     @     0x7f35e0e88390 (unknown)
[2m[36m(pid=27057)[0m     @     0x7f06e0e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27057)[0m     @     0x7f06e053d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27057)[0m     @     0x7f06e05408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27082)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27082)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27082)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27082)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27082)[0m *** SIGSEGV (@0x0) received by PID 27082 (TID 0x7f8c67e97700) from PID 0; stack trace: ***
[2m[36m(pid=27082)[0m     @     0x7f8c67a70390 (unknown)
[2m[36m(pid=27082)[0m     @     0x7f5d67a08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27082)[0m     @     0x7f5d671337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27082)[0m     @     0x7f5d671368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27000)[0m     @     0x7f8e33e9a390 (unknown)
[2m[36m(pid=27000)[0m     @     0x7f5f33e36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27000)[0m     @     0x7f5f335617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27000)[0m     @     0x7f5f335648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27000)[0m     @     0x7f5f33564ad3 at::TensorIterator::for_each()
[2m[36m(pid=27069)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27069)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27069)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27069)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27069)[0m *** SIGSEGV (@0x0) received by PID 27069 (TID 0x7f0aae640700) from PID 0; stack trace: ***
[2m[36m(pid=26999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26999)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26999)[0m *** SIGSEGV (@0x0) received by PID 26999 (TID 0x7f890080f700) from PID 0; stack trace: ***
[2m[36m(pid=26999)[0m     @     0x7f89003e8390 (unknown)
[2m[36m(pid=26999)[0m     @     0x7f5a00376f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26999)[0m     @     0x7f59ffaa17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26956)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26956)[0m *** SIGSEGV (@0x0) received by PID 26956 (TID 0x7f852d1d9700) from PID 0; stack trace: ***
[2m[36m(pid=26956)[0m     @     0x7f852cdb2390 (unknown)
[2m[36m(pid=26956)[0m     @     0x7f562cb42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26956)[0m     @     0x7f562c26d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26979)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26979)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26979)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26979)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26979)[0m *** SIGSEGV (@0x0) received by PID 26979 (TID 0x7f380f64f700) from PID 0; stack trace: ***
[2m[36m(pid=26979)[0m     @     0x7f380f228390 (unknown)
[2m[36m(pid=26979)[0m     @     0x7f090f124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26979)[0m     @     0x7f090e84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26968)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26968)[0m *** SIGSEGV (@0x0) received by PID 26968 (TID 0x7fbb94a8d700) from PID 0; stack trace: ***
[2m[36m(pid=26968)[0m     @     0x7fbb94666390 (unknown)
[2m[36m(pid=26968)[0m     @     0x7f8c94617f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26968)[0m     @     0x7f8c93d427db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26983)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26983)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26983)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26983)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26983)[0m *** SIGSEGV (@0x0) received by PID 26983 (TID 0x7f61db3bc700) from PID 0; stack trace: ***
[2m[36m(pid=26983)[0m     @     0x7f61daf95390 (unknown)
[2m[36m(pid=27034)[0m     @     0x7f70fca6e390 (unknown)
[2m[36m(pid=27034)[0m     @     0x7f41fc774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27034)[0m     @     0x7f41fbe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27034)[0m     @     0x7f41fbea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27034)[0m     @     0x7f41fbea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=27034)[0m     @     0x7f41fbea2d91 at::TensorIterator::for_each()
[2m[36m(pid=26964)[0m     @     0x7f8298207390 (unknown)
[2m[36m(pid=26964)[0m     @     0x7f539801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26964)[0m     @     0x7f53977477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26964)[0m     @     0x7f539774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26964)[0m     @     0x7f539774aad3 at::TensorIterator::for_each()
[2m[36m(pid=27046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27046)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27046)[0m *** SIGSEGV (@0x0) received by PID 27046 (TID 0x7f7f29957700) from PID 0; stack trace: ***
[2m[36m(pid=27046)[0m     @     0x7f7f29530390 (unknown)
[2m[36m(pid=27046)[0m     @     0x7f50294e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27046)[0m     @     0x7f5028c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27046)[0m     @     0x7f5028c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27046)[0m     @     0x7f5028c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=26963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26963)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26963)[0m *** SIGSEGV (@0x0) received by PID 26963 (TID 0x7f6de5e54700) from PID 0; stack trace: ***
[2m[36m(pid=26963)[0m     @     0x7f6de5a2d390 (unknown)
[2m[36m(pid=26969)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26969)[0m *** SIGSEGV (@0x0) received by PID 26969 (TID 0x7fb76cc2f700) from PID 0; stack trace: ***
[2m[36m(pid=26969)[0m     @     0x7fb76c808390 (unknown)
[2m[36m(pid=26969)[0m     @     0x7f886c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26969)[0m     @     0x7f886bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26969)[0m     @     0x7f886bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27062)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27062)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27062)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27062)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27062)[0m *** SIGSEGV (@0x0) received by PID 27062 (TID 0x7f7de47bc700) from PID 0; stack trace: ***
[2m[36m(pid=27062)[0m     @     0x7f7de4395390 (unknown)
[2m[36m(pid=27062)[0m     @     0x7f4ee4333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27062)[0m     @     0x7f4ee3a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26958)[0m     @     0x7f2f2b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26958)[0m     @     0x7f2f2b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26958)[0m     @     0x7f2f2b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=26958)[0m     @     0x7f2f2b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=26958)[0m     @     0x7f2f2c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26958)[0m     @     0x7f2f2c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26955)[0m     @     0x7fb0eb3d7390 (unknown)
[2m[36m(pid=26955)[0m     @     0x7f81eb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26955)[0m     @     0x7f81ea9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26955)[0m     @     0x7f81ea9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26955)[0m     @     0x7f81ea957ad3 at::TensorIterator::for_each()
[2m[36m(pid=26955)[0m     @     0x7f81ea957d91 at::TensorIterator::for_each()
[2m[36m(pid=26955)[0m     @     0x7f81eb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26955)[0m     @     0x7f81eb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26972)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26972)[0m *** SIGSEGV (@0x0) received by PID 26972 (TID 0x7f101c84c700) from PID 0; stack trace: ***
[2m[36m(pid=26972)[0m     @     0x7f101c425390 (unknown)
[2m[36m(pid=26972)[0m     @     0x7ee11c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26972)[0m     @     0x7ee11ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26972)[0m     @     0x7ee11ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27031)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27031)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27031)[0m *** SIGSEGV (@0x0) received by PID 27031 (TID 0x7f10be094700) from PID 0; stack trace: ***
[2m[36m(pid=27031)[0m     @     0x7f10bdc6d390 (unknown)
[2m[36m(pid=26967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26967)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26967)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26967)[0m *** SIGSEGV (@0x0) received by PID 26967 (TID 0x7f5b20e37700) from PID 0; stack trace: ***
[2m[36m(pid=26967)[0m     @     0x7f5b20a10390 (unknown)
[2m[36m(pid=26967)[0m     @     0x7f2c20774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26967)[0m     @     0x7f2c1fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26967)[0m     @     0x7f2c1fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27008)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27008)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27008)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27008)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27008)[0m *** SIGSEGV (@0x0) received by PID 27008 (TID 0x7f59b3f10700) from PID 0; stack trace: ***
[2m[36m(pid=27008)[0m     @     0x7f59b3ae9390 (unknown)
[2m[36m(pid=27008)[0m     @     0x7f2ab3a88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27008)[0m     @     0x7f2ab31b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27066)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27066)[0m *** SIGSEGV (@0x0) received by PID 27066 (TID 0x7f5001541700) from PID 0; stack trace: ***
[2m[36m(pid=27066)[0m     @     0x7f500111a390 (unknown)
[2m[36m(pid=27066)[0m     @     0x7f21010d4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27066)[0m     @     0x7f21007ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27066)[0m     @     0x7f21008028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27066)[0m     @     0x7f2100802ad3 at::TensorIterator::for_each()
[2m[36m(pid=27032)[0m     @     0x7fd553c81390 (unknown)
[2m[36m(pid=27032)[0m     @     0x7fa6538ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27032)[0m     @     0x7fa652ff77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27032)[0m     @     0x7fa652ffa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27032)[0m     @     0x7fa652ffaad3 at::TensorIterator::for_each()
[2m[36m(pid=27032)[0m     @     0x7fa652ffad91 at::TensorIterator::for_each()
[2m[36m(pid=27021)[0m     @     0x7f905d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=27021)[0m     @     0x7f905f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27021)[0m     @     0x7f905d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=27021)[0m     @     0x7f906346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27021)[0m     @     0x555d9a517fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27021)[0m     @     0x555d9a472b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27021)[0m     @     0x555d9a4fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27021)[0m     @     0x555d9a4fea20 method_vectorcall
[2m[36m(pid=27021)[0m     @     0x555d9a472bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27021)[0m     @     0x555d9a4fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27021)[0m     @     0x555d9a4fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27021)[0m     @     0x555d9a473689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27021)[0m     @     0x555d9a4fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27021)[0m     @     0x555d9a4fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27021)[0m     @     0x555d9a473689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27021)[0m     @     0x555d9a4fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27021)[0m     @     0x555d9a4fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27021)[0m     @     0x555d9a473689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27021)[0m     @     0x555d9a4fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27021)[0m     @     0x555d9a4fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27021)[0m     @     0x555d9a473689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x7ed55458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27028)[0m     @     0x7ed5520ba4f5 at::Tensor::copy_()
[2m[36m(pid=27028)[0m     @     0x7ed55816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27028)[0m     @     0x561d7583efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27028)[0m     @     0x561d75799b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x561d75824baf _PyEval_EvalCodeWithName
[2m[36m(pid=27028)[0m     @     0x561d75825a20 method_vectorcall
[2m[36m(pid=27028)[0m     @     0x561d75799bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x561d75824baf _PyEval_EvalCodeWithName
[2m[36m(pid=27028)[0m     @     0x561d75825643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27028)[0m     @     0x561d7579a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x561d75824baf _PyEval_EvalCodeWithName
[2m[36m(pid=27028)[0m     @     0x561d75825643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27028)[0m     @     0x561d7579a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x561d75824baf _PyEval_EvalCodeWithName
[2m[36m(pid=27028)[0m     @     0x561d75825643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27028)[0m     @     0x561d7579a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27028)[0m     @     0x561d75824baf _PyEval_EvalCodeWithName
[2m[36m(pid=27028)[0m     @     0x561d75825643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27028)[0m     @     0x561d7579a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x7f505f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27042)[0m     @     0x7f505cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=27042)[0m     @     0x7f506303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27042)[0m     @     0x55f817df9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27042)[0m     @     0x55f817d54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x55f817ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27042)[0m     @     0x55f817de0a20 method_vectorcall
[2m[36m(pid=27042)[0m     @     0x55f817d54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x55f817ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27042)[0m     @     0x55f817de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27042)[0m     @     0x55f817d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x55f817ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27042)[0m     @     0x55f817de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27042)[0m     @     0x55f817d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x55f817ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27042)[0m     @     0x55f817de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27042)[0m     @     0x55f817d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27042)[0m     @     0x55f817ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27042)[0m     @     0x55f817de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27042)[0m     @     0x55f817d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x7f8f666924f5 at::Tensor::copy_()
[2m[36m(pid=27048)[0m     @     0x7f8f6c73d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27048)[0m     @     0x55acb2212fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27048)[0m     @     0x55acb216db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x55acb21f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=27048)[0m     @     0x55acb21f9a20 method_vectorcall
[2m[36m(pid=27048)[0m     @     0x55acb216dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x55acb21f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=27048)[0m     @     0x55acb21f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27048)[0m     @     0x55acb216e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x55acb21f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=27048)[0m     @     0x55acb21f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27048)[0m     @     0x55acb216e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x55acb21f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=27048)[0m     @     0x55acb21f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27048)[0m     @     0x55acb216e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27048)[0m     @     0x55acb21f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=27048)[0m     @     0x55acb21f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27048)[0m     @     0x55acb216e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x7efbd3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=27061)[0m     @     0x7efbd60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27061)[0m     @     0x7efbd3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=27061)[0m     @     0x7efbd9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27061)[0m     @     0x55b71cb59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27061)[0m     @     0x55b71cab4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x55b71cb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27061)[0m     @     0x55b71cb40a20 method_vectorcall
[2m[36m(pid=27061)[0m     @     0x55b71cab4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x55b71cb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27061)[0m     @     0x55b71cb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27061)[0m     @     0x55b71cab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x55b71cb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27061)[0m     @     0x55b71cb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27061)[0m     @     0x55b71cab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x55b71cb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27061)[0m     @     0x55b71cb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27061)[0m     @     0x55b71cab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27061)[0m     @     0x55b71cb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27061)[0m     @     0x55b71cb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27061)[0m     @     0x55b71cab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x7f03a7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=27007)[0m     @     0x7f03a7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=27007)[0m     @     0x7f03a8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27007)[0m     @     0x7f03a87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27007)[0m     @     0x7f03a7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27007)[0m     @     0x7f03a7c48388 at::native::copy_impl()
[2m[36m(pid=27007)[0m     @     0x7f03a7c4a5a4 at::native::copy_()
[2m[36m(pid=27051)[0m     @     0x7f9d02ce54f5 at::Tensor::copy_()
[2m[36m(pid=27051)[0m     @     0x7f9d08d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27051)[0m     @     0x557031f88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27051)[0m     @     0x557031ee3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27051)[0m     @     0x557031f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27051)[0m     @     0x557031f6fa20 method_vectorcall
[2m[36m(pid=27051)[0m     @     0x557031ee3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27051)[0m     @     0x557031f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27051)[0m     @     0x557031f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27051)[0m     @     0x557031ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27051)[0m     @     0x557031f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27051)[0m     @     0x557031f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27051)[0m     @     0x557031ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27051)[0m     @     0x557031f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27051)[0m     @     0x557031f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27051)[0m     @     0x557031ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27051)[0m     @     0x557031f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27051)[0m     @     0x557031f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27051)[0m     @     0x557031ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x7f91fe3ae390 (unknown)
[2m[36m(pid=26957)[0m     @     0x7f62fe34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26957)[0m     @     0x7f62fda767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26957)[0m     @     0x7f62fda798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26957)[0m     @     0x7f62fda79ad3 at::TensorIterator::for_each()
[2m[36m(pid=26953)[0m     @     0x7f1d4ec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26953)[0m     @     0x7f1d4e3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26953)[0m     @     0x7f1d4e3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26953)[0m     @     0x7f1d4e343ad3 at::TensorIterator::for_each()
[2m[36m(pid=26953)[0m     @     0x7f1d4e343d91 at::TensorIterator::for_each()
[2m[36m(pid=27027)[0m     @     0x7f3545f39390 (unknown)
[2m[36m(pid=27027)[0m     @     0x7f0645e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27027)[0m     @     0x7f064554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27027)[0m     @     0x7f06455528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27027)[0m     @     0x7f0645552ad3 at::TensorIterator::for_each()
[2m[36m(pid=27027)[0m     @     0x7f0645552d91 at::TensorIterator::for_each()
[2m[36m(pid=26973)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26973)[0m *** SIGSEGV (@0x0) received by PID 26973 (TID 0x7f260f0e9700) from PID 0; stack trace: ***
[2m[36m(pid=26973)[0m     @     0x7f260ecc2390 (unknown)
[2m[36m(pid=26973)[0m     @     0x7ef70ec51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26973)[0m     @     0x7ef70e37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26973)[0m     @     0x7ef70e37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26973)[0m     @     0x7ef70e37fad3 at::TensorIterator::for_each()
[2m[36m(pid=27011)[0m     @     0x7f80b34278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27011)[0m     @     0x7f80b3427ad3 at::TensorIterator::for_each()
[2m[36m(pid=27011)[0m     @     0x7f80b3427d91 at::TensorIterator::for_each()
[2m[36m(pid=27011)[0m     @     0x7f80b3d0ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27011)[0m     @     0x7f80b3d2dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27087)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27087)[0m *** SIGSEGV (@0x0) received by PID 27087 (TID 0x7fbb979a0700) from PID 0; stack trace: ***
[2m[36m(pid=27087)[0m     @     0x7fbb97579390 (unknown)
[2m[36m(pid=27087)[0m     @     0x7f8c9750df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27087)[0m     @     0x7f8c96c387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27087)[0m     @     0x7f8c96c3b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27087)[0m     @     0x7f8c96c3bad3 at::TensorIterator::for_each()
[2m[36m(pid=27053)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27053)[0m *** SIGSEGV (@0x0) received by PID 27053 (TID 0x7f33bf27f700) from PID 0; stack trace: ***
[2m[36m(pid=27053)[0m     @     0x7f33bee58390 (unknown)
[2m[36m(pid=27053)[0m     @     0x7f04bee03f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27053)[0m     @     0x7f04be52e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27053)[0m     @     0x7f04be5318f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26965)[0m     @     0x7fbf20641390 (unknown)
[2m[36m(pid=26965)[0m     @     0x7f9020563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26965)[0m     @     0x7f901fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26965)[0m     @     0x7f901fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26965)[0m     @     0x7f901fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=27040)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=27040)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=27040)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=27040)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27040)[0m *** SIGSEGV (@0x0) received by PID 27040 (TID 0x7f1d2ea68700) from PID 0; stack trace: ***
[2m[36m(pid=27040)[0m     @     0x7f1d2e641390 (unknown)
[2m[36m(pid=26952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26952)[0m *** Aborted at 1604572595 (unix time) try "date -d @1604572595" if you are using GNU date ***
[2m[36m(pid=26952)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26952)[0m *** SIGSEGV (@0x0) received by PID 26952 (TID 0x7fd95f158700) from PID 0; stack trace: ***
[2m[36m(pid=26952)[0m     @     0x7fd95ed31390 (unknown)
[2m[36m(pid=27004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27004)[0m *** SIGSEGV (@0x0) received by PID 27004 (TID 0x7f8e1a621700) from PID 0; stack trace: ***
[2m[36m(pid=27004)[0m     @     0x7f8e1a1fa390 (unknown)
[2m[36m(pid=27004)[0m     @     0x7f5f1a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27004)[0m     @     0x7f5f198657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27004)[0m     @     0x7f5f198688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27004)[0m     @     0x7f5f19868ad3 at::TensorIterator::for_each()
[2m[36m(pid=26974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26974)[0m *** SIGSEGV (@0x0) received by PID 26974 (TID 0x7f00f5dc0700) from PID 0; stack trace: ***
[2m[36m(pid=26974)[0m     @     0x7f00f5999390 (unknown)
[2m[36m(pid=26974)[0m     @     0x7ed1f57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26974)[0m     @     0x7ed1f4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26974)[0m     @     0x7ed1f4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26974)[0m     @     0x7ed1f4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=27025)[0m     @     0x7f297497ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27025)[0m     @     0x7f29740aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27025)[0m     @     0x7f29740ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27025)[0m     @     0x7f29740adad3 at::TensorIterator::for_each()
[2m[36m(pid=27025)[0m     @     0x7f29740add91 at::TensorIterator::for_each()
[2m[36m(pid=27025)[0m     @     0x7f2974990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27020)[0m     @     0x7f354b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27020)[0m     @     0x7f354b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=27020)[0m     @     0x7f354b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=27020)[0m     @     0x7f354b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27020)[0m     @     0x7f354b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27059)[0m     @     0x7fa610a654f5 at::Tensor::copy_()
[2m[36m(pid=27059)[0m     @     0x7fa616b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27059)[0m     @     0x55e58da37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27059)[0m     @     0x55e58d992b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27059)[0m     @     0x55e58da1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27059)[0m     @     0x55e58da1ea20 method_vectorcall
[2m[36m(pid=27059)[0m     @     0x55e58d992bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27059)[0m     @     0x55e58da1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27059)[0m     @     0x55e58da1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27059)[0m     @     0x55e58d993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27059)[0m     @     0x55e58da1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27059)[0m     @     0x55e58da1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27059)[0m     @     0x55e58d993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27059)[0m     @     0x55e58da1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27059)[0m     @     0x55e58da1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27059)[0m     @     0x55e58d993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27059)[0m     @     0x55e58da1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27059)[0m     @     0x55e58da1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27059)[0m     @     0x55e58d993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x7f8fca37c4f5 at::Tensor::copy_()
[2m[36m(pid=27064)[0m     @     0x7f8fd042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27064)[0m     @     0x555967bcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27064)[0m     @     0x555967b25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x555967bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27064)[0m     @     0x555967bb1a20 method_vectorcall
[2m[36m(pid=27064)[0m     @     0x555967b25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x555967bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27064)[0m     @     0x555967bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27064)[0m     @     0x555967b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x555967bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27064)[0m     @     0x555967bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27064)[0m     @     0x555967b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x555967bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27064)[0m     @     0x555967bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27064)[0m     @     0x555967b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27064)[0m     @     0x555967bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27064)[0m     @     0x555967bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27064)[0m     @     0x555967b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x7f98892a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27071)[0m     @     0x7f98892a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=27071)[0m     @     0x7f98892a8d91 at::TensorIterator::for_each()
[2m[36m(pid=27071)[0m     @     0x7f9889b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27071)[0m     @     0x7f9889baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27071)[0m     @     0x7f9889050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27071)[0m     @     0x7f988904e388 at::native::copy_impl()
[2m[36m(pid=26954)[0m     @     0x7f4d71c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26954)[0m     @     0x7f4d71c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=26954)[0m     @     0x7f4d71c27d91 at::TensorIterator::for_each()
[2m[36m(pid=26954)[0m     @     0x7f4d7250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26954)[0m     @     0x7f4d7252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26954)[0m     @     0x7f4d719cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26954)[0m     @     0x7f4d719cd388 at::native::copy_impl()
[2m[36m(pid=27041)[0m     @     0x7f662e37c4f5 at::Tensor::copy_()
[2m[36m(pid=27041)[0m     @     0x7f663442779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27041)[0m     @     0x55c61490dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27041)[0m     @     0x55c614868b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27041)[0m     @     0x55c6148f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27041)[0m     @     0x55c6148f4a20 method_vectorcall
[2m[36m(pid=27041)[0m     @     0x55c614868bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27041)[0m     @     0x55c6148f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27041)[0m     @     0x55c6148f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27041)[0m     @     0x55c614869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27041)[0m     @     0x55c6148f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27041)[0m     @     0x55c6148f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27041)[0m     @     0x55c614869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27041)[0m     @     0x55c6148f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27041)[0m     @     0x55c6148f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27041)[0m     @     0x55c614869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27041)[0m     @     0x55c6148f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27041)[0m     @     0x55c6148f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27041)[0m     @     0x55c614869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x7f8cc176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27045)[0m     @     0x560eaacb1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27045)[0m     @     0x560eaac0cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x560eaac97baf _PyEval_EvalCodeWithName
[2m[36m(pid=27045)[0m     @     0x560eaac98a20 method_vectorcall
[2m[36m(pid=27045)[0m     @     0x560eaac0cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x560eaac97baf _PyEval_EvalCodeWithName
[2m[36m(pid=27045)[0m     @     0x560eaac98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27045)[0m     @     0x560eaac0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x560eaac97baf _PyEval_EvalCodeWithName
[2m[36m(pid=27045)[0m     @     0x560eaac98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27045)[0m     @     0x560eaac0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x560eaac97baf _PyEval_EvalCodeWithName
[2m[36m(pid=27045)[0m     @     0x560eaac98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27045)[0m     @     0x560eaac0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27045)[0m     @     0x560eaac97baf _PyEval_EvalCodeWithName
[2m[36m(pid=27045)[0m     @     0x560eaac98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27045)[0m     @     0x560eaac0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x7f4a026254f5 at::Tensor::copy_()
[2m[36m(pid=27039)[0m     @     0x7f4a086d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27039)[0m     @     0x55ff869c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27039)[0m     @     0x55ff86923b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x55ff869aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27039)[0m     @     0x55ff869afa20 method_vectorcall
[2m[36m(pid=27039)[0m     @     0x55ff86923bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x55ff869aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27039)[0m     @     0x55ff869af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27039)[0m     @     0x55ff86924689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x55ff869aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27039)[0m     @     0x55ff869af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27039)[0m     @     0x55ff86924689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x55ff869aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27039)[0m     @     0x55ff869af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27039)[0m     @     0x55ff86924689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27039)[0m     @     0x55ff869aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27039)[0m     @     0x55ff869af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27039)[0m     @     0x55ff86924689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x7f3535ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=26981)[0m     @     0x7f3535ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=26981)[0m     @     0x7f35367ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26981)[0m     @     0x7f35367efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26981)[0m     @     0x7f3535c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27052)[0m     @     0x7f1785ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=27052)[0m     @     0x7f1785ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=27052)[0m     @     0x7f17867ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26975)[0m     @     0x7f690cc0dad3 at::TensorIterator::for_each()
[2m[36m(pid=26975)[0m     @     0x7f690cc0dd91 at::TensorIterator::for_each()
[2m[36m(pid=26975)[0m     @     0x7f690d4f0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26975)[0m     @     0x7f690d513c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27043)[0m     @     0x7eed537888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27043)[0m     @     0x7eed512b54f5 at::Tensor::copy_()
[2m[36m(pid=27043)[0m     @     0x7eed5736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27043)[0m     @     0x5585444e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27043)[0m     @     0x55854443bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27043)[0m     @     0x5585444c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27043)[0m     @     0x5585444c7a20 method_vectorcall
[2m[36m(pid=27043)[0m     @     0x55854443bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27043)[0m     @     0x5585444c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27043)[0m     @     0x5585444c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27043)[0m     @     0x55854443c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27043)[0m     @     0x5585444c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27043)[0m     @     0x5585444c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27043)[0m     @     0x55854443c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27043)[0m     @     0x5585444c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27043)[0m     @     0x5585444c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27043)[0m     @     0x55854443c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27043)[0m     @     0x5585444c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27043)[0m     @     0x5585444c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27043)[0m     @     0x55854443c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x7f8c8cbca5a4 at::native::copy_()
[2m[36m(pid=27070)[0m     @     0x7f8c8d2b54f5 at::Tensor::copy_()
[2m[36m(pid=27070)[0m     @     0x7f8c8f7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27070)[0m     @     0x7f8c8d2b54f5 at::Tensor::copy_()
[2m[36m(pid=27050)[0m     @     0x7f3c4242aad3 at::TensorIterator::for_each()
[2m[36m(pid=27050)[0m     @     0x7f3c4242ad91 at::TensorIterator::for_each()
[2m[36m(pid=27050)[0m     @     0x7f3c42d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27050)[0m     @     0x7f3c42d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27050)[0m     @     0x7f3c421d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26960)[0m     @     0x7f2c8d8c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26960)[0m     @     0x7f2c8d8c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=26960)[0m     @     0x7f2c8d8c1d91 at::TensorIterator::for_each()
[2m[36m(pid=26960)[0m     @     0x7f2c8e1a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26959)[0m     @     0x7ed03f7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=26959)[0m     @     0x7ed03f7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=26959)[0m     @     0x7ed0400deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26959)[0m     @     0x7ed040101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27014)[0m     @     0x7f92f8c92ad3 at::TensorIterator::for_each()
[2m[36m(pid=27014)[0m     @     0x7f92f8c92d91 at::TensorIterator::for_each()
[2m[36m(pid=27014)[0m     @     0x7f92f9575b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27014)[0m     @     0x7f92f9598c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26976)[0m     @     0x7fc544c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=26976)[0m     @     0x7fc544c11d91 at::TensorIterator::for_each()
[2m[36m(pid=26976)[0m     @     0x7fc5454f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26976)[0m     @     0x7fc545517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26976)[0m     @     0x7fc5449b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27044)[0m     @     0x7f893a8364f5 at::Tensor::copy_()
[2m[36m(pid=27044)[0m     @     0x7f89408e179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27044)[0m     @     0x55ad496cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27044)[0m     @     0x55ad49628b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27044)[0m     @     0x55ad496b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27044)[0m     @     0x55ad496b4a20 method_vectorcall
[2m[36m(pid=27044)[0m     @     0x55ad49628bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27044)[0m     @     0x55ad496b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27044)[0m     @     0x55ad496b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27044)[0m     @     0x55ad49629689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27044)[0m     @     0x55ad496b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27044)[0m     @     0x55ad496b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27044)[0m     @     0x55ad49629689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27044)[0m     @     0x55ad496b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27044)[0m     @     0x55ad496b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27044)[0m     @     0x55ad49629689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27044)[0m     @     0x55ad496b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=27044)[0m     @     0x55ad496b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27044)[0m     @     0x55ad49629689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x7ed18283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27019)[0m     @     0x55d61222bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27019)[0m     @     0x55d612186b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x55d612211baf _PyEval_EvalCodeWithName
[2m[36m(pid=27019)[0m     @     0x55d612212a20 method_vectorcall
[2m[36m(pid=27019)[0m     @     0x55d612186bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x55d612211baf _PyEval_EvalCodeWithName
[2m[36m(pid=27019)[0m     @     0x55d612212643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27019)[0m     @     0x55d612187689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x55d612211baf _PyEval_EvalCodeWithName
[2m[36m(pid=27019)[0m     @     0x55d612212643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27019)[0m     @     0x55d612187689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x55d612211baf _PyEval_EvalCodeWithName
[2m[36m(pid=27019)[0m     @     0x55d612212643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27019)[0m     @     0x55d612187689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27019)[0m     @     0x55d612211baf _PyEval_EvalCodeWithName
[2m[36m(pid=27019)[0m     @     0x55d612212643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27019)[0m     @     0x55d612187689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x7f15a45d2d91 at::TensorIterator::for_each()
[2m[36m(pid=27092)[0m     @     0x7f15a4eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27092)[0m     @     0x7f15a4ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27092)[0m     @     0x7f15a437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27092)[0m     @     0x7f15a4378388 at::native::copy_impl()
[2m[36m(pid=27074)[0m     @     0x7f9c4a82b4f5 at::Tensor::copy_()
[2m[36m(pid=27074)[0m     @     0x7f9c508d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27074)[0m     @     0x560f53dd3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27074)[0m     @     0x560f53d2eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27074)[0m     @     0x560f53db9baf _PyEval_EvalCodeWithName
[2m[36m(pid=27074)[0m     @     0x560f53dbaa20 method_vectorcall
[2m[36m(pid=27074)[0m     @     0x560f53d2ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27074)[0m     @     0x560f53db9baf _PyEval_EvalCodeWithName
[2m[36m(pid=27074)[0m     @     0x560f53dba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27074)[0m     @     0x560f53d2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27074)[0m     @     0x560f53db9baf _PyEval_EvalCodeWithName
[2m[36m(pid=27074)[0m     @     0x560f53dba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27074)[0m     @     0x560f53d2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27074)[0m     @     0x560f53db9baf _PyEval_EvalCodeWithName
[2m[36m(pid=27074)[0m     @     0x560f53dba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27074)[0m     @     0x560f53d2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27074)[0m     @     0x560f53db9baf _PyEval_EvalCodeWithName
[2m[36m(pid=27074)[0m     @     0x560f53dba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27074)[0m     @     0x560f53d2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x7f1008e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=26984)[0m     @     0x7f1008e22d91 at::TensorIterator::for_each()
[2m[36m(pid=26984)[0m     @     0x7f1009705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26984)[0m     @     0x7f1009728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26984)[0m     @     0x7f1008bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27023)[0m     @     0x7f5c3d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=27023)[0m     @     0x7f5c3d868d91 at::TensorIterator::for_each()
[2m[36m(pid=27023)[0m     @     0x7f5c3e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27023)[0m     @     0x7f5c3e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27023)[0m     @     0x7f5c3d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26978)[0m     @     0x7f734f539d91 at::TensorIterator::for_each()
[2m[36m(pid=26978)[0m     @     0x7f734fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26978)[0m     @     0x7f734fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26978)[0m     @     0x7f734f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27077)[0m     @     0x7ee92da4d5a4 at::native::copy_()
[2m[36m(pid=27077)[0m     @     0x7ee92e1384f5 at::Tensor::copy_()
[2m[36m(pid=27077)[0m     @     0x7ee93060b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26951)[0m     @     0x7ef426d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=26951)[0m     @     0x7ef427630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26951)[0m     @     0x7ef427653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26951)[0m     @     0x7ef426af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27029)[0m     @     0x5568356b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27029)[0m     @     0x5568356b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27029)[0m     @     0x55683562c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27029)[0m     @     0x5568356b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27029)[0m     @     0x5568356b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27029)[0m     @     0x55683562c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27029)[0m     @     0x5568356b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27029)[0m     @     0x5568356b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27029)[0m     @     0x55683562c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27029)[0m     @     0x5568356b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=27029)[0m     @     0x5568356b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27029)[0m     @     0x55683562c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x7f87d4e22d91 at::TensorIterator::for_each()
[2m[36m(pid=26971)[0m     @     0x7f87d5705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26971)[0m     @     0x7f87d5728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26971)[0m     @     0x7f87d4bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27072)[0m PC: @                0x0 (unknown)
[2m[36m(pid=27072)[0m *** SIGSEGV (@0x0) received by PID 27072 (TID 0x7fc48e5e0700) from PID 0; stack trace: ***
[2m[36m(pid=27072)[0m     @     0x7fc48e1b9390 (unknown)
[2m[36m(pid=27072)[0m     @     0x7f958e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27072)[0m     @     0x7f958d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26966)[0m     @     0x7efbffc248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26966)[0m     @     0x7efbffc24ad3 at::TensorIterator::for_each()
[2m[36m(pid=26962)[0m     @     0x7f62d97788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26962)[0m     @     0x7f62d9778ad3 at::TensorIterator::for_each()
[2m[36m(pid=26962)[0m     @     0x7f62d9778d91 at::TensorIterator::for_each()
[2m[36m(pid=26962)[0m     @     0x7f62da05bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27033)[0m     @     0x7f607caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27033)[0m     @     0x7f607cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27033)[0m     @     0x7f607cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=27067)[0m     @     0x7ee0e17f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27067)[0m     @     0x7ee0e0f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27067)[0m     @     0x7ee0e0f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27067)[0m     @     0x7ee0e0f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=27073)[0m     @     0x7f0fdaac68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27073)[0m     @     0x7f0fdaac6ad3 at::TensorIterator::for_each()
[2m[36m(pid=27073)[0m     @     0x7f0fdaac6d91 at::TensorIterator::for_each()
[2m[36m(pid=27073)[0m     @     0x7f0fdb3a9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27073)[0m     @     0x7f0fdb3ccc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26970)[0m     @     0x7f6f87ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26970)[0m     @     0x7f6f87ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=26970)[0m     @     0x7f6f87ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=26970)[0m     @     0x7f6f88487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26970)[0m     @     0x7f6f884aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27057)[0m     @     0x7f06e0540ad3 at::TensorIterator::for_each()
[2m[36m(pid=27057)[0m     @     0x7f06e0540d91 at::TensorIterator::for_each()
[2m[36m(pid=27057)[0m     @     0x7f06e0e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27057)[0m     @     0x7f06e0e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27057)[0m     @     0x7f06e02e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27057)[0m     @     0x7f06e02e6388 at::native::copy_impl()
[2m[36m(pid=27082)[0m     @     0x7f5d67136ad3 at::TensorIterator::for_each()
[2m[36m(pid=27082)[0m     @     0x7f5d67136d91 at::TensorIterator::for_each()
[2m[36m(pid=27082)[0m     @     0x7f5d67a19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27082)[0m     @     0x7f5d67a3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27000)[0m     @     0x7f5f33564d91 at::TensorIterator::for_each()
[2m[36m(pid=27000)[0m     @     0x7f5f33e47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27000)[0m     @     0x7f5f33e6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27000)[0m     @     0x7f5f3330ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27000)[0m     @     0x7f5f3330a388 at::native::copy_impl()
[2m[36m(pid=27000)[0m     @     0x7f5f3330c5a4 at::native::copy_()
[2m[36m(pid=27069)[0m     @     0x7f0aae219390 (unknown)
[2m[36m(pid=27069)[0m     @     0x7edbae13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27069)[0m     @     0x7edbad8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27069)[0m     @     0x7edbad8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27069)[0m     @     0x7edbad868ad3 at::TensorIterator::for_each()
2020-11-05 10:36:35,451	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=26999)[0m     @     0x7f59ffaa48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26999)[0m     @     0x7f59ffaa4ad3 at::TensorIterator::for_each()
[2m[36m(pid=26999)[0m     @     0x7f59ffaa4d91 at::TensorIterator::for_each()
[2m[36m(pid=26999)[0m     @     0x7f5a00387b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26999)[0m     @     0x7f5a003aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26956)[0m     @     0x7f562c2708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26956)[0m     @     0x7f562c270ad3 at::TensorIterator::for_each()
[2m[36m(pid=26956)[0m     @     0x7f562c270d91 at::TensorIterator::for_each()
[2m[36m(pid=26956)[0m     @     0x7f562cb53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26956)[0m     @     0x7f562cb76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26979)[0m     @     0x7f090e8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26979)[0m     @     0x7f090e852ad3 at::TensorIterator::for_each()
[2m[36m(pid=26979)[0m     @     0x7f090e852d91 at::TensorIterator::for_each()
[2m[36m(pid=26979)[0m     @     0x7f090f135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26979)[0m     @     0x7f090f158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26968)[0m     @     0x7f8c93d458f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26968)[0m     @     0x7f8c93d45ad3 at::TensorIterator::for_each()
[2m[36m(pid=26968)[0m     @     0x7f8c93d45d91 at::TensorIterator::for_each()
[2m[36m(pid=26968)[0m     @     0x7f8c94628b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26968)[0m     @     0x7f8c9464bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26983)[0m     @     0x7f32daf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26983)[0m     @     0x7f32da63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26983)[0m     @     0x7f32da6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26983)[0m     @     0x7f32da641ad3 at::TensorIterator::for_each()
[2m[36m(pid=26983)[0m     @     0x7f32da641d91 at::TensorIterator::for_each()
[2m[36m(pid=27034)[0m     @     0x7f41fc785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27034)[0m     @     0x7f41fc7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27034)[0m     @     0x7f41fbc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27034)[0m     @     0x7f41fbc48388 at::native::copy_impl()
[2m[36m(pid=26964)[0m     @     0x7f539774ad91 at::TensorIterator::for_each()
[2m[36m(pid=26964)[0m     @     0x7f539802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26964)[0m     @     0x7f5398050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26964)[0m     @     0x7f53974f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26964)[0m     @     0x7f53974f0388 at::native::copy_impl()
[2m[36m(pid=27046)[0m     @     0x7f5028c11d91 at::TensorIterator::for_each()
[2m[36m(pid=27046)[0m     @     0x7f50294f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27046)[0m     @     0x7f5029517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27046)[0m     @     0x7f50289b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26963)[0m     @     0x7f3ee57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26963)[0m     @     0x7f3ee4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26963)[0m     @     0x7f3ee4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26963)[0m     @     0x7f3ee4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=26969)[0m     @     0x7f886bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=26969)[0m     @     0x7f886bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=26969)[0m     @     0x7f886c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26969)[0m     @     0x7f886c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26969)[0m     @     0x7f886ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27062)[0m     @     0x7f4ee3a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27062)[0m     @     0x7f4ee3a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=26958)[0m     @     0x7f2f2b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26958)[0m     @     0x7f2f2b4f0388 at::native::copy_impl()
[2m[36m(pid=26958)[0m     @     0x7f2f2b4f25a4 at::native::copy_()
[2m[36m(pid=26955)[0m     @     0x7f81ea6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26955)[0m     @     0x7f81ea6fd388 at::native::copy_impl()
[2m[36m(pid=26955)[0m     @     0x7f81ea6ff5a4 at::native::copy_()
[2m[36m(pid=26972)[0m     @     0x7ee11ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=26972)[0m     @     0x7ee11ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=26972)[0m     @     0x7ee11c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26972)[0m     @     0x7ee11c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27031)[0m     @     0x7ee1bdc11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27031)[0m     @     0x7ee1bd33c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26967)[0m     @     0x7f2c1fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=26967)[0m     @     0x7f2c1fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=26967)[0m     @     0x7f2c20785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26967)[0m     @     0x7f2c207a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27008)[0m     @     0x7f2ab31b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27008)[0m     @     0x7f2ab31b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=27008)[0m     @     0x7f2ab31b6d91 at::TensorIterator::for_each()
[2m[36m(pid=27066)[0m     @     0x7f2100802d91 at::TensorIterator::for_each()
[2m[36m(pid=27066)[0m     @     0x7f21010e5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27066)[0m     @     0x7f2101108c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27066)[0m     @     0x7f21005aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27066)[0m     @     0x7f21005a8388 at::native::copy_impl()
[2m[36m(pid=27066)[0m     @     0x7f21005aa5a4 at::native::copy_()
[2m[36m(pid=27032)[0m     @     0x7fa6538ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27032)[0m     @     0x7fa653900c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27032)[0m     @     0x7fa652da2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27032)[0m     @     0x7fa652da0388 at::native::copy_impl()
[2m[36m(pid=27032)[0m     @     0x7fa652da25a4 at::native::copy_()
[2m[36m(pid=27007)[0m     @     0x7f03a83354f5 at::Tensor::copy_()
[2m[36m(pid=27007)[0m     @     0x7f03aa8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27007)[0m     @     0x7f03a83354f5 at::Tensor::copy_()
[2m[36m(pid=26957)[0m     @     0x7f62fda79d91 at::TensorIterator::for_each()
[2m[36m(pid=26957)[0m     @     0x7f62fe35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26957)[0m     @     0x7f62fe37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26957)[0m     @     0x7f62fd821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26957)[0m     @     0x7f62fd81f388 at::native::copy_impl()
[2m[36m(pid=26957)[0m     @     0x7f62fd8215a4 at::native::copy_()
[2m[36m(pid=26953)[0m     @     0x7f1d4ec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26953)[0m     @     0x7f1d4ec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26953)[0m     @     0x7f1d4e0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26953)[0m     @     0x7f1d4e0e9388 at::native::copy_impl()
[2m[36m(pid=26953)[0m     @     0x7f1d4e0eb5a4 at::native::copy_()
[2m[36m(pid=27027)[0m     @     0x7f0645e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27027)[0m     @     0x7f0645e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27027)[0m     @     0x7f06452faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27027)[0m     @     0x7f06452f8388 at::native::copy_impl()
[2m[36m(pid=27027)[0m     @     0x7f06452fa5a4 at::native::copy_()
[2m[36m(pid=26973)[0m     @     0x7ef70e37fd91 at::TensorIterator::for_each()
[2m[36m(pid=26973)[0m     @     0x7ef70ec62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26973)[0m     @     0x7ef70ec85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26973)[0m     @     0x7ef70e127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26973)[0m     @     0x7ef70e125388 at::native::copy_impl()
[2m[36m(pid=26973)[0m     @     0x7ef70e1275a4 at::native::copy_()
[2m[36m(pid=27011)[0m     @     0x7f80b31cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27011)[0m     @     0x7f80b31cd388 at::native::copy_impl()
[2m[36m(pid=27011)[0m     @     0x7f80b31cf5a4 at::native::copy_()
[2m[36m(pid=27011)[0m     @     0x7f80b38ba4f5 at::Tensor::copy_()
[2m[36m(pid=27011)[0m     @     0x7f80b5d8d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27087)[0m     @     0x7f8c96c3bd91 at::TensorIterator::for_each()
[2m[36m(pid=27087)[0m     @     0x7f8c9751eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27087)[0m     @     0x7f8c97541c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27087)[0m     @     0x7f8c969e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27087)[0m     @     0x7f8c969e1388 at::native::copy_impl()
[2m[36m(pid=27087)[0m     @     0x7f8c969e35a4 at::native::copy_()
[2m[36m(pid=27053)[0m     @     0x7f04be531ad3 at::TensorIterator::for_each()
[2m[36m(pid=27053)[0m     @     0x7f04be531d91 at::TensorIterator::for_each()
[2m[36m(pid=27053)[0m     @     0x7f04bee14b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27053)[0m     @     0x7f04bee37c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26965)[0m     @     0x7f901fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=26965)[0m     @     0x7f9020574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26965)[0m     @     0x7f9020597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26965)[0m     @     0x7f901fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26965)[0m     @     0x7f901fa37388 at::native::copy_impl()
[2m[36m(pid=26965)[0m     @     0x7f901fa395a4 at::native::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee2e5a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=27040)[0m     @     0x7eee2dccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=27040)[0m     @     0x7eee2dcd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26952)[0m     @     0x7faa5ea13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26952)[0m     @     0x7faa5e13e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26952)[0m     @     0x7faa5e1418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=26952)[0m     @     0x7faa5e141ad3 at::TensorIterator::for_each()
[2m[36m(pid=27004)[0m     @     0x7f5f19868d91 at::TensorIterator::for_each()
[2m[36m(pid=27004)[0m     @     0x7f5f1a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27004)[0m     @     0x7f5f1a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27004)[0m     @     0x7f5f19610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27004)[0m     @     0x7f5f1960e388 at::native::copy_impl()
[2m[36m(pid=27004)[0m     @     0x7f5f196105a4 at::native::copy_()
[2m[36m(pid=26974)[0m     @     0x7ed1f4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=26974)[0m     @     0x7ed1f580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26974)[0m     @     0x7ed1f582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26974)[0m     @     0x7ed1f4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26974)[0m     @     0x7ed1f4ccd388 at::native::copy_impl()
[2m[36m(pid=27025)[0m     @     0x7f29749b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27025)[0m     @     0x7f2973e55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27025)[0m     @     0x7f2973e53388 at::native::copy_impl()
[2m[36m(pid=27025)[0m     @     0x7f2973e555a4 at::native::copy_()
[2m[36m(pid=27025)[0m     @     0x7f29745404f5 at::Tensor::copy_()
[2m[36m(pid=27020)[0m     @     0x7f354adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27020)[0m     @     0x7f354adb2388 at::native::copy_impl()
[2m[36m(pid=27020)[0m     @     0x7f354adb45a4 at::native::copy_()
[2m[36m(pid=27020)[0m     @     0x7f354b49f4f5 at::Tensor::copy_()
[2m[36m(pid=27020)[0m     @     0x7f354d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27071)[0m     @     0x7f98890505a4 at::native::copy_()
[2m[36m(pid=27071)[0m     @     0x7f988973b4f5 at::Tensor::copy_()
[2m[36m(pid=27071)[0m     @     0x7f988bc0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26954)[0m     @     0x7f4d719cf5a4 at::native::copy_()
[2m[36m(pid=26954)[0m     @     0x7f4d720ba4f5 at::Tensor::copy_()
[2m[36m(pid=26954)[0m     @     0x7f4d7458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26954)[0m     @     0x7f4d720ba4f5 at::Tensor::copy_()
[2m[36m(pid=26981)[0m     @     0x7f3535c8f388 at::native::copy_impl()
[2m[36m(pid=26981)[0m     @     0x7f3535c915a4 at::native::copy_()
[2m[36m(pid=26981)[0m     @     0x7f353637c4f5 at::Tensor::copy_()
[2m[36m(pid=26981)[0m     @     0x7f353884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27052)[0m     @     0x7f17867efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27052)[0m     @     0x7f1785c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27052)[0m     @     0x7f1785c8f388 at::native::copy_impl()
[2m[36m(pid=27052)[0m     @     0x7f1785c915a4 at::native::copy_()
[2m[36m(pid=27052)[0m     @     0x7f178637c4f5 at::Tensor::copy_()
[2m[36m(pid=26975)[0m     @     0x7f690c9b5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26975)[0m     @     0x7f690c9b3388 at::native::copy_impl()
[2m[36m(pid=26975)[0m     @     0x7f690c9b55a4 at::native::copy_()
[2m[36m(pid=26975)[0m     @     0x7f690d0a04f5 at::Tensor::copy_()
[2m[36m(pid=26975)[0m     @     0x7f690f5738de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27070)[0m     @     0x7f8c9336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27070)[0m     @     0x55add9945fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27070)[0m     @     0x55add98a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x55add992bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27070)[0m     @     0x55add992ca20 method_vectorcall
[2m[36m(pid=27070)[0m     @     0x55add98a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x55add992bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27070)[0m     @     0x55add992c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27070)[0m     @     0x55add98a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x55add992bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27070)[0m     @     0x55add992c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27070)[0m     @     0x55add98a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x55add992bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27070)[0m     @     0x55add992c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27070)[0m     @     0x55add98a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27070)[0m     @     0x55add992bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27070)[0m     @     0x55add992c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27070)[0m     @     0x55add98a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x7f3c421d0388 at::native::copy_impl()
[2m[36m(pid=27050)[0m     @     0x7f3c421d25a4 at::native::copy_()
[2m[36m(pid=27050)[0m     @     0x7f3c428bd4f5 at::Tensor::copy_()
[2m[36m(pid=27050)[0m     @     0x7f3c44d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27050)[0m     @     0x7f3c428bd4f5 at::Tensor::copy_()
[2m[36m(pid=26960)[0m     @     0x7f2c8e1c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26960)[0m     @     0x7f2c8d669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26960)[0m     @     0x7f2c8d667388 at::native::copy_impl()
[2m[36m(pid=26960)[0m     @     0x7f2c8d6695a4 at::native::copy_()
[2m[36m(pid=26960)[0m     @     0x7f2c8dd544f5 at::Tensor::copy_()
[2m[36m(pid=26959)[0m     @     0x7ed03f5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26959)[0m     @     0x7ed03f5a1388 at::native::copy_impl()
[2m[36m(pid=26959)[0m     @     0x7ed03f5a35a4 at::native::copy_()
[2m[36m(pid=26959)[0m     @     0x7ed03fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=26959)[0m     @     0x7ed0421618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27014)[0m     @     0x7f92f8a3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27014)[0m     @     0x7f92f8a38388 at::native::copy_impl()
[2m[36m(pid=27014)[0m     @     0x7f92f8a3a5a4 at::native::copy_()
[2m[36m(pid=27014)[0m     @     0x7f92f91254f5 at::Tensor::copy_()
[2m[36m(pid=27014)[0m     @     0x7f92fb5f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26976)[0m     @     0x7fc5449b7388 at::native::copy_impl()
[2m[36m(pid=26976)[0m     @     0x7fc5449b95a4 at::native::copy_()
[2m[36m(pid=26976)[0m     @     0x7fc5450a44f5 at::Tensor::copy_()
[2m[36m(pid=26976)[0m     @     0x7fc5475778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27092)[0m     @     0x7f15a437a5a4 at::native::copy_()
[2m[36m(pid=27092)[0m     @     0x7f15a4a654f5 at::Tensor::copy_()
[2m[36m(pid=27092)[0m     @     0x7f15a6f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26984)[0m     @     0x7f1008bc8388 at::native::copy_impl()
[2m[36m(pid=26984)[0m     @     0x7f1008bca5a4 at::native::copy_()
[2m[36m(pid=26984)[0m     @     0x7f10092b54f5 at::Tensor::copy_()
[2m[36m(pid=26984)[0m     @     0x7f100b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27023)[0m     @     0x7f5c3d60e388 at::native::copy_impl()
[2m[36m(pid=27023)[0m     @     0x7f5c3d6105a4 at::native::copy_()
[2m[36m(pid=27023)[0m     @     0x7f5c3dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27023)[0m     @     0x7f5c401ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26978)[0m     @     0x7f734f2df388 at::native::copy_impl()
[2m[36m(pid=26978)[0m     @     0x7f734f2e15a4 at::native::copy_()
[2m[36m(pid=26978)[0m     @     0x7f734f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=26978)[0m     @     0x7f7351e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27077)[0m     @     0x7ee92e1384f5 at::Tensor::copy_()
[2m[36m(pid=27077)[0m     @     0x7ee9341e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27077)[0m     @     0x559ee5964fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27077)[0m     @     0x559ee58bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27077)[0m     @     0x559ee594abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27077)[0m     @     0x559ee594ba20 method_vectorcall
[2m[36m(pid=27077)[0m     @     0x559ee58bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27077)[0m     @     0x559ee594abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27077)[0m     @     0x559ee594b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27077)[0m     @     0x559ee58c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27077)[0m     @     0x559ee594abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27077)[0m     @     0x559ee594b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27077)[0m     @     0x559ee58c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27077)[0m     @     0x559ee594abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27077)[0m     @     0x559ee594b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27077)[0m     @     0x559ee58c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27077)[0m     @     0x559ee594abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27077)[0m     @     0x559ee594b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27077)[0m     @     0x559ee58c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x7ef426af3388 at::native::copy_impl()
[2m[36m(pid=26951)[0m     @     0x7ef426af55a4 at::native::copy_()
[2m[36m(pid=26951)[0m     @     0x7ef4271e04f5 at::Tensor::copy_()
[2m[36m(pid=26951)[0m     @     0x7ef4296b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26971)[0m     @     0x7f87d4bc8388 at::native::copy_impl()
[2m[36m(pid=26971)[0m     @     0x7f87d4bca5a4 at::native::copy_()
[2m[36m(pid=26971)[0m     @     0x7f87d52b54f5 at::Tensor::copy_()
[2m[36m(pid=26971)[0m     @     0x7f87d77888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27072)[0m     @     0x7f958d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27072)[0m     @     0x7f958d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=26966)[0m     @     0x7efbffc24d91 at::TensorIterator::for_each()
[2m[36m(pid=26966)[0m     @     0x7efc00507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26966)[0m     @     0x7efc0052ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26966)[0m     @     0x7efbff9cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26966)[0m     @     0x7efbff9ca388 at::native::copy_impl()
[2m[36m(pid=26962)[0m     @     0x7f62da07ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26962)[0m     @     0x7f62d9520a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26962)[0m     @     0x7f62d951e388 at::native::copy_impl()
[2m[36m(pid=26962)[0m     @     0x7f62d95205a4 at::native::copy_()
[2m[36m(pid=27033)[0m     @     0x7f607cafad91 at::TensorIterator::for_each()
[2m[36m(pid=27033)[0m     @     0x7f607d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27033)[0m     @     0x7f607d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27033)[0m     @     0x7f607c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27033)[0m     @     0x7f607c8a0388 at::native::copy_impl()
[2m[36m(pid=27067)[0m     @     0x7ee0e0f27d91 at::TensorIterator::for_each()
[2m[36m(pid=27067)[0m     @     0x7ee0e180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27067)[0m     @     0x7ee0e182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27067)[0m     @     0x7ee0e0ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27067)[0m     @     0x7ee0e0ccd388 at::native::copy_impl()
[2m[36m(pid=27073)[0m     @     0x7f0fda86ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27073)[0m     @     0x7f0fda86c388 at::native::copy_impl()
[2m[36m(pid=27073)[0m     @     0x7f0fda86e5a4 at::native::copy_()
[2m[36m(pid=26970)[0m     @     0x7f6f8794ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26970)[0m     @     0x7f6f8794a388 at::native::copy_impl()
[2m[36m(pid=26970)[0m     @     0x7f6f8794c5a4 at::native::copy_()
[2m[36m(pid=27057)[0m     @     0x7f06e02e85a4 at::native::copy_()
[2m[36m(pid=27057)[0m     @     0x7f06e09d34f5 at::Tensor::copy_()
[2m[36m(pid=27057)[0m     @     0x7f06e2ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27082)[0m     @     0x7f5d66edea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27082)[0m     @     0x7f5d66edc388 at::native::copy_impl()
[2m[36m(pid=27082)[0m     @     0x7f5d66ede5a4 at::native::copy_()
[2m[36m(pid=27082)[0m     @     0x7f5d675c94f5 at::Tensor::copy_()
[2m[36m(pid=27082)[0m     @     0x7f5d69a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27000)[0m     @     0x7f5f339f74f5 at::Tensor::copy_()
[2m[36m(pid=27000)[0m     @     0x7f5f35eca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27000)[0m     @     0x7f5f339f74f5 at::Tensor::copy_()
[2m[36m(pid=27000)[0m     @     0x7f5f39aa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27000)[0m     @     0x5579399bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27000)[0m     @     0x557939915b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27000)[0m     @     0x5579399a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27000)[0m     @     0x5579399a1a20 method_vectorcall
[2m[36m(pid=27000)[0m     @     0x557939915bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27000)[0m     @     0x5579399a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27000)[0m     @     0x5579399a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27000)[0m     @     0x557939916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27000)[0m     @     0x5579399a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27000)[0m     @     0x5579399a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27000)[0m     @     0x557939916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27000)[0m     @     0x5579399a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27000)[0m     @     0x5579399a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27000)[0m     @     0x557939916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27000)[0m     @     0x5579399a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27000)[0m     @     0x5579399a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27000)[0m     @     0x557939916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x7edbad868d91 at::TensorIterator::for_each()
[2m[36m(pid=27069)[0m     @     0x7edbae14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27069)[0m     @     0x7edbae16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27069)[0m     @     0x7edbad610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27069)[0m     @     0x7edbad60e388 at::native::copy_impl()
[2m[36m(pid=26999)[0m     @     0x7f59ff84ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26999)[0m     @     0x7f59ff84a388 at::native::copy_impl()
[2m[36m(pid=26999)[0m     @     0x7f59ff84c5a4 at::native::copy_()
[2m[36m(pid=26999)[0m     @     0x7f59fff374f5 at::Tensor::copy_()
[2m[36m(pid=26956)[0m     @     0x7f562c018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26956)[0m     @     0x7f562c016388 at::native::copy_impl()
[2m[36m(pid=26956)[0m     @     0x7f562c0185a4 at::native::copy_()
[2m[36m(pid=26956)[0m     @     0x7f562c7034f5 at::Tensor::copy_()
[2m[36m(pid=26956)[0m     @     0x7f562ebd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26979)[0m     @     0x7f090e5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26979)[0m     @     0x7f090e5f8388 at::native::copy_impl()
[2m[36m(pid=26979)[0m     @     0x7f090e5fa5a4 at::native::copy_()
[2m[36m(pid=26979)[0m     @     0x7f090ece54f5 at::Tensor::copy_()
[2m[36m(pid=26968)[0m     @     0x7f8c93aeda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26968)[0m     @     0x7f8c93aeb388 at::native::copy_impl()
[2m[36m(pid=26968)[0m     @     0x7f8c93aed5a4 at::native::copy_()
[2m[36m(pid=26968)[0m     @     0x7f8c941d84f5 at::Tensor::copy_()
[2m[36m(pid=26968)[0m     @     0x7f8c966ab8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26983)[0m     @     0x7f32daf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26983)[0m     @     0x7f32daf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26983)[0m     @     0x7f32da3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26983)[0m     @     0x7f32da3e7388 at::native::copy_impl()
[2m[36m(pid=26983)[0m     @     0x7f32da3e95a4 at::native::copy_()
[2m[36m(pid=27034)[0m     @     0x7f41fbc4a5a4 at::native::copy_()
[2m[36m(pid=27034)[0m     @     0x7f41fc3354f5 at::Tensor::copy_()
[2m[36m(pid=27034)[0m     @     0x7f41fe8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27034)[0m     @     0x7f41fc3354f5 at::Tensor::copy_()
[2m[36m(pid=26964)[0m     @     0x7f53974f25a4 at::native::copy_()
[2m[36m(pid=26964)[0m     @     0x7f5397bdd4f5 at::Tensor::copy_()
[2m[36m(pid=26964)[0m     @     0x7f539a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27046)[0m     @     0x7f50289b7388 at::native::copy_impl()
[2m[36m(pid=27046)[0m     @     0x7f50289b95a4 at::native::copy_()
[2m[36m(pid=27046)[0m     @     0x7f50290a44f5 at::Tensor::copy_()
[2m[36m(pid=27046)[0m     @     0x7f502b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26963)[0m     @     0x7f3ee4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=26963)[0m     @     0x7f3ee580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26963)[0m     @     0x7f3ee582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26963)[0m     @     0x7f3ee4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26963)[0m     @     0x7f3ee4ccd388 at::native::copy_impl()
[2m[36m(pid=26969)[0m     @     0x7f886ba37388 at::native::copy_impl()
[2m[36m(pid=26969)[0m     @     0x7f886ba395a4 at::native::copy_()
[2m[36m(pid=26969)[0m     @     0x7f886c1244f5 at::Tensor::copy_()
[2m[36m(pid=26969)[0m     @     0x7f886e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27062)[0m     @     0x7f4ee3a61d91 at::TensorIterator::for_each()
[2m[36m(pid=27062)[0m     @     0x7f4ee4344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27062)[0m     @     0x7f4ee4367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27062)[0m     @     0x7f4ee3809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27062)[0m     @     0x7f4ee3807388 at::native::copy_impl()
[2m[36m(pid=27062)[0m     @     0x7f4ee38095a4 at::native::copy_()
[2m[36m(pid=26958)[0m     @     0x7f2f2bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=26958)[0m     @     0x7f2f2e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26958)[0m     @     0x7f2f2bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=26958)[0m     @     0x7f2f31c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26958)[0m     @     0x55d1cfa86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26958)[0m     @     0x55d1cf9e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26958)[0m     @     0x55d1cfa6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26958)[0m     @     0x55d1cfa6da20 method_vectorcall
[2m[36m(pid=26958)[0m     @     0x55d1cf9e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26958)[0m     @     0x55d1cfa6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26958)[0m     @     0x55d1cfa6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26958)[0m     @     0x55d1cf9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26958)[0m     @     0x55d1cfa6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26958)[0m     @     0x55d1cfa6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26958)[0m     @     0x55d1cf9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26958)[0m     @     0x55d1cfa6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26958)[0m     @     0x55d1cfa6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26958)[0m     @     0x55d1cf9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26958)[0m     @     0x55d1cfa6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26958)[0m     @     0x55d1cfa6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26958)[0m     @     0x55d1cf9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x7f81eadea4f5 at::Tensor::copy_()
[2m[36m(pid=26955)[0m     @     0x7f81ed2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26955)[0m     @     0x7f81eadea4f5 at::Tensor::copy_()
[2m[36m(pid=26955)[0m     @     0x7f81f0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26955)[0m     @     0x5618ea343fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26955)[0m     @     0x5618ea29eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x5618ea329baf _PyEval_EvalCodeWithName
[2m[36m(pid=26955)[0m     @     0x5618ea32aa20 method_vectorcall
[2m[36m(pid=26955)[0m     @     0x5618ea29ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x5618ea329baf _PyEval_EvalCodeWithName
[2m[36m(pid=26955)[0m     @     0x5618ea32a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26955)[0m     @     0x5618ea29f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x5618ea329baf _PyEval_EvalCodeWithName
[2m[36m(pid=26955)[0m     @     0x5618ea32a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26955)[0m     @     0x5618ea29f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x5618ea329baf _PyEval_EvalCodeWithName
[2m[36m(pid=26955)[0m     @     0x5618ea32a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26955)[0m     @     0x5618ea29f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26955)[0m     @     0x5618ea329baf _PyEval_EvalCodeWithName
[2m[36m(pid=26955)[0m     @     0x5618ea32a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26955)[0m     @     0x5618ea29f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x7ee11b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26972)[0m     @     0x7ee11b807388 at::native::copy_impl()
[2m[36m(pid=26972)[0m     @     0x7ee11b8095a4 at::native::copy_()
[2m[36m(pid=26972)[0m     @     0x7ee11bef44f5 at::Tensor::copy_()
[2m[36m(pid=26972)[0m     @     0x7ee11e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27031)[0m     @     0x7ee1bd33f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=27031)[0m     @     0x7ee1bd33fad3 at::TensorIterator::for_each()
[2m[36m(pid=26967)[0m     @     0x7f2c1fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26967)[0m     @     0x7f2c1fc48388 at::native::copy_impl()
[2m[36m(pid=26967)[0m     @     0x7f2c1fc4a5a4 at::native::copy_()
[2m[36m(pid=26967)[0m     @     0x7f2c203354f5 at::Tensor::copy_()
[2m[36m(pid=26967)[0m     @     0x7f2c228088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27008)[0m     @     0x7f2ab3a99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27008)[0m     @     0x7f2ab3abcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27008)[0m     @     0x7f2ab2f5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27008)[0m     @     0x7f2ab2f5c388 at::native::copy_impl()
[2m[36m(pid=27008)[0m     @     0x7f2ab2f5e5a4 at::native::copy_()
[2m[36m(pid=27066)[0m     @     0x7f2100c954f5 at::Tensor::copy_()
[2m[36m(pid=27066)[0m     @     0x7f21031688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27066)[0m     @     0x7f2100c954f5 at::Tensor::copy_()
[2m[36m(pid=27066)[0m     @     0x7f2106d4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27066)[0m     @     0x55c984405fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27066)[0m     @     0x55c984360b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27066)[0m     @     0x55c9843ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27066)[0m     @     0x55c9843eca20 method_vectorcall
[2m[36m(pid=27066)[0m     @     0x55c984360bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27066)[0m     @     0x55c9843ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27066)[0m     @     0x55c9843ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27066)[0m     @     0x55c984361689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27066)[0m     @     0x55c9843ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27066)[0m     @     0x55c9843ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27066)[0m     @     0x55c984361689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27066)[0m     @     0x55c9843ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27066)[0m     @     0x55c9843ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27066)[0m     @     0x55c984361689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27066)[0m     @     0x55c9843ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27066)[0m     @     0x55c9843ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27066)[0m     @     0x55c984361689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x7fa65348d4f5 at::Tensor::copy_()
[2m[36m(pid=27032)[0m     @     0x7fa6559608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27032)[0m     @     0x7fa65348d4f5 at::Tensor::copy_()
[2m[36m(pid=27032)[0m     @     0x7fa66c28379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27032)[0m     @     0x55d4f4023fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27032)[0m     @     0x55d4f3f7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x55d4f4009baf _PyEval_EvalCodeWithName
[2m[36m(pid=27032)[0m     @     0x55d4f400aa20 method_vectorcall
[2m[36m(pid=27032)[0m     @     0x55d4f3f7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x55d4f4009baf _PyEval_EvalCodeWithName
[2m[36m(pid=27032)[0m     @     0x55d4f400a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27032)[0m     @     0x55d4f3f7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x55d4f4009baf _PyEval_EvalCodeWithName
[2m[36m(pid=27032)[0m     @     0x55d4f400a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27007)[0m     @     0x7f03ae3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27007)[0m     @     0x564f360cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27007)[0m     @     0x564f36029b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x564f360b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27007)[0m     @     0x564f360b5a20 method_vectorcall
[2m[36m(pid=27007)[0m     @     0x564f36029bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x564f360b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27007)[0m     @     0x564f360b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27007)[0m     @     0x564f3602a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x564f360b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27007)[0m     @     0x564f360b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27007)[0m     @     0x564f3602a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x564f360b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27007)[0m     @     0x564f360b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27007)[0m     @     0x564f3602a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27007)[0m     @     0x564f360b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27007)[0m     @     0x564f360b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27007)[0m     @     0x564f3602a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x7f62fdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=26957)[0m     @     0x7f63003df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26957)[0m     @     0x7f62fdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=26953)[0m     @     0x7f1d4e7d64f5 at::Tensor::copy_()
[2m[36m(pid=26953)[0m     @     0x7f1d50ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26953)[0m     @     0x7f1d4e7d64f5 at::Tensor::copy_()
[2m[36m(pid=26953)[0m     @     0x7f1d5447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27027)[0m     @     0x7f06459e54f5 at::Tensor::copy_()
[2m[36m(pid=27027)[0m     @     0x7f0647eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26973)[0m     @     0x7ef70e8124f5 at::Tensor::copy_()
[2m[36m(pid=26973)[0m     @     0x7ef710ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27011)[0m     @     0x7f80b38ba4f5 at::Tensor::copy_()
[2m[36m(pid=27011)[0m     @     0x7f80b996579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27011)[0m     @     0x5588d3e72fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27011)[0m     @     0x5588d3dcdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27011)[0m     @     0x5588d3e58baf _PyEval_EvalCodeWithName
[2m[36m(pid=27011)[0m     @     0x5588d3e59a20 method_vectorcall
[2m[36m(pid=27011)[0m     @     0x5588d3dcdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27011)[0m     @     0x5588d3e58baf _PyEval_EvalCodeWithName
[2m[36m(pid=27011)[0m     @     0x5588d3e59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27011)[0m     @     0x5588d3dce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27011)[0m     @     0x5588d3e58baf _PyEval_EvalCodeWithName
[2m[36m(pid=27011)[0m     @     0x5588d3e59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27011)[0m     @     0x5588d3dce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27011)[0m     @     0x5588d3e58baf _PyEval_EvalCodeWithName
[2m[36m(pid=27011)[0m     @     0x5588d3e59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27011)[0m     @     0x5588d3dce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27011)[0m     @     0x5588d3e58baf _PyEval_EvalCodeWithName
[2m[36m(pid=27011)[0m     @     0x5588d3e59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27011)[0m     @     0x5588d3dce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x7f8c970ce4f5 at::Tensor::copy_()
[2m[36m(pid=27087)[0m     @     0x7f8c995a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27053)[0m     @     0x7f04be2d9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27053)[0m     @     0x7f04be2d7388 at::native::copy_impl()
[2m[36m(pid=27053)[0m     @     0x7f04be2d95a4 at::native::copy_()
[2m[36m(pid=26965)[0m     @     0x7f90201244f5 at::Tensor::copy_()
[2m[36m(pid=26965)[0m     @     0x7f90225f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26965)[0m     @     0x7f90201244f5 at::Tensor::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee2dcd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=26952)[0m     @     0x7faa5e141d91 at::TensorIterator::for_each()
[2m[36m(pid=26952)[0m     @     0x7faa5ea24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26952)[0m     @     0x7faa5ea47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26952)[0m     @     0x7faa5dee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26952)[0m     @     0x7faa5dee7388 at::native::copy_impl()
[2m[36m(pid=27004)[0m     @     0x7f5f19cfb4f5 at::Tensor::copy_()
[2m[36m(pid=27004)[0m     @     0x7f5f1c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26974)[0m     @     0x7ed1f4ccf5a4 at::native::copy_()
[2m[36m(pid=26974)[0m     @     0x7ed1f53ba4f5 at::Tensor::copy_()
[2m[36m(pid=27025)[0m     @     0x7f2976a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27025)[0m     @     0x7f29745404f5 at::Tensor::copy_()
[2m[36m(pid=27025)[0m     @     0x7f297a5eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27025)[0m     @     0x56374b3fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27025)[0m     @     0x56374b356b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27025)[0m     @     0x56374b3e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27025)[0m     @     0x56374b3e2a20 method_vectorcall
[2m[36m(pid=27025)[0m     @     0x56374b356bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27025)[0m     @     0x56374b3e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27025)[0m     @     0x56374b3e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27025)[0m     @     0x56374b357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27025)[0m     @     0x56374b3e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27025)[0m     @     0x56374b3e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27025)[0m     @     0x56374b357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27025)[0m     @     0x56374b3e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27025)[0m     @     0x56374b3e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27025)[0m     @     0x56374b357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27025)[0m     @     0x56374b3e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27025)[0m     @     0x56374b3e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27025)[0m     @     0x56374b357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x7f354b49f4f5 at::Tensor::copy_()
[2m[36m(pid=27020)[0m     @     0x7f355154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27020)[0m     @     0x555b19eaafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27020)[0m     @     0x555b19e05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=27020)[0m     @     0x555b19e91a20 method_vectorcall
[2m[36m(pid=27020)[0m     @     0x555b19e05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=27020)[0m     @     0x555b19e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27071)[0m     @     0x7f988973b4f5 at::Tensor::copy_()
[2m[36m(pid=27071)[0m     @     0x7f988f7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27071)[0m     @     0x55cc62909fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27071)[0m     @     0x55cc62864b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x55cc628efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27071)[0m     @     0x55cc628f0a20 method_vectorcall
[2m[36m(pid=27071)[0m     @     0x55cc62864bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x55cc628efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27071)[0m     @     0x55cc628f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27071)[0m     @     0x55cc62865689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x55cc628efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27071)[0m     @     0x55cc628f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27071)[0m     @     0x55cc62865689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x55cc628efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27071)[0m     @     0x55cc628f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27071)[0m     @     0x55cc62865689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27071)[0m     @     0x55cc628efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27071)[0m     @     0x55cc628f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27071)[0m     @     0x55cc62865689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x7f4d7816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26954)[0m     @     0x5556644cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26954)[0m     @     0x55566442ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x5556644b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26954)[0m     @     0x5556644b6a20 method_vectorcall
[2m[36m(pid=26954)[0m     @     0x55566442abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x5556644b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26954)[0m     @     0x5556644b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26954)[0m     @     0x55566442b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x5556644b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26954)[0m     @     0x5556644b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26954)[0m     @     0x55566442b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x5556644b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26954)[0m     @     0x5556644b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26954)[0m     @     0x55566442b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26954)[0m     @     0x5556644b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26954)[0m     @     0x5556644b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26954)[0m     @     0x55566442b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x7f353637c4f5 at::Tensor::copy_()
[2m[36m(pid=26981)[0m     @     0x7f353c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26981)[0m     @     0x562d3a9fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26981)[0m     @     0x562d3a955b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x562d3a9e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26981)[0m     @     0x562d3a9e1a20 method_vectorcall
[2m[36m(pid=26981)[0m     @     0x562d3a955bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x562d3a9e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26981)[0m     @     0x562d3a9e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26981)[0m     @     0x562d3a956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x562d3a9e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26981)[0m     @     0x562d3a9e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26981)[0m     @     0x562d3a956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x562d3a9e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26981)[0m     @     0x562d3a9e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26981)[0m     @     0x562d3a956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26981)[0m     @     0x562d3a9e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26981)[0m     @     0x562d3a9e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26981)[0m     @     0x562d3a956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x7f178884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27052)[0m     @     0x7f178637c4f5 at::Tensor::copy_()
[2m[36m(pid=27052)[0m     @     0x7f178c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27052)[0m     @     0x560fb901efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27052)[0m     @     0x560fb8f79b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9004baf _PyEval_EvalCodeWithName
[2m[36m(pid=27052)[0m     @     0x560fb9005a20 method_vectorcall
[2m[36m(pid=27052)[0m     @     0x560fb8f79bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9004baf _PyEval_EvalCodeWithName
[2m[36m(pid=27052)[0m     @     0x560fb9005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27052)[0m     @     0x560fb8f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9004baf _PyEval_EvalCodeWithName
[2m[36m(pid=27052)[0m     @     0x560fb9005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27052)[0m     @     0x560fb8f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9004baf _PyEval_EvalCodeWithName
[2m[36m(pid=27052)[0m     @     0x560fb9005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27052)[0m     @     0x560fb8f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9004baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x7f690d0a04f5 at::Tensor::copy_()
[2m[36m(pid=26975)[0m     @     0x7f691314b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26975)[0m     @     0x55738430bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26975)[0m     @     0x557384266b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26975)[0m     @     0x5573842f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x5573842f2a20 method_vectorcall
[2m[36m(pid=26975)[0m     @     0x557384266bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26975)[0m     @     0x5573842f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x5573842f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26975)[0m     @     0x557384267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26975)[0m     @     0x5573842f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x5573842f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26975)[0m     @     0x557384267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26975)[0m     @     0x5573842f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x5573842f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26975)[0m     @     0x557384267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26975)[0m     @     0x5573842f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26975)[0m     @     0x5573842f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26975)[0m     @     0x557384267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x7f3c4896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27050)[0m     @     0x5592d800afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27050)[0m     @     0x5592d7f65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x5592d7ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27050)[0m     @     0x5592d7ff1a20 method_vectorcall
[2m[36m(pid=27050)[0m     @     0x5592d7f65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x5592d7ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27050)[0m     @     0x5592d7ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27050)[0m     @     0x5592d7f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x5592d7ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27050)[0m     @     0x5592d7ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27050)[0m     @     0x5592d7f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x5592d7ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27050)[0m     @     0x5592d7ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27050)[0m     @     0x5592d7f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27050)[0m     @     0x5592d7ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27050)[0m     @     0x5592d7ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27050)[0m     @     0x5592d7f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x7f2c902278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26960)[0m     @     0x7f2c8dd544f5 at::Tensor::copy_()
[2m[36m(pid=26960)[0m     @     0x7f2c93dff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26960)[0m     @     0x56276b45ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26960)[0m     @     0x56276b3bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b445baf _PyEval_EvalCodeWithName
[2m[36m(pid=26960)[0m     @     0x56276b446a20 method_vectorcall
[2m[36m(pid=26959)[0m     @     0x7ed03fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=26959)[0m     @     0x7ed045d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26959)[0m     @     0x55fa96f57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26959)[0m     @     0x55fa96eb2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26959)[0m     @     0x55fa96f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26959)[0m     @     0x55fa96f3ea20 method_vectorcall
[2m[36m(pid=26959)[0m     @     0x55fa96eb2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26959)[0m     @     0x55fa96f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26959)[0m     @     0x55fa96f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26959)[0m     @     0x55fa96eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26959)[0m     @     0x55fa96f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26959)[0m     @     0x55fa96f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26959)[0m     @     0x55fa96eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26959)[0m     @     0x55fa96f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26959)[0m     @     0x55fa96f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26959)[0m     @     0x55fa96eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26959)[0m     @     0x55fa96f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26959)[0m     @     0x55fa96f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26959)[0m     @     0x55fa96eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x7f92f91254f5 at::Tensor::copy_()
[2m[36m(pid=27014)[0m     @     0x7f92ff1d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27014)[0m     @     0x55be8f624fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27014)[0m     @     0x55be8f57fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x55be8f60abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27014)[0m     @     0x55be8f60ba20 method_vectorcall
[2m[36m(pid=27014)[0m     @     0x55be8f57fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x55be8f60abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27014)[0m     @     0x55be8f60b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27014)[0m     @     0x55be8f580689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x55be8f60abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27014)[0m     @     0x55be8f60b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27014)[0m     @     0x55be8f580689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x55be8f60abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27014)[0m     @     0x55be8f60b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27014)[0m     @     0x55be8f580689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27014)[0m     @     0x55be8f60abaf _PyEval_EvalCodeWithName
[2m[36m(pid=27014)[0m     @     0x55be8f60b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27014)[0m     @     0x55be8f580689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x7fc5450a44f5 at::Tensor::copy_()
[2m[36m(pid=26976)[0m     @     0x7fc54b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26976)[0m     @     0x5579628f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26976)[0m     @     0x557962851b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x5579628dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26976)[0m     @     0x5579628dda20 method_vectorcall
[2m[36m(pid=26976)[0m     @     0x557962851bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x5579628dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26976)[0m     @     0x5579628dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26976)[0m     @     0x557962852689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x5579628dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26976)[0m     @     0x5579628dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26976)[0m     @     0x557962852689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x5579628dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26976)[0m     @     0x5579628dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26976)[0m     @     0x557962852689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26976)[0m     @     0x5579628dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26976)[0m     @     0x5579628dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26976)[0m     @     0x557962852689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x7f15a4a654f5 at::Tensor::copy_()
[2m[36m(pid=27092)[0m     @     0x7f15aab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27092)[0m     @     0x55fa44d98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27092)[0m     @     0x55fa44cf3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x55fa44d7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27092)[0m     @     0x55fa44d7fa20 method_vectorcall
[2m[36m(pid=27092)[0m     @     0x55fa44cf3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x55fa44d7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27092)[0m     @     0x55fa44d7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27092)[0m     @     0x55fa44cf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x55fa44d7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27092)[0m     @     0x55fa44d7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27092)[0m     @     0x55fa44cf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x55fa44d7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27092)[0m     @     0x55fa44d7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27092)[0m     @     0x55fa44cf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27092)[0m     @     0x55fa44d7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27092)[0m     @     0x55fa44d7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27092)[0m     @     0x55fa44cf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x7f10092b54f5 at::Tensor::copy_()
[2m[36m(pid=26984)[0m     @     0x7f100f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26984)[0m     @     0x5646b580bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26984)[0m     @     0x5646b5766b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x5646b57f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26984)[0m     @     0x5646b57f2a20 method_vectorcall
[2m[36m(pid=26984)[0m     @     0x5646b5766bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x5646b57f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26984)[0m     @     0x5646b57f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26984)[0m     @     0x5646b5767689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x5646b57f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26984)[0m     @     0x5646b57f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26984)[0m     @     0x5646b5767689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x5646b57f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26984)[0m     @     0x5646b57f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26984)[0m     @     0x5646b5767689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26984)[0m     @     0x5646b57f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26984)[0m     @     0x5646b57f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26984)[0m     @     0x5646b5767689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x7f5c3dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27023)[0m     @     0x7f5c43da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27023)[0m     @     0x564c2d2c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27023)[0m     @     0x564c2d221b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x564c2d2acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27023)[0m     @     0x564c2d2ada20 method_vectorcall
[2m[36m(pid=27023)[0m     @     0x564c2d221bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x564c2d2acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27023)[0m     @     0x564c2d2ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27023)[0m     @     0x564c2d222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x564c2d2acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27023)[0m     @     0x564c2d2ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27023)[0m     @     0x564c2d222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x564c2d2acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27023)[0m     @     0x564c2d2ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27023)[0m     @     0x564c2d222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27023)[0m     @     0x564c2d2acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27023)[0m     @     0x564c2d2ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27023)[0m     @     0x564c2d222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x7f734f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=26978)[0m     @     0x7f7355a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26978)[0m     @     0x55fdee82cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26978)[0m     @     0x55fdee787b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x55fdee812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26978)[0m     @     0x55fdee813a20 method_vectorcall
[2m[36m(pid=26978)[0m     @     0x55fdee787bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x55fdee812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26978)[0m     @     0x55fdee813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26978)[0m     @     0x55fdee788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x55fdee812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26978)[0m     @     0x55fdee813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26978)[0m     @     0x55fdee788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x55fdee812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26978)[0m     @     0x55fdee813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26978)[0m     @     0x55fdee788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26978)[0m     @     0x55fdee812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26978)[0m     @     0x55fdee813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26978)[0m     @     0x55fdee788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x7ef4271e04f5 at::Tensor::copy_()
[2m[36m(pid=26951)[0m     @     0x7ef42d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26951)[0m     @     0x55579411bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26951)[0m     @     0x555794076b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x555794101baf _PyEval_EvalCodeWithName
[2m[36m(pid=26951)[0m     @     0x555794102a20 method_vectorcall
[2m[36m(pid=26951)[0m     @     0x555794076bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x555794101baf _PyEval_EvalCodeWithName
[2m[36m(pid=26951)[0m     @     0x555794102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26951)[0m     @     0x555794077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x555794101baf _PyEval_EvalCodeWithName
[2m[36m(pid=26951)[0m     @     0x555794102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26951)[0m     @     0x555794077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x555794101baf _PyEval_EvalCodeWithName
[2m[36m(pid=26951)[0m     @     0x555794102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26951)[0m     @     0x555794077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26951)[0m     @     0x555794101baf _PyEval_EvalCodeWithName
[2m[36m(pid=26951)[0m     @     0x555794102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26951)[0m     @     0x555794077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x7f87d52b54f5 at::Tensor::copy_()
[2m[36m(pid=26971)[0m     @     0x7f87db36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26971)[0m     @     0x55711f37bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26971)[0m     @     0x55711f2d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x55711f361baf _PyEval_EvalCodeWithName
[2m[36m(pid=26971)[0m     @     0x55711f362a20 method_vectorcall
[2m[36m(pid=26971)[0m     @     0x55711f2d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x55711f361baf _PyEval_EvalCodeWithName
[2m[36m(pid=26971)[0m     @     0x55711f362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26971)[0m     @     0x55711f2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x55711f361baf _PyEval_EvalCodeWithName
[2m[36m(pid=26971)[0m     @     0x55711f362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26971)[0m     @     0x55711f2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x55711f361baf _PyEval_EvalCodeWithName
[2m[36m(pid=26971)[0m     @     0x55711f362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26971)[0m     @     0x55711f2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26971)[0m     @     0x55711f361baf _PyEval_EvalCodeWithName
[2m[36m(pid=26971)[0m     @     0x55711f362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26971)[0m     @     0x55711f2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x7f958d868d91 at::TensorIterator::for_each()
[2m[36m(pid=27072)[0m     @     0x7f958e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27072)[0m     @     0x7f958e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27072)[0m     @     0x7f958d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27072)[0m     @     0x7f958d60e388 at::native::copy_impl()
[2m[36m(pid=26966)[0m     @     0x7efbff9cc5a4 at::native::copy_()
[2m[36m(pid=26966)[0m     @     0x7efc000b74f5 at::Tensor::copy_()
[2m[36m(pid=26966)[0m     @     0x7efc0258a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26962)[0m     @     0x7f62d9c0b4f5 at::Tensor::copy_()
[2m[36m(pid=26962)[0m     @     0x7f62dc0de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26962)[0m     @     0x7f62d9c0b4f5 at::Tensor::copy_()
[2m[36m(pid=26962)[0m     @     0x7f62dfcb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26962)[0m     @     0x558aba9c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26962)[0m     @     0x558aba91bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26962)[0m     @     0x558aba9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26962)[0m     @     0x558aba9a7a20 method_vectorcall
[2m[36m(pid=26962)[0m     @     0x558aba91bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26962)[0m     @     0x558aba9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26962)[0m     @     0x558aba9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26962)[0m     @     0x558aba91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26962)[0m     @     0x558aba9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26962)[0m     @     0x558aba9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26962)[0m     @     0x558aba91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26962)[0m     @     0x558aba9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26962)[0m     @     0x558aba9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26962)[0m     @     0x558aba91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26962)[0m     @     0x558aba9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26962)[0m     @     0x558aba9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26962)[0m     @     0x558aba91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x7f607c8a25a4 at::native::copy_()
[2m[36m(pid=27033)[0m     @     0x7f607cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=27033)[0m     @     0x7f607f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27067)[0m     @     0x7ee0e0ccf5a4 at::native::copy_()
[2m[36m(pid=27073)[0m     @     0x7f0fdaf594f5 at::Tensor::copy_()
[2m[36m(pid=27073)[0m     @     0x7f0fdd42c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27073)[0m     @     0x7f0fdaf594f5 at::Tensor::copy_()
[2m[36m(pid=27073)[0m     @     0x7f0fe100479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27073)[0m     @     0x5633abe31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27073)[0m     @     0x5633abd8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27073)[0m     @     0x5633abe17baf _PyEval_EvalCodeWithName
[2m[36m(pid=27073)[0m     @     0x5633abe18a20 method_vectorcall
[2m[36m(pid=27073)[0m     @     0x5633abd8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27073)[0m     @     0x5633abe17baf _PyEval_EvalCodeWithName
[2m[36m(pid=27073)[0m     @     0x5633abe18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27073)[0m     @     0x5633abd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27073)[0m     @     0x5633abe17baf _PyEval_EvalCodeWithName
[2m[36m(pid=27073)[0m     @     0x5633abe18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27073)[0m     @     0x5633abd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27073)[0m     @     0x5633abe17baf _PyEval_EvalCodeWithName
[2m[36m(pid=27073)[0m     @     0x5633abe18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27073)[0m     @     0x5633abd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27073)[0m     @     0x5633abe17baf _PyEval_EvalCodeWithName
[2m[36m(pid=27073)[0m     @     0x5633abe18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27073)[0m     @     0x5633abd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x7f6f880374f5 at::Tensor::copy_()
[2m[36m(pid=26970)[0m     @     0x7f6f8a50a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26970)[0m     @     0x7f6f880374f5 at::Tensor::copy_()
[2m[36m(pid=26970)[0m     @     0x7f6f8e0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27057)[0m     @     0x7f06e09d34f5 at::Tensor::copy_()
[2m[36m(pid=27057)[0m     @     0x7f06e6a7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27057)[0m     @     0x556b1642cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27057)[0m     @     0x556b16387b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27057)[0m     @     0x556b16412baf _PyEval_EvalCodeWithName
[2m[36m(pid=27057)[0m     @     0x556b16413a20 method_vectorcall
[2m[36m(pid=27057)[0m     @     0x556b16387bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27057)[0m     @     0x556b16412baf _PyEval_EvalCodeWithName
[2m[36m(pid=27057)[0m     @     0x556b16413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27057)[0m     @     0x556b16388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27057)[0m     @     0x556b16412baf _PyEval_EvalCodeWithName
[2m[36m(pid=27057)[0m     @     0x556b16413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27057)[0m     @     0x556b16388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27057)[0m     @     0x556b16412baf _PyEval_EvalCodeWithName
[2m[36m(pid=27057)[0m     @     0x556b16413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27057)[0m     @     0x556b16388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27057)[0m     @     0x556b16412baf _PyEval_EvalCodeWithName
[2m[36m(pid=27057)[0m     @     0x556b16413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27057)[0m     @     0x556b16388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x7f5d675c94f5 at::Tensor::copy_()
[2m[36m(pid=27082)[0m     @     0x7f5d6d67479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27082)[0m     @     0x55ef95da3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27082)[0m     @     0x55ef95cfeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d89baf _PyEval_EvalCodeWithName
[2m[36m(pid=27082)[0m     @     0x55ef95d8aa20 method_vectorcall
[2m[36m(pid=27082)[0m     @     0x55ef95cfebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d89baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x7edbad6105a4 at::native::copy_()
[2m[36m(pid=26999)[0m     @     0x7f5a0240a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26999)[0m     @     0x7f59fff374f5 at::Tensor::copy_()
[2m[36m(pid=26999)[0m     @     0x7f5a05fe279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26956)[0m     @     0x7f562c7034f5 at::Tensor::copy_()
[2m[36m(pid=26956)[0m     @     0x7f56327ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26956)[0m     @     0x555a73e15fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26956)[0m     @     0x555a73d70b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73dfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26956)[0m     @     0x555a73dfca20 method_vectorcall
[2m[36m(pid=26956)[0m     @     0x555a73d70bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73dfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26956)[0m     @     0x555a73dfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26956)[0m     @     0x555a73d71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73dfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26956)[0m     @     0x555a73dfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26956)[0m     @     0x555a73d71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73dfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26956)[0m     @     0x555a73dfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26956)[0m     @     0x555a73d71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73dfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26956)[0m     @     0x555a73dfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26979)[0m     @     0x7f09111b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26979)[0m     @     0x7f090ece54f5 at::Tensor::copy_()
[2m[36m(pid=26979)[0m     @     0x7f0914d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26979)[0m     @     0x55e94328dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26979)[0m     @     0x55e9431e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26979)[0m     @     0x55e943273baf _PyEval_EvalCodeWithName
[2m[36m(pid=26979)[0m     @     0x55e943274a20 method_vectorcall
[2m[36m(pid=26979)[0m     @     0x55e9431e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26979)[0m     @     0x55e943273baf _PyEval_EvalCodeWithName
[2m[36m(pid=26979)[0m     @     0x55e943274643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26979)[0m     @     0x55e9431e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26979)[0m     @     0x55e943273baf _PyEval_EvalCodeWithName
[2m[36m(pid=26979)[0m     @     0x55e943274643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26979)[0m     @     0x55e9431e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x7f8c941d84f5 at::Tensor::copy_()
[2m[36m(pid=26968)[0m     @     0x7f8c9a28379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26968)[0m     @     0x55ded4006fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26968)[0m     @     0x55ded3f61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x55ded3fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26968)[0m     @     0x55ded3feda20 method_vectorcall
[2m[36m(pid=26968)[0m     @     0x55ded3f61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x55ded3fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26968)[0m     @     0x55ded3fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26968)[0m     @     0x55ded3f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x55ded3fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26968)[0m     @     0x55ded3fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26968)[0m     @     0x55ded3f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x55ded3fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26968)[0m     @     0x55ded3fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26968)[0m     @     0x55ded3f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26968)[0m     @     0x55ded3fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26968)[0m     @     0x55ded3fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26968)[0m     @     0x55ded3f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x7f32daad44f5 at::Tensor::copy_()
[2m[36m(pid=26983)[0m     @     0x7f32dcfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26964)[0m     @     0x7f5397bdd4f5 at::Tensor::copy_()
[2m[36m(pid=26964)[0m     @     0x7f539dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26964)[0m     @     0x5646e4e6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26964)[0m     @     0x5646e4dc6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26964)[0m     @     0x5646e4e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=26964)[0m     @     0x5646e4e52a20 method_vectorcall
[2m[36m(pid=26964)[0m     @     0x5646e4dc6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26964)[0m     @     0x5646e4e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=26964)[0m     @     0x5646e4e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26964)[0m     @     0x5646e4dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26964)[0m     @     0x5646e4e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=26964)[0m     @     0x5646e4e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26964)[0m     @     0x5646e4dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26964)[0m     @     0x5646e4e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=26964)[0m     @     0x5646e4e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26964)[0m     @     0x5646e4dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26964)[0m     @     0x5646e4e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=26964)[0m     @     0x5646e4e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26964)[0m     @     0x5646e4dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x7f50290a44f5 at::Tensor::copy_()
[2m[36m(pid=27046)[0m     @     0x7f502f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27046)[0m     @     0x55a5dfe07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27046)[0m     @     0x55a5dfd62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x55a5dfdedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27046)[0m     @     0x55a5dfdeea20 method_vectorcall
[2m[36m(pid=27046)[0m     @     0x55a5dfd62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x55a5dfdedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27046)[0m     @     0x55a5dfdee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27046)[0m     @     0x55a5dfd63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x55a5dfdedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27046)[0m     @     0x55a5dfdee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27046)[0m     @     0x55a5dfd63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x55a5dfdedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27046)[0m     @     0x55a5dfdee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27046)[0m     @     0x55a5dfd63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27046)[0m     @     0x55a5dfdedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27046)[0m     @     0x55a5dfdee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27046)[0m     @     0x55a5dfd63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x7f3ee4ccf5a4 at::native::copy_()
[2m[36m(pid=26963)[0m     @     0x7f3ee53ba4f5 at::Tensor::copy_()
[2m[36m(pid=26969)[0m     @     0x7f886c1244f5 at::Tensor::copy_()
[2m[36m(pid=26969)[0m     @     0x7f88721cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26969)[0m     @     0x557ac1e51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26969)[0m     @     0x557ac1dacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26969)[0m     @     0x557ac1e37baf _PyEval_EvalCodeWithName
[2m[36m(pid=26969)[0m     @     0x557ac1e38a20 method_vectorcall
[2m[36m(pid=26969)[0m     @     0x557ac1dacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26969)[0m     @     0x557ac1e37baf _PyEval_EvalCodeWithName
[2m[36m(pid=26969)[0m     @     0x557ac1e38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26969)[0m     @     0x557ac1dad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26969)[0m     @     0x557ac1e37baf _PyEval_EvalCodeWithName
[2m[36m(pid=26969)[0m     @     0x557ac1e38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26969)[0m     @     0x557ac1dad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26969)[0m     @     0x557ac1e37baf _PyEval_EvalCodeWithName
[2m[36m(pid=26969)[0m     @     0x557ac1e38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26969)[0m     @     0x557ac1dad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26969)[0m     @     0x557ac1e37baf _PyEval_EvalCodeWithName
[2m[36m(pid=26969)[0m     @     0x557ac1e38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26969)[0m     @     0x557ac1dad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x7f4ee3ef44f5 at::Tensor::copy_()
[2m[36m(pid=27062)[0m     @     0x7f4ee63c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26972)[0m     @     0x7ee11bef44f5 at::Tensor::copy_()
[2m[36m(pid=26972)[0m     @     0x7ee121f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26972)[0m     @     0x5615aaac7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26972)[0m     @     0x5615aaa22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x5615aaaadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26972)[0m     @     0x5615aaaaea20 method_vectorcall
[2m[36m(pid=26972)[0m     @     0x5615aaa22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x5615aaaadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26972)[0m     @     0x5615aaaae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26972)[0m     @     0x5615aaa23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x5615aaaadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26972)[0m     @     0x5615aaaae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26972)[0m     @     0x5615aaa23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x5615aaaadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26972)[0m     @     0x5615aaaae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26972)[0m     @     0x5615aaa23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26972)[0m     @     0x5615aaaadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26972)[0m     @     0x5615aaaae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26972)[0m     @     0x5615aaa23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x7ee1bd33fd91 at::TensorIterator::for_each()
[2m[36m(pid=26967)[0m     @     0x7f2c203354f5 at::Tensor::copy_()
[2m[36m(pid=26967)[0m     @     0x7f2c263e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26967)[0m     @     0x562908ffffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26967)[0m     @     0x562908f5ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26967)[0m     @     0x562908fe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26967)[0m     @     0x562908fe6a20 method_vectorcall
[2m[36m(pid=26967)[0m     @     0x562908f5abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26967)[0m     @     0x562908fe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26967)[0m     @     0x562908fe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26967)[0m     @     0x562908f5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26967)[0m     @     0x562908fe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26967)[0m     @     0x562908fe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26967)[0m     @     0x562908f5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26967)[0m     @     0x562908fe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26967)[0m     @     0x562908fe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26967)[0m     @     0x562908f5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26967)[0m     @     0x562908fe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26967)[0m     @     0x562908fe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26967)[0m     @     0x562908f5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x7f2ab36494f5 at::Tensor::copy_()
[2m[36m(pid=27008)[0m     @     0x7f2ab5b1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27008)[0m     @     0x7f2ab36494f5 at::Tensor::copy_()
[2m[36m(pid=27008)[0m     @     0x7f2ab96f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27008)[0m     @     0x55a060947fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27008)[0m     @     0x55a0608a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x55a06092dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27008)[0m     @     0x55a06092ea20 method_vectorcall
[2m[36m(pid=27032)[0m     @     0x55d4f3f7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x55d4f4009baf _PyEval_EvalCodeWithName
[2m[36m(pid=27032)[0m     @     0x55d4f400a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27032)[0m     @     0x55d4f3f7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27032)[0m     @     0x55d4f4009baf _PyEval_EvalCodeWithName
[2m[36m(pid=27032)[0m     @     0x55d4f400a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27032)[0m     @     0x55d4f3f7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x7f6303fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26957)[0m     @     0x561864ac9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26957)[0m     @     0x561864a24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x561864aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26957)[0m     @     0x561864ab0a20 method_vectorcall
[2m[36m(pid=26957)[0m     @     0x561864a24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x561864aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26957)[0m     @     0x561864ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26957)[0m     @     0x561864a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x561864aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26957)[0m     @     0x561864ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26957)[0m     @     0x561864a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x561864aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26957)[0m     @     0x561864ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26957)[0m     @     0x561864a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26957)[0m     @     0x561864aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26957)[0m     @     0x561864ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26957)[0m     @     0x561864a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b2019fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26953)[0m     @     0x5610b1f74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b1fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26953)[0m     @     0x5610b2000a20 method_vectorcall
[2m[36m(pid=26953)[0m     @     0x5610b1f74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b1fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26953)[0m     @     0x5610b2000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26953)[0m     @     0x5610b1f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b1fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26953)[0m     @     0x5610b2000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26953)[0m     @     0x5610b1f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b1fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26953)[0m     @     0x5610b2000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26953)[0m     @     0x5610b1f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26953)[0m     @     0x5610b1fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26953)[0m     @     0x5610b2000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26953)[0m     @     0x5610b1f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x7f06459e54f5 at::Tensor::copy_()
[2m[36m(pid=27027)[0m     @     0x7f064ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27027)[0m     @     0x55b7ecd86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27027)[0m     @     0x55b7ecce1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x55b7ecd6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27027)[0m     @     0x55b7ecd6da20 method_vectorcall
[2m[36m(pid=27027)[0m     @     0x55b7ecce1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x55b7ecd6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27027)[0m     @     0x55b7ecd6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27027)[0m     @     0x55b7ecce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x55b7ecd6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27027)[0m     @     0x55b7ecd6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27027)[0m     @     0x55b7ecce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x55b7ecd6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27027)[0m     @     0x55b7ecd6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27027)[0m     @     0x55b7ecce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27027)[0m     @     0x55b7ecd6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27027)[0m     @     0x55b7ecd6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27027)[0m     @     0x55b7ecce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x7ef70e8124f5 at::Tensor::copy_()
[2m[36m(pid=26973)[0m     @     0x7ef7148bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26973)[0m     @     0x563093fdefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26973)[0m     @     0x563093f39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x563093fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26973)[0m     @     0x563093fc5a20 method_vectorcall
[2m[36m(pid=26973)[0m     @     0x563093f39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x563093fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26973)[0m     @     0x563093fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26973)[0m     @     0x563093f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x563093fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26973)[0m     @     0x563093fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26973)[0m     @     0x563093f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x563093fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26973)[0m     @     0x563093fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26973)[0m     @     0x563093f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26973)[0m     @     0x563093fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26973)[0m     @     0x563093fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26973)[0m     @     0x563093f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x7f8c970ce4f5 at::Tensor::copy_()
[2m[36m(pid=27087)[0m     @     0x7f8c9d17979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27087)[0m     @     0x55606af0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27087)[0m     @     0x55606ae65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x55606aef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27087)[0m     @     0x55606aef1a20 method_vectorcall
[2m[36m(pid=27087)[0m     @     0x55606ae65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x55606aef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27087)[0m     @     0x55606aef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27087)[0m     @     0x55606ae66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x55606aef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27087)[0m     @     0x55606aef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27087)[0m     @     0x55606ae66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x55606aef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27087)[0m     @     0x55606aef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27087)[0m     @     0x55606ae66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27087)[0m     @     0x55606aef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=27087)[0m     @     0x55606aef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27087)[0m     @     0x55606ae66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x7f04be9c44f5 at::Tensor::copy_()
[2m[36m(pid=27053)[0m     @     0x7f04c0e978de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27053)[0m     @     0x7f04be9c44f5 at::Tensor::copy_()
[2m[36m(pid=27053)[0m     @     0x7f04c4a6f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27053)[0m     @     0x55d53a4effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27053)[0m     @     0x55d53a44ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x55d53a4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=27053)[0m     @     0x55d53a4d6a20 method_vectorcall
[2m[36m(pid=27053)[0m     @     0x55d53a44abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x55d53a4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=27053)[0m     @     0x55d53a4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27053)[0m     @     0x55d53a44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x55d53a4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=27053)[0m     @     0x55d53a4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27053)[0m     @     0x55d53a44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x55d53a4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=27053)[0m     @     0x55d53a4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27053)[0m     @     0x55d53a44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27053)[0m     @     0x55d53a4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=27053)[0m     @     0x55d53a4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27053)[0m     @     0x55d53a44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x7f90261cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26965)[0m     @     0x557e14ecffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26965)[0m     @     0x557e14e2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x557e14eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26965)[0m     @     0x557e14eb6a20 method_vectorcall
[2m[36m(pid=26965)[0m     @     0x557e14e2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x557e14eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26965)[0m     @     0x557e14eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26965)[0m     @     0x557e14e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x557e14eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26965)[0m     @     0x557e14eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26965)[0m     @     0x557e14e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x557e14eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26965)[0m     @     0x557e14eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26965)[0m     @     0x557e14e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26965)[0m     @     0x557e14eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26965)[0m     @     0x557e14eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26965)[0m     @     0x557e14e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x7eee2dcd2d91 at::TensorIterator::for_each()
[2m[36m(pid=27040)[0m     @     0x7eee2e5b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27040)[0m     @     0x7eee2e5d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26952)[0m     @     0x7faa5dee95a4 at::native::copy_()
[2m[36m(pid=26952)[0m     @     0x7faa5e5d44f5 at::Tensor::copy_()
[2m[36m(pid=26952)[0m     @     0x7faa60aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27004)[0m     @     0x7f5f19cfb4f5 at::Tensor::copy_()
[2m[36m(pid=27004)[0m     @     0x7f5f1fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27004)[0m     @     0x55e1639e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27004)[0m     @     0x55e163943b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27004)[0m     @     0x55e1639cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27004)[0m     @     0x55e1639cfa20 method_vectorcall
[2m[36m(pid=27004)[0m     @     0x55e163943bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27004)[0m     @     0x55e1639cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27004)[0m     @     0x55e1639cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27004)[0m     @     0x55e163944689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27004)[0m     @     0x55e1639cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27004)[0m     @     0x55e1639cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27004)[0m     @     0x55e163944689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27004)[0m     @     0x55e1639cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27004)[0m     @     0x55e1639cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27004)[0m     @     0x55e163944689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27004)[0m     @     0x55e1639cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=27004)[0m     @     0x55e1639cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27004)[0m     @     0x55e163944689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x7ed1f788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26974)[0m     @     0x7ed1f53ba4f5 at::Tensor::copy_()
[2m[36m(pid=26974)[0m     @     0x7ed1fb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26974)[0m     @     0x55907ac8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26974)[0m     @     0x55907abe7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x55907ac72baf _PyEval_EvalCodeWithName
[2m[36m(pid=26974)[0m     @     0x55907ac73a20 method_vectorcall
[2m[36m(pid=26974)[0m     @     0x55907abe7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x55907ac72baf _PyEval_EvalCodeWithName
[2m[36m(pid=26974)[0m     @     0x55907ac73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26974)[0m     @     0x55907abe8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x55907ac72baf _PyEval_EvalCodeWithName
[2m[36m(pid=26974)[0m     @     0x55907ac73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26974)[0m     @     0x55907abe8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x55907ac72baf _PyEval_EvalCodeWithName
[2m[36m(pid=26974)[0m     @     0x55907ac73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26974)[0m     @     0x55907abe8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26974)[0m     @     0x55907ac72baf _PyEval_EvalCodeWithName
[2m[36m(pid=26974)[0m     @     0x55907ac73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26974)[0m     @     0x55907abe8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=27020)[0m     @     0x555b19e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27020)[0m     @     0x555b19e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=27020)[0m     @     0x555b19e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27020)[0m     @     0x555b19e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27020)[0m     @     0x555b19e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=27020)[0m     @     0x555b19e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27020)[0m     @     0x555b19e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27052)[0m     @     0x560fb9005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27052)[0m     @     0x560fb8f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b3babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b445baf _PyEval_EvalCodeWithName
[2m[36m(pid=26960)[0m     @     0x56276b446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26960)[0m     @     0x56276b3bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b445baf _PyEval_EvalCodeWithName
[2m[36m(pid=26960)[0m     @     0x56276b446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26960)[0m     @     0x56276b3bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b445baf _PyEval_EvalCodeWithName
[2m[36m(pid=26960)[0m     @     0x56276b446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26960)[0m     @     0x56276b3bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26960)[0m     @     0x56276b445baf _PyEval_EvalCodeWithName
[2m[36m(pid=26960)[0m     @     0x56276b446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26960)[0m     @     0x56276b3bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x7f958d6105a4 at::native::copy_()
[2m[36m(pid=27072)[0m     @     0x7f958dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27072)[0m     @     0x7f95901ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26966)[0m     @     0x7efc000b74f5 at::Tensor::copy_()
[2m[36m(pid=26966)[0m     @     0x7efc0616279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26966)[0m     @     0x55b623e58fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26966)[0m     @     0x55b623db3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26966)[0m     @     0x55b623e3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26966)[0m     @     0x55b623e3fa20 method_vectorcall
[2m[36m(pid=26966)[0m     @     0x55b623db3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26966)[0m     @     0x55b623e3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26966)[0m     @     0x55b623e3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26966)[0m     @     0x55b623db4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26966)[0m     @     0x55b623e3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26966)[0m     @     0x55b623e3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26966)[0m     @     0x55b623db4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26966)[0m     @     0x55b623e3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26966)[0m     @     0x55b623e3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26966)[0m     @     0x55b623db4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x7f607cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=27033)[0m     @     0x7f608303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27033)[0m     @     0x55ecea789fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27033)[0m     @     0x55ecea6e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x55ecea76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27033)[0m     @     0x55ecea770a20 method_vectorcall
[2m[36m(pid=27033)[0m     @     0x55ecea6e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x55ecea76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27033)[0m     @     0x55ecea770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27033)[0m     @     0x55ecea6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x55ecea76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27033)[0m     @     0x55ecea770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27033)[0m     @     0x55ecea6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x55ecea76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27033)[0m     @     0x55ecea770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27033)[0m     @     0x55ecea6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27033)[0m     @     0x55ecea76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27033)[0m     @     0x55ecea770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27033)[0m     @     0x55ecea6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x7ee0e13ba4f5 at::Tensor::copy_()
[2m[36m(pid=27067)[0m     @     0x7ee0e388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26970)[0m     @     0x558f1a898fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26970)[0m     @     0x558f1a7f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x558f1a87ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26970)[0m     @     0x558f1a87fa20 method_vectorcall
[2m[36m(pid=26970)[0m     @     0x558f1a7f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x558f1a87ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26970)[0m     @     0x558f1a87f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26970)[0m     @     0x558f1a7f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x558f1a87ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26970)[0m     @     0x558f1a87f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26970)[0m     @     0x558f1a7f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x558f1a87ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26970)[0m     @     0x558f1a87f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26970)[0m     @     0x558f1a7f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26970)[0m     @     0x558f1a87ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26970)[0m     @     0x558f1a87f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26970)[0m     @     0x558f1a7f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27082)[0m     @     0x55ef95cff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d89baf _PyEval_EvalCodeWithName
[2m[36m(pid=27082)[0m     @     0x55ef95d8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27082)[0m     @     0x55ef95cff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d89baf _PyEval_EvalCodeWithName
[2m[36m(pid=27082)[0m     @     0x55ef95d8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27082)[0m     @     0x55ef95cff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27082)[0m     @     0x55ef95d89baf _PyEval_EvalCodeWithName
[2m[36m(pid=27082)[0m     @     0x55ef95d8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27082)[0m     @     0x55ef95cff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x7edbadcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27069)[0m     @     0x7edbb01ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27069)[0m     @     0x7edbadcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27069)[0m     @     0x7edbb3da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27069)[0m     @     0x55e5821b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27069)[0m     @     0x55e58210db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x55e582198baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x55e582199a20 method_vectorcall
[2m[36m(pid=27069)[0m     @     0x55e58210dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x55e582198baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x55e582199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27069)[0m     @     0x55e58210e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x55e582198baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x55e582199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27069)[0m     @     0x55e58210e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x55e582198baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x55e582199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27069)[0m     @     0x55e58210e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27069)[0m     @     0x55e582198baf _PyEval_EvalCodeWithName
[2m[36m(pid=27069)[0m     @     0x55e582199643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27069)[0m     @     0x55e58210e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5ac0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26999)[0m     @     0x560fb5a1bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26999)[0m     @     0x560fb5aa7a20 method_vectorcall
[2m[36m(pid=26999)[0m     @     0x560fb5a1bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26999)[0m     @     0x560fb5aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26999)[0m     @     0x560fb5a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26999)[0m     @     0x560fb5aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26999)[0m     @     0x560fb5a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26999)[0m     @     0x560fb5aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26999)[0m     @     0x560fb5a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26999)[0m     @     0x560fb5aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26999)[0m     @     0x560fb5aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26999)[0m     @     0x560fb5a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26956)[0m     @     0x555a73d71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26979)[0m     @     0x55e943273baf _PyEval_EvalCodeWithName
[2m[36m(pid=26979)[0m     @     0x55e943274643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26979)[0m     @     0x55e9431e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26979)[0m     @     0x55e943273baf _PyEval_EvalCodeWithName
[2m[36m(pid=26979)[0m     @     0x55e943274643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26979)[0m     @     0x55e9431e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x7f32daad44f5 at::Tensor::copy_()
[2m[36m(pid=26983)[0m     @     0x7f32e0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26983)[0m     @     0x556b55b4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26983)[0m     @     0x556b55aa8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x556b55b33baf _PyEval_EvalCodeWithName
[2m[36m(pid=26983)[0m     @     0x556b55b34a20 method_vectorcall
[2m[36m(pid=26983)[0m     @     0x556b55aa8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x556b55b33baf _PyEval_EvalCodeWithName
[2m[36m(pid=26983)[0m     @     0x556b55b34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26983)[0m     @     0x556b55aa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x556b55b33baf _PyEval_EvalCodeWithName
[2m[36m(pid=26983)[0m     @     0x556b55b34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26983)[0m     @     0x556b55aa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x556b55b33baf _PyEval_EvalCodeWithName
[2m[36m(pid=26983)[0m     @     0x556b55b34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26983)[0m     @     0x556b55aa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26983)[0m     @     0x556b55b33baf _PyEval_EvalCodeWithName
[2m[36m(pid=26983)[0m     @     0x556b55b34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26983)[0m     @     0x556b55aa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x7f42023e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27034)[0m     @     0x5627914acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27034)[0m     @     0x562791407b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x562791492baf _PyEval_EvalCodeWithName
[2m[36m(pid=27034)[0m     @     0x562791493a20 method_vectorcall
[2m[36m(pid=27034)[0m     @     0x562791407bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x562791492baf _PyEval_EvalCodeWithName
[2m[36m(pid=27034)[0m     @     0x562791493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27034)[0m     @     0x562791408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x562791492baf _PyEval_EvalCodeWithName
[2m[36m(pid=27034)[0m     @     0x562791493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27034)[0m     @     0x562791408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x562791492baf _PyEval_EvalCodeWithName
[2m[36m(pid=27034)[0m     @     0x562791493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27034)[0m     @     0x562791408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27034)[0m     @     0x562791492baf _PyEval_EvalCodeWithName
[2m[36m(pid=27034)[0m     @     0x562791493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27034)[0m     @     0x562791408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x7f3ee788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26963)[0m     @     0x7f3ee53ba4f5 at::Tensor::copy_()
[2m[36m(pid=26963)[0m     @     0x7f3eeb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26963)[0m     @     0x5638c8685fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26963)[0m     @     0x5638c85e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x5638c866bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26963)[0m     @     0x5638c866ca20 method_vectorcall
[2m[36m(pid=26963)[0m     @     0x5638c85e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x5638c866bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26963)[0m     @     0x5638c866c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26963)[0m     @     0x5638c85e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x5638c866bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26963)[0m     @     0x5638c866c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26963)[0m     @     0x5638c85e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x5638c866bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26963)[0m     @     0x5638c866c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26963)[0m     @     0x5638c85e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26963)[0m     @     0x5638c866bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26963)[0m     @     0x5638c866c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26963)[0m     @     0x5638c85e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x7f4ee3ef44f5 at::Tensor::copy_()
[2m[36m(pid=27062)[0m     @     0x7f4ee9f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27062)[0m     @     0x560fd890bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27062)[0m     @     0x560fd8866b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x560fd88f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27062)[0m     @     0x560fd88f2a20 method_vectorcall
[2m[36m(pid=27062)[0m     @     0x560fd8866bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x560fd88f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27062)[0m     @     0x560fd88f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27062)[0m     @     0x560fd8867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x560fd88f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27062)[0m     @     0x560fd88f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27062)[0m     @     0x560fd8867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x560fd88f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27062)[0m     @     0x560fd88f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27062)[0m     @     0x560fd8867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27062)[0m     @     0x560fd88f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27062)[0m     @     0x560fd88f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27062)[0m     @     0x560fd8867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x7ee1bdc22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=27031)[0m     @     0x7ee1bdc45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=27031)[0m     @     0x7ee1bd0e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27031)[0m     @     0x7ee1bd0e5388 at::native::copy_impl()
[2m[36m(pid=27031)[0m     @     0x7ee1bd0e75a4 at::native::copy_()
[2m[36m(pid=27008)[0m     @     0x55a0608a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x55a06092dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27008)[0m     @     0x55a06092e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27008)[0m     @     0x55a0608a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x55a06092dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27008)[0m     @     0x55a06092e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27008)[0m     @     0x55a0608a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x55a06092dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27008)[0m     @     0x55a06092e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27008)[0m     @     0x55a0608a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27008)[0m     @     0x55a06092dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=27008)[0m     @     0x55a06092e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27008)[0m     @     0x55a0608a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x7eee2da7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=27040)[0m     @     0x7eee2da78388 at::native::copy_impl()
[2m[36m(pid=26952)[0m     @     0x7faa5e5d44f5 at::Tensor::copy_()
[2m[36m(pid=26952)[0m     @     0x7faa6447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=26952)[0m     @     0x55fe0ea3dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26952)[0m     @     0x55fe0e998b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26952)[0m     @     0x55fe0ea23baf _PyEval_EvalCodeWithName
[2m[36m(pid=26952)[0m     @     0x55fe0ea24a20 method_vectorcall
[2m[36m(pid=26952)[0m     @     0x55fe0e998bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26952)[0m     @     0x55fe0ea23baf _PyEval_EvalCodeWithName
[2m[36m(pid=26952)[0m     @     0x55fe0ea24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26952)[0m     @     0x55fe0e999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26952)[0m     @     0x55fe0ea23baf _PyEval_EvalCodeWithName
[2m[36m(pid=26952)[0m     @     0x55fe0ea24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26952)[0m     @     0x55fe0e999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26952)[0m     @     0x55fe0ea23baf _PyEval_EvalCodeWithName
[2m[36m(pid=26952)[0m     @     0x55fe0ea24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26952)[0m     @     0x55fe0e999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26952)[0m     @     0x55fe0ea23baf _PyEval_EvalCodeWithName
[2m[36m(pid=26952)[0m     @     0x55fe0ea24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26952)[0m     @     0x55fe0e999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x7f958dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=27072)[0m     @     0x7f9593da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27072)[0m     @     0x563ff54fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27072)[0m     @     0x563ff5459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x563ff54e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27072)[0m     @     0x563ff54e5a20 method_vectorcall
[2m[36m(pid=27072)[0m     @     0x563ff5459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x563ff54e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27072)[0m     @     0x563ff54e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27072)[0m     @     0x563ff545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x563ff54e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27072)[0m     @     0x563ff54e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27072)[0m     @     0x563ff545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x563ff54e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27072)[0m     @     0x563ff54e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27072)[0m     @     0x563ff545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27072)[0m     @     0x563ff54e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=27072)[0m     @     0x563ff54e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27072)[0m     @     0x563ff545a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26966)[0m     @     0x55b623e3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26966)[0m     @     0x55b623e3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26966)[0m     @     0x55b623db4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x7ee0e13ba4f5 at::Tensor::copy_()
[2m[36m(pid=27067)[0m     @     0x7ee0e746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27067)[0m     @     0x5618500dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27067)[0m     @     0x561850036b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x5618500c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27067)[0m     @     0x5618500c2a20 method_vectorcall
[2m[36m(pid=27067)[0m     @     0x561850036bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x5618500c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27067)[0m     @     0x5618500c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27067)[0m     @     0x561850037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x5618500c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27067)[0m     @     0x5618500c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27067)[0m     @     0x561850037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x5618500c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27067)[0m     @     0x5618500c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27067)[0m     @     0x561850037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27067)[0m     @     0x5618500c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=27067)[0m     @     0x5618500c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27067)[0m     @     0x561850037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x7ee1bd7d24f5 at::Tensor::copy_()
[2m[36m(pid=27031)[0m     @     0x7ee1bfca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee2da7a5a4 at::native::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee2e1654f5 at::Tensor::copy_()
[2m[36m(pid=27031)[0m     @     0x7ee1bd7d24f5 at::Tensor::copy_()
[2m[36m(pid=27031)[0m     @     0x7ee1c387d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27031)[0m     @     0x563c0ee22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27031)[0m     @     0x563c0ed7db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x563c0ee08baf _PyEval_EvalCodeWithName
[2m[36m(pid=27031)[0m     @     0x563c0ee09a20 method_vectorcall
[2m[36m(pid=27031)[0m     @     0x563c0ed7dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x7eee306388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee2e1654f5 at::Tensor::copy_()
[2m[36m(pid=27040)[0m     @     0x7eee3421079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=27040)[0m     @     0x559caea81fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=27040)[0m     @     0x559cae9dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x559caea67baf _PyEval_EvalCodeWithName
[2m[36m(pid=27040)[0m     @     0x559caea68a20 method_vectorcall
[2m[36m(pid=27040)[0m     @     0x559cae9dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x559caea67baf _PyEval_EvalCodeWithName
[2m[36m(pid=27040)[0m     @     0x559caea68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27040)[0m     @     0x559cae9dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x559caea67baf _PyEval_EvalCodeWithName
[2m[36m(pid=27040)[0m     @     0x559caea68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27040)[0m     @     0x559cae9dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x559caea67baf _PyEval_EvalCodeWithName
[2m[36m(pid=27040)[0m     @     0x559caea68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27040)[0m     @     0x559cae9dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27040)[0m     @     0x559caea67baf _PyEval_EvalCodeWithName
[2m[36m(pid=27040)[0m     @     0x559caea68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27040)[0m     @     0x559cae9dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x563c0ee08baf _PyEval_EvalCodeWithName
[2m[36m(pid=27031)[0m     @     0x563c0ee09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27031)[0m     @     0x563c0ed7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x563c0ee08baf _PyEval_EvalCodeWithName
[2m[36m(pid=27031)[0m     @     0x563c0ee09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27031)[0m     @     0x563c0ed7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x563c0ee08baf _PyEval_EvalCodeWithName
[2m[36m(pid=27031)[0m     @     0x563c0ee09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27031)[0m     @     0x563c0ed7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=27031)[0m     @     0x563c0ee08baf _PyEval_EvalCodeWithName
[2m[36m(pid=27031)[0m     @     0x563c0ee09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=27031)[0m     @     0x563c0ed7e689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:36:35,631	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:36:35,633	ERROR trial_runner.py:567 -- Trial PPO_jss_env_c2e3e_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=27047, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:36:35,641	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:36:35,642	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
== Status ==
Memory usage on this node: 24.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c2e3e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_c2e3e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_c2e3e_00000_0_2020-11-05_10-36-28/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c2e3e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_c2e3e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_c2e3e_00000_0_2020-11-05_10-36-28/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:36:35,654	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:36:35,654	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:36:35,654	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:36:35,654	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:36:35,654	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_c2e3e_00000])
