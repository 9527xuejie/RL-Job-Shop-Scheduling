2020-11-05 10:44:35,913	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e6675_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=45908)[0m 2020-11-05 10:44:38,812	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=45908)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=45908)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=45908)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=45908)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=45908)[0m 
[2m[36m(pid=45908)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=45857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45857)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45857)[0m *** SIGSEGV (@0x0) received by PID 45857 (TID 0x7fdd81b05700) from PID 0; stack trace: ***
[2m[36m(pid=45857)[0m     @     0x7fdd816de390 (unknown)
[2m[36m(pid=45857)[0m     @     0x7fae81687f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45883)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45883)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45883)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45883)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45883)[0m *** SIGSEGV (@0x0) received by PID 45883 (TID 0x7f5d59184700) from PID 0; stack trace: ***
[2m[36m(pid=45883)[0m     @     0x7f5d58d5d390 (unknown)
[2m[36m(pid=45883)[0m     @     0x7f2e58cf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45883)[0m     @     0x7f2e584227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45792)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45792)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45792)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45792)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45792)[0m *** SIGSEGV (@0x0) received by PID 45792 (TID 0x7f5797328700) from PID 0; stack trace: ***
[2m[36m(pid=45792)[0m     @     0x7f5796f01390 (unknown)
[2m[36m(pid=45874)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45874)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45874)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45874)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45874)[0m *** SIGSEGV (@0x0) received by PID 45874 (TID 0x7fe7281e6700) from PID 0; stack trace: ***
[2m[36m(pid=45874)[0m     @     0x7fe727dbf390 (unknown)
[2m[36m(pid=45869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45869)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45869)[0m *** SIGSEGV (@0x0) received by PID 45869 (TID 0x7f26f68f9700) from PID 0; stack trace: ***
[2m[36m(pid=45869)[0m     @     0x7f26f64d2390 (unknown)
[2m[36m(pid=45869)[0m     @     0x7ef7f6467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45869)[0m     @     0x7ef7f5b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45869)[0m     @     0x7ef7f5b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45869)[0m     @     0x7ef7f5b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=45869)[0m     @     0x7ef7f5b95d91 at::TensorIterator::for_each()
[2m[36m(pid=45869)[0m     @     0x7ef7f6478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45869)[0m     @     0x7ef7f649bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45869)[0m     @     0x7ef7f593da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45869)[0m     @     0x7ef7f593b388 at::native::copy_impl()
[2m[36m(pid=45869)[0m     @     0x7ef7f593d5a4 at::native::copy_()
[2m[36m(pid=45869)[0m     @     0x7ef7f60284f5 at::Tensor::copy_()
[2m[36m(pid=45869)[0m     @     0x7ef7f84fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45810)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45810)[0m *** SIGSEGV (@0x0) received by PID 45810 (TID 0x7f6991dc8700) from PID 0; stack trace: ***
[2m[36m(pid=45810)[0m     @     0x7f69919a1390 (unknown)
[2m[36m(pid=45810)[0m     @     0x7f3a917f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45849)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45849)[0m *** SIGSEGV (@0x0) received by PID 45849 (TID 0x7f8064a80700) from PID 0; stack trace: ***
[2m[36m(pid=45849)[0m     @     0x7f8064659390 (unknown)
[2m[36m(pid=45849)[0m     @     0x7f5164563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45849)[0m     @     0x7f5163c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45905)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45905)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45905)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45905)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45905)[0m *** SIGSEGV (@0x0) received by PID 45905 (TID 0x7f97519f2700) from PID 0; stack trace: ***
[2m[36m(pid=45905)[0m     @     0x7f97515cb390 (unknown)
[2m[36m(pid=45880)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45880)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45880)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45880)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45880)[0m *** SIGSEGV (@0x0) received by PID 45880 (TID 0x7fe1f1ff9700) from PID 0; stack trace: ***
[2m[36m(pid=45880)[0m     @     0x7fe1f1bd2390 (unknown)
[2m[36m(pid=45904)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45904)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45904)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45904)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45904)[0m *** SIGSEGV (@0x0) received by PID 45904 (TID 0x7f1c390d3700) from PID 0; stack trace: ***
[2m[36m(pid=45887)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45887)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45887)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45887)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45887)[0m *** SIGSEGV (@0x0) received by PID 45887 (TID 0x7fdf7125c700) from PID 0; stack trace: ***
[2m[36m(pid=45887)[0m     @     0x7fdf70e35390 (unknown)
[2m[36m(pid=45887)[0m     @     0x7fb070dc9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45887)[0m     @     0x7fb0704f47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45887)[0m     @     0x7fb0704f78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45887)[0m     @     0x7fb0704f7ad3 at::TensorIterator::for_each()
[2m[36m(pid=45887)[0m     @     0x7fb0704f7d91 at::TensorIterator::for_each()
[2m[36m(pid=45887)[0m     @     0x7fb070ddab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45887)[0m     @     0x7fb070dfdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45887)[0m     @     0x7fb07029fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45887)[0m     @     0x7fb07029d388 at::native::copy_impl()
[2m[36m(pid=45887)[0m     @     0x7fb07029f5a4 at::native::copy_()
[2m[36m(pid=45866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45866)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45866)[0m *** SIGSEGV (@0x0) received by PID 45866 (TID 0x7f6dd69e9700) from PID 0; stack trace: ***
[2m[36m(pid=45909)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45909)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45909)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45909)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45909)[0m *** SIGSEGV (@0x0) received by PID 45909 (TID 0x7fca63909700) from PID 0; stack trace: ***
[2m[36m(pid=45909)[0m     @     0x7fca634e2390 (unknown)
[2m[36m(pid=45909)[0m     @     0x7f9b6348ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45909)[0m     @     0x7f9b62bba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45909)[0m     @     0x7f9b62bbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45909)[0m     @     0x7f9b62bbdad3 at::TensorIterator::for_each()
[2m[36m(pid=45909)[0m     @     0x7f9b62bbdd91 at::TensorIterator::for_each()
[2m[36m(pid=45909)[0m     @     0x7f9b634a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45909)[0m     @     0x7f9b634c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45909)[0m     @     0x7f9b62965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45909)[0m     @     0x7f9b62963388 at::native::copy_impl()
[2m[36m(pid=45909)[0m     @     0x7f9b629655a4 at::native::copy_()
[2m[36m(pid=45868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45868)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45868)[0m *** SIGSEGV (@0x0) received by PID 45868 (TID 0x7fa20c99b700) from PID 0; stack trace: ***
[2m[36m(pid=45868)[0m     @     0x7fa20c574390 (unknown)
[2m[36m(pid=45868)[0m     @     0x7f730c4fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45868)[0m     @     0x7f730bc277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45868)[0m     @     0x7f730bc2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45860)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45860)[0m *** SIGSEGV (@0x0) received by PID 45860 (TID 0x7f38fbe0b700) from PID 0; stack trace: ***
[2m[36m(pid=45860)[0m     @     0x7f38fb9e4390 (unknown)
[2m[36m(pid=45860)[0m     @     0x7f09fb751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45860)[0m     @     0x7f09fae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45860)[0m     @     0x7f09fae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45860)[0m     @     0x7f09fae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=45860)[0m     @     0x7f09fae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=45860)[0m     @     0x7f09fb762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45860)[0m     @     0x7f09fb785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45860)[0m     @     0x7f09fac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45860)[0m     @     0x7f09fac25388 at::native::copy_impl()
[2m[36m(pid=45860)[0m     @     0x7f09fac275a4 at::native::copy_()
[2m[36m(pid=45853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45853)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45853)[0m *** SIGSEGV (@0x0) received by PID 45853 (TID 0x7fee0a424700) from PID 0; stack trace: ***
[2m[36m(pid=45853)[0m     @     0x7fee09ffd390 (unknown)
[2m[36m(pid=45853)[0m     @     0x7fbf09e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45853)[0m     @     0x7fbf0954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45891)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45891)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45891)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45891)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45891)[0m *** SIGSEGV (@0x0) received by PID 45891 (TID 0x7f19b87c2700) from PID 0; stack trace: ***
[2m[36m(pid=45891)[0m     @     0x7f19b839b390 (unknown)
[2m[36m(pid=45891)[0m     @     0x7eeab8336f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45891)[0m     @     0x7eeab7a617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45921)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45921)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45921)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45921)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45921)[0m *** SIGSEGV (@0x0) received by PID 45921 (TID 0x7f91920f1700) from PID 0; stack trace: ***
[2m[36m(pid=45921)[0m     @     0x7f9191cca390 (unknown)
[2m[36m(pid=45921)[0m     @     0x7f6291c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45921)[0m     @     0x7f62913387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45921)[0m     @     0x7f629133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45921)[0m     @     0x7f629133bad3 at::TensorIterator::for_each()
[2m[36m(pid=45921)[0m     @     0x7f629133bd91 at::TensorIterator::for_each()
[2m[36m(pid=45921)[0m     @     0x7f6291c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45921)[0m     @     0x7f6291c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45921)[0m     @     0x7f62910e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45921)[0m     @     0x7f62910e1388 at::native::copy_impl()
[2m[36m(pid=45921)[0m     @     0x7f62910e35a4 at::native::copy_()
[2m[36m(pid=45921)[0m     @     0x7f62917ce4f5 at::Tensor::copy_()
[2m[36m(pid=45921)[0m     @     0x7f6293ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45912)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45912)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45912)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45912)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45912)[0m *** SIGSEGV (@0x0) received by PID 45912 (TID 0x7f219a7c8700) from PID 0; stack trace: ***
[2m[36m(pid=45912)[0m     @     0x7f219a3a1390 (unknown)
[2m[36m(pid=45912)[0m     @     0x7ef29a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45912)[0m     @     0x7ef299a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45912)[0m     @     0x7ef299a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45912)[0m     @     0x7ef299a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=45912)[0m     @     0x7ef299a79d91 at::TensorIterator::for_each()
[2m[36m(pid=45912)[0m     @     0x7ef29a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45912)[0m     @     0x7ef29a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45912)[0m     @     0x7ef299821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45912)[0m     @     0x7ef29981f388 at::native::copy_impl()
[2m[36m(pid=45912)[0m     @     0x7ef2998215a4 at::native::copy_()
[2m[36m(pid=45912)[0m     @     0x7ef299f0c4f5 at::Tensor::copy_()
[2m[36m(pid=45912)[0m     @     0x7ef29c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45889)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45889)[0m *** SIGSEGV (@0x0) received by PID 45889 (TID 0x7f85213b0700) from PID 0; stack trace: ***
[2m[36m(pid=45889)[0m     @     0x7f8520f89390 (unknown)
[2m[36m(pid=45889)[0m     @     0x7f5620ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45889)[0m     @     0x7f56205cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45896)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45896)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45896)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45896)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45896)[0m *** SIGSEGV (@0x0) received by PID 45896 (TID 0x7fe47ed7d700) from PID 0; stack trace: ***
[2m[36m(pid=45896)[0m     @     0x7fe47e956390 (unknown)
[2m[36m(pid=45896)[0m     @     0x7fb57e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45896)[0m     @     0x7fb57de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45896)[0m     @     0x7fb57de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45896)[0m     @     0x7fb57de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=45896)[0m     @     0x7fb57de38d91 at::TensorIterator::for_each()
[2m[36m(pid=45896)[0m     @     0x7fb57e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45896)[0m     @     0x7fb57e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45896)[0m     @     0x7fb57dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45896)[0m     @     0x7fb57dbde388 at::native::copy_impl()
[2m[36m(pid=45896)[0m     @     0x7fb57dbe05a4 at::native::copy_()
[2m[36m(pid=45896)[0m     @     0x7fb57e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=45884)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45884)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45884)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45884)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45884)[0m *** SIGSEGV (@0x0) received by PID 45884 (TID 0x7fdc5ed48700) from PID 0; stack trace: ***
[2m[36m(pid=45884)[0m     @     0x7fdc5e921390 (unknown)
[2m[36m(pid=45884)[0m     @     0x7fad5e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45884)[0m     @     0x7fad5de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45884)[0m     @     0x7fad5de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45884)[0m     @     0x7fad5de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=45884)[0m     @     0x7fad5de38d91 at::TensorIterator::for_each()
[2m[36m(pid=45884)[0m     @     0x7fad5e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45884)[0m     @     0x7fad5e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45884)[0m     @     0x7fad5dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45884)[0m     @     0x7fad5dbde388 at::native::copy_impl()
[2m[36m(pid=45884)[0m     @     0x7fad5dbe05a4 at::native::copy_()
[2m[36m(pid=45884)[0m     @     0x7fad5e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=45884)[0m     @     0x7fad6079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45871)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45871)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45871)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45871)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45871)[0m *** SIGSEGV (@0x0) received by PID 45871 (TID 0x7fbc49c71700) from PID 0; stack trace: ***
[2m[36m(pid=45871)[0m     @     0x7fbc4984a390 (unknown)
[2m[36m(pid=45871)[0m     @     0x7f8d496f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45807)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45807)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45807)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45807)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45807)[0m *** SIGSEGV (@0x0) received by PID 45807 (TID 0x7feb3a97e700) from PID 0; stack trace: ***
[2m[36m(pid=45807)[0m     @     0x7feb3a557390 (unknown)
[2m[36m(pid=45807)[0m     @     0x7fbc3a4f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45804)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45804)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45804)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45804)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45804)[0m *** SIGSEGV (@0x0) received by PID 45804 (TID 0x7ff815cbc700) from PID 0; stack trace: ***
[2m[36m(pid=45804)[0m     @     0x7ff815895390 (unknown)
[2m[36m(pid=45858)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45858)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45858)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45858)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45858)[0m *** SIGSEGV (@0x0) received by PID 45858 (TID 0x7f1943735700) from PID 0; stack trace: ***
[2m[36m(pid=45799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45799)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45799)[0m *** SIGSEGV (@0x0) received by PID 45799 (TID 0x7f8662b8d700) from PID 0; stack trace: ***
[2m[36m(pid=45799)[0m     @     0x7f8662766390 (unknown)
[2m[36m(pid=45865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45865)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45865)[0m *** SIGSEGV (@0x0) received by PID 45865 (TID 0x7fd0a2f30700) from PID 0; stack trace: ***
[2m[36m(pid=45865)[0m     @     0x7fd0a2b09390 (unknown)
[2m[36m(pid=45865)[0m     @     0x7fa1a2aa4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45865)[0m     @     0x7fa1a21cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45894)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45894)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45894)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45894)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45894)[0m *** SIGSEGV (@0x0) received by PID 45894 (TID 0x7fcce5e8a700) from PID 0; stack trace: ***
[2m[36m(pid=45894)[0m     @     0x7fcce5a63390 (unknown)
[2m[36m(pid=45894)[0m     @     0x7f9de57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45894)[0m     @     0x7f9de4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45894)[0m     @     0x7f9de4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45894)[0m     @     0x7f9de4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45894)[0m     @     0x7f9de4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=45894)[0m     @     0x7f9de580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45894)[0m     @     0x7f9de582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45894)[0m     @     0x7f9de4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45894)[0m     @     0x7f9de4ccd388 at::native::copy_impl()
[2m[36m(pid=45894)[0m     @     0x7f9de4ccf5a4 at::native::copy_()
[2m[36m(pid=45894)[0m     @     0x7f9de53ba4f5 at::Tensor::copy_()
[2m[36m(pid=45894)[0m     @     0x7f9de788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45862)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45862)[0m *** SIGSEGV (@0x0) received by PID 45862 (TID 0x7f625b574700) from PID 0; stack trace: ***
[2m[36m(pid=45862)[0m     @     0x7f625b14d390 (unknown)
[2m[36m(pid=45877)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45877)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45877)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45877)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45877)[0m *** SIGSEGV (@0x0) received by PID 45877 (TID 0x7f94417ef700) from PID 0; stack trace: ***
[2m[36m(pid=45842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45842)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45794)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45844)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45844)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45844)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45822)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45822)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45822)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45895)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45895)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45895)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45895)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45895)[0m *** SIGSEGV (@0x0) received by PID 45895 (TID 0x7f9b3abde700) from PID 0; stack trace: ***
[2m[36m(pid=45906)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45906)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45906)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45906)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45906)[0m *** SIGSEGV (@0x0) received by PID 45906 (TID 0x7f28f52c7700) from PID 0; stack trace: ***
[2m[36m(pid=45906)[0m     @     0x7f28f4ea0390 (unknown)
[2m[36m(pid=45885)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45885)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45885)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45885)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45885)[0m *** SIGSEGV (@0x0) received by PID 45885 (TID 0x7fb404e1a700) from PID 0; stack trace: ***
[2m[36m(pid=45885)[0m     @     0x7fb4049f3390 (unknown)
[2m[36m(pid=45885)[0m     @     0x7f8504825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45885)[0m     @     0x7f8503f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45809)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45809)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45809)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45809)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45809)[0m *** SIGSEGV (@0x0) received by PID 45809 (TID 0x7f8fa5c98700) from PID 0; stack trace: ***
[2m[36m(pid=45809)[0m     @     0x7f8fa5871390 (unknown)
[2m[36m(pid=45809)[0m     @     0x7f60a57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45809)[0m     @     0x7f60a4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45805)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45805)[0m *** SIGSEGV (@0x0) received by PID 45805 (TID 0x7fed97d47700) from PID 0; stack trace: ***
[2m[36m(pid=45805)[0m     @     0x7fed97920390 (unknown)
[2m[36m(pid=45805)[0m     @     0x7fbe978b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45805)[0m     @     0x7fbe96fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45808)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45808)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45808)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45808)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45808)[0m *** SIGSEGV (@0x0) received by PID 45808 (TID 0x7f439e175700) from PID 0; stack trace: ***
[2m[36m(pid=45808)[0m     @     0x7f439dd4e390 (unknown)
[2m[36m(pid=45808)[0m     @     0x7f149dceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45808)[0m     @     0x7f149d41a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45787)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45787)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45787)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45787)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45787)[0m *** SIGSEGV (@0x0) received by PID 45787 (TID 0x7f215e891700) from PID 0; stack trace: ***
[2m[36m(pid=45787)[0m     @     0x7f215e46a390 (unknown)
[2m[36m(pid=45787)[0m     @     0x7ef25e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45787)[0m     @     0x7ef25da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45811)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45811)[0m *** SIGSEGV (@0x0) received by PID 45811 (TID 0x7fe3ef900700) from PID 0; stack trace: ***
[2m[36m(pid=45811)[0m     @     0x7fe3ef4d9390 (unknown)
[2m[36m(pid=45811)[0m     @     0x7fb4ef46af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45811)[0m     @     0x7fb4eeb957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45811)[0m     @     0x7fb4eeb988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45901)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45901)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45901)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45901)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45901)[0m *** SIGSEGV (@0x0) received by PID 45901 (TID 0x7f6e8ce0f700) from PID 0; stack trace: ***
[2m[36m(pid=45901)[0m     @     0x7f6e8c9e8390 (unknown)
[2m[36m(pid=45901)[0m     @     0x7f3f8c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45901)[0m     @     0x7f3f8bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45820)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45820)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45820)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45820)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45820)[0m *** SIGSEGV (@0x0) received by PID 45820 (TID 0x7f35a4efb700) from PID 0; stack trace: ***
[2m[36m(pid=45820)[0m     @     0x7f35a4ad4390 (unknown)
[2m[36m(pid=45820)[0m     @     0x7f06a4a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45820)[0m     @     0x7f06a41617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45820)[0m     @     0x7f06a41648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45820)[0m     @     0x7f06a4164ad3 at::TensorIterator::for_each()
[2m[36m(pid=45820)[0m     @     0x7f06a4164d91 at::TensorIterator::for_each()
[2m[36m(pid=45820)[0m     @     0x7f06a4a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45820)[0m     @     0x7f06a4a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45820)[0m     @     0x7f06a3f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45820)[0m     @     0x7f06a3f0a388 at::native::copy_impl()
[2m[36m(pid=45820)[0m     @     0x7f06a3f0c5a4 at::native::copy_()
[2m[36m(pid=45820)[0m     @     0x7f06a45f74f5 at::Tensor::copy_()
[2m[36m(pid=45793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45793)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45793)[0m *** SIGSEGV (@0x0) received by PID 45793 (TID 0x7fa088361700) from PID 0; stack trace: ***
[2m[36m(pid=45793)[0m     @     0x7fa087f3a390 (unknown)
[2m[36m(pid=45793)[0m     @     0x7f7187e0ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45793)[0m     @     0x7f71875397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45802)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45802)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45802)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45802)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45802)[0m *** SIGSEGV (@0x0) received by PID 45802 (TID 0x7f62309b5700) from PID 0; stack trace: ***
[2m[36m(pid=45802)[0m     @     0x7f623058e390 (unknown)
[2m[36m(pid=45802)[0m     @     0x7f3330339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45802)[0m     @     0x7f332fa647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45850)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45850)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45850)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45850)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45850)[0m *** SIGSEGV (@0x0) received by PID 45850 (TID 0x7f38b4bb8700) from PID 0; stack trace: ***
[2m[36m(pid=45850)[0m     @     0x7f38b4791390 (unknown)
[2m[36m(pid=45850)[0m     @     0x7f09b460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45850)[0m     @     0x7f09b3d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45850)[0m     @     0x7f09b3d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45850)[0m     @     0x7f09b3d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=45850)[0m     @     0x7f09b3d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=45850)[0m     @     0x7f09b461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45850)[0m     @     0x7f09b4642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45850)[0m     @     0x7f09b3ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45850)[0m     @     0x7f09b3ae2388 at::native::copy_impl()
[2m[36m(pid=45850)[0m     @     0x7f09b3ae45a4 at::native::copy_()
[2m[36m(pid=45863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45863)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45806)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45806)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45806)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45806)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45806)[0m *** SIGSEGV (@0x0) received by PID 45806 (TID 0x7fda8a579700) from PID 0; stack trace: ***
[2m[36m(pid=45806)[0m     @     0x7fda8a152390 (unknown)
[2m[36m(pid=45806)[0m     @     0x7fab89e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45795)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45795)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45795)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45795)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45795)[0m *** SIGSEGV (@0x0) received by PID 45795 (TID 0x7f6860ef9700) from PID 0; stack trace: ***
[2m[36m(pid=45795)[0m     @     0x7f6860ad2390 (unknown)
[2m[36m(pid=45795)[0m     @     0x7f3960a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45795)[0m     @     0x7f39601617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45876)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45876)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45876)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45876)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45876)[0m *** SIGSEGV (@0x0) received by PID 45876 (TID 0x7f749b744700) from PID 0; stack trace: ***
[2m[36m(pid=45790)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45790)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45790)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45790)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45790)[0m *** SIGSEGV (@0x0) received by PID 45790 (TID 0x7fab5ec2e700) from PID 0; stack trace: ***
[2m[36m(pid=45790)[0m     @     0x7fab5e807390 (unknown)
[2m[36m(pid=45800)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45800)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45800)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45800)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45800)[0m *** SIGSEGV (@0x0) received by PID 45800 (TID 0x7f9af0bde700) from PID 0; stack trace: ***
[2m[36m(pid=45852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45852)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45852)[0m *** SIGSEGV (@0x0) received by PID 45852 (TID 0x7f27ccc3f700) from PID 0; stack trace: ***
[2m[36m(pid=45814)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45814)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45814)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45814)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45814)[0m *** SIGSEGV (@0x0) received by PID 45814 (TID 0x7fdd75e04700) from PID 0; stack trace: ***
[2m[36m(pid=45872)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45872)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45872)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45872)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45872)[0m *** SIGSEGV (@0x0) received by PID 45872 (TID 0x7f321b861700) from PID 0; stack trace: ***
[2m[36m(pid=45864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45864)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45864)[0m *** SIGSEGV (@0x0) received by PID 45864 (TID 0x7f613fe3e700) from PID 0; stack trace: ***
[2m[36m(pid=45785)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45785)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45785)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45785)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45785)[0m *** SIGSEGV (@0x0) received by PID 45785 (TID 0x7f21da33e700) from PID 0; stack trace: ***
[2m[36m(pid=45786)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45786)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45786)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45786)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45786)[0m *** SIGSEGV (@0x0) received by PID 45786 (TID 0x7fa2cc9c4700) from PID 0; stack trace: ***
[2m[36m(pid=45786)[0m     @     0x7fa2cc59d390 (unknown)
[2m[36m(pid=45786)[0m     @     0x7f73c9940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45789)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45789)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45789)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45789)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45789)[0m *** SIGSEGV (@0x0) received by PID 45789 (TID 0x7fb96f3fd700) from PID 0; stack trace: ***
[2m[36m(pid=45789)[0m     @     0x7fb96efd6390 (unknown)
[2m[36m(pid=45789)[0m     @     0x7f8a6ef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45789)[0m     @     0x7f8a6e63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45789)[0m     @     0x7f8a6e6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45882)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45882)[0m *** SIGSEGV (@0x0) received by PID 45882 (TID 0x7f3cc7d37700) from PID 0; stack trace: ***
[2m[36m(pid=45882)[0m     @     0x7f3cc7910390 (unknown)
[2m[36m(pid=45882)[0m     @     0x7f0dc789ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45882)[0m     @     0x7f0dc6fc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45882)[0m     @     0x7f0dc6fcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45879)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45879)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45879)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45879)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45879)[0m *** SIGSEGV (@0x0) received by PID 45879 (TID 0x7f0e70546700) from PID 0; stack trace: ***
[2m[36m(pid=45879)[0m     @     0x7f0e7011f390 (unknown)
[2m[36m(pid=45879)[0m     @     0x7edf700cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45879)[0m     @     0x7edf6f7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45798)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45798)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45798)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45798)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45798)[0m *** SIGSEGV (@0x0) received by PID 45798 (TID 0x7f1b451ea700) from PID 0; stack trace: ***
[2m[36m(pid=45798)[0m     @     0x7f1b44dc3390 (unknown)
[2m[36m(pid=45798)[0m     @     0x7eec44c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45798)[0m     @     0x7eec4439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45798)[0m     @     0x7eec443a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45818)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45818)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45818)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45818)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45818)[0m *** SIGSEGV (@0x0) received by PID 45818 (TID 0x7fa512fa6700) from PID 0; stack trace: ***
[2m[36m(pid=45818)[0m     @     0x7fa512b7f390 (unknown)
[2m[36m(pid=45818)[0m     @     0x7f7612ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45818)[0m     @     0x7f76121fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45818)[0m     @     0x7f76121ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45878)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45878)[0m *** SIGSEGV (@0x0) received by PID 45878 (TID 0x7f419af48700) from PID 0; stack trace: ***
[2m[36m(pid=45878)[0m     @     0x7f419ab21390 (unknown)
[2m[36m(pid=45878)[0m     @     0x7f129aad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45878)[0m     @     0x7f129a1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45878)[0m     @     0x7f129a1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45791)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45791)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45791)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45791)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45791)[0m *** SIGSEGV (@0x0) received by PID 45791 (TID 0x7fa61f785700) from PID 0; stack trace: ***
[2m[36m(pid=45791)[0m     @     0x7fa61f35e390 (unknown)
[2m[36m(pid=45791)[0m     @     0x7f771f2e6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45791)[0m     @     0x7f771ea117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45791)[0m     @     0x7f771ea148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45791)[0m     @     0x7f771ea14ad3 at::TensorIterator::for_each()
[2m[36m(pid=45898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45898)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45898)[0m *** SIGSEGV (@0x0) received by PID 45898 (TID 0x7f372ec06700) from PID 0; stack trace: ***
[2m[36m(pid=45898)[0m     @     0x7f372e7df390 (unknown)
[2m[36m(pid=45898)[0m     @     0x7f082e5a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45898)[0m     @     0x7f082dccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45898)[0m     @     0x7f082dcd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45855)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45855)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45855)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45855)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45855)[0m *** SIGSEGV (@0x0) received by PID 45855 (TID 0x7f9dd35f9700) from PID 0; stack trace: ***
[2m[36m(pid=45855)[0m     @     0x7f9dd31d2390 (unknown)
[2m[36m(pid=45855)[0m     @     0x7f6ed3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45855)[0m     @     0x7f6ed284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45855)[0m     @     0x7f6ed28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45855)[0m     @     0x7f6ed2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=45788)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45788)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45788)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45788)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45788)[0m *** SIGSEGV (@0x0) received by PID 45788 (TID 0x7f2c5cd49700) from PID 0; stack trace: ***
[2m[36m(pid=45788)[0m     @     0x7f2c5c922390 (unknown)
[2m[36m(pid=45788)[0m     @     0x7efd5c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45788)[0m     @     0x7efd5be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45788)[0m     @     0x7efd5bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45796)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45796)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45796)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45796)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45796)[0m *** SIGSEGV (@0x0) received by PID 45796 (TID 0x7fbb63782700) from PID 0; stack trace: ***
[2m[36m(pid=45796)[0m     @     0x7fbb6335b390 (unknown)
[2m[36m(pid=45796)[0m     @     0x7f8c63229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45796)[0m     @     0x7f8c629547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45796)[0m     @     0x7f8c629578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45796)[0m     @     0x7f8c62957ad3 at::TensorIterator::for_each()
[2m[36m(pid=45870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45870)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45870)[0m *** SIGSEGV (@0x0) received by PID 45870 (TID 0x7f29f11f3700) from PID 0; stack trace: ***
[2m[36m(pid=45870)[0m     @     0x7f29f0dcc390 (unknown)
[2m[36m(pid=45870)[0m     @     0x7efaf0c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45870)[0m     @     0x7efaf039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45859)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45859)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45859)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45859)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45859)[0m *** SIGSEGV (@0x0) received by PID 45859 (TID 0x7fa916c09700) from PID 0; stack trace: ***
[2m[36m(pid=45859)[0m     @     0x7fa9167e2390 (unknown)
[2m[36m(pid=45859)[0m     @     0x7f7a164f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45859)[0m     @     0x7f7a15c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45859)[0m     @     0x7f7a15c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45803)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45803)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45803)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45803)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45803)[0m *** SIGSEGV (@0x0) received by PID 45803 (TID 0x7f30de795700) from PID 0; stack trace: ***
[2m[36m(pid=45803)[0m     @     0x7f30de36e390 (unknown)
[2m[36m(pid=45803)[0m     @     0x7f01de31ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45803)[0m     @     0x7f01dda497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45803)[0m     @     0x7f01dda4c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45812)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45812)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45812)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45812)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45812)[0m *** SIGSEGV (@0x0) received by PID 45812 (TID 0x7fbd8d3b8700) from PID 0; stack trace: ***
[2m[36m(pid=45812)[0m     @     0x7fbd8cf91390 (unknown)
[2m[36m(pid=45812)[0m     @     0x7f8e8cea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45812)[0m     @     0x7f8e8c5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45812)[0m     @     0x7f8e8c5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45903)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45903)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45903)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45903)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45903)[0m *** SIGSEGV (@0x0) received by PID 45903 (TID 0x7fa262f96700) from PID 0; stack trace: ***
[2m[36m(pid=45903)[0m     @     0x7fa262b6f390 (unknown)
[2m[36m(pid=45903)[0m     @     0x7f7362a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45903)[0m     @     0x7f736214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45903)[0m     @     0x7f736214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45861)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45861)[0m *** SIGSEGV (@0x0) received by PID 45861 (TID 0x7fb36dcf5700) from PID 0; stack trace: ***
[2m[36m(pid=45861)[0m     @     0x7fb36d8ce390 (unknown)
[2m[36m(pid=45861)[0m     @     0x7f846d6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45861)[0m     @     0x7f846ce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45846)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45846)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45846)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45846)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45846)[0m *** SIGSEGV (@0x0) received by PID 45846 (TID 0x7f614b3af700) from PID 0; stack trace: ***
[2m[36m(pid=45846)[0m     @     0x7f614af88390 (unknown)
[2m[36m(pid=45846)[0m     @     0x7f324af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45846)[0m     @     0x7f324a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45857)[0m     @     0x7fae80db27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45857)[0m     @     0x7fae80db58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45857)[0m     @     0x7fae80db5ad3 at::TensorIterator::for_each()
[2m[36m(pid=45857)[0m     @     0x7fae80db5d91 at::TensorIterator::for_each()
[2m[36m(pid=45883)[0m     @     0x7f2e584258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45883)[0m     @     0x7f2e58425ad3 at::TensorIterator::for_each()
[2m[36m(pid=45883)[0m     @     0x7f2e58425d91 at::TensorIterator::for_each()
[2m[36m(pid=45792)[0m     @     0x7f2896e81f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45792)[0m     @     0x7f28965ac7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45792)[0m     @     0x7f28965af8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45792)[0m     @     0x7f28965afad3 at::TensorIterator::for_each()
[2m[36m(pid=45874)[0m     @     0x7fb827d81f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45874)[0m     @     0x7fb8274ac7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45874)[0m     @     0x7fb8274af8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45874)[0m     @     0x7fb8274afad3 at::TensorIterator::for_each()
[2m[36m(pid=45869)[0m     @     0x7ef7f60284f5 at::Tensor::copy_()
[2m[36m(pid=45869)[0m     @     0x7ef7fc0d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45869)[0m     @     0x5627a62b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45869)[0m     @     0x5627a620fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45869)[0m     @     0x5627a629abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45869)[0m     @     0x5627a629ba20 method_vectorcall
[2m[36m(pid=45869)[0m     @     0x5627a620fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45869)[0m     @     0x5627a629abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45869)[0m     @     0x5627a629b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45869)[0m     @     0x5627a6210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45869)[0m     @     0x5627a629abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45869)[0m     @     0x5627a629b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45869)[0m     @     0x5627a6210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45869)[0m     @     0x5627a629abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45869)[0m     @     0x5627a629b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45869)[0m     @     0x5627a6210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45869)[0m     @     0x5627a629abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45869)[0m     @     0x5627a629b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45869)[0m     @     0x5627a6210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x7f3a90f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45810)[0m     @     0x7f3a90f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45810)[0m     @     0x7f3a90f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45849)[0m     @     0x7f5163c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45849)[0m     @     0x7f5163c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=45849)[0m     @     0x7f5163c91d91 at::TensorIterator::for_each()
[2m[36m(pid=45905)[0m     @     0x7f6851564f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45905)[0m     @     0x7f6850c8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45905)[0m     @     0x7f6850c928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45905)[0m     @     0x7f6850c92ad3 at::TensorIterator::for_each()
[2m[36m(pid=45880)[0m     @     0x7fb2f1b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45880)[0m     @     0x7fb2f12a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45880)[0m     @     0x7fb2f12a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45880)[0m     @     0x7fb2f12a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=45904)[0m     @     0x7f1c38cac390 (unknown)
[2m[36m(pid=45904)[0m     @     0x7eed38b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45904)[0m     @     0x7eed382667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45904)[0m     @     0x7eed382698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45904)[0m     @     0x7eed38269ad3 at::TensorIterator::for_each()
[2m[36m(pid=45887)[0m     @     0x7fb07098a4f5 at::Tensor::copy_()
[2m[36m(pid=45887)[0m     @     0x7fb072e5d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45887)[0m     @     0x7fb07098a4f5 at::Tensor::copy_()
[2m[36m(pid=45887)[0m     @     0x7fb076a3579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45887)[0m     @     0x55a07fb0ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45887)[0m     @     0x55a07fa6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45887)[0m     @     0x55a07faf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45887)[0m     @     0x55a07faf6a20 method_vectorcall
[2m[36m(pid=45887)[0m     @     0x55a07fa6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45887)[0m     @     0x55a07faf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45887)[0m     @     0x55a07faf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45887)[0m     @     0x55a07fa6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45887)[0m     @     0x55a07faf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45887)[0m     @     0x55a07faf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45887)[0m     @     0x55a07fa6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45887)[0m     @     0x55a07faf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45887)[0m     @     0x55a07faf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45887)[0m     @     0x55a07fa6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45887)[0m     @     0x55a07faf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x7f6dd65c2390 (unknown)
[2m[36m(pid=45866)[0m     @     0x7f3ed64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45866)[0m     @     0x7f3ed5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45866)[0m     @     0x7f3ed5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45866)[0m     @     0x7f3ed5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45909)[0m     @     0x7f9b630504f5 at::Tensor::copy_()
[2m[36m(pid=45909)[0m     @     0x7f9b655238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45909)[0m     @     0x7f9b630504f5 at::Tensor::copy_()
[2m[36m(pid=45909)[0m     @     0x7f9b690fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45909)[0m     @     0x5577c9143fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45909)[0m     @     0x5577c909eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45909)[0m     @     0x5577c9129baf _PyEval_EvalCodeWithName
[2m[36m(pid=45909)[0m     @     0x5577c912aa20 method_vectorcall
[2m[36m(pid=45909)[0m     @     0x5577c909ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45909)[0m     @     0x5577c9129baf _PyEval_EvalCodeWithName
[2m[36m(pid=45909)[0m     @     0x5577c912a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45909)[0m     @     0x5577c909f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45909)[0m     @     0x5577c9129baf _PyEval_EvalCodeWithName
[2m[36m(pid=45909)[0m     @     0x5577c912a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45909)[0m     @     0x5577c909f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45909)[0m     @     0x5577c9129baf _PyEval_EvalCodeWithName
[2m[36m(pid=45909)[0m     @     0x5577c912a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45909)[0m     @     0x5577c909f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45909)[0m     @     0x5577c9129baf _PyEval_EvalCodeWithName
[2m[36m(pid=45909)[0m     @     0x5577c912a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45909)[0m     @     0x5577c909f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x7f730bc2aad3 at::TensorIterator::for_each()
[2m[36m(pid=45868)[0m     @     0x7f730bc2ad91 at::TensorIterator::for_each()
[2m[36m(pid=45868)[0m     @     0x7f730c50db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45868)[0m     @     0x7f730c530c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45860)[0m     @     0x7f09fb3124f5 at::Tensor::copy_()
[2m[36m(pid=45860)[0m     @     0x7f09fd7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45860)[0m     @     0x7f09fb3124f5 at::Tensor::copy_()
[2m[36m(pid=45860)[0m     @     0x7f0a013bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45860)[0m     @     0x559bfa294fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45860)[0m     @     0x559bfa1efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45860)[0m     @     0x559bfa27abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45860)[0m     @     0x559bfa27ba20 method_vectorcall
[2m[36m(pid=45860)[0m     @     0x559bfa1efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45860)[0m     @     0x559bfa27abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45860)[0m     @     0x559bfa27b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45860)[0m     @     0x559bfa1f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45860)[0m     @     0x559bfa27abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45860)[0m     @     0x559bfa27b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45860)[0m     @     0x559bfa1f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45860)[0m     @     0x559bfa27abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45860)[0m     @     0x559bfa27b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45860)[0m     @     0x559bfa1f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45860)[0m     @     0x559bfa27abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45860)[0m     @     0x559bfa27b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45860)[0m     @     0x559bfa1f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x7fbf095528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45853)[0m     @     0x7fbf09552ad3 at::TensorIterator::for_each()
[2m[36m(pid=45891)[0m     @     0x7eeab7a648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45891)[0m     @     0x7eeab7a64ad3 at::TensorIterator::for_each()
[2m[36m(pid=45891)[0m     @     0x7eeab7a64d91 at::TensorIterator::for_each()
[2m[36m(pid=45921)[0m     @     0x7f62917ce4f5 at::Tensor::copy_()
[2m[36m(pid=45921)[0m     @     0x7f629787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45921)[0m     @     0x55c97d799fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45921)[0m     @     0x55c97d6f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45921)[0m     @     0x55c97d77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45921)[0m     @     0x55c97d780a20 method_vectorcall
[2m[36m(pid=45921)[0m     @     0x55c97d6f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45921)[0m     @     0x55c97d77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45921)[0m     @     0x55c97d780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45921)[0m     @     0x55c97d6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45921)[0m     @     0x55c97d77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45921)[0m     @     0x55c97d780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45921)[0m     @     0x55c97d6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45921)[0m     @     0x55c97d77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45921)[0m     @     0x55c97d780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45921)[0m     @     0x55c97d6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45921)[0m     @     0x55c97d77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45921)[0m     @     0x55c97d780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45921)[0m     @     0x55c97d6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x7ef299f0c4f5 at::Tensor::copy_()
[2m[36m(pid=45912)[0m     @     0x7ef29ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45912)[0m     @     0x55f857a31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45912)[0m     @     0x55f85798cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x55f857a17baf _PyEval_EvalCodeWithName
[2m[36m(pid=45912)[0m     @     0x55f857a18a20 method_vectorcall
[2m[36m(pid=45912)[0m     @     0x55f85798cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x55f857a17baf _PyEval_EvalCodeWithName
[2m[36m(pid=45912)[0m     @     0x55f857a18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45912)[0m     @     0x55f85798d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x55f857a17baf _PyEval_EvalCodeWithName
[2m[36m(pid=45912)[0m     @     0x55f857a18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45912)[0m     @     0x55f85798d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x55f857a17baf _PyEval_EvalCodeWithName
[2m[36m(pid=45912)[0m     @     0x55f857a18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45912)[0m     @     0x55f85798d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45912)[0m     @     0x55f857a17baf _PyEval_EvalCodeWithName
[2m[36m(pid=45912)[0m     @     0x55f857a18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45912)[0m     @     0x55f85798d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x7f56205d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45889)[0m     @     0x7f56205d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45889)[0m     @     0x7f56205d2d91 at::TensorIterator::for_each()
[2m[36m(pid=45889)[0m     @     0x7f5620eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45896)[0m     @     0x7fb58079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45896)[0m     @     0x7fb57e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=45896)[0m     @     0x7fb58437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45896)[0m     @     0x56264e27dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45896)[0m     @     0x56264e1d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45896)[0m     @     0x56264e263baf _PyEval_EvalCodeWithName
[2m[36m(pid=45896)[0m     @     0x56264e264a20 method_vectorcall
[2m[36m(pid=45896)[0m     @     0x56264e1d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45896)[0m     @     0x56264e263baf _PyEval_EvalCodeWithName
[2m[36m(pid=45896)[0m     @     0x56264e264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45896)[0m     @     0x56264e1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45896)[0m     @     0x56264e263baf _PyEval_EvalCodeWithName
[2m[36m(pid=45896)[0m     @     0x56264e264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45896)[0m     @     0x56264e1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45896)[0m     @     0x56264e263baf _PyEval_EvalCodeWithName
[2m[36m(pid=45896)[0m     @     0x56264e264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45896)[0m     @     0x56264e1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45896)[0m     @     0x56264e263baf _PyEval_EvalCodeWithName
[2m[36m(pid=45896)[0m     @     0x56264e264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45896)[0m     @     0x56264e1d9689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:44:44,481	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=45884)[0m     @     0x7fad5e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=45884)[0m     @     0x7fad6437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45884)[0m     @     0x559b992f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45884)[0m     @     0x559b99253b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45884)[0m     @     0x559b992debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45884)[0m     @     0x559b992dfa20 method_vectorcall
[2m[36m(pid=45884)[0m     @     0x559b99253bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45884)[0m     @     0x559b992debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45884)[0m     @     0x559b992df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45884)[0m     @     0x559b99254689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45884)[0m     @     0x559b992debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45884)[0m     @     0x559b992df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45884)[0m     @     0x559b99254689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45884)[0m     @     0x559b992debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45884)[0m     @     0x559b992df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45884)[0m     @     0x559b99254689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45884)[0m     @     0x559b992debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45884)[0m     @     0x559b992df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45884)[0m     @     0x559b99254689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x7f8d48e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45871)[0m     @     0x7f8d48e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45807)[0m     @     0x7fbc39c227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45807)[0m     @     0x7fbc39c258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45807)[0m     @     0x7fbc39c25ad3 at::TensorIterator::for_each()
[2m[36m(pid=45804)[0m     @     0x7fc9157f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45804)[0m     @     0x7fc914f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45804)[0m     @     0x7fc914f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45804)[0m     @     0x7fc914f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45858)[0m     @     0x7f194330e390 (unknown)
[2m[36m(pid=45858)[0m     @     0x7eea43229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45858)[0m     @     0x7eea429547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45858)[0m     @     0x7eea429578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45858)[0m     @     0x7eea42957ad3 at::TensorIterator::for_each()
[2m[36m(pid=45799)[0m     @     0x7f57625a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45799)[0m     @     0x7f5761ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45799)[0m     @     0x7f5761cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45799)[0m     @     0x7f5761cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45865)[0m     @     0x7fa1a21d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45865)[0m     @     0x7fa1a21d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45865)[0m     @     0x7fa1a21d2d91 at::TensorIterator::for_each()
[2m[36m(pid=45894)[0m     @     0x7f9de53ba4f5 at::Tensor::copy_()
[2m[36m(pid=45894)[0m     @     0x7f9deb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45894)[0m     @     0x555dbc731fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45894)[0m     @     0x555dbc68cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45894)[0m     @     0x555dbc717baf _PyEval_EvalCodeWithName
[2m[36m(pid=45894)[0m     @     0x555dbc718a20 method_vectorcall
[2m[36m(pid=45894)[0m     @     0x555dbc68cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45894)[0m     @     0x555dbc717baf _PyEval_EvalCodeWithName
[2m[36m(pid=45894)[0m     @     0x555dbc718643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45894)[0m     @     0x555dbc68d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45894)[0m     @     0x555dbc717baf _PyEval_EvalCodeWithName
[2m[36m(pid=45894)[0m     @     0x555dbc718643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45894)[0m     @     0x555dbc68d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45894)[0m     @     0x555dbc717baf _PyEval_EvalCodeWithName
[2m[36m(pid=45894)[0m     @     0x555dbc718643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45894)[0m     @     0x555dbc68d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45894)[0m     @     0x555dbc717baf _PyEval_EvalCodeWithName
[2m[36m(pid=45894)[0m     @     0x555dbc718643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45894)[0m     @     0x555dbc68d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x7f335b0d5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45862)[0m     @     0x7f335a8007db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45862)[0m     @     0x7f335a8038f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45862)[0m     @     0x7f335a803ad3 at::TensorIterator::for_each()
[2m[36m(pid=45862)[0m     @     0x7f335a803d91 at::TensorIterator::for_each()
[2m[36m(pid=45877)[0m     @     0x7f94413c8390 (unknown)
[2m[36m(pid=45877)[0m     @     0x7f654135ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45877)[0m     @     0x7f6540a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45877)[0m     @     0x7f6540a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45877)[0m     @     0x7f6540a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=45842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45842)[0m *** SIGSEGV (@0x0) received by PID 45842 (TID 0x7f05fdc34700) from PID 0; stack trace: ***
[2m[36m(pid=45842)[0m     @     0x7f05fd80d390 (unknown)
[2m[36m(pid=45842)[0m     @     0x7ed6fd6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45842)[0m     @     0x7ed6fce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45794)[0m *** SIGSEGV (@0x0) received by PID 45794 (TID 0x7f8b007d7700) from PID 0; stack trace: ***
[2m[36m(pid=45794)[0m     @     0x7f8b003b0390 (unknown)
[2m[36m(pid=45794)[0m     @     0x7f5c00101f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45794)[0m     @     0x7f5bff82c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45844)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45844)[0m *** SIGSEGV (@0x0) received by PID 45844 (TID 0x7f1185fa7700) from PID 0; stack trace: ***
[2m[36m(pid=45844)[0m     @     0x7f1185b80390 (unknown)
[2m[36m(pid=45844)[0m     @     0x7ee285a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45844)[0m     @     0x7ee2851357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45844)[0m     @     0x7ee2851388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45822)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45822)[0m *** SIGSEGV (@0x0) received by PID 45822 (TID 0x7fdc0b4bf700) from PID 0; stack trace: ***
[2m[36m(pid=45822)[0m     @     0x7fdc0b098390 (unknown)
[2m[36m(pid=45822)[0m     @     0x7fad0af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45822)[0m     @     0x7fad0a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45822)[0m     @     0x7fad0a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45895)[0m     @     0x7f9b3a7b7390 (unknown)
[2m[36m(pid=45895)[0m     @     0x7f6c3a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45895)[0m     @     0x7f6c39c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45895)[0m     @     0x7f6c39c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45895)[0m     @     0x7f6c39c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45906)[0m     @     0x7ef9f4e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45906)[0m     @     0x7ef9f45627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45906)[0m     @     0x7ef9f45658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45906)[0m     @     0x7ef9f4565ad3 at::TensorIterator::for_each()
[2m[36m(pid=45885)[0m     @     0x7f8503f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45885)[0m     @     0x7f8503f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=45885)[0m     @     0x7f8503f53d91 at::TensorIterator::for_each()
[2m[36m(pid=45885)[0m     @     0x7f8504836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45809)[0m     @     0x7f60a4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45809)[0m     @     0x7f60a4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45809)[0m     @     0x7f60a4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=45809)[0m     @     0x7f60a580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45809)[0m     @     0x7f60a582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45805)[0m     @     0x7fbe96fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45805)[0m     @     0x7fbe96fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=45805)[0m     @     0x7fbe96fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=45805)[0m     @     0x7fbe978c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45805)[0m     @     0x7fbe978e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45805)[0m     @     0x7fbe96d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45805)[0m     @     0x7fbe96d85388 at::native::copy_impl()
[2m[36m(pid=45808)[0m     @     0x7f149d41d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45808)[0m     @     0x7f149d41dad3 at::TensorIterator::for_each()
[2m[36m(pid=45808)[0m     @     0x7f149d41dd91 at::TensorIterator::for_each()
[2m[36m(pid=45808)[0m     @     0x7f149dd00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45808)[0m     @     0x7f149dd23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45808)[0m     @     0x7f149d1c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45808)[0m     @     0x7f149d1c3388 at::native::copy_impl()
[2m[36m(pid=45787)[0m     @     0x7ef25da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45787)[0m     @     0x7ef25da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=45787)[0m     @     0x7ef25da79d91 at::TensorIterator::for_each()
[2m[36m(pid=45787)[0m     @     0x7ef25e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45787)[0m     @     0x7ef25e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45787)[0m     @     0x7ef25d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45787)[0m     @     0x7ef25d81f388 at::native::copy_impl()
[2m[36m(pid=45811)[0m     @     0x7fb4eeb98ad3 at::TensorIterator::for_each()
[2m[36m(pid=45811)[0m     @     0x7fb4eeb98d91 at::TensorIterator::for_each()
[2m[36m(pid=45811)[0m     @     0x7fb4ef47bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45811)[0m     @     0x7fb4ef49ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45811)[0m     @     0x7fb4ee940a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45811)[0m     @     0x7fb4ee93e388 at::native::copy_impl()
[2m[36m(pid=45811)[0m     @     0x7fb4ee9405a4 at::native::copy_()
[2m[36m(pid=45901)[0m     @     0x7f3f8bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45901)[0m     @     0x7f3f8bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=45901)[0m     @     0x7f3f8bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=45901)[0m     @     0x7f3f8c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45901)[0m     @     0x7f3f8c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45901)[0m     @     0x7f3f8bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45901)[0m     @     0x7f3f8bcf9388 at::native::copy_impl()
[2m[36m(pid=45820)[0m     @     0x7f06a6aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45820)[0m     @     0x7f06a45f74f5 at::Tensor::copy_()
[2m[36m(pid=45820)[0m     @     0x7f06aa6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45820)[0m     @     0x55c5590dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45820)[0m     @     0x55c559037b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45820)[0m     @     0x55c5590c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45820)[0m     @     0x55c5590c3a20 method_vectorcall
[2m[36m(pid=45820)[0m     @     0x55c559037bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45820)[0m     @     0x55c5590c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45820)[0m     @     0x55c5590c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45820)[0m     @     0x55c559038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45820)[0m     @     0x55c5590c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45820)[0m     @     0x55c5590c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45820)[0m     @     0x55c559038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45820)[0m     @     0x55c5590c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45820)[0m     @     0x55c5590c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45820)[0m     @     0x55c559038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45820)[0m     @     0x55c5590c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45820)[0m     @     0x55c5590c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45820)[0m     @     0x55c559038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x7f718753c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45793)[0m     @     0x7f718753cad3 at::TensorIterator::for_each()
[2m[36m(pid=45793)[0m     @     0x7f718753cd91 at::TensorIterator::for_each()
[2m[36m(pid=45793)[0m     @     0x7f7187e1fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45793)[0m     @     0x7f7187e42c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45793)[0m     @     0x7f71872e4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45793)[0m     @     0x7f71872e2388 at::native::copy_impl()
[2m[36m(pid=45802)[0m     @     0x7f332fa678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45802)[0m     @     0x7f332fa67ad3 at::TensorIterator::for_each()
[2m[36m(pid=45802)[0m     @     0x7f332fa67d91 at::TensorIterator::for_each()
[2m[36m(pid=45802)[0m     @     0x7f333034ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45802)[0m     @     0x7f333036dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45802)[0m     @     0x7f332f80fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45802)[0m     @     0x7f332f80d388 at::native::copy_impl()
[2m[36m(pid=45850)[0m     @     0x7f09b41cf4f5 at::Tensor::copy_()
[2m[36m(pid=45850)[0m     @     0x7f09b66a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45850)[0m     @     0x7f09b41cf4f5 at::Tensor::copy_()
[2m[36m(pid=45850)[0m     @     0x7f09ba27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45850)[0m     @     0x556dd4f26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45850)[0m     @     0x556dd4e81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45850)[0m     @     0x556dd4f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45850)[0m     @     0x556dd4f0da20 method_vectorcall
[2m[36m(pid=45850)[0m     @     0x556dd4e81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45850)[0m     @     0x556dd4f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45850)[0m     @     0x556dd4f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45850)[0m     @     0x556dd4e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45850)[0m     @     0x556dd4f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45850)[0m     @     0x556dd4f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45850)[0m     @     0x556dd4e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45850)[0m     @     0x556dd4f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45850)[0m     @     0x556dd4f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45850)[0m     @     0x556dd4e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45850)[0m     @     0x556dd4f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45850)[0m     @     0x556dd4f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45850)[0m     @     0x556dd4e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45863)[0m *** SIGSEGV (@0x0) received by PID 45863 (TID 0x7f78839cd700) from PID 0; stack trace: ***
[2m[36m(pid=45863)[0m     @     0x7f78835a6390 (unknown)
[2m[36m(pid=45863)[0m     @     0x7f498354df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45863)[0m     @     0x7f4982c787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45863)[0m     @     0x7f4982c7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45863)[0m     @     0x7f4982c7bad3 at::TensorIterator::for_each()
[2m[36m(pid=45806)[0m     @     0x7fab8954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45806)[0m     @     0x7fab895528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45806)[0m     @     0x7fab89552ad3 at::TensorIterator::for_each()
[2m[36m(pid=45806)[0m     @     0x7fab89552d91 at::TensorIterator::for_each()
[2m[36m(pid=45806)[0m     @     0x7fab89e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45806)[0m     @     0x7fab89e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45806)[0m     @     0x7fab892faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45795)[0m     @     0x7f39601648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45795)[0m     @     0x7f3960164ad3 at::TensorIterator::for_each()
[2m[36m(pid=45795)[0m     @     0x7f3960164d91 at::TensorIterator::for_each()
[2m[36m(pid=45795)[0m     @     0x7f3960a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45795)[0m     @     0x7f3960a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45795)[0m     @     0x7f395ff0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45876)[0m     @     0x7f749b31d390 (unknown)
[2m[36m(pid=45876)[0m     @     0x7f459b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45876)[0m     @     0x7f459a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45876)[0m     @     0x7f459a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45876)[0m     @     0x7f459a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=45876)[0m     @     0x7f459a957d91 at::TensorIterator::for_each()
[2m[36m(pid=45876)[0m     @     0x7f459b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45876)[0m     @     0x7f459b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45790)[0m     @     0x7f7c5e78ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45790)[0m     @     0x7f7c5deb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45790)[0m     @     0x7f7c5debc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45790)[0m     @     0x7f7c5debcad3 at::TensorIterator::for_each()
[2m[36m(pid=45790)[0m     @     0x7f7c5debcd91 at::TensorIterator::for_each()
[2m[36m(pid=45790)[0m     @     0x7f7c5e79fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45790)[0m     @     0x7f7c5e7c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45800)[0m     @     0x7f9af07b7390 (unknown)
[2m[36m(pid=45800)[0m     @     0x7f6bf0563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45800)[0m     @     0x7f6befc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45800)[0m     @     0x7f6befc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45800)[0m     @     0x7f6befc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=45800)[0m     @     0x7f6befc91d91 at::TensorIterator::for_each()
[2m[36m(pid=45800)[0m     @     0x7f6bf0574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45800)[0m     @     0x7f6bf0597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45852)[0m     @     0x7f27cc818390 (unknown)
[2m[36m(pid=45852)[0m     @     0x7ef8cc563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45852)[0m     @     0x7ef8cbc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45852)[0m     @     0x7ef8cbc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45852)[0m     @     0x7ef8cbc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=45852)[0m     @     0x7ef8cbc91d91 at::TensorIterator::for_each()
[2m[36m(pid=45852)[0m     @     0x7ef8cc574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45852)[0m     @     0x7ef8cc597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45814)[0m     @     0x7fdd759dd390 (unknown)
[2m[36m(pid=45814)[0m     @     0x7fae757f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45814)[0m     @     0x7fae74f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45814)[0m     @     0x7fae74f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45814)[0m     @     0x7fae74f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45814)[0m     @     0x7fae74f27d91 at::TensorIterator::for_each()
[2m[36m(pid=45814)[0m     @     0x7fae7580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45814)[0m     @     0x7fae7582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45872)[0m     @     0x7f321b43a390 (unknown)
[2m[36m(pid=45872)[0m     @     0x7f031b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45872)[0m     @     0x7f031a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45872)[0m     @     0x7f031a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45872)[0m     @     0x7f031a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=45872)[0m     @     0x7f031a957d91 at::TensorIterator::for_each()
[2m[36m(pid=45872)[0m     @     0x7f031b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45864)[0m     @     0x7f613fa17390 (unknown)
[2m[36m(pid=45864)[0m     @     0x7f323f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45864)[0m     @     0x7f323f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45864)[0m     @     0x7f323f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45864)[0m     @     0x7f323f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=45864)[0m     @     0x7f323f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=45864)[0m     @     0x7f323f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45864)[0m     @     0x7f323f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45785)[0m     @     0x7f21d9f17390 (unknown)
[2m[36m(pid=45785)[0m     @     0x7ef2d9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45785)[0m     @     0x7ef2d954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45785)[0m     @     0x7ef2d95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45785)[0m     @     0x7ef2d9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=45786)[0m     @     0x7f73c906b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45786)[0m     @     0x7f73c906e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45786)[0m     @     0x7f73c906ead3 at::TensorIterator::for_each()
[2m[36m(pid=45786)[0m     @     0x7f73c906ed91 at::TensorIterator::for_each()
[2m[36m(pid=45786)[0m     @     0x7f73c9951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45786)[0m     @     0x7f73c9974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45786)[0m     @     0x7f73c8e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45786)[0m     @     0x7f73c8e14388 at::native::copy_impl()
[2m[36m(pid=45867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=45867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=45867)[0m *** Aborted at 1604573084 (unix time) try "date -d @1604573084" if you are using GNU date ***
[2m[36m(pid=45867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=45867)[0m *** SIGSEGV (@0x0) received by PID 45867 (TID 0x7f408a84d700) from PID 0; stack trace: ***
[2m[36m(pid=45867)[0m     @     0x7f408a426390 (unknown)
[2m[36m(pid=45867)[0m     @     0x7f118a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=45867)[0m     @     0x7f1189a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=45867)[0m     @     0x7f1189a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45867)[0m     @     0x7f1189a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=45789)[0m     @     0x7f8a6e641ad3 at::TensorIterator::for_each()
[2m[36m(pid=45789)[0m     @     0x7f8a6e641d91 at::TensorIterator::for_each()
[2m[36m(pid=45789)[0m     @     0x7f8a6ef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45789)[0m     @     0x7f8a6ef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45789)[0m     @     0x7f8a6e3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45789)[0m     @     0x7f8a6e3e7388 at::native::copy_impl()
[2m[36m(pid=45882)[0m     @     0x7f0dc6fccad3 at::TensorIterator::for_each()
[2m[36m(pid=45882)[0m     @     0x7f0dc6fccd91 at::TensorIterator::for_each()
[2m[36m(pid=45882)[0m     @     0x7f0dc78afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45882)[0m     @     0x7f0dc78d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45882)[0m     @     0x7f0dc6d74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45882)[0m     @     0x7f0dc6d72388 at::native::copy_impl()
[2m[36m(pid=45879)[0m     @     0x7edf6f7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45879)[0m     @     0x7edf6f7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=45798)[0m     @     0x7eec443a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45798)[0m     @     0x7eec443a2d91 at::TensorIterator::for_each()
[2m[36m(pid=45798)[0m     @     0x7eec44c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45798)[0m     @     0x7eec44ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45798)[0m     @     0x7eec4414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45798)[0m     @     0x7eec44148388 at::native::copy_impl()
[2m[36m(pid=45818)[0m     @     0x7f76121ffad3 at::TensorIterator::for_each()
[2m[36m(pid=45818)[0m     @     0x7f76121ffd91 at::TensorIterator::for_each()
[2m[36m(pid=45818)[0m     @     0x7f7612ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45818)[0m     @     0x7f7612b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45818)[0m     @     0x7f7611fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45878)[0m     @     0x7f129a1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=45878)[0m     @     0x7f129a1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=45878)[0m     @     0x7f129aae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45878)[0m     @     0x7f129ab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45791)[0m     @     0x7f771ea14d91 at::TensorIterator::for_each()
[2m[36m(pid=45791)[0m     @     0x7f771f2f7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45791)[0m     @     0x7f771f31ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45791)[0m     @     0x7f771e7bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45791)[0m     @     0x7f771e7ba388 at::native::copy_impl()
[2m[36m(pid=45791)[0m     @     0x7f771e7bc5a4 at::native::copy_()
[2m[36m(pid=45898)[0m     @     0x7f082dcd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45898)[0m     @     0x7f082dcd2d91 at::TensorIterator::for_each()
[2m[36m(pid=45898)[0m     @     0x7f082e5b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45898)[0m     @     0x7f082e5d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45898)[0m     @     0x7f082da7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45898)[0m     @     0x7f082da78388 at::native::copy_impl()
[2m[36m(pid=45898)[0m     @     0x7f082da7a5a4 at::native::copy_()
[2m[36m(pid=45855)[0m     @     0x7f6ed2852d91 at::TensorIterator::for_each()
[2m[36m(pid=45855)[0m     @     0x7f6ed3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45855)[0m     @     0x7f6ed3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45855)[0m     @     0x7f6ed25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45855)[0m     @     0x7f6ed25f8388 at::native::copy_impl()
[2m[36m(pid=45855)[0m     @     0x7f6ed25fa5a4 at::native::copy_()
[2m[36m(pid=45855)[0m     @     0x7f6ed2ce54f5 at::Tensor::copy_()
[2m[36m(pid=45788)[0m     @     0x7efd5bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45788)[0m     @     0x7efd5bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=45788)[0m     @     0x7efd5c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45788)[0m     @     0x7efd5c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45788)[0m     @     0x7efd5bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45788)[0m     @     0x7efd5bc48388 at::native::copy_impl()
[2m[36m(pid=45788)[0m     @     0x7efd5bc4a5a4 at::native::copy_()
[2m[36m(pid=45796)[0m     @     0x7f8c62957d91 at::TensorIterator::for_each()
[2m[36m(pid=45796)[0m     @     0x7f8c6323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45796)[0m     @     0x7f8c6325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45796)[0m     @     0x7f8c626ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45796)[0m     @     0x7f8c626fd388 at::native::copy_impl()
[2m[36m(pid=45796)[0m     @     0x7f8c626ff5a4 at::native::copy_()
[2m[36m(pid=45796)[0m     @     0x7f8c62dea4f5 at::Tensor::copy_()
[2m[36m(pid=45870)[0m     @     0x7efaf03a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45870)[0m     @     0x7efaf03a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45870)[0m     @     0x7efaf03a2d91 at::TensorIterator::for_each()
[2m[36m(pid=45870)[0m     @     0x7efaf0c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45870)[0m     @     0x7efaf0ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45870)[0m     @     0x7efaf014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45870)[0m     @     0x7efaf0148388 at::native::copy_impl()
[2m[36m(pid=45859)[0m     @     0x7f7a15c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=45859)[0m     @     0x7f7a15c27d91 at::TensorIterator::for_each()
[2m[36m(pid=45859)[0m     @     0x7f7a1650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45859)[0m     @     0x7f7a1652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45859)[0m     @     0x7f7a159cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45859)[0m     @     0x7f7a159cd388 at::native::copy_impl()
[2m[36m(pid=45803)[0m     @     0x7f01dda4cad3 at::TensorIterator::for_each()
[2m[36m(pid=45803)[0m     @     0x7f01dda4cd91 at::TensorIterator::for_each()
[2m[36m(pid=45803)[0m     @     0x7f01de32fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45803)[0m     @     0x7f01de352c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45803)[0m     @     0x7f01dd7f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45803)[0m     @     0x7f01dd7f2388 at::native::copy_impl()
[2m[36m(pid=45803)[0m     @     0x7f01dd7f45a4 at::native::copy_()
[2m[36m(pid=45812)[0m     @     0x7f8e8c5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=45812)[0m     @     0x7f8e8c5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=45812)[0m     @     0x7f8e8ceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45812)[0m     @     0x7f8e8ced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45812)[0m     @     0x7f8e8c37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45812)[0m     @     0x7f8e8c378388 at::native::copy_impl()
[2m[36m(pid=45812)[0m     @     0x7f8e8c37a5a4 at::native::copy_()
[2m[36m(pid=45903)[0m     @     0x7f736214fad3 at::TensorIterator::for_each()
[2m[36m(pid=45903)[0m     @     0x7f736214fd91 at::TensorIterator::for_each()
[2m[36m(pid=45903)[0m     @     0x7f7362a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45903)[0m     @     0x7f7362a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45903)[0m     @     0x7f7361ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45903)[0m     @     0x7f7361ef5388 at::native::copy_impl()
[2m[36m(pid=45903)[0m     @     0x7f7361ef75a4 at::native::copy_()
[2m[36m(pid=45861)[0m     @     0x7f846ce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45861)[0m     @     0x7f846ce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=45861)[0m     @     0x7f846ce22d91 at::TensorIterator::for_each()
[2m[36m(pid=45861)[0m     @     0x7f846d705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45861)[0m     @     0x7f846d728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45861)[0m     @     0x7f846cbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45861)[0m     @     0x7f846cbc8388 at::native::copy_impl()
[2m[36m(pid=45846)[0m     @     0x7f324a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45846)[0m     @     0x7f324a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=45846)[0m     @     0x7f324a641d91 at::TensorIterator::for_each()
[2m[36m(pid=45846)[0m     @     0x7f324af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45846)[0m     @     0x7f324af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45846)[0m     @     0x7f324a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45846)[0m     @     0x7f324a3e7388 at::native::copy_impl()
[2m[36m(pid=45857)[0m     @     0x7fae81698b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45857)[0m     @     0x7fae816bbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45857)[0m     @     0x7fae80b5da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45857)[0m     @     0x7fae80b5b388 at::native::copy_impl()
[2m[36m(pid=45857)[0m     @     0x7fae80b5d5a4 at::native::copy_()
[2m[36m(pid=45857)[0m     @     0x7fae812484f5 at::Tensor::copy_()
[2m[36m(pid=45857)[0m     @     0x7fae8371b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45883)[0m     @     0x7f2e58d08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45883)[0m     @     0x7f2e58d2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45883)[0m     @     0x7f2e581cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45883)[0m     @     0x7f2e581cb388 at::native::copy_impl()
[2m[36m(pid=45883)[0m     @     0x7f2e581cd5a4 at::native::copy_()
[2m[36m(pid=45883)[0m     @     0x7f2e588b84f5 at::Tensor::copy_()
[2m[36m(pid=45883)[0m     @     0x7f2e5ad8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45792)[0m     @     0x7f28965afd91 at::TensorIterator::for_each()
[2m[36m(pid=45792)[0m     @     0x7f2896e92b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45792)[0m     @     0x7f2896eb5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45792)[0m     @     0x7f2896357a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45792)[0m     @     0x7f2896355388 at::native::copy_impl()
[2m[36m(pid=45792)[0m     @     0x7f28963575a4 at::native::copy_()
[2m[36m(pid=45792)[0m     @     0x7f2896a424f5 at::Tensor::copy_()
[2m[36m(pid=45874)[0m     @     0x7fb8274afd91 at::TensorIterator::for_each()
[2m[36m(pid=45874)[0m     @     0x7fb827d92b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45874)[0m     @     0x7fb827db5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45874)[0m     @     0x7fb827257a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45874)[0m     @     0x7fb827255388 at::native::copy_impl()
[2m[36m(pid=45874)[0m     @     0x7fb8272575a4 at::native::copy_()
[2m[36m(pid=45874)[0m     @     0x7fb8279424f5 at::Tensor::copy_()
[2m[36m(pid=45810)[0m     @     0x7f3a90f27d91 at::TensorIterator::for_each()
[2m[36m(pid=45810)[0m     @     0x7f3a9180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45810)[0m     @     0x7f3a9182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45810)[0m     @     0x7f3a90ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45810)[0m     @     0x7f3a90ccd388 at::native::copy_impl()
[2m[36m(pid=45849)[0m     @     0x7f5164574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45849)[0m     @     0x7f5164597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45849)[0m     @     0x7f5163a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45849)[0m     @     0x7f5163a37388 at::native::copy_impl()
[2m[36m(pid=45849)[0m     @     0x7f5163a395a4 at::native::copy_()
[2m[36m(pid=45849)[0m     @     0x7f51641244f5 at::Tensor::copy_()
[2m[36m(pid=45849)[0m     @     0x7f51665f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45905)[0m     @     0x7f6850c92d91 at::TensorIterator::for_each()
[2m[36m(pid=45905)[0m     @     0x7f6851575b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45905)[0m     @     0x7f6851598c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45905)[0m     @     0x7f6850a3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45905)[0m     @     0x7f6850a38388 at::native::copy_impl()
[2m[36m(pid=45905)[0m     @     0x7f6850a3a5a4 at::native::copy_()
[2m[36m(pid=45905)[0m     @     0x7f68511254f5 at::Tensor::copy_()
[2m[36m(pid=45880)[0m     @     0x7fb2f12a8d91 at::TensorIterator::for_each()
[2m[36m(pid=45880)[0m     @     0x7fb2f1b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45880)[0m     @     0x7fb2f1baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45880)[0m     @     0x7fb2f1050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45880)[0m     @     0x7fb2f104e388 at::native::copy_impl()
[2m[36m(pid=45880)[0m     @     0x7fb2f10505a4 at::native::copy_()
[2m[36m(pid=45880)[0m     @     0x7fb2f173b4f5 at::Tensor::copy_()
[2m[36m(pid=45904)[0m     @     0x7eed38269d91 at::TensorIterator::for_each()
[2m[36m(pid=45904)[0m     @     0x7eed38b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45904)[0m     @     0x7eed38b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45904)[0m     @     0x7eed38011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45904)[0m     @     0x7eed3800f388 at::native::copy_impl()
[2m[36m(pid=45904)[0m     @     0x7eed380115a4 at::native::copy_()
[2m[36m(pid=45887)[0m     @     0x55a07faf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45887)[0m     @     0x55a07fa6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x7f3ed5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=45866)[0m     @     0x7f3ed650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45866)[0m     @     0x7f3ed652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45866)[0m     @     0x7f3ed59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45866)[0m     @     0x7f3ed59cd388 at::native::copy_impl()
[2m[36m(pid=45866)[0m     @     0x7f3ed59cf5a4 at::native::copy_()
[2m[36m(pid=45868)[0m     @     0x7f730b9d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45868)[0m     @     0x7f730b9d0388 at::native::copy_impl()
[2m[36m(pid=45868)[0m     @     0x7f730b9d25a4 at::native::copy_()
[2m[36m(pid=45868)[0m     @     0x7f730c0bd4f5 at::Tensor::copy_()
[2m[36m(pid=45868)[0m     @     0x7f730e5908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45868)[0m     @     0x7f730c0bd4f5 at::Tensor::copy_()
[2m[36m(pid=45868)[0m     @     0x7f731216879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45868)[0m     @     0x560028937fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45868)[0m     @     0x560028892b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x56002891dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45868)[0m     @     0x56002891ea20 method_vectorcall
[2m[36m(pid=45868)[0m     @     0x560028892bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x7fbf09552d91 at::TensorIterator::for_each()
[2m[36m(pid=45853)[0m     @     0x7fbf09e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45853)[0m     @     0x7fbf09e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45853)[0m     @     0x7fbf092faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45853)[0m     @     0x7fbf092f8388 at::native::copy_impl()
[2m[36m(pid=45853)[0m     @     0x7fbf092fa5a4 at::native::copy_()
[2m[36m(pid=45853)[0m     @     0x7fbf099e54f5 at::Tensor::copy_()
[2m[36m(pid=45853)[0m     @     0x7fbf0beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45891)[0m     @     0x7eeab8347b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45891)[0m     @     0x7eeab836ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45891)[0m     @     0x7eeab780ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45891)[0m     @     0x7eeab780a388 at::native::copy_impl()
[2m[36m(pid=45891)[0m     @     0x7eeab780c5a4 at::native::copy_()
[2m[36m(pid=45891)[0m     @     0x7eeab7ef74f5 at::Tensor::copy_()
[2m[36m(pid=45891)[0m     @     0x7eeaba3ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45889)[0m     @     0x7f5620ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45889)[0m     @     0x7f562037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45889)[0m     @     0x7f5620378388 at::native::copy_impl()
[2m[36m(pid=45889)[0m     @     0x7f562037a5a4 at::native::copy_()
[2m[36m(pid=45889)[0m     @     0x7f5620a654f5 at::Tensor::copy_()
[2m[36m(pid=45889)[0m     @     0x7f5622f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45871)[0m     @     0x7f8d48e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=45807)[0m     @     0x7fbc39c25d91 at::TensorIterator::for_each()
[2m[36m(pid=45807)[0m     @     0x7fbc3a508b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45807)[0m     @     0x7fbc3a52bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45807)[0m     @     0x7fbc399cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45807)[0m     @     0x7fbc399cb388 at::native::copy_impl()
[2m[36m(pid=45807)[0m     @     0x7fbc399cd5a4 at::native::copy_()
[2m[36m(pid=45807)[0m     @     0x7fbc3a0b84f5 at::Tensor::copy_()
[2m[36m(pid=45804)[0m     @     0x7fc914f27d91 at::TensorIterator::for_each()
[2m[36m(pid=45804)[0m     @     0x7fc91580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45804)[0m     @     0x7fc91582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45804)[0m     @     0x7fc914ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45804)[0m     @     0x7fc914ccd388 at::native::copy_impl()
[2m[36m(pid=45804)[0m     @     0x7fc914ccf5a4 at::native::copy_()
[2m[36m(pid=45804)[0m     @     0x7fc9153ba4f5 at::Tensor::copy_()
[2m[36m(pid=45858)[0m     @     0x7eea42957d91 at::TensorIterator::for_each()
[2m[36m(pid=45858)[0m     @     0x7eea4323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45858)[0m     @     0x7eea4325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45858)[0m     @     0x7eea426ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45858)[0m     @     0x7eea426fd388 at::native::copy_impl()
[2m[36m(pid=45858)[0m     @     0x7eea426ff5a4 at::native::copy_()
[2m[36m(pid=45799)[0m     @     0x7f5761cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=45799)[0m     @     0x7f57625b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45799)[0m     @     0x7f57625d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45799)[0m     @     0x7f5761a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45799)[0m     @     0x7f5761a78388 at::native::copy_impl()
[2m[36m(pid=45799)[0m     @     0x7f5761a7a5a4 at::native::copy_()
[2m[36m(pid=45865)[0m     @     0x7fa1a2ab5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45865)[0m     @     0x7fa1a2ad8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45865)[0m     @     0x7fa1a1f7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45865)[0m     @     0x7fa1a1f78388 at::native::copy_impl()
[2m[36m(pid=45865)[0m     @     0x7fa1a1f7a5a4 at::native::copy_()
[2m[36m(pid=45865)[0m     @     0x7fa1a26654f5 at::Tensor::copy_()
[2m[36m(pid=45862)[0m     @     0x7f335b0e6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45862)[0m     @     0x7f335b109c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45862)[0m     @     0x7f335a5aba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45862)[0m     @     0x7f335a5a9388 at::native::copy_impl()
[2m[36m(pid=45862)[0m     @     0x7f335a5ab5a4 at::native::copy_()
[2m[36m(pid=45862)[0m     @     0x7f335ac964f5 at::Tensor::copy_()
[2m[36m(pid=45862)[0m     @     0x7f335d1698de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45877)[0m     @     0x7f6540a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=45877)[0m     @     0x7f6541370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45877)[0m     @     0x7f6541393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45877)[0m     @     0x7f6540835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45877)[0m     @     0x7f6540833388 at::native::copy_impl()
[2m[36m(pid=45877)[0m     @     0x7f65408355a4 at::native::copy_()
[2m[36m(pid=45842)[0m     @     0x7ed6fce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45842)[0m     @     0x7ed6fce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=45842)[0m     @     0x7ed6fce22d91 at::TensorIterator::for_each()
[2m[36m(pid=45842)[0m     @     0x7ed6fd705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45842)[0m     @     0x7ed6fd728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45842)[0m     @     0x7ed6fcbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45794)[0m     @     0x7f5bff82f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=45794)[0m     @     0x7f5bff82fad3 at::TensorIterator::for_each()
[2m[36m(pid=45794)[0m     @     0x7f5bff82fd91 at::TensorIterator::for_each()
[2m[36m(pid=45794)[0m     @     0x7f5c00112b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45794)[0m     @     0x7f5c00135c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45844)[0m     @     0x7ee285138ad3 at::TensorIterator::for_each()
[2m[36m(pid=45844)[0m     @     0x7ee285138d91 at::TensorIterator::for_each()
[2m[36m(pid=45844)[0m     @     0x7ee285a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45844)[0m     @     0x7ee285a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45844)[0m     @     0x7ee284ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45844)[0m     @     0x7ee284ede388 at::native::copy_impl()
[2m[36m(pid=45822)[0m     @     0x7fad0a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=45822)[0m     @     0x7fad0a641d91 at::TensorIterator::for_each()
[2m[36m(pid=45822)[0m     @     0x7fad0af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45822)[0m     @     0x7fad0af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45822)[0m     @     0x7fad0a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45822)[0m     @     0x7fad0a3e7388 at::native::copy_impl()
[2m[36m(pid=45822)[0m     @     0x7fad0a3e95a4 at::native::copy_()
[2m[36m(pid=45895)[0m     @     0x7f6c39c27d91 at::TensorIterator::for_each()
[2m[36m(pid=45895)[0m     @     0x7f6c3a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45895)[0m     @     0x7f6c3a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45895)[0m     @     0x7f6c399cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45895)[0m     @     0x7f6c399cd388 at::native::copy_impl()
[2m[36m(pid=45895)[0m     @     0x7f6c399cf5a4 at::native::copy_()
[2m[36m(pid=45906)[0m     @     0x7ef9f4565d91 at::TensorIterator::for_each()
[2m[36m(pid=45906)[0m     @     0x7ef9f4e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45906)[0m     @     0x7ef9f4e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45906)[0m     @     0x7ef9f430da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45906)[0m     @     0x7ef9f430b388 at::native::copy_impl()
[2m[36m(pid=45906)[0m     @     0x7ef9f430d5a4 at::native::copy_()
[2m[36m(pid=45906)[0m     @     0x7ef9f49f84f5 at::Tensor::copy_()
[2m[36m(pid=45885)[0m     @     0x7f8504859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45885)[0m     @     0x7f8503cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45885)[0m     @     0x7f8503cf9388 at::native::copy_impl()
[2m[36m(pid=45885)[0m     @     0x7f8503cfb5a4 at::native::copy_()
[2m[36m(pid=45885)[0m     @     0x7f85043e64f5 at::Tensor::copy_()
[2m[36m(pid=45885)[0m     @     0x7f85068b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45809)[0m     @     0x7f60a4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45809)[0m     @     0x7f60a4ccd388 at::native::copy_impl()
[2m[36m(pid=45809)[0m     @     0x7f60a4ccf5a4 at::native::copy_()
[2m[36m(pid=45809)[0m     @     0x7f60a53ba4f5 at::Tensor::copy_()
[2m[36m(pid=45809)[0m     @     0x7f60a788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45805)[0m     @     0x7fbe96d875a4 at::native::copy_()
[2m[36m(pid=45805)[0m     @     0x7fbe974724f5 at::Tensor::copy_()
[2m[36m(pid=45805)[0m     @     0x7fbe999458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45808)[0m     @     0x7f149d1c55a4 at::native::copy_()
[2m[36m(pid=45808)[0m     @     0x7f149d8b04f5 at::Tensor::copy_()
[2m[36m(pid=45808)[0m     @     0x7f149fd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45787)[0m     @     0x7ef25d8215a4 at::native::copy_()
[2m[36m(pid=45787)[0m     @     0x7ef25df0c4f5 at::Tensor::copy_()
[2m[36m(pid=45787)[0m     @     0x7ef2603df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45811)[0m     @     0x7fb4ef02b4f5 at::Tensor::copy_()
[2m[36m(pid=45811)[0m     @     0x7fb4f14fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45811)[0m     @     0x7fb4ef02b4f5 at::Tensor::copy_()
[2m[36m(pid=45811)[0m     @     0x7fb4f50d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45811)[0m     @     0x56176fb4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45811)[0m     @     0x56176faaab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45811)[0m     @     0x56176fb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=45811)[0m     @     0x56176fb36a20 method_vectorcall
[2m[36m(pid=45811)[0m     @     0x56176faaabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45811)[0m     @     0x56176fb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=45811)[0m     @     0x56176fb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45811)[0m     @     0x56176faab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45811)[0m     @     0x56176fb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=45811)[0m     @     0x56176fb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45811)[0m     @     0x56176faab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45811)[0m     @     0x56176fb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=45811)[0m     @     0x56176fb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45811)[0m     @     0x56176faab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45811)[0m     @     0x56176fb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=45811)[0m     @     0x56176fb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45811)[0m     @     0x56176faab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x7f3f8bcfb5a4 at::native::copy_()
[2m[36m(pid=45901)[0m     @     0x7f3f8c3e64f5 at::Tensor::copy_()
[2m[36m(pid=45901)[0m     @     0x7f3f8e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45901)[0m     @     0x7f3f8c3e64f5 at::Tensor::copy_()
[2m[36m(pid=45793)[0m     @     0x7f71872e45a4 at::native::copy_()
[2m[36m(pid=45793)[0m     @     0x7f71879cf4f5 at::Tensor::copy_()
[2m[36m(pid=45793)[0m     @     0x7f7189ea28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45793)[0m     @     0x7f71879cf4f5 at::Tensor::copy_()
[2m[36m(pid=45802)[0m     @     0x7f332f80f5a4 at::native::copy_()
[2m[36m(pid=45802)[0m     @     0x7f332fefa4f5 at::Tensor::copy_()
[2m[36m(pid=45802)[0m     @     0x7f33323cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45863)[0m     @     0x7f4982c7bd91 at::TensorIterator::for_each()
[2m[36m(pid=45863)[0m     @     0x7f498355eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45863)[0m     @     0x7f4983581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45863)[0m     @     0x7f4982a23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45863)[0m     @     0x7f4982a21388 at::native::copy_impl()
[2m[36m(pid=45806)[0m     @     0x7fab892f8388 at::native::copy_impl()
[2m[36m(pid=45806)[0m     @     0x7fab892fa5a4 at::native::copy_()
[2m[36m(pid=45806)[0m     @     0x7fab899e54f5 at::Tensor::copy_()
[2m[36m(pid=45806)[0m     @     0x7fab8beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45795)[0m     @     0x7f395ff0a388 at::native::copy_impl()
[2m[36m(pid=45795)[0m     @     0x7f395ff0c5a4 at::native::copy_()
[2m[36m(pid=45795)[0m     @     0x7f39605f74f5 at::Tensor::copy_()
[2m[36m(pid=45795)[0m     @     0x7f3962aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45876)[0m     @     0x7f459a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45876)[0m     @     0x7f459a6fd388 at::native::copy_impl()
[2m[36m(pid=45876)[0m     @     0x7f459a6ff5a4 at::native::copy_()
[2m[36m(pid=45790)[0m     @     0x7f7c5dc64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45790)[0m     @     0x7f7c5dc62388 at::native::copy_impl()
[2m[36m(pid=45790)[0m     @     0x7f7c5dc645a4 at::native::copy_()
[2m[36m(pid=45790)[0m     @     0x7f7c5e34f4f5 at::Tensor::copy_()
[2m[36m(pid=45800)[0m     @     0x7f6befa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45800)[0m     @     0x7f6befa37388 at::native::copy_impl()
[2m[36m(pid=45800)[0m     @     0x7f6befa395a4 at::native::copy_()
[2m[36m(pid=45800)[0m     @     0x7f6bf01244f5 at::Tensor::copy_()
[2m[36m(pid=45800)[0m     @     0x7f6bf25f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45852)[0m     @     0x7ef8cba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45852)[0m     @     0x7ef8cba37388 at::native::copy_impl()
[2m[36m(pid=45852)[0m     @     0x7ef8cba395a4 at::native::copy_()
[2m[36m(pid=45852)[0m     @     0x7ef8cc1244f5 at::Tensor::copy_()
[2m[36m(pid=45852)[0m     @     0x7ef8ce5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45814)[0m     @     0x7fae74ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45814)[0m     @     0x7fae74ccd388 at::native::copy_impl()
[2m[36m(pid=45814)[0m     @     0x7fae74ccf5a4 at::native::copy_()
[2m[36m(pid=45814)[0m     @     0x7fae753ba4f5 at::Tensor::copy_()
[2m[36m(pid=45814)[0m     @     0x7fae7788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45872)[0m     @     0x7f031b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45872)[0m     @     0x7f031a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45872)[0m     @     0x7f031a6fd388 at::native::copy_impl()
[2m[36m(pid=45872)[0m     @     0x7f031a6ff5a4 at::native::copy_()
[2m[36m(pid=45872)[0m     @     0x7f031adea4f5 at::Tensor::copy_()
[2m[36m(pid=45864)[0m     @     0x7f323edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45864)[0m     @     0x7f323edb2388 at::native::copy_impl()
[2m[36m(pid=45864)[0m     @     0x7f323edb45a4 at::native::copy_()
[2m[36m(pid=45864)[0m     @     0x7f323f49f4f5 at::Tensor::copy_()
[2m[36m(pid=45864)[0m     @     0x7f32419728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45785)[0m     @     0x7ef2d9552d91 at::TensorIterator::for_each()
[2m[36m(pid=45785)[0m     @     0x7ef2d9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45785)[0m     @     0x7ef2d9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45785)[0m     @     0x7ef2d92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45785)[0m     @     0x7ef2d92f8388 at::native::copy_impl()
[2m[36m(pid=45785)[0m     @     0x7ef2d92fa5a4 at::native::copy_()
[2m[36m(pid=45786)[0m     @     0x7f73c8e165a4 at::native::copy_()
[2m[36m(pid=45786)[0m     @     0x7f73c95014f5 at::Tensor::copy_()
[2m[36m(pid=45786)[0m     @     0x7f73cb9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45867)[0m     @     0x7f1189a79d91 at::TensorIterator::for_each()
[2m[36m(pid=45867)[0m     @     0x7f118a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45867)[0m     @     0x7f118a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45867)[0m     @     0x7f1189821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45867)[0m     @     0x7f118981f388 at::native::copy_impl()
[2m[36m(pid=45789)[0m     @     0x7f8a6e3e95a4 at::native::copy_()
[2m[36m(pid=45789)[0m     @     0x7f8a6ead44f5 at::Tensor::copy_()
[2m[36m(pid=45789)[0m     @     0x7f8a70fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45789)[0m     @     0x7f8a6ead44f5 at::Tensor::copy_()
[2m[36m(pid=45789)[0m     @     0x7f8a74b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45789)[0m     @     0x560bcec14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45789)[0m     @     0x560bceb6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45789)[0m     @     0x560bcebfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45789)[0m     @     0x560bcebfba20 method_vectorcall
[2m[36m(pid=45789)[0m     @     0x560bceb6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45789)[0m     @     0x560bcebfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45789)[0m     @     0x560bcebfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45789)[0m     @     0x560bceb70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45789)[0m     @     0x560bcebfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45789)[0m     @     0x560bcebfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45789)[0m     @     0x560bceb70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45789)[0m     @     0x560bcebfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x7f0dc6d745a4 at::native::copy_()
[2m[36m(pid=45882)[0m     @     0x7f0dc745f4f5 at::Tensor::copy_()
[2m[36m(pid=45882)[0m     @     0x7f0dc99328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45882)[0m     @     0x7f0dc745f4f5 at::Tensor::copy_()
[2m[36m(pid=45879)[0m     @     0x7edf6f7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=45879)[0m     @     0x7edf700deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45879)[0m     @     0x7edf70101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45879)[0m     @     0x7edf6f5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45879)[0m     @     0x7edf6f5a1388 at::native::copy_impl()
[2m[36m(pid=45798)[0m     @     0x7eec4414a5a4 at::native::copy_()
[2m[36m(pid=45798)[0m     @     0x7eec448354f5 at::Tensor::copy_()
[2m[36m(pid=45798)[0m     @     0x7eec46d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45798)[0m     @     0x7eec448354f5 at::Tensor::copy_()
[2m[36m(pid=45798)[0m     @     0x7eec4a8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45798)[0m     @     0x5604e8f50fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45798)[0m     @     0x5604e8eabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x7f7611fa5388 at::native::copy_impl()
[2m[36m(pid=45818)[0m     @     0x7f7611fa75a4 at::native::copy_()
[2m[36m(pid=45818)[0m     @     0x7f76126924f5 at::Tensor::copy_()
[2m[36m(pid=45878)[0m     @     0x7f1299fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45878)[0m     @     0x7f1299fa5388 at::native::copy_impl()
[2m[36m(pid=45878)[0m     @     0x7f1299fa75a4 at::native::copy_()
[2m[36m(pid=45878)[0m     @     0x7f129a6924f5 at::Tensor::copy_()
[2m[36m(pid=45878)[0m     @     0x7f129cb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45791)[0m     @     0x7f771eea74f5 at::Tensor::copy_()
[2m[36m(pid=45791)[0m     @     0x7f772137a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45791)[0m     @     0x7f771eea74f5 at::Tensor::copy_()
[2m[36m(pid=45791)[0m     @     0x7f7724f5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45791)[0m     @     0x55ba13bd8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45791)[0m     @     0x55ba13b33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45791)[0m     @     0x55ba13bbebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45791)[0m     @     0x55ba13bbfa20 method_vectorcall
[2m[36m(pid=45791)[0m     @     0x55ba13b33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45791)[0m     @     0x55ba13bbebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45791)[0m     @     0x55ba13bbf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45791)[0m     @     0x55ba13b34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45791)[0m     @     0x55ba13bbebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45791)[0m     @     0x55ba13bbf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45791)[0m     @     0x55ba13b34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45791)[0m     @     0x55ba13bbebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45791)[0m     @     0x55ba13bbf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45791)[0m     @     0x55ba13b34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45791)[0m     @     0x55ba13bbebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45791)[0m     @     0x55ba13bbf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45791)[0m     @     0x55ba13b34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x7f082e1654f5 at::Tensor::copy_()
[2m[36m(pid=45898)[0m     @     0x7f08306388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45855)[0m     @     0x7f6ed51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45855)[0m     @     0x7f6ed2ce54f5 at::Tensor::copy_()
[2m[36m(pid=45855)[0m     @     0x7f6ed8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45855)[0m     @     0x5558f39f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45855)[0m     @     0x5558f3953b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45855)[0m     @     0x5558f39dfa20 method_vectorcall
[2m[36m(pid=45855)[0m     @     0x5558f3953bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45855)[0m     @     0x5558f39df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45855)[0m     @     0x5558f3954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45855)[0m     @     0x5558f39df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45855)[0m     @     0x5558f3954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45855)[0m     @     0x5558f39df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45855)[0m     @     0x5558f3954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39debaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x7efd5c3354f5 at::Tensor::copy_()
[2m[36m(pid=45788)[0m     @     0x7efd5e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45788)[0m     @     0x7efd5c3354f5 at::Tensor::copy_()
[2m[36m(pid=45796)[0m     @     0x7f8c652bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45796)[0m     @     0x7f8c62dea4f5 at::Tensor::copy_()
[2m[36m(pid=45796)[0m     @     0x7f8c68e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45796)[0m     @     0x55bb1d501fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45796)[0m     @     0x55bb1d45cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45796)[0m     @     0x55bb1d4e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=45796)[0m     @     0x55bb1d4e8a20 method_vectorcall
[2m[36m(pid=45796)[0m     @     0x55bb1d45cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45796)[0m     @     0x55bb1d4e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=45796)[0m     @     0x55bb1d4e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45796)[0m     @     0x55bb1d45d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45796)[0m     @     0x55bb1d4e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=45796)[0m     @     0x55bb1d4e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45796)[0m     @     0x55bb1d45d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45796)[0m     @     0x55bb1d4e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=45796)[0m     @     0x55bb1d4e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45796)[0m     @     0x55bb1d45d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45796)[0m     @     0x55bb1d4e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=45796)[0m     @     0x55bb1d4e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45796)[0m     @     0x55bb1d45d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x7efaf014a5a4 at::native::copy_()
[2m[36m(pid=45870)[0m     @     0x7efaf08354f5 at::Tensor::copy_()
[2m[36m(pid=45859)[0m     @     0x7f7a159cf5a4 at::native::copy_()
[2m[36m(pid=45859)[0m     @     0x7f7a160ba4f5 at::Tensor::copy_()
[2m[36m(pid=45859)[0m     @     0x7f7a1858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45803)[0m     @     0x7f01ddedf4f5 at::Tensor::copy_()
[2m[36m(pid=45803)[0m     @     0x7f01e03b28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45812)[0m     @     0x7f8e8ca654f5 at::Tensor::copy_()
[2m[36m(pid=45812)[0m     @     0x7f8e8ef388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45812)[0m     @     0x7f8e8ca654f5 at::Tensor::copy_()
[2m[36m(pid=45903)[0m     @     0x7f73625e24f5 at::Tensor::copy_()
[2m[36m(pid=45903)[0m     @     0x7f7364ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45861)[0m     @     0x7f846cbca5a4 at::native::copy_()
[2m[36m(pid=45861)[0m     @     0x7f846d2b54f5 at::Tensor::copy_()
[2m[36m(pid=45861)[0m     @     0x7f846f7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45846)[0m     @     0x7f324a3e95a4 at::native::copy_()
[2m[36m(pid=45846)[0m     @     0x7f324aad44f5 at::Tensor::copy_()
[2m[36m(pid=45857)[0m     @     0x7fae812484f5 at::Tensor::copy_()
[2m[36m(pid=45857)[0m     @     0x7fae872f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45857)[0m     @     0x55baa0d8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45857)[0m     @     0x55baa0ceab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45857)[0m     @     0x55baa0d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=45857)[0m     @     0x55baa0d76a20 method_vectorcall
[2m[36m(pid=45857)[0m     @     0x55baa0ceabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45857)[0m     @     0x55baa0d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=45857)[0m     @     0x55baa0d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45857)[0m     @     0x55baa0ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45857)[0m     @     0x55baa0d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=45857)[0m     @     0x55baa0d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45857)[0m     @     0x55baa0ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45857)[0m     @     0x55baa0d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=45857)[0m     @     0x55baa0d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45857)[0m     @     0x55baa0ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45857)[0m     @     0x55baa0d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=45857)[0m     @     0x55baa0d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45857)[0m     @     0x55baa0ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x7f2e588b84f5 at::Tensor::copy_()
[2m[36m(pid=45883)[0m     @     0x7f2e5e96379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45883)[0m     @     0x55c782745fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45883)[0m     @     0x55c7826a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x55c78272bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45883)[0m     @     0x55c78272ca20 method_vectorcall
[2m[36m(pid=45883)[0m     @     0x55c7826a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x55c78272bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45883)[0m     @     0x55c78272c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45883)[0m     @     0x55c7826a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x55c78272bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45883)[0m     @     0x55c78272c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45883)[0m     @     0x55c7826a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x55c78272bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45883)[0m     @     0x55c78272c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45883)[0m     @     0x55c7826a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45883)[0m     @     0x55c78272bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45883)[0m     @     0x55c78272c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45883)[0m     @     0x55c7826a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x7f2898f158de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45792)[0m     @     0x7f2896a424f5 at::Tensor::copy_()
[2m[36m(pid=45792)[0m     @     0x7f289caed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45792)[0m     @     0x555798d81fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45792)[0m     @     0x555798cdcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x555798d67baf _PyEval_EvalCodeWithName
[2m[36m(pid=45792)[0m     @     0x555798d68a20 method_vectorcall
[2m[36m(pid=45792)[0m     @     0x555798cdcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x555798d67baf _PyEval_EvalCodeWithName
[2m[36m(pid=45792)[0m     @     0x555798d68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45792)[0m     @     0x555798cdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x555798d67baf _PyEval_EvalCodeWithName
[2m[36m(pid=45792)[0m     @     0x555798d68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45792)[0m     @     0x555798cdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x555798d67baf _PyEval_EvalCodeWithName
[2m[36m(pid=45792)[0m     @     0x555798d68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45792)[0m     @     0x555798cdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45792)[0m     @     0x555798d67baf _PyEval_EvalCodeWithName
[2m[36m(pid=45792)[0m     @     0x555798d68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45792)[0m     @     0x555798cdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x7fb829e158de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45874)[0m     @     0x7fb8279424f5 at::Tensor::copy_()
[2m[36m(pid=45874)[0m     @     0x7fb82d9ed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45874)[0m     @     0x55c849795fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45874)[0m     @     0x55c8496f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x55c84977bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45874)[0m     @     0x55c84977ca20 method_vectorcall
[2m[36m(pid=45874)[0m     @     0x55c8496f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x55c84977bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45874)[0m     @     0x55c84977c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45874)[0m     @     0x55c8496f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x55c84977bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45874)[0m     @     0x55c84977c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45874)[0m     @     0x55c8496f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x55c84977bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45874)[0m     @     0x55c84977c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45874)[0m     @     0x55c8496f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x7f3a90ccf5a4 at::native::copy_()
[2m[36m(pid=45810)[0m     @     0x7f3a913ba4f5 at::Tensor::copy_()
[2m[36m(pid=45849)[0m     @     0x7f51641244f5 at::Tensor::copy_()
[2m[36m(pid=45849)[0m     @     0x7f516a1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45849)[0m     @     0x56128ee15fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45849)[0m     @     0x56128ed70b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45849)[0m     @     0x56128edfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45849)[0m     @     0x56128edfca20 method_vectorcall
[2m[36m(pid=45849)[0m     @     0x56128ed70bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45849)[0m     @     0x56128edfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45849)[0m     @     0x56128edfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45849)[0m     @     0x56128ed71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45849)[0m     @     0x56128edfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45849)[0m     @     0x56128edfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45849)[0m     @     0x56128ed71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45849)[0m     @     0x56128edfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45849)[0m     @     0x56128edfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45849)[0m     @     0x56128ed71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45849)[0m     @     0x56128edfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45849)[0m     @     0x56128edfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45849)[0m     @     0x56128ed71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x7f68535f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45905)[0m     @     0x7f68511254f5 at::Tensor::copy_()
[2m[36m(pid=45905)[0m     @     0x7f68571d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45905)[0m     @     0x55cefd2e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45905)[0m     @     0x55cefd242b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x55cefd2cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45905)[0m     @     0x55cefd2cea20 method_vectorcall
[2m[36m(pid=45905)[0m     @     0x55cefd242bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x55cefd2cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45905)[0m     @     0x55cefd2ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45905)[0m     @     0x55cefd243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x55cefd2cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45905)[0m     @     0x55cefd2ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45905)[0m     @     0x55cefd243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x55cefd2cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45905)[0m     @     0x55cefd2ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45905)[0m     @     0x55cefd243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45905)[0m     @     0x55cefd2cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45905)[0m     @     0x55cefd2ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45905)[0m     @     0x55cefd243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x7fb2f3c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45880)[0m     @     0x7fb2f173b4f5 at::Tensor::copy_()
[2m[36m(pid=45880)[0m     @     0x7fb2f77e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45880)[0m     @     0x557e384e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45880)[0m     @     0x557e3843fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e384cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45880)[0m     @     0x557e384cba20 method_vectorcall
[2m[36m(pid=45880)[0m     @     0x557e3843fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e384cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45880)[0m     @     0x557e384cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45880)[0m     @     0x557e38440689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e384cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45880)[0m     @     0x557e384cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45880)[0m     @     0x557e38440689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e384cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45880)[0m     @     0x557e384cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45880)[0m     @     0x557e38440689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e384cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45880)[0m     @     0x557e384cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45904)[0m     @     0x7eed386fc4f5 at::Tensor::copy_()
[2m[36m(pid=45904)[0m     @     0x7eed3abcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45904)[0m     @     0x7eed386fc4f5 at::Tensor::copy_()
[2m[36m(pid=45904)[0m     @     0x7eed3e7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45904)[0m     @     0x561899383fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45904)[0m     @     0x5618992deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x7f3ed60ba4f5 at::Tensor::copy_()
[2m[36m(pid=45866)[0m     @     0x7f3ed858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45866)[0m     @     0x7f3ed60ba4f5 at::Tensor::copy_()
[2m[36m(pid=45866)[0m     @     0x7f3edc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45866)[0m     @     0x557e79c16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45866)[0m     @     0x557e79b71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x557e79bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x557e79bfda20 method_vectorcall
[2m[36m(pid=45866)[0m     @     0x557e79b71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x56002891dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45868)[0m     @     0x56002891e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45868)[0m     @     0x560028893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x56002891dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45868)[0m     @     0x56002891e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45868)[0m     @     0x560028893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x56002891dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45868)[0m     @     0x56002891e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45868)[0m     @     0x560028893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45868)[0m     @     0x56002891dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45868)[0m     @     0x56002891e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45868)[0m     @     0x560028893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x7fbf099e54f5 at::Tensor::copy_()
[2m[36m(pid=45853)[0m     @     0x7fbf0fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45853)[0m     @     0x55c1165cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45853)[0m     @     0x55c116525b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x55c1165b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=45853)[0m     @     0x55c1165b1a20 method_vectorcall
[2m[36m(pid=45853)[0m     @     0x55c116525bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x55c1165b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=45853)[0m     @     0x55c1165b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45853)[0m     @     0x55c116526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x55c1165b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=45853)[0m     @     0x55c1165b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45853)[0m     @     0x55c116526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x55c1165b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=45853)[0m     @     0x55c1165b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45853)[0m     @     0x55c116526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45853)[0m     @     0x55c1165b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=45853)[0m     @     0x55c1165b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45853)[0m     @     0x55c116526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x7eeab7ef74f5 at::Tensor::copy_()
[2m[36m(pid=45891)[0m     @     0x7eeabdfa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45891)[0m     @     0x55cd3de65fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45891)[0m     @     0x55cd3ddc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x55cd3de4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45891)[0m     @     0x55cd3de4ca20 method_vectorcall
[2m[36m(pid=45891)[0m     @     0x55cd3ddc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x55cd3de4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45891)[0m     @     0x55cd3de4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45891)[0m     @     0x55cd3ddc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x55cd3de4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45891)[0m     @     0x55cd3de4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45891)[0m     @     0x55cd3ddc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x55cd3de4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45891)[0m     @     0x55cd3de4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45891)[0m     @     0x55cd3ddc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45891)[0m     @     0x55cd3de4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45891)[0m     @     0x55cd3de4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45891)[0m     @     0x55cd3ddc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x7f5620a654f5 at::Tensor::copy_()
[2m[36m(pid=45889)[0m     @     0x7f5626b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45889)[0m     @     0x55cec829ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45889)[0m     @     0x55cec81fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x55cec8285baf _PyEval_EvalCodeWithName
[2m[36m(pid=45889)[0m     @     0x55cec8286a20 method_vectorcall
[2m[36m(pid=45889)[0m     @     0x55cec81fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x55cec8285baf _PyEval_EvalCodeWithName
[2m[36m(pid=45889)[0m     @     0x55cec8286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45889)[0m     @     0x55cec81fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x55cec8285baf _PyEval_EvalCodeWithName
[2m[36m(pid=45889)[0m     @     0x55cec8286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45889)[0m     @     0x55cec81fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x55cec8285baf _PyEval_EvalCodeWithName
[2m[36m(pid=45889)[0m     @     0x55cec8286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45889)[0m     @     0x55cec81fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45889)[0m     @     0x55cec8285baf _PyEval_EvalCodeWithName
[2m[36m(pid=45889)[0m     @     0x55cec8286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45889)[0m     @     0x55cec81fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x7f8d48e22d91 at::TensorIterator::for_each()
[2m[36m(pid=45871)[0m     @     0x7f8d49705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=45871)[0m     @     0x7f8d49728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=45807)[0m     @     0x7fbc3c58b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45807)[0m     @     0x7fbc3a0b84f5 at::Tensor::copy_()
[2m[36m(pid=45807)[0m     @     0x7fbc4016379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45807)[0m     @     0x563dbf970fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45807)[0m     @     0x563dbf8cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45807)[0m     @     0x563dbf956baf _PyEval_EvalCodeWithName
[2m[36m(pid=45807)[0m     @     0x563dbf957a20 method_vectorcall
[2m[36m(pid=45807)[0m     @     0x563dbf8cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45807)[0m     @     0x563dbf956baf _PyEval_EvalCodeWithName
[2m[36m(pid=45807)[0m     @     0x563dbf957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45807)[0m     @     0x563dbf8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45807)[0m     @     0x563dbf956baf _PyEval_EvalCodeWithName
[2m[36m(pid=45807)[0m     @     0x563dbf957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45807)[0m     @     0x563dbf8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45807)[0m     @     0x563dbf956baf _PyEval_EvalCodeWithName
[2m[36m(pid=45807)[0m     @     0x563dbf957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45807)[0m     @     0x563dbf8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45807)[0m     @     0x563dbf956baf _PyEval_EvalCodeWithName
[2m[36m(pid=45807)[0m     @     0x563dbf957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45807)[0m     @     0x563dbf8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x7fc91788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45804)[0m     @     0x7fc9153ba4f5 at::Tensor::copy_()
[2m[36m(pid=45804)[0m     @     0x7fc91b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45804)[0m     @     0x561f161a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45804)[0m     @     0x561f160feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x561f16189baf _PyEval_EvalCodeWithName
[2m[36m(pid=45804)[0m     @     0x561f1618aa20 method_vectorcall
[2m[36m(pid=45804)[0m     @     0x561f160febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x561f16189baf _PyEval_EvalCodeWithName
[2m[36m(pid=45804)[0m     @     0x561f1618a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45804)[0m     @     0x561f160ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x561f16189baf _PyEval_EvalCodeWithName
[2m[36m(pid=45804)[0m     @     0x561f1618a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45804)[0m     @     0x561f160ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x561f16189baf _PyEval_EvalCodeWithName
[2m[36m(pid=45804)[0m     @     0x561f1618a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45804)[0m     @     0x561f160ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45804)[0m     @     0x561f16189baf _PyEval_EvalCodeWithName
[2m[36m(pid=45804)[0m     @     0x561f1618a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45804)[0m     @     0x561f160ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x7eea42dea4f5 at::Tensor::copy_()
[2m[36m(pid=45858)[0m     @     0x7eea452bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45858)[0m     @     0x7eea42dea4f5 at::Tensor::copy_()
[2m[36m(pid=45858)[0m     @     0x7eea48e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45858)[0m     @     0x55e91919efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45858)[0m     @     0x55e9190f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x55e919184baf _PyEval_EvalCodeWithName
[2m[36m(pid=45858)[0m     @     0x55e919185a20 method_vectorcall
[2m[36m(pid=45858)[0m     @     0x55e9190f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x55e919184baf _PyEval_EvalCodeWithName
[2m[36m(pid=45858)[0m     @     0x55e919185643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45858)[0m     @     0x55e9190fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x55e919184baf _PyEval_EvalCodeWithName
[2m[36m(pid=45858)[0m     @     0x55e919185643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45858)[0m     @     0x55e9190fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x55e919184baf _PyEval_EvalCodeWithName
[2m[36m(pid=45858)[0m     @     0x55e919185643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45858)[0m     @     0x55e9190fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45858)[0m     @     0x55e919184baf _PyEval_EvalCodeWithName
[2m[36m(pid=45858)[0m     @     0x55e919185643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45858)[0m     @     0x55e9190fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x7f57621654f5 at::Tensor::copy_()
[2m[36m(pid=45799)[0m     @     0x7f57646388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45799)[0m     @     0x7f57621654f5 at::Tensor::copy_()
[2m[36m(pid=45799)[0m     @     0x7f576821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45799)[0m     @     0x55b3081d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45799)[0m     @     0x55b30812bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x55b3081b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45799)[0m     @     0x55b3081b7a20 method_vectorcall
[2m[36m(pid=45799)[0m     @     0x55b30812bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x55b3081b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45799)[0m     @     0x55b3081b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45799)[0m     @     0x55b30812c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x55b3081b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45799)[0m     @     0x55b3081b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45799)[0m     @     0x55b30812c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x55b3081b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45799)[0m     @     0x55b3081b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45799)[0m     @     0x55b30812c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45799)[0m     @     0x55b3081b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45799)[0m     @     0x55b3081b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45799)[0m     @     0x55b30812c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x7fa1a4b388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45865)[0m     @     0x7fa1a26654f5 at::Tensor::copy_()
[2m[36m(pid=45865)[0m     @     0x7fa1a871079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45865)[0m     @     0x56375dda6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45865)[0m     @     0x56375dd01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x56375dd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45865)[0m     @     0x56375dd8da20 method_vectorcall
[2m[36m(pid=45865)[0m     @     0x56375dd01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x56375dd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45865)[0m     @     0x56375dd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45865)[0m     @     0x56375dd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x56375dd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45865)[0m     @     0x56375dd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45865)[0m     @     0x56375dd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x56375dd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45865)[0m     @     0x56375dd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45865)[0m     @     0x56375dd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45865)[0m     @     0x56375dd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45865)[0m     @     0x56375dd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45865)[0m     @     0x56375dd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x7f335ac964f5 at::Tensor::copy_()
[2m[36m(pid=45862)[0m     @     0x7f3360d4179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45862)[0m     @     0x55baa4730fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45862)[0m     @     0x55baa468bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x55baa4716baf _PyEval_EvalCodeWithName
[2m[36m(pid=45862)[0m     @     0x55baa4717a20 method_vectorcall
[2m[36m(pid=45862)[0m     @     0x55baa468bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x55baa4716baf _PyEval_EvalCodeWithName
[2m[36m(pid=45862)[0m     @     0x55baa4717643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45862)[0m     @     0x55baa468c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x55baa4716baf _PyEval_EvalCodeWithName
[2m[36m(pid=45862)[0m     @     0x55baa4717643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45862)[0m     @     0x55baa468c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x55baa4716baf _PyEval_EvalCodeWithName
[2m[36m(pid=45862)[0m     @     0x55baa4717643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45862)[0m     @     0x55baa468c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45862)[0m     @     0x55baa4716baf _PyEval_EvalCodeWithName
[2m[36m(pid=45862)[0m     @     0x55baa4717643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45862)[0m     @     0x55baa468c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x7f6540f204f5 at::Tensor::copy_()
[2m[36m(pid=45877)[0m     @     0x7f65433f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45877)[0m     @     0x7f6540f204f5 at::Tensor::copy_()
[2m[36m(pid=45877)[0m     @     0x7f6546fcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45877)[0m     @     0x564621406fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45877)[0m     @     0x564621361b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x5646213ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45877)[0m     @     0x5646213eda20 method_vectorcall
[2m[36m(pid=45877)[0m     @     0x564621361bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x5646213ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45877)[0m     @     0x5646213ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45877)[0m     @     0x564621362689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x5646213ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45877)[0m     @     0x5646213ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45877)[0m     @     0x564621362689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x5646213ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45877)[0m     @     0x5646213ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45877)[0m     @     0x564621362689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45877)[0m     @     0x5646213ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45877)[0m     @     0x5646213ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45877)[0m     @     0x564621362689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x7ed6fcbc8388 at::native::copy_impl()
[2m[36m(pid=45842)[0m     @     0x7ed6fcbca5a4 at::native::copy_()
[2m[36m(pid=45842)[0m     @     0x7ed6fd2b54f5 at::Tensor::copy_()
[2m[36m(pid=45842)[0m     @     0x7ed6ff7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45794)[0m     @     0x7f5bff5d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45794)[0m     @     0x7f5bff5d5388 at::native::copy_impl()
[2m[36m(pid=45794)[0m     @     0x7f5bff5d75a4 at::native::copy_()
[2m[36m(pid=45794)[0m     @     0x7f5bffcc24f5 at::Tensor::copy_()
[2m[36m(pid=45844)[0m     @     0x7ee284ee05a4 at::native::copy_()
[2m[36m(pid=45844)[0m     @     0x7ee2855cb4f5 at::Tensor::copy_()
[2m[36m(pid=45844)[0m     @     0x7ee287a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45844)[0m     @     0x7ee2855cb4f5 at::Tensor::copy_()
[2m[36m(pid=45844)[0m     @     0x7ee28b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45844)[0m     @     0x5603cf81bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45822)[0m     @     0x7fad0aad44f5 at::Tensor::copy_()
[2m[36m(pid=45822)[0m     @     0x7fad0cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45822)[0m     @     0x7fad0aad44f5 at::Tensor::copy_()
[2m[36m(pid=45822)[0m     @     0x7fad10b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45822)[0m     @     0x55b02e822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45822)[0m     @     0x55b02e77db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e808baf _PyEval_EvalCodeWithName
[2m[36m(pid=45822)[0m     @     0x55b02e809a20 method_vectorcall
[2m[36m(pid=45822)[0m     @     0x55b02e77dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e808baf _PyEval_EvalCodeWithName
[2m[36m(pid=45822)[0m     @     0x55b02e809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45822)[0m     @     0x55b02e77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e808baf _PyEval_EvalCodeWithName
[2m[36m(pid=45822)[0m     @     0x55b02e809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45822)[0m     @     0x55b02e77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e808baf _PyEval_EvalCodeWithName
[2m[36m(pid=45822)[0m     @     0x55b02e809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45895)[0m     @     0x7f6c3a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=45895)[0m     @     0x7f6c3c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45895)[0m     @     0x7f6c3a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=45895)[0m     @     0x7f6c4016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45895)[0m     @     0x55e6e995ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45895)[0m     @     0x55e6e98bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45895)[0m     @     0x55e6e9945baf _PyEval_EvalCodeWithName
[2m[36m(pid=45895)[0m     @     0x55e6e9946a20 method_vectorcall
[2m[36m(pid=45895)[0m     @     0x55e6e98babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45895)[0m     @     0x55e6e9945baf _PyEval_EvalCodeWithName
[2m[36m(pid=45895)[0m     @     0x55e6e9946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45895)[0m     @     0x55e6e98bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45895)[0m     @     0x55e6e9945baf _PyEval_EvalCodeWithName
[2m[36m(pid=45895)[0m     @     0x55e6e9946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45895)[0m     @     0x55e6e98bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45895)[0m     @     0x55e6e9945baf _PyEval_EvalCodeWithName
[2m[36m(pid=45895)[0m     @     0x55e6e9946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45895)[0m     @     0x55e6e98bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45895)[0m     @     0x55e6e9945baf _PyEval_EvalCodeWithName
[2m[36m(pid=45895)[0m     @     0x55e6e9946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45895)[0m     @     0x55e6e98bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x7ef9f6ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45906)[0m     @     0x7ef9f49f84f5 at::Tensor::copy_()
[2m[36m(pid=45906)[0m     @     0x7ef9faaa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45906)[0m     @     0x555ac34e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45906)[0m     @     0x555ac3443b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x555ac34cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45906)[0m     @     0x555ac34cfa20 method_vectorcall
[2m[36m(pid=45906)[0m     @     0x555ac3443bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x555ac34cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45906)[0m     @     0x555ac34cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45906)[0m     @     0x555ac3444689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x555ac34cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45906)[0m     @     0x555ac34cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45906)[0m     @     0x555ac3444689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x555ac34cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45906)[0m     @     0x555ac34cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45906)[0m     @     0x555ac3444689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45906)[0m     @     0x555ac34cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45906)[0m     @     0x555ac34cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45906)[0m     @     0x555ac3444689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x7f85043e64f5 at::Tensor::copy_()
[2m[36m(pid=45885)[0m     @     0x7f850a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45885)[0m     @     0x555f17360fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45885)[0m     @     0x555f172bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x555f17346baf _PyEval_EvalCodeWithName
[2m[36m(pid=45885)[0m     @     0x555f17347a20 method_vectorcall
[2m[36m(pid=45885)[0m     @     0x555f172bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x555f17346baf _PyEval_EvalCodeWithName
[2m[36m(pid=45885)[0m     @     0x555f17347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45885)[0m     @     0x555f172bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x555f17346baf _PyEval_EvalCodeWithName
[2m[36m(pid=45885)[0m     @     0x555f17347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45885)[0m     @     0x555f172bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x555f17346baf _PyEval_EvalCodeWithName
[2m[36m(pid=45885)[0m     @     0x555f17347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45885)[0m     @     0x555f172bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45885)[0m     @     0x555f17346baf _PyEval_EvalCodeWithName
[2m[36m(pid=45885)[0m     @     0x555f17347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45885)[0m     @     0x555f172bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x7f60a53ba4f5 at::Tensor::copy_()
[2m[36m(pid=45809)[0m     @     0x7f60ab46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45809)[0m     @     0x5558b45fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45809)[0m     @     0x5558b4556b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45809)[0m     @     0x5558b45e2a20 method_vectorcall
[2m[36m(pid=45809)[0m     @     0x5558b4556bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45809)[0m     @     0x5558b45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45809)[0m     @     0x5558b4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45809)[0m     @     0x5558b45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45805)[0m     @     0x7fbe974724f5 at::Tensor::copy_()
[2m[36m(pid=45805)[0m     @     0x7fbe9d51d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45805)[0m     @     0x55fa7b6e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45805)[0m     @     0x55fa7b63bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45805)[0m     @     0x55fa7b6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45805)[0m     @     0x55fa7b6c7a20 method_vectorcall
[2m[36m(pid=45805)[0m     @     0x55fa7b63bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45805)[0m     @     0x55fa7b6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45805)[0m     @     0x55fa7b6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45805)[0m     @     0x55fa7b63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45805)[0m     @     0x55fa7b6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45805)[0m     @     0x55fa7b6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45805)[0m     @     0x55fa7b63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45805)[0m     @     0x55fa7b6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45805)[0m     @     0x55fa7b6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45805)[0m     @     0x55fa7b63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45805)[0m     @     0x55fa7b6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45805)[0m     @     0x55fa7b6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45805)[0m     @     0x55fa7b63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x7f149d8b04f5 at::Tensor::copy_()
[2m[36m(pid=45808)[0m     @     0x7f14a395b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45808)[0m     @     0x562933969fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45808)[0m     @     0x5629338c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x56293394fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45808)[0m     @     0x562933950a20 method_vectorcall
[2m[36m(pid=45808)[0m     @     0x5629338c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x56293394fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45808)[0m     @     0x562933950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45808)[0m     @     0x5629338c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x56293394fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45808)[0m     @     0x562933950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45808)[0m     @     0x5629338c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x56293394fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45808)[0m     @     0x562933950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45808)[0m     @     0x5629338c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45808)[0m     @     0x56293394fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45808)[0m     @     0x562933950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45808)[0m     @     0x5629338c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x7ef25df0c4f5 at::Tensor::copy_()
[2m[36m(pid=45787)[0m     @     0x7ef263fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45787)[0m     @     0x564609540fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45787)[0m     @     0x56460949bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x564609526baf _PyEval_EvalCodeWithName
[2m[36m(pid=45787)[0m     @     0x564609527a20 method_vectorcall
[2m[36m(pid=45787)[0m     @     0x56460949bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x564609526baf _PyEval_EvalCodeWithName
[2m[36m(pid=45787)[0m     @     0x564609527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45787)[0m     @     0x56460949c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x564609526baf _PyEval_EvalCodeWithName
[2m[36m(pid=45787)[0m     @     0x564609527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45787)[0m     @     0x56460949c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x564609526baf _PyEval_EvalCodeWithName
[2m[36m(pid=45787)[0m     @     0x564609527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45787)[0m     @     0x56460949c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45787)[0m     @     0x564609526baf _PyEval_EvalCodeWithName
[2m[36m(pid=45787)[0m     @     0x564609527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45787)[0m     @     0x56460949c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x7f3f9249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45901)[0m     @     0x55abe17c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45901)[0m     @     0x55abe171eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x55abe17a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=45901)[0m     @     0x55abe17aaa20 method_vectorcall
[2m[36m(pid=45901)[0m     @     0x55abe171ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x55abe17a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=45901)[0m     @     0x55abe17aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45901)[0m     @     0x55abe171f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x55abe17a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=45901)[0m     @     0x55abe17aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45901)[0m     @     0x55abe171f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x55abe17a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=45901)[0m     @     0x55abe17aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45901)[0m     @     0x55abe171f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45901)[0m     @     0x55abe17a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=45901)[0m     @     0x55abe17aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45901)[0m     @     0x55abe171f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x7f718da7a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45793)[0m     @     0x560fe090bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45793)[0m     @     0x560fe0866b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x560fe08f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45793)[0m     @     0x560fe08f2a20 method_vectorcall
[2m[36m(pid=45793)[0m     @     0x560fe0866bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x560fe08f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45793)[0m     @     0x560fe08f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45793)[0m     @     0x560fe0867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x560fe08f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45793)[0m     @     0x560fe08f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45793)[0m     @     0x560fe0867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x560fe08f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45793)[0m     @     0x560fe08f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45793)[0m     @     0x560fe0867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45793)[0m     @     0x560fe08f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45793)[0m     @     0x560fe08f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45793)[0m     @     0x560fe0867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x7f332fefa4f5 at::Tensor::copy_()
[2m[36m(pid=45802)[0m     @     0x7f3335fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45802)[0m     @     0x559cf70fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45802)[0m     @     0x559cf7056b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x559cf70e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45802)[0m     @     0x559cf70e2a20 method_vectorcall
[2m[36m(pid=45802)[0m     @     0x559cf7056bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x559cf70e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45802)[0m     @     0x559cf70e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45802)[0m     @     0x559cf7057689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x559cf70e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45802)[0m     @     0x559cf70e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45802)[0m     @     0x559cf7057689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x559cf70e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45802)[0m     @     0x559cf70e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45802)[0m     @     0x559cf7057689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45802)[0m     @     0x559cf70e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45802)[0m     @     0x559cf70e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45802)[0m     @     0x559cf7057689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x7f4982a235a4 at::native::copy_()
[2m[36m(pid=45863)[0m     @     0x7f498310e4f5 at::Tensor::copy_()
[2m[36m(pid=45863)[0m     @     0x7f49855e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45863)[0m     @     0x7f498310e4f5 at::Tensor::copy_()
[2m[36m(pid=45806)[0m     @     0x7fab899e54f5 at::Tensor::copy_()
[2m[36m(pid=45806)[0m     @     0x7fab8fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45806)[0m     @     0x55c97bb8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45806)[0m     @     0x55c97bae5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45806)[0m     @     0x55c97bb70baf _PyEval_EvalCodeWithName
[2m[36m(pid=45806)[0m     @     0x55c97bb71a20 method_vectorcall
[2m[36m(pid=45806)[0m     @     0x55c97bae5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45806)[0m     @     0x55c97bb70baf _PyEval_EvalCodeWithName
[2m[36m(pid=45806)[0m     @     0x55c97bb71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45806)[0m     @     0x55c97bae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45806)[0m     @     0x55c97bb70baf _PyEval_EvalCodeWithName
[2m[36m(pid=45806)[0m     @     0x55c97bb71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45806)[0m     @     0x55c97bae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45806)[0m     @     0x55c97bb70baf _PyEval_EvalCodeWithName
[2m[36m(pid=45806)[0m     @     0x55c97bb71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45806)[0m     @     0x55c97bae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45806)[0m     @     0x55c97bb70baf _PyEval_EvalCodeWithName
[2m[36m(pid=45806)[0m     @     0x55c97bb71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45806)[0m     @     0x55c97bae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x7f39605f74f5 at::Tensor::copy_()
[2m[36m(pid=45795)[0m     @     0x7f39666a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45795)[0m     @     0x56111fe87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45795)[0m     @     0x56111fde2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x56111fe6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45795)[0m     @     0x56111fe6ea20 method_vectorcall
[2m[36m(pid=45795)[0m     @     0x56111fde2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x56111fe6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45795)[0m     @     0x56111fe6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45795)[0m     @     0x56111fde3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x56111fe6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45795)[0m     @     0x56111fe6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45795)[0m     @     0x56111fde3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x56111fe6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45795)[0m     @     0x56111fe6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45795)[0m     @     0x56111fde3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45795)[0m     @     0x56111fe6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45795)[0m     @     0x56111fe6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45795)[0m     @     0x56111fde3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x7f459adea4f5 at::Tensor::copy_()
[2m[36m(pid=45876)[0m     @     0x7f459d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45876)[0m     @     0x7f459adea4f5 at::Tensor::copy_()
[2m[36m(pid=45876)[0m     @     0x7f45a0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45876)[0m     @     0x563cea349fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45876)[0m     @     0x563cea2a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x563cea32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45876)[0m     @     0x563cea330a20 method_vectorcall
[2m[36m(pid=45876)[0m     @     0x563cea2a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x563cea32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45876)[0m     @     0x563cea330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45876)[0m     @     0x563cea2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x563cea32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45876)[0m     @     0x563cea330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45876)[0m     @     0x563cea2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x563cea32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45876)[0m     @     0x563cea330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45876)[0m     @     0x563cea2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45876)[0m     @     0x563cea32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45876)[0m     @     0x563cea330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45876)[0m     @     0x563cea2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x7f7c608228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45790)[0m     @     0x7f7c5e34f4f5 at::Tensor::copy_()
[2m[36m(pid=45790)[0m     @     0x7f7c643fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45790)[0m     @     0x55a7e6453fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45790)[0m     @     0x55a7e63aeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x55a7e6439baf _PyEval_EvalCodeWithName
[2m[36m(pid=45790)[0m     @     0x55a7e643aa20 method_vectorcall
[2m[36m(pid=45790)[0m     @     0x55a7e63aebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x55a7e6439baf _PyEval_EvalCodeWithName
[2m[36m(pid=45790)[0m     @     0x55a7e643a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45790)[0m     @     0x55a7e63af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x55a7e6439baf _PyEval_EvalCodeWithName
[2m[36m(pid=45790)[0m     @     0x55a7e643a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45790)[0m     @     0x55a7e63af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x55a7e6439baf _PyEval_EvalCodeWithName
[2m[36m(pid=45790)[0m     @     0x55a7e643a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45790)[0m     @     0x55a7e63af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45790)[0m     @     0x55a7e6439baf _PyEval_EvalCodeWithName
[2m[36m(pid=45790)[0m     @     0x55a7e643a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45790)[0m     @     0x55a7e63af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x7f6bf01244f5 at::Tensor::copy_()
[2m[36m(pid=45800)[0m     @     0x7f6bf61cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45800)[0m     @     0x5616c2980fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45800)[0m     @     0x5616c28dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x5616c2966baf _PyEval_EvalCodeWithName
[2m[36m(pid=45800)[0m     @     0x5616c2967a20 method_vectorcall
[2m[36m(pid=45800)[0m     @     0x5616c28dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x5616c2966baf _PyEval_EvalCodeWithName
[2m[36m(pid=45800)[0m     @     0x5616c2967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45800)[0m     @     0x5616c28dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x5616c2966baf _PyEval_EvalCodeWithName
[2m[36m(pid=45800)[0m     @     0x5616c2967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45800)[0m     @     0x5616c28dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x5616c2966baf _PyEval_EvalCodeWithName
[2m[36m(pid=45800)[0m     @     0x5616c2967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45800)[0m     @     0x5616c28dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45800)[0m     @     0x5616c2966baf _PyEval_EvalCodeWithName
[2m[36m(pid=45800)[0m     @     0x5616c2967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45800)[0m     @     0x5616c28dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x7ef8cc1244f5 at::Tensor::copy_()
[2m[36m(pid=45852)[0m     @     0x7ef8d21cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45852)[0m     @     0x556895d62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45852)[0m     @     0x556895cbdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x556895d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=45852)[0m     @     0x556895d49a20 method_vectorcall
[2m[36m(pid=45852)[0m     @     0x556895cbdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x556895d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=45852)[0m     @     0x556895d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45852)[0m     @     0x556895cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x556895d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=45852)[0m     @     0x556895d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45852)[0m     @     0x556895cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x556895d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=45852)[0m     @     0x556895d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45852)[0m     @     0x556895cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45852)[0m     @     0x556895d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=45852)[0m     @     0x556895d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45852)[0m     @     0x556895cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x7fae753ba4f5 at::Tensor::copy_()
[2m[36m(pid=45814)[0m     @     0x7fae7b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45814)[0m     @     0x5620f0261fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45814)[0m     @     0x5620f01bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x5620f0247baf _PyEval_EvalCodeWithName
[2m[36m(pid=45814)[0m     @     0x5620f0248a20 method_vectorcall
[2m[36m(pid=45814)[0m     @     0x5620f01bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x5620f0247baf _PyEval_EvalCodeWithName
[2m[36m(pid=45814)[0m     @     0x5620f0248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45814)[0m     @     0x5620f01bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x5620f0247baf _PyEval_EvalCodeWithName
[2m[36m(pid=45814)[0m     @     0x5620f0248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45814)[0m     @     0x5620f01bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x5620f0247baf _PyEval_EvalCodeWithName
[2m[36m(pid=45814)[0m     @     0x5620f0248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45814)[0m     @     0x5620f01bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45814)[0m     @     0x5620f0247baf _PyEval_EvalCodeWithName
[2m[36m(pid=45814)[0m     @     0x5620f0248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45814)[0m     @     0x5620f01bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x7f031d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45872)[0m     @     0x7f031adea4f5 at::Tensor::copy_()
[2m[36m(pid=45872)[0m     @     0x7f0320e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45872)[0m     @     0x55d22007bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45872)[0m     @     0x55d21ffd6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220061baf _PyEval_EvalCodeWithName
[2m[36m(pid=45872)[0m     @     0x55d220062a20 method_vectorcall
[2m[36m(pid=45872)[0m     @     0x55d21ffd6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220061baf _PyEval_EvalCodeWithName
[2m[36m(pid=45872)[0m     @     0x55d220062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45872)[0m     @     0x55d21ffd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220061baf _PyEval_EvalCodeWithName
[2m[36m(pid=45872)[0m     @     0x55d220062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45872)[0m     @     0x55d21ffd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220061baf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x7f323f49f4f5 at::Tensor::copy_()
[2m[36m(pid=45864)[0m     @     0x7f324554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45864)[0m     @     0x557f09b44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45864)[0m     @     0x557f09a9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45864)[0m     @     0x557f09b2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x557f09b2ba20 method_vectorcall
[2m[36m(pid=45864)[0m     @     0x557f09a9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45864)[0m     @     0x557f09b2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x557f09b2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45864)[0m     @     0x557f09aa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45864)[0m     @     0x557f09b2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x557f09b2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45864)[0m     @     0x557f09aa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45864)[0m     @     0x557f09b2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x557f09b2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45864)[0m     @     0x557f09aa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45864)[0m     @     0x557f09b2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=45864)[0m     @     0x557f09b2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45864)[0m     @     0x557f09aa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x7ef2d99e54f5 at::Tensor::copy_()
[2m[36m(pid=45785)[0m     @     0x7ef2dbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45786)[0m     @     0x7f73c95014f5 at::Tensor::copy_()
[2m[36m(pid=45786)[0m     @     0x7f73f62ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45786)[0m     @     0x55c851c18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45786)[0m     @     0x55c851b73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45786)[0m     @     0x55c851bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45786)[0m     @     0x55c851bffa20 method_vectorcall
[2m[36m(pid=45786)[0m     @     0x55c851b73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45786)[0m     @     0x55c851bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45786)[0m     @     0x55c851bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45786)[0m     @     0x55c851b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45786)[0m     @     0x55c851bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45786)[0m     @     0x55c851bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45786)[0m     @     0x55c851b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45786)[0m     @     0x55c851bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45786)[0m     @     0x55c851bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45786)[0m     @     0x55c851b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45786)[0m     @     0x55c851bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=45786)[0m     @     0x55c851bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45786)[0m     @     0x55c851b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x7f11898215a4 at::native::copy_()
[2m[36m(pid=45867)[0m     @     0x7f1189f0c4f5 at::Tensor::copy_()
[2m[36m(pid=45867)[0m     @     0x7f118c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45789)[0m     @     0x560bcebfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45789)[0m     @     0x560bceb70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45789)[0m     @     0x560bcebfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=45789)[0m     @     0x560bcebfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45789)[0m     @     0x560bceb70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x7f0dcd50a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45882)[0m     @     0x55da8e771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45882)[0m     @     0x55da8e6ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x55da8e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x55da8e758a20 method_vectorcall
[2m[36m(pid=45882)[0m     @     0x55da8e6ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x55da8e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x55da8e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45882)[0m     @     0x55da8e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x55da8e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x55da8e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45882)[0m     @     0x55da8e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x55da8e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x55da8e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45882)[0m     @     0x55da8e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45882)[0m     @     0x55da8e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=45882)[0m     @     0x55da8e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45882)[0m     @     0x55da8e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x7edf6f5a35a4 at::native::copy_()
[2m[36m(pid=45879)[0m     @     0x7edf6fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=45879)[0m     @     0x7edf721618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45798)[0m     @     0x5604e8f36baf _PyEval_EvalCodeWithName
[2m[36m(pid=45798)[0m     @     0x5604e8f37a20 method_vectorcall
[2m[36m(pid=45798)[0m     @     0x5604e8eabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45798)[0m     @     0x5604e8f36baf _PyEval_EvalCodeWithName
[2m[36m(pid=45798)[0m     @     0x5604e8f37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45798)[0m     @     0x5604e8eac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45798)[0m     @     0x5604e8f36baf _PyEval_EvalCodeWithName
[2m[36m(pid=45798)[0m     @     0x5604e8f37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45798)[0m     @     0x5604e8eac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45798)[0m     @     0x5604e8f36baf _PyEval_EvalCodeWithName
[2m[36m(pid=45798)[0m     @     0x5604e8f37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45798)[0m     @     0x5604e8eac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45798)[0m     @     0x5604e8f36baf _PyEval_EvalCodeWithName
[2m[36m(pid=45798)[0m     @     0x5604e8f37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45798)[0m     @     0x5604e8eac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x7f7614b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45818)[0m     @     0x7f76126924f5 at::Tensor::copy_()
[2m[36m(pid=45818)[0m     @     0x7f761873d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45818)[0m     @     0x5567e8972fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45818)[0m     @     0x5567e88cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x5567e8958baf _PyEval_EvalCodeWithName
[2m[36m(pid=45818)[0m     @     0x5567e8959a20 method_vectorcall
[2m[36m(pid=45818)[0m     @     0x5567e88cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x5567e8958baf _PyEval_EvalCodeWithName
[2m[36m(pid=45818)[0m     @     0x5567e8959643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45818)[0m     @     0x5567e88ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x5567e8958baf _PyEval_EvalCodeWithName
[2m[36m(pid=45818)[0m     @     0x5567e8959643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45818)[0m     @     0x5567e88ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x5567e8958baf _PyEval_EvalCodeWithName
[2m[36m(pid=45818)[0m     @     0x5567e8959643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45818)[0m     @     0x5567e88ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45818)[0m     @     0x5567e8958baf _PyEval_EvalCodeWithName
[2m[36m(pid=45818)[0m     @     0x5567e8959643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45818)[0m     @     0x5567e88ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x7f129a6924f5 at::Tensor::copy_()
[2m[36m(pid=45878)[0m     @     0x7f12a073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45878)[0m     @     0x5607b2c4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45878)[0m     @     0x5607b2ba6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x5607b2c31baf _PyEval_EvalCodeWithName
[2m[36m(pid=45878)[0m     @     0x5607b2c32a20 method_vectorcall
[2m[36m(pid=45878)[0m     @     0x5607b2ba6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x7f082e1654f5 at::Tensor::copy_()
[2m[36m(pid=45898)[0m     @     0x7f083421079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45898)[0m     @     0x558574c6efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45898)[0m     @     0x558574bc9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x558574c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=45898)[0m     @     0x558574c55a20 method_vectorcall
[2m[36m(pid=45898)[0m     @     0x558574bc9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x558574c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=45898)[0m     @     0x558574c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45898)[0m     @     0x558574bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x558574c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=45898)[0m     @     0x558574c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45898)[0m     @     0x558574bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x558574c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=45898)[0m     @     0x558574c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45898)[0m     @     0x558574bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45898)[0m     @     0x558574c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=45898)[0m     @     0x558574c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45898)[0m     @     0x558574bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45855)[0m     @     0x5558f39df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45855)[0m     @     0x5558f3954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x7efd623e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45788)[0m     @     0x55fc2c1a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45788)[0m     @     0x55fc2c100b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x55fc2c18bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x55fc2c18ca20 method_vectorcall
[2m[36m(pid=45788)[0m     @     0x55fc2c100bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x55fc2c18bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x55fc2c18c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45788)[0m     @     0x55fc2c101689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x55fc2c18bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x55fc2c18c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45788)[0m     @     0x55fc2c101689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x55fc2c18bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x55fc2c18c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45788)[0m     @     0x55fc2c101689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45788)[0m     @     0x55fc2c18bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45788)[0m     @     0x55fc2c18c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45788)[0m     @     0x55fc2c101689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x7efaf2d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45870)[0m     @     0x7efaf08354f5 at::Tensor::copy_()
[2m[36m(pid=45870)[0m     @     0x7efaf68e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45870)[0m     @     0x55c98178ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45870)[0m     @     0x55c9816eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x55c981775baf _PyEval_EvalCodeWithName
[2m[36m(pid=45870)[0m     @     0x55c981776a20 method_vectorcall
[2m[36m(pid=45870)[0m     @     0x55c9816eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x55c981775baf _PyEval_EvalCodeWithName
[2m[36m(pid=45870)[0m     @     0x55c981776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45870)[0m     @     0x55c9816eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x55c981775baf _PyEval_EvalCodeWithName
[2m[36m(pid=45870)[0m     @     0x55c981776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45870)[0m     @     0x55c9816eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x55c981775baf _PyEval_EvalCodeWithName
[2m[36m(pid=45870)[0m     @     0x55c981776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45870)[0m     @     0x55c9816eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45870)[0m     @     0x55c981775baf _PyEval_EvalCodeWithName
[2m[36m(pid=45870)[0m     @     0x55c981776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45870)[0m     @     0x55c9816eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x7f7a160ba4f5 at::Tensor::copy_()
[2m[36m(pid=45859)[0m     @     0x7f7a1c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45859)[0m     @     0x55c5a6bf0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45859)[0m     @     0x55c5a6b4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x55c5a6bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45859)[0m     @     0x55c5a6bd7a20 method_vectorcall
[2m[36m(pid=45859)[0m     @     0x55c5a6b4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x55c5a6bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45859)[0m     @     0x55c5a6bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45859)[0m     @     0x55c5a6b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x55c5a6bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45859)[0m     @     0x55c5a6bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45859)[0m     @     0x55c5a6b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x55c5a6bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45859)[0m     @     0x55c5a6bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45859)[0m     @     0x55c5a6b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45859)[0m     @     0x55c5a6bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=45859)[0m     @     0x55c5a6bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45859)[0m     @     0x55c5a6b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x7f01ddedf4f5 at::Tensor::copy_()
[2m[36m(pid=45803)[0m     @     0x7f01e3f8a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45803)[0m     @     0x5627bf70cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45803)[0m     @     0x5627bf667b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x5627bf6f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45803)[0m     @     0x5627bf6f3a20 method_vectorcall
[2m[36m(pid=45803)[0m     @     0x5627bf667bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x5627bf6f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45803)[0m     @     0x5627bf6f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45803)[0m     @     0x5627bf668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x5627bf6f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45803)[0m     @     0x5627bf6f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45803)[0m     @     0x5627bf668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x5627bf6f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45803)[0m     @     0x5627bf6f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45803)[0m     @     0x5627bf668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45803)[0m     @     0x5627bf6f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45803)[0m     @     0x5627bf6f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45803)[0m     @     0x5627bf668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x7f8e92b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45812)[0m     @     0x558a429d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45812)[0m     @     0x558a42931b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x558a429bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45812)[0m     @     0x558a429bda20 method_vectorcall
[2m[36m(pid=45812)[0m     @     0x558a42931bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x558a429bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45812)[0m     @     0x558a429bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45812)[0m     @     0x558a42932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x558a429bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45812)[0m     @     0x558a429bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45812)[0m     @     0x558a42932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x558a429bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45812)[0m     @     0x558a429bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45812)[0m     @     0x558a42932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45812)[0m     @     0x558a429bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45812)[0m     @     0x558a429bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45812)[0m     @     0x558a42932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x7f73625e24f5 at::Tensor::copy_()
[2m[36m(pid=45903)[0m     @     0x7f736868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45903)[0m     @     0x5590faea5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45903)[0m     @     0x5590fae00b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x5590fae8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45903)[0m     @     0x5590fae8ca20 method_vectorcall
[2m[36m(pid=45903)[0m     @     0x5590fae00bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x5590fae8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45903)[0m     @     0x5590fae8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45903)[0m     @     0x5590fae01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x5590fae8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45903)[0m     @     0x5590fae8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45903)[0m     @     0x5590fae01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x5590fae8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45903)[0m     @     0x5590fae8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45903)[0m     @     0x5590fae01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45903)[0m     @     0x5590fae8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45903)[0m     @     0x5590fae8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45903)[0m     @     0x5590fae01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x7f846d2b54f5 at::Tensor::copy_()
[2m[36m(pid=45861)[0m     @     0x7f847336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45861)[0m     @     0x555be5c6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45861)[0m     @     0x555be5bc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x555be5c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=45861)[0m     @     0x555be5c51a20 method_vectorcall
[2m[36m(pid=45861)[0m     @     0x555be5bc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x555be5c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=45861)[0m     @     0x555be5c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45861)[0m     @     0x555be5bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x555be5c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=45861)[0m     @     0x555be5c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45861)[0m     @     0x555be5bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x555be5c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=45861)[0m     @     0x555be5c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45861)[0m     @     0x555be5bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45861)[0m     @     0x555be5c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=45861)[0m     @     0x555be5c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45861)[0m     @     0x555be5bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x7f324cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45846)[0m     @     0x7f324aad44f5 at::Tensor::copy_()
[2m[36m(pid=45846)[0m     @     0x7f3250b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45846)[0m     @     0x562503395fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45846)[0m     @     0x5625032f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x56250337bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45846)[0m     @     0x56250337ca20 method_vectorcall
[2m[36m(pid=45846)[0m     @     0x5625032f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x56250337bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45846)[0m     @     0x56250337c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45846)[0m     @     0x5625032f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x56250337bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45846)[0m     @     0x56250337c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45846)[0m     @     0x5625032f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x56250337bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45846)[0m     @     0x56250337c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45846)[0m     @     0x5625032f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45846)[0m     @     0x56250337bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45846)[0m     @     0x56250337c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45846)[0m     @     0x5625032f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45874)[0m     @     0x55c84977bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45874)[0m     @     0x55c84977c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45874)[0m     @     0x55c8496f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x7f3a9388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45810)[0m     @     0x7f3a913ba4f5 at::Tensor::copy_()
[2m[36m(pid=45810)[0m     @     0x7f3a9746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45810)[0m     @     0x5617ebca3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45810)[0m     @     0x5617ebbfeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x5617ebc89baf _PyEval_EvalCodeWithName
[2m[36m(pid=45810)[0m     @     0x5617ebc8aa20 method_vectorcall
[2m[36m(pid=45810)[0m     @     0x5617ebbfebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x5617ebc89baf _PyEval_EvalCodeWithName
[2m[36m(pid=45810)[0m     @     0x5617ebc8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45810)[0m     @     0x5617ebbff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x5617ebc89baf _PyEval_EvalCodeWithName
[2m[36m(pid=45810)[0m     @     0x5617ebc8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45810)[0m     @     0x5617ebbff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x5617ebc89baf _PyEval_EvalCodeWithName
[2m[36m(pid=45810)[0m     @     0x5617ebc8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45810)[0m     @     0x5617ebbff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45810)[0m     @     0x5617ebc89baf _PyEval_EvalCodeWithName
[2m[36m(pid=45810)[0m     @     0x5617ebc8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45810)[0m     @     0x5617ebbff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45880)[0m     @     0x557e38440689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45904)[0m     @     0x561899369baf _PyEval_EvalCodeWithName
[2m[36m(pid=45904)[0m     @     0x56189936aa20 method_vectorcall
[2m[36m(pid=45904)[0m     @     0x5618992debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45904)[0m     @     0x561899369baf _PyEval_EvalCodeWithName
[2m[36m(pid=45904)[0m     @     0x56189936a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45904)[0m     @     0x5618992df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45904)[0m     @     0x561899369baf _PyEval_EvalCodeWithName
[2m[36m(pid=45904)[0m     @     0x56189936a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45904)[0m     @     0x5618992df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45904)[0m     @     0x561899369baf _PyEval_EvalCodeWithName
[2m[36m(pid=45904)[0m     @     0x56189936a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45904)[0m     @     0x5618992df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45904)[0m     @     0x561899369baf _PyEval_EvalCodeWithName
[2m[36m(pid=45904)[0m     @     0x56189936a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45904)[0m     @     0x5618992df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x557e79bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x557e79bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45866)[0m     @     0x557e79b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x557e79bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x557e79bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45866)[0m     @     0x557e79b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x557e79bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x557e79bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45866)[0m     @     0x557e79b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45866)[0m     @     0x557e79bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45866)[0m     @     0x557e79bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45866)[0m     @     0x557e79b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x7f8d48bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=45871)[0m     @     0x7f8d48bc8388 at::native::copy_impl()
[2m[36m(pid=45871)[0m     @     0x7f8d48bca5a4 at::native::copy_()
[2m[36m(pid=45842)[0m     @     0x7ed6fd2b54f5 at::Tensor::copy_()
[2m[36m(pid=45842)[0m     @     0x7ed70336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45842)[0m     @     0x56115ad9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45842)[0m     @     0x56115acf9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x56115ad84baf _PyEval_EvalCodeWithName
[2m[36m(pid=45842)[0m     @     0x56115ad85a20 method_vectorcall
[2m[36m(pid=45842)[0m     @     0x56115acf9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x56115ad84baf _PyEval_EvalCodeWithName
[2m[36m(pid=45842)[0m     @     0x56115ad85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45842)[0m     @     0x56115acfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x56115ad84baf _PyEval_EvalCodeWithName
[2m[36m(pid=45842)[0m     @     0x56115ad85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45842)[0m     @     0x56115acfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x56115ad84baf _PyEval_EvalCodeWithName
[2m[36m(pid=45842)[0m     @     0x56115ad85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45842)[0m     @     0x56115acfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45842)[0m     @     0x56115ad84baf _PyEval_EvalCodeWithName
[2m[36m(pid=45842)[0m     @     0x56115ad85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45842)[0m     @     0x56115acfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45794)[0m     @     0x7f5c021958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45794)[0m     @     0x7f5bffcc24f5 at::Tensor::copy_()
[2m[36m(pid=45794)[0m     @     0x7f5c05d6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45794)[0m     @     0x5559bd2f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45794)[0m     @     0x5559bd254b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45794)[0m     @     0x5559bd2dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45794)[0m     @     0x5559bd2e0a20 method_vectorcall
[2m[36m(pid=45794)[0m     @     0x5559bd254bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45794)[0m     @     0x5559bd2dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45794)[0m     @     0x5559bd2e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45794)[0m     @     0x5559bd255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf776b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf801baf _PyEval_EvalCodeWithName
[2m[36m(pid=45844)[0m     @     0x5603cf802a20 method_vectorcall
[2m[36m(pid=45844)[0m     @     0x5603cf776bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf801baf _PyEval_EvalCodeWithName
[2m[36m(pid=45844)[0m     @     0x5603cf802643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45844)[0m     @     0x5603cf777689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf801baf _PyEval_EvalCodeWithName
[2m[36m(pid=45844)[0m     @     0x5603cf802643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45844)[0m     @     0x5603cf777689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf801baf _PyEval_EvalCodeWithName
[2m[36m(pid=45844)[0m     @     0x5603cf802643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45844)[0m     @     0x5603cf777689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45844)[0m     @     0x5603cf801baf _PyEval_EvalCodeWithName
[2m[36m(pid=45844)[0m     @     0x5603cf802643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45844)[0m     @     0x5603cf777689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45822)[0m     @     0x55b02e808baf _PyEval_EvalCodeWithName
[2m[36m(pid=45822)[0m     @     0x55b02e809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45822)[0m     @     0x55b02e77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45809)[0m     @     0x5558b45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45809)[0m     @     0x5558b4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45809)[0m     @     0x5558b45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=45809)[0m     @     0x5558b45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45809)[0m     @     0x5558b4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x7f49891b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45863)[0m     @     0x56064cddcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45863)[0m     @     0x56064cd37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x56064cdc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45863)[0m     @     0x56064cdc3a20 method_vectorcall
[2m[36m(pid=45863)[0m     @     0x56064cd37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x56064cdc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45863)[0m     @     0x56064cdc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45863)[0m     @     0x56064cd38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x56064cdc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45863)[0m     @     0x56064cdc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45863)[0m     @     0x56064cd38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x56064cdc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45863)[0m     @     0x56064cdc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45863)[0m     @     0x56064cd38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45863)[0m     @     0x56064cdc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=45863)[0m     @     0x56064cdc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45863)[0m     @     0x56064cd38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45872)[0m     @     0x55d21ffd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45872)[0m     @     0x55d220061baf _PyEval_EvalCodeWithName
[2m[36m(pid=45872)[0m     @     0x55d220062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45872)[0m     @     0x55d21ffd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x7ef2d99e54f5 at::Tensor::copy_()
[2m[36m(pid=45785)[0m     @     0x7ef2dfa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45785)[0m     @     0x56530a5dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45785)[0m     @     0x56530a53ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x56530a5c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45785)[0m     @     0x56530a5c6a20 method_vectorcall
[2m[36m(pid=45785)[0m     @     0x56530a53abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x56530a5c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45785)[0m     @     0x56530a5c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45785)[0m     @     0x56530a53b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x56530a5c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45785)[0m     @     0x56530a5c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45785)[0m     @     0x56530a53b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x56530a5c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45785)[0m     @     0x56530a5c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45785)[0m     @     0x56530a53b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45785)[0m     @     0x56530a5c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=45785)[0m     @     0x56530a5c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45785)[0m     @     0x56530a53b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x7f1189f0c4f5 at::Tensor::copy_()
[2m[36m(pid=45867)[0m     @     0x7f118ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45867)[0m     @     0x55f3dbd93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45867)[0m     @     0x55f3dbceeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x55f3dbd79baf _PyEval_EvalCodeWithName
[2m[36m(pid=45867)[0m     @     0x55f3dbd7aa20 method_vectorcall
[2m[36m(pid=45867)[0m     @     0x55f3dbceebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x55f3dbd79baf _PyEval_EvalCodeWithName
[2m[36m(pid=45867)[0m     @     0x55f3dbd7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45867)[0m     @     0x55f3dbcef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x55f3dbd79baf _PyEval_EvalCodeWithName
[2m[36m(pid=45867)[0m     @     0x55f3dbd7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45867)[0m     @     0x55f3dbcef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x55f3dbd79baf _PyEval_EvalCodeWithName
[2m[36m(pid=45867)[0m     @     0x55f3dbd7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45867)[0m     @     0x55f3dbcef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45867)[0m     @     0x55f3dbd79baf _PyEval_EvalCodeWithName
[2m[36m(pid=45867)[0m     @     0x55f3dbd7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45867)[0m     @     0x55f3dbcef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x7edf6fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=45879)[0m     @     0x7edf75d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45879)[0m     @     0x55b43acd6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45879)[0m     @     0x55b43ac31b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x55b43acbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45879)[0m     @     0x55b43acbda20 method_vectorcall
[2m[36m(pid=45879)[0m     @     0x55b43ac31bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x55b43acbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45879)[0m     @     0x55b43acbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45879)[0m     @     0x55b43ac32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x55b43acbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45879)[0m     @     0x55b43acbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45879)[0m     @     0x55b43ac32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x55b43acbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45879)[0m     @     0x55b43acbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45879)[0m     @     0x55b43ac32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45879)[0m     @     0x55b43acbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45879)[0m     @     0x55b43acbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45879)[0m     @     0x55b43ac32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x5607b2c31baf _PyEval_EvalCodeWithName
[2m[36m(pid=45878)[0m     @     0x5607b2c32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45878)[0m     @     0x5607b2ba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x5607b2c31baf _PyEval_EvalCodeWithName
[2m[36m(pid=45878)[0m     @     0x5607b2c32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45878)[0m     @     0x5607b2ba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x5607b2c31baf _PyEval_EvalCodeWithName
[2m[36m(pid=45878)[0m     @     0x5607b2c32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45878)[0m     @     0x5607b2ba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45878)[0m     @     0x5607b2c31baf _PyEval_EvalCodeWithName
[2m[36m(pid=45878)[0m     @     0x5607b2c32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45878)[0m     @     0x5607b2ba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x7f8d492b54f5 at::Tensor::copy_()
[2m[36m(pid=45871)[0m     @     0x7f8d4b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=45794)[0m     @     0x5559bd2dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45794)[0m     @     0x5559bd2e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45794)[0m     @     0x5559bd255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45794)[0m     @     0x5559bd2dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45794)[0m     @     0x5559bd2e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45794)[0m     @     0x5559bd255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45794)[0m     @     0x5559bd2dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45794)[0m     @     0x5559bd2e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45794)[0m     @     0x5559bd255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x7f8d492b54f5 at::Tensor::copy_()
[2m[36m(pid=45871)[0m     @     0x7f8d4f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=45871)[0m     @     0x55676dce9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=45871)[0m     @     0x55676dc44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x55676dccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45871)[0m     @     0x55676dcd0a20 method_vectorcall
[2m[36m(pid=45871)[0m     @     0x55676dc44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x55676dccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45871)[0m     @     0x55676dcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45871)[0m     @     0x55676dc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x55676dccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45871)[0m     @     0x55676dcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45871)[0m     @     0x55676dc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x55676dccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45871)[0m     @     0x55676dcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45871)[0m     @     0x55676dc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=45871)[0m     @     0x55676dccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=45871)[0m     @     0x55676dcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=45871)[0m     @     0x55676dc45689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:44:44,656	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:44:44,656	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:44:44,666	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:44:44,667	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:44:44,667	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:44:44,678	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:44:44,678	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:44:44,678	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:44:44,688	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:44:44,689	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:44:44,689	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:44:44,720	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:44:44,729	ERROR trial_runner.py:567 -- Trial PPO_jss_env_e6675_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=45908, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:44:44,730	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8edbbd3001000000.
2020-11-05 10:44:44,731	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:44:44,732	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
== Status ==
Memory usage on this node: 22.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e6675_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_e6675_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_e6675_00000_0_2020-11-05_10-44-37/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 22.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e6675_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_e6675_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_e6675_00000_0_2020-11-05_10-44-37/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=45908)[0m E1105 10:44:44.723598 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.723759 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.723928 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724010 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.724189 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724265 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.724407 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1f6f5417a7b065f9091d563401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724475 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e76b5820fbdeb0f2091d563401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.724579 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724642 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.724741 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=bf6cd9795b8b23124e242e9f01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724804 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c5da4173a1c517cf4e242e9f01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.724913 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.724972 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.725088 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.725147 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.725251 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.725306 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=45908)[0m E1105 10:44:44.725406 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=45908)[0m E1105 10:44:44.725468 45908 46700 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:44:44,753	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:44:44,753	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff19fd5b4901000000.
2020-11-05 10:44:44,754	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc3083e0c01000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_e6675_00000])
