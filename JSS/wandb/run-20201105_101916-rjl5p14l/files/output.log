2020-11-05 10:19:18,504	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_5dddf_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=14443)[0m 2020-11-05 10:19:21,254	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=14391)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14391)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14391)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14391)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14391)[0m *** SIGSEGV (@0x0) received by PID 14391 (TID 0x7ffa57708700) from PID 0; stack trace: ***
[2m[36m(pid=14391)[0m     @     0x7ffa572e1390 (unknown)
[2m[36m(pid=14391)[0m     @     0x7fcb57229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14391)[0m     @     0x7fcb569547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14391)[0m     @     0x7fcb569578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14421)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14421)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14421)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14421)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14421)[0m *** SIGSEGV (@0x0) received by PID 14421 (TID 0x7f6b7a847700) from PID 0; stack trace: ***
[2m[36m(pid=14421)[0m     @     0x7f6b7a420390 (unknown)
[2m[36m(pid=14421)[0m     @     0x7f3c7a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14421)[0m     @     0x7f3c79a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14421)[0m     @     0x7f3c79a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14403)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14403)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14403)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14403)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14403)[0m *** SIGSEGV (@0x0) received by PID 14403 (TID 0x7fc8bc623700) from PID 0; stack trace: ***
[2m[36m(pid=14403)[0m     @     0x7fc8bc1fc390 (unknown)
[2m[36m(pid=14403)[0m     @     0x7f99bbed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14403)[0m     @     0x7f99bb6037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14403)[0m     @     0x7f99bb6068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14456)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14456)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14456)[0m *** SIGSEGV (@0x0) received by PID 14456 (TID 0x7f9480d05700) from PID 0; stack trace: ***
[2m[36m(pid=14456)[0m     @     0x7f94808de390 (unknown)
[2m[36m(pid=14456)[0m     @     0x7f6580774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14456)[0m     @     0x7f657fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14456)[0m     @     0x7f657fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14456)[0m     @     0x7f657fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=14444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14444)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14444)[0m *** SIGSEGV (@0x0) received by PID 14444 (TID 0x7f1da74aa700) from PID 0; stack trace: ***
[2m[36m(pid=14444)[0m     @     0x7f1da7083390 (unknown)
[2m[36m(pid=14444)[0m     @     0x7eeea7041f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14444)[0m     @     0x7eeea676c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14444)[0m     @     0x7eeea676f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14444)[0m     @     0x7eeea676fad3 at::TensorIterator::for_each()
[2m[36m(pid=14382)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14382)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14382)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14382)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14382)[0m *** SIGSEGV (@0x0) received by PID 14382 (TID 0x7f6ed583c700) from PID 0; stack trace: ***
[2m[36m(pid=14382)[0m     @     0x7f6ed5415390 (unknown)
[2m[36m(pid=14382)[0m     @     0x7f3fd539ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14382)[0m     @     0x7f3fd4aca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14382)[0m     @     0x7f3fd4acd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14382)[0m     @     0x7f3fd4acdad3 at::TensorIterator::for_each()
[2m[36m(pid=14419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14419)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14419)[0m *** SIGSEGV (@0x0) received by PID 14419 (TID 0x7f4aa1e3f700) from PID 0; stack trace: ***
[2m[36m(pid=14419)[0m     @     0x7f4aa1a18390 (unknown)
[2m[36m(pid=14419)[0m     @     0x7f1ba17f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14419)[0m     @     0x7f1ba0f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14419)[0m     @     0x7f1ba0f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14419)[0m     @     0x7f1ba0f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=14393)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14393)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14393)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14393)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14393)[0m *** SIGSEGV (@0x0) received by PID 14393 (TID 0x7f0a35649700) from PID 0; stack trace: ***
[2m[36m(pid=14393)[0m     @     0x7f0a35222390 (unknown)
[2m[36m(pid=14393)[0m     @     0x7edb35166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14393)[0m     @     0x7edb348917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14393)[0m     @     0x7edb348948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14399)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14399)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14399)[0m *** SIGSEGV (@0x0) received by PID 14399 (TID 0x7f04f3dd8700) from PID 0; stack trace: ***
[2m[36m(pid=14399)[0m     @     0x7f04f39b1390 (unknown)
[2m[36m(pid=14399)[0m     @     0x7ed5f394df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14399)[0m     @     0x7ed5f30787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14399)[0m     @     0x7ed5f307b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14399)[0m     @     0x7ed5f307bad3 at::TensorIterator::for_each()
[2m[36m(pid=14462)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14462)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14462)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14462)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14462)[0m *** SIGSEGV (@0x0) received by PID 14462 (TID 0x7f4ac1416700) from PID 0; stack trace: ***
[2m[36m(pid=14462)[0m     @     0x7f4ac0fef390 (unknown)
[2m[36m(pid=14462)[0m     @     0x7f1bc0ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14462)[0m     @     0x7f1bc05cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14462)[0m     @     0x7f1bc05d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14462)[0m     @     0x7f1bc05d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=14344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14344)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14445)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14445)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14445)[0m *** SIGSEGV (@0x0) received by PID 14445 (TID 0x7f83af563700) from PID 0; stack trace: ***
[2m[36m(pid=14445)[0m     @     0x7f83af13c390 (unknown)
[2m[36m(pid=14445)[0m     @     0x7f54af0e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14445)[0m     @     0x7f54ae80f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14445)[0m     @     0x7f54ae8128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14445)[0m     @     0x7f54ae812ad3 at::TensorIterator::for_each()
[2m[36m(pid=14445)[0m     @     0x7f54ae812d91 at::TensorIterator::for_each()
[2m[36m(pid=14329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14329)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14329)[0m *** SIGSEGV (@0x0) received by PID 14329 (TID 0x7f0c63041700) from PID 0; stack trace: ***
[2m[36m(pid=14329)[0m     @     0x7f0c62c1a390 (unknown)
[2m[36m(pid=14329)[0m     @     0x7edd62a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14329)[0m     @     0x7edd6214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14329)[0m     @     0x7edd6214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14329)[0m     @     0x7edd6214fad3 at::TensorIterator::for_each()
[2m[36m(pid=14469)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14469)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14409)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14409)[0m *** SIGSEGV (@0x0) received by PID 14409 (TID 0x7efd4c26c700) from PID 0; stack trace: ***
[2m[36m(pid=14409)[0m     @     0x7efd4be45390 (unknown)
[2m[36m(pid=14409)[0m     @     0x7ece4bddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14409)[0m     @     0x7ece4b5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14409)[0m     @     0x7ece4b50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14409)[0m     @     0x7ece4b50cad3 at::TensorIterator::for_each()
[2m[36m(pid=14454)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14454)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14454)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14454)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14454)[0m *** SIGSEGV (@0x0) received by PID 14454 (TID 0x7f5be262d700) from PID 0; stack trace: ***
[2m[36m(pid=14454)[0m     @     0x7f5be2206390 (unknown)
[2m[36m(pid=14454)[0m     @     0x7f2ce213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14454)[0m     @     0x7f2ce18657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14454)[0m     @     0x7f2ce18688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14454)[0m     @     0x7f2ce1868ad3 at::TensorIterator::for_each()
[2m[36m(pid=14394)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14394)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14442)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14442)[0m *** SIGSEGV (@0x0) received by PID 14442 (TID 0x7ff036dbb700) from PID 0; stack trace: ***
[2m[36m(pid=14442)[0m     @     0x7ff036994390 (unknown)
[2m[36m(pid=14442)[0m     @     0x7fc13693af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14442)[0m     @     0x7fc1360657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14442)[0m     @     0x7fc1360688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14442)[0m     @     0x7fc136068ad3 at::TensorIterator::for_each()
[2m[36m(pid=14402)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14402)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14402)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14402)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14402)[0m *** SIGSEGV (@0x0) received by PID 14402 (TID 0x7f2b063f6700) from PID 0; stack trace: ***
[2m[36m(pid=14402)[0m     @     0x7f2b05fcf390 (unknown)
[2m[36m(pid=14402)[0m     @     0x7efc05e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14402)[0m     @     0x7efc0554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14402)[0m     @     0x7efc055528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14402)[0m     @     0x7efc05552ad3 at::TensorIterator::for_each()
[2m[36m(pid=14402)[0m     @     0x7efc05552d91 at::TensorIterator::for_each()
[2m[36m(pid=14328)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14328)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14328)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14426)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14323)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14323)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14323)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14410)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14410)[0m *** SIGSEGV (@0x0) received by PID 14410 (TID 0x7fdf17fba700) from PID 0; stack trace: ***
[2m[36m(pid=14410)[0m     @     0x7fdf17b93390 (unknown)
[2m[36m(pid=14410)[0m     @     0x7fb017b35f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14410)[0m     @     0x7fb0172607db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14410)[0m     @     0x7fb0172638f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14410)[0m     @     0x7fb017263ad3 at::TensorIterator::for_each()
[2m[36m(pid=14410)[0m     @     0x7fb017263d91 at::TensorIterator::for_each()
[2m[36m(pid=14410)[0m     @     0x7fb017b46b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14410)[0m     @     0x7fb017b69c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14439)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14417)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14417)[0m *** SIGSEGV (@0x0) received by PID 14417 (TID 0x7ff100873700) from PID 0; stack trace: ***
[2m[36m(pid=14417)[0m     @     0x7ff10044c390 (unknown)
[2m[36m(pid=14417)[0m     @     0x7fc200333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14417)[0m     @     0x7fc1ffa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14417)[0m     @     0x7fc1ffa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14417)[0m     @     0x7fc1ffa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=14343)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14343)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14343)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14326)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14424)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14424)[0m *** SIGSEGV (@0x0) received by PID 14424 (TID 0x7f956628e700) from PID 0; stack trace: ***
[2m[36m(pid=14424)[0m     @     0x7f9565e67390 (unknown)
[2m[36m(pid=14424)[0m     @     0x7f6665df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14424)[0m     @     0x7f66655227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14424)[0m     @     0x7f66655258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14424)[0m     @     0x7f6665525ad3 at::TensorIterator::for_each()
[2m[36m(pid=14339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14339)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14398)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14398)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14398)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14356)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14356)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14356)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14396)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14396)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14396)[0m *** SIGSEGV (@0x0) received by PID 14396 (TID 0x7fbd9e19b700) from PID 0; stack trace: ***
[2m[36m(pid=14354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14354)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14434)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14434)[0m *** SIGSEGV (@0x0) received by PID 14434 (TID 0x7fd382426700) from PID 0; stack trace: ***
[2m[36m(pid=14434)[0m     @     0x7fd381fff390 (unknown)
[2m[36m(pid=14333)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14333)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14333)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14333)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14333)[0m *** SIGSEGV (@0x0) received by PID 14333 (TID 0x7f9604ee7700) from PID 0; stack trace: ***
[2m[36m(pid=14452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14452)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14452)[0m *** SIGSEGV (@0x0) received by PID 14452 (TID 0x7f580471a700) from PID 0; stack trace: ***
[2m[36m(pid=14411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14411)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14411)[0m *** SIGSEGV (@0x0) received by PID 14411 (TID 0x7f3071582700) from PID 0; stack trace: ***
[2m[36m(pid=14386)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14386)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14386)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14390)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14390)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14390)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14321)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14321)[0m *** SIGSEGV (@0x0) received by PID 14321 (TID 0x7fbf08845700) from PID 0; stack trace: ***
[2m[36m(pid=14321)[0m     @     0x7fbf0841e390 (unknown)
[2m[36m(pid=14321)[0m     @     0x7f9005940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14321)[0m     @     0x7f900506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14342)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14342)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14342)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14391)[0m     @     0x7fcb56957ad3 at::TensorIterator::for_each()
[2m[36m(pid=14391)[0m     @     0x7fcb56957d91 at::TensorIterator::for_each()
[2m[36m(pid=14391)[0m     @     0x7fcb5723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14391)[0m     @     0x7fcb5725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14391)[0m     @     0x7fcb566ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14391)[0m     @     0x7fcb566fd388 at::native::copy_impl()
[2m[36m(pid=14421)[0m     @     0x7f3c79a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=14421)[0m     @     0x7f3c79a79d91 at::TensorIterator::for_each()
[2m[36m(pid=14421)[0m     @     0x7f3c7a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14421)[0m     @     0x7f3c7a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14421)[0m     @     0x7f3c79821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14421)[0m     @     0x7f3c7981f388 at::native::copy_impl()
[2m[36m(pid=14332)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14332)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14332)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14460)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14460)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14403)[0m     @     0x7f99bb606ad3 at::TensorIterator::for_each()
[2m[36m(pid=14403)[0m     @     0x7f99bb606d91 at::TensorIterator::for_each()
[2m[36m(pid=14403)[0m     @     0x7f99bbee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14403)[0m     @     0x7f99bbf0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14403)[0m     @     0x7f99bb3aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14403)[0m     @     0x7f99bb3ac388 at::native::copy_impl()
[2m[36m(pid=14456)[0m     @     0x7f657fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=14456)[0m     @     0x7f6580785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14456)[0m     @     0x7f65807a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14456)[0m     @     0x7f657fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14456)[0m     @     0x7f657fc48388 at::native::copy_impl()
[2m[36m(pid=14456)[0m     @     0x7f657fc4a5a4 at::native::copy_()
[2m[36m(pid=14444)[0m     @     0x7eeea676fd91 at::TensorIterator::for_each()
[2m[36m(pid=14444)[0m     @     0x7eeea7052b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14444)[0m     @     0x7eeea7075c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14444)[0m     @     0x7eeea6517a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14444)[0m     @     0x7eeea6515388 at::native::copy_impl()
[2m[36m(pid=14382)[0m     @     0x7f3fd4acdd91 at::TensorIterator::for_each()
[2m[36m(pid=14382)[0m     @     0x7f3fd53b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14382)[0m     @     0x7f3fd53d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14382)[0m     @     0x7f3fd4875a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14382)[0m     @     0x7f3fd4873388 at::native::copy_impl()
[2m[36m(pid=14419)[0m     @     0x7f1ba0f27d91 at::TensorIterator::for_each()
[2m[36m(pid=14419)[0m     @     0x7f1ba180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14419)[0m     @     0x7f1ba182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14419)[0m     @     0x7f1ba0ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14419)[0m     @     0x7f1ba0ccd388 at::native::copy_impl()
[2m[36m(pid=14397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14397)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14397)[0m *** SIGSEGV (@0x0) received by PID 14397 (TID 0x7f7762271700) from PID 0; stack trace: ***
[2m[36m(pid=14397)[0m     @     0x7f7761e4a390 (unknown)
[2m[36m(pid=14400)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14400)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14400)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14400)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14400)[0m *** SIGSEGV (@0x0) received by PID 14400 (TID 0x7f915b928700) from PID 0; stack trace: ***
[2m[36m(pid=14324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14324)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14324)[0m *** SIGSEGV (@0x0) received by PID 14324 (TID 0x7f9c8507b700) from PID 0; stack trace: ***
[2m[36m(pid=14320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14320)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14320)[0m *** SIGSEGV (@0x0) received by PID 14320 (TID 0x7f8c68a27700) from PID 0; stack trace: ***
[2m[36m(pid=14320)[0m     @     0x7f8c68600390 (unknown)
[2m[36m(pid=14320)[0m     @     0x7f5d68563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14320)[0m     @     0x7f5d67c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14336)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14336)[0m *** SIGSEGV (@0x0) received by PID 14336 (TID 0x7fd652d18700) from PID 0; stack trace: ***
[2m[36m(pid=14336)[0m     @     0x7fd6528f1390 (unknown)
[2m[36m(pid=14322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14322)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14322)[0m *** SIGSEGV (@0x0) received by PID 14322 (TID 0x7f980afe0700) from PID 0; stack trace: ***
[2m[36m(pid=14322)[0m     @     0x7f980abb9390 (unknown)
[2m[36m(pid=14322)[0m     @     0x7f690aa13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14322)[0m     @     0x7f690a13e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14327)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14327)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14327)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14327)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14327)[0m *** SIGSEGV (@0x0) received by PID 14327 (TID 0x7f0d77bb9700) from PID 0; stack trace: ***
[2m[36m(pid=14327)[0m     @     0x7f0d77792390 (unknown)
[2m[36m(pid=14327)[0m     @     0x7ede7761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14327)[0m     @     0x7ede76d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14422)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14422)[0m *** SIGSEGV (@0x0) received by PID 14422 (TID 0x7f185fc7a700) from PID 0; stack trace: ***
[2m[36m(pid=14422)[0m     @     0x7f185f853390 (unknown)
[2m[36m(pid=14422)[0m     @     0x7ee95f7fbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14422)[0m     @     0x7ee95ef267db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14340)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14340)[0m *** SIGSEGV (@0x0) received by PID 14340 (TID 0x7f3bd02a5700) from PID 0; stack trace: ***
[2m[36m(pid=14340)[0m     @     0x7f3bcfe7e390 (unknown)
[2m[36m(pid=14340)[0m     @     0x7f0ccfe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14340)[0m     @     0x7f0ccf5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14340)[0m     @     0x7f0ccf5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14357)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14357)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14357)[0m *** SIGSEGV (@0x0) received by PID 14357 (TID 0x7f7073263700) from PID 0; stack trace: ***
[2m[36m(pid=14357)[0m     @     0x7f7072e3c390 (unknown)
[2m[36m(pid=14357)[0m     @     0x7f4172df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14357)[0m     @     0x7f417251b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14393)[0m     @     0x7edb34894ad3 at::TensorIterator::for_each()
[2m[36m(pid=14393)[0m     @     0x7edb34894d91 at::TensorIterator::for_each()
[2m[36m(pid=14393)[0m     @     0x7edb35177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14393)[0m     @     0x7edb3519ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14393)[0m     @     0x7edb3463ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14393)[0m     @     0x7edb3463a388 at::native::copy_impl()
[2m[36m(pid=14393)[0m     @     0x7edb3463c5a4 at::native::copy_()
[2m[36m(pid=14399)[0m     @     0x7ed5f307bd91 at::TensorIterator::for_each()
[2m[36m(pid=14399)[0m     @     0x7ed5f395eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14399)[0m     @     0x7ed5f3981c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14399)[0m     @     0x7ed5f2e23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14399)[0m     @     0x7ed5f2e21388 at::native::copy_impl()
[2m[36m(pid=14399)[0m     @     0x7ed5f2e235a4 at::native::copy_()
[2m[36m(pid=14462)[0m     @     0x7f1bc05d2d91 at::TensorIterator::for_each()
[2m[36m(pid=14462)[0m     @     0x7f1bc0eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14462)[0m     @     0x7f1bc0ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14462)[0m     @     0x7f1bc037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14462)[0m     @     0x7f1bc0378388 at::native::copy_impl()
[2m[36m(pid=14462)[0m     @     0x7f1bc037a5a4 at::native::copy_()
[2m[36m(pid=14344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14344)[0m *** SIGSEGV (@0x0) received by PID 14344 (TID 0x7f244323e700) from PID 0; stack trace: ***
[2m[36m(pid=14344)[0m     @     0x7f2442e17390 (unknown)
[2m[36m(pid=14344)[0m     @     0x7ef542db0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14344)[0m     @     0x7ef5424db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14445)[0m     @     0x7f54af0f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14445)[0m     @     0x7f54af118c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14445)[0m     @     0x7f54ae5baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14445)[0m     @     0x7f54ae5b8388 at::native::copy_impl()
[2m[36m(pid=14445)[0m     @     0x7f54ae5ba5a4 at::native::copy_()
[2m[36m(pid=14445)[0m     @     0x7f54aeca54f5 at::Tensor::copy_()
[2m[36m(pid=14329)[0m     @     0x7edd6214fd91 at::TensorIterator::for_each()
[2m[36m(pid=14329)[0m     @     0x7edd62a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14329)[0m     @     0x7edd62a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14329)[0m     @     0x7edd61ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14329)[0m     @     0x7edd61ef5388 at::native::copy_impl()
[2m[36m(pid=14329)[0m     @     0x7edd61ef75a4 at::native::copy_()
[2m[36m(pid=14469)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14469)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14469)[0m *** SIGSEGV (@0x0) received by PID 14469 (TID 0x7f42b0600700) from PID 0; stack trace: ***
[2m[36m(pid=14469)[0m     @     0x7f42b01d9390 (unknown)
[2m[36m(pid=14469)[0m     @     0x7f13b001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14469)[0m     @     0x7f13af7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14469)[0m     @     0x7f13af74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14409)[0m     @     0x7ece4b50cd91 at::TensorIterator::for_each()
[2m[36m(pid=14409)[0m     @     0x7ece4bdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14409)[0m     @     0x7ece4be12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14409)[0m     @     0x7ece4b2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14409)[0m     @     0x7ece4b2b2388 at::native::copy_impl()
[2m[36m(pid=14409)[0m     @     0x7ece4b2b45a4 at::native::copy_()
[2m[36m(pid=14466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14466)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14466)[0m *** SIGSEGV (@0x0) received by PID 14466 (TID 0x7fafcc16d700) from PID 0; stack trace: ***
[2m[36m(pid=14466)[0m     @     0x7fafcbd46390 (unknown)
[2m[36m(pid=14466)[0m     @     0x7f80cbcd6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14466)[0m     @     0x7f80cb4017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14466)[0m     @     0x7f80cb4048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14454)[0m     @     0x7f2ce1868d91 at::TensorIterator::for_each()
[2m[36m(pid=14454)[0m     @     0x7f2ce214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14454)[0m     @     0x7f2ce216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14454)[0m     @     0x7f2ce1610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14454)[0m     @     0x7f2ce160e388 at::native::copy_impl()
[2m[36m(pid=14454)[0m     @     0x7f2ce16105a4 at::native::copy_()
[2m[36m(pid=14454)[0m     @     0x7f2ce1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=14394)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14394)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14394)[0m *** SIGSEGV (@0x0) received by PID 14394 (TID 0x7f55ac951700) from PID 0; stack trace: ***
[2m[36m(pid=14394)[0m     @     0x7f55ac52a390 (unknown)
[2m[36m(pid=14394)[0m     @     0x7f26ac3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14394)[0m     @     0x7f26abb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14394)[0m     @     0x7f26abb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14442)[0m     @     0x7fc136068d91 at::TensorIterator::for_each()
[2m[36m(pid=14442)[0m     @     0x7fc13694bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14442)[0m     @     0x7fc13696ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14442)[0m     @     0x7fc135e10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14442)[0m     @     0x7fc135e0e388 at::native::copy_impl()
[2m[36m(pid=14442)[0m     @     0x7fc135e105a4 at::native::copy_()
[2m[36m(pid=14330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14330)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14330)[0m *** SIGSEGV (@0x0) received by PID 14330 (TID 0x7fad749b3700) from PID 0; stack trace: ***
[2m[36m(pid=14330)[0m     @     0x7fad7458c390 (unknown)
[2m[36m(pid=14330)[0m     @     0x7f7e74507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14330)[0m     @     0x7f7e73c327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14330)[0m     @     0x7f7e73c358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14330)[0m     @     0x7f7e73c35ad3 at::TensorIterator::for_each()
[2m[36m(pid=14425)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14425)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14425)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14425)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14425)[0m *** SIGSEGV (@0x0) received by PID 14425 (TID 0x7f0826007700) from PID 0; stack trace: ***
[2m[36m(pid=14425)[0m     @     0x7f0825be0390 (unknown)
[2m[36m(pid=14425)[0m     @     0x7ed925b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14425)[0m     @     0x7ed9252a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14425)[0m     @     0x7ed9252a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14392)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14392)[0m *** SIGSEGV (@0x0) received by PID 14392 (TID 0x7fefc8558700) from PID 0; stack trace: ***
[2m[36m(pid=14392)[0m     @     0x7fefc8131390 (unknown)
[2m[36m(pid=14392)[0m     @     0x7fc0c7eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14392)[0m     @     0x7fc0c75e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14392)[0m     @     0x7fc0c75e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14345)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14345)[0m *** SIGSEGV (@0x0) received by PID 14345 (TID 0x7f52a34cc700) from PID 0; stack trace: ***
[2m[36m(pid=14345)[0m     @     0x7f52a30a5390 (unknown)
[2m[36m(pid=14345)[0m     @     0x7f23a3052f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14345)[0m     @     0x7f23a277d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14345)[0m     @     0x7f23a27808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14389)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14389)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14389)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14389)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14389)[0m *** SIGSEGV (@0x0) received by PID 14389 (TID 0x7f2ec5d13700) from PID 0; stack trace: ***
[2m[36m(pid=14389)[0m     @     0x7f2ec58ec390 (unknown)
[2m[36m(pid=14389)[0m     @     0x7effc57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14389)[0m     @     0x7effc4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14335)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14335)[0m *** SIGSEGV (@0x0) received by PID 14335 (TID 0x7f4282dfe700) from PID 0; stack trace: ***
[2m[36m(pid=14335)[0m     @     0x7f42829d7390 (unknown)
[2m[36m(pid=14335)[0m     @     0x7f13827bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14335)[0m     @     0x7f1381ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14335)[0m     @     0x7f1381ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14325)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14325)[0m *** SIGSEGV (@0x0) received by PID 14325 (TID 0x7f7b75a46700) from PID 0; stack trace: ***
[2m[36m(pid=14325)[0m     @     0x7f7b7561f390 (unknown)
[2m[36m(pid=14325)[0m     @     0x7f4c71940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14325)[0m     @     0x7f4c7106b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14325)[0m     @     0x7f4c7106e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14325)[0m     @     0x7f4c7106ead3 at::TensorIterator::for_each()
[2m[36m(pid=14402)[0m     @     0x7efc05e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14402)[0m     @     0x7efc05e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14402)[0m     @     0x7efc052faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14402)[0m     @     0x7efc052f8388 at::native::copy_impl()
[2m[36m(pid=14402)[0m     @     0x7efc052fa5a4 at::native::copy_()
[2m[36m(pid=14402)[0m     @     0x7efc059e54f5 at::Tensor::copy_()
[2m[36m(pid=14402)[0m     @     0x7efc07eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14328)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14328)[0m *** SIGSEGV (@0x0) received by PID 14328 (TID 0x7f6714c33700) from PID 0; stack trace: ***
[2m[36m(pid=14328)[0m     @     0x7f671480c390 (unknown)
[2m[36m(pid=14328)[0m     @     0x7f3814563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14328)[0m     @     0x7f3813c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14328)[0m     @     0x7f3813c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14328)[0m     @     0x7f3813c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=14426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14426)[0m *** SIGSEGV (@0x0) received by PID 14426 (TID 0x7f323b727700) from PID 0; stack trace: ***
[2m[36m(pid=14426)[0m     @     0x7f323b300390 (unknown)
[2m[36m(pid=14426)[0m     @     0x7f033b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14426)[0m     @     0x7f033a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14426)[0m     @     0x7f033a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14323)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14323)[0m *** SIGSEGV (@0x0) received by PID 14323 (TID 0x7fec8013d700) from PID 0; stack trace: ***
[2m[36m(pid=14323)[0m     @     0x7fec7fd16390 (unknown)
[2m[36m(pid=14323)[0m     @     0x7fbd7faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14323)[0m     @     0x7fbd7f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14323)[0m     @     0x7fbd7f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14323)[0m     @     0x7fbd7f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=14465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14465)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14465)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14465)[0m *** SIGSEGV (@0x0) received by PID 14465 (TID 0x7f5eafde4700) from PID 0; stack trace: ***
[2m[36m(pid=14465)[0m     @     0x7f5eaf9bd390 (unknown)
[2m[36m(pid=14465)[0m     @     0x7f2faf8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14465)[0m     @     0x7f2faf0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14465)[0m     @     0x7f2faf00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14410)[0m     @     0x7fb01700ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14410)[0m     @     0x7fb017009388 at::native::copy_impl()
[2m[36m(pid=14410)[0m     @     0x7fb01700b5a4 at::native::copy_()
[2m[36m(pid=14410)[0m     @     0x7fb0176f64f5 at::Tensor::copy_()
[2m[36m(pid=14410)[0m     @     0x7fb019bc98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14439)[0m *** SIGSEGV (@0x0) received by PID 14439 (TID 0x7f8ff6e0a700) from PID 0; stack trace: ***
[2m[36m(pid=14439)[0m     @     0x7f8ff69e3390 (unknown)
[2m[36m(pid=14439)[0m     @     0x7f60f67bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14439)[0m     @     0x7f60f5ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14439)[0m     @     0x7f60f5ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14439)[0m     @     0x7f60f5ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=14439)[0m     @     0x7f60f5ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=14417)[0m     @     0x7fc1ffa61d91 at::TensorIterator::for_each()
[2m[36m(pid=14417)[0m     @     0x7fc200344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14417)[0m     @     0x7fc200367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14417)[0m     @     0x7fc1ff809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14417)[0m     @     0x7fc1ff807388 at::native::copy_impl()
[2m[36m(pid=14417)[0m     @     0x7fc1ff8095a4 at::native::copy_()
[2m[36m(pid=14343)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14343)[0m *** SIGSEGV (@0x0) received by PID 14343 (TID 0x7f90d8985700) from PID 0; stack trace: ***
[2m[36m(pid=14343)[0m     @     0x7f90d855e390 (unknown)
[2m[36m(pid=14343)[0m     @     0x7f61d84f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14343)[0m     @     0x7f61d7c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14343)[0m     @     0x7f61d7c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14343)[0m     @     0x7f61d7c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=14348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14348)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14348)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14348)[0m *** SIGSEGV (@0x0) received by PID 14348 (TID 0x7f4b6d58f700) from PID 0; stack trace: ***
[2m[36m(pid=14348)[0m     @     0x7f4b6d168390 (unknown)
[2m[36m(pid=14348)[0m     @     0x7f1c6d111f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14348)[0m     @     0x7f1c6c83c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14348)[0m     @     0x7f1c6c83f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14326)[0m *** SIGSEGV (@0x0) received by PID 14326 (TID 0x7fcf3a223700) from PID 0; stack trace: ***
[2m[36m(pid=14326)[0m     @     0x7fcf39dfc390 (unknown)
[2m[36m(pid=14326)[0m     @     0x7fa039d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14326)[0m     @     0x7fa0394a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14326)[0m     @     0x7fa0394a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14326)[0m     @     0x7fa0394a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=14424)[0m     @     0x7f6665525d91 at::TensorIterator::for_each()
[2m[36m(pid=14424)[0m     @     0x7f6665e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14424)[0m     @     0x7f6665e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14424)[0m     @     0x7f66652cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14424)[0m     @     0x7f66652cb388 at::native::copy_impl()
[2m[36m(pid=14424)[0m     @     0x7f66652cd5a4 at::native::copy_()
[2m[36m(pid=14334)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14334)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14334)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14334)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14334)[0m *** SIGSEGV (@0x0) received by PID 14334 (TID 0x7f5330ea7700) from PID 0; stack trace: ***
[2m[36m(pid=14334)[0m     @     0x7f5330a80390 (unknown)
[2m[36m(pid=14334)[0m     @     0x7f2430a30f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14334)[0m     @     0x7f243015b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14334)[0m     @     0x7f243015e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14388)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14388)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14388)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14388)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14388)[0m *** SIGSEGV (@0x0) received by PID 14388 (TID 0x7f5e85227700) from PID 0; stack trace: ***
[2m[36m(pid=14406)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14406)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14406)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14406)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14406)[0m *** SIGSEGV (@0x0) received by PID 14406 (TID 0x7fe11209c700) from PID 0; stack trace: ***
[2m[36m(pid=14406)[0m     @     0x7fe111c75390 (unknown)
[2m[36m(pid=14353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14353)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14353)[0m *** SIGSEGV (@0x0) received by PID 14353 (TID 0x7f3b3454e700) from PID 0; stack trace: ***
[2m[36m(pid=14353)[0m     @     0x7f3b34127390 (unknown)
[2m[36m(pid=14353)[0m     @     0x7f0c3401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14353)[0m     @     0x7f0c337477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14353)[0m     @     0x7f0c3374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14338)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14338)[0m *** SIGSEGV (@0x0) received by PID 14338 (TID 0x7f2848f10700) from PID 0; stack trace: ***
[2m[36m(pid=14338)[0m     @     0x7f2848ae9390 (unknown)
[2m[36m(pid=14338)[0m     @     0x7ef948a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14338)[0m     @     0x7ef9481617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14338)[0m     @     0x7ef9481648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14405)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14405)[0m *** SIGSEGV (@0x0) received by PID 14405 (TID 0x7f6b0e0ad700) from PID 0; stack trace: ***
[2m[36m(pid=14405)[0m     @     0x7f6b0dc86390 (unknown)
[2m[36m(pid=14405)[0m     @     0x7f3c0dc11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14380)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14380)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14380)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14380)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14380)[0m *** SIGSEGV (@0x0) received by PID 14380 (TID 0x7f4f42159700) from PID 0; stack trace: ***
[2m[36m(pid=14380)[0m     @     0x7f4f41d32390 (unknown)
[2m[36m(pid=14380)[0m     @     0x7f2041c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14413)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14413)[0m *** SIGSEGV (@0x0) received by PID 14413 (TID 0x7ff773fd4700) from PID 0; stack trace: ***
[2m[36m(pid=14413)[0m     @     0x7ff773bad390 (unknown)
[2m[36m(pid=14413)[0m     @     0x7fc873af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14413)[0m     @     0x7fc8732207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14339)[0m *** SIGSEGV (@0x0) received by PID 14339 (TID 0x7f41eafb1700) from PID 0; stack trace: ***
[2m[36m(pid=14339)[0m     @     0x7f41eab8a390 (unknown)
[2m[36m(pid=14339)[0m     @     0x7f12ea9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14339)[0m     @     0x7f12ea0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14398)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14398)[0m *** SIGSEGV (@0x0) received by PID 14398 (TID 0x7fdc7a4ed700) from PID 0; stack trace: ***
[2m[36m(pid=14398)[0m     @     0x7fdc7a0c6390 (unknown)
[2m[36m(pid=14398)[0m     @     0x7fad7a07af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14398)[0m     @     0x7fad797a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14341)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14341)[0m *** SIGSEGV (@0x0) received by PID 14341 (TID 0x7f8fdcad6700) from PID 0; stack trace: ***
[2m[36m(pid=14341)[0m     @     0x7f8fdc6af390 (unknown)
[2m[36m(pid=14356)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14356)[0m *** SIGSEGV (@0x0) received by PID 14356 (TID 0x7f1a6d6a5700) from PID 0; stack trace: ***
[2m[36m(pid=14356)[0m     @     0x7f1a6d27e390 (unknown)
[2m[36m(pid=14356)[0m     @     0x7eeb6d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14356)[0m     @     0x7eeb6c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14356)[0m     @     0x7eeb6c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14396)[0m     @     0x7fbd9dd74390 (unknown)
[2m[36m(pid=14396)[0m     @     0x7f8e9dd06f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14396)[0m     @     0x7f8e9d4317db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14396)[0m     @     0x7f8e9d4348f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14407)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14407)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14407)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14407)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14407)[0m *** SIGSEGV (@0x0) received by PID 14407 (TID 0x7f230c909700) from PID 0; stack trace: ***
[2m[36m(pid=14407)[0m     @     0x7f230c4e2390 (unknown)
[2m[36m(pid=14383)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14383)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14354)[0m *** SIGSEGV (@0x0) received by PID 14354 (TID 0x7f6f4b5c5700) from PID 0; stack trace: ***
[2m[36m(pid=14354)[0m     @     0x7f6f4b19e390 (unknown)
[2m[36m(pid=14354)[0m     @     0x7f404b124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14354)[0m     @     0x7f404a84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14408)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14408)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14408)[0m *** SIGSEGV (@0x0) received by PID 14408 (TID 0x7f74fbaa5700) from PID 0; stack trace: ***
[2m[36m(pid=14408)[0m     @     0x7f74fb67e390 (unknown)
[2m[36m(pid=14437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14437)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14437)[0m *** SIGSEGV (@0x0) received by PID 14437 (TID 0x7f4285cec700) from PID 0; stack trace: ***
[2m[36m(pid=14434)[0m     @     0x7fa481e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14434)[0m     @     0x7fa48154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14434)[0m     @     0x7fa4815528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14434)[0m     @     0x7fa481552ad3 at::TensorIterator::for_each()
[2m[36m(pid=14434)[0m     @     0x7fa481552d91 at::TensorIterator::for_each()
[2m[36m(pid=14333)[0m     @     0x7f9604ac0390 (unknown)
[2m[36m(pid=14333)[0m     @     0x7f6704a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14333)[0m     @     0x7f67041617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14333)[0m     @     0x7f67041648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14333)[0m     @     0x7f6704164ad3 at::TensorIterator::for_each()
[2m[36m(pid=14350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14350)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14350)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14350)[0m *** SIGSEGV (@0x0) received by PID 14350 (TID 0x7f4f53a30700) from PID 0; stack trace: ***
[2m[36m(pid=14350)[0m     @     0x7f4f53609390 (unknown)
[2m[36m(pid=14350)[0m     @     0x7f2052c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14350)[0m     @     0x7f20523407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14350)[0m     @     0x7f20523438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14452)[0m     @     0x7f58042f3390 (unknown)
[2m[36m(pid=14452)[0m     @     0x7f2904290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14452)[0m     @     0x7f29039bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14452)[0m     @     0x7f29039be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14452)[0m     @     0x7f29039bead3 at::TensorIterator::for_each()
[2m[36m(pid=14411)[0m     @     0x7f307115b390 (unknown)
[2m[36m(pid=14411)[0m     @     0x7f01710f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14411)[0m     @     0x7f01708247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14411)[0m     @     0x7f01708278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14411)[0m     @     0x7f0170827ad3 at::TensorIterator::for_each()
[2m[36m(pid=14386)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14386)[0m *** SIGSEGV (@0x0) received by PID 14386 (TID 0x7fbda154f700) from PID 0; stack trace: ***
[2m[36m(pid=14386)[0m     @     0x7fbda1128390 (unknown)
[2m[36m(pid=14386)[0m     @     0x7f8ea10b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14386)[0m     @     0x7f8ea07e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14386)[0m     @     0x7f8ea07e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14386)[0m     @     0x7f8ea07e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=14390)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14390)[0m *** SIGSEGV (@0x0) received by PID 14390 (TID 0x7f03e831e700) from PID 0; stack trace: ***
[2m[36m(pid=14390)[0m     @     0x7f03e7ef7390 (unknown)
[2m[36m(pid=14390)[0m     @     0x7ed4e7e89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14390)[0m     @     0x7ed4e75b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14390)[0m     @     0x7ed4e75b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14390)[0m     @     0x7ed4e75b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=14321)[0m     @     0x7f900506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14321)[0m     @     0x7f900506ead3 at::TensorIterator::for_each()
[2m[36m(pid=14321)[0m     @     0x7f900506ed91 at::TensorIterator::for_each()
[2m[36m(pid=14321)[0m     @     0x7f9005951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14321)[0m     @     0x7f9005974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14342)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14342)[0m *** SIGSEGV (@0x0) received by PID 14342 (TID 0x7f9b1c426700) from PID 0; stack trace: ***
[2m[36m(pid=14342)[0m     @     0x7f9b1bfff390 (unknown)
[2m[36m(pid=14342)[0m     @     0x7f6c1bfaff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14342)[0m     @     0x7f6c1b6da7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14342)[0m     @     0x7f6c1b6dd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14342)[0m     @     0x7f6c1b6ddad3 at::TensorIterator::for_each()
[2m[36m(pid=14391)[0m     @     0x7fcb566ff5a4 at::native::copy_()
[2m[36m(pid=14391)[0m     @     0x7fcb56dea4f5 at::Tensor::copy_()
[2m[36m(pid=14391)[0m     @     0x7fcb592bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14391)[0m     @     0x7fcb56dea4f5 at::Tensor::copy_()
[2m[36m(pid=14391)[0m     @     0x7fcb5ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14391)[0m     @     0x55d8d8de2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14391)[0m     @     0x55d8d8d3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14391)[0m     @     0x55d8d8dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14391)[0m     @     0x55d8d8dc9a20 method_vectorcall
[2m[36m(pid=14391)[0m     @     0x55d8d8d3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14391)[0m     @     0x55d8d8dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14391)[0m     @     0x55d8d8dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14391)[0m     @     0x55d8d8d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14391)[0m     @     0x55d8d8dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14391)[0m     @     0x55d8d8dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14421)[0m     @     0x7f3c798215a4 at::native::copy_()
[2m[36m(pid=14421)[0m     @     0x7f3c79f0c4f5 at::Tensor::copy_()
[2m[36m(pid=14421)[0m     @     0x7f3c7c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14421)[0m     @     0x7f3c79f0c4f5 at::Tensor::copy_()
[2m[36m(pid=14421)[0m     @     0x7f3c7ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14421)[0m     @     0x5640cf9d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14421)[0m     @     0x5640cf92bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14421)[0m     @     0x5640cf9b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14421)[0m     @     0x5640cf9b7a20 method_vectorcall
[2m[36m(pid=14421)[0m     @     0x5640cf92bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14421)[0m     @     0x5640cf9b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14421)[0m     @     0x5640cf9b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14421)[0m     @     0x5640cf92c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14395)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14395)[0m *** SIGSEGV (@0x0) received by PID 14395 (TID 0x7f8378405700) from PID 0; stack trace: ***
[2m[36m(pid=14395)[0m     @     0x7f8377fde390 (unknown)
[2m[36m(pid=14332)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14332)[0m *** SIGSEGV (@0x0) received by PID 14332 (TID 0x7f8f7f3ac700) from PID 0; stack trace: ***
[2m[36m(pid=14332)[0m     @     0x7f8f7ef85390 (unknown)
[2m[36m(pid=14332)[0m     @     0x7f607ef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14332)[0m     @     0x7f607e63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14332)[0m     @     0x7f607e6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14332)[0m     @     0x7f607e641ad3 at::TensorIterator::for_each()
[2m[36m(pid=14460)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14460)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14460)[0m *** SIGSEGV (@0x0) received by PID 14460 (TID 0x7f442ae06700) from PID 0; stack trace: ***
[2m[36m(pid=14460)[0m     @     0x7f442a9df390 (unknown)
[2m[36m(pid=14460)[0m     @     0x7f152a95ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14460)[0m     @     0x7f152a08a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14460)[0m     @     0x7f152a08d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14401)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14401)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14401)[0m *** SIGSEGV (@0x0) received by PID 14401 (TID 0x7f51bcab1700) from PID 0; stack trace: ***
[2m[36m(pid=14401)[0m     @     0x7f51bc68a390 (unknown)
[2m[36m(pid=14401)[0m     @     0x7f22bc563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14401)[0m     @     0x7f22bbc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14403)[0m     @     0x7f99bb3ae5a4 at::native::copy_()
[2m[36m(pid=14403)[0m     @     0x7f99bba994f5 at::Tensor::copy_()
[2m[36m(pid=14403)[0m     @     0x7f99bdf6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14403)[0m     @     0x7f99bba994f5 at::Tensor::copy_()
[2m[36m(pid=14403)[0m     @     0x7f99c1b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14403)[0m     @     0x55fc7b1a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14403)[0m     @     0x55fc7b0fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14403)[0m     @     0x55fc7b188baf _PyEval_EvalCodeWithName
[2m[36m(pid=14403)[0m     @     0x55fc7b189a20 method_vectorcall
[2m[36m(pid=14403)[0m     @     0x55fc7b0fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14403)[0m     @     0x55fc7b188baf _PyEval_EvalCodeWithName
[2m[36m(pid=14403)[0m     @     0x55fc7b189643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14403)[0m     @     0x55fc7b0fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14403)[0m     @     0x55fc7b188baf _PyEval_EvalCodeWithName
[2m[36m(pid=14403)[0m     @     0x55fc7b189643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14403)[0m     @     0x55fc7b0fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14403)[0m     @     0x55fc7b188baf _PyEval_EvalCodeWithName
[2m[36m(pid=14403)[0m     @     0x55fc7b189643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14403)[0m     @     0x55fc7b0fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14403)[0m     @     0x55fc7b188baf _PyEval_EvalCodeWithName
[2m[36m(pid=14403)[0m     @     0x55fc7b189643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14403)[0m     @     0x55fc7b0fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x7f65803354f5 at::Tensor::copy_()
[2m[36m(pid=14456)[0m     @     0x7f65828088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14456)[0m     @     0x7f65803354f5 at::Tensor::copy_()
[2m[36m(pid=14456)[0m     @     0x7f65863e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14456)[0m     @     0x55b9a75c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14456)[0m     @     0x55b9a7524b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x55b9a75afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14456)[0m     @     0x55b9a75b0a20 method_vectorcall
[2m[36m(pid=14456)[0m     @     0x55b9a7524bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x55b9a75afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14456)[0m     @     0x55b9a75b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14456)[0m     @     0x55b9a7525689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x55b9a75afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14456)[0m     @     0x55b9a75b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14456)[0m     @     0x55b9a7525689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x55b9a75afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14456)[0m     @     0x55b9a75b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14456)[0m     @     0x55b9a7525689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14456)[0m     @     0x55b9a75afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14456)[0m     @     0x55b9a75b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14456)[0m     @     0x55b9a7525689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x7eeea65175a4 at::native::copy_()
[2m[36m(pid=14444)[0m     @     0x7eeea6c024f5 at::Tensor::copy_()
[2m[36m(pid=14444)[0m     @     0x7eeea90d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14444)[0m     @     0x7eeea6c024f5 at::Tensor::copy_()
[2m[36m(pid=14444)[0m     @     0x7eeeaccad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14444)[0m     @     0x556ad86f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14444)[0m     @     0x556ad864bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x556ad86d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14444)[0m     @     0x556ad86d7a20 method_vectorcall
[2m[36m(pid=14444)[0m     @     0x556ad864bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x556ad86d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14444)[0m     @     0x556ad86d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14444)[0m     @     0x556ad864c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x556ad86d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14444)[0m     @     0x556ad86d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14444)[0m     @     0x556ad864c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x556ad86d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14444)[0m     @     0x556ad86d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14444)[0m     @     0x556ad864c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14444)[0m     @     0x556ad86d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14444)[0m     @     0x556ad86d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14444)[0m     @     0x556ad864c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x7f3fd48755a4 at::native::copy_()
[2m[36m(pid=14382)[0m     @     0x7f3fd4f604f5 at::Tensor::copy_()
[2m[36m(pid=14382)[0m     @     0x7f3fd74338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14382)[0m     @     0x7f3fd4f604f5 at::Tensor::copy_()
[2m[36m(pid=14382)[0m     @     0x7f3fdb00b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14382)[0m     @     0x56466fb28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14382)[0m     @     0x56466fa83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x56466fb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14382)[0m     @     0x56466fb0fa20 method_vectorcall
[2m[36m(pid=14382)[0m     @     0x56466fa83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x56466fb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14382)[0m     @     0x56466fb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14382)[0m     @     0x56466fa84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x56466fb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14382)[0m     @     0x56466fb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14382)[0m     @     0x56466fa84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x56466fb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14382)[0m     @     0x56466fb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14382)[0m     @     0x56466fa84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14382)[0m     @     0x56466fb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14382)[0m     @     0x56466fb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14382)[0m     @     0x56466fa84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x7f1ba0ccf5a4 at::native::copy_()
[2m[36m(pid=14419)[0m     @     0x7f1ba13ba4f5 at::Tensor::copy_()
[2m[36m(pid=14419)[0m     @     0x7f1ba388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14419)[0m     @     0x7f1ba13ba4f5 at::Tensor::copy_()
[2m[36m(pid=14419)[0m     @     0x7f1ba746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14419)[0m     @     0x560e91eeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14419)[0m     @     0x560e91e4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x560e91ed5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14419)[0m     @     0x560e91ed6a20 method_vectorcall
[2m[36m(pid=14419)[0m     @     0x560e91e4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x560e91ed5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14419)[0m     @     0x560e91ed6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14419)[0m     @     0x560e91e4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x560e91ed5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14419)[0m     @     0x560e91ed6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14419)[0m     @     0x560e91e4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x560e91ed5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14419)[0m     @     0x560e91ed6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14419)[0m     @     0x560e91e4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14419)[0m     @     0x560e91ed5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14419)[0m     @     0x560e91ed6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14419)[0m     @     0x560e91e4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x7f4861de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14397)[0m     @     0x7f486150f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14397)[0m     @     0x7f48615128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14397)[0m     @     0x7f4861512ad3 at::TensorIterator::for_each()
[2m[36m(pid=14397)[0m     @     0x7f4861512d91 at::TensorIterator::for_each()
[2m[36m(pid=14397)[0m     @     0x7f4861df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14400)[0m     @     0x7f915b501390 (unknown)
[2m[36m(pid=14400)[0m     @     0x7f625b43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14400)[0m     @     0x7f625ab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14400)[0m     @     0x7f625ab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14400)[0m     @     0x7f625ab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=14400)[0m     @     0x7f625ab68d91 at::TensorIterator::for_each()
[2m[36m(pid=14324)[0m     @     0x7f9c84c54390 (unknown)
[2m[36m(pid=14324)[0m     @     0x7f6d84bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14324)[0m     @     0x7f6d842fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14324)[0m     @     0x7f6d842ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14324)[0m     @     0x7f6d842ffad3 at::TensorIterator::for_each()
[2m[36m(pid=14324)[0m     @     0x7f6d842ffd91 at::TensorIterator::for_each()
[2m[36m(pid=14324)[0m     @     0x7f6d84be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14320)[0m     @     0x7f5d67c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14320)[0m     @     0x7f5d67c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=14320)[0m     @     0x7f5d67c91d91 at::TensorIterator::for_each()
[2m[36m(pid=14320)[0m     @     0x7f5d68574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14320)[0m     @     0x7f5d68597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14336)[0m     @     0x7fa75270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14336)[0m     @     0x7fa751e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14336)[0m     @     0x7fa751e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14336)[0m     @     0x7fa751e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=14336)[0m     @     0x7fa751e38d91 at::TensorIterator::for_each()
[2m[36m(pid=14336)[0m     @     0x7fa75271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14322)[0m     @     0x7f690a1418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14322)[0m     @     0x7f690a141ad3 at::TensorIterator::for_each()
[2m[36m(pid=14322)[0m     @     0x7f690a141d91 at::TensorIterator::for_each()
[2m[36m(pid=14327)[0m     @     0x7ede76d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14327)[0m     @     0x7ede76d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=14422)[0m     @     0x7ee95ef298f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14422)[0m     @     0x7ee95ef29ad3 at::TensorIterator::for_each()
[2m[36m(pid=14422)[0m     @     0x7ee95ef29d91 at::TensorIterator::for_each()
[2m[36m(pid=14422)[0m     @     0x7ee95f80cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14340)[0m     @     0x7f0ccf539ad3 at::TensorIterator::for_each()
[2m[36m(pid=14340)[0m     @     0x7f0ccf539d91 at::TensorIterator::for_each()
[2m[36m(pid=14340)[0m     @     0x7f0ccfe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14340)[0m     @     0x7f0ccfe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14357)[0m     @     0x7f417251e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14357)[0m     @     0x7f417251ead3 at::TensorIterator::for_each()
[2m[36m(pid=14357)[0m     @     0x7f417251ed91 at::TensorIterator::for_each()
[2m[36m(pid=14357)[0m     @     0x7f4172e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14357)[0m     @     0x7f4172e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14393)[0m     @     0x7edb34d274f5 at::Tensor::copy_()
[2m[36m(pid=14393)[0m     @     0x7edb371fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14393)[0m     @     0x7edb34d274f5 at::Tensor::copy_()
[2m[36m(pid=14393)[0m     @     0x7edb3add279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14393)[0m     @     0x55bc95e32fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14393)[0m     @     0x55bc95d8db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14393)[0m     @     0x55bc95e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=14393)[0m     @     0x55bc95e19a20 method_vectorcall
[2m[36m(pid=14393)[0m     @     0x55bc95d8dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14393)[0m     @     0x55bc95e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=14393)[0m     @     0x55bc95e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14393)[0m     @     0x55bc95d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14393)[0m     @     0x55bc95e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=14393)[0m     @     0x55bc95e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14393)[0m     @     0x55bc95d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14393)[0m     @     0x55bc95e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=14393)[0m     @     0x55bc95e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14393)[0m     @     0x55bc95d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14393)[0m     @     0x55bc95e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=14393)[0m     @     0x55bc95e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14393)[0m     @     0x55bc95d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x7ed5f350e4f5 at::Tensor::copy_()
[2m[36m(pid=14399)[0m     @     0x7ed5f59e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14399)[0m     @     0x7ed5f350e4f5 at::Tensor::copy_()
[2m[36m(pid=14399)[0m     @     0x7ed5f95b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14399)[0m     @     0x5586552edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14399)[0m     @     0x558655248b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x5586552d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14399)[0m     @     0x5586552d4a20 method_vectorcall
[2m[36m(pid=14399)[0m     @     0x558655248bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x5586552d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14399)[0m     @     0x5586552d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14399)[0m     @     0x558655249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x5586552d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14399)[0m     @     0x5586552d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14399)[0m     @     0x558655249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x5586552d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14399)[0m     @     0x5586552d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14399)[0m     @     0x558655249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14399)[0m     @     0x5586552d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14399)[0m     @     0x5586552d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14462)[0m     @     0x7f1bc0a654f5 at::Tensor::copy_()
[2m[36m(pid=14462)[0m     @     0x7f1bc2f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14462)[0m     @     0x7f1bc0a654f5 at::Tensor::copy_()
[2m[36m(pid=14462)[0m     @     0x7f1bc6b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14462)[0m     @     0x5555f4cdcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14462)[0m     @     0x5555f4c37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14462)[0m     @     0x5555f4cc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14462)[0m     @     0x5555f4cc3a20 method_vectorcall
[2m[36m(pid=14462)[0m     @     0x5555f4c37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14462)[0m     @     0x5555f4cc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14462)[0m     @     0x5555f4cc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14462)[0m     @     0x5555f4c38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14462)[0m     @     0x5555f4cc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14462)[0m     @     0x5555f4cc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14462)[0m     @     0x5555f4c38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14462)[0m     @     0x5555f4cc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14462)[0m     @     0x5555f4cc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14462)[0m     @     0x5555f4c38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14462)[0m     @     0x5555f4cc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14462)[0m     @     0x5555f4cc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14462)[0m     @     0x5555f4c38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x7ef5424de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14344)[0m     @     0x7ef5424dead3 at::TensorIterator::for_each()
[2m[36m(pid=14445)[0m     @     0x7f54b11788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14445)[0m     @     0x7f54aeca54f5 at::Tensor::copy_()
[2m[36m(pid=14445)[0m     @     0x7f54b4d5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14445)[0m     @     0x55625f44bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14445)[0m     @     0x55625f3a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14445)[0m     @     0x55625f431baf _PyEval_EvalCodeWithName
[2m[36m(pid=14445)[0m     @     0x55625f432a20 method_vectorcall
[2m[36m(pid=14445)[0m     @     0x55625f3a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14445)[0m     @     0x55625f431baf _PyEval_EvalCodeWithName
[2m[36m(pid=14445)[0m     @     0x55625f432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14445)[0m     @     0x55625f3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14445)[0m     @     0x55625f431baf _PyEval_EvalCodeWithName
[2m[36m(pid=14445)[0m     @     0x55625f432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14445)[0m     @     0x55625f3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14445)[0m     @     0x55625f431baf _PyEval_EvalCodeWithName
[2m[36m(pid=14445)[0m     @     0x55625f432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14445)[0m     @     0x55625f3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14445)[0m     @     0x55625f431baf _PyEval_EvalCodeWithName
[2m[36m(pid=14445)[0m     @     0x55625f432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14445)[0m     @     0x55625f3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14329)[0m     @     0x7edd625e24f5 at::Tensor::copy_()
[2m[36m(pid=14329)[0m     @     0x7edd64ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14329)[0m     @     0x7edd625e24f5 at::Tensor::copy_()
[2m[36m(pid=14329)[0m     @     0x7edd6868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14329)[0m     @     0x55d7ae102fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14329)[0m     @     0x55d7ae05db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14329)[0m     @     0x55d7ae0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14329)[0m     @     0x55d7ae0e9a20 method_vectorcall
[2m[36m(pid=14329)[0m     @     0x55d7ae05dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14329)[0m     @     0x55d7ae0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14329)[0m     @     0x55d7ae0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14329)[0m     @     0x55d7ae05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14329)[0m     @     0x55d7ae0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14329)[0m     @     0x55d7ae0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14329)[0m     @     0x55d7ae05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14329)[0m     @     0x55d7ae0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14329)[0m     @     0x55d7ae0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14329)[0m     @     0x55d7ae05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x7f13af74aad3 at::TensorIterator::for_each()
[2m[36m(pid=14469)[0m     @     0x7f13af74ad91 at::TensorIterator::for_each()
[2m[36m(pid=14469)[0m     @     0x7f13b002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14469)[0m     @     0x7f13b0050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14409)[0m     @     0x7ece4b99f4f5 at::Tensor::copy_()
[2m[36m(pid=14409)[0m     @     0x7ece4de728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14409)[0m     @     0x7ece4b99f4f5 at::Tensor::copy_()
[2m[36m(pid=14409)[0m     @     0x7ece51a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14409)[0m     @     0x556c5da35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14409)[0m     @     0x556c5d990b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14409)[0m     @     0x556c5da1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14409)[0m     @     0x556c5da1ca20 method_vectorcall
[2m[36m(pid=14409)[0m     @     0x556c5d990bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14409)[0m     @     0x556c5da1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14409)[0m     @     0x556c5da1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14409)[0m     @     0x556c5d991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14409)[0m     @     0x556c5da1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14409)[0m     @     0x556c5da1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14409)[0m     @     0x556c5d991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14409)[0m     @     0x556c5da1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14409)[0m     @     0x556c5da1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14409)[0m     @     0x556c5d991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14409)[0m     @     0x556c5da1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14409)[0m     @     0x556c5da1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14409)[0m     @     0x556c5d991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x7f80cb404ad3 at::TensorIterator::for_each()
[2m[36m(pid=14466)[0m     @     0x7f80cb404d91 at::TensorIterator::for_each()
[2m[36m(pid=14466)[0m     @     0x7f80cbce7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14466)[0m     @     0x7f80cbd0ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14466)[0m     @     0x7f80cb1aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14454)[0m     @     0x7f2ce41ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14454)[0m     @     0x7f2ce1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=14454)[0m     @     0x7f2ce7da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14454)[0m     @     0x55c0be2e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14454)[0m     @     0x55c0be243b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14454)[0m     @     0x55c0be2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14454)[0m     @     0x55c0be2cfa20 method_vectorcall
[2m[36m(pid=14454)[0m     @     0x55c0be243bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14454)[0m     @     0x55c0be2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14454)[0m     @     0x55c0be2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14454)[0m     @     0x55c0be244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14454)[0m     @     0x55c0be2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14454)[0m     @     0x55c0be2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14454)[0m     @     0x55c0be244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14454)[0m     @     0x55c0be2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14454)[0m     @     0x55c0be2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14454)[0m     @     0x55c0be244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14454)[0m     @     0x55c0be2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14454)[0m     @     0x55c0be2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14454)[0m     @     0x55c0be244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x7f26abb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=14394)[0m     @     0x7f26abb11d91 at::TensorIterator::for_each()
[2m[36m(pid=14394)[0m     @     0x7f26ac3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14394)[0m     @     0x7f26ac417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14394)[0m     @     0x7f26ab8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14394)[0m     @     0x7f26ab8b7388 at::native::copy_impl()
[2m[36m(pid=14442)[0m     @     0x7fc1364fb4f5 at::Tensor::copy_()
[2m[36m(pid=14442)[0m     @     0x7fc1389ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14442)[0m     @     0x7fc1364fb4f5 at::Tensor::copy_()
[2m[36m(pid=14442)[0m     @     0x7fc13c5a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14442)[0m     @     0x555e785d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14442)[0m     @     0x555e78534b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14442)[0m     @     0x555e785bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14442)[0m     @     0x555e785c0a20 method_vectorcall
[2m[36m(pid=14442)[0m     @     0x555e78534bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14442)[0m     @     0x555e785bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14442)[0m     @     0x555e785c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14442)[0m     @     0x555e78535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14442)[0m     @     0x555e785bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14442)[0m     @     0x555e785c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14442)[0m     @     0x555e78535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14442)[0m     @     0x555e785bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14442)[0m     @     0x555e785c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14442)[0m     @     0x555e78535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14442)[0m     @     0x555e785bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14442)[0m     @     0x555e785c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14442)[0m     @     0x555e78535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x7f7e73c35d91 at::TensorIterator::for_each()
[2m[36m(pid=14330)[0m     @     0x7f7e74518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14330)[0m     @     0x7f7e7453bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14330)[0m     @     0x7f7e739dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14330)[0m     @     0x7f7e739db388 at::native::copy_impl()
[2m[36m(pid=14330)[0m     @     0x7f7e739dd5a4 at::native::copy_()
[2m[36m(pid=14425)[0m     @     0x7ed9252a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=14425)[0m     @     0x7ed9252a8d91 at::TensorIterator::for_each()
[2m[36m(pid=14425)[0m     @     0x7ed925b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14425)[0m     @     0x7ed925baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14392)[0m     @     0x7fc0c75e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=14392)[0m     @     0x7fc0c75e4d91 at::TensorIterator::for_each()
[2m[36m(pid=14392)[0m     @     0x7fc0c7ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14392)[0m     @     0x7fc0c7eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14392)[0m     @     0x7fc0c738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14345)[0m     @     0x7f23a2780ad3 at::TensorIterator::for_each()
[2m[36m(pid=14345)[0m     @     0x7f23a2780d91 at::TensorIterator::for_each()
[2m[36m(pid=14345)[0m     @     0x7f23a3063b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14345)[0m     @     0x7f23a3086c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14389)[0m     @     0x7effc4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14389)[0m     @     0x7effc4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=14389)[0m     @     0x7effc4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=14389)[0m     @     0x7effc580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14335)[0m     @     0x7f1381ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=14335)[0m     @     0x7f1381ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=14335)[0m     @     0x7f13827ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14335)[0m     @     0x7f13827efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14325)[0m     @     0x7f4c7106ed91 at::TensorIterator::for_each()
[2m[36m(pid=14325)[0m     @     0x7f4c71951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14325)[0m     @     0x7f4c71974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14325)[0m     @     0x7f4c70e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14325)[0m     @     0x7f4c70e14388 at::native::copy_impl()
[2m[36m(pid=14402)[0m     @     0x7efc059e54f5 at::Tensor::copy_()
[2m[36m(pid=14402)[0m     @     0x7efc0ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14402)[0m     @     0x562cc96fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14402)[0m     @     0x562cc9656b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14402)[0m     @     0x562cc96e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14402)[0m     @     0x562cc96e2a20 method_vectorcall
[2m[36m(pid=14402)[0m     @     0x562cc9656bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14402)[0m     @     0x562cc96e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14402)[0m     @     0x562cc96e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14402)[0m     @     0x562cc9657689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14402)[0m     @     0x562cc96e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14402)[0m     @     0x562cc96e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14402)[0m     @     0x562cc9657689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14402)[0m     @     0x562cc96e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14402)[0m     @     0x562cc96e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14402)[0m     @     0x562cc9657689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14402)[0m     @     0x562cc96e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14402)[0m     @     0x562cc96e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14402)[0m     @     0x562cc9657689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x7f3813c91d91 at::TensorIterator::for_each()
[2m[36m(pid=14328)[0m     @     0x7f3814574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14328)[0m     @     0x7f3814597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14328)[0m     @     0x7f3813a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14328)[0m     @     0x7f3813a37388 at::native::copy_impl()
[2m[36m(pid=14426)[0m     @     0x7f033a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=14426)[0m     @     0x7f033a957d91 at::TensorIterator::for_each()
[2m[36m(pid=14426)[0m     @     0x7f033b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14426)[0m     @     0x7f033b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14426)[0m     @     0x7f033a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14323)[0m     @     0x7fbd7f223d91 at::TensorIterator::for_each()
[2m[36m(pid=14323)[0m     @     0x7fbd7fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14323)[0m     @     0x7fbd7fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14323)[0m     @     0x7fbd7efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14323)[0m     @     0x7fbd7efc9388 at::native::copy_impl()
[2m[36m(pid=14465)[0m     @     0x7f2faf00cad3 at::TensorIterator::for_each()
[2m[36m(pid=14465)[0m     @     0x7f2faf00cd91 at::TensorIterator::for_each()
[2m[36m(pid=14465)[0m     @     0x7f2faf8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14465)[0m     @     0x7f2faf912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14465)[0m     @     0x7f2faedb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14465)[0m     @     0x7f2faedb2388 at::native::copy_impl()
[2m[36m(pid=14410)[0m     @     0x7fb0176f64f5 at::Tensor::copy_()
[2m[36m(pid=14410)[0m     @     0x7fb01d7a179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14410)[0m     @     0x55ef03a68fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14410)[0m     @     0x55ef039c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14410)[0m     @     0x55ef03a4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14410)[0m     @     0x55ef03a4fa20 method_vectorcall
[2m[36m(pid=14410)[0m     @     0x55ef039c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14410)[0m     @     0x55ef03a4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14410)[0m     @     0x55ef03a4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14410)[0m     @     0x55ef039c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14410)[0m     @     0x55ef03a4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14410)[0m     @     0x55ef03a4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14410)[0m     @     0x55ef039c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14410)[0m     @     0x55ef03a4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14410)[0m     @     0x55ef03a4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14410)[0m     @     0x55ef039c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14410)[0m     @     0x55ef03a4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14410)[0m     @     0x55ef03a4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14410)[0m     @     0x55ef039c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x7f60f67ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14439)[0m     @     0x7f60f67efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14439)[0m     @     0x7f60f5c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14439)[0m     @     0x7f60f5c8f388 at::native::copy_impl()
[2m[36m(pid=14439)[0m     @     0x7f60f5c915a4 at::native::copy_()
[2m[36m(pid=14417)[0m     @     0x7fc1ffef44f5 at::Tensor::copy_()
[2m[36m(pid=14417)[0m     @     0x7fc2023c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14417)[0m     @     0x7fc1ffef44f5 at::Tensor::copy_()
[2m[36m(pid=14417)[0m     @     0x7fc205f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14417)[0m     @     0x5580bf46dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14417)[0m     @     0x5580bf3c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14417)[0m     @     0x5580bf453baf _PyEval_EvalCodeWithName
[2m[36m(pid=14417)[0m     @     0x5580bf454a20 method_vectorcall
[2m[36m(pid=14417)[0m     @     0x5580bf3c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14417)[0m     @     0x5580bf453baf _PyEval_EvalCodeWithName
[2m[36m(pid=14417)[0m     @     0x5580bf454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14417)[0m     @     0x5580bf3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14417)[0m     @     0x5580bf453baf _PyEval_EvalCodeWithName
[2m[36m(pid=14417)[0m     @     0x5580bf454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14417)[0m     @     0x5580bf3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14417)[0m     @     0x5580bf453baf _PyEval_EvalCodeWithName
[2m[36m(pid=14417)[0m     @     0x5580bf454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14417)[0m     @     0x5580bf3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14417)[0m     @     0x5580bf453baf _PyEval_EvalCodeWithName
[2m[36m(pid=14417)[0m     @     0x5580bf454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14417)[0m     @     0x5580bf3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x7f61d7c24d91 at::TensorIterator::for_each()
[2m[36m(pid=14343)[0m     @     0x7f61d8507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14343)[0m     @     0x7f61d852ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14343)[0m     @     0x7f61d79cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14343)[0m     @     0x7f61d79ca388 at::native::copy_impl()
[2m[36m(pid=14343)[0m     @     0x7f61d79cc5a4 at::native::copy_()
[2m[36m(pid=14348)[0m     @     0x7f1c6c83fad3 at::TensorIterator::for_each()
[2m[36m(pid=14348)[0m     @     0x7f1c6c83fd91 at::TensorIterator::for_each()
[2m[36m(pid=14348)[0m     @     0x7f1c6d122b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14348)[0m     @     0x7f1c6d145c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14348)[0m     @     0x7f1c6c5e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14348)[0m     @     0x7f1c6c5e5388 at::native::copy_impl()
[2m[36m(pid=14326)[0m     @     0x7fa0394a5d91 at::TensorIterator::for_each()
[2m[36m(pid=14326)[0m     @     0x7fa039d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14326)[0m     @     0x7fa039dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14326)[0m     @     0x7fa03924da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14326)[0m     @     0x7fa03924b388 at::native::copy_impl()
[2m[36m(pid=14424)[0m     @     0x7f66659b84f5 at::Tensor::copy_()
[2m[36m(pid=14424)[0m     @     0x7f6667e8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14424)[0m     @     0x7f66659b84f5 at::Tensor::copy_()
[2m[36m(pid=14424)[0m     @     0x7f666ba6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14424)[0m     @     0x55555ceb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14424)[0m     @     0x55555ce13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14424)[0m     @     0x55555ce9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14424)[0m     @     0x55555ce9fa20 method_vectorcall
[2m[36m(pid=14424)[0m     @     0x55555ce13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14424)[0m     @     0x55555ce9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14424)[0m     @     0x55555ce9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14424)[0m     @     0x55555ce14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14424)[0m     @     0x55555ce9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14424)[0m     @     0x55555ce9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14424)[0m     @     0x55555ce14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14424)[0m     @     0x55555ce9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14424)[0m     @     0x55555ce9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14424)[0m     @     0x55555ce14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14424)[0m     @     0x55555ce9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14424)[0m     @     0x55555ce9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14424)[0m     @     0x55555ce14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x7f243015ead3 at::TensorIterator::for_each()
[2m[36m(pid=14334)[0m     @     0x7f243015ed91 at::TensorIterator::for_each()
[2m[36m(pid=14334)[0m     @     0x7f2430a41b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14334)[0m     @     0x7f2430a64c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14388)[0m     @     0x7f5e84e00390 (unknown)
[2m[36m(pid=14388)[0m     @     0x7f2f84d89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14388)[0m     @     0x7f2f844b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14388)[0m     @     0x7f2f844b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14406)[0m     @     0x7fb211c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14406)[0m     @     0x7fb21133c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14406)[0m     @     0x7fb21133f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14406)[0m     @     0x7fb21133fad3 at::TensorIterator::for_each()
2020-11-05 10:19:26,866	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=14353)[0m     @     0x7f0c3374aad3 at::TensorIterator::for_each()
[2m[36m(pid=14353)[0m     @     0x7f0c3374ad91 at::TensorIterator::for_each()
[2m[36m(pid=14353)[0m     @     0x7f0c3402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14353)[0m     @     0x7f0c34050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14353)[0m     @     0x7f0c334f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14353)[0m     @     0x7f0c334f0388 at::native::copy_impl()
[2m[36m(pid=14338)[0m     @     0x7ef948164ad3 at::TensorIterator::for_each()
[2m[36m(pid=14338)[0m     @     0x7ef948164d91 at::TensorIterator::for_each()
[2m[36m(pid=14338)[0m     @     0x7ef948a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14338)[0m     @     0x7ef948a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14338)[0m     @     0x7ef947f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14338)[0m     @     0x7ef947f0a388 at::native::copy_impl()
[2m[36m(pid=14405)[0m     @     0x7f3c0d33c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14405)[0m     @     0x7f3c0d33f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14405)[0m     @     0x7f3c0d33fad3 at::TensorIterator::for_each()
[2m[36m(pid=14405)[0m     @     0x7f3c0d33fd91 at::TensorIterator::for_each()
[2m[36m(pid=14405)[0m     @     0x7f3c0dc22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14380)[0m     @     0x7f20413387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14380)[0m     @     0x7f204133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14380)[0m     @     0x7f204133bad3 at::TensorIterator::for_each()
[2m[36m(pid=14380)[0m     @     0x7f204133bd91 at::TensorIterator::for_each()
[2m[36m(pid=14413)[0m     @     0x7fc8732238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14413)[0m     @     0x7fc873223ad3 at::TensorIterator::for_each()
[2m[36m(pid=14413)[0m     @     0x7fc873223d91 at::TensorIterator::for_each()
[2m[36m(pid=14339)[0m     @     0x7f12ea0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14339)[0m     @     0x7f12ea0faad3 at::TensorIterator::for_each()
[2m[36m(pid=14339)[0m     @     0x7f12ea0fad91 at::TensorIterator::for_each()
[2m[36m(pid=14339)[0m     @     0x7f12ea9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14339)[0m     @     0x7f12eaa00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14339)[0m     @     0x7f12e9ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14398)[0m     @     0x7fad797a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14398)[0m     @     0x7fad797a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=14398)[0m     @     0x7fad797a8d91 at::TensorIterator::for_each()
[2m[36m(pid=14398)[0m     @     0x7fad7a08bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14398)[0m     @     0x7fad7a0aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14341)[0m     @     0x7f60dc60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14341)[0m     @     0x7f60dbd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14341)[0m     @     0x7f60dbd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14341)[0m     @     0x7f60dbd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=14341)[0m     @     0x7f60dbd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=14356)[0m     @     0x7eeb6c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=14356)[0m     @     0x7eeb6c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=14356)[0m     @     0x7eeb6d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14356)[0m     @     0x7eeb6d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14356)[0m     @     0x7eeb6c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14356)[0m     @     0x7eeb6c589388 at::native::copy_impl()
[2m[36m(pid=14396)[0m     @     0x7f8e9d434ad3 at::TensorIterator::for_each()
[2m[36m(pid=14396)[0m     @     0x7f8e9d434d91 at::TensorIterator::for_each()
[2m[36m(pid=14396)[0m     @     0x7f8e9dd17b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14396)[0m     @     0x7f8e9dd3ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14407)[0m     @     0x7ef40c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14407)[0m     @     0x7ef40ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14407)[0m     @     0x7ef40ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14407)[0m     @     0x7ef40ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=14383)[0m *** Aborted at 1604571566 (unix time) try "date -d @1604571566" if you are using GNU date ***
[2m[36m(pid=14383)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14383)[0m *** SIGSEGV (@0x0) received by PID 14383 (TID 0x7fb51542c700) from PID 0; stack trace: ***
[2m[36m(pid=14383)[0m     @     0x7fb515005390 (unknown)
[2m[36m(pid=14383)[0m     @     0x7f8614ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14383)[0m     @     0x7f86145cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14383)[0m     @     0x7f86145d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14354)[0m     @     0x7f404a8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14354)[0m     @     0x7f404a852ad3 at::TensorIterator::for_each()
[2m[36m(pid=14408)[0m     @     0x7f45fb61cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14408)[0m     @     0x7f45fad477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14408)[0m     @     0x7f45fad4a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14437)[0m     @     0x7f42858c5390 (unknown)
[2m[36m(pid=14437)[0m     @     0x7f13857f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14437)[0m     @     0x7f1384f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14434)[0m     @     0x7fa481e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14434)[0m     @     0x7fa481e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14434)[0m     @     0x7fa4812faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14434)[0m     @     0x7fa4812f8388 at::native::copy_impl()
[2m[36m(pid=14434)[0m     @     0x7fa4812fa5a4 at::native::copy_()
[2m[36m(pid=14333)[0m     @     0x7f6704164d91 at::TensorIterator::for_each()
[2m[36m(pid=14333)[0m     @     0x7f6704a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14333)[0m     @     0x7f6704a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14333)[0m     @     0x7f6703f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14333)[0m     @     0x7f6703f0a388 at::native::copy_impl()
[2m[36m(pid=14350)[0m     @     0x7f2052343ad3 at::TensorIterator::for_each()
[2m[36m(pid=14350)[0m     @     0x7f2052343d91 at::TensorIterator::for_each()
[2m[36m(pid=14350)[0m     @     0x7f2052c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14350)[0m     @     0x7f2052c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14452)[0m     @     0x7f29039bed91 at::TensorIterator::for_each()
[2m[36m(pid=14452)[0m     @     0x7f29042a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14452)[0m     @     0x7f29042c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14452)[0m     @     0x7f2903766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14452)[0m     @     0x7f2903764388 at::native::copy_impl()
[2m[36m(pid=14411)[0m     @     0x7f0170827d91 at::TensorIterator::for_each()
[2m[36m(pid=14411)[0m     @     0x7f017110ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14411)[0m     @     0x7f017112dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14411)[0m     @     0x7f01705cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14411)[0m     @     0x7f01705cd388 at::native::copy_impl()
[2m[36m(pid=14386)[0m     @     0x7f8ea07e3d91 at::TensorIterator::for_each()
[2m[36m(pid=14386)[0m     @     0x7f8ea10c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14386)[0m     @     0x7f8ea10e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14386)[0m     @     0x7f8ea058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14390)[0m     @     0x7ed4e75b7d91 at::TensorIterator::for_each()
[2m[36m(pid=14390)[0m     @     0x7ed4e7e9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14390)[0m     @     0x7ed4e7ebdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14390)[0m     @     0x7ed4e735fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14321)[0m     @     0x7f9004e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14321)[0m     @     0x7f9004e14388 at::native::copy_impl()
[2m[36m(pid=14321)[0m     @     0x7f9004e165a4 at::native::copy_()
[2m[36m(pid=14342)[0m     @     0x7f6c1b6ddd91 at::TensorIterator::for_each()
[2m[36m(pid=14342)[0m     @     0x7f6c1bfc0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14342)[0m     @     0x7f6c1bfe3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14342)[0m     @     0x7f6c1b485a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14342)[0m     @     0x7f6c1b483388 at::native::copy_impl()
[2m[36m(pid=14391)[0m     @     0x55d8d8d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14391)[0m     @     0x55d8d8dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14391)[0m     @     0x55d8d8dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14391)[0m     @     0x55d8d8d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14391)[0m     @     0x55d8d8dc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14391)[0m     @     0x55d8d8dc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14391)[0m     @     0x55d8d8d3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14421)[0m     @     0x5640cf9b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14421)[0m     @     0x5640cf9b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14421)[0m     @     0x5640cf92c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14421)[0m     @     0x5640cf9b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14421)[0m     @     0x5640cf9b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14421)[0m     @     0x5640cf92c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14421)[0m     @     0x5640cf9b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14421)[0m     @     0x5640cf9b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14421)[0m     @     0x5640cf92c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x7f5477e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14395)[0m     @     0x7f54775367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14395)[0m     @     0x7f54775398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14332)[0m     @     0x7f607e641d91 at::TensorIterator::for_each()
[2m[36m(pid=14332)[0m     @     0x7f607ef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14332)[0m     @     0x7f607ef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14332)[0m     @     0x7f607e3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14332)[0m     @     0x7f607e3e7388 at::native::copy_impl()
[2m[36m(pid=14460)[0m     @     0x7f152a08dad3 at::TensorIterator::for_each()
[2m[36m(pid=14460)[0m     @     0x7f152a08dd91 at::TensorIterator::for_each()
[2m[36m(pid=14460)[0m     @     0x7f152a970b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14460)[0m     @     0x7f152a993c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14460)[0m     @     0x7f1529e35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14460)[0m     @     0x7f1529e33388 at::native::copy_impl()
[2m[36m(pid=14401)[0m     @     0x7f22bbc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14401)[0m     @     0x7f22bbc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=14401)[0m     @     0x7f22bbc91d91 at::TensorIterator::for_each()
[2m[36m(pid=14401)[0m     @     0x7f22bc574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14401)[0m     @     0x7f22bc597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14397)[0m     @     0x7f4861e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14397)[0m     @     0x7f48612baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14397)[0m     @     0x7f48612b8388 at::native::copy_impl()
[2m[36m(pid=14397)[0m     @     0x7f48612ba5a4 at::native::copy_()
[2m[36m(pid=14397)[0m     @     0x7f48619a54f5 at::Tensor::copy_()
[2m[36m(pid=14400)[0m     @     0x7f625b44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14400)[0m     @     0x7f625b46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14400)[0m     @     0x7f625a910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14400)[0m     @     0x7f625a90e388 at::native::copy_impl()
[2m[36m(pid=14400)[0m     @     0x7f625a9105a4 at::native::copy_()
[2m[36m(pid=14324)[0m     @     0x7f6d84c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14324)[0m     @     0x7f6d840a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14324)[0m     @     0x7f6d840a5388 at::native::copy_impl()
[2m[36m(pid=14324)[0m     @     0x7f6d840a75a4 at::native::copy_()
[2m[36m(pid=14320)[0m     @     0x7f5d67a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14320)[0m     @     0x7f5d67a37388 at::native::copy_impl()
[2m[36m(pid=14320)[0m     @     0x7f5d67a395a4 at::native::copy_()
[2m[36m(pid=14320)[0m     @     0x7f5d681244f5 at::Tensor::copy_()
[2m[36m(pid=14320)[0m     @     0x7f5d6a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14336)[0m     @     0x7fa75273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14336)[0m     @     0x7fa751be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14336)[0m     @     0x7fa751bde388 at::native::copy_impl()
[2m[36m(pid=14336)[0m     @     0x7fa751be05a4 at::native::copy_()
[2m[36m(pid=14322)[0m     @     0x7f690aa24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14322)[0m     @     0x7f690aa47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14322)[0m     @     0x7f6909ee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14322)[0m     @     0x7f6909ee7388 at::native::copy_impl()
[2m[36m(pid=14322)[0m     @     0x7f6909ee95a4 at::native::copy_()
[2m[36m(pid=14327)[0m     @     0x7ede76d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=14327)[0m     @     0x7ede77630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14327)[0m     @     0x7ede77653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14327)[0m     @     0x7ede76af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14327)[0m     @     0x7ede76af3388 at::native::copy_impl()
[2m[36m(pid=14422)[0m     @     0x7ee95f82fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14422)[0m     @     0x7ee95ecd1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14422)[0m     @     0x7ee95eccf388 at::native::copy_impl()
[2m[36m(pid=14422)[0m     @     0x7ee95ecd15a4 at::native::copy_()
[2m[36m(pid=14340)[0m     @     0x7f0ccf2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14340)[0m     @     0x7f0ccf2df388 at::native::copy_impl()
[2m[36m(pid=14340)[0m     @     0x7f0ccf2e15a4 at::native::copy_()
[2m[36m(pid=14340)[0m     @     0x7f0ccf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=14357)[0m     @     0x7f41722c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14357)[0m     @     0x7f41722c4388 at::native::copy_impl()
[2m[36m(pid=14357)[0m     @     0x7f41722c65a4 at::native::copy_()
[2m[36m(pid=14399)[0m     @     0x558655249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x7ef5424ded91 at::TensorIterator::for_each()
[2m[36m(pid=14344)[0m     @     0x7ef542dc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14329)[0m     @     0x55d7ae0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14329)[0m     @     0x55d7ae0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14329)[0m     @     0x55d7ae05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x7f13af4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14469)[0m     @     0x7f13af4f0388 at::native::copy_impl()
[2m[36m(pid=14469)[0m     @     0x7f13af4f25a4 at::native::copy_()
[2m[36m(pid=14469)[0m     @     0x7f13afbdd4f5 at::Tensor::copy_()
[2m[36m(pid=14466)[0m     @     0x7f80cb1aa388 at::native::copy_impl()
[2m[36m(pid=14466)[0m     @     0x7f80cb1ac5a4 at::native::copy_()
[2m[36m(pid=14466)[0m     @     0x7f80cb8974f5 at::Tensor::copy_()
[2m[36m(pid=14466)[0m     @     0x7f80cdd6a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14394)[0m     @     0x7f26ab8b95a4 at::native::copy_()
[2m[36m(pid=14394)[0m     @     0x7f26abfa44f5 at::Tensor::copy_()
[2m[36m(pid=14394)[0m     @     0x7f26ae4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14330)[0m     @     0x7f7e740c84f5 at::Tensor::copy_()
[2m[36m(pid=14330)[0m     @     0x7f7e7659b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14330)[0m     @     0x7f7e740c84f5 at::Tensor::copy_()
[2m[36m(pid=14425)[0m     @     0x7ed925050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14425)[0m     @     0x7ed92504e388 at::native::copy_impl()
[2m[36m(pid=14425)[0m     @     0x7ed9250505a4 at::native::copy_()
[2m[36m(pid=14425)[0m     @     0x7ed92573b4f5 at::Tensor::copy_()
[2m[36m(pid=14392)[0m     @     0x7fc0c738a388 at::native::copy_impl()
[2m[36m(pid=14392)[0m     @     0x7fc0c738c5a4 at::native::copy_()
[2m[36m(pid=14392)[0m     @     0x7fc0c7a774f5 at::Tensor::copy_()
[2m[36m(pid=14392)[0m     @     0x7fc0c9f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14345)[0m     @     0x7f23a2528a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14345)[0m     @     0x7f23a2526388 at::native::copy_impl()
[2m[36m(pid=14345)[0m     @     0x7f23a25285a4 at::native::copy_()
[2m[36m(pid=14345)[0m     @     0x7f23a2c134f5 at::Tensor::copy_()
[2m[36m(pid=14389)[0m     @     0x7effc582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14389)[0m     @     0x7effc4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14389)[0m     @     0x7effc4ccd388 at::native::copy_impl()
[2m[36m(pid=14389)[0m     @     0x7effc4ccf5a4 at::native::copy_()
[2m[36m(pid=14335)[0m     @     0x7f1381c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14335)[0m     @     0x7f1381c8f388 at::native::copy_impl()
[2m[36m(pid=14335)[0m     @     0x7f1381c915a4 at::native::copy_()
[2m[36m(pid=14335)[0m     @     0x7f138237c4f5 at::Tensor::copy_()
[2m[36m(pid=14325)[0m     @     0x7f4c70e165a4 at::native::copy_()
[2m[36m(pid=14325)[0m     @     0x7f4c715014f5 at::Tensor::copy_()
[2m[36m(pid=14325)[0m     @     0x7f4c739d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14325)[0m     @     0x7f4c715014f5 at::Tensor::copy_()
[2m[36m(pid=14328)[0m     @     0x7f3813a395a4 at::native::copy_()
[2m[36m(pid=14328)[0m     @     0x7f38141244f5 at::Tensor::copy_()
[2m[36m(pid=14328)[0m     @     0x7f38165f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14328)[0m     @     0x7f38141244f5 at::Tensor::copy_()
[2m[36m(pid=14328)[0m     @     0x7f381a1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14328)[0m     @     0x55dbe383ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14328)[0m     @     0x55dbe379ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x7f033a6fd388 at::native::copy_impl()
[2m[36m(pid=14426)[0m     @     0x7f033a6ff5a4 at::native::copy_()
[2m[36m(pid=14426)[0m     @     0x7f033adea4f5 at::Tensor::copy_()
[2m[36m(pid=14426)[0m     @     0x7f033d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14323)[0m     @     0x7fbd7efcb5a4 at::native::copy_()
[2m[36m(pid=14323)[0m     @     0x7fbd7f6b64f5 at::Tensor::copy_()
[2m[36m(pid=14323)[0m     @     0x7fbd81b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14465)[0m     @     0x7f2faedb45a4 at::native::copy_()
[2m[36m(pid=14465)[0m     @     0x7f2faf49f4f5 at::Tensor::copy_()
[2m[36m(pid=14465)[0m     @     0x7f2fb19728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14439)[0m     @     0x7f60f637c4f5 at::Tensor::copy_()
[2m[36m(pid=14439)[0m     @     0x7f60f884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14439)[0m     @     0x7f60f637c4f5 at::Tensor::copy_()
[2m[36m(pid=14439)[0m     @     0x7f60fc42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14439)[0m     @     0x560ffee88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14439)[0m     @     0x560ffede3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffee6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14439)[0m     @     0x560ffee6fa20 method_vectorcall
[2m[36m(pid=14439)[0m     @     0x560ffede3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffee6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14439)[0m     @     0x560ffee6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14343)[0m     @     0x7f61d80b74f5 at::Tensor::copy_()
[2m[36m(pid=14343)[0m     @     0x7f61da58a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14343)[0m     @     0x7f61d80b74f5 at::Tensor::copy_()
[2m[36m(pid=14348)[0m     @     0x7f1c6c5e75a4 at::native::copy_()
[2m[36m(pid=14348)[0m     @     0x7f1c6ccd24f5 at::Tensor::copy_()
[2m[36m(pid=14348)[0m     @     0x7f1c6f1a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14326)[0m     @     0x7fa03924d5a4 at::native::copy_()
[2m[36m(pid=14326)[0m     @     0x7fa0399384f5 at::Tensor::copy_()
[2m[36m(pid=14326)[0m     @     0x7fa03be0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14334)[0m     @     0x7f242ff06a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14334)[0m     @     0x7f242ff04388 at::native::copy_impl()
[2m[36m(pid=14334)[0m     @     0x7f242ff065a4 at::native::copy_()
[2m[36m(pid=14406)[0m     @     0x7fb21133fd91 at::TensorIterator::for_each()
[2m[36m(pid=14406)[0m     @     0x7fb211c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14406)[0m     @     0x7fb211c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14406)[0m     @     0x7fb2110e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14406)[0m     @     0x7fb2110e5388 at::native::copy_impl()
[2m[36m(pid=14353)[0m     @     0x7f0c334f25a4 at::native::copy_()
[2m[36m(pid=14353)[0m     @     0x7f0c33bdd4f5 at::Tensor::copy_()
[2m[36m(pid=14338)[0m     @     0x7ef947f0c5a4 at::native::copy_()
[2m[36m(pid=14338)[0m     @     0x7ef9485f74f5 at::Tensor::copy_()
[2m[36m(pid=14405)[0m     @     0x7f3c0dc45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14405)[0m     @     0x7f3c0d0e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14405)[0m     @     0x7f3c0d0e5388 at::native::copy_impl()
[2m[36m(pid=14380)[0m     @     0x7f2041c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14380)[0m     @     0x7f2041c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14380)[0m     @     0x7f20410e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14380)[0m     @     0x7f20410e1388 at::native::copy_impl()
[2m[36m(pid=14413)[0m     @     0x7fc873b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14413)[0m     @     0x7fc873b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14413)[0m     @     0x7fc872fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14413)[0m     @     0x7fc872fc9388 at::native::copy_impl()
[2m[36m(pid=14339)[0m     @     0x7f12e9ea0388 at::native::copy_impl()
[2m[36m(pid=14339)[0m     @     0x7f12e9ea25a4 at::native::copy_()
[2m[36m(pid=14339)[0m     @     0x7f12ea58d4f5 at::Tensor::copy_()
[2m[36m(pid=14339)[0m     @     0x7f12eca608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14398)[0m     @     0x7fad79550a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14398)[0m     @     0x7fad7954e388 at::native::copy_impl()
[2m[36m(pid=14398)[0m     @     0x7fad795505a4 at::native::copy_()
[2m[36m(pid=14398)[0m     @     0x7fad79c3b4f5 at::Tensor::copy_()
[2m[36m(pid=14341)[0m     @     0x7f60dc61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14341)[0m     @     0x7f60dc642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14341)[0m     @     0x7f60dbae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14341)[0m     @     0x7f60dbae2388 at::native::copy_impl()
[2m[36m(pid=14341)[0m     @     0x7f60dbae45a4 at::native::copy_()
[2m[36m(pid=14356)[0m     @     0x7eeb6c58b5a4 at::native::copy_()
[2m[36m(pid=14356)[0m     @     0x7eeb6cc764f5 at::Tensor::copy_()
[2m[36m(pid=14356)[0m     @     0x7eeb6f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14396)[0m     @     0x7f8e9d1dca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14396)[0m     @     0x7f8e9d1da388 at::native::copy_impl()
[2m[36m(pid=14396)[0m     @     0x7f8e9d1dc5a4 at::native::copy_()
[2m[36m(pid=14407)[0m     @     0x7ef40ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=14407)[0m     @     0x7ef40c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14407)[0m     @     0x7ef40c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14407)[0m     @     0x7ef40b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14407)[0m     @     0x7ef40b807388 at::native::copy_impl()
[2m[36m(pid=14383)[0m     @     0x7f86145d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=14383)[0m     @     0x7f86145d2d91 at::TensorIterator::for_each()
[2m[36m(pid=14383)[0m     @     0x7f8614eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14383)[0m     @     0x7f8614ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14354)[0m     @     0x7f404a852d91 at::TensorIterator::for_each()
[2m[36m(pid=14354)[0m     @     0x7f404b135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14408)[0m     @     0x7f45fad4aad3 at::TensorIterator::for_each()
[2m[36m(pid=14437)[0m     @     0x7f1384f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=14437)[0m     @     0x7f1384f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=14434)[0m     @     0x7fa4819e54f5 at::Tensor::copy_()
[2m[36m(pid=14434)[0m     @     0x7fa483eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14434)[0m     @     0x7fa4819e54f5 at::Tensor::copy_()
[2m[36m(pid=14333)[0m     @     0x7f6703f0c5a4 at::native::copy_()
[2m[36m(pid=14333)[0m     @     0x7f67045f74f5 at::Tensor::copy_()
[2m[36m(pid=14333)[0m     @     0x7f6706aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14350)[0m     @     0x7f20520eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14350)[0m     @     0x7f20520e9388 at::native::copy_impl()
[2m[36m(pid=14350)[0m     @     0x7f20520eb5a4 at::native::copy_()
[2m[36m(pid=14350)[0m     @     0x7f20527d64f5 at::Tensor::copy_()
[2m[36m(pid=14452)[0m     @     0x7f29037665a4 at::native::copy_()
[2m[36m(pid=14452)[0m     @     0x7f2903e514f5 at::Tensor::copy_()
[2m[36m(pid=14452)[0m     @     0x7f29063248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14411)[0m     @     0x7f01705cf5a4 at::native::copy_()
[2m[36m(pid=14411)[0m     @     0x7f0170cba4f5 at::Tensor::copy_()
[2m[36m(pid=14411)[0m     @     0x7f017318d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14386)[0m     @     0x7f8ea0589388 at::native::copy_impl()
[2m[36m(pid=14386)[0m     @     0x7f8ea058b5a4 at::native::copy_()
[2m[36m(pid=14386)[0m     @     0x7f8ea0c764f5 at::Tensor::copy_()
[2m[36m(pid=14390)[0m     @     0x7ed4e735d388 at::native::copy_impl()
[2m[36m(pid=14390)[0m     @     0x7ed4e735f5a4 at::native::copy_()
[2m[36m(pid=14390)[0m     @     0x7ed4e7a4a4f5 at::Tensor::copy_()
[2m[36m(pid=14390)[0m     @     0x7ed4e9f1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14321)[0m     @     0x7f90055014f5 at::Tensor::copy_()
[2m[36m(pid=14321)[0m     @     0x7f90079d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14321)[0m     @     0x7f90055014f5 at::Tensor::copy_()
[2m[36m(pid=14321)[0m     @     0x7f90322ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14321)[0m     @     0x5593e7598fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14321)[0m     @     0x5593e74f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14321)[0m     @     0x5593e757ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14321)[0m     @     0x5593e757fa20 method_vectorcall
[2m[36m(pid=14321)[0m     @     0x5593e74f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14321)[0m     @     0x5593e757ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14321)[0m     @     0x5593e757f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14321)[0m     @     0x5593e74f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14321)[0m     @     0x5593e757ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14321)[0m     @     0x5593e757f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14321)[0m     @     0x5593e74f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14321)[0m     @     0x5593e757ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14321)[0m     @     0x5593e757f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14321)[0m     @     0x5593e74f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14321)[0m     @     0x5593e757ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14321)[0m     @     0x5593e757f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14321)[0m     @     0x5593e74f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x7f6c1b4855a4 at::native::copy_()
[2m[36m(pid=14342)[0m     @     0x7f6c1bb704f5 at::Tensor::copy_()
[2m[36m(pid=14342)[0m     @     0x7f6c1e0438de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14332)[0m     @     0x7f607e3e95a4 at::native::copy_()
[2m[36m(pid=14332)[0m     @     0x7f607ead44f5 at::Tensor::copy_()
[2m[36m(pid=14460)[0m     @     0x7f1529e355a4 at::native::copy_()
[2m[36m(pid=14401)[0m     @     0x7f22bba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14401)[0m     @     0x7f22bba37388 at::native::copy_impl()
[2m[36m(pid=14397)[0m     @     0x7f4863e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14397)[0m     @     0x7f48619a54f5 at::Tensor::copy_()
[2m[36m(pid=14400)[0m     @     0x7f625affb4f5 at::Tensor::copy_()
[2m[36m(pid=14400)[0m     @     0x7f625d4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14324)[0m     @     0x7f6d847924f5 at::Tensor::copy_()
[2m[36m(pid=14324)[0m     @     0x7f6d86c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14320)[0m     @     0x7f5d681244f5 at::Tensor::copy_()
[2m[36m(pid=14320)[0m     @     0x7f5d6e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14320)[0m     @     0x563ab3c49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14320)[0m     @     0x563ab3ba4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14320)[0m     @     0x563ab3c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14320)[0m     @     0x563ab3c30a20 method_vectorcall
[2m[36m(pid=14320)[0m     @     0x563ab3ba4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14320)[0m     @     0x563ab3c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14320)[0m     @     0x563ab3c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14320)[0m     @     0x563ab3ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14320)[0m     @     0x563ab3c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14320)[0m     @     0x563ab3c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14320)[0m     @     0x563ab3ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14320)[0m     @     0x563ab3c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14320)[0m     @     0x563ab3c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14320)[0m     @     0x563ab3ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14320)[0m     @     0x563ab3c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14320)[0m     @     0x563ab3c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14320)[0m     @     0x563ab3ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x7fa7522cb4f5 at::Tensor::copy_()
[2m[36m(pid=14336)[0m     @     0x7fa75479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14322)[0m     @     0x7f690a5d44f5 at::Tensor::copy_()
[2m[36m(pid=14322)[0m     @     0x7f690caa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14327)[0m     @     0x7ede76af55a4 at::native::copy_()
[2m[36m(pid=14327)[0m     @     0x7ede771e04f5 at::Tensor::copy_()
[2m[36m(pid=14422)[0m     @     0x7ee95f3bc4f5 at::Tensor::copy_()
[2m[36m(pid=14422)[0m     @     0x7ee96188f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14422)[0m     @     0x7ee95f3bc4f5 at::Tensor::copy_()
[2m[36m(pid=14340)[0m     @     0x7f0cd1e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14340)[0m     @     0x7f0ccf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=14340)[0m     @     0x7f0cd5a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14340)[0m     @     0x558bdff16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14340)[0m     @     0x558bdfe71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14340)[0m     @     0x558bdfefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14340)[0m     @     0x558bdfefda20 method_vectorcall
[2m[36m(pid=14340)[0m     @     0x558bdfe71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14340)[0m     @     0x558bdfefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14340)[0m     @     0x558bdfefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14340)[0m     @     0x558bdfe72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14340)[0m     @     0x558bdfefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14340)[0m     @     0x558bdfefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14340)[0m     @     0x558bdfe72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x7f41729b14f5 at::Tensor::copy_()
[2m[36m(pid=14357)[0m     @     0x7f4174e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14344)[0m     @     0x7ef542de4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14344)[0m     @     0x7ef542286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14344)[0m     @     0x7ef542284388 at::native::copy_impl()
[2m[36m(pid=14469)[0m     @     0x7f13b20b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14469)[0m     @     0x7f13afbdd4f5 at::Tensor::copy_()
[2m[36m(pid=14469)[0m     @     0x7f13b5c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14469)[0m     @     0x56334bccafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14469)[0m     @     0x56334bc25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x56334bcb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14469)[0m     @     0x56334bcb1a20 method_vectorcall
[2m[36m(pid=14469)[0m     @     0x56334bc25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x56334bcb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14469)[0m     @     0x56334bcb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14469)[0m     @     0x56334bc26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x56334bcb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14469)[0m     @     0x56334bcb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14469)[0m     @     0x56334bc26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x7f80cb8974f5 at::Tensor::copy_()
[2m[36m(pid=14466)[0m     @     0x7f80d194279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14466)[0m     @     0x560aa035afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14466)[0m     @     0x560aa02b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa0340baf _PyEval_EvalCodeWithName
[2m[36m(pid=14466)[0m     @     0x560aa0341a20 method_vectorcall
[2m[36m(pid=14466)[0m     @     0x560aa02b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa0340baf _PyEval_EvalCodeWithName
[2m[36m(pid=14466)[0m     @     0x560aa0341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14466)[0m     @     0x560aa02b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa0340baf _PyEval_EvalCodeWithName
[2m[36m(pid=14466)[0m     @     0x560aa0341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14466)[0m     @     0x560aa02b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa0340baf _PyEval_EvalCodeWithName
[2m[36m(pid=14466)[0m     @     0x560aa0341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14394)[0m     @     0x7f26abfa44f5 at::Tensor::copy_()
[2m[36m(pid=14394)[0m     @     0x7f26b204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14394)[0m     @     0x56066a4aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14394)[0m     @     0x56066a405b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x56066a490baf _PyEval_EvalCodeWithName
[2m[36m(pid=14394)[0m     @     0x56066a491a20 method_vectorcall
[2m[36m(pid=14394)[0m     @     0x56066a405bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x56066a490baf _PyEval_EvalCodeWithName
[2m[36m(pid=14394)[0m     @     0x56066a491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14394)[0m     @     0x56066a406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x56066a490baf _PyEval_EvalCodeWithName
[2m[36m(pid=14394)[0m     @     0x56066a491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14394)[0m     @     0x56066a406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x56066a490baf _PyEval_EvalCodeWithName
[2m[36m(pid=14394)[0m     @     0x56066a491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14394)[0m     @     0x56066a406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14394)[0m     @     0x56066a490baf _PyEval_EvalCodeWithName
[2m[36m(pid=14394)[0m     @     0x56066a491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14394)[0m     @     0x56066a406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x7f7e7a17379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14330)[0m     @     0x55d5a4920fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14330)[0m     @     0x55d5a487bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x55d5a4906baf _PyEval_EvalCodeWithName
[2m[36m(pid=14330)[0m     @     0x55d5a4907a20 method_vectorcall
[2m[36m(pid=14330)[0m     @     0x55d5a487bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x55d5a4906baf _PyEval_EvalCodeWithName
[2m[36m(pid=14330)[0m     @     0x55d5a4907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14330)[0m     @     0x55d5a487c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x55d5a4906baf _PyEval_EvalCodeWithName
[2m[36m(pid=14330)[0m     @     0x55d5a4907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14330)[0m     @     0x55d5a487c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x55d5a4906baf _PyEval_EvalCodeWithName
[2m[36m(pid=14330)[0m     @     0x55d5a4907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14330)[0m     @     0x55d5a487c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14330)[0m     @     0x55d5a4906baf _PyEval_EvalCodeWithName
[2m[36m(pid=14330)[0m     @     0x55d5a4907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14330)[0m     @     0x55d5a487c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x7ed927c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14425)[0m     @     0x7ed92573b4f5 at::Tensor::copy_()
[2m[36m(pid=14392)[0m     @     0x7fc0c7a774f5 at::Tensor::copy_()
[2m[36m(pid=14392)[0m     @     0x7fc0cdb2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14392)[0m     @     0x55f574bcefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14392)[0m     @     0x55f574b29b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14392)[0m     @     0x55f574bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14392)[0m     @     0x55f574bb5a20 method_vectorcall
[2m[36m(pid=14392)[0m     @     0x55f574b29bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14392)[0m     @     0x55f574bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14392)[0m     @     0x55f574bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14392)[0m     @     0x55f574b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14392)[0m     @     0x55f574bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14392)[0m     @     0x55f574bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14392)[0m     @     0x55f574b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14392)[0m     @     0x55f574bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14392)[0m     @     0x55f574bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14392)[0m     @     0x55f574b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14392)[0m     @     0x55f574bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14392)[0m     @     0x55f574bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14392)[0m     @     0x55f574b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x7f23a50e68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14345)[0m     @     0x7f23a2c134f5 at::Tensor::copy_()
[2m[36m(pid=14345)[0m     @     0x7f23a8cbe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14345)[0m     @     0x55d48cef7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14345)[0m     @     0x55d48ce52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x55d48ceddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14345)[0m     @     0x55d48cedea20 method_vectorcall
[2m[36m(pid=14345)[0m     @     0x55d48ce52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x55d48ceddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14345)[0m     @     0x55d48cede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14345)[0m     @     0x55d48ce53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x55d48ceddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14345)[0m     @     0x55d48cede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14345)[0m     @     0x55d48ce53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x55d48ceddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14345)[0m     @     0x55d48cede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14345)[0m     @     0x55d48ce53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14345)[0m     @     0x55d48ceddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14345)[0m     @     0x55d48cede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14345)[0m     @     0x55d48ce53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x7effc53ba4f5 at::Tensor::copy_()
[2m[36m(pid=14389)[0m     @     0x7effc788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14389)[0m     @     0x7effc53ba4f5 at::Tensor::copy_()
[2m[36m(pid=14389)[0m     @     0x7effcb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14389)[0m     @     0x55f7de356fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14389)[0m     @     0x55f7de2b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14389)[0m     @     0x55f7de33da20 method_vectorcall
[2m[36m(pid=14389)[0m     @     0x55f7de2b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14389)[0m     @     0x55f7de33d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14389)[0m     @     0x55f7de2b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14389)[0m     @     0x55f7de33d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14389)[0m     @     0x55f7de2b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14389)[0m     @     0x55f7de33d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14389)[0m     @     0x55f7de2b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x7f138484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14335)[0m     @     0x7f138237c4f5 at::Tensor::copy_()
[2m[36m(pid=14335)[0m     @     0x7f138842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14335)[0m     @     0x5646a656bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14335)[0m     @     0x5646a64c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14335)[0m     @     0x5646a6551baf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x5646a6552a20 method_vectorcall
[2m[36m(pid=14335)[0m     @     0x5646a64c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14335)[0m     @     0x5646a6551baf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x5646a6552643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14335)[0m     @     0x5646a64c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14335)[0m     @     0x5646a6551baf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x5646a6552643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14335)[0m     @     0x5646a64c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14335)[0m     @     0x5646a6551baf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x5646a6552643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14335)[0m     @     0x5646a64c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14335)[0m     @     0x5646a6551baf _PyEval_EvalCodeWithName
[2m[36m(pid=14335)[0m     @     0x5646a6552643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14335)[0m     @     0x5646a64c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x7f7b3cfed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14325)[0m     @     0x5639e41d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14325)[0m     @     0x5639e4133b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x5639e41bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14325)[0m     @     0x5639e41bfa20 method_vectorcall
[2m[36m(pid=14325)[0m     @     0x5639e4133bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x5639e41bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14325)[0m     @     0x5639e41bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14325)[0m     @     0x5639e4134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x5639e41bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14325)[0m     @     0x5639e41bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14325)[0m     @     0x5639e4134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x5639e41bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14325)[0m     @     0x5639e41bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14325)[0m     @     0x5639e4134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14325)[0m     @     0x5639e41bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14325)[0m     @     0x5639e41bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14325)[0m     @     0x5639e4134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x55dbe3825baf _PyEval_EvalCodeWithName
[2m[36m(pid=14328)[0m     @     0x55dbe3826a20 method_vectorcall
[2m[36m(pid=14328)[0m     @     0x55dbe379abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x55dbe3825baf _PyEval_EvalCodeWithName
[2m[36m(pid=14328)[0m     @     0x55dbe3826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14328)[0m     @     0x55dbe379b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x55dbe3825baf _PyEval_EvalCodeWithName
[2m[36m(pid=14328)[0m     @     0x55dbe3826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14328)[0m     @     0x55dbe379b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x55dbe3825baf _PyEval_EvalCodeWithName
[2m[36m(pid=14328)[0m     @     0x55dbe3826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14328)[0m     @     0x55dbe379b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14328)[0m     @     0x55dbe3825baf _PyEval_EvalCodeWithName
[2m[36m(pid=14328)[0m     @     0x55dbe3826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14328)[0m     @     0x55dbe379b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x7f033adea4f5 at::Tensor::copy_()
[2m[36m(pid=14426)[0m     @     0x7f0340e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14426)[0m     @     0x562c2bd3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14426)[0m     @     0x562c2bc9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x562c2bd25baf _PyEval_EvalCodeWithName
[2m[36m(pid=14426)[0m     @     0x562c2bd26a20 method_vectorcall
[2m[36m(pid=14426)[0m     @     0x562c2bc9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x562c2bd25baf _PyEval_EvalCodeWithName
[2m[36m(pid=14426)[0m     @     0x562c2bd26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14426)[0m     @     0x562c2bc9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x562c2bd25baf _PyEval_EvalCodeWithName
[2m[36m(pid=14426)[0m     @     0x562c2bd26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14426)[0m     @     0x562c2bc9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x562c2bd25baf _PyEval_EvalCodeWithName
[2m[36m(pid=14426)[0m     @     0x562c2bd26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14426)[0m     @     0x562c2bc9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14426)[0m     @     0x562c2bd25baf _PyEval_EvalCodeWithName
[2m[36m(pid=14426)[0m     @     0x562c2bd26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14426)[0m     @     0x562c2bc9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x7fbd7f6b64f5 at::Tensor::copy_()
[2m[36m(pid=14323)[0m     @     0x7fbd8576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14323)[0m     @     0x5648ca1e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14323)[0m     @     0x5648ca140b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x5648ca1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14323)[0m     @     0x5648ca1cca20 method_vectorcall
[2m[36m(pid=14323)[0m     @     0x5648ca140bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x5648ca1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14323)[0m     @     0x5648ca1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14323)[0m     @     0x5648ca141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x5648ca1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14323)[0m     @     0x5648ca1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14323)[0m     @     0x5648ca141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x5648ca1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14323)[0m     @     0x5648ca1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14323)[0m     @     0x5648ca141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14323)[0m     @     0x5648ca1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14323)[0m     @     0x5648ca1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14323)[0m     @     0x5648ca141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x7f2faf49f4f5 at::Tensor::copy_()
[2m[36m(pid=14465)[0m     @     0x7f2fb554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14465)[0m     @     0x560399ad5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14465)[0m     @     0x560399a30b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x560399abbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14465)[0m     @     0x560399abca20 method_vectorcall
[2m[36m(pid=14465)[0m     @     0x560399a30bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x560399abbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14465)[0m     @     0x560399abc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14465)[0m     @     0x560399a31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x560399abbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14465)[0m     @     0x560399abc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14465)[0m     @     0x560399a31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x560399abbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14465)[0m     @     0x560399abc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14465)[0m     @     0x560399a31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14465)[0m     @     0x560399abbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14465)[0m     @     0x560399abc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14465)[0m     @     0x560399a31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffede4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffee6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14439)[0m     @     0x560ffee6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14439)[0m     @     0x560ffede4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffee6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14439)[0m     @     0x560ffee6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14439)[0m     @     0x560ffede4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14439)[0m     @     0x560ffee6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14439)[0m     @     0x560ffee6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14439)[0m     @     0x560ffede4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x7f61de16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14343)[0m     @     0x557f4f344fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14343)[0m     @     0x557f4f29fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x557f4f32abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14343)[0m     @     0x557f4f32ba20 method_vectorcall
[2m[36m(pid=14343)[0m     @     0x557f4f29fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x557f4f32abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14343)[0m     @     0x557f4f32b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14343)[0m     @     0x557f4f2a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x557f4f32abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14343)[0m     @     0x557f4f32b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14343)[0m     @     0x557f4f2a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x557f4f32abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14343)[0m     @     0x557f4f32b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14343)[0m     @     0x557f4f2a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14343)[0m     @     0x557f4f32abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14343)[0m     @     0x557f4f32b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14343)[0m     @     0x557f4f2a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x7f1c6ccd24f5 at::Tensor::copy_()
[2m[36m(pid=14348)[0m     @     0x7f1c72d7d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14348)[0m     @     0x559ab2856fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14348)[0m     @     0x559ab27b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x559ab283cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14348)[0m     @     0x559ab283da20 method_vectorcall
[2m[36m(pid=14348)[0m     @     0x559ab27b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x559ab283cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14348)[0m     @     0x559ab283d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14348)[0m     @     0x559ab27b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x559ab283cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14348)[0m     @     0x559ab283d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14348)[0m     @     0x559ab27b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x559ab283cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14348)[0m     @     0x559ab283d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14348)[0m     @     0x559ab27b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14348)[0m     @     0x559ab283cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14348)[0m     @     0x559ab283d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14348)[0m     @     0x559ab27b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x7fa0399384f5 at::Tensor::copy_()
[2m[36m(pid=14326)[0m     @     0x7fa03f9e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14326)[0m     @     0x564327a15fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14326)[0m     @     0x564327970b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x5643279fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14326)[0m     @     0x5643279fca20 method_vectorcall
[2m[36m(pid=14326)[0m     @     0x564327970bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x5643279fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14326)[0m     @     0x5643279fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14326)[0m     @     0x564327971689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x5643279fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14326)[0m     @     0x5643279fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14326)[0m     @     0x564327971689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x5643279fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14326)[0m     @     0x5643279fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14326)[0m     @     0x564327971689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14326)[0m     @     0x5643279fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14326)[0m     @     0x5643279fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14326)[0m     @     0x564327971689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x7f24305f14f5 at::Tensor::copy_()
[2m[36m(pid=14334)[0m     @     0x7f2432ac48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14334)[0m     @     0x7f24305f14f5 at::Tensor::copy_()
[2m[36m(pid=14334)[0m     @     0x7f243669c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14334)[0m     @     0x55a1fca1cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14334)[0m     @     0x55a1fc977b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x55a1fca02baf _PyEval_EvalCodeWithName
[2m[36m(pid=14334)[0m     @     0x55a1fca03a20 method_vectorcall
[2m[36m(pid=14334)[0m     @     0x55a1fc977bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x55a1fca02baf _PyEval_EvalCodeWithName
[2m[36m(pid=14334)[0m     @     0x55a1fca03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14334)[0m     @     0x55a1fc978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x55a1fca02baf _PyEval_EvalCodeWithName
[2m[36m(pid=14334)[0m     @     0x55a1fca03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14334)[0m     @     0x55a1fc978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x55a1fca02baf _PyEval_EvalCodeWithName
[2m[36m(pid=14334)[0m     @     0x55a1fca03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14334)[0m     @     0x55a1fc978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14334)[0m     @     0x55a1fca02baf _PyEval_EvalCodeWithName
[2m[36m(pid=14334)[0m     @     0x55a1fca03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14334)[0m     @     0x55a1fc978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x7f2f844b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=14388)[0m     @     0x7f2f844b7d91 at::TensorIterator::for_each()
[2m[36m(pid=14406)[0m     @     0x7fb2110e75a4 at::native::copy_()
[2m[36m(pid=14406)[0m     @     0x7fb2117d24f5 at::Tensor::copy_()
[2m[36m(pid=14406)[0m     @     0x7fb213ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14353)[0m     @     0x7f0c360b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14353)[0m     @     0x7f0c33bdd4f5 at::Tensor::copy_()
[2m[36m(pid=14353)[0m     @     0x7f0c39c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14353)[0m     @     0x56036b80dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14353)[0m     @     0x56036b768b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14353)[0m     @     0x56036b7f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14353)[0m     @     0x56036b7f4a20 method_vectorcall
[2m[36m(pid=14353)[0m     @     0x56036b768bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14353)[0m     @     0x56036b7f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14353)[0m     @     0x56036b7f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14353)[0m     @     0x56036b769689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14353)[0m     @     0x56036b7f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14353)[0m     @     0x56036b7f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14353)[0m     @     0x56036b769689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14353)[0m     @     0x56036b7f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14353)[0m     @     0x56036b7f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14353)[0m     @     0x56036b769689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14353)[0m     @     0x56036b7f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14353)[0m     @     0x56036b7f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14353)[0m     @     0x56036b769689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x7ef94aaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14338)[0m     @     0x7ef9485f74f5 at::Tensor::copy_()
[2m[36m(pid=14338)[0m     @     0x7ef94e6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14338)[0m     @     0x55c0343eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14338)[0m     @     0x55c034349b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x55c0343d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14338)[0m     @     0x55c0343d5a20 method_vectorcall
[2m[36m(pid=14338)[0m     @     0x55c034349bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x55c0343d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14338)[0m     @     0x55c0343d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14338)[0m     @     0x55c03434a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x55c0343d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14338)[0m     @     0x55c0343d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14338)[0m     @     0x55c03434a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x55c0343d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14338)[0m     @     0x55c0343d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14338)[0m     @     0x55c03434a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14338)[0m     @     0x55c0343d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14338)[0m     @     0x55c0343d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14338)[0m     @     0x55c03434a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x7f3c0d0e75a4 at::native::copy_()
[2m[36m(pid=14405)[0m     @     0x7f3c0d7d24f5 at::Tensor::copy_()
[2m[36m(pid=14380)[0m     @     0x7f20410e35a4 at::native::copy_()
[2m[36m(pid=14380)[0m     @     0x7f20417ce4f5 at::Tensor::copy_()
[2m[36m(pid=14380)[0m     @     0x7f2043ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14413)[0m     @     0x7fc872fcb5a4 at::native::copy_()
[2m[36m(pid=14413)[0m     @     0x7fc8736b64f5 at::Tensor::copy_()
[2m[36m(pid=14339)[0m     @     0x7f12ea58d4f5 at::Tensor::copy_()
[2m[36m(pid=14339)[0m     @     0x7f12f063879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14339)[0m     @     0x564847a30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14339)[0m     @     0x56484798bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14339)[0m     @     0x564847a16baf _PyEval_EvalCodeWithName
[2m[36m(pid=14339)[0m     @     0x564847a17a20 method_vectorcall
[2m[36m(pid=14339)[0m     @     0x56484798bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14339)[0m     @     0x564847a16baf _PyEval_EvalCodeWithName
[2m[36m(pid=14339)[0m     @     0x564847a17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14339)[0m     @     0x56484798c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14339)[0m     @     0x564847a16baf _PyEval_EvalCodeWithName
[2m[36m(pid=14339)[0m     @     0x564847a17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14339)[0m     @     0x56484798c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14339)[0m     @     0x564847a16baf _PyEval_EvalCodeWithName
[2m[36m(pid=14339)[0m     @     0x564847a17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14339)[0m     @     0x56484798c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14339)[0m     @     0x564847a16baf _PyEval_EvalCodeWithName
[2m[36m(pid=14339)[0m     @     0x564847a17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14339)[0m     @     0x56484798c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x7fad7c10e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14398)[0m     @     0x7fad79c3b4f5 at::Tensor::copy_()
[2m[36m(pid=14398)[0m     @     0x7fad7fce679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14398)[0m     @     0x561a3db8dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14398)[0m     @     0x561a3dae8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x7f60dc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=14341)[0m     @     0x7f60de6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14356)[0m     @     0x7eeb6cc764f5 at::Tensor::copy_()
[2m[36m(pid=14356)[0m     @     0x7eeb72d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14356)[0m     @     0x55d43e625fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14356)[0m     @     0x55d43e580b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14356)[0m     @     0x55d43e60bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14356)[0m     @     0x55d43e60ca20 method_vectorcall
[2m[36m(pid=14356)[0m     @     0x55d43e580bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14356)[0m     @     0x55d43e60bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14356)[0m     @     0x55d43e60c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14356)[0m     @     0x55d43e581689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14356)[0m     @     0x55d43e60bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14356)[0m     @     0x55d43e60c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14356)[0m     @     0x55d43e581689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14356)[0m     @     0x55d43e60bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14356)[0m     @     0x55d43e60c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14356)[0m     @     0x55d43e581689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14356)[0m     @     0x55d43e60bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14356)[0m     @     0x55d43e60c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14356)[0m     @     0x55d43e581689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x7f8e9d8c74f5 at::Tensor::copy_()
[2m[36m(pid=14396)[0m     @     0x7f8e9fd9a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14407)[0m     @     0x7ef40b8095a4 at::native::copy_()
[2m[36m(pid=14407)[0m     @     0x7ef40bef44f5 at::Tensor::copy_()
[2m[36m(pid=14407)[0m     @     0x7ef40e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14383)[0m     @     0x7f861437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14383)[0m     @     0x7f8614378388 at::native::copy_impl()
[2m[36m(pid=14383)[0m     @     0x7f861437a5a4 at::native::copy_()
[2m[36m(pid=14354)[0m     @     0x7f404b158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14354)[0m     @     0x7f404a5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14354)[0m     @     0x7f404a5f8388 at::native::copy_impl()
[2m[36m(pid=14408)[0m     @     0x7f45fad4ad91 at::TensorIterator::for_each()
[2m[36m(pid=14408)[0m     @     0x7f45fb62db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14408)[0m     @     0x7f45fb650c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14434)[0m     @     0x7fa487a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14434)[0m     @     0x564a79361fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14434)[0m     @     0x564a792bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14434)[0m     @     0x564a79347baf _PyEval_EvalCodeWithName
[2m[36m(pid=14434)[0m     @     0x564a79348a20 method_vectorcall
[2m[36m(pid=14434)[0m     @     0x564a792bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14434)[0m     @     0x564a79347baf _PyEval_EvalCodeWithName
[2m[36m(pid=14434)[0m     @     0x564a79348643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14434)[0m     @     0x564a792bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14434)[0m     @     0x564a79347baf _PyEval_EvalCodeWithName
[2m[36m(pid=14434)[0m     @     0x564a79348643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14434)[0m     @     0x564a792bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14434)[0m     @     0x564a79347baf _PyEval_EvalCodeWithName
[2m[36m(pid=14434)[0m     @     0x564a79348643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14434)[0m     @     0x564a792bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14434)[0m     @     0x564a79347baf _PyEval_EvalCodeWithName
[2m[36m(pid=14434)[0m     @     0x564a79348643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14434)[0m     @     0x564a792bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x7f67045f74f5 at::Tensor::copy_()
[2m[36m(pid=14333)[0m     @     0x7f670a6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14333)[0m     @     0x55bb794fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14333)[0m     @     0x55bb79459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x55bb794e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14333)[0m     @     0x55bb794e5a20 method_vectorcall
[2m[36m(pid=14333)[0m     @     0x55bb79459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x55bb794e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14333)[0m     @     0x55bb794e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14333)[0m     @     0x55bb7945a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x55bb794e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14333)[0m     @     0x55bb794e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14333)[0m     @     0x55bb7945a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x55bb794e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14333)[0m     @     0x55bb794e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14333)[0m     @     0x55bb7945a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14333)[0m     @     0x55bb794e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14333)[0m     @     0x55bb794e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14333)[0m     @     0x55bb7945a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x7f2054ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14350)[0m     @     0x7f20527d64f5 at::Tensor::copy_()
[2m[36m(pid=14350)[0m     @     0x7f205847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14350)[0m     @     0x5580dfae0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14350)[0m     @     0x5580dfa3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x5580dfac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14350)[0m     @     0x5580dfac7a20 method_vectorcall
[2m[36m(pid=14350)[0m     @     0x5580dfa3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x5580dfac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14350)[0m     @     0x5580dfac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14350)[0m     @     0x5580dfa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x5580dfac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14350)[0m     @     0x5580dfac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14350)[0m     @     0x5580dfa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x5580dfac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14350)[0m     @     0x5580dfac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14452)[0m     @     0x7f2903e514f5 at::Tensor::copy_()
[2m[36m(pid=14452)[0m     @     0x7f2909efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14452)[0m     @     0x56081334ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14452)[0m     @     0x5608132aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14452)[0m     @     0x560813335baf _PyEval_EvalCodeWithName
[2m[36m(pid=14452)[0m     @     0x560813336a20 method_vectorcall
[2m[36m(pid=14452)[0m     @     0x5608132aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14452)[0m     @     0x560813335baf _PyEval_EvalCodeWithName
[2m[36m(pid=14452)[0m     @     0x560813336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14452)[0m     @     0x5608132ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14452)[0m     @     0x560813335baf _PyEval_EvalCodeWithName
[2m[36m(pid=14452)[0m     @     0x560813336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14452)[0m     @     0x5608132ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14452)[0m     @     0x560813335baf _PyEval_EvalCodeWithName
[2m[36m(pid=14452)[0m     @     0x560813336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14452)[0m     @     0x5608132ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14452)[0m     @     0x560813335baf _PyEval_EvalCodeWithName
[2m[36m(pid=14452)[0m     @     0x560813336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14452)[0m     @     0x5608132ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x7f0170cba4f5 at::Tensor::copy_()
[2m[36m(pid=14411)[0m     @     0x7f0176d6579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14411)[0m     @     0x556f87d49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14411)[0m     @     0x556f87ca4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x556f87d2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14411)[0m     @     0x556f87d30a20 method_vectorcall
[2m[36m(pid=14411)[0m     @     0x556f87ca4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x556f87d2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14411)[0m     @     0x556f87d30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14411)[0m     @     0x556f87ca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x556f87d2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14411)[0m     @     0x556f87d30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14411)[0m     @     0x556f87ca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x556f87d2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14411)[0m     @     0x556f87d30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14411)[0m     @     0x556f87ca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14411)[0m     @     0x556f87d2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14411)[0m     @     0x556f87d30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14411)[0m     @     0x556f87ca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x7f8ea31498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14386)[0m     @     0x7f8ea0c764f5 at::Tensor::copy_()
[2m[36m(pid=14386)[0m     @     0x7f8ea6d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14386)[0m     @     0x5557f4d45fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14386)[0m     @     0x5557f4ca0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x5557f4d2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14386)[0m     @     0x5557f4d2ca20 method_vectorcall
[2m[36m(pid=14386)[0m     @     0x5557f4ca0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x5557f4d2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14386)[0m     @     0x5557f4d2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14386)[0m     @     0x5557f4ca1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x5557f4d2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14386)[0m     @     0x5557f4d2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14386)[0m     @     0x5557f4ca1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x5557f4d2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14386)[0m     @     0x5557f4d2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14386)[0m     @     0x5557f4ca1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14386)[0m     @     0x5557f4d2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14386)[0m     @     0x5557f4d2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14386)[0m     @     0x5557f4ca1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x7ed4e7a4a4f5 at::Tensor::copy_()
[2m[36m(pid=14390)[0m     @     0x7ed4edaf579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14390)[0m     @     0x55b66eab8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14390)[0m     @     0x55b66ea13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x55b66ea9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14390)[0m     @     0x55b66ea9fa20 method_vectorcall
[2m[36m(pid=14390)[0m     @     0x55b66ea13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x55b66ea9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14390)[0m     @     0x55b66ea9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14390)[0m     @     0x55b66ea14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x55b66ea9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14390)[0m     @     0x55b66ea9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14390)[0m     @     0x55b66ea14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x55b66ea9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14390)[0m     @     0x55b66ea9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14390)[0m     @     0x55b66ea14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14390)[0m     @     0x55b66ea9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14390)[0m     @     0x55b66ea9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14390)[0m     @     0x55b66ea14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x7f6c1bb704f5 at::Tensor::copy_()
[2m[36m(pid=14342)[0m     @     0x7f6c21c1b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14342)[0m     @     0x55fec2621fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14342)[0m     @     0x55fec257cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x55fec2607baf _PyEval_EvalCodeWithName
[2m[36m(pid=14342)[0m     @     0x55fec2608a20 method_vectorcall
[2m[36m(pid=14342)[0m     @     0x55fec257cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x55fec2607baf _PyEval_EvalCodeWithName
[2m[36m(pid=14342)[0m     @     0x55fec2608643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14342)[0m     @     0x55fec257d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x55fec2607baf _PyEval_EvalCodeWithName
[2m[36m(pid=14342)[0m     @     0x55fec2608643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14342)[0m     @     0x55fec257d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x55fec2607baf _PyEval_EvalCodeWithName
[2m[36m(pid=14342)[0m     @     0x55fec2608643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14342)[0m     @     0x55fec257d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14342)[0m     @     0x55fec2607baf _PyEval_EvalCodeWithName
[2m[36m(pid=14342)[0m     @     0x55fec2608643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14342)[0m     @     0x55fec257d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x7f5477539ad3 at::TensorIterator::for_each()
[2m[36m(pid=14395)[0m     @     0x7f5477539d91 at::TensorIterator::for_each()
[2m[36m(pid=14395)[0m     @     0x7f5477e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14395)[0m     @     0x7f5477e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14395)[0m     @     0x7f54772e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14332)[0m     @     0x7f6080fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14332)[0m     @     0x7f607ead44f5 at::Tensor::copy_()
[2m[36m(pid=14332)[0m     @     0x7f6084b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14332)[0m     @     0x556253c4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14332)[0m     @     0x556253ba8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14332)[0m     @     0x556253c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=14332)[0m     @     0x556253c34a20 method_vectorcall
[2m[36m(pid=14332)[0m     @     0x556253ba8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14332)[0m     @     0x556253c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=14332)[0m     @     0x556253c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14332)[0m     @     0x556253ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x7f152a5204f5 at::Tensor::copy_()
[2m[36m(pid=14460)[0m     @     0x7f152c9f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14460)[0m     @     0x7f152a5204f5 at::Tensor::copy_()
[2m[36m(pid=14460)[0m     @     0x7f15305cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14460)[0m     @     0x55d118a3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14460)[0m     @     0x55d118997b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x55d118a22baf _PyEval_EvalCodeWithName
[2m[36m(pid=14460)[0m     @     0x55d118a23a20 method_vectorcall
[2m[36m(pid=14460)[0m     @     0x55d118997bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x55d118a22baf _PyEval_EvalCodeWithName
[2m[36m(pid=14460)[0m     @     0x55d118a23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14460)[0m     @     0x55d118998689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x55d118a22baf _PyEval_EvalCodeWithName
[2m[36m(pid=14460)[0m     @     0x55d118a23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14460)[0m     @     0x55d118998689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x55d118a22baf _PyEval_EvalCodeWithName
[2m[36m(pid=14460)[0m     @     0x55d118a23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14460)[0m     @     0x55d118998689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14460)[0m     @     0x55d118a22baf _PyEval_EvalCodeWithName
[2m[36m(pid=14460)[0m     @     0x55d118a23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14460)[0m     @     0x55d118998689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x7f22bba395a4 at::native::copy_()
[2m[36m(pid=14401)[0m     @     0x7f22bc1244f5 at::Tensor::copy_()
[2m[36m(pid=14401)[0m     @     0x7f22be5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14397)[0m     @     0x7f4867a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14397)[0m     @     0x55888c372fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14397)[0m     @     0x55888c2cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x55888c358baf _PyEval_EvalCodeWithName
[2m[36m(pid=14397)[0m     @     0x55888c359a20 method_vectorcall
[2m[36m(pid=14397)[0m     @     0x55888c2cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x55888c358baf _PyEval_EvalCodeWithName
[2m[36m(pid=14397)[0m     @     0x55888c359643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14397)[0m     @     0x55888c2ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x55888c358baf _PyEval_EvalCodeWithName
[2m[36m(pid=14397)[0m     @     0x55888c359643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14397)[0m     @     0x55888c2ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x55888c358baf _PyEval_EvalCodeWithName
[2m[36m(pid=14397)[0m     @     0x55888c359643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14397)[0m     @     0x55888c2ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14397)[0m     @     0x55888c358baf _PyEval_EvalCodeWithName
[2m[36m(pid=14397)[0m     @     0x55888c359643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14397)[0m     @     0x55888c2ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x7f625affb4f5 at::Tensor::copy_()
[2m[36m(pid=14400)[0m     @     0x7f62610a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14400)[0m     @     0x561938cb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14400)[0m     @     0x561938c14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x561938c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14400)[0m     @     0x561938ca0a20 method_vectorcall
[2m[36m(pid=14400)[0m     @     0x561938c14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x561938c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14400)[0m     @     0x561938ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14400)[0m     @     0x561938c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x561938c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14400)[0m     @     0x561938ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14400)[0m     @     0x561938c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x561938c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14400)[0m     @     0x561938ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14400)[0m     @     0x561938c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14400)[0m     @     0x561938c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14400)[0m     @     0x561938ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14400)[0m     @     0x561938c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x7f6d847924f5 at::Tensor::copy_()
[2m[36m(pid=14324)[0m     @     0x7f6d8a83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14324)[0m     @     0x55f34dfb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14324)[0m     @     0x55f34df0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x55f34df96baf _PyEval_EvalCodeWithName
[2m[36m(pid=14324)[0m     @     0x55f34df97a20 method_vectorcall
[2m[36m(pid=14324)[0m     @     0x55f34df0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x55f34df96baf _PyEval_EvalCodeWithName
[2m[36m(pid=14324)[0m     @     0x55f34df97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14324)[0m     @     0x55f34df0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x55f34df96baf _PyEval_EvalCodeWithName
[2m[36m(pid=14324)[0m     @     0x55f34df97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14324)[0m     @     0x55f34df0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x55f34df96baf _PyEval_EvalCodeWithName
[2m[36m(pid=14324)[0m     @     0x55f34df97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14324)[0m     @     0x55f34df0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14324)[0m     @     0x55f34df96baf _PyEval_EvalCodeWithName
[2m[36m(pid=14324)[0m     @     0x55f34df97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14324)[0m     @     0x55f34df0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x7fa7522cb4f5 at::Tensor::copy_()
[2m[36m(pid=14336)[0m     @     0x7fa75837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14336)[0m     @     0x55786817efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14336)[0m     @     0x5578680d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x557868164baf _PyEval_EvalCodeWithName
[2m[36m(pid=14336)[0m     @     0x557868165a20 method_vectorcall
[2m[36m(pid=14336)[0m     @     0x5578680d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x557868164baf _PyEval_EvalCodeWithName
[2m[36m(pid=14336)[0m     @     0x557868165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14336)[0m     @     0x5578680da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x557868164baf _PyEval_EvalCodeWithName
[2m[36m(pid=14336)[0m     @     0x557868165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14336)[0m     @     0x5578680da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x557868164baf _PyEval_EvalCodeWithName
[2m[36m(pid=14336)[0m     @     0x557868165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14336)[0m     @     0x5578680da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14336)[0m     @     0x557868164baf _PyEval_EvalCodeWithName
[2m[36m(pid=14336)[0m     @     0x557868165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14336)[0m     @     0x5578680da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x7f690a5d44f5 at::Tensor::copy_()
[2m[36m(pid=14322)[0m     @     0x7f691047779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14322)[0m     @     0x55e7567fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14322)[0m     @     0x55e756759b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x55e7567e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14322)[0m     @     0x55e7567e5a20 method_vectorcall
[2m[36m(pid=14322)[0m     @     0x55e756759bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x55e7567e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14322)[0m     @     0x55e7567e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14322)[0m     @     0x55e75675a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x55e7567e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14322)[0m     @     0x55e7567e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14322)[0m     @     0x55e75675a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x55e7567e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14322)[0m     @     0x55e7567e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14322)[0m     @     0x55e75675a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14322)[0m     @     0x55e7567e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14322)[0m     @     0x55e7567e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14322)[0m     @     0x55e75675a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x7ede796b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14327)[0m     @     0x7ede771e04f5 at::Tensor::copy_()
[2m[36m(pid=14327)[0m     @     0x7ede7d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14327)[0m     @     0x556e3914dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14327)[0m     @     0x556e390a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x556e39133baf _PyEval_EvalCodeWithName
[2m[36m(pid=14327)[0m     @     0x556e39134a20 method_vectorcall
[2m[36m(pid=14327)[0m     @     0x556e390a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x556e39133baf _PyEval_EvalCodeWithName
[2m[36m(pid=14327)[0m     @     0x556e39134643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14327)[0m     @     0x556e390a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x556e39133baf _PyEval_EvalCodeWithName
[2m[36m(pid=14327)[0m     @     0x556e39134643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14327)[0m     @     0x556e390a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x556e39133baf _PyEval_EvalCodeWithName
[2m[36m(pid=14327)[0m     @     0x556e39134643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14327)[0m     @     0x556e390a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14327)[0m     @     0x556e39133baf _PyEval_EvalCodeWithName
[2m[36m(pid=14327)[0m     @     0x556e39134643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14327)[0m     @     0x556e390a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x7ee96546779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14422)[0m     @     0x56254ff2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14422)[0m     @     0x56254fe86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x56254ff11baf _PyEval_EvalCodeWithName
[2m[36m(pid=14422)[0m     @     0x56254ff12a20 method_vectorcall
[2m[36m(pid=14422)[0m     @     0x56254fe86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x56254ff11baf _PyEval_EvalCodeWithName
[2m[36m(pid=14422)[0m     @     0x56254ff12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14422)[0m     @     0x56254fe87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x56254ff11baf _PyEval_EvalCodeWithName
[2m[36m(pid=14422)[0m     @     0x56254ff12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14422)[0m     @     0x56254fe87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x56254ff11baf _PyEval_EvalCodeWithName
[2m[36m(pid=14422)[0m     @     0x56254ff12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14422)[0m     @     0x56254fe87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14422)[0m     @     0x56254ff11baf _PyEval_EvalCodeWithName
[2m[36m(pid=14422)[0m     @     0x56254ff12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14422)[0m     @     0x56254fe87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14340)[0m     @     0x558bdfefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14340)[0m     @     0x558bdfefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14340)[0m     @     0x558bdfe72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14340)[0m     @     0x558bdfefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14340)[0m     @     0x558bdfefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14340)[0m     @     0x558bdfe72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x7f41729b14f5 at::Tensor::copy_()
[2m[36m(pid=14357)[0m     @     0x7f4178a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14357)[0m     @     0x55a20a4cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14357)[0m     @     0x55a20a429b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x55a20a4b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14357)[0m     @     0x55a20a4b5a20 method_vectorcall
[2m[36m(pid=14357)[0m     @     0x55a20a429bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x55a20a4b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14357)[0m     @     0x55a20a4b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14357)[0m     @     0x55a20a42a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x55a20a4b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14357)[0m     @     0x55a20a4b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14357)[0m     @     0x55a20a42a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x55a20a4b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14357)[0m     @     0x55a20a4b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14357)[0m     @     0x55a20a42a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14357)[0m     @     0x55a20a4b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14357)[0m     @     0x55a20a4b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14357)[0m     @     0x55a20a42a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x7ef5422865a4 at::native::copy_()
[2m[36m(pid=14469)[0m     @     0x56334bcb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14469)[0m     @     0x56334bcb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14469)[0m     @     0x56334bc26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14469)[0m     @     0x56334bcb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14469)[0m     @     0x56334bcb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14469)[0m     @     0x56334bc26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa02b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14466)[0m     @     0x560aa0340baf _PyEval_EvalCodeWithName
[2m[36m(pid=14466)[0m     @     0x560aa0341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14466)[0m     @     0x560aa02b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x7ed92b7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14425)[0m     @     0x55ec7aec5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14425)[0m     @     0x55ec7ae20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x55ec7aeabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14425)[0m     @     0x55ec7aeaca20 method_vectorcall
[2m[36m(pid=14425)[0m     @     0x55ec7ae20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x55ec7aeabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14425)[0m     @     0x55ec7aeac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14425)[0m     @     0x55ec7ae21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x55ec7aeabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14425)[0m     @     0x55ec7aeac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14425)[0m     @     0x55ec7ae21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x55ec7aeabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14425)[0m     @     0x55ec7aeac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14425)[0m     @     0x55ec7ae21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14425)[0m     @     0x55ec7aeabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14425)[0m     @     0x55ec7aeac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14425)[0m     @     0x55ec7ae21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14389)[0m     @     0x55f7de33d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14389)[0m     @     0x55f7de2b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x7f2f84d9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14388)[0m     @     0x7f2f84dbdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14406)[0m     @     0x7fb2117d24f5 at::Tensor::copy_()
[2m[36m(pid=14406)[0m     @     0x7fb21787d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14406)[0m     @     0x564853ee2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14406)[0m     @     0x564853e3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14406)[0m     @     0x564853ec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14406)[0m     @     0x564853ec9a20 method_vectorcall
[2m[36m(pid=14406)[0m     @     0x564853e3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14406)[0m     @     0x564853ec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14406)[0m     @     0x564853ec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14406)[0m     @     0x564853e3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14406)[0m     @     0x564853ec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14406)[0m     @     0x564853ec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14406)[0m     @     0x564853e3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14406)[0m     @     0x564853ec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14406)[0m     @     0x564853ec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14406)[0m     @     0x564853e3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14406)[0m     @     0x564853ec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=14406)[0m     @     0x564853ec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14406)[0m     @     0x564853e3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x7f3c0fca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14380)[0m     @     0x7f20417ce4f5 at::Tensor::copy_()
[2m[36m(pid=14380)[0m     @     0x7f204787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14380)[0m     @     0x55dec07b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14380)[0m     @     0x55dec0713b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14380)[0m     @     0x55dec079ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14380)[0m     @     0x55dec079fa20 method_vectorcall
[2m[36m(pid=14380)[0m     @     0x55dec0713bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14380)[0m     @     0x55dec079ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14380)[0m     @     0x55dec079f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14380)[0m     @     0x55dec0714689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14380)[0m     @     0x55dec079ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14380)[0m     @     0x55dec079f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14380)[0m     @     0x55dec0714689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14380)[0m     @     0x55dec079ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14380)[0m     @     0x55dec079f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14380)[0m     @     0x55dec0714689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14380)[0m     @     0x55dec079ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14380)[0m     @     0x55dec079f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14380)[0m     @     0x55dec0714689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x7fc875b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14413)[0m     @     0x7fc8736b64f5 at::Tensor::copy_()
[2m[36m(pid=14413)[0m     @     0x7fc87976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14413)[0m     @     0x55d1ac6ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14413)[0m     @     0x55d1ac646b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x55d1ac6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14413)[0m     @     0x55d1ac6d2a20 method_vectorcall
[2m[36m(pid=14413)[0m     @     0x55d1ac646bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x55d1ac6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14413)[0m     @     0x55d1ac6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14413)[0m     @     0x55d1ac647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x55d1ac6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14413)[0m     @     0x55d1ac6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14413)[0m     @     0x55d1ac647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x55d1ac6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14413)[0m     @     0x55d1ac6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14413)[0m     @     0x55d1ac647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14413)[0m     @     0x55d1ac6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14413)[0m     @     0x55d1ac6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14413)[0m     @     0x55d1ac647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x561a3db73baf _PyEval_EvalCodeWithName
[2m[36m(pid=14398)[0m     @     0x561a3db74a20 method_vectorcall
[2m[36m(pid=14398)[0m     @     0x561a3dae8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x561a3db73baf _PyEval_EvalCodeWithName
[2m[36m(pid=14398)[0m     @     0x561a3db74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14398)[0m     @     0x561a3dae9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x561a3db73baf _PyEval_EvalCodeWithName
[2m[36m(pid=14398)[0m     @     0x561a3db74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14398)[0m     @     0x561a3dae9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x561a3db73baf _PyEval_EvalCodeWithName
[2m[36m(pid=14398)[0m     @     0x561a3db74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14398)[0m     @     0x561a3dae9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14398)[0m     @     0x561a3db73baf _PyEval_EvalCodeWithName
[2m[36m(pid=14398)[0m     @     0x561a3db74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14398)[0m     @     0x561a3dae9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x7f60dc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=14341)[0m     @     0x7f60e227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14341)[0m     @     0x55dd09532fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14341)[0m     @     0x55dd0948db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x55dd09518baf _PyEval_EvalCodeWithName
[2m[36m(pid=14341)[0m     @     0x55dd09519a20 method_vectorcall
[2m[36m(pid=14341)[0m     @     0x55dd0948dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x55dd09518baf _PyEval_EvalCodeWithName
[2m[36m(pid=14341)[0m     @     0x55dd09519643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14341)[0m     @     0x55dd0948e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x55dd09518baf _PyEval_EvalCodeWithName
[2m[36m(pid=14341)[0m     @     0x55dd09519643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14341)[0m     @     0x55dd0948e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x55dd09518baf _PyEval_EvalCodeWithName
[2m[36m(pid=14341)[0m     @     0x55dd09519643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14341)[0m     @     0x55dd0948e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14341)[0m     @     0x55dd09518baf _PyEval_EvalCodeWithName
[2m[36m(pid=14341)[0m     @     0x55dd09519643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14341)[0m     @     0x55dd0948e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x7f8e9d8c74f5 at::Tensor::copy_()
[2m[36m(pid=14396)[0m     @     0x7f8ea397279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14396)[0m     @     0x558d78f8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14396)[0m     @     0x558d78ee5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x558d78f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14396)[0m     @     0x558d78f71a20 method_vectorcall
[2m[36m(pid=14396)[0m     @     0x558d78ee5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x558d78f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14396)[0m     @     0x558d78f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14396)[0m     @     0x558d78ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x558d78f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14396)[0m     @     0x558d78f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14396)[0m     @     0x558d78ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x558d78f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14396)[0m     @     0x558d78f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14396)[0m     @     0x558d78ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14396)[0m     @     0x558d78f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14396)[0m     @     0x558d78f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14396)[0m     @     0x558d78ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x7ef40bef44f5 at::Tensor::copy_()
[2m[36m(pid=14407)[0m     @     0x7ef411f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14407)[0m     @     0x55c2fddbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14407)[0m     @     0x55c2fdd16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x55c2fdda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14407)[0m     @     0x55c2fdda2a20 method_vectorcall
[2m[36m(pid=14407)[0m     @     0x55c2fdd16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x55c2fdda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14407)[0m     @     0x55c2fdda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14407)[0m     @     0x55c2fdd17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x55c2fdda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14407)[0m     @     0x55c2fdda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14407)[0m     @     0x55c2fdd17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x55c2fdda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14407)[0m     @     0x55c2fdda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14407)[0m     @     0x55c2fdd17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14407)[0m     @     0x55c2fdda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14407)[0m     @     0x55c2fdda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14407)[0m     @     0x55c2fdd17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x7f8614a654f5 at::Tensor::copy_()
[2m[36m(pid=14383)[0m     @     0x7f8616f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14383)[0m     @     0x7f8614a654f5 at::Tensor::copy_()
[2m[36m(pid=14383)[0m     @     0x7f861ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14383)[0m     @     0x563a356cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14383)[0m     @     0x563a35626b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x563a356b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14383)[0m     @     0x563a356b2a20 method_vectorcall
[2m[36m(pid=14383)[0m     @     0x563a35626bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x563a356b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14383)[0m     @     0x563a356b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14383)[0m     @     0x563a35627689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x563a356b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14383)[0m     @     0x563a356b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14383)[0m     @     0x563a35627689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x563a356b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14383)[0m     @     0x563a356b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14383)[0m     @     0x563a35627689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14383)[0m     @     0x563a356b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14383)[0m     @     0x563a356b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14383)[0m     @     0x563a35627689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x7f404a5fa5a4 at::native::copy_()
[2m[36m(pid=14354)[0m     @     0x7f404ace54f5 at::Tensor::copy_()
[2m[36m(pid=14354)[0m     @     0x7f404d1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14354)[0m     @     0x7f404ace54f5 at::Tensor::copy_()
[2m[36m(pid=14354)[0m     @     0x7f4050d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14354)[0m     @     0x55c356781fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14354)[0m     @     0x55c3566dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x7f45faaf2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14408)[0m     @     0x7f45faaf0388 at::native::copy_impl()
[2m[36m(pid=14408)[0m     @     0x7f45faaf25a4 at::native::copy_()
[2m[36m(pid=14408)[0m     @     0x7f45fb1dd4f5 at::Tensor::copy_()
[2m[36m(pid=14437)[0m     @     0x7f1384f27d91 at::TensorIterator::for_each()
[2m[36m(pid=14437)[0m     @     0x7f138580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14350)[0m     @     0x5580dfa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14350)[0m     @     0x5580dfac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14350)[0m     @     0x5580dfac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14350)[0m     @     0x5580dfa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x7f54772df388 at::native::copy_impl()
[2m[36m(pid=14395)[0m     @     0x7f54772e15a4 at::native::copy_()
[2m[36m(pid=14332)[0m     @     0x556253c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=14332)[0m     @     0x556253c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14332)[0m     @     0x556253ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14332)[0m     @     0x556253c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=14332)[0m     @     0x556253c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14332)[0m     @     0x556253ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14332)[0m     @     0x556253c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=14332)[0m     @     0x556253c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14332)[0m     @     0x556253ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x7f22bc1244f5 at::Tensor::copy_()
[2m[36m(pid=14401)[0m     @     0x7f22c21cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14401)[0m     @     0x558db30f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14401)[0m     @     0x558db304eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x558db30d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=14401)[0m     @     0x558db30daa20 method_vectorcall
[2m[36m(pid=14401)[0m     @     0x558db304ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x558db30d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=14401)[0m     @     0x558db30da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14401)[0m     @     0x558db304f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x558db30d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=14401)[0m     @     0x558db30da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14401)[0m     @     0x558db304f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x558db30d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=14401)[0m     @     0x558db30da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14401)[0m     @     0x558db304f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14401)[0m     @     0x558db30d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=14401)[0m     @     0x558db30da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14401)[0m     @     0x558db304f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x7ef5429714f5 at::Tensor::copy_()
[2m[36m(pid=14344)[0m     @     0x7ef544e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14344)[0m     @     0x7ef5429714f5 at::Tensor::copy_()
[2m[36m(pid=14388)[0m     @     0x7f2f8425fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14388)[0m     @     0x7f2f8425d388 at::native::copy_impl()
[2m[36m(pid=14388)[0m     @     0x7f2f8425f5a4 at::native::copy_()
[2m[36m(pid=14405)[0m     @     0x7f3c0d7d24f5 at::Tensor::copy_()
[2m[36m(pid=14405)[0m     @     0x7f3c1387d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14405)[0m     @     0x557a19bcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14405)[0m     @     0x557a19b25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x557a19bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14405)[0m     @     0x557a19bb1a20 method_vectorcall
[2m[36m(pid=14405)[0m     @     0x557a19b25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x557a19bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14405)[0m     @     0x557a19bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14405)[0m     @     0x557a19b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x557a19bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14405)[0m     @     0x557a19bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14405)[0m     @     0x557a19b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x557a19bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14405)[0m     @     0x557a19bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14405)[0m     @     0x557a19b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14405)[0m     @     0x557a19bb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14405)[0m     @     0x557a19bb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14405)[0m     @     0x557a19b26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x55c356767baf _PyEval_EvalCodeWithName
[2m[36m(pid=14354)[0m     @     0x55c356768a20 method_vectorcall
[2m[36m(pid=14354)[0m     @     0x55c3566dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x55c356767baf _PyEval_EvalCodeWithName
[2m[36m(pid=14354)[0m     @     0x55c356768643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14354)[0m     @     0x55c3566dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x55c356767baf _PyEval_EvalCodeWithName
[2m[36m(pid=14354)[0m     @     0x55c356768643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14354)[0m     @     0x55c3566dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x55c356767baf _PyEval_EvalCodeWithName
[2m[36m(pid=14354)[0m     @     0x55c356768643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14354)[0m     @     0x55c3566dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14354)[0m     @     0x55c356767baf _PyEval_EvalCodeWithName
[2m[36m(pid=14354)[0m     @     0x55c356768643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14354)[0m     @     0x55c3566dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x7f45fd6b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14408)[0m     @     0x7f45fb1dd4f5 at::Tensor::copy_()
[2m[36m(pid=14437)[0m     @     0x7f138582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14395)[0m     @     0x7f54779cc4f5 at::Tensor::copy_()
[2m[36m(pid=14395)[0m     @     0x7f5479e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14395)[0m     @     0x7f54779cc4f5 at::Tensor::copy_()
[2m[36m(pid=14395)[0m     @     0x7f547da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14395)[0m     @     0x557448720fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14395)[0m     @     0x55744867bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x557448706baf _PyEval_EvalCodeWithName
[2m[36m(pid=14395)[0m     @     0x557448707a20 method_vectorcall
[2m[36m(pid=14395)[0m     @     0x55744867bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x7ef548a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14344)[0m     @     0x5587176befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14344)[0m     @     0x558717619b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x5587176a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14344)[0m     @     0x5587176a5a20 method_vectorcall
[2m[36m(pid=14344)[0m     @     0x558717619bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x5587176a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14344)[0m     @     0x5587176a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14344)[0m     @     0x55871761a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x5587176a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14344)[0m     @     0x5587176a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14344)[0m     @     0x55871761a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x5587176a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14344)[0m     @     0x5587176a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14344)[0m     @     0x55871761a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14344)[0m     @     0x5587176a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14344)[0m     @     0x5587176a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14344)[0m     @     0x55871761a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x7f2f8494a4f5 at::Tensor::copy_()
[2m[36m(pid=14388)[0m     @     0x7f2f86e1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14408)[0m     @     0x7f460128879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14408)[0m     @     0x55a86b729fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14408)[0m     @     0x55a86b684b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x55a86b70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14408)[0m     @     0x55a86b710a20 method_vectorcall
[2m[36m(pid=14408)[0m     @     0x55a86b684bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x55a86b70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14408)[0m     @     0x55a86b710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14408)[0m     @     0x55a86b685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x55a86b70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14408)[0m     @     0x55a86b710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14408)[0m     @     0x55a86b685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x55a86b70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14408)[0m     @     0x55a86b710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14408)[0m     @     0x55a86b685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14408)[0m     @     0x55a86b70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14408)[0m     @     0x55a86b710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14408)[0m     @     0x55a86b685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x7f1384ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14437)[0m     @     0x7f1384ccd388 at::native::copy_impl()
[2m[36m(pid=14437)[0m     @     0x7f1384ccf5a4 at::native::copy_()
[2m[36m(pid=14395)[0m     @     0x557448706baf _PyEval_EvalCodeWithName
[2m[36m(pid=14395)[0m     @     0x557448707643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14395)[0m     @     0x55744867c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x557448706baf _PyEval_EvalCodeWithName
[2m[36m(pid=14395)[0m     @     0x557448707643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14395)[0m     @     0x55744867c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x557448706baf _PyEval_EvalCodeWithName
[2m[36m(pid=14395)[0m     @     0x557448707643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14395)[0m     @     0x55744867c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14395)[0m     @     0x557448706baf _PyEval_EvalCodeWithName
[2m[36m(pid=14395)[0m     @     0x557448707643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14395)[0m     @     0x55744867c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x7f13853ba4f5 at::Tensor::copy_()
[2m[36m(pid=14437)[0m     @     0x7f138788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14437)[0m     @     0x7f13853ba4f5 at::Tensor::copy_()
[2m[36m(pid=14437)[0m     @     0x7f138b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14437)[0m     @     0x55d4ffd7cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14437)[0m     @     0x55d4ffcd7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x55d4ffd62baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffd63a20 method_vectorcall
[2m[36m(pid=14388)[0m     @     0x7f2f8494a4f5 at::Tensor::copy_()
[2m[36m(pid=14388)[0m     @     0x7f2f8a9f579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=14388)[0m     @     0x56157e84dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14388)[0m     @     0x56157e7a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x56157e833baf _PyEval_EvalCodeWithName
[2m[36m(pid=14388)[0m     @     0x56157e834a20 method_vectorcall
[2m[36m(pid=14388)[0m     @     0x56157e7a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x56157e833baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffcd7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x55d4ffd62baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffd63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14437)[0m     @     0x55d4ffcd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x55d4ffd62baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffd63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14437)[0m     @     0x55d4ffcd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x55d4ffd62baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffd63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14437)[0m     @     0x55d4ffcd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14437)[0m     @     0x55d4ffd62baf _PyEval_EvalCodeWithName
[2m[36m(pid=14437)[0m     @     0x55d4ffd63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14437)[0m     @     0x55d4ffcd8689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:19:27,032	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:19:27,041	ERROR trial_runner.py:567 -- Trial PPO_jss_env_5dddf_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=14443, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=14443)[0m E1105 10:19:27.030781 14443 15597 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4db1cba171d56c3356c9ec1501000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=14443)[0m E1105 10:19:27.030972 14443 15597 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=5cf29c5b7b7ed08d56c9ec1501000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:19:27.029744 14279 14279 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=14388)[0m     @     0x56157e834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14388)[0m     @     0x56157e7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x56157e833baf _PyEval_EvalCodeWithName
[2m[36m(pid=14388)[0m     @     0x56157e834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14388)[0m     @     0x56157e7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x56157e833baf _PyEval_EvalCodeWithName
[2m[36m(pid=14388)[0m     @     0x56157e834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14388)[0m     @     0x56157e7a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14388)[0m     @     0x56157e833baf _PyEval_EvalCodeWithName
[2m[36m(pid=14388)[0m     @     0x56157e834643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14388)[0m     @     0x56157e7a9689 _PyEval_EvalFrameDefault.cold.2792
== Status ==
Memory usage on this node: 26.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_5dddf_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_5dddf_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_5dddf_00000_0_2020-11-05_10-19-19/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:19:27,074	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
== Status ==
Memory usage on this node: 26.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_5dddf_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_5dddf_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_5dddf_00000_0_2020-11-05_10-19-19/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_5dddf_00000])
2020-11-05 10:19:27,085	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:19:27,085	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:19:27,085	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:19:27,086	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:19:27,086	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:19:27,086	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:19:27,086	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
