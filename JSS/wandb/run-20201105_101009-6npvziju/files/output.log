2020-11-05 10:10:13,344	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.1 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_18fcd_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=48503)[0m 2020-11-05 10:10:16,209	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=48491)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48491)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48491)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48483)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48483)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48483)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48483)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48483)[0m *** SIGSEGV (@0x0) received by PID 48483 (TID 0x7fb2c2f60700) from PID 0; stack trace: ***
[2m[36m(pid=48483)[0m     @     0x7fb2c2b39390 (unknown)
[2m[36m(pid=48483)[0m     @     0x7f83c2ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48483)[0m     @     0x7f83c21fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48483)[0m     @     0x7f83c21ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48483)[0m     @     0x7f83c21ffad3 at::TensorIterator::for_each()
[2m[36m(pid=48483)[0m     @     0x7f83c21ffd91 at::TensorIterator::for_each()
[2m[36m(pid=48483)[0m     @     0x7f83c2ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48483)[0m     @     0x7f83c2b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48483)[0m     @     0x7f83c1fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48483)[0m     @     0x7f83c1fa5388 at::native::copy_impl()
[2m[36m(pid=48523)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48523)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48523)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48523)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48523)[0m *** SIGSEGV (@0x0) received by PID 48523 (TID 0x7f1c559cb700) from PID 0; stack trace: ***
[2m[36m(pid=48523)[0m     @     0x7f1c555a4390 (unknown)
[2m[36m(pid=48523)[0m     @     0x7eed554e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48523)[0m     @     0x7eed54c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48523)[0m     @     0x7eed54c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48523)[0m     @     0x7eed54c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=48523)[0m     @     0x7eed54c11d91 at::TensorIterator::for_each()
[2m[36m(pid=48523)[0m     @     0x7eed554f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48523)[0m     @     0x7eed55517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48523)[0m     @     0x7eed549b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48523)[0m     @     0x7eed549b7388 at::native::copy_impl()
[2m[36m(pid=48523)[0m     @     0x7eed549b95a4 at::native::copy_()
[2m[36m(pid=48515)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48515)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48515)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48515)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48515)[0m *** SIGSEGV (@0x0) received by PID 48515 (TID 0x7f3bfd173700) from PID 0; stack trace: ***
[2m[36m(pid=48515)[0m     @     0x7f3bfcd4c390 (unknown)
[2m[36m(pid=48515)[0m     @     0x7f0cfcc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48515)[0m     @     0x7f0cfc39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48515)[0m     @     0x7f0cfc3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48515)[0m     @     0x7f0cfc3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=48515)[0m     @     0x7f0cfc3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=48515)[0m     @     0x7f0cfcc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48515)[0m     @     0x7f0cfcca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48515)[0m     @     0x7f0cfc14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48515)[0m     @     0x7f0cfc148388 at::native::copy_impl()
[2m[36m(pid=48515)[0m     @     0x7f0cfc14a5a4 at::native::copy_()
[2m[36m(pid=48515)[0m     @     0x7f0cfc8354f5 at::Tensor::copy_()
[2m[36m(pid=48446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48446)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48446)[0m *** SIGSEGV (@0x0) received by PID 48446 (TID 0x7fef81c40700) from PID 0; stack trace: ***
[2m[36m(pid=48446)[0m     @     0x7fef81819390 (unknown)
[2m[36m(pid=48446)[0m     @     0x7fc0816f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48446)[0m     @     0x7fc080e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48446)[0m     @     0x7fc080e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48446)[0m     @     0x7fc080e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=48446)[0m     @     0x7fc080e22d91 at::TensorIterator::for_each()
[2m[36m(pid=48446)[0m     @     0x7fc081705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48446)[0m     @     0x7fc081728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48383)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48383)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48383)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48383)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48400)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48400)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48400)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48450)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48450)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48450)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48450)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48450)[0m *** SIGSEGV (@0x0) received by PID 48450 (TID 0x7f231d08c700) from PID 0; stack trace: ***
[2m[36m(pid=48388)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48388)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48388)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48388)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48388)[0m *** SIGSEGV (@0x0) received by PID 48388 (TID 0x7f2ca6c1b700) from PID 0; stack trace: ***
[2m[36m(pid=48391)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48391)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48391)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48391)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48391)[0m *** SIGSEGV (@0x0) received by PID 48391 (TID 0x7f2c89974700) from PID 0; stack trace: ***
[2m[36m(pid=48437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48437)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48402)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48402)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48402)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48402)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48402)[0m *** SIGSEGV (@0x0) received by PID 48402 (TID 0x7f572fc55700) from PID 0; stack trace: ***
[2m[36m(pid=48444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48444)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48444)[0m *** SIGSEGV (@0x0) received by PID 48444 (TID 0x7f91dad57700) from PID 0; stack trace: ***
[2m[36m(pid=48444)[0m     @     0x7f91da930390 (unknown)
[2m[36m(pid=48444)[0m     @     0x7f62da70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48444)[0m     @     0x7f62d9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48444)[0m     @     0x7f62d9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48444)[0m     @     0x7f62d9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=48444)[0m     @     0x7f62d9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=48444)[0m     @     0x7f62da71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48444)[0m     @     0x7f62da73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48444)[0m     @     0x7f62d9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48444)[0m     @     0x7f62d9bde388 at::native::copy_impl()
[2m[36m(pid=48510)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48510)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48510)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48510)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48510)[0m *** SIGSEGV (@0x0) received by PID 48510 (TID 0x7fe0ce860700) from PID 0; stack trace: ***
[2m[36m(pid=48510)[0m     @     0x7fe0ce439390 (unknown)
[2m[36m(pid=48510)[0m     @     0x7fb1ce34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48510)[0m     @     0x7fb1cda767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48510)[0m     @     0x7fb1cda798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48510)[0m     @     0x7fb1cda79ad3 at::TensorIterator::for_each()
[2m[36m(pid=48510)[0m     @     0x7fb1cda79d91 at::TensorIterator::for_each()
[2m[36m(pid=48486)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48486)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48486)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48486)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48486)[0m *** SIGSEGV (@0x0) received by PID 48486 (TID 0x7f88fa1d3700) from PID 0; stack trace: ***
[2m[36m(pid=48486)[0m     @     0x7f88f9dac390 (unknown)
[2m[36m(pid=48486)[0m     @     0x7f59f9c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48486)[0m     @     0x7f59f93387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48486)[0m     @     0x7f59f933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48486)[0m     @     0x7f59f933bad3 at::TensorIterator::for_each()
[2m[36m(pid=48486)[0m     @     0x7f59f933bd91 at::TensorIterator::for_each()
[2m[36m(pid=48486)[0m     @     0x7f59f9c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48486)[0m     @     0x7f59f9c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48486)[0m     @     0x7f59f90e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48486)[0m     @     0x7f59f90e1388 at::native::copy_impl()
[2m[36m(pid=48385)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48385)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48385)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48490)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48490)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48490)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48418)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48418)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48418)[0m *** SIGSEGV (@0x0) received by PID 48418 (TID 0x7fb35340b700) from PID 0; stack trace: ***
[2m[36m(pid=48418)[0m     @     0x7fb352fe4390 (unknown)
[2m[36m(pid=48418)[0m     @     0x7f8452f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48418)[0m     @     0x7f845263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48418)[0m     @     0x7f84526418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48418)[0m     @     0x7f8452641ad3 at::TensorIterator::for_each()
[2m[36m(pid=48418)[0m     @     0x7f8452641d91 at::TensorIterator::for_each()
[2m[36m(pid=48418)[0m     @     0x7f8452f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48418)[0m     @     0x7f8452f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48418)[0m     @     0x7f84523e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48418)[0m     @     0x7f84523e7388 at::native::copy_impl()
[2m[36m(pid=48489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48489)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48489)[0m *** SIGSEGV (@0x0) received by PID 48489 (TID 0x7f6a0027e700) from PID 0; stack trace: ***
[2m[36m(pid=48489)[0m     @     0x7f69ffe57390 (unknown)
[2m[36m(pid=48489)[0m     @     0x7f3affddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48489)[0m     @     0x7f3aff5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48489)[0m     @     0x7f3aff50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48489)[0m     @     0x7f3aff50cad3 at::TensorIterator::for_each()
[2m[36m(pid=48489)[0m     @     0x7f3aff50cd91 at::TensorIterator::for_each()
[2m[36m(pid=48489)[0m     @     0x7f3affdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48489)[0m     @     0x7f3affe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48489)[0m     @     0x7f3aff2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48489)[0m     @     0x7f3aff2b2388 at::native::copy_impl()
[2m[36m(pid=48504)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48504)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48504)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48504)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48504)[0m *** SIGSEGV (@0x0) received by PID 48504 (TID 0x7faa334a3700) from PID 0; stack trace: ***
[2m[36m(pid=48504)[0m     @     0x7faa3307c390 (unknown)
[2m[36m(pid=48504)[0m     @     0x7f7b33041f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48504)[0m     @     0x7f7b3276c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48504)[0m     @     0x7f7b3276f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48504)[0m     @     0x7f7b3276fad3 at::TensorIterator::for_each()
[2m[36m(pid=48504)[0m     @     0x7f7b3276fd91 at::TensorIterator::for_each()
[2m[36m(pid=48459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48459)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48459)[0m *** SIGSEGV (@0x0) received by PID 48459 (TID 0x7f9fd4f32700) from PID 0; stack trace: ***
[2m[36m(pid=48459)[0m     @     0x7f9fd4b0b390 (unknown)
[2m[36m(pid=48459)[0m     @     0x7f70d49e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48459)[0m     @     0x7f70d41137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48459)[0m     @     0x7f70d41168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48459)[0m     @     0x7f70d4116ad3 at::TensorIterator::for_each()
[2m[36m(pid=48459)[0m     @     0x7f70d4116d91 at::TensorIterator::for_each()
[2m[36m(pid=48459)[0m     @     0x7f70d49f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48459)[0m     @     0x7f70d4a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48459)[0m     @     0x7f70d3ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48459)[0m     @     0x7f70d3ebc388 at::native::copy_impl()
[2m[36m(pid=48475)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48475)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48475)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48475)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48475)[0m *** SIGSEGV (@0x0) received by PID 48475 (TID 0x7f9029f9f700) from PID 0; stack trace: ***
[2m[36m(pid=48475)[0m     @     0x7f9029b78390 (unknown)
[2m[36m(pid=48475)[0m     @     0x7f6129a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48475)[0m     @     0x7f61291357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48475)[0m     @     0x7f61291388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48475)[0m     @     0x7f6129138ad3 at::TensorIterator::for_each()
[2m[36m(pid=48475)[0m     @     0x7f6129138d91 at::TensorIterator::for_each()
[2m[36m(pid=48475)[0m     @     0x7f6129a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48475)[0m     @     0x7f6129a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48475)[0m     @     0x7f6128ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48475)[0m     @     0x7f6128ede388 at::native::copy_impl()
[2m[36m(pid=48513)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48513)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48513)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48513)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48513)[0m *** SIGSEGV (@0x0) received by PID 48513 (TID 0x7f3cbe56f700) from PID 0; stack trace: ***
[2m[36m(pid=48513)[0m     @     0x7f3cbe148390 (unknown)
[2m[36m(pid=48513)[0m     @     0x7f0dbe0faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48513)[0m     @     0x7f0dbd8257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48513)[0m     @     0x7f0dbd8288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48513)[0m     @     0x7f0dbd828ad3 at::TensorIterator::for_each()
[2m[36m(pid=48513)[0m     @     0x7f0dbd828d91 at::TensorIterator::for_each()
[2m[36m(pid=48513)[0m     @     0x7f0dbe10bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48513)[0m     @     0x7f0dbe12ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48513)[0m     @     0x7f0dbd5d0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48513)[0m     @     0x7f0dbd5ce388 at::native::copy_impl()
[2m[36m(pid=48399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48399)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48399)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48399)[0m *** SIGSEGV (@0x0) received by PID 48399 (TID 0x7f168014e700) from PID 0; stack trace: ***
[2m[36m(pid=48399)[0m     @     0x7f167fd27390 (unknown)
[2m[36m(pid=48399)[0m     @     0x7ee77faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48399)[0m     @     0x7ee77f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48399)[0m     @     0x7ee77f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48399)[0m     @     0x7ee77f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=48399)[0m     @     0x7ee77f223d91 at::TensorIterator::for_each()
[2m[36m(pid=48399)[0m     @     0x7ee77fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48399)[0m     @     0x7ee77fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48399)[0m     @     0x7ee77efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48395)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48395)[0m *** SIGSEGV (@0x0) received by PID 48395 (TID 0x7fd155f75700) from PID 0; stack trace: ***
[2m[36m(pid=48395)[0m     @     0x7fd155b4e390 (unknown)
[2m[36m(pid=48398)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48398)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48398)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48398)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48398)[0m *** SIGSEGV (@0x0) received by PID 48398 (TID 0x7f5bdc452700) from PID 0; stack trace: ***
[2m[36m(pid=48398)[0m     @     0x7f5bdc02b390 (unknown)
[2m[36m(pid=48460)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48460)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48460)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48460)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48460)[0m *** SIGSEGV (@0x0) received by PID 48460 (TID 0x7fe865a8b700) from PID 0; stack trace: ***
[2m[36m(pid=48460)[0m     @     0x7fe865664390 (unknown)
[2m[36m(pid=48460)[0m     @     0x7fb9654e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48460)[0m     @     0x7fb964c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48460)[0m     @     0x7fb964c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48460)[0m     @     0x7fb964c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=48460)[0m     @     0x7fb964c11d91 at::TensorIterator::for_each()
[2m[36m(pid=48460)[0m     @     0x7fb9654f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48460)[0m     @     0x7fb965517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48461)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48461)[0m *** SIGSEGV (@0x0) received by PID 48461 (TID 0x7f471f14e700) from PID 0; stack trace: ***
[2m[36m(pid=48461)[0m     @     0x7f471ed27390 (unknown)
[2m[36m(pid=48461)[0m     @     0x7f181eccff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48461)[0m     @     0x7f181e3fa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48461)[0m     @     0x7f181e3fd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48461)[0m     @     0x7f181e3fdad3 at::TensorIterator::for_each()
[2m[36m(pid=48461)[0m     @     0x7f181e3fdd91 at::TensorIterator::for_each()
[2m[36m(pid=48461)[0m     @     0x7f181ece0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48461)[0m     @     0x7f181ed03c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48461)[0m     @     0x7f181e1a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48461)[0m     @     0x7f181e1a3388 at::native::copy_impl()
[2m[36m(pid=48501)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48501)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48501)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48501)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48501)[0m *** SIGSEGV (@0x0) received by PID 48501 (TID 0x7fc6f7ed2700) from PID 0; stack trace: ***
[2m[36m(pid=48501)[0m     @     0x7fc6f7aab390 (unknown)
[2m[36m(pid=48501)[0m     @     0x7f97f7a23f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48501)[0m     @     0x7f97f714e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48518)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48518)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48518)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48518)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48518)[0m *** SIGSEGV (@0x0) received by PID 48518 (TID 0x7f35f331b700) from PID 0; stack trace: ***
[2m[36m(pid=48518)[0m     @     0x7f35f2ef4390 (unknown)
[2m[36m(pid=48518)[0m     @     0x7f06f2c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48518)[0m     @     0x7f06f23407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48518)[0m     @     0x7f06f23438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48518)[0m     @     0x7f06f2343ad3 at::TensorIterator::for_each()
[2m[36m(pid=48518)[0m     @     0x7f06f2343d91 at::TensorIterator::for_each()
[2m[36m(pid=48518)[0m     @     0x7f06f2c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48518)[0m     @     0x7f06f2c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48408)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48408)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48408)[0m *** SIGSEGV (@0x0) received by PID 48408 (TID 0x7f68b7d8e700) from PID 0; stack trace: ***
[2m[36m(pid=48466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48466)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48466)[0m *** SIGSEGV (@0x0) received by PID 48466 (TID 0x7fbd7e141700) from PID 0; stack trace: ***
[2m[36m(pid=48466)[0m     @     0x7fbd7dd1a390 (unknown)
[2m[36m(pid=48466)[0m     @     0x7f8e7dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48466)[0m     @     0x7f8e7d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48466)[0m     @     0x7f8e7d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48466)[0m     @     0x7f8e7d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=48466)[0m     @     0x7f8e7d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=48466)[0m     @     0x7f8e7dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48466)[0m     @     0x7f8e7dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48466)[0m     @     0x7f8e7d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48466)[0m     @     0x7f8e7d0e1388 at::native::copy_impl()
[2m[36m(pid=48411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48411)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48411)[0m *** SIGSEGV (@0x0) received by PID 48411 (TID 0x7f87efcbf700) from PID 0; stack trace: ***
[2m[36m(pid=48411)[0m     @     0x7f87ef898390 (unknown)
[2m[36m(pid=48401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48401)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48401)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48401)[0m *** SIGSEGV (@0x0) received by PID 48401 (TID 0x7f69084c0700) from PID 0; stack trace: ***
[2m[36m(pid=48401)[0m     @     0x7f6908099390 (unknown)
[2m[36m(pid=48482)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48482)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48482)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48482)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48482)[0m *** SIGSEGV (@0x0) received by PID 48482 (TID 0x7fb084b52700) from PID 0; stack trace: ***
[2m[36m(pid=48482)[0m     @     0x7fb08472b390 (unknown)
[2m[36m(pid=48499)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48499)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48499)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48499)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48499)[0m *** SIGSEGV (@0x0) received by PID 48499 (TID 0x7efe81f44700) from PID 0; stack trace: ***
[2m[36m(pid=48499)[0m     @     0x7efe81b1d390 (unknown)
[2m[36m(pid=48499)[0m     @     0x7ecf81907f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48499)[0m     @     0x7ecf810327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48499)[0m     @     0x7ecf810358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48499)[0m     @     0x7ecf81035ad3 at::TensorIterator::for_each()
[2m[36m(pid=48499)[0m     @     0x7ecf81035d91 at::TensorIterator::for_each()
[2m[36m(pid=48499)[0m     @     0x7ecf81918b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48499)[0m     @     0x7ecf8193bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48499)[0m     @     0x7ecf80ddda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48499)[0m     @     0x7ecf80ddb388 at::native::copy_impl()
[2m[36m(pid=48499)[0m     @     0x7ecf80ddd5a4 at::native::copy_()
[2m[36m(pid=48479)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48479)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48479)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48479)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48479)[0m *** SIGSEGV (@0x0) received by PID 48479 (TID 0x7f67c68a4700) from PID 0; stack trace: ***
[2m[36m(pid=48479)[0m     @     0x7f67c647d390 (unknown)
[2m[36m(pid=48479)[0m     @     0x7f38c634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48479)[0m     @     0x7f38c5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48479)[0m     @     0x7f38c5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48479)[0m     @     0x7f38c5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=48479)[0m     @     0x7f38c5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=48479)[0m     @     0x7f38c635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48479)[0m     @     0x7f38c637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48479)[0m     @     0x7f38c5821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48479)[0m     @     0x7f38c581f388 at::native::copy_impl()
[2m[36m(pid=48479)[0m     @     0x7f38c58215a4 at::native::copy_()
[2m[36m(pid=48390)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48390)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48390)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48390)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48390)[0m *** SIGSEGV (@0x0) received by PID 48390 (TID 0x7fe77ba93700) from PID 0; stack trace: ***
[2m[36m(pid=48390)[0m     @     0x7fe77b66c390 (unknown)
[2m[36m(pid=48495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48495)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48495)[0m *** SIGSEGV (@0x0) received by PID 48495 (TID 0x7feefa17e700) from PID 0; stack trace: ***
[2m[36m(pid=48495)[0m     @     0x7feef9d57390 (unknown)
[2m[36m(pid=48495)[0m     @     0x7fbff9ceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48495)[0m     @     0x7fbff941a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48495)[0m     @     0x7fbff941d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48495)[0m     @     0x7fbff941dad3 at::TensorIterator::for_each()
[2m[36m(pid=48495)[0m     @     0x7fbff941dd91 at::TensorIterator::for_each()
[2m[36m(pid=48495)[0m     @     0x7fbff9d00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48495)[0m     @     0x7fbff9d23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48495)[0m     @     0x7fbff91c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48495)[0m     @     0x7fbff91c3388 at::native::copy_impl()
[2m[36m(pid=48397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48397)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48397)[0m *** SIGSEGV (@0x0) received by PID 48397 (TID 0x7f71c0f82700) from PID 0; stack trace: ***
[2m[36m(pid=48397)[0m     @     0x7f71c0b5b390 (unknown)
[2m[36m(pid=48404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48404)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48404)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48404)[0m *** SIGSEGV (@0x0) received by PID 48404 (TID 0x7f2918bdb700) from PID 0; stack trace: ***
[2m[36m(pid=48404)[0m     @     0x7f29187b4390 (unknown)
[2m[36m(pid=48404)[0m     @     0x7efa18563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48451)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48451)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48451)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48464)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48389)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48389)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48389)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48389)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48389)[0m *** SIGSEGV (@0x0) received by PID 48389 (TID 0x7f745e3f7700) from PID 0; stack trace: ***
[2m[36m(pid=48396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48396)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48491)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48491)[0m *** SIGSEGV (@0x0) received by PID 48491 (TID 0x7efd2a2c7700) from PID 0; stack trace: ***
[2m[36m(pid=48491)[0m     @     0x7efd29ea0390 (unknown)
[2m[36m(pid=48491)[0m     @     0x7ece29e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48473)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48473)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48473)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48473)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48473)[0m *** SIGSEGV (@0x0) received by PID 48473 (TID 0x7f77257c9700) from PID 0; stack trace: ***
[2m[36m(pid=48497)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48497)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48392)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48468)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48468)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48443)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48443)[0m *** SIGSEGV (@0x0) received by PID 48443 (TID 0x7fdc49db4700) from PID 0; stack trace: ***
[2m[36m(pid=48443)[0m     @     0x7fdc4998d390 (unknown)
[2m[36m(pid=48467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48467)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48467)[0m *** SIGSEGV (@0x0) received by PID 48467 (TID 0x7f7b58207700) from PID 0; stack trace: ***
[2m[36m(pid=48467)[0m     @     0x7f7b57de0390 (unknown)
[2m[36m(pid=48467)[0m     @     0x7f4c57bf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48467)[0m     @     0x7f4c573227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48474)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48474)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48474)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48474)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48474)[0m *** SIGSEGV (@0x0) received by PID 48474 (TID 0x7ff50ce4b700) from PID 0; stack trace: ***
[2m[36m(pid=48474)[0m     @     0x7ff50ca24390 (unknown)
[2m[36m(pid=48506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48506)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48506)[0m *** SIGSEGV (@0x0) received by PID 48506 (TID 0x7efd528a0700) from PID 0; stack trace: ***
[2m[36m(pid=48506)[0m     @     0x7efd52479390 (unknown)
[2m[36m(pid=48506)[0m     @     0x7ece5234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48477)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48477)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48477)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48477)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48477)[0m *** SIGSEGV (@0x0) received by PID 48477 (TID 0x7fb153f13700) from PID 0; stack trace: ***
[2m[36m(pid=48477)[0m     @     0x7fb153aec390 (unknown)
[2m[36m(pid=48477)[0m     @     0x7f8253a88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48477)[0m     @     0x7f82531b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48387)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48387)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48387)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48387)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48387)[0m *** SIGSEGV (@0x0) received by PID 48387 (TID 0x7f9536bbd700) from PID 0; stack trace: ***
[2m[36m(pid=48387)[0m     @     0x7f9536796390 (unknown)
[2m[36m(pid=48387)[0m     @     0x7f66364f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48387)[0m     @     0x7f6635c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48440)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48440)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48440)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48440)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48440)[0m *** SIGSEGV (@0x0) received by PID 48440 (TID 0x7f9f0d20b700) from PID 0; stack trace: ***
[2m[36m(pid=48440)[0m     @     0x7f9f0cde4390 (unknown)
[2m[36m(pid=48440)[0m     @     0x7f700cd64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48440)[0m     @     0x7f700c48f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48433)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48463)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48463)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48463)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48417)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48417)[0m *** SIGSEGV (@0x0) received by PID 48417 (TID 0x7fe7c65a4700) from PID 0; stack trace: ***
[2m[36m(pid=48417)[0m     @     0x7fe7c617d390 (unknown)
[2m[36m(pid=48484)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48484)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48484)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48484)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48484)[0m *** SIGSEGV (@0x0) received by PID 48484 (TID 0x7f9d11c01700) from PID 0; stack trace: ***
[2m[36m(pid=48484)[0m     @     0x7f9d117da390 (unknown)
[2m[36m(pid=48484)[0m     @     0x7f6e116f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48384)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48384)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48384)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48384)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48384)[0m *** SIGSEGV (@0x0) received by PID 48384 (TID 0x7ff61e4f3700) from PID 0; stack trace: ***
[2m[36m(pid=48384)[0m     @     0x7ff61e0cc390 (unknown)
[2m[36m(pid=48448)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48448)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48448)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48448)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48448)[0m *** SIGSEGV (@0x0) received by PID 48448 (TID 0x7f67be789700) from PID 0; stack trace: ***
[2m[36m(pid=48448)[0m     @     0x7f67be362390 (unknown)
[2m[36m(pid=48448)[0m     @     0x7f38be30bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48448)[0m     @     0x7f38bda367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48405)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48410)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48410)[0m *** SIGSEGV (@0x0) received by PID 48410 (TID 0x7f6b3a785700) from PID 0; stack trace: ***
[2m[36m(pid=48410)[0m     @     0x7f6b3a35e390 (unknown)
[2m[36m(pid=48410)[0m     @     0x7f3c3a30bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48410)[0m     @     0x7f3c39a367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48386)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48386)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48386)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48386)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48386)[0m *** SIGSEGV (@0x0) received by PID 48386 (TID 0x7f73c7d34700) from PID 0; stack trace: ***
[2m[36m(pid=48386)[0m     @     0x7f73c790d390 (unknown)
[2m[36m(pid=48386)[0m     @     0x7f44c789ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48456)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48456)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48456)[0m *** SIGSEGV (@0x0) received by PID 48456 (TID 0x7f55e5f78700) from PID 0; stack trace: ***
[2m[36m(pid=48456)[0m     @     0x7f55e5b51390 (unknown)
[2m[36m(pid=48456)[0m     @     0x7f26e57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48415)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48403)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48403)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48403)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48403)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48403)[0m *** SIGSEGV (@0x0) received by PID 48403 (TID 0x7fbc99004700) from PID 0; stack trace: ***
[2m[36m(pid=48403)[0m     @     0x7fbc98bdd390 (unknown)
[2m[36m(pid=48403)[0m     @     0x7f8d98b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48403)[0m     @     0x7f8d982667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48520)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48520)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48520)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48520)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48520)[0m *** SIGSEGV (@0x0) received by PID 48520 (TID 0x7faf31b66700) from PID 0; stack trace: ***
[2m[36m(pid=48520)[0m     @     0x7faf3173f390 (unknown)
[2m[36m(pid=48520)[0m     @     0x7f80316b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48520)[0m     @     0x7f8030ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48413)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48413)[0m *** SIGSEGV (@0x0) received by PID 48413 (TID 0x7f7fb4b6f700) from PID 0; stack trace: ***
[2m[36m(pid=48413)[0m     @     0x7f7fb4748390 (unknown)
[2m[36m(pid=48465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48465)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48465)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48465)[0m *** SIGSEGV (@0x0) received by PID 48465 (TID 0x7efc6d52f700) from PID 0; stack trace: ***
[2m[36m(pid=48465)[0m     @     0x7efc6d108390 (unknown)
[2m[36m(pid=48465)[0m     @     0x7ecd6d088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48488)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48488)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48488)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48488)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48488)[0m *** SIGSEGV (@0x0) received by PID 48488 (TID 0x7f683873e700) from PID 0; stack trace: ***
[2m[36m(pid=48488)[0m     @     0x7f6838317390 (unknown)
[2m[36m(pid=48488)[0m     @     0x7f3938290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48488)[0m     @     0x7f39379bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48488)[0m     @     0x7f39379be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48412)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48412)[0m *** SIGSEGV (@0x0) received by PID 48412 (TID 0x7fb83edc1700) from PID 0; stack trace: ***
[2m[36m(pid=48412)[0m     @     0x7fb83e99a390 (unknown)
[2m[36m(pid=48412)[0m     @     0x7f893e93af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48412)[0m     @     0x7f893e0657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48483)[0m     @     0x7f83c1fa75a4 at::native::copy_()
[2m[36m(pid=48483)[0m     @     0x7f83c26924f5 at::Tensor::copy_()
[2m[36m(pid=48523)[0m     @     0x7eed550a44f5 at::Tensor::copy_()
[2m[36m(pid=48523)[0m     @     0x7eed575778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48515)[0m     @     0x7f0cfed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48515)[0m     @     0x7f0cfc8354f5 at::Tensor::copy_()
[2m[36m(pid=48515)[0m     @     0x7f0d028e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48515)[0m     @     0x55901b43cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48515)[0m     @     0x55901b397b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48515)[0m     @     0x55901b422baf _PyEval_EvalCodeWithName
[2m[36m(pid=48515)[0m     @     0x55901b423a20 method_vectorcall
[2m[36m(pid=48515)[0m     @     0x55901b397bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48515)[0m     @     0x55901b422baf _PyEval_EvalCodeWithName
[2m[36m(pid=48515)[0m     @     0x55901b423643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48515)[0m     @     0x55901b398689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48515)[0m     @     0x55901b422baf _PyEval_EvalCodeWithName
[2m[36m(pid=48515)[0m     @     0x55901b423643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48515)[0m     @     0x55901b398689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48515)[0m     @     0x55901b422baf _PyEval_EvalCodeWithName
[2m[36m(pid=48515)[0m     @     0x55901b423643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48515)[0m     @     0x55901b398689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48515)[0m     @     0x55901b422baf _PyEval_EvalCodeWithName
[2m[36m(pid=48515)[0m     @     0x55901b423643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48515)[0m     @     0x55901b398689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x7fc080bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48446)[0m     @     0x7fc080bc8388 at::native::copy_impl()
[2m[36m(pid=48446)[0m     @     0x7fc080bca5a4 at::native::copy_()
[2m[36m(pid=48383)[0m *** SIGSEGV (@0x0) received by PID 48383 (TID 0x7fdfcd14d700) from PID 0; stack trace: ***
[2m[36m(pid=48383)[0m     @     0x7fdfccd26390 (unknown)
[2m[36m(pid=48383)[0m     @     0x7fb0ccbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48383)[0m     @     0x7fb0cc2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48400)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48400)[0m *** SIGSEGV (@0x0) received by PID 48400 (TID 0x7f1aeb58e700) from PID 0; stack trace: ***
[2m[36m(pid=48400)[0m     @     0x7f1aeb167390 (unknown)
[2m[36m(pid=48400)[0m     @     0x7eebeb0e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48400)[0m     @     0x7eebea8137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48450)[0m     @     0x7f231cc65390 (unknown)
[2m[36m(pid=48450)[0m     @     0x7ef41ca8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48450)[0m     @     0x7ef41c1b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48388)[0m     @     0x7f2ca67f4390 (unknown)
[2m[36m(pid=48388)[0m     @     0x7efda670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48388)[0m     @     0x7efda5e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48391)[0m     @     0x7f2c8954d390 (unknown)
[2m[36m(pid=48391)[0m     @     0x7efd88940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48391)[0m     @     0x7efd8806b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48391)[0m     @     0x7efd8806e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48437)[0m *** SIGSEGV (@0x0) received by PID 48437 (TID 0x7faf4d08e700) from PID 0; stack trace: ***
[2m[36m(pid=48437)[0m     @     0x7faf4cc67390 (unknown)
[2m[36m(pid=48437)[0m     @     0x7f804ca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48437)[0m     @     0x7f804c1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48402)[0m     @     0x7f572f82e390 (unknown)
[2m[36m(pid=48402)[0m     @     0x7f282f7a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48402)[0m     @     0x7f282eed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48402)[0m     @     0x7f282eed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48444)[0m     @     0x7f62d9be05a4 at::native::copy_()
[2m[36m(pid=48444)[0m     @     0x7f62da2cb4f5 at::Tensor::copy_()
[2m[36m(pid=48510)[0m     @     0x7fb1ce35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48510)[0m     @     0x7fb1ce37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48510)[0m     @     0x7fb1cd821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48510)[0m     @     0x7fb1cd81f388 at::native::copy_impl()
[2m[36m(pid=48486)[0m     @     0x7f59f90e35a4 at::native::copy_()
[2m[36m(pid=48486)[0m     @     0x7f59f97ce4f5 at::Tensor::copy_()
[2m[36m(pid=48481)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48481)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48481)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48385)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48385)[0m *** SIGSEGV (@0x0) received by PID 48385 (TID 0x7f90a1fe9700) from PID 0; stack trace: ***
[2m[36m(pid=48385)[0m     @     0x7f90a1bc2390 (unknown)
[2m[36m(pid=48385)[0m     @     0x7f61a1b5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48385)[0m     @     0x7f61a128a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48490)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48490)[0m *** SIGSEGV (@0x0) received by PID 48490 (TID 0x7fbc7945d700) from PID 0; stack trace: ***
[2m[36m(pid=48490)[0m     @     0x7fbc79036390 (unknown)
[2m[36m(pid=48490)[0m     @     0x7f8d78ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48490)[0m     @     0x7f8d785cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48418)[0m     @     0x7f84523e95a4 at::native::copy_()
[2m[36m(pid=48418)[0m     @     0x7f8452ad44f5 at::Tensor::copy_()
[2m[36m(pid=48418)[0m     @     0x7f8454fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48489)[0m     @     0x7f3aff2b45a4 at::native::copy_()
[2m[36m(pid=48489)[0m     @     0x7f3aff99f4f5 at::Tensor::copy_()
[2m[36m(pid=48504)[0m     @     0x7f7b33052b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48504)[0m     @     0x7f7b33075c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48504)[0m     @     0x7f7b32517a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48504)[0m     @     0x7f7b32515388 at::native::copy_impl()
[2m[36m(pid=48459)[0m     @     0x7f70d3ebe5a4 at::native::copy_()
[2m[36m(pid=48459)[0m     @     0x7f70d45a94f5 at::Tensor::copy_()
[2m[36m(pid=48459)[0m     @     0x7f70d6a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48475)[0m     @     0x7f6128ee05a4 at::native::copy_()
[2m[36m(pid=48475)[0m     @     0x7f61295cb4f5 at::Tensor::copy_()
[2m[36m(pid=48513)[0m     @     0x7f0dbd5d05a4 at::native::copy_()
[2m[36m(pid=48513)[0m     @     0x7f0dbdcbb4f5 at::Tensor::copy_()
[2m[36m(pid=48513)[0m     @     0x7f0dc018e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48399)[0m     @     0x7ee77efc9388 at::native::copy_impl()
[2m[36m(pid=48399)[0m     @     0x7ee77efcb5a4 at::native::copy_()
[2m[36m(pid=48395)[0m     @     0x7fa2559bdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48395)[0m     @     0x7fa2550e87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48395)[0m     @     0x7fa2550eb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48398)[0m     @     0x7f2cdbe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48398)[0m     @     0x7f2cdb5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48398)[0m     @     0x7f2cdb5398f7 at::TensorIterator::serial_for_each()
2020-11-05 10:10:21,499	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=48460)[0m     @     0x7fb9649b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48460)[0m     @     0x7fb9649b7388 at::native::copy_impl()
[2m[36m(pid=48461)[0m     @     0x7f181e1a55a4 at::native::copy_()
[2m[36m(pid=48461)[0m     @     0x7f181e8904f5 at::Tensor::copy_()
[2m[36m(pid=48501)[0m     @     0x7f97f71518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48501)[0m     @     0x7f97f7151ad3 at::TensorIterator::for_each()
[2m[36m(pid=48518)[0m     @     0x7f06f20eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48518)[0m     @     0x7f06f20e9388 at::native::copy_impl()
[2m[36m(pid=48408)[0m     @     0x7f68b7967390 (unknown)
[2m[36m(pid=48408)[0m     @     0x7f39b78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48408)[0m     @     0x7f39b70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48466)[0m     @     0x7f8e7d0e35a4 at::native::copy_()
[2m[36m(pid=48411)[0m     @     0x7f58ef751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48411)[0m     @     0x7f58eee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48411)[0m     @     0x7f58eee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48401)[0m     @     0x7f3a0801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48401)[0m     @     0x7f3a077477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48401)[0m     @     0x7f3a0774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48482)[0m     @     0x7f8184563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48482)[0m     @     0x7f8183c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48482)[0m     @     0x7f8183c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48499)[0m     @     0x7ecf814c84f5 at::Tensor::copy_()
[2m[36m(pid=48499)[0m     @     0x7ecf8399b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48479)[0m     @     0x7f38c5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48479)[0m     @     0x7f38c83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48479)[0m     @     0x7f38c5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48479)[0m     @     0x7f38cbfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48479)[0m     @     0x55fdf21eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48479)[0m     @     0x55fdf2149b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48479)[0m     @     0x55fdf21d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48479)[0m     @     0x55fdf21d5a20 method_vectorcall
[2m[36m(pid=48479)[0m     @     0x55fdf2149bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48479)[0m     @     0x55fdf21d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48479)[0m     @     0x55fdf21d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48479)[0m     @     0x55fdf214a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48479)[0m     @     0x55fdf21d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48479)[0m     @     0x55fdf21d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48479)[0m     @     0x55fdf214a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48479)[0m     @     0x55fdf21d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48479)[0m     @     0x55fdf21d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48479)[0m     @     0x55fdf214a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48479)[0m     @     0x55fdf21d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48479)[0m     @     0x55fdf21d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48479)[0m     @     0x55fdf214a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x7fb87b5f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48390)[0m     @     0x7fb87ad1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48390)[0m     @     0x7fb87ad208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48390)[0m     @     0x7fb87ad20ad3 at::TensorIterator::for_each()
[2m[36m(pid=48495)[0m     @     0x7fbff91c55a4 at::native::copy_()
[2m[36m(pid=48495)[0m     @     0x7fbff98b04f5 at::Tensor::copy_()
[2m[36m(pid=48495)[0m     @     0x7fbffbd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48495)[0m     @     0x7fbff98b04f5 at::Tensor::copy_()
[2m[36m(pid=48397)[0m     @     0x7f42c0a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48397)[0m     @     0x7f42c01617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48397)[0m     @     0x7f42c01648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48397)[0m     @     0x7f42c0164ad3 at::TensorIterator::for_each()
[2m[36m(pid=48404)[0m     @     0x7efa17c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48404)[0m     @     0x7efa17c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48404)[0m     @     0x7efa17c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=48416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48416)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48416)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48416)[0m *** SIGSEGV (@0x0) received by PID 48416 (TID 0x7f7f223c6700) from PID 0; stack trace: ***
[2m[36m(pid=48416)[0m     @     0x7f7f21f9f390 (unknown)
[2m[36m(pid=48416)[0m     @     0x7f5021e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48451)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48451)[0m *** SIGSEGV (@0x0) received by PID 48451 (TID 0x7faa3cc3d700) from PID 0; stack trace: ***
[2m[36m(pid=48451)[0m     @     0x7faa3c816390 (unknown)
[2m[36m(pid=48451)[0m     @     0x7f7b3c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48451)[0m     @     0x7f7b3bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48451)[0m     @     0x7f7b3bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48464)[0m *** SIGSEGV (@0x0) received by PID 48464 (TID 0x7fc35ce11700) from PID 0; stack trace: ***
[2m[36m(pid=48464)[0m     @     0x7fc35c9ea390 (unknown)
[2m[36m(pid=48464)[0m     @     0x7f945c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48464)[0m     @     0x7f945be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48464)[0m     @     0x7f945bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48389)[0m     @     0x7f745dfd0390 (unknown)
[2m[36m(pid=48389)[0m     @     0x7f455de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48389)[0m     @     0x7f455d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48389)[0m     @     0x7f455d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48396)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48396)[0m *** SIGSEGV (@0x0) received by PID 48396 (TID 0x7f1c6185a700) from PID 0; stack trace: ***
[2m[36m(pid=48396)[0m     @     0x7f1c61433390 (unknown)
[2m[36m(pid=48396)[0m     @     0x7eed613ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48396)[0m     @     0x7eed60af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48396)[0m     @     0x7eed60afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48507)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48507)[0m *** SIGSEGV (@0x0) received by PID 48507 (TID 0x7fdbfece1700) from PID 0; stack trace: ***
[2m[36m(pid=48507)[0m     @     0x7fdbfe8ba390 (unknown)
[2m[36m(pid=48507)[0m     @     0x7facfe70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48453)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48453)[0m *** SIGSEGV (@0x0) received by PID 48453 (TID 0x7f00eba7e700) from PID 0; stack trace: ***
[2m[36m(pid=48453)[0m     @     0x7f00eb657390 (unknown)
[2m[36m(pid=48453)[0m     @     0x7ed1eb5f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48491)[0m     @     0x7ece2954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48491)[0m     @     0x7ece295528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48491)[0m     @     0x7ece29552ad3 at::TensorIterator::for_each()
[2m[36m(pid=48473)[0m     @     0x7f77253a2390 (unknown)
[2m[36m(pid=48473)[0m     @     0x7f4825347f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48473)[0m     @     0x7f4824a727db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48473)[0m     @     0x7f4824a758f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48442)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48497)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48497)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48497)[0m *** SIGSEGV (@0x0) received by PID 48497 (TID 0x7f601abcd700) from PID 0; stack trace: ***
[2m[36m(pid=48497)[0m     @     0x7f601a7a6390 (unknown)
[2m[36m(pid=48497)[0m     @     0x7f311a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48497)[0m     @     0x7f3119c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48392)[0m *** SIGSEGV (@0x0) received by PID 48392 (TID 0x7f0109e5a700) from PID 0; stack trace: ***
[2m[36m(pid=48392)[0m     @     0x7f0109a33390 (unknown)
[2m[36m(pid=48392)[0m     @     0x7ed2097f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48468)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48468)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48468)[0m *** SIGSEGV (@0x0) received by PID 48468 (TID 0x7ff4501ba700) from PID 0; stack trace: ***
[2m[36m(pid=48468)[0m     @     0x7ff44fd93390 (unknown)
[2m[36m(pid=48468)[0m     @     0x7fc54fd1ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48468)[0m     @     0x7fc54f4497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48443)[0m     @     0x7fad4993bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48443)[0m     @     0x7fad490667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48443)[0m     @     0x7fad490698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48467)[0m     @     0x7f4c573258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48467)[0m     @     0x7f4c57325ad3 at::TensorIterator::for_each()
[2m[36m(pid=48474)[0m     @     0x7fc60c77cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48474)[0m     @     0x7fc60bea77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48474)[0m     @     0x7fc60beaa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48506)[0m     @     0x7ece51a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48506)[0m     @     0x7ece51a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48477)[0m     @     0x7f82531b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48477)[0m     @     0x7f82531b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=48387)[0m     @     0x7f6635c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48387)[0m     @     0x7f6635c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=48440)[0m     @     0x7f700c4928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48440)[0m     @     0x7f700c492ad3 at::TensorIterator::for_each()
[2m[36m(pid=48433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48433)[0m *** SIGSEGV (@0x0) received by PID 48433 (TID 0x7fb84872d700) from PID 0; stack trace: ***
[2m[36m(pid=48433)[0m     @     0x7fb848306390 (unknown)
[2m[36m(pid=48433)[0m     @     0x7f8948290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48433)[0m     @     0x7f89479bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48463)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48463)[0m *** SIGSEGV (@0x0) received by PID 48463 (TID 0x7f1f3a88f700) from PID 0; stack trace: ***
[2m[36m(pid=48463)[0m     @     0x7f1f3a468390 (unknown)
[2m[36m(pid=48463)[0m     @     0x7ef03a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48463)[0m     @     0x7ef039a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48417)[0m     @     0x7fb8c613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48417)[0m     @     0x7fb8c58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48417)[0m     @     0x7fb8c58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48484)[0m     @     0x7f6e10e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48484)[0m     @     0x7f6e10e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48384)[0m     @     0x7fc71e07af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48384)[0m     @     0x7fc71d7a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48384)[0m     @     0x7fc71d7a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48478)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=48478)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=48478)[0m *** Aborted at 1604571021 (unix time) try "date -d @1604571021" if you are using GNU date ***
[2m[36m(pid=48478)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48478)[0m *** SIGSEGV (@0x0) received by PID 48478 (TID 0x7fd7761e3700) from PID 0; stack trace: ***
[2m[36m(pid=48478)[0m     @     0x7fd775dbc390 (unknown)
[2m[36m(pid=48448)[0m     @     0x7f38bda398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48448)[0m     @     0x7f38bda39ad3 at::TensorIterator::for_each()
[2m[36m(pid=48448)[0m     @     0x7f38bda39d91 at::TensorIterator::for_each()
[2m[36m(pid=48405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48405)[0m *** SIGSEGV (@0x0) received by PID 48405 (TID 0x7f5707bef700) from PID 0; stack trace: ***
[2m[36m(pid=48405)[0m     @     0x7f57077c8390 (unknown)
[2m[36m(pid=48405)[0m     @     0x7f280761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48405)[0m     @     0x7f2806d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48410)[0m     @     0x7f3c39a398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48410)[0m     @     0x7f3c39a39ad3 at::TensorIterator::for_each()
[2m[36m(pid=48410)[0m     @     0x7f3c39a39d91 at::TensorIterator::for_each()
[2m[36m(pid=48386)[0m     @     0x7f44c6fc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48386)[0m     @     0x7f44c6fcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48386)[0m     @     0x7f44c6fccad3 at::TensorIterator::for_each()
[2m[36m(pid=48456)[0m     @     0x7f26e4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48456)[0m     @     0x7f26e4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48456)[0m     @     0x7f26e4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=48415)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48415)[0m *** SIGSEGV (@0x0) received by PID 48415 (TID 0x7fc0dc764700) from PID 0; stack trace: ***
[2m[36m(pid=48415)[0m     @     0x7fc0dc33d390 (unknown)
[2m[36m(pid=48415)[0m     @     0x7f91dc290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48415)[0m     @     0x7f91db9bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48403)[0m     @     0x7f8d982698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48403)[0m     @     0x7f8d98269ad3 at::TensorIterator::for_each()
[2m[36m(pid=48403)[0m     @     0x7f8d98269d91 at::TensorIterator::for_each()
[2m[36m(pid=48520)[0m     @     0x7f8030de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48520)[0m     @     0x7f8030de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=48520)[0m     @     0x7f8030de2d91 at::TensorIterator::for_each()
[2m[36m(pid=48520)[0m     @     0x7f80316c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48413)[0m     @     0x7f50b4563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48413)[0m     @     0x7f50b3c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48413)[0m     @     0x7f50b3c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48413)[0m     @     0x7f50b3c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=48465)[0m     @     0x7ecd6c7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48465)[0m     @     0x7ecd6c7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48465)[0m     @     0x7ecd6c7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=48488)[0m     @     0x7f39379bead3 at::TensorIterator::for_each()
[2m[36m(pid=48488)[0m     @     0x7f39379bed91 at::TensorIterator::for_each()
[2m[36m(pid=48488)[0m     @     0x7f39382a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48488)[0m     @     0x7f39382c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48412)[0m     @     0x7f893e0688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48412)[0m     @     0x7f893e068ad3 at::TensorIterator::for_each()
[2m[36m(pid=48412)[0m     @     0x7f893e068d91 at::TensorIterator::for_each()
[2m[36m(pid=48483)[0m     @     0x7f83c4b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48483)[0m     @     0x7f83c26924f5 at::Tensor::copy_()
[2m[36m(pid=48483)[0m     @     0x7f83c873d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48483)[0m     @     0x55c5d1e62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48483)[0m     @     0x55c5d1dbdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48483)[0m     @     0x55c5d1e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=48483)[0m     @     0x55c5d1e49a20 method_vectorcall
[2m[36m(pid=48483)[0m     @     0x55c5d1dbdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48483)[0m     @     0x55c5d1e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=48483)[0m     @     0x55c5d1e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48483)[0m     @     0x55c5d1dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48483)[0m     @     0x55c5d1e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=48483)[0m     @     0x55c5d1e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48483)[0m     @     0x55c5d1dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48483)[0m     @     0x55c5d1e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=48483)[0m     @     0x55c5d1e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48483)[0m     @     0x55c5d1dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48483)[0m     @     0x55c5d1e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=48483)[0m     @     0x55c5d1e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48483)[0m     @     0x55c5d1dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x7eed550a44f5 at::Tensor::copy_()
[2m[36m(pid=48523)[0m     @     0x7eed5b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48523)[0m     @     0x55e12127ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48523)[0m     @     0x55e1211dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x55e121265baf _PyEval_EvalCodeWithName
[2m[36m(pid=48523)[0m     @     0x55e121266a20 method_vectorcall
[2m[36m(pid=48523)[0m     @     0x55e1211dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x55e121265baf _PyEval_EvalCodeWithName
[2m[36m(pid=48523)[0m     @     0x55e121266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48523)[0m     @     0x55e1211db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x55e121265baf _PyEval_EvalCodeWithName
[2m[36m(pid=48523)[0m     @     0x55e121266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48523)[0m     @     0x55e1211db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x55e121265baf _PyEval_EvalCodeWithName
[2m[36m(pid=48523)[0m     @     0x55e121266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48523)[0m     @     0x55e1211db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48523)[0m     @     0x55e121265baf _PyEval_EvalCodeWithName
[2m[36m(pid=48523)[0m     @     0x55e121266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48523)[0m     @     0x55e1211db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x7fc0812b54f5 at::Tensor::copy_()
[2m[36m(pid=48446)[0m     @     0x7fc0837888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48446)[0m     @     0x7fc0812b54f5 at::Tensor::copy_()
[2m[36m(pid=48446)[0m     @     0x7fc08736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48446)[0m     @     0x558eddc11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48446)[0m     @     0x558eddb6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x558eddbf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48446)[0m     @     0x558eddbf8a20 method_vectorcall
[2m[36m(pid=48446)[0m     @     0x558eddb6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x558eddbf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48446)[0m     @     0x558eddbf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48446)[0m     @     0x558eddb6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x558eddbf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48446)[0m     @     0x558eddbf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48446)[0m     @     0x558eddb6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x558eddbf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48446)[0m     @     0x558eddbf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48446)[0m     @     0x558eddb6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48446)[0m     @     0x558eddbf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48446)[0m     @     0x558eddbf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48446)[0m     @     0x558eddb6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x7fb0cc2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48383)[0m     @     0x7fb0cc2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=48383)[0m     @     0x7fb0cc2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=48383)[0m     @     0x7fb0ccbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48400)[0m     @     0x7eebea8168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48400)[0m     @     0x7eebea816ad3 at::TensorIterator::for_each()
[2m[36m(pid=48400)[0m     @     0x7eebea816d91 at::TensorIterator::for_each()
[2m[36m(pid=48400)[0m     @     0x7eebeb0f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48450)[0m     @     0x7ef41c1b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48450)[0m     @     0x7ef41c1b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=48450)[0m     @     0x7ef41c1b9d91 at::TensorIterator::for_each()
[2m[36m(pid=48450)[0m     @     0x7ef41ca9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48450)[0m     @     0x7ef41cabfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48388)[0m     @     0x7efda5e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48388)[0m     @     0x7efda5e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=48388)[0m     @     0x7efda5e38d91 at::TensorIterator::for_each()
[2m[36m(pid=48388)[0m     @     0x7efda671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48388)[0m     @     0x7efda673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48391)[0m     @     0x7efd8806ead3 at::TensorIterator::for_each()
[2m[36m(pid=48391)[0m     @     0x7efd8806ed91 at::TensorIterator::for_each()
[2m[36m(pid=48391)[0m     @     0x7efd88951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48391)[0m     @     0x7efd88974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48437)[0m     @     0x7f804c1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48437)[0m     @     0x7f804c164ad3 at::TensorIterator::for_each()
[2m[36m(pid=48402)[0m     @     0x7f282eed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=48402)[0m     @     0x7f282eed7d91 at::TensorIterator::for_each()
[2m[36m(pid=48402)[0m     @     0x7f282f7bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48402)[0m     @     0x7f282f7ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48444)[0m     @     0x7f62dc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48444)[0m     @     0x7f62da2cb4f5 at::Tensor::copy_()
[2m[36m(pid=48444)[0m     @     0x7f62e037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48444)[0m     @     0x562552888fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48444)[0m     @     0x5625527e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48444)[0m     @     0x56255286ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48444)[0m     @     0x56255286fa20 method_vectorcall
[2m[36m(pid=48444)[0m     @     0x5625527e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48444)[0m     @     0x56255286ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48444)[0m     @     0x56255286f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48444)[0m     @     0x5625527e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48444)[0m     @     0x56255286ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48444)[0m     @     0x56255286f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48444)[0m     @     0x5625527e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48444)[0m     @     0x56255286ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48444)[0m     @     0x56255286f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48444)[0m     @     0x5625527e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48444)[0m     @     0x56255286ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48444)[0m     @     0x56255286f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48444)[0m     @     0x5625527e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x7fb1cd8215a4 at::native::copy_()
[2m[36m(pid=48510)[0m     @     0x7fb1cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=48510)[0m     @     0x7fb1d03df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48486)[0m     @     0x7f59fbca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48486)[0m     @     0x7f59f97ce4f5 at::Tensor::copy_()
[2m[36m(pid=48486)[0m     @     0x7f59ff87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48486)[0m     @     0x55d307640fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48486)[0m     @     0x55d30759bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48486)[0m     @     0x55d307626baf _PyEval_EvalCodeWithName
[2m[36m(pid=48486)[0m     @     0x55d307627a20 method_vectorcall
[2m[36m(pid=48486)[0m     @     0x55d30759bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48486)[0m     @     0x55d307626baf _PyEval_EvalCodeWithName
[2m[36m(pid=48486)[0m     @     0x55d307627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48486)[0m     @     0x55d30759c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48486)[0m     @     0x55d307626baf _PyEval_EvalCodeWithName
[2m[36m(pid=48486)[0m     @     0x55d307627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48486)[0m     @     0x55d30759c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48486)[0m     @     0x55d307626baf _PyEval_EvalCodeWithName
[2m[36m(pid=48486)[0m     @     0x55d307627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48486)[0m     @     0x55d30759c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48486)[0m     @     0x55d307626baf _PyEval_EvalCodeWithName
[2m[36m(pid=48486)[0m     @     0x55d307627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48486)[0m     @     0x55d30759c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48481)[0m *** SIGSEGV (@0x0) received by PID 48481 (TID 0x7f4abfbdb700) from PID 0; stack trace: ***
[2m[36m(pid=48481)[0m     @     0x7f4abf7b4390 (unknown)
[2m[36m(pid=48481)[0m     @     0x7f1bbf61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48385)[0m     @     0x7f61a128d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48385)[0m     @     0x7f61a128dad3 at::TensorIterator::for_each()
[2m[36m(pid=48490)[0m     @     0x7f8d785d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48490)[0m     @     0x7f8d785d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=48490)[0m     @     0x7f8d785d2d91 at::TensorIterator::for_each()
[2m[36m(pid=48490)[0m     @     0x7f8d78eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48490)[0m     @     0x7f8d78ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48418)[0m     @     0x7f8452ad44f5 at::Tensor::copy_()
[2m[36m(pid=48418)[0m     @     0x7f8458b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48418)[0m     @     0x55b4d05d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48418)[0m     @     0x55b4d0532b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48418)[0m     @     0x55b4d05bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48418)[0m     @     0x55b4d05bea20 method_vectorcall
[2m[36m(pid=48418)[0m     @     0x55b4d0532bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48418)[0m     @     0x55b4d05bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48418)[0m     @     0x55b4d05be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48418)[0m     @     0x55b4d0533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48418)[0m     @     0x55b4d05bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48418)[0m     @     0x55b4d05be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48418)[0m     @     0x55b4d0533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48418)[0m     @     0x55b4d05bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48418)[0m     @     0x55b4d05be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48418)[0m     @     0x55b4d0533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48418)[0m     @     0x55b4d05bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48418)[0m     @     0x55b4d05be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48418)[0m     @     0x55b4d0533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x7f3b01e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48489)[0m     @     0x7f3aff99f4f5 at::Tensor::copy_()
[2m[36m(pid=48489)[0m     @     0x7f3b05a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48489)[0m     @     0x55682effcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48489)[0m     @     0x55682ef57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x55682efe2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48489)[0m     @     0x55682efe3a20 method_vectorcall
[2m[36m(pid=48489)[0m     @     0x55682ef57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x55682efe2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48489)[0m     @     0x55682efe3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48489)[0m     @     0x55682ef58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x55682efe2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48489)[0m     @     0x55682efe3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48489)[0m     @     0x55682ef58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x55682efe2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48489)[0m     @     0x55682efe3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48489)[0m     @     0x55682ef58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48489)[0m     @     0x55682efe2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48489)[0m     @     0x55682efe3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48489)[0m     @     0x55682ef58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x7f7b325175a4 at::native::copy_()
[2m[36m(pid=48504)[0m     @     0x7f7b32c024f5 at::Tensor::copy_()
[2m[36m(pid=48504)[0m     @     0x7f7b350d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48459)[0m     @     0x7f70d45a94f5 at::Tensor::copy_()
[2m[36m(pid=48459)[0m     @     0x7f70da65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48459)[0m     @     0x55b70d5f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48459)[0m     @     0x55b70d552b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48459)[0m     @     0x55b70d5ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48459)[0m     @     0x55b70d5dea20 method_vectorcall
[2m[36m(pid=48459)[0m     @     0x55b70d552bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48459)[0m     @     0x55b70d5ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48459)[0m     @     0x55b70d5de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48459)[0m     @     0x55b70d553689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48459)[0m     @     0x55b70d5ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48459)[0m     @     0x55b70d5de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48459)[0m     @     0x55b70d553689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48459)[0m     @     0x55b70d5ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48459)[0m     @     0x55b70d5de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48459)[0m     @     0x55b70d553689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48459)[0m     @     0x55b70d5ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48459)[0m     @     0x55b70d5de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48459)[0m     @     0x55b70d553689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x7f612ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48475)[0m     @     0x7f61295cb4f5 at::Tensor::copy_()
[2m[36m(pid=48475)[0m     @     0x7f612f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48475)[0m     @     0x5588ff3a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48475)[0m     @     0x5588ff2ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x5588ff38abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48475)[0m     @     0x5588ff38ba20 method_vectorcall
[2m[36m(pid=48475)[0m     @     0x5588ff2ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x5588ff38abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48475)[0m     @     0x5588ff38b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48475)[0m     @     0x5588ff300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x5588ff38abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48475)[0m     @     0x5588ff38b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48475)[0m     @     0x5588ff300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x5588ff38abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48475)[0m     @     0x5588ff38b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48475)[0m     @     0x5588ff300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48475)[0m     @     0x5588ff38abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48475)[0m     @     0x5588ff38b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48475)[0m     @     0x5588ff300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x7f0dbdcbb4f5 at::Tensor::copy_()
[2m[36m(pid=48513)[0m     @     0x7f0dc3d6679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48513)[0m     @     0x558cd28b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48513)[0m     @     0x558cd280bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x558cd2896baf _PyEval_EvalCodeWithName
[2m[36m(pid=48513)[0m     @     0x558cd2897a20 method_vectorcall
[2m[36m(pid=48513)[0m     @     0x558cd280bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x558cd2896baf _PyEval_EvalCodeWithName
[2m[36m(pid=48513)[0m     @     0x558cd2897643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48513)[0m     @     0x558cd280c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x558cd2896baf _PyEval_EvalCodeWithName
[2m[36m(pid=48513)[0m     @     0x558cd2897643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48513)[0m     @     0x558cd280c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x558cd2896baf _PyEval_EvalCodeWithName
[2m[36m(pid=48513)[0m     @     0x558cd2897643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48513)[0m     @     0x558cd280c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48513)[0m     @     0x558cd2896baf _PyEval_EvalCodeWithName
[2m[36m(pid=48513)[0m     @     0x558cd2897643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48513)[0m     @     0x558cd280c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x7ee77f6b64f5 at::Tensor::copy_()
[2m[36m(pid=48399)[0m     @     0x7ee781b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48399)[0m     @     0x7ee77f6b64f5 at::Tensor::copy_()
[2m[36m(pid=48399)[0m     @     0x7ee78576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48399)[0m     @     0x55572f806fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48399)[0m     @     0x55572f761b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x55572f7ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48399)[0m     @     0x55572f7eda20 method_vectorcall
[2m[36m(pid=48399)[0m     @     0x55572f761bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x55572f7ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48399)[0m     @     0x55572f7ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48399)[0m     @     0x55572f762689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x55572f7ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48399)[0m     @     0x55572f7ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48399)[0m     @     0x55572f762689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x55572f7ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48399)[0m     @     0x55572f7ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48399)[0m     @     0x55572f762689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48399)[0m     @     0x55572f7ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48399)[0m     @     0x55572f7ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48399)[0m     @     0x55572f762689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x7fa2550ebad3 at::TensorIterator::for_each()
[2m[36m(pid=48395)[0m     @     0x7fa2550ebd91 at::TensorIterator::for_each()
[2m[36m(pid=48395)[0m     @     0x7fa2559ceb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48395)[0m     @     0x7fa2559f1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48395)[0m     @     0x7fa254e93a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48398)[0m     @     0x7f2cdb539ad3 at::TensorIterator::for_each()
[2m[36m(pid=48398)[0m     @     0x7f2cdb539d91 at::TensorIterator::for_each()
[2m[36m(pid=48398)[0m     @     0x7f2cdbe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48398)[0m     @     0x7f2cdbe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48398)[0m     @     0x7f2cdb2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48460)[0m     @     0x7fb9649b95a4 at::native::copy_()
[2m[36m(pid=48460)[0m     @     0x7fb9650a44f5 at::Tensor::copy_()
[2m[36m(pid=48460)[0m     @     0x7fb9675778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48460)[0m     @     0x7fb9650a44f5 at::Tensor::copy_()
[2m[36m(pid=48460)[0m     @     0x7fb96b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48460)[0m     @     0x556e7c79afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48460)[0m     @     0x556e7c6f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x7f1820d638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48461)[0m     @     0x7f181e8904f5 at::Tensor::copy_()
[2m[36m(pid=48461)[0m     @     0x7f182493b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48461)[0m     @     0x56457fae1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48461)[0m     @     0x56457fa3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x56457fac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48461)[0m     @     0x56457fac8a20 method_vectorcall
[2m[36m(pid=48461)[0m     @     0x56457fa3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x56457fac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48461)[0m     @     0x56457fac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48461)[0m     @     0x56457fa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x56457fac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48461)[0m     @     0x56457fac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48461)[0m     @     0x56457fa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x56457fac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48461)[0m     @     0x56457fac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48461)[0m     @     0x56457fa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48461)[0m     @     0x56457fac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48461)[0m     @     0x56457fac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48461)[0m     @     0x56457fa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x7f97f7151d91 at::TensorIterator::for_each()
[2m[36m(pid=48501)[0m     @     0x7f97f7a34b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48501)[0m     @     0x7f97f7a57c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48501)[0m     @     0x7f97f6ef9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48501)[0m     @     0x7f97f6ef7388 at::native::copy_impl()
[2m[36m(pid=48518)[0m     @     0x7f06f20eb5a4 at::native::copy_()
[2m[36m(pid=48518)[0m     @     0x7f06f27d64f5 at::Tensor::copy_()
[2m[36m(pid=48518)[0m     @     0x7f06f4ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48518)[0m     @     0x7f06f27d64f5 at::Tensor::copy_()
[2m[36m(pid=48518)[0m     @     0x7f06f847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48518)[0m     @     0x55bd89e94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48518)[0m     @     0x55bd89defb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48518)[0m     @     0x55bd89e7ba20 method_vectorcall
[2m[36m(pid=48518)[0m     @     0x55bd89defbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48518)[0m     @     0x55bd89e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48408)[0m     @     0x7f39b700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48408)[0m     @     0x7f39b700cad3 at::TensorIterator::for_each()
[2m[36m(pid=48408)[0m     @     0x7f39b700cd91 at::TensorIterator::for_each()
[2m[36m(pid=48408)[0m     @     0x7f39b78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48408)[0m     @     0x7f39b7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48466)[0m     @     0x7f8e7d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=48466)[0m     @     0x7f8e7fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48466)[0m     @     0x7f8e7d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=48466)[0m     @     0x7f8e8387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48466)[0m     @     0x555803aecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48466)[0m     @     0x555803a47b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48466)[0m     @     0x555803ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48466)[0m     @     0x555803ad3a20 method_vectorcall
[2m[36m(pid=48466)[0m     @     0x555803a47bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48466)[0m     @     0x555803ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48466)[0m     @     0x555803ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48466)[0m     @     0x555803a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48466)[0m     @     0x555803ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48466)[0m     @     0x555803ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48466)[0m     @     0x555803a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48466)[0m     @     0x555803ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48466)[0m     @     0x555803ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48466)[0m     @     0x555803a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48466)[0m     @     0x555803ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=48466)[0m     @     0x555803ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48466)[0m     @     0x555803a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x7f58eee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=48411)[0m     @     0x7f58eee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=48411)[0m     @     0x7f58ef762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48411)[0m     @     0x7f58ef785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48401)[0m     @     0x7f3a0774aad3 at::TensorIterator::for_each()
[2m[36m(pid=48401)[0m     @     0x7f3a0774ad91 at::TensorIterator::for_each()
[2m[36m(pid=48401)[0m     @     0x7f3a0802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48401)[0m     @     0x7f3a08050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48482)[0m     @     0x7f8183c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=48482)[0m     @     0x7f8183c91d91 at::TensorIterator::for_each()
[2m[36m(pid=48482)[0m     @     0x7f8184574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48482)[0m     @     0x7f8184597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48482)[0m     @     0x7f8183a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48499)[0m     @     0x7ecf814c84f5 at::Tensor::copy_()
[2m[36m(pid=48499)[0m     @     0x7ecf8757379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48499)[0m     @     0x55d359c71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48499)[0m     @     0x55d359bccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48499)[0m     @     0x55d359c57baf _PyEval_EvalCodeWithName
[2m[36m(pid=48499)[0m     @     0x55d359c58a20 method_vectorcall
[2m[36m(pid=48499)[0m     @     0x55d359bccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48499)[0m     @     0x55d359c57baf _PyEval_EvalCodeWithName
[2m[36m(pid=48499)[0m     @     0x55d359c58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48499)[0m     @     0x55d359bcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48499)[0m     @     0x55d359c57baf _PyEval_EvalCodeWithName
[2m[36m(pid=48499)[0m     @     0x55d359c58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48499)[0m     @     0x55d359bcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48499)[0m     @     0x55d359c57baf _PyEval_EvalCodeWithName
[2m[36m(pid=48499)[0m     @     0x55d359c58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48499)[0m     @     0x55d359bcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48499)[0m     @     0x55d359c57baf _PyEval_EvalCodeWithName
[2m[36m(pid=48499)[0m     @     0x55d359c58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48499)[0m     @     0x55d359bcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x7fb87ad20d91 at::TensorIterator::for_each()
[2m[36m(pid=48390)[0m     @     0x7fb87b603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48390)[0m     @     0x7fb87b626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48495)[0m     @     0x7fbfff95b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48495)[0m     @     0x561993316fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48495)[0m     @     0x561993271b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48495)[0m     @     0x5619932fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48495)[0m     @     0x5619932fda20 method_vectorcall
[2m[36m(pid=48495)[0m     @     0x561993271bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48495)[0m     @     0x5619932fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48495)[0m     @     0x5619932fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48495)[0m     @     0x561993272689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48495)[0m     @     0x5619932fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48495)[0m     @     0x5619932fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48495)[0m     @     0x561993272689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48495)[0m     @     0x5619932fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48495)[0m     @     0x5619932fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48495)[0m     @     0x561993272689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48495)[0m     @     0x5619932fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48495)[0m     @     0x5619932fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48495)[0m     @     0x561993272689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x7f42c0164d91 at::TensorIterator::for_each()
[2m[36m(pid=48397)[0m     @     0x7f42c0a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48397)[0m     @     0x7f42c0a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48404)[0m     @     0x7efa17c91d91 at::TensorIterator::for_each()
[2m[36m(pid=48404)[0m     @     0x7efa18574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48404)[0m     @     0x7efa18597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48404)[0m     @     0x7efa17a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48404)[0m     @     0x7efa17a37388 at::native::copy_impl()
[2m[36m(pid=48416)[0m     @     0x7f502154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48416)[0m     @     0x7f50215528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48416)[0m     @     0x7f5021552ad3 at::TensorIterator::for_each()
[2m[36m(pid=48451)[0m     @     0x7f7b3bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=48451)[0m     @     0x7f7b3bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=48451)[0m     @     0x7f7b3c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48451)[0m     @     0x7f7b3c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48464)[0m     @     0x7f945bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=48464)[0m     @     0x7f945bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=48464)[0m     @     0x7f945c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48389)[0m     @     0x7f455d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=48389)[0m     @     0x7f455d552d91 at::TensorIterator::for_each()
[2m[36m(pid=48389)[0m     @     0x7f455de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48389)[0m     @     0x7f455de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48396)[0m     @     0x7eed60afaad3 at::TensorIterator::for_each()
[2m[36m(pid=48396)[0m     @     0x7eed60afad91 at::TensorIterator::for_each()
[2m[36m(pid=48396)[0m     @     0x7eed613ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48396)[0m     @     0x7eed61400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48507)[0m     @     0x7facfde357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48507)[0m     @     0x7facfde388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48507)[0m     @     0x7facfde38ad3 at::TensorIterator::for_each()
[2m[36m(pid=48453)[0m     @     0x7ed1ead1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48453)[0m     @     0x7ed1ead208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48453)[0m     @     0x7ed1ead20ad3 at::TensorIterator::for_each()
[2m[36m(pid=48491)[0m     @     0x7ece29552d91 at::TensorIterator::for_each()
[2m[36m(pid=48491)[0m     @     0x7ece29e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48491)[0m     @     0x7ece29e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48491)[0m     @     0x7ece292faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48491)[0m     @     0x7ece292f8388 at::native::copy_impl()
2020-11-05 10:10:21,552	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=48473)[0m     @     0x7f4824a75ad3 at::TensorIterator::for_each()
[2m[36m(pid=48473)[0m     @     0x7f4824a75d91 at::TensorIterator::for_each()
[2m[36m(pid=48473)[0m     @     0x7f4825358b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48473)[0m     @     0x7f482537bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=48442)[0m *** SIGSEGV (@0x0) received by PID 48442 (TID 0x7f6a9bd29700) from PID 0; stack trace: ***
[2m[36m(pid=48442)[0m     @     0x7f6a9b902390 (unknown)
[2m[36m(pid=48442)[0m     @     0x7f3b9b89ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48442)[0m     @     0x7f3b9afc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48442)[0m     @     0x7f3b9afcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48497)[0m     @     0x7f3119c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48497)[0m     @     0x7f3119c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=48497)[0m     @     0x7f3119c27d91 at::TensorIterator::for_each()
[2m[36m(pid=48497)[0m     @     0x7f311a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48497)[0m     @     0x7f311a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48392)[0m     @     0x7ed208f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48392)[0m     @     0x7ed208f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48392)[0m     @     0x7ed208f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=48468)[0m     @     0x7fc54f44c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48468)[0m     @     0x7fc54f44cad3 at::TensorIterator::for_each()
[2m[36m(pid=48468)[0m     @     0x7fc54f44cd91 at::TensorIterator::for_each()
[2m[36m(pid=48468)[0m     @     0x7fc54fd2fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48468)[0m     @     0x7fc54fd52c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48443)[0m     @     0x7fad49069ad3 at::TensorIterator::for_each()
[2m[36m(pid=48443)[0m     @     0x7fad49069d91 at::TensorIterator::for_each()
[2m[36m(pid=48443)[0m     @     0x7fad4994cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48443)[0m     @     0x7fad4996fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48443)[0m     @     0x7fad48e11a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48443)[0m     @     0x7fad48e0f388 at::native::copy_impl()
[2m[36m(pid=48467)[0m     @     0x7f4c57325d91 at::TensorIterator::for_each()
[2m[36m(pid=48467)[0m     @     0x7f4c57c08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48467)[0m     @     0x7f4c57c2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48467)[0m     @     0x7f4c570cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48467)[0m     @     0x7f4c570cb388 at::native::copy_impl()
[2m[36m(pid=48467)[0m     @     0x7f4c570cd5a4 at::native::copy_()
[2m[36m(pid=48467)[0m     @     0x7f4c577b84f5 at::Tensor::copy_()
[2m[36m(pid=48474)[0m     @     0x7fc60beaaad3 at::TensorIterator::for_each()
[2m[36m(pid=48506)[0m     @     0x7ece51a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=48506)[0m     @     0x7ece51a79d91 at::TensorIterator::for_each()
[2m[36m(pid=48506)[0m     @     0x7ece5235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48506)[0m     @     0x7ece5237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48506)[0m     @     0x7ece51821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48506)[0m     @     0x7ece5181f388 at::native::copy_impl()
[2m[36m(pid=48477)[0m     @     0x7f82531b6d91 at::TensorIterator::for_each()
[2m[36m(pid=48477)[0m     @     0x7f8253a99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48477)[0m     @     0x7f8253abcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48477)[0m     @     0x7f8252f5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48477)[0m     @     0x7f8252f5c388 at::native::copy_impl()
[2m[36m(pid=48477)[0m     @     0x7f8252f5e5a4 at::native::copy_()
[2m[36m(pid=48477)[0m     @     0x7f82536494f5 at::Tensor::copy_()
[2m[36m(pid=48387)[0m     @     0x7f6635c27d91 at::TensorIterator::for_each()
[2m[36m(pid=48387)[0m     @     0x7f663650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48387)[0m     @     0x7f663652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48387)[0m     @     0x7f66359cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48387)[0m     @     0x7f66359cd388 at::native::copy_impl()
[2m[36m(pid=48387)[0m     @     0x7f66359cf5a4 at::native::copy_()
[2m[36m(pid=48440)[0m     @     0x7f700c492d91 at::TensorIterator::for_each()
[2m[36m(pid=48440)[0m     @     0x7f700cd75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48440)[0m     @     0x7f700cd98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48440)[0m     @     0x7f700c23aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48440)[0m     @     0x7f700c238388 at::native::copy_impl()
[2m[36m(pid=48440)[0m     @     0x7f700c23a5a4 at::native::copy_()
[2m[36m(pid=48433)[0m     @     0x7f89479be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48433)[0m     @     0x7f89479bead3 at::TensorIterator::for_each()
[2m[36m(pid=48433)[0m     @     0x7f89479bed91 at::TensorIterator::for_each()
[2m[36m(pid=48433)[0m     @     0x7f89482a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48433)[0m     @     0x7f89482c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48463)[0m     @     0x7ef039a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48463)[0m     @     0x7ef039a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=48463)[0m     @     0x7ef039a79d91 at::TensorIterator::for_each()
[2m[36m(pid=48463)[0m     @     0x7ef03a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48417)[0m     @     0x7fb8c5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=48417)[0m     @     0x7fb8c5868d91 at::TensorIterator::for_each()
[2m[36m(pid=48417)[0m     @     0x7fb8c614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48417)[0m     @     0x7fb8c616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48417)[0m     @     0x7fb8c5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48417)[0m     @     0x7fb8c560e388 at::native::copy_impl()
[2m[36m(pid=48484)[0m     @     0x7f6e10e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=48484)[0m     @     0x7f6e10e22d91 at::TensorIterator::for_each()
[2m[36m(pid=48484)[0m     @     0x7f6e11705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48484)[0m     @     0x7f6e11728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48484)[0m     @     0x7f6e10bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48484)[0m     @     0x7f6e10bc8388 at::native::copy_impl()
[2m[36m(pid=48384)[0m     @     0x7fc71d7a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=48384)[0m     @     0x7fc71d7a8d91 at::TensorIterator::for_each()
[2m[36m(pid=48384)[0m     @     0x7fc71e08bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48384)[0m     @     0x7fc71e0aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48384)[0m     @     0x7fc71d550a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48384)[0m     @     0x7fc71d54e388 at::native::copy_impl()
[2m[36m(pid=48478)[0m     @     0x7fa875d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=48478)[0m     @     0x7fa87547d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48478)[0m     @     0x7fa8754808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48478)[0m     @     0x7fa875480ad3 at::TensorIterator::for_each()
[2m[36m(pid=48448)[0m     @     0x7f38be31cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48448)[0m     @     0x7f38be33fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48448)[0m     @     0x7f38bd7e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48448)[0m     @     0x7f38bd7df388 at::native::copy_impl()
[2m[36m(pid=48448)[0m     @     0x7f38bd7e15a4 at::native::copy_()
[2m[36m(pid=48405)[0m     @     0x7f2806d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48405)[0m     @     0x7f2806d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=48405)[0m     @     0x7f2806d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=48405)[0m     @     0x7f2807630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48410)[0m     @     0x7f3c3a31cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48410)[0m     @     0x7f3c3a33fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48410)[0m     @     0x7f3c397e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48410)[0m     @     0x7f3c397df388 at::native::copy_impl()
[2m[36m(pid=48410)[0m     @     0x7f3c397e15a4 at::native::copy_()
[2m[36m(pid=48386)[0m     @     0x7f44c6fccd91 at::TensorIterator::for_each()
[2m[36m(pid=48386)[0m     @     0x7f44c78afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48386)[0m     @     0x7f44c78d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48386)[0m     @     0x7f44c6d74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48386)[0m     @     0x7f44c6d72388 at::native::copy_impl()
[2m[36m(pid=48456)[0m     @     0x7f26e4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=48456)[0m     @     0x7f26e580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48456)[0m     @     0x7f26e582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48456)[0m     @     0x7f26e4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48456)[0m     @     0x7f26e4ccd388 at::native::copy_impl()
[2m[36m(pid=48415)[0m     @     0x7f91db9be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48415)[0m     @     0x7f91db9bead3 at::TensorIterator::for_each()
[2m[36m(pid=48415)[0m     @     0x7f91db9bed91 at::TensorIterator::for_each()
[2m[36m(pid=48403)[0m     @     0x7f8d98b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48403)[0m     @     0x7f8d98b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48403)[0m     @     0x7f8d98011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48403)[0m     @     0x7f8d9800f388 at::native::copy_impl()
[2m[36m(pid=48403)[0m     @     0x7f8d980115a4 at::native::copy_()
[2m[36m(pid=48520)[0m     @     0x7f80316e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48520)[0m     @     0x7f8030b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48520)[0m     @     0x7f8030b88388 at::native::copy_impl()
[2m[36m(pid=48520)[0m     @     0x7f8030b8a5a4 at::native::copy_()
[2m[36m(pid=48413)[0m     @     0x7f50b3c91d91 at::TensorIterator::for_each()
[2m[36m(pid=48413)[0m     @     0x7f50b4574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48413)[0m     @     0x7f50b4597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48413)[0m     @     0x7f50b3a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48413)[0m     @     0x7f50b3a37388 at::native::copy_impl()
[2m[36m(pid=48465)[0m     @     0x7ecd6c7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=48465)[0m     @     0x7ecd6d099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48465)[0m     @     0x7ecd6d0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48465)[0m     @     0x7ecd6c55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48465)[0m     @     0x7ecd6c55c388 at::native::copy_impl()
[2m[36m(pid=48488)[0m     @     0x7f3937766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48488)[0m     @     0x7f3937764388 at::native::copy_impl()
[2m[36m(pid=48488)[0m     @     0x7f39377665a4 at::native::copy_()
[2m[36m(pid=48488)[0m     @     0x7f3937e514f5 at::Tensor::copy_()
[2m[36m(pid=48412)[0m     @     0x7f893e94bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48412)[0m     @     0x7f893e96ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48412)[0m     @     0x7f893de10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48412)[0m     @     0x7f893de0e388 at::native::copy_impl()
[2m[36m(pid=48412)[0m     @     0x7f893de105a4 at::native::copy_()
[2m[36m(pid=48383)[0m     @     0x7fb0ccc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48383)[0m     @     0x7fb0cc0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48383)[0m     @     0x7fb0cc0a5388 at::native::copy_impl()
[2m[36m(pid=48383)[0m     @     0x7fb0cc0a75a4 at::native::copy_()
[2m[36m(pid=48400)[0m     @     0x7eebeb11cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48400)[0m     @     0x7eebea5bea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48400)[0m     @     0x7eebea5bc388 at::native::copy_impl()
[2m[36m(pid=48400)[0m     @     0x7eebea5be5a4 at::native::copy_()
[2m[36m(pid=48450)[0m     @     0x7ef41bf61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48450)[0m     @     0x7ef41bf5f388 at::native::copy_impl()
[2m[36m(pid=48450)[0m     @     0x7ef41bf615a4 at::native::copy_()
[2m[36m(pid=48388)[0m     @     0x7efda5be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48388)[0m     @     0x7efda5bde388 at::native::copy_impl()
[2m[36m(pid=48388)[0m     @     0x7efda5be05a4 at::native::copy_()
[2m[36m(pid=48391)[0m     @     0x7efd87e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48391)[0m     @     0x7efd87e14388 at::native::copy_impl()
[2m[36m(pid=48391)[0m     @     0x7efd87e165a4 at::native::copy_()
[2m[36m(pid=48391)[0m     @     0x7efd885014f5 at::Tensor::copy_()
[2m[36m(pid=48437)[0m     @     0x7f804c164d91 at::TensorIterator::for_each()
[2m[36m(pid=48437)[0m     @     0x7f804ca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48437)[0m     @     0x7f804ca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48437)[0m     @     0x7f804bf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48437)[0m     @     0x7f804bf0a388 at::native::copy_impl()
[2m[36m(pid=48437)[0m     @     0x7f804bf0c5a4 at::native::copy_()
[2m[36m(pid=48402)[0m     @     0x7f282ec7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48402)[0m     @     0x7f282ec7d388 at::native::copy_impl()
[2m[36m(pid=48402)[0m     @     0x7f282ec7f5a4 at::native::copy_()
[2m[36m(pid=48402)[0m     @     0x7f282f36a4f5 at::Tensor::copy_()
[2m[36m(pid=48510)[0m     @     0x7fb1cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=48510)[0m     @     0x7fb1d3fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48510)[0m     @     0x55cd44c4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48510)[0m     @     0x55cd44ba9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x55cd44c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=48510)[0m     @     0x55cd44c35a20 method_vectorcall
[2m[36m(pid=48510)[0m     @     0x55cd44ba9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x55cd44c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=48510)[0m     @     0x55cd44c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48510)[0m     @     0x55cd44baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x55cd44c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=48510)[0m     @     0x55cd44c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48510)[0m     @     0x55cd44baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x55cd44c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=48510)[0m     @     0x55cd44c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48510)[0m     @     0x55cd44baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48510)[0m     @     0x55cd44c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=48510)[0m     @     0x55cd44c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48510)[0m     @     0x55cd44baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x7f1bbed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=48481)[0m     @     0x7f1bbed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=48481)[0m     @     0x7f1bbed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=48385)[0m     @     0x7f61a128dd91 at::TensorIterator::for_each()
[2m[36m(pid=48385)[0m     @     0x7f61a1b70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48385)[0m     @     0x7f61a1b93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48385)[0m     @     0x7f61a1035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48385)[0m     @     0x7f61a1033388 at::native::copy_impl()
[2m[36m(pid=48490)[0m     @     0x7f8d7837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48490)[0m     @     0x7f8d78378388 at::native::copy_impl()
[2m[36m(pid=48490)[0m     @     0x7f8d7837a5a4 at::native::copy_()
[2m[36m(pid=48490)[0m     @     0x7f8d78a654f5 at::Tensor::copy_()
[2m[36m(pid=48490)[0m     @     0x7f8d7af388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48504)[0m     @     0x7f7b32c024f5 at::Tensor::copy_()
[2m[36m(pid=48504)[0m     @     0x7f7b38cad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48504)[0m     @     0x557fdeaeefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48504)[0m     @     0x557fdea49b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x557fdead4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48504)[0m     @     0x557fdead5a20 method_vectorcall
[2m[36m(pid=48504)[0m     @     0x557fdea49bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x557fdead4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48504)[0m     @     0x557fdead5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48504)[0m     @     0x557fdea4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x557fdead4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48504)[0m     @     0x557fdead5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48504)[0m     @     0x557fdea4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x557fdead4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48504)[0m     @     0x557fdead5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48504)[0m     @     0x557fdea4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48504)[0m     @     0x557fdead4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48504)[0m     @     0x557fdead5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48504)[0m     @     0x557fdea4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x7fa254e91388 at::native::copy_impl()
[2m[36m(pid=48395)[0m     @     0x7fa254e935a4 at::native::copy_()
[2m[36m(pid=48395)[0m     @     0x7fa25557e4f5 at::Tensor::copy_()
[2m[36m(pid=48395)[0m     @     0x7fa257a518de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48395)[0m     @     0x7fa25557e4f5 at::Tensor::copy_()
[2m[36m(pid=48398)[0m     @     0x7f2cdb2df388 at::native::copy_impl()
[2m[36m(pid=48398)[0m     @     0x7f2cdb2e15a4 at::native::copy_()
[2m[36m(pid=48398)[0m     @     0x7f2cdb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=48398)[0m     @     0x7f2cdde9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48398)[0m     @     0x7f2cdb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=48398)[0m     @     0x7f2ce1a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48398)[0m     @     0x55ba5ecf3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48398)[0m     @     0x55ba5ec4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48398)[0m     @     0x55ba5ecd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48398)[0m     @     0x55ba5ecdaa20 method_vectorcall
[2m[36m(pid=48398)[0m     @     0x55ba5ec4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48460)[0m     @     0x556e7c780baf _PyEval_EvalCodeWithName
[2m[36m(pid=48460)[0m     @     0x556e7c781a20 method_vectorcall
[2m[36m(pid=48460)[0m     @     0x556e7c6f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48460)[0m     @     0x556e7c780baf _PyEval_EvalCodeWithName
[2m[36m(pid=48460)[0m     @     0x556e7c781643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48460)[0m     @     0x556e7c6f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48460)[0m     @     0x556e7c780baf _PyEval_EvalCodeWithName
[2m[36m(pid=48460)[0m     @     0x556e7c781643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48460)[0m     @     0x556e7c6f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48460)[0m     @     0x556e7c780baf _PyEval_EvalCodeWithName
[2m[36m(pid=48460)[0m     @     0x556e7c781643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48460)[0m     @     0x556e7c6f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48460)[0m     @     0x556e7c780baf _PyEval_EvalCodeWithName
[2m[36m(pid=48460)[0m     @     0x556e7c781643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48460)[0m     @     0x556e7c6f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x7f97f6ef95a4 at::native::copy_()
[2m[36m(pid=48501)[0m     @     0x7f97f75e44f5 at::Tensor::copy_()
[2m[36m(pid=48501)[0m     @     0x7f97f9ab78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48501)[0m     @     0x7f97f75e44f5 at::Tensor::copy_()
[2m[36m(pid=48501)[0m     @     0x7f97fd68f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48501)[0m     @     0x563bb861ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48501)[0m     @     0x563bb857ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x563bb8605baf _PyEval_EvalCodeWithName
[2m[36m(pid=48501)[0m     @     0x563bb8606a20 method_vectorcall
[2m[36m(pid=48501)[0m     @     0x563bb857abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x563bb8605baf _PyEval_EvalCodeWithName
[2m[36m(pid=48501)[0m     @     0x563bb8606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48501)[0m     @     0x563bb857b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x563bb8605baf _PyEval_EvalCodeWithName
[2m[36m(pid=48501)[0m     @     0x563bb8606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48501)[0m     @     0x563bb857b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x563bb8605baf _PyEval_EvalCodeWithName
[2m[36m(pid=48501)[0m     @     0x563bb8606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48501)[0m     @     0x563bb857b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48501)[0m     @     0x563bb8605baf _PyEval_EvalCodeWithName
[2m[36m(pid=48501)[0m     @     0x563bb8606643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48501)[0m     @     0x563bb857b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48518)[0m     @     0x55bd89e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48518)[0m     @     0x55bd89df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48518)[0m     @     0x55bd89e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48518)[0m     @     0x55bd89df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48518)[0m     @     0x55bd89e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48518)[0m     @     0x55bd89e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48518)[0m     @     0x55bd89df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x7f39b6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48408)[0m     @     0x7f39b6db2388 at::native::copy_impl()
[2m[36m(pid=48408)[0m     @     0x7f39b6db45a4 at::native::copy_()
[2m[36m(pid=48408)[0m     @     0x7f39b749f4f5 at::Tensor::copy_()
[2m[36m(pid=48408)[0m     @     0x7f39b99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48411)[0m     @     0x7f58eec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48411)[0m     @     0x7f58eec25388 at::native::copy_impl()
[2m[36m(pid=48411)[0m     @     0x7f58eec275a4 at::native::copy_()
[2m[36m(pid=48411)[0m     @     0x7f58ef3124f5 at::Tensor::copy_()
[2m[36m(pid=48411)[0m     @     0x7f58f17e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48401)[0m     @     0x7f3a074f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48401)[0m     @     0x7f3a074f0388 at::native::copy_impl()
[2m[36m(pid=48401)[0m     @     0x7f3a074f25a4 at::native::copy_()
[2m[36m(pid=48401)[0m     @     0x7f3a07bdd4f5 at::Tensor::copy_()
[2m[36m(pid=48401)[0m     @     0x7f3a0a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48482)[0m     @     0x7f8183a37388 at::native::copy_impl()
[2m[36m(pid=48482)[0m     @     0x7f8183a395a4 at::native::copy_()
[2m[36m(pid=48482)[0m     @     0x7f81841244f5 at::Tensor::copy_()
[2m[36m(pid=48482)[0m     @     0x7f81865f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48390)[0m     @     0x7fb87aac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48390)[0m     @     0x7fb87aac6388 at::native::copy_impl()
[2m[36m(pid=48390)[0m     @     0x7fb87aac85a4 at::native::copy_()
[2m[36m(pid=48390)[0m     @     0x7fb87b1b34f5 at::Tensor::copy_()
[2m[36m(pid=48390)[0m     @     0x7fb87d6868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48397)[0m     @     0x7f42bff0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48397)[0m     @     0x7f42bff0a388 at::native::copy_impl()
[2m[36m(pid=48397)[0m     @     0x7f42bff0c5a4 at::native::copy_()
[2m[36m(pid=48397)[0m     @     0x7f42c05f74f5 at::Tensor::copy_()
[2m[36m(pid=48397)[0m     @     0x7f42c2aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48404)[0m     @     0x7efa17a395a4 at::native::copy_()
[2m[36m(pid=48404)[0m     @     0x7efa181244f5 at::Tensor::copy_()
[2m[36m(pid=48404)[0m     @     0x7efa1a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48416)[0m     @     0x7f5021552d91 at::TensorIterator::for_each()
[2m[36m(pid=48416)[0m     @     0x7f5021e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48416)[0m     @     0x7f5021e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48416)[0m     @     0x7f50212faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48416)[0m     @     0x7f50212f8388 at::native::copy_impl()
[2m[36m(pid=48451)[0m     @     0x7f7b3ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48451)[0m     @     0x7f7b3ba37388 at::native::copy_impl()
[2m[36m(pid=48451)[0m     @     0x7f7b3ba395a4 at::native::copy_()
[2m[36m(pid=48451)[0m     @     0x7f7b3c1244f5 at::Tensor::copy_()
[2m[36m(pid=48464)[0m     @     0x7f945c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48464)[0m     @     0x7f945bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48464)[0m     @     0x7f945bc48388 at::native::copy_impl()
[2m[36m(pid=48464)[0m     @     0x7f945bc4a5a4 at::native::copy_()
[2m[36m(pid=48389)[0m     @     0x7f455d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48389)[0m     @     0x7f455d2f8388 at::native::copy_impl()
[2m[36m(pid=48389)[0m     @     0x7f455d2fa5a4 at::native::copy_()
[2m[36m(pid=48389)[0m     @     0x7f455d9e54f5 at::Tensor::copy_()
[2m[36m(pid=48396)[0m     @     0x7eed608a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48396)[0m     @     0x7eed608a0388 at::native::copy_impl()
[2m[36m(pid=48396)[0m     @     0x7eed608a25a4 at::native::copy_()
[2m[36m(pid=48396)[0m     @     0x7eed60f8d4f5 at::Tensor::copy_()
[2m[36m(pid=48507)[0m     @     0x7facfde38d91 at::TensorIterator::for_each()
[2m[36m(pid=48507)[0m     @     0x7facfe71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48507)[0m     @     0x7facfe73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48507)[0m     @     0x7facfdbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48507)[0m     @     0x7facfdbde388 at::native::copy_impl()
[2m[36m(pid=48507)[0m     @     0x7facfdbe05a4 at::native::copy_()
[2m[36m(pid=48453)[0m     @     0x7ed1ead20d91 at::TensorIterator::for_each()
[2m[36m(pid=48453)[0m     @     0x7ed1eb603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48453)[0m     @     0x7ed1eb626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48453)[0m     @     0x7ed1eaac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48453)[0m     @     0x7ed1eaac6388 at::native::copy_impl()
[2m[36m(pid=48491)[0m     @     0x7ece292fa5a4 at::native::copy_()
[2m[36m(pid=48491)[0m     @     0x7ece299e54f5 at::Tensor::copy_()
[2m[36m(pid=48491)[0m     @     0x7ece2beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48491)[0m     @     0x7ece299e54f5 at::Tensor::copy_()
[2m[36m(pid=48473)[0m     @     0x7f482481da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48473)[0m     @     0x7f482481b388 at::native::copy_impl()
[2m[36m(pid=48473)[0m     @     0x7f482481d5a4 at::native::copy_()
[2m[36m(pid=48473)[0m     @     0x7f4824f084f5 at::Tensor::copy_()
[2m[36m(pid=48442)[0m     @     0x7f3b9afccad3 at::TensorIterator::for_each()
[2m[36m(pid=48442)[0m     @     0x7f3b9afccd91 at::TensorIterator::for_each()
[2m[36m(pid=48442)[0m     @     0x7f3b9b8afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48442)[0m     @     0x7f3b9b8d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48497)[0m     @     0x7f31199cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48497)[0m     @     0x7f31199cd388 at::native::copy_impl()
[2m[36m(pid=48497)[0m     @     0x7f31199cf5a4 at::native::copy_()
[2m[36m(pid=48392)[0m     @     0x7ed208f27d91 at::TensorIterator::for_each()
[2m[36m(pid=48392)[0m     @     0x7ed20980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48392)[0m     @     0x7ed20982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48392)[0m     @     0x7ed208ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48392)[0m     @     0x7ed208ccd388 at::native::copy_impl()
[2m[36m(pid=48468)[0m     @     0x7fc54f1f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48468)[0m     @     0x7fc54f1f2388 at::native::copy_impl()
[2m[36m(pid=48468)[0m     @     0x7fc54f1f45a4 at::native::copy_()
[2m[36m(pid=48443)[0m     @     0x7fad48e115a4 at::native::copy_()
[2m[36m(pid=48443)[0m     @     0x7fad494fc4f5 at::Tensor::copy_()
[2m[36m(pid=48467)[0m     @     0x7f4c59c8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48467)[0m     @     0x7f4c577b84f5 at::Tensor::copy_()
[2m[36m(pid=48467)[0m     @     0x7f4c5d86379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48467)[0m     @     0x560a5b086fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48467)[0m     @     0x560a5afe1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48467)[0m     @     0x560a5b06cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48467)[0m     @     0x560a5b06da20 method_vectorcall
[2m[36m(pid=48467)[0m     @     0x560a5afe1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48467)[0m     @     0x560a5b06cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48467)[0m     @     0x560a5b06d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48467)[0m     @     0x560a5afe2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48467)[0m     @     0x560a5b06cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48467)[0m     @     0x560a5b06d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48467)[0m     @     0x560a5afe2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48467)[0m     @     0x560a5b06cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48467)[0m     @     0x560a5b06d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48467)[0m     @     0x560a5afe2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48467)[0m     @     0x560a5b06cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48467)[0m     @     0x560a5b06d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48467)[0m     @     0x560a5afe2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x7ece518215a4 at::native::copy_()
[2m[36m(pid=48506)[0m     @     0x7ece51f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48506)[0m     @     0x7ece543df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48477)[0m     @     0x7f8255b1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48477)[0m     @     0x7f82536494f5 at::Tensor::copy_()
[2m[36m(pid=48477)[0m     @     0x7f82596f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48477)[0m     @     0x55879c8e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48477)[0m     @     0x55879c840b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48477)[0m     @     0x55879c8cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48477)[0m     @     0x55879c8cca20 method_vectorcall
[2m[36m(pid=48477)[0m     @     0x55879c840bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48477)[0m     @     0x55879c8cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48477)[0m     @     0x55879c8cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48477)[0m     @     0x55879c841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48477)[0m     @     0x55879c8cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48477)[0m     @     0x55879c8cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48477)[0m     @     0x55879c841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48477)[0m     @     0x55879c8cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48477)[0m     @     0x55879c8cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48477)[0m     @     0x55879c841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48477)[0m     @     0x55879c8cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48477)[0m     @     0x55879c8cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48477)[0m     @     0x55879c841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x7f66360ba4f5 at::Tensor::copy_()
[2m[36m(pid=48387)[0m     @     0x7f663858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48387)[0m     @     0x7f66360ba4f5 at::Tensor::copy_()
[2m[36m(pid=48440)[0m     @     0x7f700c9254f5 at::Tensor::copy_()
[2m[36m(pid=48440)[0m     @     0x7f700edf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48433)[0m     @     0x7f8947766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48433)[0m     @     0x7f8947764388 at::native::copy_impl()
[2m[36m(pid=48433)[0m     @     0x7f89477665a4 at::native::copy_()
[2m[36m(pid=48463)[0m     @     0x7ef03a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48463)[0m     @     0x7ef039821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48463)[0m     @     0x7ef03981f388 at::native::copy_impl()
[2m[36m(pid=48417)[0m     @     0x7fb8c56105a4 at::native::copy_()
[2m[36m(pid=48417)[0m     @     0x7fb8c5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=48417)[0m     @     0x7fb8c81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48484)[0m     @     0x7f6e10bca5a4 at::native::copy_()
[2m[36m(pid=48484)[0m     @     0x7f6e112b54f5 at::Tensor::copy_()
[2m[36m(pid=48484)[0m     @     0x7f6e137888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48484)[0m     @     0x7f6e112b54f5 at::Tensor::copy_()
[2m[36m(pid=48484)[0m     @     0x7f6e1736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48484)[0m     @     0x56012477cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48484)[0m     @     0x5601246d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48484)[0m     @     0x560124762baf _PyEval_EvalCodeWithName
[2m[36m(pid=48484)[0m     @     0x560124763a20 method_vectorcall
[2m[36m(pid=48484)[0m     @     0x5601246d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48484)[0m     @     0x560124762baf _PyEval_EvalCodeWithName
[2m[36m(pid=48484)[0m     @     0x560124763643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48484)[0m     @     0x5601246d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48484)[0m     @     0x560124762baf _PyEval_EvalCodeWithName
[2m[36m(pid=48484)[0m     @     0x560124763643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48484)[0m     @     0x5601246d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48484)[0m     @     0x560124762baf _PyEval_EvalCodeWithName
[2m[36m(pid=48484)[0m     @     0x560124763643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48484)[0m     @     0x5601246d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x7fc71d5505a4 at::native::copy_()
[2m[36m(pid=48384)[0m     @     0x7fc71dc3b4f5 at::Tensor::copy_()
[2m[36m(pid=48384)[0m     @     0x7fc72010e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48384)[0m     @     0x7fc71dc3b4f5 at::Tensor::copy_()
[2m[36m(pid=48478)[0m     @     0x7fa875480d91 at::TensorIterator::for_each()
[2m[36m(pid=48478)[0m     @     0x7fa875d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48478)[0m     @     0x7fa875d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48478)[0m     @     0x7fa875228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48478)[0m     @     0x7fa875226388 at::native::copy_impl()
[2m[36m(pid=48478)[0m     @     0x7fa8752285a4 at::native::copy_()
[2m[36m(pid=48478)[0m     @     0x7fa8759134f5 at::Tensor::copy_()
[2m[36m(pid=48448)[0m     @     0x7f38bdecc4f5 at::Tensor::copy_()
[2m[36m(pid=48448)[0m     @     0x7f38c039f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48448)[0m     @     0x7f38bdecc4f5 at::Tensor::copy_()
[2m[36m(pid=48448)[0m     @     0x7f38c3f7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48448)[0m     @     0x55baa6758fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48448)[0m     @     0x55baa66b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48448)[0m     @     0x55baa673ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48448)[0m     @     0x55baa673fa20 method_vectorcall
[2m[36m(pid=48448)[0m     @     0x55baa66b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48448)[0m     @     0x55baa673ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48448)[0m     @     0x55baa673f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48448)[0m     @     0x55baa66b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48448)[0m     @     0x55baa673ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48448)[0m     @     0x55baa673f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48448)[0m     @     0x55baa66b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48448)[0m     @     0x55baa673ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48448)[0m     @     0x55baa673f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48448)[0m     @     0x55baa66b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48448)[0m     @     0x55baa673ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48448)[0m     @     0x55baa673f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48448)[0m     @     0x55baa66b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x7f2807653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48405)[0m     @     0x7f2806af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48405)[0m     @     0x7f2806af3388 at::native::copy_impl()
[2m[36m(pid=48405)[0m     @     0x7f2806af55a4 at::native::copy_()
[2m[36m(pid=48410)[0m     @     0x7f3c39ecc4f5 at::Tensor::copy_()
[2m[36m(pid=48410)[0m     @     0x7f3c3c39f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48410)[0m     @     0x7f3c39ecc4f5 at::Tensor::copy_()
[2m[36m(pid=48410)[0m     @     0x7f3c3ff7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48410)[0m     @     0x55fa7a996fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48410)[0m     @     0x55fa7a8f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48410)[0m     @     0x55fa7a97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48410)[0m     @     0x55fa7a97da20 method_vectorcall
[2m[36m(pid=48410)[0m     @     0x55fa7a8f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48410)[0m     @     0x55fa7a97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48410)[0m     @     0x55fa7a97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48410)[0m     @     0x55fa7a8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48410)[0m     @     0x55fa7a97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48410)[0m     @     0x55fa7a97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48410)[0m     @     0x55fa7a8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48410)[0m     @     0x55fa7a97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48410)[0m     @     0x55fa7a97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48410)[0m     @     0x55fa7a8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48410)[0m     @     0x55fa7a97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48410)[0m     @     0x55fa7a97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48410)[0m     @     0x55fa7a8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x7f44c6d745a4 at::native::copy_()
[2m[36m(pid=48386)[0m     @     0x7f44c745f4f5 at::Tensor::copy_()
[2m[36m(pid=48386)[0m     @     0x7f44c99328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48386)[0m     @     0x7f44c745f4f5 at::Tensor::copy_()
[2m[36m(pid=48386)[0m     @     0x7f44cd50a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48386)[0m     @     0x55962ec1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48386)[0m     @     0x55962eb7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962ec05baf _PyEval_EvalCodeWithName
[2m[36m(pid=48386)[0m     @     0x55962ec06a20 method_vectorcall
[2m[36m(pid=48386)[0m     @     0x55962eb7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962ec05baf _PyEval_EvalCodeWithName
[2m[36m(pid=48386)[0m     @     0x55962ec06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48386)[0m     @     0x55962eb7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962ec05baf _PyEval_EvalCodeWithName
[2m[36m(pid=48386)[0m     @     0x55962ec06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48456)[0m     @     0x7f26e4ccf5a4 at::native::copy_()
[2m[36m(pid=48456)[0m     @     0x7f26e53ba4f5 at::Tensor::copy_()
[2m[36m(pid=48456)[0m     @     0x7f26e788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48456)[0m     @     0x7f26e53ba4f5 at::Tensor::copy_()
[2m[36m(pid=48456)[0m     @     0x7f26eb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48456)[0m     @     0x55fb055d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48456)[0m     @     0x55fb05532b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48456)[0m     @     0x55fb055bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48456)[0m     @     0x55fb055bea20 method_vectorcall
[2m[36m(pid=48456)[0m     @     0x55fb05532bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x7f91dc2a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48415)[0m     @     0x7f91dc2c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48415)[0m     @     0x7f91db766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48415)[0m     @     0x7f91db764388 at::native::copy_impl()
[2m[36m(pid=48415)[0m     @     0x7f91db7665a4 at::native::copy_()
[2m[36m(pid=48403)[0m     @     0x7f8d986fc4f5 at::Tensor::copy_()
[2m[36m(pid=48403)[0m     @     0x7f8d9abcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48403)[0m     @     0x7f8d986fc4f5 at::Tensor::copy_()
[2m[36m(pid=48403)[0m     @     0x7f8d9e7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48403)[0m     @     0x56181e9e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48403)[0m     @     0x56181e93cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48403)[0m     @     0x56181e9c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48403)[0m     @     0x56181e9c8a20 method_vectorcall
[2m[36m(pid=48403)[0m     @     0x56181e93cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48403)[0m     @     0x56181e9c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48403)[0m     @     0x56181e9c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48403)[0m     @     0x56181e93d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48403)[0m     @     0x56181e9c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48403)[0m     @     0x56181e9c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48403)[0m     @     0x56181e93d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48403)[0m     @     0x56181e9c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48403)[0m     @     0x56181e9c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48403)[0m     @     0x56181e93d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48403)[0m     @     0x56181e9c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48403)[0m     @     0x56181e9c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48403)[0m     @     0x56181e93d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x7f80312754f5 at::Tensor::copy_()
[2m[36m(pid=48520)[0m     @     0x7f80337488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48520)[0m     @     0x7f80312754f5 at::Tensor::copy_()
[2m[36m(pid=48520)[0m     @     0x7f803732079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48520)[0m     @     0x560d3cdb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48520)[0m     @     0x560d3cd11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x560d3cd9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48520)[0m     @     0x560d3cd9da20 method_vectorcall
[2m[36m(pid=48520)[0m     @     0x560d3cd11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x560d3cd9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48520)[0m     @     0x560d3cd9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48520)[0m     @     0x560d3cd12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x560d3cd9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48520)[0m     @     0x560d3cd9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48520)[0m     @     0x560d3cd12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x560d3cd9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48520)[0m     @     0x560d3cd9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48520)[0m     @     0x560d3cd12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48520)[0m     @     0x560d3cd9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48520)[0m     @     0x560d3cd9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48520)[0m     @     0x560d3cd12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48413)[0m     @     0x7f50b3a395a4 at::native::copy_()
[2m[36m(pid=48413)[0m     @     0x7f50b41244f5 at::Tensor::copy_()
[2m[36m(pid=48413)[0m     @     0x7f50b65f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48413)[0m     @     0x7f50b41244f5 at::Tensor::copy_()
[2m[36m(pid=48413)[0m     @     0x7f50ba1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48413)[0m     @     0x55ff7a606fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48413)[0m     @     0x55ff7a561b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x7ecd6c55e5a4 at::native::copy_()
[2m[36m(pid=48465)[0m     @     0x7ecd6cc494f5 at::Tensor::copy_()
[2m[36m(pid=48465)[0m     @     0x7ecd6f11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48465)[0m     @     0x7ecd6cc494f5 at::Tensor::copy_()
[2m[36m(pid=48465)[0m     @     0x7ecd72cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48465)[0m     @     0x561d6fee7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48465)[0m     @     0x561d6fe42b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x561d6fecdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48465)[0m     @     0x561d6fecea20 method_vectorcall
[2m[36m(pid=48465)[0m     @     0x561d6fe42bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x561d6fecdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48465)[0m     @     0x561d6fece643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48465)[0m     @     0x561d6fe43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x7f393a3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48488)[0m     @     0x7f3937e514f5 at::Tensor::copy_()
[2m[36m(pid=48488)[0m     @     0x7f393defc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48488)[0m     @     0x564dfd1e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48488)[0m     @     0x564dfd140b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x564dfd1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48488)[0m     @     0x564dfd1cca20 method_vectorcall
[2m[36m(pid=48488)[0m     @     0x564dfd140bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x564dfd1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48488)[0m     @     0x564dfd1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48488)[0m     @     0x564dfd141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x564dfd1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48488)[0m     @     0x564dfd1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48488)[0m     @     0x564dfd141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x564dfd1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48488)[0m     @     0x564dfd1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48488)[0m     @     0x564dfd141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48488)[0m     @     0x564dfd1cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48488)[0m     @     0x564dfd1cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48488)[0m     @     0x564dfd141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x7f893e4fb4f5 at::Tensor::copy_()
[2m[36m(pid=48412)[0m     @     0x7f89409ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48412)[0m     @     0x7f893e4fb4f5 at::Tensor::copy_()
[2m[36m(pid=48412)[0m     @     0x7f89445a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48412)[0m     @     0x562147f8efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48412)[0m     @     0x562147ee9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x562147f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=48412)[0m     @     0x562147f75a20 method_vectorcall
[2m[36m(pid=48412)[0m     @     0x562147ee9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x562147f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=48412)[0m     @     0x562147f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48412)[0m     @     0x562147eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x562147f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=48412)[0m     @     0x562147f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48412)[0m     @     0x562147eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x562147f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=48412)[0m     @     0x562147f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48412)[0m     @     0x562147eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48412)[0m     @     0x562147f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=48412)[0m     @     0x562147f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48412)[0m     @     0x562147eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x7fb0cc7924f5 at::Tensor::copy_()
[2m[36m(pid=48383)[0m     @     0x7fb0cec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48383)[0m     @     0x7fb0cc7924f5 at::Tensor::copy_()
[2m[36m(pid=48383)[0m     @     0x7fb0d283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48383)[0m     @     0x555ed913bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48383)[0m     @     0x555ed9096b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x555ed9121baf _PyEval_EvalCodeWithName
[2m[36m(pid=48383)[0m     @     0x555ed9122a20 method_vectorcall
[2m[36m(pid=48383)[0m     @     0x555ed9096bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x555ed9121baf _PyEval_EvalCodeWithName
[2m[36m(pid=48383)[0m     @     0x555ed9122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48383)[0m     @     0x555ed9097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x555ed9121baf _PyEval_EvalCodeWithName
[2m[36m(pid=48383)[0m     @     0x555ed9122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48383)[0m     @     0x555ed9097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x555ed9121baf _PyEval_EvalCodeWithName
[2m[36m(pid=48383)[0m     @     0x555ed9122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48383)[0m     @     0x555ed9097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48383)[0m     @     0x555ed9121baf _PyEval_EvalCodeWithName
[2m[36m(pid=48383)[0m     @     0x555ed9122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48383)[0m     @     0x555ed9097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x7eebeaca94f5 at::Tensor::copy_()
[2m[36m(pid=48400)[0m     @     0x7eebed17c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48400)[0m     @     0x7eebeaca94f5 at::Tensor::copy_()
[2m[36m(pid=48400)[0m     @     0x7eebf0d5479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48400)[0m     @     0x5589e6437fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48400)[0m     @     0x5589e6392b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x5589e641dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48400)[0m     @     0x5589e641ea20 method_vectorcall
[2m[36m(pid=48400)[0m     @     0x5589e6392bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x5589e641dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48400)[0m     @     0x5589e641e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48400)[0m     @     0x5589e6393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x5589e641dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48400)[0m     @     0x5589e641e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48400)[0m     @     0x5589e6393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x5589e641dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48400)[0m     @     0x5589e641e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48400)[0m     @     0x5589e6393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48400)[0m     @     0x5589e641dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48400)[0m     @     0x5589e641e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48400)[0m     @     0x5589e6393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x7ef41c64c4f5 at::Tensor::copy_()
[2m[36m(pid=48450)[0m     @     0x7ef41eb1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48450)[0m     @     0x7ef41c64c4f5 at::Tensor::copy_()
[2m[36m(pid=48450)[0m     @     0x7ef4226f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48450)[0m     @     0x55803b0effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48450)[0m     @     0x55803b04ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x55803b0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48450)[0m     @     0x55803b0d6a20 method_vectorcall
[2m[36m(pid=48450)[0m     @     0x55803b04abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x55803b0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48450)[0m     @     0x55803b0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48450)[0m     @     0x55803b04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x55803b0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48450)[0m     @     0x55803b0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48450)[0m     @     0x55803b04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x55803b0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48450)[0m     @     0x55803b0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48450)[0m     @     0x55803b04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48450)[0m     @     0x55803b0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48450)[0m     @     0x55803b0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48450)[0m     @     0x55803b04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x7efda62cb4f5 at::Tensor::copy_()
[2m[36m(pid=48388)[0m     @     0x7efda879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48388)[0m     @     0x7efda62cb4f5 at::Tensor::copy_()
[2m[36m(pid=48388)[0m     @     0x7efdac37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48388)[0m     @     0x55b26bca2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48388)[0m     @     0x55b26bbfdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x55b26bc88baf _PyEval_EvalCodeWithName
[2m[36m(pid=48388)[0m     @     0x55b26bc89a20 method_vectorcall
[2m[36m(pid=48388)[0m     @     0x55b26bbfdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x55b26bc88baf _PyEval_EvalCodeWithName
[2m[36m(pid=48388)[0m     @     0x55b26bc89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48388)[0m     @     0x55b26bbfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x55b26bc88baf _PyEval_EvalCodeWithName
[2m[36m(pid=48388)[0m     @     0x55b26bc89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48388)[0m     @     0x55b26bbfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x55b26bc88baf _PyEval_EvalCodeWithName
[2m[36m(pid=48388)[0m     @     0x55b26bc89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48388)[0m     @     0x55b26bbfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48388)[0m     @     0x55b26bc88baf _PyEval_EvalCodeWithName
[2m[36m(pid=48388)[0m     @     0x55b26bc89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48388)[0m     @     0x55b26bbfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x7efd8a9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48391)[0m     @     0x7efd885014f5 at::Tensor::copy_()
[2m[36m(pid=48391)[0m     @     0x7efd8e1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48391)[0m     @     0x565229592fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48391)[0m     @     0x5652294edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x565229578baf _PyEval_EvalCodeWithName
[2m[36m(pid=48391)[0m     @     0x565229579a20 method_vectorcall
[2m[36m(pid=48391)[0m     @     0x5652294edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x565229578baf _PyEval_EvalCodeWithName
[2m[36m(pid=48391)[0m     @     0x565229579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48391)[0m     @     0x5652294ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x565229578baf _PyEval_EvalCodeWithName
[2m[36m(pid=48391)[0m     @     0x565229579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48391)[0m     @     0x5652294ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x565229578baf _PyEval_EvalCodeWithName
[2m[36m(pid=48391)[0m     @     0x565229579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48391)[0m     @     0x5652294ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48391)[0m     @     0x565229578baf _PyEval_EvalCodeWithName
[2m[36m(pid=48391)[0m     @     0x565229579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48391)[0m     @     0x5652294ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x7f804c5f74f5 at::Tensor::copy_()
[2m[36m(pid=48437)[0m     @     0x7f804eaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48437)[0m     @     0x7f804c5f74f5 at::Tensor::copy_()
[2m[36m(pid=48437)[0m     @     0x7f80526a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48437)[0m     @     0x556e9835afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48437)[0m     @     0x556e982b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x556e98340baf _PyEval_EvalCodeWithName
[2m[36m(pid=48437)[0m     @     0x556e98341a20 method_vectorcall
[2m[36m(pid=48437)[0m     @     0x556e982b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x556e98340baf _PyEval_EvalCodeWithName
[2m[36m(pid=48437)[0m     @     0x556e98341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48437)[0m     @     0x556e982b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x7f283183d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48402)[0m     @     0x7f282f36a4f5 at::Tensor::copy_()
[2m[36m(pid=48402)[0m     @     0x7f283541579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48402)[0m     @     0x556b878eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48402)[0m     @     0x556b87849b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x556b878d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48402)[0m     @     0x556b878d5a20 method_vectorcall
[2m[36m(pid=48402)[0m     @     0x556b87849bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x556b878d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48402)[0m     @     0x556b878d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48402)[0m     @     0x556b8784a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x556b878d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48402)[0m     @     0x556b878d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48402)[0m     @     0x556b8784a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x556b878d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48402)[0m     @     0x556b878d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48402)[0m     @     0x556b8784a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48402)[0m     @     0x556b878d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48402)[0m     @     0x556b878d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48402)[0m     @     0x556b8784a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x7f1bbed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=48481)[0m     @     0x7f1bbf630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48481)[0m     @     0x7f1bbf653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48481)[0m     @     0x7f1bbeaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48481)[0m     @     0x7f1bbeaf3388 at::native::copy_impl()
[2m[36m(pid=48481)[0m     @     0x7f1bbeaf55a4 at::native::copy_()
[2m[36m(pid=48385)[0m     @     0x7f61a10355a4 at::native::copy_()
[2m[36m(pid=48385)[0m     @     0x7f61a17204f5 at::Tensor::copy_()
[2m[36m(pid=48385)[0m     @     0x7f61a3bf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48385)[0m     @     0x7f61a17204f5 at::Tensor::copy_()
[2m[36m(pid=48385)[0m     @     0x7f61a77cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48385)[0m     @     0x558bf164ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48385)[0m     @     0x558bf15aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf1635baf _PyEval_EvalCodeWithName
[2m[36m(pid=48385)[0m     @     0x558bf1636a20 method_vectorcall
[2m[36m(pid=48385)[0m     @     0x558bf15aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf1635baf _PyEval_EvalCodeWithName
[2m[36m(pid=48385)[0m     @     0x558bf1636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48385)[0m     @     0x558bf15ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf1635baf _PyEval_EvalCodeWithName
[2m[36m(pid=48385)[0m     @     0x558bf1636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48385)[0m     @     0x558bf15ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf1635baf _PyEval_EvalCodeWithName
[2m[36m(pid=48385)[0m     @     0x558bf1636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48385)[0m     @     0x558bf15ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf1635baf _PyEval_EvalCodeWithName
[2m[36m(pid=48385)[0m     @     0x558bf1636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48490)[0m     @     0x7f8d78a654f5 at::Tensor::copy_()
[2m[36m(pid=48490)[0m     @     0x7f8d7eb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48490)[0m     @     0x55a3f8d35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48490)[0m     @     0x55a3f8c90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48490)[0m     @     0x55a3f8d1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48490)[0m     @     0x55a3f8d1ca20 method_vectorcall
[2m[36m(pid=48490)[0m     @     0x55a3f8c90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48490)[0m     @     0x55a3f8d1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48490)[0m     @     0x55a3f8d1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48490)[0m     @     0x55a3f8c91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48490)[0m     @     0x55a3f8d1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48490)[0m     @     0x55a3f8d1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48490)[0m     @     0x55a3f8c91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48490)[0m     @     0x55a3f8d1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48490)[0m     @     0x55a3f8d1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48490)[0m     @     0x55a3f8c91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48490)[0m     @     0x55a3f8d1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48490)[0m     @     0x55a3f8d1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48490)[0m     @     0x55a3f8c91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x7fa25b62979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48395)[0m     @     0x55bd54e09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48395)[0m     @     0x55bd54d64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x55bd54defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48395)[0m     @     0x55bd54df0a20 method_vectorcall
[2m[36m(pid=48395)[0m     @     0x55bd54d64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x55bd54defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48395)[0m     @     0x55bd54df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48395)[0m     @     0x55bd54d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x55bd54defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48395)[0m     @     0x55bd54df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48395)[0m     @     0x55bd54d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x55bd54defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48395)[0m     @     0x55bd54df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48395)[0m     @     0x55bd54d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48395)[0m     @     0x55bd54defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48395)[0m     @     0x55bd54df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48395)[0m     @     0x55bd54d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48398)[0m     @     0x55ba5ecd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48398)[0m     @     0x55ba5ecda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48398)[0m     @     0x55ba5ec4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48398)[0m     @     0x55ba5ecd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48398)[0m     @     0x55ba5ecda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48398)[0m     @     0x55ba5ec4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48398)[0m     @     0x55ba5ecd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48398)[0m     @     0x55ba5ecda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48398)[0m     @     0x55ba5ec4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48398)[0m     @     0x55ba5ecd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48398)[0m     @     0x55ba5ecda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48398)[0m     @     0x55ba5ec4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x7f39b749f4f5 at::Tensor::copy_()
[2m[36m(pid=48408)[0m     @     0x7f39bd54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48408)[0m     @     0x555eae110fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48408)[0m     @     0x555eae06bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x555eae0f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48408)[0m     @     0x555eae0f7a20 method_vectorcall
[2m[36m(pid=48408)[0m     @     0x555eae06bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x555eae0f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48408)[0m     @     0x555eae0f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48408)[0m     @     0x555eae06c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x555eae0f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48408)[0m     @     0x555eae0f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48408)[0m     @     0x555eae06c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x555eae0f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48408)[0m     @     0x555eae0f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48408)[0m     @     0x555eae06c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48408)[0m     @     0x555eae0f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48408)[0m     @     0x555eae0f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48408)[0m     @     0x555eae06c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x7f58ef3124f5 at::Tensor::copy_()
[2m[36m(pid=48411)[0m     @     0x7f58f53bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48411)[0m     @     0x55ae2bf02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48411)[0m     @     0x55ae2be5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x55ae2bee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=48411)[0m     @     0x55ae2bee9a20 method_vectorcall
[2m[36m(pid=48411)[0m     @     0x55ae2be5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x55ae2bee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=48411)[0m     @     0x55ae2bee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48411)[0m     @     0x55ae2be5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x55ae2bee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=48411)[0m     @     0x55ae2bee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48411)[0m     @     0x55ae2be5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x55ae2bee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=48411)[0m     @     0x55ae2bee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48411)[0m     @     0x55ae2be5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48411)[0m     @     0x55ae2bee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=48411)[0m     @     0x55ae2bee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48411)[0m     @     0x55ae2be5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x7f3a07bdd4f5 at::Tensor::copy_()
[2m[36m(pid=48401)[0m     @     0x7f3a0dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48401)[0m     @     0x5628b60dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48401)[0m     @     0x5628b603ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x5628b60c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48401)[0m     @     0x5628b60c6a20 method_vectorcall
[2m[36m(pid=48401)[0m     @     0x5628b603abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x5628b60c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48401)[0m     @     0x5628b60c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48401)[0m     @     0x5628b603b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x5628b60c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48401)[0m     @     0x5628b60c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48401)[0m     @     0x5628b603b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x5628b60c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48401)[0m     @     0x5628b60c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48401)[0m     @     0x5628b603b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48401)[0m     @     0x5628b60c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=48401)[0m     @     0x5628b60c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48401)[0m     @     0x5628b603b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x7f81841244f5 at::Tensor::copy_()
[2m[36m(pid=48482)[0m     @     0x7f818a1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48482)[0m     @     0x55ee6a5bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48482)[0m     @     0x55ee6a515b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x55ee6a5a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=48482)[0m     @     0x55ee6a5a1a20 method_vectorcall
[2m[36m(pid=48482)[0m     @     0x55ee6a515bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x55ee6a5a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=48482)[0m     @     0x55ee6a5a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48482)[0m     @     0x55ee6a516689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x55ee6a5a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=48482)[0m     @     0x55ee6a5a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48482)[0m     @     0x55ee6a516689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x55ee6a5a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=48482)[0m     @     0x55ee6a5a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48482)[0m     @     0x55ee6a516689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48482)[0m     @     0x55ee6a5a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=48482)[0m     @     0x55ee6a5a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48482)[0m     @     0x55ee6a516689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x7fb87b1b34f5 at::Tensor::copy_()
[2m[36m(pid=48390)[0m     @     0x7fb88125e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48390)[0m     @     0x55c566ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48390)[0m     @     0x55c566e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x55c566ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48390)[0m     @     0x55c566eaaa20 method_vectorcall
[2m[36m(pid=48390)[0m     @     0x55c566e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x55c566ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48390)[0m     @     0x55c566eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48390)[0m     @     0x55c566e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x55c566ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48390)[0m     @     0x55c566eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48390)[0m     @     0x55c566e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x55c566ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48390)[0m     @     0x55c566eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48390)[0m     @     0x55c566e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48390)[0m     @     0x55c566ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48390)[0m     @     0x55c566eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48390)[0m     @     0x55c566e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x7f42c05f74f5 at::Tensor::copy_()
[2m[36m(pid=48397)[0m     @     0x7f42c66a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48397)[0m     @     0x560835ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48397)[0m     @     0x560835e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x560835ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48397)[0m     @     0x560835eaaa20 method_vectorcall
[2m[36m(pid=48397)[0m     @     0x560835e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x560835ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48397)[0m     @     0x560835eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48397)[0m     @     0x560835e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x560835ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48397)[0m     @     0x560835eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48397)[0m     @     0x560835e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x560835ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48397)[0m     @     0x560835eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48397)[0m     @     0x560835e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48397)[0m     @     0x560835ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48397)[0m     @     0x560835eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48397)[0m     @     0x560835e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x7efa181244f5 at::Tensor::copy_()
[2m[36m(pid=48404)[0m     @     0x7efa1e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48404)[0m     @     0x564adc1fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48404)[0m     @     0x564adc159b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x564adc1e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48404)[0m     @     0x564adc1e5a20 method_vectorcall
[2m[36m(pid=48404)[0m     @     0x564adc159bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x564adc1e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48404)[0m     @     0x564adc1e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48404)[0m     @     0x564adc15a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x564adc1e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48404)[0m     @     0x564adc1e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48404)[0m     @     0x564adc15a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x564adc1e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48404)[0m     @     0x564adc1e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48404)[0m     @     0x564adc15a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48404)[0m     @     0x564adc1e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48404)[0m     @     0x564adc1e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48404)[0m     @     0x564adc15a689 _PyEval_EvalFrameDefault.cold.2792
== Status ==
Memory usage on this node: 25.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.1 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_18fcd_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_18fcd_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_18fcd_00000_0_2020-11-05_10-10-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=48416)[0m     @     0x7f50212fa5a4 at::native::copy_()
[2m[36m(pid=48416)[0m     @     0x7f50219e54f5 at::Tensor::copy_()
[2m[36m(pid=48416)[0m     @     0x7f5023eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48416)[0m     @     0x7f50219e54f5 at::Tensor::copy_()
[2m[36m(pid=48416)[0m     @     0x7f5027a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48416)[0m     @     0x555e6dbeefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48416)[0m     @     0x555e6db49b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48416)[0m     @     0x555e6dbd5a20 method_vectorcall
[2m[36m(pid=48416)[0m     @     0x555e6db49bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48416)[0m     @     0x555e6dbd5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48416)[0m     @     0x555e6db4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48416)[0m     @     0x555e6dbd5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48416)[0m     @     0x555e6db4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48416)[0m     @     0x555e6dbd5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48416)[0m     @     0x555e6db4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x7f7b3e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48451)[0m     @     0x7f7b3c1244f5 at::Tensor::copy_()
[2m[36m(pid=48451)[0m     @     0x7f7b421cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48451)[0m     @     0x55eb51546fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48451)[0m     @     0x55eb514a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48451)[0m     @     0x55eb5152cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x55eb5152da20 method_vectorcall
[2m[36m(pid=48451)[0m     @     0x55eb514a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48451)[0m     @     0x55eb5152cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x55eb5152d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48451)[0m     @     0x55eb514a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48451)[0m     @     0x55eb5152cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x55eb5152d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48451)[0m     @     0x55eb514a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48451)[0m     @     0x55eb5152cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x55eb5152d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48451)[0m     @     0x55eb514a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48451)[0m     @     0x55eb5152cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48451)[0m     @     0x55eb5152d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48451)[0m     @     0x55eb514a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x7f945c3354f5 at::Tensor::copy_()
[2m[36m(pid=48464)[0m     @     0x7f945e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48464)[0m     @     0x7f945c3354f5 at::Tensor::copy_()
[2m[36m(pid=48464)[0m     @     0x7f94623e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48464)[0m     @     0x5638ce143fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48464)[0m     @     0x5638ce09eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x5638ce129baf _PyEval_EvalCodeWithName
[2m[36m(pid=48464)[0m     @     0x5638ce12aa20 method_vectorcall
[2m[36m(pid=48464)[0m     @     0x5638ce09ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x5638ce129baf _PyEval_EvalCodeWithName
[2m[36m(pid=48464)[0m     @     0x5638ce12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48464)[0m     @     0x5638ce09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x5638ce129baf _PyEval_EvalCodeWithName
[2m[36m(pid=48464)[0m     @     0x5638ce12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48464)[0m     @     0x5638ce09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x5638ce129baf _PyEval_EvalCodeWithName
[2m[36m(pid=48464)[0m     @     0x5638ce12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48464)[0m     @     0x5638ce09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48464)[0m     @     0x5638ce129baf _PyEval_EvalCodeWithName
[2m[36m(pid=48464)[0m     @     0x5638ce12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48464)[0m     @     0x5638ce09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x7f455feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48389)[0m     @     0x7f455d9e54f5 at::Tensor::copy_()
[2m[36m(pid=48389)[0m     @     0x7f4563a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48389)[0m     @     0x55c97649cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48389)[0m     @     0x55c9763f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x55c976482baf _PyEval_EvalCodeWithName
[2m[36m(pid=48389)[0m     @     0x55c976483a20 method_vectorcall
[2m[36m(pid=48389)[0m     @     0x55c9763f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x55c976482baf _PyEval_EvalCodeWithName
[2m[36m(pid=48389)[0m     @     0x55c976483643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48389)[0m     @     0x55c9763f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x55c976482baf _PyEval_EvalCodeWithName
[2m[36m(pid=48389)[0m     @     0x55c976483643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48389)[0m     @     0x55c9763f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x55c976482baf _PyEval_EvalCodeWithName
[2m[36m(pid=48389)[0m     @     0x55c976483643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48389)[0m     @     0x55c9763f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48389)[0m     @     0x55c976482baf _PyEval_EvalCodeWithName
[2m[36m(pid=48389)[0m     @     0x55c976483643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48389)[0m     @     0x55c9763f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x7eed634608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48396)[0m     @     0x7eed60f8d4f5 at::Tensor::copy_()
[2m[36m(pid=48396)[0m     @     0x7eed6703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48396)[0m     @     0x55cc7176bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48396)[0m     @     0x55cc716c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x55cc71751baf _PyEval_EvalCodeWithName
[2m[36m(pid=48396)[0m     @     0x55cc71752a20 method_vectorcall
[2m[36m(pid=48396)[0m     @     0x55cc716c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x55cc71751baf _PyEval_EvalCodeWithName
[2m[36m(pid=48396)[0m     @     0x55cc71752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48396)[0m     @     0x55cc716c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x55cc71751baf _PyEval_EvalCodeWithName
[2m[36m(pid=48396)[0m     @     0x55cc71752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48396)[0m     @     0x55cc716c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x55cc71751baf _PyEval_EvalCodeWithName
[2m[36m(pid=48396)[0m     @     0x55cc71752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48396)[0m     @     0x55cc716c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48396)[0m     @     0x55cc71751baf _PyEval_EvalCodeWithName
[2m[36m(pid=48396)[0m     @     0x55cc71752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48396)[0m     @     0x55cc716c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x7facfe2cb4f5 at::Tensor::copy_()
[2m[36m(pid=48507)[0m     @     0x7fad0079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48507)[0m     @     0x7facfe2cb4f5 at::Tensor::copy_()
[2m[36m(pid=48507)[0m     @     0x7fad0437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48507)[0m     @     0x5616ab224fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48507)[0m     @     0x5616ab17fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab20abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48507)[0m     @     0x5616ab20ba20 method_vectorcall
[2m[36m(pid=48507)[0m     @     0x5616ab17fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab20abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48507)[0m     @     0x5616ab20b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48507)[0m     @     0x5616ab180689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab20abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48507)[0m     @     0x5616ab20b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48507)[0m     @     0x5616ab180689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab20abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48507)[0m     @     0x5616ab20b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48453)[0m     @     0x7ed1eaac85a4 at::native::copy_()
[2m[36m(pid=48453)[0m     @     0x7ed1eb1b34f5 at::Tensor::copy_()
[2m[36m(pid=48453)[0m     @     0x7ed1ed6868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48453)[0m     @     0x7ed1eb1b34f5 at::Tensor::copy_()
[2m[36m(pid=48491)[0m     @     0x7ece2fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48491)[0m     @     0x55ba3a8d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48491)[0m     @     0x55ba3a82fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48491)[0m     @     0x55ba3a8babaf _PyEval_EvalCodeWithName
[2m[36m(pid=48491)[0m     @     0x55ba3a8bba20 method_vectorcall
[2m[36m(pid=48491)[0m     @     0x55ba3a82fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48491)[0m     @     0x55ba3a8babaf _PyEval_EvalCodeWithName
[2m[36m(pid=48491)[0m     @     0x55ba3a8bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48491)[0m     @     0x55ba3a830689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48491)[0m     @     0x55ba3a8babaf _PyEval_EvalCodeWithName
[2m[36m(pid=48491)[0m     @     0x55ba3a8bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48491)[0m     @     0x55ba3a830689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48491)[0m     @     0x55ba3a8babaf _PyEval_EvalCodeWithName
[2m[36m(pid=48491)[0m     @     0x55ba3a8bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48491)[0m     @     0x55ba3a830689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48491)[0m     @     0x55ba3a8babaf _PyEval_EvalCodeWithName
[2m[36m(pid=48491)[0m     @     0x55ba3a8bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48491)[0m     @     0x55ba3a830689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x7f48273db8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48473)[0m     @     0x7f4824f084f5 at::Tensor::copy_()
[2m[36m(pid=48473)[0m     @     0x7f482afb379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48473)[0m     @     0x5603f1299fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48473)[0m     @     0x5603f11f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x5603f127fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48473)[0m     @     0x5603f1280a20 method_vectorcall
[2m[36m(pid=48473)[0m     @     0x5603f11f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x5603f127fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48473)[0m     @     0x5603f1280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48473)[0m     @     0x5603f11f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x5603f127fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48473)[0m     @     0x5603f1280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48473)[0m     @     0x5603f11f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x5603f127fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48473)[0m     @     0x5603f1280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48473)[0m     @     0x5603f11f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48473)[0m     @     0x5603f127fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48473)[0m     @     0x5603f1280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48473)[0m     @     0x5603f11f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x7f3b9ad74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48442)[0m     @     0x7f3b9ad72388 at::native::copy_impl()
[2m[36m(pid=48442)[0m     @     0x7f3b9ad745a4 at::native::copy_()
[2m[36m(pid=48442)[0m     @     0x7f3b9b45f4f5 at::Tensor::copy_()
[2m[36m(pid=48442)[0m     @     0x7f3b9d9328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48497)[0m     @     0x7f311a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=48497)[0m     @     0x7f311c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48497)[0m     @     0x7f311a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=48497)[0m     @     0x7f312016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48497)[0m     @     0x55a638803fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48497)[0m     @     0x55a63875eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48497)[0m     @     0x55a6387e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48497)[0m     @     0x55a6387eaa20 method_vectorcall
[2m[36m(pid=48497)[0m     @     0x55a63875ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48497)[0m     @     0x55a6387e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48497)[0m     @     0x55a6387ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48497)[0m     @     0x55a63875f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48497)[0m     @     0x55a6387e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48497)[0m     @     0x55a6387ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48497)[0m     @     0x55a63875f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48497)[0m     @     0x55a6387e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48497)[0m     @     0x55a6387ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48497)[0m     @     0x55a63875f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48497)[0m     @     0x55a6387e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48497)[0m     @     0x55a6387ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48497)[0m     @     0x55a63875f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x7ed208ccf5a4 at::native::copy_()
[2m[36m(pid=48392)[0m     @     0x7ed2093ba4f5 at::Tensor::copy_()
[2m[36m(pid=48392)[0m     @     0x7ed20b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48392)[0m     @     0x7ed2093ba4f5 at::Tensor::copy_()
[2m[36m(pid=48468)[0m     @     0x7fc54f8df4f5 at::Tensor::copy_()
[2m[36m(pid=48468)[0m     @     0x7fc551db28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48468)[0m     @     0x7fc54f8df4f5 at::Tensor::copy_()
[2m[36m(pid=48468)[0m     @     0x7fc55598a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48468)[0m     @     0x55de459b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48468)[0m     @     0x55de45910b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48468)[0m     @     0x55de4599bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48468)[0m     @     0x55de4599ca20 method_vectorcall
[2m[36m(pid=48468)[0m     @     0x55de45910bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48468)[0m     @     0x55de4599bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48468)[0m     @     0x55de4599c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48468)[0m     @     0x55de45911689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48468)[0m     @     0x55de4599bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48468)[0m     @     0x55de4599c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48468)[0m     @     0x55de45911689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48468)[0m     @     0x55de4599bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48468)[0m     @     0x55de4599c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48468)[0m     @     0x55de45911689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48468)[0m     @     0x55de4599bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48468)[0m     @     0x55de4599c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48468)[0m     @     0x55de45911689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x7fad4b9cf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48443)[0m     @     0x7fad494fc4f5 at::Tensor::copy_()
[2m[36m(pid=48443)[0m     @     0x7fad4f5a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48443)[0m     @     0x563aa719ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48443)[0m     @     0x563aa70fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x563aa7185baf _PyEval_EvalCodeWithName
[2m[36m(pid=48443)[0m     @     0x563aa7186a20 method_vectorcall
[2m[36m(pid=48443)[0m     @     0x563aa70fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x563aa7185baf _PyEval_EvalCodeWithName
[2m[36m(pid=48443)[0m     @     0x563aa7186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48443)[0m     @     0x563aa70fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x563aa7185baf _PyEval_EvalCodeWithName
[2m[36m(pid=48443)[0m     @     0x563aa7186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48443)[0m     @     0x563aa70fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x563aa7185baf _PyEval_EvalCodeWithName
[2m[36m(pid=48443)[0m     @     0x563aa7186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48443)[0m     @     0x563aa70fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48443)[0m     @     0x563aa7185baf _PyEval_EvalCodeWithName
[2m[36m(pid=48443)[0m     @     0x563aa7186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48443)[0m     @     0x563aa70fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48474)[0m     @     0x7fc60beaad91 at::TensorIterator::for_each()
[2m[36m(pid=48474)[0m     @     0x7fc60c78db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=48474)[0m     @     0x7fc60c7b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=48474)[0m     @     0x7fc60bc52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=48474)[0m     @     0x7fc60bc50388 at::native::copy_impl()
[2m[36m(pid=48506)[0m     @     0x7ece51f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48506)[0m     @     0x7ece57fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48506)[0m     @     0x55618784afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48506)[0m     @     0x5561877a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x556187830baf _PyEval_EvalCodeWithName
[2m[36m(pid=48506)[0m     @     0x556187831a20 method_vectorcall
[2m[36m(pid=48506)[0m     @     0x5561877a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x556187830baf _PyEval_EvalCodeWithName
[2m[36m(pid=48506)[0m     @     0x556187831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48506)[0m     @     0x5561877a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x556187830baf _PyEval_EvalCodeWithName
[2m[36m(pid=48506)[0m     @     0x556187831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48506)[0m     @     0x5561877a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x556187830baf _PyEval_EvalCodeWithName
[2m[36m(pid=48506)[0m     @     0x556187831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48506)[0m     @     0x5561877a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48506)[0m     @     0x556187830baf _PyEval_EvalCodeWithName
[2m[36m(pid=48506)[0m     @     0x556187831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48506)[0m     @     0x5561877a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x7f663c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48387)[0m     @     0x55ed2f8e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48387)[0m     @     0x55ed2f83eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x55ed2f8c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48387)[0m     @     0x55ed2f8caa20 method_vectorcall
[2m[36m(pid=48387)[0m     @     0x55ed2f83ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x55ed2f8c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48387)[0m     @     0x55ed2f8ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48387)[0m     @     0x55ed2f83f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x55ed2f8c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48387)[0m     @     0x55ed2f8ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48387)[0m     @     0x55ed2f83f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x55ed2f8c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48387)[0m     @     0x55ed2f8ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48387)[0m     @     0x55ed2f83f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48387)[0m     @     0x55ed2f8c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=48387)[0m     @     0x55ed2f8ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48387)[0m     @     0x55ed2f83f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x7f700c9254f5 at::Tensor::copy_()
[2m[36m(pid=48440)[0m     @     0x7f70129d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48440)[0m     @     0x5625fccf8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48440)[0m     @     0x5625fcc53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x5625fccdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48440)[0m     @     0x5625fccdfa20 method_vectorcall
[2m[36m(pid=48440)[0m     @     0x5625fcc53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x5625fccdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48440)[0m     @     0x5625fccdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48440)[0m     @     0x5625fcc54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x5625fccdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48440)[0m     @     0x5625fccdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48440)[0m     @     0x5625fcc54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x5625fccdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48440)[0m     @     0x5625fccdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48440)[0m     @     0x5625fcc54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48440)[0m     @     0x5625fccdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=48440)[0m     @     0x5625fccdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48440)[0m     @     0x5625fcc54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x7f8947e514f5 at::Tensor::copy_()
[2m[36m(pid=48433)[0m     @     0x7f894a3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48433)[0m     @     0x7f8947e514f5 at::Tensor::copy_()
[2m[36m(pid=48433)[0m     @     0x7f894defc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48433)[0m     @     0x56332e3e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48433)[0m     @     0x56332e33bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x56332e3c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48433)[0m     @     0x56332e3c7a20 method_vectorcall
[2m[36m(pid=48433)[0m     @     0x56332e33bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x56332e3c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48433)[0m     @     0x56332e3c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48433)[0m     @     0x56332e33c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x56332e3c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48433)[0m     @     0x56332e3c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48433)[0m     @     0x56332e33c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x56332e3c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48433)[0m     @     0x56332e3c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48433)[0m     @     0x56332e33c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48433)[0m     @     0x56332e3c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48433)[0m     @     0x56332e3c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48433)[0m     @     0x56332e33c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x7ef0398215a4 at::native::copy_()
[2m[36m(pid=48463)[0m     @     0x7ef039f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48463)[0m     @     0x7ef03c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48463)[0m     @     0x7ef039f0c4f5 at::Tensor::copy_()
[2m[36m(pid=48463)[0m     @     0x7ef03ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48463)[0m     @     0x563e0ec90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48463)[0m     @     0x563e0ebebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x563e0ec76baf _PyEval_EvalCodeWithName
[2m[36m(pid=48463)[0m     @     0x563e0ec77a20 method_vectorcall
[2m[36m(pid=48463)[0m     @     0x563e0ebebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x563e0ec76baf _PyEval_EvalCodeWithName
[2m[36m(pid=48463)[0m     @     0x563e0ec77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48463)[0m     @     0x563e0ebec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x563e0ec76baf _PyEval_EvalCodeWithName
[2m[36m(pid=48463)[0m     @     0x563e0ec77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48463)[0m     @     0x563e0ebec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x563e0ec76baf _PyEval_EvalCodeWithName
[2m[36m(pid=48463)[0m     @     0x563e0ec77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48463)[0m     @     0x563e0ebec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48463)[0m     @     0x563e0ec76baf _PyEval_EvalCodeWithName
[2m[36m(pid=48463)[0m     @     0x563e0ec77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48463)[0m     @     0x563e0ebec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x7fb8c5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=48417)[0m     @     0x7fb8cbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48417)[0m     @     0x5582718eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48417)[0m     @     0x558271849b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x5582718d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48417)[0m     @     0x5582718d5a20 method_vectorcall
[2m[36m(pid=48417)[0m     @     0x558271849bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x5582718d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48417)[0m     @     0x5582718d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48417)[0m     @     0x55827184a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x5582718d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48417)[0m     @     0x5582718d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48417)[0m     @     0x55827184a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x5582718d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48417)[0m     @     0x5582718d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48417)[0m     @     0x55827184a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48417)[0m     @     0x5582718d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=48417)[0m     @     0x5582718d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48417)[0m     @     0x55827184a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48484)[0m     @     0x560124762baf _PyEval_EvalCodeWithName
[2m[36m(pid=48484)[0m     @     0x560124763643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48484)[0m     @     0x5601246d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x7fc723ce679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48384)[0m     @     0x560049c7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48384)[0m     @     0x560049bdab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x560049c65baf _PyEval_EvalCodeWithName
[2m[36m(pid=48384)[0m     @     0x560049c66a20 method_vectorcall
[2m[36m(pid=48384)[0m     @     0x560049bdabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x560049c65baf _PyEval_EvalCodeWithName
[2m[36m(pid=48384)[0m     @     0x560049c66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48384)[0m     @     0x560049bdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x560049c65baf _PyEval_EvalCodeWithName
[2m[36m(pid=48384)[0m     @     0x560049c66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48384)[0m     @     0x560049bdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x560049c65baf _PyEval_EvalCodeWithName
[2m[36m(pid=48384)[0m     @     0x560049c66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48384)[0m     @     0x560049bdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48384)[0m     @     0x560049c65baf _PyEval_EvalCodeWithName
[2m[36m(pid=48384)[0m     @     0x560049c66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48384)[0m     @     0x560049bdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x7fa877de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48478)[0m     @     0x7fa8759134f5 at::Tensor::copy_()
[2m[36m(pid=48478)[0m     @     0x7fa87b9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48478)[0m     @     0x5614793d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48478)[0m     @     0x56147932cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x5614793b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48478)[0m     @     0x5614793b8a20 method_vectorcall
[2m[36m(pid=48478)[0m     @     0x56147932cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x5614793b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48478)[0m     @     0x5614793b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48478)[0m     @     0x56147932d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x5614793b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48478)[0m     @     0x5614793b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48478)[0m     @     0x56147932d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x5614793b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48478)[0m     @     0x5614793b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48478)[0m     @     0x56147932d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48478)[0m     @     0x5614793b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=48478)[0m     @     0x5614793b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48478)[0m     @     0x56147932d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x7f28071e04f5 at::Tensor::copy_()
[2m[36m(pid=48405)[0m     @     0x7f28096b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48405)[0m     @     0x7f28071e04f5 at::Tensor::copy_()
[2m[36m(pid=48405)[0m     @     0x7f280d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48405)[0m     @     0x55dde7b00fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48405)[0m     @     0x55dde7a5bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x55dde7ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48405)[0m     @     0x55dde7ae7a20 method_vectorcall
[2m[36m(pid=48405)[0m     @     0x55dde7a5bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x55dde7ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48405)[0m     @     0x55dde7ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48405)[0m     @     0x55dde7a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x55dde7ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48405)[0m     @     0x55dde7ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48405)[0m     @     0x55dde7a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x55dde7ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48405)[0m     @     0x55dde7ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48405)[0m     @     0x55dde7a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48405)[0m     @     0x55dde7ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=48405)[0m     @     0x55dde7ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48405)[0m     @     0x55dde7a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962eb7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962ec05baf _PyEval_EvalCodeWithName
[2m[36m(pid=48386)[0m     @     0x55962ec06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48386)[0m     @     0x55962eb7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48386)[0m     @     0x55962ec05baf _PyEval_EvalCodeWithName
[2m[36m(pid=48386)[0m     @     0x55962ec06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48386)[0m     @     0x55962eb7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48456)[0m     @     0x55fb055bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48456)[0m     @     0x55fb055be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48456)[0m     @     0x55fb05533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48456)[0m     @     0x55fb055bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48456)[0m     @     0x55fb055be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48456)[0m     @     0x55fb05533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48456)[0m     @     0x55fb055bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48456)[0m     @     0x55fb055be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48456)[0m     @     0x55fb05533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48456)[0m     @     0x55fb055bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48456)[0m     @     0x55fb055be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48456)[0m     @     0x55fb05533689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x7f91dbe514f5 at::Tensor::copy_()
[2m[36m(pid=48415)[0m     @     0x7f91de3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48415)[0m     @     0x7f91dbe514f5 at::Tensor::copy_()
[2m[36m(pid=48413)[0m     @     0x55ff7a5ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48413)[0m     @     0x55ff7a5eda20 method_vectorcall
[2m[36m(pid=48413)[0m     @     0x55ff7a561bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48413)[0m     @     0x55ff7a5ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48413)[0m     @     0x55ff7a5ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48413)[0m     @     0x55ff7a562689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48413)[0m     @     0x55ff7a5ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48413)[0m     @     0x55ff7a5ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48413)[0m     @     0x55ff7a562689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48413)[0m     @     0x55ff7a5ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48413)[0m     @     0x55ff7a5ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48413)[0m     @     0x55ff7a562689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48413)[0m     @     0x55ff7a5ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48413)[0m     @     0x55ff7a5ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48413)[0m     @     0x55ff7a562689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x561d6fecdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48465)[0m     @     0x561d6fece643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48465)[0m     @     0x561d6fe43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x561d6fecdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48465)[0m     @     0x561d6fece643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48465)[0m     @     0x561d6fe43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48465)[0m     @     0x561d6fecdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48465)[0m     @     0x561d6fece643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48465)[0m     @     0x561d6fe43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x556e98340baf _PyEval_EvalCodeWithName
[2m[36m(pid=48437)[0m     @     0x556e98341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48437)[0m     @     0x556e982b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x556e98340baf _PyEval_EvalCodeWithName
[2m[36m(pid=48437)[0m     @     0x556e98341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48437)[0m     @     0x556e982b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48437)[0m     @     0x556e98340baf _PyEval_EvalCodeWithName
[2m[36m(pid=48437)[0m     @     0x556e98341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48437)[0m     @     0x556e982b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x7f1bbf1e04f5 at::Tensor::copy_()
[2m[36m(pid=48481)[0m     @     0x7f1bc16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48481)[0m     @     0x7f1bbf1e04f5 at::Tensor::copy_()
[2m[36m(pid=48481)[0m     @     0x7f1bc528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48481)[0m     @     0x5616a459bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48481)[0m     @     0x5616a44f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x5616a4581baf _PyEval_EvalCodeWithName
[2m[36m(pid=48481)[0m     @     0x5616a4582a20 method_vectorcall
[2m[36m(pid=48481)[0m     @     0x5616a44f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x5616a4581baf _PyEval_EvalCodeWithName
[2m[36m(pid=48481)[0m     @     0x5616a4582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48481)[0m     @     0x5616a44f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x5616a4581baf _PyEval_EvalCodeWithName
[2m[36m(pid=48481)[0m     @     0x5616a4582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48481)[0m     @     0x5616a44f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x5616a4581baf _PyEval_EvalCodeWithName
[2m[36m(pid=48481)[0m     @     0x5616a4582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48481)[0m     @     0x5616a44f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48481)[0m     @     0x5616a4581baf _PyEval_EvalCodeWithName
[2m[36m(pid=48481)[0m     @     0x5616a4582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48481)[0m     @     0x5616a44f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48385)[0m     @     0x558bf15ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48416)[0m     @     0x555e6dbd5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48416)[0m     @     0x555e6db4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab180689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48507)[0m     @     0x5616ab20abaf _PyEval_EvalCodeWithName
[2m[36m(pid=48507)[0m     @     0x5616ab20b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48507)[0m     @     0x5616ab180689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x7ed1f125e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48453)[0m     @     0x55f942186fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48453)[0m     @     0x55f9420e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x55f94216cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48453)[0m     @     0x55f94216da20 method_vectorcall
[2m[36m(pid=48453)[0m     @     0x55f9420e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x55f94216cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48453)[0m     @     0x55f94216d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48453)[0m     @     0x55f9420e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x55f94216cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48453)[0m     @     0x55f94216d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48453)[0m     @     0x55f9420e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x55f94216cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48453)[0m     @     0x55f94216d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48453)[0m     @     0x55f9420e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48453)[0m     @     0x55f94216cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48453)[0m     @     0x55f94216d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48453)[0m     @     0x55f9420e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x7f3b9b45f4f5 at::Tensor::copy_()
[2m[36m(pid=48442)[0m     @     0x7f3ba150a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48442)[0m     @     0x55eb289b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48442)[0m     @     0x55eb28912b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x55eb2899dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48442)[0m     @     0x55eb2899ea20 method_vectorcall
[2m[36m(pid=48442)[0m     @     0x55eb28912bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x55eb2899dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48442)[0m     @     0x55eb2899e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48442)[0m     @     0x55eb28913689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x55eb2899dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48442)[0m     @     0x55eb2899e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48442)[0m     @     0x55eb28913689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x55eb2899dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48442)[0m     @     0x55eb2899e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48442)[0m     @     0x55eb28913689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48442)[0m     @     0x55eb2899dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48442)[0m     @     0x55eb2899e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48442)[0m     @     0x55eb28913689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x7ed20f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48392)[0m     @     0x55850eab3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48392)[0m     @     0x55850ea0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x55850ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=48392)[0m     @     0x55850ea9aa20 method_vectorcall
[2m[36m(pid=48392)[0m     @     0x55850ea0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x55850ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=48392)[0m     @     0x55850ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48392)[0m     @     0x55850ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x55850ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=48392)[0m     @     0x55850ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48392)[0m     @     0x55850ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x55850ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=48392)[0m     @     0x55850ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48392)[0m     @     0x55850ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48392)[0m     @     0x55850ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=48392)[0m     @     0x55850ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48392)[0m     @     0x55850ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48474)[0m     @     0x7fc60bc525a4 at::native::copy_()
[2m[36m(pid=48474)[0m     @     0x7fc60c33d4f5 at::Tensor::copy_()
[2m[36m(pid=48474)[0m     @     0x7fc60e8108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=48415)[0m     @     0x7f91e1efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48415)[0m     @     0x55bbc3d25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48415)[0m     @     0x55bbc3c80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x55bbc3d0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48415)[0m     @     0x55bbc3d0ca20 method_vectorcall
[2m[36m(pid=48415)[0m     @     0x55bbc3c80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x55bbc3d0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48415)[0m     @     0x55bbc3d0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48415)[0m     @     0x55bbc3c81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x55bbc3d0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48415)[0m     @     0x55bbc3d0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48415)[0m     @     0x55bbc3c81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x55bbc3d0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48415)[0m     @     0x55bbc3d0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48415)[0m     @     0x55bbc3c81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48415)[0m     @     0x55bbc3d0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48415)[0m     @     0x55bbc3d0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48415)[0m     @     0x55bbc3c81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48474)[0m     @     0x7fc60c33d4f5 at::Tensor::copy_()
[2m[36m(pid=48474)[0m     @     0x7fc6123e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=48474)[0m     @     0x55b0ec9a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=48474)[0m     @     0x55b0ec901b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48474)[0m     @     0x55b0ec98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48474)[0m     @     0x55b0ec98da20 method_vectorcall
[2m[36m(pid=48474)[0m     @     0x55b0ec901bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=48474)[0m     @     0x55b0ec98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=48474)[0m     @     0x55b0ec98d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=48474)[0m     @     0x55b0ec902689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:10:21,699	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:10:21,700	ERROR trial_runner.py:567 -- Trial PPO_jss_env_18fcd_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=48503, ip=172.17.0.4)
  File "python/r