2020-11-05 10:57:41,879	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_bad12_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=8001)[0m 2020-11-05 10:57:44,671	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=7999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7999)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7999)[0m *** SIGSEGV (@0x0) received by PID 7999 (TID 0x7fe11cdd9700) from PID 0; stack trace: ***
[2m[36m(pid=7999)[0m     @     0x7fe11c9b2390 (unknown)
[2m[36m(pid=7918)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7918)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7918)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7918)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7918)[0m *** SIGSEGV (@0x0) received by PID 7918 (TID 0x7fac2dc9d700) from PID 0; stack trace: ***
[2m[36m(pid=7918)[0m     @     0x7fac2d876390 (unknown)
[2m[36m(pid=7918)[0m     @     0x7f7d2fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7918)[0m     @     0x7f7d2cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7967)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7967)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7967)[0m *** SIGSEGV (@0x0) received by PID 7967 (TID 0x7f9b682e7700) from PID 0; stack trace: ***
[2m[36m(pid=7967)[0m     @     0x7f9b67ec0390 (unknown)
[2m[36m(pid=7900)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7900)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7900)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7900)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7900)[0m *** SIGSEGV (@0x0) received by PID 7900 (TID 0x7f9a981ab700) from PID 0; stack trace: ***
[2m[36m(pid=7900)[0m     @     0x7f9a97d84390 (unknown)
[2m[36m(pid=7900)[0m     @     0x7f6b99fb0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7900)[0m     @     0x7f6b972a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7965)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7965)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7965)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7965)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7965)[0m *** SIGSEGV (@0x0) received by PID 7965 (TID 0x7f169e031700) from PID 0; stack trace: ***
[2m[36m(pid=7965)[0m     @     0x7f169dc0a390 (unknown)
[2m[36m(pid=7965)[0m     @     0x7ee79fe16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7965)[0m     @     0x7ee79d10a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7984)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7984)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7984)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7984)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7984)[0m *** SIGSEGV (@0x0) received by PID 7984 (TID 0x7faef6eb8700) from PID 0; stack trace: ***
[2m[36m(pid=7984)[0m     @     0x7faef6a91390 (unknown)
[2m[36m(pid=7984)[0m     @     0x7f7ff8c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7984)[0m     @     0x7f7ff5f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7984)[0m     @     0x7f7ff5f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7980)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7980)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7980)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7980)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7980)[0m *** SIGSEGV (@0x0) received by PID 7980 (TID 0x7feb25e2b700) from PID 0; stack trace: ***
[2m[36m(pid=7980)[0m     @     0x7feb25a04390 (unknown)
[2m[36m(pid=7980)[0m     @     0x7fbc27a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7980)[0m     @     0x7fbc24d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7981)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7981)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7981)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7981)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7981)[0m *** SIGSEGV (@0x0) received by PID 7981 (TID 0x7f250b88d700) from PID 0; stack trace: ***
[2m[36m(pid=7981)[0m     @     0x7f250b466390 (unknown)
[2m[36m(pid=7981)[0m     @     0x7ef60d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7981)[0m     @     0x7ef60a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7981)[0m     @     0x7ef60a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7987)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7987)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7987)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7987)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7987)[0m *** SIGSEGV (@0x0) received by PID 7987 (TID 0x7f0df3e19700) from PID 0; stack trace: ***
[2m[36m(pid=7987)[0m     @     0x7f0df39f2390 (unknown)
[2m[36m(pid=7987)[0m     @     0x7edef5b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7987)[0m     @     0x7edef2e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7949)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7949)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7949)[0m *** SIGSEGV (@0x0) received by PID 7949 (TID 0x7f285843c700) from PID 0; stack trace: ***
[2m[36m(pid=7949)[0m     @     0x7f2858015390 (unknown)
[2m[36m(pid=7949)[0m     @     0x7ef95a12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7949)[0m     @     0x7ef95742164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7949)[0m     @     0x7ef957424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7916)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7916)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7916)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7916)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7916)[0m *** SIGSEGV (@0x0) received by PID 7916 (TID 0x7f03f0507700) from PID 0; stack trace: ***
[2m[36m(pid=7916)[0m     @     0x7f03f00e0390 (unknown)
[2m[36m(pid=7916)[0m     @     0x7ed4f1fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7916)[0m     @     0x7ed4ef29764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7893)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7893)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7893)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7893)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7893)[0m *** SIGSEGV (@0x0) received by PID 7893 (TID 0x7f75dde82700) from PID 0; stack trace: ***
[2m[36m(pid=7893)[0m     @     0x7f75dda5b390 (unknown)
[2m[36m(pid=7893)[0m     @     0x7f46dfa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7893)[0m     @     0x7f46dcd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8004)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8004)[0m *** SIGSEGV (@0x0) received by PID 8004 (TID 0x7f1a832c7700) from PID 0; stack trace: ***
[2m[36m(pid=8004)[0m     @     0x7f1a82ea0390 (unknown)
[2m[36m(pid=8004)[0m     @     0x7eeb8509dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8004)[0m     @     0x7eeb8239164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7990)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7990)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7990)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7990)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7990)[0m *** SIGSEGV (@0x0) received by PID 7990 (TID 0x7fd1515e0700) from PID 0; stack trace: ***
[2m[36m(pid=7990)[0m     @     0x7fd1511b9390 (unknown)
[2m[36m(pid=7990)[0m     @     0x7fa25332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7990)[0m     @     0x7fa25062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7990)[0m     @     0x7fa250623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8011)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8011)[0m *** SIGSEGV (@0x0) received by PID 8011 (TID 0x7fb299204700) from PID 0; stack trace: ***
[2m[36m(pid=8011)[0m     @     0x7fb298ddd390 (unknown)
[2m[36m(pid=8011)[0m     @     0x7f839afdbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8011)[0m     @     0x7f83982cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8011)[0m     @     0x7f83982d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8011)[0m     @     0x7f83982d2b53 at::TensorIterator::for_each()
[2m[36m(pid=7985)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7985)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7985)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7985)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7985)[0m *** SIGSEGV (@0x0) received by PID 7985 (TID 0x7f9907789700) from PID 0; stack trace: ***
[2m[36m(pid=7985)[0m     @     0x7f9907362390 (unknown)
[2m[36m(pid=7985)[0m     @     0x7f6a094a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7985)[0m     @     0x7f6a0679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7902)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7902)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7902)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7902)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7902)[0m *** SIGSEGV (@0x0) received by PID 7902 (TID 0x7fc7fd48c700) from PID 0; stack trace: ***
[2m[36m(pid=7902)[0m     @     0x7fc7fd065390 (unknown)
[2m[36m(pid=7902)[0m     @     0x7f98ff25afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7902)[0m     @     0x7f98fc54e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7902)[0m     @     0x7f98fc551977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7969)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7969)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7969)[0m *** SIGSEGV (@0x0) received by PID 7969 (TID 0x7f9dc72bc700) from PID 0; stack trace: ***
[2m[36m(pid=7969)[0m     @     0x7f9dc6e95390 (unknown)
[2m[36m(pid=7969)[0m     @     0x7f6ec90cafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7969)[0m     @     0x7f6ec63be64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7958)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7958)[0m *** SIGSEGV (@0x0) received by PID 7958 (TID 0x7fc3696dd700) from PID 0; stack trace: ***
[2m[36m(pid=7958)[0m     @     0x7fc3692b6390 (unknown)
[2m[36m(pid=7958)[0m     @     0x7f946b4c1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7958)[0m     @     0x7f94687b564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7958)[0m     @     0x7f94687b8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7961)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7961)[0m *** SIGSEGV (@0x0) received by PID 7961 (TID 0x7f3bb982d700) from PID 0; stack trace: ***
[2m[36m(pid=7961)[0m     @     0x7f3bb9406390 (unknown)
[2m[36m(pid=7961)[0m     @     0x7f0cbb623fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7961)[0m     @     0x7f0cb891764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7961)[0m     @     0x7f0cb891a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7961)[0m     @     0x7f0cb891ab53 at::TensorIterator::for_each()
[2m[36m(pid=7977)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7977)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7977)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7977)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7977)[0m *** SIGSEGV (@0x0) received by PID 7977 (TID 0x7f91fa8f9700) from PID 0; stack trace: ***
[2m[36m(pid=7977)[0m     @     0x7f91fa4d2390 (unknown)
[2m[36m(pid=7977)[0m     @     0x7f62fc6defb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7982)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7982)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7982)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7982)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7982)[0m *** SIGSEGV (@0x0) received by PID 7982 (TID 0x7f3a36f75700) from PID 0; stack trace: ***
[2m[36m(pid=7982)[0m     @     0x7f3a36b4e390 (unknown)
[2m[36m(pid=7982)[0m     @     0x7f0b38c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7982)[0m     @     0x7f0b35f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7982)[0m     @     0x7f0b35f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7982)[0m     @     0x7f0b35f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=7887)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7887)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7887)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7887)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7887)[0m *** SIGSEGV (@0x0) received by PID 7887 (TID 0x7f3bb592e700) from PID 0; stack trace: ***
[2m[36m(pid=7887)[0m     @     0x7f3bb5507390 (unknown)
[2m[36m(pid=7887)[0m     @     0x7f0cb6bc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7887)[0m     @     0x7f0cb3ebd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8006)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8006)[0m *** SIGSEGV (@0x0) received by PID 8006 (TID 0x7f08e7c99700) from PID 0; stack trace: ***
[2m[36m(pid=8006)[0m     @     0x7f08e7872390 (unknown)
[2m[36m(pid=8006)[0m     @     0x7ed9e9925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8006)[0m     @     0x7ed9e6c1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7964)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7964)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7964)[0m *** SIGSEGV (@0x0) received by PID 7964 (TID 0x7f78be59c700) from PID 0; stack trace: ***
[2m[36m(pid=7964)[0m     @     0x7f78be175390 (unknown)
[2m[36m(pid=7964)[0m     @     0x7f49c009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7964)[0m     @     0x7f49bd38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7989)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7989)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7989)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7989)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7989)[0m *** SIGSEGV (@0x0) received by PID 7989 (TID 0x7f254cdef700) from PID 0; stack trace: ***
[2m[36m(pid=7989)[0m     @     0x7f254c9c8390 (unknown)
[2m[36m(pid=7989)[0m     @     0x7ef64e9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7989)[0m     @     0x7ef64bcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7974)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7974)[0m *** SIGSEGV (@0x0) received by PID 7974 (TID 0x7f3fb3d2c700) from PID 0; stack trace: ***
[2m[36m(pid=7974)[0m     @     0x7f3fb3905390 (unknown)
[2m[36m(pid=7974)[0m     @     0x7f10b59c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7974)[0m     @     0x7f10b2cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7888)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7888)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7888)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7888)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7888)[0m *** SIGSEGV (@0x0) received by PID 7888 (TID 0x7f9d19ffd700) from PID 0; stack trace: ***
[2m[36m(pid=7888)[0m     @     0x7f9d19bd6390 (unknown)
[2m[36m(pid=7888)[0m     @     0x7f6e1bdf1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7888)[0m     @     0x7f6e190e564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7914)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7914)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7914)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7914)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7914)[0m *** SIGSEGV (@0x0) received by PID 7914 (TID 0x7fe12f379700) from PID 0; stack trace: ***
[2m[36m(pid=7914)[0m     @     0x7fe12ef52390 (unknown)
[2m[36m(pid=7914)[0m     @     0x7fb23114afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7914)[0m     @     0x7fb22e43e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7892)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7892)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7892)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7892)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7892)[0m *** SIGSEGV (@0x0) received by PID 7892 (TID 0x7f4c402ff700) from PID 0; stack trace: ***
[2m[36m(pid=7892)[0m     @     0x7f4c3fed8390 (unknown)
[2m[36m(pid=7892)[0m     @     0x7f1d3faa5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7892)[0m     @     0x7f1d3cd9964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7968)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7968)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7968)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7968)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7968)[0m *** SIGSEGV (@0x0) received by PID 7968 (TID 0x7f4b60019700) from PID 0; stack trace: ***
[2m[36m(pid=7968)[0m     @     0x7f4b5fbf2390 (unknown)
[2m[36m(pid=7968)[0m     @     0x7f1c61d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7968)[0m     @     0x7f1c5f06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7968)[0m     @     0x7f1c5f063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7960)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7960)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7960)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7960)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7960)[0m *** SIGSEGV (@0x0) received by PID 7960 (TID 0x7fb1beb14700) from PID 0; stack trace: ***
[2m[36m(pid=7960)[0m     @     0x7fb1be6ed390 (unknown)
[2m[36m(pid=7960)[0m     @     0x7f82c081bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7960)[0m     @     0x7f82bdb0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7897)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7897)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7897)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7897)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7897)[0m *** SIGSEGV (@0x0) received by PID 7897 (TID 0x7fe7b04ca700) from PID 0; stack trace: ***
[2m[36m(pid=7897)[0m     @     0x7fe7b00a3390 (unknown)
[2m[36m(pid=7897)[0m     @     0x7fb8b22d7fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7897)[0m     @     0x7fb8af5cb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7897)[0m     @     0x7fb8af5ce977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7897)[0m     @     0x7fb8af5ceb53 at::TensorIterator::for_each()
[2m[36m(pid=8017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8017)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8017)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8017)[0m *** SIGSEGV (@0x0) received by PID 8017 (TID 0x7fbf86f81700) from PID 0; stack trace: ***
[2m[36m(pid=8017)[0m     @     0x7fbf86b5a390 (unknown)
[2m[36m(pid=8017)[0m     @     0x7f9088d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8017)[0m     @     0x7f908603c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8017)[0m     @     0x7f908603f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8017)[0m     @     0x7f908603fb53 at::TensorIterator::for_each()
[2m[36m(pid=8017)[0m     @     0x7f908603fe11 at::TensorIterator::for_each()
[2m[36m(pid=7891)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7891)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7891)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7891)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7891)[0m *** SIGSEGV (@0x0) received by PID 7891 (TID 0x7fbe79f1d700) from PID 0; stack trace: ***
[2m[36m(pid=7891)[0m     @     0x7fbe79af6390 (unknown)
[2m[36m(pid=7891)[0m     @     0x7f8f7bc81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7891)[0m     @     0x7f8f78f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7891)[0m     @     0x7f8f78f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8013)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8013)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8013)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8013)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8013)[0m *** SIGSEGV (@0x0) received by PID 8013 (TID 0x7fbaf575f700) from PID 0; stack trace: ***
[2m[36m(pid=8013)[0m     @     0x7fbaf5338390 (unknown)
[2m[36m(pid=8013)[0m     @     0x7f8bf7501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8013)[0m     @     0x7f8bf47f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8013)[0m     @     0x7f8bf47f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8013)[0m     @     0x7f8bf47f8b53 at::TensorIterator::for_each()
[2m[36m(pid=8013)[0m     @     0x7f8bf47f8e11 at::TensorIterator::for_each()
[2m[36m(pid=7947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7947)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7947)[0m *** SIGSEGV (@0x0) received by PID 7947 (TID 0x7fab5c5f7700) from PID 0; stack trace: ***
[2m[36m(pid=7947)[0m     @     0x7fab5c1d0390 (unknown)
[2m[36m(pid=7947)[0m     @     0x7f7c5e344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7947)[0m     @     0x7f7c5b63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7947)[0m     @     0x7f7c5b63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7947)[0m     @     0x7f7c5b63bb53 at::TensorIterator::for_each()
[2m[36m(pid=7956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7956)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7956)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7956)[0m *** SIGSEGV (@0x0) received by PID 7956 (TID 0x7f388f683700) from PID 0; stack trace: ***
[2m[36m(pid=7956)[0m     @     0x7f388f25c390 (unknown)
[2m[36m(pid=7956)[0m     @     0x7f099139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7956)[0m     @     0x7f098e68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7956)[0m     @     0x7f098e692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7956)[0m     @     0x7f098e692b53 at::TensorIterator::for_each()
[2m[36m(pid=7995)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7995)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7995)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7995)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7995)[0m *** SIGSEGV (@0x0) received by PID 7995 (TID 0x7f838d619700) from PID 0; stack trace: ***
[2m[36m(pid=7995)[0m     @     0x7f838d1f2390 (unknown)
[2m[36m(pid=7995)[0m     @     0x7f548f32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7995)[0m     @     0x7f548c62064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7995)[0m     @     0x7f548c623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7995)[0m     @     0x7f548c623b53 at::TensorIterator::for_each()
[2m[36m(pid=7995)[0m     @     0x7f548c623e11 at::TensorIterator::for_each()
[2m[36m(pid=7995)[0m     @     0x7f548f33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7995)[0m     @     0x7f548f35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7886)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7886)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7886)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7886)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7886)[0m *** SIGSEGV (@0x0) received by PID 7886 (TID 0x7f4edb8b1700) from PID 0; stack trace: ***
[2m[36m(pid=7886)[0m     @     0x7f4edb48a390 (unknown)
[2m[36m(pid=7886)[0m     @     0x7f1fdd4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7886)[0m     @     0x7f1fda79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7886)[0m     @     0x7f1fda797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7972)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7972)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7972)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7972)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7972)[0m *** SIGSEGV (@0x0) received by PID 7972 (TID 0x7fd71e48d700) from PID 0; stack trace: ***
[2m[36m(pid=7972)[0m     @     0x7fd71e066390 (unknown)
[2m[36m(pid=7972)[0m     @     0x7fa82027cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7972)[0m     @     0x7fa81d57064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7972)[0m     @     0x7fa81d573977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7972)[0m     @     0x7fa81d573b53 at::TensorIterator::for_each()
[2m[36m(pid=7972)[0m     @     0x7fa81d573e11 at::TensorIterator::for_each()
[2m[36m(pid=7922)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7922)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7922)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7922)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7922)[0m *** SIGSEGV (@0x0) received by PID 7922 (TID 0x7f7ae22bc700) from PID 0; stack trace: ***
[2m[36m(pid=7922)[0m     @     0x7f7ae1e95390 (unknown)
[2m[36m(pid=7922)[0m     @     0x7f4be409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7922)[0m     @     0x7f4be138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7922)[0m     @     0x7f4be1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7922)[0m     @     0x7f4be1392b53 at::TensorIterator::for_each()
[2m[36m(pid=7899)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7899)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7899)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7899)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7899)[0m *** SIGSEGV (@0x0) received by PID 7899 (TID 0x7fd956775700) from PID 0; stack trace: ***
[2m[36m(pid=7899)[0m     @     0x7fd95634e390 (unknown)
[2m[36m(pid=7899)[0m     @     0x7faa5840afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7899)[0m     @     0x7faa556fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7899)[0m     @     0x7faa55701977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7998)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7998)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7998)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7998)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7998)[0m *** SIGSEGV (@0x0) received by PID 7998 (TID 0x7f1d70472700) from PID 0; stack trace: ***
[2m[36m(pid=7998)[0m     @     0x7f1d7004b390 (unknown)
[2m[36m(pid=7998)[0m     @     0x7eee7212dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7998)[0m     @     0x7eee6f42164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7998)[0m     @     0x7eee6f424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7998)[0m     @     0x7eee6f424b53 at::TensorIterator::for_each()
[2m[36m(pid=7992)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7992)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7994)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7994)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7994)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7894)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7894)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7894)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7905)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7905)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7999)[0m     @     0x7fb21ea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7999)[0m     @     0x7fb21bd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7999)[0m     @     0x7fb21bd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7918)[0m     @     0x7f7d2cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7918)[0m     @     0x7f7d2cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=7967)[0m     @     0x7f6c6a0edfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7967)[0m     @     0x7f6c673e164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7967)[0m     @     0x7f6c673e4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8024)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8024)[0m *** SIGSEGV (@0x0) received by PID 8024 (TID 0x7f7e53e65700) from PID 0; stack trace: ***
[2m[36m(pid=7900)[0m     @     0x7f6b972a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7900)[0m     @     0x7f6b972a7b53 at::TensorIterator::for_each()
[2m[36m(pid=7900)[0m     @     0x7f6b972a7e11 at::TensorIterator::for_each()
[2m[36m(pid=7889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7889)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7965)[0m     @     0x7ee79d10d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7965)[0m     @     0x7ee79d10db53 at::TensorIterator::for_each()
[2m[36m(pid=7965)[0m     @     0x7ee79d10de11 at::TensorIterator::for_each()
[2m[36m(pid=7965)[0m     @     0x7ee79fe26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7965)[0m     @     0x7ee79fe49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7984)[0m     @     0x7f7ff5f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=7984)[0m     @     0x7f7ff5f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=7984)[0m     @     0x7f7ff8c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7984)[0m     @     0x7f7ff8c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7984)[0m     @     0x7f7ff5cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7984)[0m     @     0x7f7ff5cb2c3f at::native::copy_impl()
[2m[36m(pid=7980)[0m     @     0x7fbc24d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7980)[0m     @     0x7fbc24d67b53 at::TensorIterator::for_each()
[2m[36m(pid=7980)[0m     @     0x7fbc24d67e11 at::TensorIterator::for_each()
[2m[36m(pid=7980)[0m     @     0x7fbc27a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7981)[0m     @     0x7ef60a797b53 at::TensorIterator::for_each()
[2m[36m(pid=7981)[0m     @     0x7ef60a797e11 at::TensorIterator::for_each()
[2m[36m(pid=7981)[0m     @     0x7ef60d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7981)[0m     @     0x7ef60d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7981)[0m     @     0x7ef60a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7981)[0m     @     0x7ef60a50fc3f at::native::copy_impl()
[2m[36m(pid=7981)[0m     @     0x7ef60a510ed4 at::native::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef2e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7987)[0m     @     0x7edef2e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=7987)[0m     @     0x7edef2e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=7987)[0m     @     0x7edef5b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7987)[0m     @     0x7edef5b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7987)[0m     @     0x7edef2bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7903)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7903)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7903)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7903)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7903)[0m *** SIGSEGV (@0x0) received by PID 7903 (TID 0x7fcc18566700) from PID 0; stack trace: ***
[2m[36m(pid=7949)[0m     @     0x7ef957424b53 at::TensorIterator::for_each()
[2m[36m(pid=7949)[0m     @     0x7ef957424e11 at::TensorIterator::for_each()
[2m[36m(pid=7949)[0m     @     0x7ef95a13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7949)[0m     @     0x7ef95a160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7949)[0m     @     0x7ef95719e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7949)[0m     @     0x7ef95719cc3f at::native::copy_impl()
[2m[36m(pid=7916)[0m     @     0x7ed4ef29a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7916)[0m     @     0x7ed4ef29ab53 at::TensorIterator::for_each()
[2m[36m(pid=7916)[0m     @     0x7ed4ef29ae11 at::TensorIterator::for_each()
[2m[36m(pid=7916)[0m     @     0x7ed4f1fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7893)[0m     @     0x7f46dcd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7893)[0m     @     0x7f46dcd67b53 at::TensorIterator::for_each()
[2m[36m(pid=7893)[0m     @     0x7f46dcd67e11 at::TensorIterator::for_each()
[2m[36m(pid=7893)[0m     @     0x7f46dfa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7910)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7910)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7910)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7910)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7910)[0m *** SIGSEGV (@0x0) received by PID 7910 (TID 0x7f041e7fd700) from PID 0; stack trace: ***
[2m[36m(pid=7910)[0m     @     0x7f041e3d6390 (unknown)
[2m[36m(pid=7910)[0m     @     0x7ed5205c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8004)[0m     @     0x7eeb82394977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8004)[0m     @     0x7eeb82394b53 at::TensorIterator::for_each()
[2m[36m(pid=8004)[0m     @     0x7eeb82394e11 at::TensorIterator::for_each()
[2m[36m(pid=8004)[0m     @     0x7eeb850adc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8004)[0m     @     0x7eeb850d0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8004)[0m     @     0x7eeb8210e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7990)[0m     @     0x7fa250623b53 at::TensorIterator::for_each()
[2m[36m(pid=7990)[0m     @     0x7fa250623e11 at::TensorIterator::for_each()
[2m[36m(pid=7990)[0m     @     0x7fa25333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7990)[0m     @     0x7fa25335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7990)[0m     @     0x7fa25039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7990)[0m     @     0x7fa25039bc3f at::native::copy_impl()
[2m[36m(pid=8011)[0m     @     0x7f83982d2e11 at::TensorIterator::for_each()
[2m[36m(pid=8011)[0m     @     0x7f839afebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8011)[0m     @     0x7f839b00ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8011)[0m     @     0x7f839804c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8011)[0m     @     0x7f839804ac3f at::native::copy_impl()
[2m[36m(pid=8011)[0m     @     0x7f839804bed4 at::native::copy_()
[2m[36m(pid=7904)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7904)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7904)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7996)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7996)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7996)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7962)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7962)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7962)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7971)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7971)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7971)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7966)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7966)[0m *** SIGSEGV (@0x0) received by PID 7966 (TID 0x7f176f5f8700) from PID 0; stack trace: ***
[2m[36m(pid=7955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7955)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7955)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7955)[0m *** SIGSEGV (@0x0) received by PID 7955 (TID 0x7fa116286700) from PID 0; stack trace: ***
[2m[36m(pid=7985)[0m     @     0x7f6a06797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7985)[0m     @     0x7f6a06797b53 at::TensorIterator::for_each()
[2m[36m(pid=7985)[0m     @     0x7f6a06797e11 at::TensorIterator::for_each()
[2m[36m(pid=7985)[0m     @     0x7f6a094b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7985)[0m     @     0x7f6a094d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7902)[0m     @     0x7f98fc551b53 at::TensorIterator::for_each()
[2m[36m(pid=7902)[0m     @     0x7f98fc551e11 at::TensorIterator::for_each()
[2m[36m(pid=7902)[0m     @     0x7f98ff26ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7902)[0m     @     0x7f98ff28dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7902)[0m     @     0x7f98fc2cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7902)[0m     @     0x7f98fc2c9c3f at::native::copy_impl()
[2m[36m(pid=7969)[0m     @     0x7f6ec63c1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7969)[0m     @     0x7f6ec63c1b53 at::TensorIterator::for_each()
[2m[36m(pid=7969)[0m     @     0x7f6ec63c1e11 at::TensorIterator::for_each()
[2m[36m(pid=7969)[0m     @     0x7f6ec90dac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7969)[0m     @     0x7f6ec90fdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7958)[0m     @     0x7f94687b8b53 at::TensorIterator::for_each()
[2m[36m(pid=7958)[0m     @     0x7f94687b8e11 at::TensorIterator::for_each()
[2m[36m(pid=7958)[0m     @     0x7f946b4d1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7958)[0m     @     0x7f946b4f4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7958)[0m     @     0x7f9468532009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7958)[0m     @     0x7f9468530c3f at::native::copy_impl()
[2m[36m(pid=7961)[0m     @     0x7f0cb891ae11 at::TensorIterator::for_each()
[2m[36m(pid=7961)[0m     @     0x7f0cbb633c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7961)[0m     @     0x7f0cbb656cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7961)[0m     @     0x7f0cb8694009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7961)[0m     @     0x7f0cb8692c3f at::native::copy_impl()
[2m[36m(pid=7961)[0m     @     0x7f0cb8693ed4 at::native::copy_()
[2m[36m(pid=7977)[0m     @     0x7f62f99d264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7977)[0m     @     0x7f62f99d5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7977)[0m     @     0x7f62f99d5b53 at::TensorIterator::for_each()
[2m[36m(pid=7977)[0m     @     0x7f62f99d5e11 at::TensorIterator::for_each()
[2m[36m(pid=7982)[0m     @     0x7f0b35f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=7982)[0m     @     0x7f0b38ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7982)[0m     @     0x7f0b38ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7982)[0m     @     0x7f0b35d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7982)[0m     @     0x7f0b35d07c3f at::native::copy_impl()
[2m[36m(pid=7982)[0m     @     0x7f0b35d08ed4 at::native::copy_()
[2m[36m(pid=7898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7898)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7898)[0m *** SIGSEGV (@0x0) received by PID 7898 (TID 0x7f3ba2fd0700) from PID 0; stack trace: ***
[2m[36m(pid=7898)[0m     @     0x7f3ba2ba9390 (unknown)
[2m[36m(pid=7898)[0m     @     0x7f0ca4d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7887)[0m     @     0x7f0cb3ec0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7887)[0m     @     0x7f0cb3ec0b53 at::TensorIterator::for_each()
[2m[36m(pid=7887)[0m     @     0x7f0cb3ec0e11 at::TensorIterator::for_each()
[2m[36m(pid=7887)[0m     @     0x7f0cb6bd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7887)[0m     @     0x7f0cb6bfccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7907)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7907)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7907)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7907)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7907)[0m *** SIGSEGV (@0x0) received by PID 7907 (TID 0x7f122bacd700) from PID 0; stack trace: ***
[2m[36m(pid=7907)[0m     @     0x7f122b6a6390 (unknown)
[2m[36m(pid=7907)[0m     @     0x7ee32d8b8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7907)[0m     @     0x7ee32abac64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7895)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7895)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7895)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7895)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7895)[0m *** SIGSEGV (@0x0) received by PID 7895 (TID 0x7fb07e643700) from PID 0; stack trace: ***
[2m[36m(pid=7895)[0m     @     0x7fb07e21c390 (unknown)
[2m[36m(pid=8006)[0m     @     0x7ed9e6c1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8006)[0m     @     0x7ed9e6c1cb53 at::TensorIterator::for_each()
[2m[36m(pid=8006)[0m     @     0x7ed9e6c1ce11 at::TensorIterator::for_each()
[2m[36m(pid=8006)[0m     @     0x7ed9e9935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8006)[0m     @     0x7ed9e9958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7964)[0m     @     0x7f49bd392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7964)[0m     @     0x7f49bd392b53 at::TensorIterator::for_each()
[2m[36m(pid=7964)[0m     @     0x7f49bd392e11 at::TensorIterator::for_each()
[2m[36m(pid=7964)[0m     @     0x7f49c00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7964)[0m     @     0x7f49c00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7989)[0m     @     0x7ef64bce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7989)[0m     @     0x7ef64bce2b53 at::TensorIterator::for_each()
[2m[36m(pid=7989)[0m     @     0x7ef64bce2e11 at::TensorIterator::for_each()
[2m[36m(pid=7989)[0m     @     0x7ef64e9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7974)[0m     @     0x7f10b2cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7974)[0m     @     0x7f10b2cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=7974)[0m     @     0x7f10b2cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=7974)[0m     @     0x7f10b59d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7974)[0m     @     0x7f10b59fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7911)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7911)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7911)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7911)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7911)[0m *** SIGSEGV (@0x0) received by PID 7911 (TID 0x7f0bc6f6b700) from PID 0; stack trace: ***
[2m[36m(pid=7911)[0m     @     0x7f0bc6b44390 (unknown)
[2m[36m(pid=7911)[0m     @     0x7edcc8c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7975)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7975)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7975)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7975)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7975)[0m *** SIGSEGV (@0x0) received by PID 7975 (TID 0x7f7bcbdfa700) from PID 0; stack trace: ***
[2m[36m(pid=7975)[0m     @     0x7f7bcb9d3390 (unknown)
[2m[36m(pid=7975)[0m     @     0x7f4ccdb55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7975)[0m     @     0x7f4ccae4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7888)[0m     @     0x7f6e190e8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7888)[0m     @     0x7f6e190e8b53 at::TensorIterator::for_each()
[2m[36m(pid=7888)[0m     @     0x7f6e190e8e11 at::TensorIterator::for_each()
[2m[36m(pid=7888)[0m     @     0x7f6e1be01c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7888)[0m     @     0x7f6e1be24cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7914)[0m     @     0x7fb22e441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7914)[0m     @     0x7fb22e441b53 at::TensorIterator::for_each()
[2m[36m(pid=7914)[0m     @     0x7fb22e441e11 at::TensorIterator::for_each()
[2m[36m(pid=7914)[0m     @     0x7fb23115ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7892)[0m     @     0x7f1d3cd9c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7892)[0m     @     0x7f1d3cd9cb53 at::TensorIterator::for_each()
[2m[36m(pid=7892)[0m     @     0x7f1d3cd9ce11 at::TensorIterator::for_each()
[2m[36m(pid=7892)[0m     @     0x7f1d3fab5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7968)[0m     @     0x7f1c5f063b53 at::TensorIterator::for_each()
[2m[36m(pid=7968)[0m     @     0x7f1c5f063e11 at::TensorIterator::for_each()
[2m[36m(pid=7968)[0m     @     0x7f1c61d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7968)[0m     @     0x7f1c61d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7968)[0m     @     0x7f1c5eddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7968)[0m     @     0x7f1c5eddbc3f at::native::copy_impl()
[2m[36m(pid=7968)[0m     @     0x7f1c5eddced4 at::native::copy_()
[2m[36m(pid=7960)[0m     @     0x7f82bdb12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7960)[0m     @     0x7f82bdb12b53 at::TensorIterator::for_each()
[2m[36m(pid=7960)[0m     @     0x7f82bdb12e11 at::TensorIterator::for_each()
[2m[36m(pid=7960)[0m     @     0x7f82c082bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7960)[0m     @     0x7f82c084ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7897)[0m     @     0x7fb8af5cee11 at::TensorIterator::for_each()
[2m[36m(pid=7897)[0m     @     0x7fb8b22e7c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7897)[0m     @     0x7fb8b230acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7897)[0m     @     0x7fb8af348009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7897)[0m     @     0x7fb8af346c3f at::native::copy_impl()
[2m[36m(pid=8017)[0m     @     0x7f9088d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8017)[0m     @     0x7f9088d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8017)[0m     @     0x7f9085db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8017)[0m     @     0x7f9085db7c3f at::native::copy_impl()
[2m[36m(pid=8017)[0m     @     0x7f9085db8ed4 at::native::copy_()
[2m[36m(pid=7891)[0m     @     0x7f8f78f78b53 at::TensorIterator::for_each()
[2m[36m(pid=7891)[0m     @     0x7f8f78f78e11 at::TensorIterator::for_each()
[2m[36m(pid=7891)[0m     @     0x7f8f7bc91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8013)[0m     @     0x7f8bf7511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8013)[0m     @     0x7f8bf7534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8013)[0m     @     0x7f8bf4572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8013)[0m     @     0x7f8bf4570c3f at::native::copy_impl()
[2m[36m(pid=7947)[0m     @     0x7f7c5b63be11 at::TensorIterator::for_each()
[2m[36m(pid=7947)[0m     @     0x7f7c5e354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7947)[0m     @     0x7f7c5e377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7947)[0m     @     0x7f7c5b3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7956)[0m     @     0x7f098e692e11 at::TensorIterator::for_each()
[2m[36m(pid=7956)[0m     @     0x7f09913abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7956)[0m     @     0x7f09913cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7995)[0m     @     0x7f548c39d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7995)[0m     @     0x7f548c39bc3f at::native::copy_impl()
[2m[36m(pid=7995)[0m     @     0x7f548c39ced4 at::native::copy_()
[2m[36m(pid=7886)[0m     @     0x7f1fda797b53 at::TensorIterator::for_each()
[2m[36m(pid=7886)[0m     @     0x7f1fda797e11 at::TensorIterator::for_each()
[2m[36m(pid=7886)[0m     @     0x7f1fdd4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7886)[0m     @     0x7f1fdd4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7972)[0m     @     0x7fa82028cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7972)[0m     @     0x7fa8202afcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7972)[0m     @     0x7fa81d2ed009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7972)[0m     @     0x7fa81d2ebc3f at::native::copy_impl()
[2m[36m(pid=7922)[0m     @     0x7f4be1392e11 at::TensorIterator::for_each()
[2m[36m(pid=7922)[0m     @     0x7f4be40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7922)[0m     @     0x7f4be40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7922)[0m     @     0x7f4be110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7922)[0m     @     0x7f4be110ac3f at::native::copy_impl()
[2m[36m(pid=7899)[0m     @     0x7faa55701b53 at::TensorIterator::for_each()
[2m[36m(pid=7899)[0m     @     0x7faa55701e11 at::TensorIterator::for_each()
[2m[36m(pid=7899)[0m     @     0x7faa5841ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7899)[0m     @     0x7faa5843dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8015)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8015)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8015)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8015)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8015)[0m *** SIGSEGV (@0x0) received by PID 8015 (TID 0x7f653a368700) from PID 0; stack trace: ***
[2m[36m(pid=8015)[0m     @     0x7f6539f41390 (unknown)
[2m[36m(pid=7963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7963)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7963)[0m *** SIGSEGV (@0x0) received by PID 7963 (TID 0x7f7d71875700) from PID 0; stack trace: ***
[2m[36m(pid=7963)[0m     @     0x7f7d7144e390 (unknown)
[2m[36m(pid=7906)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7906)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7906)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7906)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7906)[0m *** SIGSEGV (@0x0) received by PID 7906 (TID 0x7f4bc96ba700) from PID 0; stack trace: ***
[2m[36m(pid=7998)[0m     @     0x7eee6f424e11 at::TensorIterator::for_each()
[2m[36m(pid=7998)[0m     @     0x7eee7213dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7998)[0m     @     0x7eee72160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7998)[0m     @     0x7eee6f19e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7998)[0m     @     0x7eee6f19cc3f at::native::copy_impl()
[2m[36m(pid=7950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7950)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7950)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7950)[0m *** SIGSEGV (@0x0) received by PID 7950 (TID 0x7fdcb0603700) from PID 0; stack trace: ***
[2m[36m(pid=7950)[0m     @     0x7fdcb01dc390 (unknown)
[2m[36m(pid=7954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7954)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7923)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7908)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7908)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7908)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7908)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7908)[0m *** SIGSEGV (@0x0) received by PID 7908 (TID 0x7f5d01192700) from PID 0; stack trace: ***
[2m[36m(pid=7908)[0m     @     0x7f5d00d6b390 (unknown)
[2m[36m(pid=7908)[0m     @     0x7f2e02f6efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7908)[0m     @     0x7f2e0026264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7997)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7997)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7997)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7997)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7997)[0m *** SIGSEGV (@0x0) received by PID 7997 (TID 0x7f4265c79700) from PID 0; stack trace: ***
[2m[36m(pid=7997)[0m     @     0x7f4265852390 (unknown)
[2m[36m(pid=7997)[0m     @     0x7f136796bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7997)[0m     @     0x7f1364c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7957)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7957)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7957)[0m *** SIGSEGV (@0x0) received by PID 7957 (TID 0x7f654f036700) from PID 0; stack trace: ***
[2m[36m(pid=7953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7953)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7953)[0m *** SIGSEGV (@0x0) received by PID 7953 (TID 0x7fbf1fd66700) from PID 0; stack trace: ***
[2m[36m(pid=7992)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7992)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7992)[0m *** SIGSEGV (@0x0) received by PID 7992 (TID 0x7f93cb64f700) from PID 0; stack trace: ***
[2m[36m(pid=7992)[0m     @     0x7f93cb228390 (unknown)
[2m[36m(pid=7992)[0m     @     0x7f64cd39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7992)[0m     @     0x7f64ca68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7992)[0m     @     0x7f64ca692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7970)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7970)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7970)[0m *** SIGSEGV (@0x0) received by PID 7970 (TID 0x7f1c5b597700) from PID 0; stack trace: ***
[2m[36m(pid=7970)[0m     @     0x7f1c5b170390 (unknown)
[2m[36m(pid=7970)[0m     @     0x7eed5d36efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7970)[0m     @     0x7eed5a66264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7970)[0m     @     0x7eed5a665977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7890)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7890)[0m *** SIGSEGV (@0x0) received by PID 7890 (TID 0x7f9fcfbca700) from PID 0; stack trace: ***
[2m[36m(pid=7890)[0m     @     0x7f9fcf7a3390 (unknown)
[2m[36m(pid=7890)[0m     @     0x7f70d1896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7890)[0m     @     0x7f70ceb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7959)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7959)[0m *** SIGSEGV (@0x0) received by PID 7959 (TID 0x7f5f2484a700) from PID 0; stack trace: ***
[2m[36m(pid=7959)[0m     @     0x7f5f24423390 (unknown)
[2m[36m(pid=7959)[0m     @     0x7f30265aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7959)[0m     @     0x7f302389e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7994)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7994)[0m *** SIGSEGV (@0x0) received by PID 7994 (TID 0x7ff310eab700) from PID 0; stack trace: ***
[2m[36m(pid=7994)[0m     @     0x7ff310a84390 (unknown)
[2m[36m(pid=7994)[0m     @     0x7fc4129f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7994)[0m     @     0x7fc40fce764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7994)[0m     @     0x7fc40fcea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7894)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7894)[0m *** SIGSEGV (@0x0) received by PID 7894 (TID 0x7f12c8232700) from PID 0; stack trace: ***
[2m[36m(pid=7894)[0m     @     0x7f12c7e0b390 (unknown)
[2m[36m(pid=7894)[0m     @     0x7ee3ca015fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7894)[0m     @     0x7ee3c730964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7894)[0m     @     0x7ee3c730c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7894)[0m     @     0x7ee3c730cb53 at::TensorIterator::for_each()
[2m[36m(pid=7905)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7905)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7905)[0m *** SIGSEGV (@0x0) received by PID 7905 (TID 0x7f9f1630f700) from PID 0; stack trace: ***
[2m[36m(pid=7905)[0m     @     0x7f9f15ee8390 (unknown)
[2m[36m(pid=7905)[0m     @     0x7f701809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7905)[0m     @     0x7f701538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7905)[0m     @     0x7f7015392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7999)[0m     @     0x7fb21bd93b53 at::TensorIterator::for_each()
[2m[36m(pid=7999)[0m     @     0x7fb21bd93e11 at::TensorIterator::for_each()
[2m[36m(pid=7999)[0m     @     0x7fb21eaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7999)[0m     @     0x7fb21eacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7999)[0m     @     0x7fb21bb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7999)[0m     @     0x7fb21bb0bc3f at::native::copy_impl()
[2m[36m(pid=7925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7925)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7925)[0m *** SIGSEGV (@0x0) received by PID 7925 (TID 0x7fb9ca144700) from PID 0; stack trace: ***
[2m[36m(pid=7909)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=7909)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=7909)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=7909)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7909)[0m *** SIGSEGV (@0x0) received by PID 7909 (TID 0x7f7655fb0700) from PID 0; stack trace: ***
[2m[36m(pid=7909)[0m     @     0x7f7655b89390 (unknown)
[2m[36m(pid=7909)[0m     @     0x7f4757db1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7909)[0m     @     0x7f47550a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8005)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8005)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8005)[0m *** Aborted at 1604573870 (unix time) try "date -d @1604573870" if you are using GNU date ***
[2m[36m(pid=8005)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8005)[0m *** SIGSEGV (@0x0) received by PID 8005 (TID 0x7f2651a85700) from PID 0; stack trace: ***
[2m[36m(pid=8005)[0m     @     0x7f265165e390 (unknown)
[2m[36m(pid=8005)[0m     @     0x7ef75375afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8005)[0m     @     0x7ef750a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7918)[0m     @     0x7f7d2cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=7918)[0m     @     0x7f7d2fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7918)[0m     @     0x7f7d2faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7918)[0m     @     0x7f7d2cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7918)[0m     @     0x7f7d2cadfc3f at::native::copy_impl()
[2m[36m(pid=7967)[0m     @     0x7f6c673e4b53 at::TensorIterator::for_each()
[2m[36m(pid=7967)[0m     @     0x7f6c673e4e11 at::TensorIterator::for_each()
[2m[36m(pid=7967)[0m     @     0x7f6c6a0fdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7967)[0m     @     0x7f6c6a120cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7967)[0m     @     0x7f6c6715e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7967)[0m     @     0x7f6c6715cc3f at::native::copy_impl()
[2m[36m(pid=8024)[0m     @     0x7f7e53a3e390 (unknown)
[2m[36m(pid=8024)[0m     @     0x7f4f559c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8024)[0m     @     0x7f4f52cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8024)[0m     @     0x7f4f52cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7900)[0m     @     0x7f6b99fc0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7900)[0m     @     0x7f6b99fe3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7900)[0m     @     0x7f6b97021009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7900)[0m     @     0x7f6b9701fc3f at::native::copy_impl()
[2m[36m(pid=7889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7889)[0m *** SIGSEGV (@0x0) received by PID 7889 (TID 0x7fb91bdb8700) from PID 0; stack trace: ***
[2m[36m(pid=7889)[0m     @     0x7fb91b991390 (unknown)
[2m[36m(pid=7889)[0m     @     0x7f8a1db55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7889)[0m     @     0x7f8a1ae4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7965)[0m     @     0x7ee79ce87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7965)[0m     @     0x7ee79ce85c3f at::native::copy_impl()
[2m[36m(pid=7965)[0m     @     0x7ee79ce86ed4 at::native::copy_()
[2m[36m(pid=7984)[0m     @     0x7f7ff5cb3ed4 at::native::copy_()
[2m[36m(pid=7984)[0m     @     0x7f7ff63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7984)[0m     @     0x7f7ff64fe148 at::Tensor::copy_()
[2m[36m(pid=7980)[0m     @     0x7fbc27aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7980)[0m     @     0x7fbc24ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7980)[0m     @     0x7fbc24adfc3f at::native::copy_impl()
[2m[36m(pid=7980)[0m     @     0x7fbc24ae0ed4 at::native::copy_()
[2m[36m(pid=7981)[0m     @     0x7ef60ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7981)[0m     @     0x7ef60ad5b148 at::Tensor::copy_()
[2m[36m(pid=7981)[0m     @     0x7ef60c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef2bc4c3f at::native::copy_impl()
[2m[36m(pid=7987)[0m     @     0x7edef2bc5ed4 at::native::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef33085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7903)[0m     @     0x7fcc1813f390 (unknown)
[2m[36m(pid=7903)[0m     @     0x7f9d1a293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7903)[0m     @     0x7f9d1758764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7903)[0m     @     0x7f9d1758a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7949)[0m     @     0x7ef95719ded4 at::native::copy_()
[2m[36m(pid=7949)[0m     @     0x7ef9578e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7949)[0m     @     0x7ef9579e8148 at::Tensor::copy_()
[2m[36m(pid=7949)[0m     @     0x7ef9595df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7916)[0m     @     0x7ed4f1fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7916)[0m     @     0x7ed4ef014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7916)[0m     @     0x7ed4ef012c3f at::native::copy_impl()
[2m[36m(pid=7916)[0m     @     0x7ed4ef013ed4 at::native::copy_()
[2m[36m(pid=7893)[0m     @     0x7f46dfaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7893)[0m     @     0x7f46dcae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7893)[0m     @     0x7f46dcadfc3f at::native::copy_impl()
[2m[36m(pid=7910)[0m     @     0x7ed51d8b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7910)[0m     @     0x7ed51d8b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7910)[0m     @     0x7ed51d8b9b53 at::TensorIterator::for_each()
[2m[36m(pid=8004)[0m     @     0x7eeb8210cc3f at::native::copy_impl()
[2m[36m(pid=8004)[0m     @     0x7eeb8210ded4 at::native::copy_()
[2m[36m(pid=8004)[0m     @     0x7eeb828505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7990)[0m     @     0x7fa25039ced4 at::native::copy_()
[2m[36m(pid=7990)[0m     @     0x7fa250adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7990)[0m     @     0x7fa250be7148 at::Tensor::copy_()
[2m[36m(pid=8011)[0m     @     0x7f839878e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8011)[0m     @     0x7f8398896148 at::Tensor::copy_()
[2m[36m(pid=8011)[0m     @     0x7f839a48d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7904)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7904)[0m *** SIGSEGV (@0x0) received by PID 7904 (TID 0x7f964d224700) from PID 0; stack trace: ***
[2m[36m(pid=7904)[0m     @     0x7f964cdfd390 (unknown)
[2m[36m(pid=7996)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7996)[0m *** SIGSEGV (@0x0) received by PID 7996 (TID 0x7f22181c7700) from PID 0; stack trace: ***
[2m[36m(pid=7996)[0m     @     0x7f2217da0390 (unknown)
[2m[36m(pid=7996)[0m     @     0x7ef319da0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7996)[0m     @     0x7ef31709464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7996)[0m     @     0x7ef317097977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7962)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7962)[0m *** SIGSEGV (@0x0) received by PID 7962 (TID 0x7f2df279e700) from PID 0; stack trace: ***
[2m[36m(pid=7962)[0m     @     0x7f2df2377390 (unknown)
[2m[36m(pid=7971)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7971)[0m *** SIGSEGV (@0x0) received by PID 7971 (TID 0x7ff4c2225700) from PID 0; stack trace: ***
[2m[36m(pid=7971)[0m     @     0x7ff4c1dfe390 (unknown)
[2m[36m(pid=7966)[0m     @     0x7f176f1d1390 (unknown)
[2m[36m(pid=7966)[0m     @     0x7ee87139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7966)[0m     @     0x7ee86e68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7966)[0m     @     0x7ee86e692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7955)[0m     @     0x7fa115e5f390 (unknown)
[2m[36m(pid=7955)[0m     @     0x7f721806efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7955)[0m     @     0x7f721536264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7955)[0m     @     0x7f7215365977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7985)[0m     @     0x7f6a06511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7985)[0m     @     0x7f6a0650fc3f at::native::copy_impl()
[2m[36m(pid=7985)[0m     @     0x7f6a06510ed4 at::native::copy_()
[2m[36m(pid=7902)[0m     @     0x7f98fc2caed4 at::native::copy_()
[2m[36m(pid=7902)[0m     @     0x7f98fca0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7902)[0m     @     0x7f98fcb15148 at::Tensor::copy_()
[2m[36m(pid=7969)[0m     @     0x7f6ec613b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7969)[0m     @     0x7f6ec6139c3f at::native::copy_impl()
[2m[36m(pid=7969)[0m     @     0x7f6ec613aed4 at::native::copy_()
[2m[36m(pid=7958)[0m     @     0x7f9468531ed4 at::native::copy_()
[2m[36m(pid=7958)[0m     @     0x7f9468c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7958)[0m     @     0x7f9468d7c148 at::Tensor::copy_()
[2m[36m(pid=7958)[0m     @     0x7f946a973989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7961)[0m     @     0x7f0cb8dd65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7961)[0m     @     0x7f0cb8ede148 at::Tensor::copy_()
[2m[36m(pid=7961)[0m     @     0x7f0cbaad5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7961)[0m     @     0x7f0cb8dd65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7977)[0m     @     0x7f62fc6eec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7977)[0m     @     0x7f62fc711cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7977)[0m     @     0x7f62f974f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7977)[0m     @     0x7f62f974dc3f at::native::copy_impl()
[2m[36m(pid=7977)[0m     @     0x7f62f974eed4 at::native::copy_()
[2m[36m(pid=7982)[0m     @     0x7f0b3644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7982)[0m     @     0x7f0b36553148 at::Tensor::copy_()
[2m[36m(pid=7982)[0m     @     0x7f0b3814a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7982)[0m     @     0x7f0b3644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7898)[0m     @     0x7f0ca203c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7898)[0m     @     0x7f0ca203f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7898)[0m     @     0x7f0ca203fb53 at::TensorIterator::for_each()
[2m[36m(pid=7898)[0m     @     0x7f0ca203fe11 at::TensorIterator::for_each()
[2m[36m(pid=7887)[0m     @     0x7f0cb3c3a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7887)[0m     @     0x7f0cb3c38c3f at::native::copy_impl()
[2m[36m(pid=7887)[0m     @     0x7f0cb3c39ed4 at::native::copy_()
[2m[36m(pid=7887)[0m     @     0x7f0cb437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7907)[0m     @     0x7ee32abaf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7907)[0m     @     0x7ee32abafb53 at::TensorIterator::for_each()
[2m[36m(pid=7907)[0m     @     0x7ee32abafe11 at::TensorIterator::for_each()
[2m[36m(pid=7907)[0m     @     0x7ee32d8c8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7895)[0m     @     0x7f81803b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7895)[0m     @     0x7f817d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7895)[0m     @     0x7f817d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7895)[0m     @     0x7f817d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=8006)[0m     @     0x7ed9e6996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8006)[0m     @     0x7ed9e6994c3f at::native::copy_impl()
[2m[36m(pid=8006)[0m     @     0x7ed9e6995ed4 at::native::copy_()
[2m[36m(pid=8006)[0m     @     0x7ed9e70d85cc c10::Dispatcher::callWithDispatchKey<>()
2020-11-05 10:57:50,616	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=7964)[0m     @     0x7f49bd10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7964)[0m     @     0x7f49bd10ac3f at::native::copy_impl()
[2m[36m(pid=7964)[0m     @     0x7f49bd10bed4 at::native::copy_()
[2m[36m(pid=7964)[0m     @     0x7f49bd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7989)[0m     @     0x7ef64ea1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7989)[0m     @     0x7ef64ba5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7989)[0m     @     0x7ef64ba5ac3f at::native::copy_impl()
[2m[36m(pid=7989)[0m     @     0x7ef64ba5bed4 at::native::copy_()
[2m[36m(pid=7974)[0m     @     0x7f10b2a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7974)[0m     @     0x7f10b2a37c3f at::native::copy_impl()
[2m[36m(pid=7974)[0m     @     0x7f10b2a38ed4 at::native::copy_()
[2m[36m(pid=7974)[0m     @     0x7f10b317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7911)[0m     @     0x7edcc5f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7911)[0m     @     0x7edcc5f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7911)[0m     @     0x7edcc5f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=7911)[0m     @     0x7edcc5f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=7975)[0m     @     0x7f4ccae4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7975)[0m     @     0x7f4ccae4cb53 at::TensorIterator::for_each()
[2m[36m(pid=7975)[0m     @     0x7f4ccae4ce11 at::TensorIterator::for_each()
[2m[36m(pid=7888)[0m     @     0x7f6e18e62009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7888)[0m     @     0x7f6e18e60c3f at::native::copy_impl()
[2m[36m(pid=7888)[0m     @     0x7f6e18e61ed4 at::native::copy_()
[2m[36m(pid=7888)[0m     @     0x7f6e195a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7914)[0m     @     0x7fb23117dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7914)[0m     @     0x7fb22e1bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7914)[0m     @     0x7fb22e1b9c3f at::native::copy_impl()
[2m[36m(pid=7914)[0m     @     0x7fb22e1baed4 at::native::copy_()
[2m[36m(pid=7892)[0m     @     0x7f1d3fad8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7892)[0m     @     0x7f1d3cb16009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7892)[0m     @     0x7f1d3cb14c3f at::native::copy_impl()
[2m[36m(pid=7892)[0m     @     0x7f1d3cb15ed4 at::native::copy_()
[2m[36m(pid=7968)[0m     @     0x7f1c5f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7968)[0m     @     0x7f1c5f627148 at::Tensor::copy_()
[2m[36m(pid=7968)[0m     @     0x7f1c6121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7968)[0m     @     0x7f1c5f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7960)[0m     @     0x7f82bd88c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7960)[0m     @     0x7f82bd88ac3f at::native::copy_impl()
[2m[36m(pid=7960)[0m     @     0x7f82bd88bed4 at::native::copy_()
[2m[36m(pid=7960)[0m     @     0x7f82bdfce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7897)[0m     @     0x7fb8af347ed4 at::native::copy_()
[2m[36m(pid=7897)[0m     @     0x7fb8afa8a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7897)[0m     @     0x7fb8afb92148 at::Tensor::copy_()
[2m[36m(pid=8017)[0m     @     0x7f90864fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8017)[0m     @     0x7f9086603148 at::Tensor::copy_()
[2m[36m(pid=8017)[0m     @     0x7f90881fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7891)[0m     @     0x7f8f7bcb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7891)[0m     @     0x7f8f78cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7891)[0m     @     0x7f8f78cf0c3f at::native::copy_impl()
[2m[36m(pid=7891)[0m     @     0x7f8f78cf1ed4 at::native::copy_()
[2m[36m(pid=8013)[0m     @     0x7f8bf4571ed4 at::native::copy_()
[2m[36m(pid=8013)[0m     @     0x7f8bf4cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8013)[0m     @     0x7f8bf4dbc148 at::Tensor::copy_()
[2m[36m(pid=8013)[0m     @     0x7f8bf69b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7947)[0m     @     0x7f7c5b3b3c3f at::native::copy_impl()
[2m[36m(pid=7947)[0m     @     0x7f7c5b3b4ed4 at::native::copy_()
[2m[36m(pid=7947)[0m     @     0x7f7c5baf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7956)[0m     @     0x7f098e40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7956)[0m     @     0x7f098e40ac3f at::native::copy_impl()
[2m[36m(pid=7956)[0m     @     0x7f098e40bed4 at::native::copy_()
[2m[36m(pid=7956)[0m     @     0x7f098eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7995)[0m     @     0x7f548cadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7995)[0m     @     0x7f548cbe7148 at::Tensor::copy_()
[2m[36m(pid=7995)[0m     @     0x7f548e7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7995)[0m     @     0x7f548cadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7886)[0m     @     0x7f1fda511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7886)[0m     @     0x7f1fda50fc3f at::native::copy_impl()
[2m[36m(pid=7886)[0m     @     0x7f1fda510ed4 at::native::copy_()
[2m[36m(pid=7886)[0m     @     0x7f1fdac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7972)[0m     @     0x7fa81d2eced4 at::native::copy_()
[2m[36m(pid=7972)[0m     @     0x7fa81da2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7972)[0m     @     0x7fa81db37148 at::Tensor::copy_()
[2m[36m(pid=7972)[0m     @     0x7fa81f72e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7922)[0m     @     0x7f4be110bed4 at::native::copy_()
[2m[36m(pid=7922)[0m     @     0x7f4be184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7922)[0m     @     0x7f4be1956148 at::Tensor::copy_()
[2m[36m(pid=7899)[0m     @     0x7faa5547b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7899)[0m     @     0x7faa55479c3f at::native::copy_impl()
[2m[36m(pid=7899)[0m     @     0x7faa5547aed4 at::native::copy_()
[2m[36m(pid=7899)[0m     @     0x7faa55bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8015)[0m     @     0x7f363bf50fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8015)[0m     @     0x7f363924464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8015)[0m     @     0x7f3639247977 at::TensorIterator::serial_for_each()
[2m[36m(pid=8015)[0m     @     0x7f3639247b53 at::TensorIterator::for_each()
[2m[36m(pid=7963)[0m     @     0x7f4e73643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7963)[0m     @     0x7f4e7093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7963)[0m     @     0x7f4e7093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7963)[0m     @     0x7f4e7093ab53 at::TensorIterator::for_each()
[2m[36m(pid=7906)[0m     @     0x7f4bc9293390 (unknown)
[2m[36m(pid=7906)[0m     @     0x7f1ccb49cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7906)[0m     @     0x7f1cc879064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7998)[0m     @     0x7eee6f19ded4 at::native::copy_()
[2m[36m(pid=7998)[0m     @     0x7eee6f8e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7998)[0m     @     0x7eee6f9e8148 at::Tensor::copy_()
[2m[36m(pid=7998)[0m     @     0x7eee715df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadb2344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7950)[0m     @     0x7fadaf63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7950)[0m     @     0x7fadaf63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7950)[0m     @     0x7fadaf63bb53 at::TensorIterator::for_each()
[2m[36m(pid=7954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7954)[0m *** SIGSEGV (@0x0) received by PID 7954 (TID 0x7fd6fad78700) from PID 0; stack trace: ***
[2m[36m(pid=7954)[0m     @     0x7fd6fa951390 (unknown)
[2m[36m(pid=7954)[0m     @     0x7fa7fc981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7954)[0m     @     0x7fa7f9c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=7923)[0m *** SIGSEGV (@0x0) received by PID 7923 (TID 0x7f98bcba1700) from PID 0; stack trace: ***
[2m[36m(pid=7923)[0m     @     0x7f98bc77a390 (unknown)
[2m[36m(pid=7923)[0m     @     0x7f69be7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7923)[0m     @     0x7f69bbace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7923)[0m     @     0x7f69bbad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7908)[0m     @     0x7f2e00265977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7908)[0m     @     0x7f2e00265b53 at::TensorIterator::for_each()
[2m[36m(pid=7908)[0m     @     0x7f2e00265e11 at::TensorIterator::for_each()
[2m[36m(pid=7908)[0m     @     0x7f2e02f7ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7997)[0m     @     0x7f1364c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7997)[0m     @     0x7f1364c62b53 at::TensorIterator::for_each()
[2m[36m(pid=7997)[0m     @     0x7f1364c62e11 at::TensorIterator::for_each()
[2m[36m(pid=7997)[0m     @     0x7f136797bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7957)[0m     @     0x7f654ec0f390 (unknown)
[2m[36m(pid=7957)[0m     @     0x7f3650c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7957)[0m     @     0x7f364df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7957)[0m     @     0x7f364df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7953)[0m     @     0x7fbf1f93f390 (unknown)
[2m[36m(pid=7953)[0m     @     0x7f90219c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7953)[0m     @     0x7f901ecbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7953)[0m     @     0x7f901ecbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7953)[0m     @     0x7f901ecbfb53 at::TensorIterator::for_each()
[2m[36m(pid=7992)[0m     @     0x7f64ca692b53 at::TensorIterator::for_each()
[2m[36m(pid=7992)[0m     @     0x7f64ca692e11 at::TensorIterator::for_each()
[2m[36m(pid=7970)[0m     @     0x7eed5a665b53 at::TensorIterator::for_each()
[2m[36m(pid=7970)[0m     @     0x7eed5a665e11 at::TensorIterator::for_each()
[2m[36m(pid=7970)[0m     @     0x7eed5d37ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7890)[0m     @     0x7f70ceb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7890)[0m     @     0x7f70ceb8db53 at::TensorIterator::for_each()
[2m[36m(pid=7959)[0m     @     0x7f30238a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7959)[0m     @     0x7f30238a1b53 at::TensorIterator::for_each()
[2m[36m(pid=7994)[0m     @     0x7fc40fceab53 at::TensorIterator::for_each()
[2m[36m(pid=7994)[0m     @     0x7fc40fceae11 at::TensorIterator::for_each()
[2m[36m(pid=7994)[0m     @     0x7fc412a03c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7994)[0m     @     0x7fc412a26cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7894)[0m     @     0x7ee3c730ce11 at::TensorIterator::for_each()
[2m[36m(pid=7894)[0m     @     0x7ee3ca025c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7894)[0m     @     0x7ee3ca048cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7905)[0m     @     0x7f7015392b53 at::TensorIterator::for_each()
[2m[36m(pid=7905)[0m     @     0x7f7015392e11 at::TensorIterator::for_each()
[2m[36m(pid=7999)[0m     @     0x7fb21bb0ced4 at::native::copy_()
[2m[36m(pid=7999)[0m     @     0x7fb21c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7925)[0m     @     0x7fb9c9d1d390 (unknown)
[2m[36m(pid=7925)[0m     @     0x7f8acbf26fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7925)[0m     @     0x7f8ac921a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7909)[0m     @     0x7f47550a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7909)[0m     @     0x7f47550a8b53 at::TensorIterator::for_each()
[2m[36m(pid=8005)[0m     @     0x7ef750a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7918)[0m     @     0x7f7d2cae0ed4 at::native::copy_()
[2m[36m(pid=7918)[0m     @     0x7f7d2d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7918)[0m     @     0x7f7d2d32b148 at::Tensor::copy_()
[2m[36m(pid=7918)[0m     @     0x7f7d2ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7967)[0m     @     0x7f6c6715ded4 at::native::copy_()
[2m[36m(pid=7967)[0m     @     0x7f6c678a05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7967)[0m     @     0x7f6c679a8148 at::Tensor::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f52cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=8024)[0m     @     0x7f4f52cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=8024)[0m     @     0x7f4f559d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8024)[0m     @     0x7f4f559fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8024)[0m     @     0x7f4f52a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7900)[0m     @     0x7f6b97020ed4 at::native::copy_()
[2m[36m(pid=7900)[0m     @     0x7f6b977635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7900)[0m     @     0x7f6b9786b148 at::Tensor::copy_()
[2m[36m(pid=7900)[0m     @     0x7f6b99462989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7889)[0m     @     0x7f8a1ae4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7889)[0m     @     0x7f8a1ae4cb53 at::TensorIterator::for_each()
[2m[36m(pid=7889)[0m     @     0x7f8a1ae4ce11 at::TensorIterator::for_each()
[2m[36m(pid=7965)[0m     @     0x7ee79d5c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7965)[0m     @     0x7ee79d6d1148 at::Tensor::copy_()
[2m[36m(pid=7965)[0m     @     0x7ee79f2c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7965)[0m     @     0x7ee79d5c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7984)[0m     @     0x7f7ff80f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7984)[0m     @     0x7f7ff63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7984)[0m     @     0x7f7ff64fe148 at::Tensor::copy_()
[2m[36m(pid=7984)[0m     @     0x7f7ffc7b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7984)[0m     @     0x559f9e7dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7984)[0m     @     0x559f9e735b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7984)[0m     @     0x559f9e7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7984)[0m     @     0x559f9e7c1a20 method_vectorcall
[2m[36m(pid=7984)[0m     @     0x559f9e735bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7984)[0m     @     0x559f9e7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7984)[0m     @     0x559f9e7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7984)[0m     @     0x559f9e736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7984)[0m     @     0x559f9e7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7984)[0m     @     0x559f9e7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7984)[0m     @     0x559f9e736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7984)[0m     @     0x559f9e7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7984)[0m     @     0x559f9e7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7984)[0m     @     0x559f9e736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7984)[0m     @     0x559f9e7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x7fbc252235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7980)[0m     @     0x7fbc2532b148 at::Tensor::copy_()
[2m[36m(pid=7980)[0m     @     0x7fbc26f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7981)[0m     @     0x7ef60ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7981)[0m     @     0x7ef60ad5b148 at::Tensor::copy_()
[2m[36m(pid=7981)[0m     @     0x7ef611011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7981)[0m     @     0x5615eab58fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7981)[0m     @     0x5615eaab3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7981)[0m     @     0x5615eab3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7981)[0m     @     0x5615eab3fa20 method_vectorcall
[2m[36m(pid=7981)[0m     @     0x5615eaab3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7981)[0m     @     0x5615eab3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7981)[0m     @     0x5615eab3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7981)[0m     @     0x5615eaab4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7981)[0m     @     0x5615eab3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7981)[0m     @     0x5615eab3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7981)[0m     @     0x5615eaab4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7981)[0m     @     0x5615eab3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7981)[0m     @     0x5615eab3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7981)[0m     @     0x5615eaab4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7981)[0m     @     0x5615eab3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x7edef3410148 at::Tensor::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef5007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef33085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7903)[0m     @     0x7f9d1758ab53 at::TensorIterator::for_each()
[2m[36m(pid=7903)[0m     @     0x7f9d1758ae11 at::TensorIterator::for_each()
[2m[36m(pid=7903)[0m     @     0x7f9d1a2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7903)[0m     @     0x7f9d1a2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7949)[0m     @     0x7ef9578e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7949)[0m     @     0x7ef9579e8148 at::Tensor::copy_()
[2m[36m(pid=7949)[0m     @     0x7ef95dc9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7949)[0m     @     0x55fa1dcb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7949)[0m     @     0x55fa1dc11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7949)[0m     @     0x55fa1dc9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7949)[0m     @     0x55fa1dc9da20 method_vectorcall
[2m[36m(pid=7949)[0m     @     0x55fa1dc11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7949)[0m     @     0x55fa1dc9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7949)[0m     @     0x55fa1dc9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7949)[0m     @     0x55fa1dc12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7949)[0m     @     0x55fa1dc9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7949)[0m     @     0x55fa1dc9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7949)[0m     @     0x55fa1dc12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7949)[0m     @     0x55fa1dc9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7949)[0m     @     0x55fa1dc9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7949)[0m     @     0x55fa1dc12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7949)[0m     @     0x55fa1dc9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7916)[0m     @     0x7ed4ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7916)[0m     @     0x7ed4ef85e148 at::Tensor::copy_()
[2m[36m(pid=7916)[0m     @     0x7ed4f1455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7893)[0m     @     0x7f46dcae0ed4 at::native::copy_()
[2m[36m(pid=7893)[0m     @     0x7f46dd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7893)[0m     @     0x7f46dd32b148 at::Tensor::copy_()
[2m[36m(pid=7893)[0m     @     0x7f46def22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7910)[0m     @     0x7ed51d8b9e11 at::TensorIterator::for_each()
[2m[36m(pid=7910)[0m     @     0x7ed5205d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7910)[0m     @     0x7ed5205f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7910)[0m     @     0x7ed51d633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7910)[0m     @     0x7ed51d631c3f at::native::copy_impl()
[2m[36m(pid=8004)[0m     @     0x7eeb82958148 at::Tensor::copy_()
[2m[36m(pid=8004)[0m     @     0x7eeb8454f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8004)[0m     @     0x7eeb828505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7990)[0m     @     0x7fa2527de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7990)[0m     @     0x7fa250adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8011)[0m     @     0x7f839878e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8011)[0m     @     0x7f8398896148 at::Tensor::copy_()
[2m[36m(pid=8011)[0m     @     0x7f839eb4cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8011)[0m     @     0x55bac8d21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8011)[0m     @     0x55bac8c7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8011)[0m     @     0x55bac8d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=8011)[0m     @     0x55bac8d08a20 method_vectorcall
[2m[36m(pid=8011)[0m     @     0x55bac8c7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8011)[0m     @     0x55bac8d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=8011)[0m     @     0x55bac8d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8011)[0m     @     0x55bac8c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8011)[0m     @     0x55bac8d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=8011)[0m     @     0x55bac8d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8011)[0m     @     0x55bac8c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8011)[0m     @     0x55bac8d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=8011)[0m     @     0x55bac8d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8011)[0m     @     0x55bac8c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8011)[0m     @     0x55bac8d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x7f674f000fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7904)[0m     @     0x7f674c2f464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7904)[0m     @     0x7f674c2f7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7996)[0m     @     0x7ef317097b53 at::TensorIterator::for_each()
[2m[36m(pid=7996)[0m     @     0x7ef317097e11 at::TensorIterator::for_each()
[2m[36m(pid=7996)[0m     @     0x7ef319db0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7996)[0m     @     0x7ef319dd3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7962)[0m     @     0x7efef4595fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7962)[0m     @     0x7efef188964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7962)[0m     @     0x7efef188c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7971)[0m     @     0x7fc5c3feefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=7971)[0m     @     0x7fc5c12e264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=7966)[0m     @     0x7ee86e692b53 at::TensorIterator::for_each()
[2m[36m(pid=7966)[0m     @     0x7ee86e692e11 at::TensorIterator::for_each()
[2m[36m(pid=7966)[0m     @     0x7ee8713abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7966)[0m     @     0x7ee8713cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7955)[0m     @     0x7f7215365b53 at::TensorIterator::for_each()
[2m[36m(pid=7955)[0m     @     0x7f7215365e11 at::TensorIterator::for_each()
[2m[36m(pid=7955)[0m     @     0x7f721807ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7955)[0m     @     0x7f72180a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7985)[0m     @     0x7f6a06c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7985)[0m     @     0x7f6a06d5b148 at::Tensor::copy_()
[2m[36m(pid=7985)[0m     @     0x7f6a08952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7902)[0m     @     0x7f98fe70c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7902)[0m     @     0x7f98fca0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7902)[0m     @     0x7f98fcb15148 at::Tensor::copy_()
[2m[36m(pid=7902)[0m     @     0x7f9902dcbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7902)[0m     @     0x560449afcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7902)[0m     @     0x560449a57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7902)[0m     @     0x560449ae2baf _PyEval_EvalCodeWithName
[2m[36m(pid=7902)[0m     @     0x560449ae3a20 method_vectorcall
[2m[36m(pid=7902)[0m     @     0x560449a57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7902)[0m     @     0x560449ae2baf _PyEval_EvalCodeWithName
[2m[36m(pid=7902)[0m     @     0x560449ae3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7902)[0m     @     0x560449a58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7902)[0m     @     0x560449ae2baf _PyEval_EvalCodeWithName
[2m[36m(pid=7902)[0m     @     0x560449ae3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7902)[0m     @     0x560449a58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7902)[0m     @     0x560449ae2baf _PyEval_EvalCodeWithName
[2m[36m(pid=7902)[0m     @     0x560449ae3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7902)[0m     @     0x560449a58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7902)[0m     @     0x560449ae2baf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x7f6ec687d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7969)[0m     @     0x7f6ec6985148 at::Tensor::copy_()
[2m[36m(pid=7969)[0m     @     0x7f6ec857c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7958)[0m     @     0x7f9468c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7958)[0m     @     0x7f9468d7c148 at::Tensor::copy_()
[2m[36m(pid=7958)[0m     @     0x7f946f032bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7958)[0m     @     0x564bb6162fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7958)[0m     @     0x564bb60bdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7958)[0m     @     0x564bb6148baf _PyEval_EvalCodeWithName
[2m[36m(pid=7958)[0m     @     0x564bb6149a20 method_vectorcall
[2m[36m(pid=7958)[0m     @     0x564bb60bdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7958)[0m     @     0x564bb6148baf _PyEval_EvalCodeWithName
[2m[36m(pid=7958)[0m     @     0x564bb6149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7958)[0m     @     0x564bb60be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7958)[0m     @     0x564bb6148baf _PyEval_EvalCodeWithName
[2m[36m(pid=7958)[0m     @     0x564bb6149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7958)[0m     @     0x564bb60be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7958)[0m     @     0x564bb6148baf _PyEval_EvalCodeWithName
[2m[36m(pid=7958)[0m     @     0x564bb6149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7958)[0m     @     0x564bb60be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7958)[0m     @     0x564bb6148baf _PyEval_EvalCodeWithName
[2m[36m(pid=7961)[0m     @     0x7f0cb8ede148 at::Tensor::copy_()
[2m[36m(pid=7961)[0m     @     0x7f0cbf194bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7961)[0m     @     0x5632ce7adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7961)[0m     @     0x5632ce708b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7961)[0m     @     0x5632ce793baf _PyEval_EvalCodeWithName
[2m[36m(pid=7961)[0m     @     0x5632ce794a20 method_vectorcall
[2m[36m(pid=7961)[0m     @     0x5632ce708bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7961)[0m     @     0x5632ce793baf _PyEval_EvalCodeWithName
[2m[36m(pid=7961)[0m     @     0x5632ce794643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7961)[0m     @     0x5632ce709689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7961)[0m     @     0x5632ce793baf _PyEval_EvalCodeWithName
[2m[36m(pid=7961)[0m     @     0x5632ce794643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7961)[0m     @     0x5632ce709689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7961)[0m     @     0x5632ce793baf _PyEval_EvalCodeWithName
[2m[36m(pid=7961)[0m     @     0x5632ce794643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7961)[0m     @     0x5632ce709689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7961)[0m     @     0x5632ce793baf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x7f62f9e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7977)[0m     @     0x7f62f9f99148 at::Tensor::copy_()
[2m[36m(pid=7982)[0m     @     0x7f0b36553148 at::Tensor::copy_()
[2m[36m(pid=7982)[0m     @     0x7f0b3c809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7982)[0m     @     0x556ac9b77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7982)[0m     @     0x556ac9ad2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7982)[0m     @     0x556ac9b5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7982)[0m     @     0x556ac9b5ea20 method_vectorcall
[2m[36m(pid=7982)[0m     @     0x556ac9ad2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7982)[0m     @     0x556ac9b5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7982)[0m     @     0x556ac9b5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7982)[0m     @     0x556ac9ad3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7982)[0m     @     0x556ac9b5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7982)[0m     @     0x556ac9b5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7982)[0m     @     0x556ac9ad3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7982)[0m     @     0x556ac9b5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7982)[0m     @     0x556ac9b5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7982)[0m     @     0x556ac9ad3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7982)[0m     @     0x556ac9b5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x7f0ca4d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7898)[0m     @     0x7f0ca4d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7898)[0m     @     0x7f0ca1db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7898)[0m     @     0x7f0ca1db7c3f at::native::copy_impl()
[2m[36m(pid=7887)[0m     @     0x7f0cb4484148 at::Tensor::copy_()
[2m[36m(pid=7887)[0m     @     0x7f0cb607b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7907)[0m     @     0x7ee32d8ebcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7907)[0m     @     0x7ee32a929009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7907)[0m     @     0x7ee32a927c3f at::native::copy_impl()
[2m[36m(pid=7895)[0m     @     0x7f817d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=7895)[0m     @     0x7f81803c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7895)[0m     @     0x7f81803e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7895)[0m     @     0x7f817d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8006)[0m     @     0x7ed9e71e0148 at::Tensor::copy_()
[2m[36m(pid=8006)[0m     @     0x7ed9e8dd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7964)[0m     @     0x7f49bd956148 at::Tensor::copy_()
[2m[36m(pid=7964)[0m     @     0x7f49bf54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7989)[0m     @     0x7ef64c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7989)[0m     @     0x7ef64c2a6148 at::Tensor::copy_()
[2m[36m(pid=7989)[0m     @     0x7ef64de9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7974)[0m     @     0x7f10b3283148 at::Tensor::copy_()
[2m[36m(pid=7974)[0m     @     0x7f10b4e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7911)[0m     @     0x7edcc8c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7911)[0m     @     0x7edcc8c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7911)[0m     @     0x7edcc5cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7911)[0m     @     0x7edcc5cb2c3f at::native::copy_impl()
[2m[36m(pid=7975)[0m     @     0x7f4ccdb65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7975)[0m     @     0x7f4ccdb88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7975)[0m     @     0x7f4ccabc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7975)[0m     @     0x7f4ccabc4c3f at::native::copy_impl()
[2m[36m(pid=7888)[0m     @     0x7f6e196ac148 at::Tensor::copy_()
[2m[36m(pid=7888)[0m     @     0x7f6e1b2a3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7914)[0m     @     0x7fb22e8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7914)[0m     @     0x7fb22ea05148 at::Tensor::copy_()
[2m[36m(pid=7914)[0m     @     0x7fb2305fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7892)[0m     @     0x7f1d3d2585cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7892)[0m     @     0x7f1d3d360148 at::Tensor::copy_()
[2m[36m(pid=7892)[0m     @     0x7f1d3ef57989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7968)[0m     @     0x7f1c5f627148 at::Tensor::copy_()
[2m[36m(pid=7968)[0m     @     0x7f1c658ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7968)[0m     @     0x562378835fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7968)[0m     @     0x562378790b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7968)[0m     @     0x56237881bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7968)[0m     @     0x56237881ca20 method_vectorcall
[2m[36m(pid=7968)[0m     @     0x562378790bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7968)[0m     @     0x56237881bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7968)[0m     @     0x56237881c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7968)[0m     @     0x562378791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7968)[0m     @     0x56237881bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7968)[0m     @     0x56237881c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7968)[0m     @     0x562378791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7968)[0m     @     0x56237881bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7968)[0m     @     0x56237881c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7968)[0m     @     0x562378791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7968)[0m     @     0x56237881bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x7f82be0d6148 at::Tensor::copy_()
[2m[36m(pid=7960)[0m     @     0x7f82bfccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7897)[0m     @     0x7fb8b1789989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7897)[0m     @     0x7fb8afa8a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8017)[0m     @     0x7f90864fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8017)[0m     @     0x7f9086603148 at::Tensor::copy_()
[2m[36m(pid=8017)[0m     @     0x7f908c8b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8017)[0m     @     0x55b0379fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8017)[0m     @     0x55b03795ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8017)[0m     @     0x55b0379e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8017)[0m     @     0x55b0379e6a20 method_vectorcall
[2m[36m(pid=8017)[0m     @     0x55b03795abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8017)[0m     @     0x55b0379e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8017)[0m     @     0x55b0379e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8017)[0m     @     0x55b03795b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8017)[0m     @     0x55b0379e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8017)[0m     @     0x55b0379e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8017)[0m     @     0x55b03795b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8017)[0m     @     0x55b0379e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8017)[0m     @     0x55b0379e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8017)[0m     @     0x55b03795b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8017)[0m     @     0x55b0379e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x7f8f794345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7891)[0m     @     0x7f8f7953c148 at::Tensor::copy_()
[2m[36m(pid=7891)[0m     @     0x7f8f7b133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8013)[0m     @     0x7f8bf4cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8013)[0m     @     0x7f8bf4dbc148 at::Tensor::copy_()
[2m[36m(pid=8013)[0m     @     0x7f8bfb072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8013)[0m     @     0x558628fa1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8013)[0m     @     0x558628efcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x7f7c5bbff148 at::Tensor::copy_()
[2m[36m(pid=7947)[0m     @     0x7f7c5d7f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7947)[0m     @     0x7f7c5baf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7956)[0m     @     0x7f098ec56148 at::Tensor::copy_()
[2m[36m(pid=7956)[0m     @     0x7f099084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7956)[0m     @     0x7f098eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7995)[0m     @     0x7f548cbe7148 at::Tensor::copy_()
[2m[36m(pid=7995)[0m     @     0x7f5492e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7995)[0m     @     0x561d3482dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7995)[0m     @     0x561d34788b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7995)[0m     @     0x561d34813baf _PyEval_EvalCodeWithName
[2m[36m(pid=7995)[0m     @     0x561d34814a20 method_vectorcall
[2m[36m(pid=7995)[0m     @     0x561d34788bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7995)[0m     @     0x561d34813baf _PyEval_EvalCodeWithName
[2m[36m(pid=7995)[0m     @     0x561d34814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7995)[0m     @     0x561d34789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7995)[0m     @     0x561d34813baf _PyEval_EvalCodeWithName
[2m[36m(pid=7995)[0m     @     0x561d34814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7995)[0m     @     0x561d34789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7995)[0m     @     0x561d34813baf _PyEval_EvalCodeWithName
[2m[36m(pid=7995)[0m     @     0x561d34814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7995)[0m     @     0x561d34789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7995)[0m     @     0x561d34813baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x7f1fdad5b148 at::Tensor::copy_()
[2m[36m(pid=7886)[0m     @     0x7f1fdc952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7972)[0m     @     0x7fa81da2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7972)[0m     @     0x7fa81db37148 at::Tensor::copy_()
[2m[36m(pid=7922)[0m     @     0x7f4be354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7922)[0m     @     0x7f4be184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7899)[0m     @     0x7faa55cc5148 at::Tensor::copy_()
[2m[36m(pid=7899)[0m     @     0x7faa578bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8015)[0m     @     0x7f3639247e11 at::TensorIterator::for_each()
[2m[36m(pid=8015)[0m     @     0x7f363bf60c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8015)[0m     @     0x7f363bf83cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7963)[0m     @     0x7f4e7093ae11 at::TensorIterator::for_each()
[2m[36m(pid=7963)[0m     @     0x7f4e73653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7963)[0m     @     0x7f4e73676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7906)[0m     @     0x7f1cc8793977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7906)[0m     @     0x7f1cc8793b53 at::TensorIterator::for_each()
[2m[36m(pid=7998)[0m     @     0x7eee6f8e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7998)[0m     @     0x7eee6f9e8148 at::Tensor::copy_()
[2m[36m(pid=7998)[0m     @     0x7eee75c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7998)[0m     @     0x5556596effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7998)[0m     @     0x55565964ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7998)[0m     @     0x5556596d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7998)[0m     @     0x5556596d6a20 method_vectorcall
[2m[36m(pid=7998)[0m     @     0x55565964abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7998)[0m     @     0x5556596d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7998)[0m     @     0x5556596d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7998)[0m     @     0x55565964b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7998)[0m     @     0x5556596d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7998)[0m     @     0x5556596d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7998)[0m     @     0x55565964b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7998)[0m     @     0x5556596d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7998)[0m     @     0x5556596d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7998)[0m     @     0x55565964b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7998)[0m     @     0x5556596d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7950)[0m     @     0x7fadaf63be11 at::TensorIterator::for_each()
[2m[36m(pid=7950)[0m     @     0x7fadb2354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7950)[0m     @     0x7fadb2377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7950)[0m     @     0x7fadaf3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7954)[0m     @     0x7fa7f9c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7954)[0m     @     0x7fa7f9c78b53 at::TensorIterator::for_each()
[2m[36m(pid=7954)[0m     @     0x7fa7f9c78e11 at::TensorIterator::for_each()
[2m[36m(pid=7954)[0m     @     0x7fa7fc991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7923)[0m     @     0x7f69bbad1b53 at::TensorIterator::for_each()
[2m[36m(pid=7923)[0m     @     0x7f69bbad1e11 at::TensorIterator::for_each()
[2m[36m(pid=7923)[0m     @     0x7f69be7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7923)[0m     @     0x7f69be80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7908)[0m     @     0x7f2e02fa1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7908)[0m     @     0x7f2dfffdf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7908)[0m     @     0x7f2dfffddc3f at::native::copy_impl()
[2m[36m(pid=7908)[0m     @     0x7f2dfffdeed4 at::native::copy_()
[2m[36m(pid=7997)[0m     @     0x7f136799ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7997)[0m     @     0x7f13649dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7997)[0m     @     0x7f13649dac3f at::native::copy_impl()
[2m[36m(pid=7997)[0m     @     0x7f13649dbed4 at::native::copy_()
[2m[36m(pid=7957)[0m     @     0x7f364df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=7957)[0m     @     0x7f364df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=7957)[0m     @     0x7f3650ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7957)[0m     @     0x7f3650ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7957)[0m     @     0x7f364dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7957)[0m     @     0x7f364dd07c3f at::native::copy_impl()
[2m[36m(pid=7953)[0m     @     0x7f901ecbfe11 at::TensorIterator::for_each()
[2m[36m(pid=7953)[0m     @     0x7f90219d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7953)[0m     @     0x7f90219fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7953)[0m     @     0x7f901ea39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7992)[0m     @     0x7f64cd3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7992)[0m     @     0x7f64cd3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7992)[0m     @     0x7f64ca40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7992)[0m     @     0x7f64ca40ac3f at::native::copy_impl()
[2m[36m(pid=7992)[0m     @     0x7f64ca40bed4 at::native::copy_()
[2m[36m(pid=7970)[0m     @     0x7eed5d3a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7970)[0m     @     0x7eed5a3df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7970)[0m     @     0x7eed5a3ddc3f at::native::copy_impl()
[2m[36m(pid=7970)[0m     @     0x7eed5a3deed4 at::native::copy_()
[2m[36m(pid=7890)[0m     @     0x7f70ceb8de11 at::TensorIterator::for_each()
[2m[36m(pid=7890)[0m     @     0x7f70d18a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7890)[0m     @     0x7f70d18c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7890)[0m     @     0x7f70ce907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7890)[0m     @     0x7f70ce905c3f at::native::copy_impl()
[2m[36m(pid=7959)[0m     @     0x7f30238a1e11 at::TensorIterator::for_each()
[2m[36m(pid=7959)[0m     @     0x7f30265bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7959)[0m     @     0x7f30265ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7959)[0m     @     0x7f302361b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7994)[0m     @     0x7fc40fa64009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7994)[0m     @     0x7fc40fa62c3f at::native::copy_impl()
[2m[36m(pid=7994)[0m     @     0x7fc40fa63ed4 at::native::copy_()
[2m[36m(pid=7894)[0m     @     0x7ee3c7086009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7894)[0m     @     0x7ee3c7084c3f at::native::copy_impl()
[2m[36m(pid=7894)[0m     @     0x7ee3c7085ed4 at::native::copy_()
[2m[36m(pid=7894)[0m     @     0x7ee3c77c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7905)[0m     @     0x7f70180abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7905)[0m     @     0x7f70180cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7905)[0m     @     0x7f701510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7905)[0m     @     0x7f701510ac3f at::native::copy_impl()
[2m[36m(pid=7999)[0m     @     0x7fb21c357148 at::Tensor::copy_()
[2m[36m(pid=7999)[0m     @     0x7fb21df4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7999)[0m     @     0x7fb21c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7925)[0m     @     0x7f8ac921d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7925)[0m     @     0x7f8ac921db53 at::TensorIterator::for_each()
[2m[36m(pid=7925)[0m     @     0x7f8ac921de11 at::TensorIterator::for_each()
[2m[36m(pid=7909)[0m     @     0x7f47550a8e11 at::TensorIterator::for_each()
[2m[36m(pid=7909)[0m     @     0x7f4757dc1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7909)[0m     @     0x7f4757de4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8005)[0m     @     0x7ef750a51b53 at::TensorIterator::for_each()
[2m[36m(pid=8005)[0m     @     0x7ef750a51e11 at::TensorIterator::for_each()
[2m[36m(pid=8005)[0m     @     0x7ef75376ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8005)[0m     @     0x7ef75378dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7918)[0m     @     0x7f7d2d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7918)[0m     @     0x7f7d2d32b148 at::Tensor::copy_()
[2m[36m(pid=7918)[0m     @     0x7f7d335e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7918)[0m     @     0x5641e8ccafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7918)[0m     @     0x5641e8c25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7918)[0m     @     0x5641e8cb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7918)[0m     @     0x5641e8cb1a20 method_vectorcall
[2m[36m(pid=7918)[0m     @     0x5641e8c25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7918)[0m     @     0x5641e8cb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7918)[0m     @     0x5641e8cb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7918)[0m     @     0x5641e8c26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7918)[0m     @     0x5641e8cb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7918)[0m     @     0x5641e8cb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7918)[0m     @     0x5641e8c26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7918)[0m     @     0x5641e8cb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x7f6c6959f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7967)[0m     @     0x7f6c678a05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7967)[0m     @     0x7f6c679a8148 at::Tensor::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f52a37c3f at::native::copy_impl()
[2m[36m(pid=8024)[0m     @     0x7f4f52a38ed4 at::native::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f5317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7900)[0m     @     0x7f6b977635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7900)[0m     @     0x7f6b9786b148 at::Tensor::copy_()
[2m[36m(pid=7900)[0m     @     0x7f6b9db21bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7900)[0m     @     0x5559e2293fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7900)[0m     @     0x5559e21eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7900)[0m     @     0x5559e2279baf _PyEval_EvalCodeWithName
[2m[36m(pid=7900)[0m     @     0x5559e227aa20 method_vectorcall
[2m[36m(pid=7900)[0m     @     0x5559e21eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7900)[0m     @     0x5559e2279baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x7f8a1db65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7889)[0m     @     0x7f8a1db88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7889)[0m     @     0x7f8a1abc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7889)[0m     @     0x7f8a1abc4c3f at::native::copy_impl()
[2m[36m(pid=7965)[0m     @     0x7ee79d6d1148 at::Tensor::copy_()
[2m[36m(pid=7965)[0m     @     0x7ee7a3987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7965)[0m     @     0x55b079b05fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7965)[0m     @     0x55b079a60b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7965)[0m     @     0x55b079aebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7965)[0m     @     0x55b079aeca20 method_vectorcall
[2m[36m(pid=7965)[0m     @     0x55b079a60bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7965)[0m     @     0x55b079aebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7965)[0m     @     0x55b079aec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7965)[0m     @     0x55b079a61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7965)[0m     @     0x55b079aebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7965)[0m     @     0x55b079aec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7965)[0m     @     0x55b079a61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7965)[0m     @     0x55b079aebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7965)[0m     @     0x55b079aec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7965)[0m     @     0x55b079a61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7965)[0m     @     0x55b079aebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x7fbc252235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7980)[0m     @     0x7fbc2532b148 at::Tensor::copy_()
[2m[36m(pid=7980)[0m     @     0x7fbc2b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7980)[0m     @     0x5604133c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7980)[0m     @     0x560413322b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7980)[0m     @     0x5604133adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x5604133aea20 method_vectorcall
[2m[36m(pid=7980)[0m     @     0x560413322bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7980)[0m     @     0x5604133adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x5604133ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7980)[0m     @     0x560413323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7980)[0m     @     0x5604133adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x5604133ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7980)[0m     @     0x560413323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7980)[0m     @     0x5604133adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7980)[0m     @     0x5604133ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7980)[0m     @     0x560413323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7980)[0m     @     0x5604133adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x7edef3410148 at::Tensor::copy_()
[2m[36m(pid=7987)[0m     @     0x7edef96c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7987)[0m     @     0x55d870a9dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7987)[0m     @     0x55d8709f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7987)[0m     @     0x55d870a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x55d870a84a20 method_vectorcall
[2m[36m(pid=7987)[0m     @     0x55d8709f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7987)[0m     @     0x55d870a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x55d870a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7987)[0m     @     0x55d8709f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7987)[0m     @     0x55d870a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x55d870a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7987)[0m     @     0x55d8709f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7987)[0m     @     0x55d870a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=7987)[0m     @     0x55d870a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7987)[0m     @     0x55d8709f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7987)[0m     @     0x55d870a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x7f9d17304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7903)[0m     @     0x7f9d17302c3f at::native::copy_impl()
[2m[36m(pid=7903)[0m     @     0x7f9d17303ed4 at::native::copy_()
[2m[36m(pid=7903)[0m     @     0x7f9d17a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7916)[0m     @     0x7ed4ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7916)[0m     @     0x7ed4ef85e148 at::Tensor::copy_()
[2m[36m(pid=7916)[0m     @     0x7ed4f5b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7916)[0m     @     0x5615bc7d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7916)[0m     @     0x5615bc730b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7916)[0m     @     0x5615bc7bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7916)[0m     @     0x5615bc7bca20 method_vectorcall
[2m[36m(pid=7916)[0m     @     0x5615bc730bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7916)[0m     @     0x5615bc7bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7916)[0m     @     0x5615bc7bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7916)[0m     @     0x5615bc731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7916)[0m     @     0x5615bc7bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7916)[0m     @     0x5615bc7bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7916)[0m     @     0x5615bc731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7916)[0m     @     0x5615bc7bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7916)[0m     @     0x5615bc7bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7916)[0m     @     0x5615bc731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7916)[0m     @     0x5615bc7bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7893)[0m     @     0x7f46dd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7893)[0m     @     0x7f46dd32b148 at::Tensor::copy_()
[2m[36m(pid=7893)[0m     @     0x7f46e35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7893)[0m     @     0x55de35bb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7893)[0m     @     0x55de35b0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7893)[0m     @     0x55de35b96baf _PyEval_EvalCodeWithName
[2m[36m(pid=7893)[0m     @     0x55de35b97a20 method_vectorcall
[2m[36m(pid=7893)[0m     @     0x55de35b0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7893)[0m     @     0x55de35b96baf _PyEval_EvalCodeWithName
[2m[36m(pid=7893)[0m     @     0x55de35b97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7893)[0m     @     0x55de35b0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7893)[0m     @     0x55de35b96baf _PyEval_EvalCodeWithName
[2m[36m(pid=7893)[0m     @     0x55de35b97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7893)[0m     @     0x55de35b0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7893)[0m     @     0x55de35b96baf _PyEval_EvalCodeWithName
[2m[36m(pid=7893)[0m     @     0x55de35b97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7893)[0m     @     0x55de35b0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7893)[0m     @     0x55de35b96baf _PyEval_EvalCodeWithName
[2m[36m(pid=7910)[0m     @     0x7ed51d632ed4 at::native::copy_()
[2m[36m(pid=7910)[0m     @     0x7ed51dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7910)[0m     @     0x7ed51de7d148 at::Tensor::copy_()
[2m[36m(pid=7910)[0m     @     0x7ed51fa74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8004)[0m     @     0x7eeb82958148 at::Tensor::copy_()
[2m[36m(pid=8004)[0m     @     0x7eeb88c0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8004)[0m     @     0x5638fdfa3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8004)[0m     @     0x5638fdefeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8004)[0m     @     0x5638fdf89baf _PyEval_EvalCodeWithName
[2m[36m(pid=8004)[0m     @     0x5638fdf8aa20 method_vectorcall
[2m[36m(pid=8004)[0m     @     0x5638fdefebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8004)[0m     @     0x5638fdf89baf _PyEval_EvalCodeWithName
[2m[36m(pid=8004)[0m     @     0x5638fdf8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8004)[0m     @     0x5638fdeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8004)[0m     @     0x5638fdf89baf _PyEval_EvalCodeWithName
[2m[36m(pid=8004)[0m     @     0x5638fdf8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8004)[0m     @     0x5638fdeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8004)[0m     @     0x5638fdf89baf _PyEval_EvalCodeWithName
[2m[36m(pid=8004)[0m     @     0x5638fdf8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8004)[0m     @     0x5638fdeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8004)[0m     @     0x5638fdf89baf _PyEval_EvalCodeWithName
[2m[36m(pid=7990)[0m     @     0x7fa250be7148 at::Tensor::copy_()
[2m[36m(pid=7990)[0m     @     0x7fa256e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7990)[0m     @     0x55da3f1b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7990)[0m     @     0x55da3f113b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7990)[0m     @     0x55da3f19ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7990)[0m     @     0x55da3f19fa20 method_vectorcall
[2m[36m(pid=7990)[0m     @     0x55da3f113bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7990)[0m     @     0x55da3f19ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7990)[0m     @     0x55da3f19f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7990)[0m     @     0x55da3f114689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7990)[0m     @     0x55da3f19ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7990)[0m     @     0x55da3f19f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7990)[0m     @     0x55da3f114689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7990)[0m     @     0x55da3f19ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7990)[0m     @     0x55da3f19f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7990)[0m     @     0x55da3f114689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7990)[0m     @     0x55da3f19ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x7f674c2f7b53 at::TensorIterator::for_each()
[2m[36m(pid=7904)[0m     @     0x7f674c2f7e11 at::TensorIterator::for_each()
[2m[36m(pid=7904)[0m     @     0x7f674f010c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7904)[0m     @     0x7f674f033cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7904)[0m     @     0x7f674c071009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7904)[0m     @     0x7f674c06fc3f at::native::copy_impl()
[2m[36m(pid=7996)[0m     @     0x7ef316e11009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7996)[0m     @     0x7ef316e0fc3f at::native::copy_impl()
[2m[36m(pid=7996)[0m     @     0x7ef316e10ed4 at::native::copy_()
[2m[36m(pid=7996)[0m     @     0x7ef3175535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7962)[0m     @     0x7efef188cb53 at::TensorIterator::for_each()
[2m[36m(pid=7962)[0m     @     0x7efef188ce11 at::TensorIterator::for_each()
[2m[36m(pid=7962)[0m     @     0x7efef45a5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7962)[0m     @     0x7efef45c8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7962)[0m     @     0x7efef1606009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7962)[0m     @     0x7efef1604c3f at::native::copy_impl()
[2m[36m(pid=7971)[0m     @     0x7fc5c12e5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=7971)[0m     @     0x7fc5c12e5b53 at::TensorIterator::for_each()
[2m[36m(pid=7971)[0m     @     0x7fc5c12e5e11 at::TensorIterator::for_each()
[2m[36m(pid=7971)[0m     @     0x7fc5c3ffec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7971)[0m     @     0x7fc5c4021cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7966)[0m     @     0x7ee86e40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7966)[0m     @     0x7ee86e40ac3f at::native::copy_impl()
[2m[36m(pid=7966)[0m     @     0x7ee86e40bed4 at::native::copy_()
[2m[36m(pid=7966)[0m     @     0x7ee86eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7966)[0m     @     0x7ee86ec56148 at::Tensor::copy_()
[2m[36m(pid=7955)[0m     @     0x7f72150df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7955)[0m     @     0x7f72150ddc3f at::native::copy_impl()
[2m[36m(pid=7955)[0m     @     0x7f72150deed4 at::native::copy_()
[2m[36m(pid=7955)[0m     @     0x7f72158215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7955)[0m     @     0x7f7215929148 at::Tensor::copy_()
[2m[36m(pid=7985)[0m     @     0x7f6a06c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7985)[0m     @     0x7f6a06d5b148 at::Tensor::copy_()
[2m[36m(pid=7985)[0m     @     0x7f6a0d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7985)[0m     @     0x56039e8e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7985)[0m     @     0x56039e844b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7985)[0m     @     0x56039e8cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7985)[0m     @     0x56039e8d0a20 method_vectorcall
[2m[36m(pid=7985)[0m     @     0x56039e844bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7985)[0m     @     0x56039e8cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7985)[0m     @     0x56039e8d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7985)[0m     @     0x56039e845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7985)[0m     @     0x56039e8cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7985)[0m     @     0x56039e8d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7985)[0m     @     0x56039e845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7985)[0m     @     0x56039e8cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7985)[0m     @     0x56039e8d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7985)[0m     @     0x56039e845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7985)[0m     @     0x56039e8cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x7f6ec687d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7969)[0m     @     0x7f6ec6985148 at::Tensor::copy_()
[2m[36m(pid=7969)[0m     @     0x7f6eccc3bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7969)[0m     @     0x565108a98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7969)[0m     @     0x5651089f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7969)[0m     @     0x565108a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x565108a7fa20 method_vectorcall
[2m[36m(pid=7969)[0m     @     0x5651089f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7969)[0m     @     0x565108a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x565108a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7969)[0m     @     0x5651089f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7969)[0m     @     0x565108a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x565108a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7969)[0m     @     0x5651089f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7969)[0m     @     0x565108a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7969)[0m     @     0x565108a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7969)[0m     @     0x5651089f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7969)[0m     @     0x565108a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x7f62fbb90989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7977)[0m     @     0x7f62f9e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7977)[0m     @     0x7f62f9f99148 at::Tensor::copy_()
[2m[36m(pid=7977)[0m     @     0x7f630024fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7977)[0m     @     0x5599e6e81fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7977)[0m     @     0x5599e6ddcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7977)[0m     @     0x5599e6e67baf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x5599e6e68a20 method_vectorcall
[2m[36m(pid=7977)[0m     @     0x5599e6ddcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7977)[0m     @     0x5599e6e67baf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x5599e6e68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7977)[0m     @     0x5599e6ddd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7977)[0m     @     0x5599e6e67baf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x5599e6e68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7977)[0m     @     0x5599e6ddd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7977)[0m     @     0x5599e6e67baf _PyEval_EvalCodeWithName
[2m[36m(pid=7977)[0m     @     0x5599e6e68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7977)[0m     @     0x5599e6ddd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7977)[0m     @     0x5599e6e67baf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x7f0ca1db8ed4 at::native::copy_()
[2m[36m(pid=7898)[0m     @     0x7f0ca24fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7898)[0m     @     0x7f0ca2603148 at::Tensor::copy_()
[2m[36m(pid=7898)[0m     @     0x7f0ca41fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7898)[0m     @     0x7f0ca24fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7898)[0m     @     0x7f0ca2603148 at::Tensor::copy_()
[2m[36m(pid=7887)[0m     @     0x7f0cb437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7887)[0m     @     0x7f0cb4484148 at::Tensor::copy_()
[2m[36m(pid=7887)[0m     @     0x7f0cba31ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7887)[0m     @     0x55f928c5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7887)[0m     @     0x55f928bb6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7887)[0m     @     0x55f928c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=7887)[0m     @     0x55f928c42a20 method_vectorcall
[2m[36m(pid=7887)[0m     @     0x55f928bb6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7887)[0m     @     0x55f928c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=7887)[0m     @     0x55f928c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7887)[0m     @     0x55f928bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7887)[0m     @     0x55f928c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=7887)[0m     @     0x55f928c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7887)[0m     @     0x55f928bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7887)[0m     @     0x55f928c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=7887)[0m     @     0x55f928c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7887)[0m     @     0x55f928bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7887)[0m     @     0x55f928c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x7ee32a928ed4 at::native::copy_()
[2m[36m(pid=7907)[0m     @     0x7ee32b06b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7907)[0m     @     0x7ee32b173148 at::Tensor::copy_()
[2m[36m(pid=7907)[0m     @     0x7ee32cd6a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7907)[0m     @     0x7ee32b06b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7895)[0m     @     0x7f817d420c3f at::native::copy_impl()
[2m[36m(pid=7895)[0m     @     0x7f817d421ed4 at::native::copy_()
[2m[36m(pid=7895)[0m     @     0x7f817db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7895)[0m     @     0x7f817dc6c148 at::Tensor::copy_()
[2m[36m(pid=7895)[0m     @     0x7f817f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8006)[0m     @     0x7ed9e70d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8006)[0m     @     0x7ed9e71e0148 at::Tensor::copy_()
[2m[36m(pid=8006)[0m     @     0x7ed9ed496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8006)[0m     @     0x5561249fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8006)[0m     @     0x55612495ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8006)[0m     @     0x5561249e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8006)[0m     @     0x5561249e6a20 method_vectorcall
[2m[36m(pid=8006)[0m     @     0x55612495abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8006)[0m     @     0x5561249e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8006)[0m     @     0x5561249e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8006)[0m     @     0x55612495b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8006)[0m     @     0x5561249e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8006)[0m     @     0x5561249e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8006)[0m     @     0x55612495b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8006)[0m     @     0x5561249e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8006)[0m     @     0x5561249e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8006)[0m     @     0x55612495b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8006)[0m     @     0x5561249e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7964)[0m     @     0x7f49bd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7964)[0m     @     0x7f49bd956148 at::Tensor::copy_()
[2m[36m(pid=7964)[0m     @     0x7f49c3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7964)[0m     @     0x55add37bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7964)[0m     @     0x55add3718b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7964)[0m     @     0x55add37a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7964)[0m     @     0x55add37a4a20 method_vectorcall
[2m[36m(pid=7964)[0m     @     0x55add3718bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7964)[0m     @     0x55add37a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7964)[0m     @     0x55add37a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7964)[0m     @     0x55add3719689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7964)[0m     @     0x55add37a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7964)[0m     @     0x55add37a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7964)[0m     @     0x55add3719689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7964)[0m     @     0x55add37a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7964)[0m     @     0x55add37a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7964)[0m     @     0x55add3719689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7964)[0m     @     0x55add37a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7989)[0m     @     0x7ef64c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7989)[0m     @     0x7ef64c2a6148 at::Tensor::copy_()
[2m[36m(pid=7989)[0m     @     0x7ef65255cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7989)[0m     @     0x55c211bbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7989)[0m     @     0x55c211b1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7989)[0m     @     0x55c211ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7989)[0m     @     0x55c211ba6a20 method_vectorcall
[2m[36m(pid=7989)[0m     @     0x55c211b1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7989)[0m     @     0x55c211ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7989)[0m     @     0x55c211ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7989)[0m     @     0x55c211b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7989)[0m     @     0x55c211ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7989)[0m     @     0x55c211ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7989)[0m     @     0x55c211b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7989)[0m     @     0x55c211ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7989)[0m     @     0x55c211ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7989)[0m     @     0x55c211b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7989)[0m     @     0x55c211ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7974)[0m     @     0x7f10b317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7974)[0m     @     0x7f10b3283148 at::Tensor::copy_()
[2m[36m(pid=7974)[0m     @     0x7f10b9539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7974)[0m     @     0x55707c03ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7974)[0m     @     0x55707bf9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7974)[0m     @     0x55707c025baf _PyEval_EvalCodeWithName
[2m[36m(pid=7974)[0m     @     0x55707c026a20 method_vectorcall
[2m[36m(pid=7974)[0m     @     0x55707bf9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7974)[0m     @     0x55707c025baf _PyEval_EvalCodeWithName
[2m[36m(pid=7974)[0m     @     0x55707c026643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7974)[0m     @     0x55707bf9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7974)[0m     @     0x55707c025baf _PyEval_EvalCodeWithName
[2m[36m(pid=7974)[0m     @     0x55707c026643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7974)[0m     @     0x55707bf9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7974)[0m     @     0x55707c025baf _PyEval_EvalCodeWithName
[2m[36m(pid=7974)[0m     @     0x55707c026643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7974)[0m     @     0x55707bf9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7974)[0m     @     0x55707c025baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x7edcc5cb3ed4 at::native::copy_()
[2m[36m(pid=7911)[0m     @     0x7edcc63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7911)[0m     @     0x7edcc64fe148 at::Tensor::copy_()
[2m[36m(pid=7911)[0m     @     0x7edcc80f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7911)[0m     @     0x7edcc63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7975)[0m     @     0x7f4ccabc5ed4 at::native::copy_()
[2m[36m(pid=7975)[0m     @     0x7f4ccb3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7975)[0m     @     0x7f4ccb410148 at::Tensor::copy_()
[2m[36m(pid=7975)[0m     @     0x7f4ccd007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7975)[0m     @     0x7f4ccb3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7888)[0m     @     0x7f6e195a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7888)[0m     @     0x7f6e196ac148 at::Tensor::copy_()
[2m[36m(pid=7888)[0m     @     0x7f6e1f962bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7888)[0m     @     0x55741c60dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7888)[0m     @     0x55741c568b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7888)[0m     @     0x55741c5f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7888)[0m     @     0x55741c5f4a20 method_vectorcall
[2m[36m(pid=7888)[0m     @     0x55741c568bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7888)[0m     @     0x55741c5f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7888)[0m     @     0x55741c5f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7888)[0m     @     0x55741c569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7888)[0m     @     0x55741c5f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7888)[0m     @     0x55741c5f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7888)[0m     @     0x55741c569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7888)[0m     @     0x55741c5f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7888)[0m     @     0x55741c5f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7888)[0m     @     0x55741c569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7888)[0m     @     0x55741c5f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=7914)[0m     @     0x7fb22e8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7914)[0m     @     0x7fb22ea05148 at::Tensor::copy_()
[2m[36m(pid=7914)[0m     @     0x7fb234cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7914)[0m     @     0x564dbf996fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7914)[0m     @     0x564dbf8f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7914)[0m     @     0x564dbf97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7914)[0m     @     0x564dbf97da20 method_vectorcall
[2m[36m(pid=7914)[0m     @     0x564dbf8f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7914)[0m     @     0x564dbf97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7914)[0m     @     0x564dbf97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7914)[0m     @     0x564dbf8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7914)[0m     @     0x564dbf97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7914)[0m     @     0x564dbf97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7914)[0m     @     0x564dbf8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7914)[0m     @     0x564dbf97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7914)[0m     @     0x564dbf97d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7914)[0m     @     0x564dbf8f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7914)[0m     @     0x564dbf97cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7892)[0m     @     0x7f1d3d2585cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7892)[0m     @     0x7f1d3d360148 at::Tensor::copy_()
[2m[36m(pid=7892)[0m     @     0x7f1d6a42abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7892)[0m     @     0x559094e11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7892)[0m     @     0x559094d6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7892)[0m     @     0x559094df7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7892)[0m     @     0x559094df8a20 method_vectorcall
[2m[36m(pid=7892)[0m     @     0x559094d6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7892)[0m     @     0x559094df7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7892)[0m     @     0x559094df8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7892)[0m     @     0x559094d6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7892)[0m     @     0x559094df7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7892)[0m     @     0x559094df8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7892)[0m     @     0x559094d6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7892)[0m     @     0x559094df7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7892)[0m     @     0x559094df8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7892)[0m     @     0x559094d6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7892)[0m     @     0x559094df7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x7f82bdfce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7960)[0m     @     0x7f82be0d6148 at::Tensor::copy_()
[2m[36m(pid=7960)[0m     @     0x7f82c438cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7960)[0m     @     0x55aafb831fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7960)[0m     @     0x55aafb78cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7960)[0m     @     0x55aafb817baf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x55aafb818a20 method_vectorcall
[2m[36m(pid=7960)[0m     @     0x55aafb78cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7960)[0m     @     0x55aafb817baf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x55aafb818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7960)[0m     @     0x55aafb78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7960)[0m     @     0x55aafb817baf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x55aafb818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7960)[0m     @     0x55aafb78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7960)[0m     @     0x55aafb817baf _PyEval_EvalCodeWithName
[2m[36m(pid=7960)[0m     @     0x55aafb818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7960)[0m     @     0x55aafb78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7960)[0m     @     0x55aafb817baf _PyEval_EvalCodeWithName
[2m[36m(pid=7897)[0m     @     0x7fb8afb92148 at::Tensor::copy_()
[2m[36m(pid=7897)[0m     @     0x7fb8b5e48bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7897)[0m     @     0x55b847ce6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7897)[0m     @     0x55b847c41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7897)[0m     @     0x55b847cccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7897)[0m     @     0x55b847ccda20 method_vectorcall
[2m[36m(pid=7897)[0m     @     0x55b847c41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7897)[0m     @     0x55b847cccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7897)[0m     @     0x55b847ccd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7897)[0m     @     0x55b847c42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7897)[0m     @     0x55b847cccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7897)[0m     @     0x55b847ccd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7897)[0m     @     0x55b847c42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7897)[0m     @     0x55b847cccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7897)[0m     @     0x55b847ccd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7897)[0m     @     0x55b847c42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7897)[0m     @     0x55b847cccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x7f8f794345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7891)[0m     @     0x7f8f7953c148 at::Tensor::copy_()
[2m[36m(pid=7891)[0m     @     0x7f8f7f7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7891)[0m     @     0x55b58968ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7891)[0m     @     0x55b5895eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7891)[0m     @     0x55b589675baf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x55b589676a20 method_vectorcall
[2m[36m(pid=7891)[0m     @     0x55b5895eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7891)[0m     @     0x55b589675baf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x55b589676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7891)[0m     @     0x55b5895eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7891)[0m     @     0x55b589675baf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x55b589676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7891)[0m     @     0x55b5895eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7891)[0m     @     0x55b589675baf _PyEval_EvalCodeWithName
[2m[36m(pid=7891)[0m     @     0x55b589676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7891)[0m     @     0x55b5895eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7891)[0m     @     0x55b589675baf _PyEval_EvalCodeWithName
[2m[36m(pid=8013)[0m     @     0x558628f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=8013)[0m     @     0x558628f88a20 method_vectorcall
[2m[36m(pid=8013)[0m     @     0x558628efcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8013)[0m     @     0x558628f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=8013)[0m     @     0x558628f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8013)[0m     @     0x558628efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8013)[0m     @     0x558628f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=8013)[0m     @     0x558628f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8013)[0m     @     0x558628efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8013)[0m     @     0x558628f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=8013)[0m     @     0x558628f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8013)[0m     @     0x558628efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8013)[0m     @     0x558628f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=7947)[0m     @     0x7f7c5bbff148 at::Tensor::copy_()
[2m[36m(pid=7947)[0m     @     0x7f7c61eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7947)[0m     @     0x55d7d8d96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7947)[0m     @     0x55d7d8cf1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x55d7d8d7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7947)[0m     @     0x55d7d8d7da20 method_vectorcall
[2m[36m(pid=7947)[0m     @     0x55d7d8cf1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x55d7d8d7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7947)[0m     @     0x55d7d8d7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7947)[0m     @     0x55d7d8cf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x55d7d8d7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7947)[0m     @     0x55d7d8d7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7947)[0m     @     0x55d7d8cf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x55d7d8d7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7947)[0m     @     0x55d7d8d7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7947)[0m     @     0x55d7d8cf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7947)[0m     @     0x55d7d8d7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7956)[0m     @     0x7f098ec56148 at::Tensor::copy_()
[2m[36m(pid=7956)[0m     @     0x7f0994f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7956)[0m     @     0x560a96733fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7956)[0m     @     0x560a9668eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7956)[0m     @     0x560a96719baf _PyEval_EvalCodeWithName
[2m[36m(pid=7956)[0m     @     0x560a9671aa20 method_vectorcall
[2m[36m(pid=7956)[0m     @     0x560a9668ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7956)[0m     @     0x560a96719baf _PyEval_EvalCodeWithName
[2m[36m(pid=7956)[0m     @     0x560a9671a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7956)[0m     @     0x560a9668f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7956)[0m     @     0x560a96719baf _PyEval_EvalCodeWithName
[2m[36m(pid=7956)[0m     @     0x560a9671a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7956)[0m     @     0x560a9668f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7956)[0m     @     0x560a96719baf _PyEval_EvalCodeWithName
[2m[36m(pid=7956)[0m     @     0x560a9671a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7956)[0m     @     0x560a9668f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7956)[0m     @     0x560a96719baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x7f1fdac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7886)[0m     @     0x7f1fdad5b148 at::Tensor::copy_()
[2m[36m(pid=7886)[0m     @     0x7f1fe1011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7886)[0m     @     0x55ddfae6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7886)[0m     @     0x55ddfadc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7886)[0m     @     0x55ddfae53baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x55ddfae54a20 method_vectorcall
[2m[36m(pid=7886)[0m     @     0x55ddfadc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7886)[0m     @     0x55ddfae53baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x55ddfae54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7886)[0m     @     0x55ddfadc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7886)[0m     @     0x55ddfae53baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x55ddfae54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7886)[0m     @     0x55ddfadc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7886)[0m     @     0x55ddfae53baf _PyEval_EvalCodeWithName
[2m[36m(pid=7886)[0m     @     0x55ddfae54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7886)[0m     @     0x55ddfadc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7886)[0m     @     0x55ddfae53baf _PyEval_EvalCodeWithName
[2m[36m(pid=7972)[0m     @     0x7fa823dedbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7972)[0m     @     0x55c3a4acbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7972)[0m     @     0x55c3a4a26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7972)[0m     @     0x55c3a4ab1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7972)[0m     @     0x55c3a4ab2a20 method_vectorcall
[2m[36m(pid=7972)[0m     @     0x55c3a4a26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7972)[0m     @     0x55c3a4ab1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7972)[0m     @     0x55c3a4ab2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7972)[0m     @     0x55c3a4a27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7972)[0m     @     0x55c3a4ab1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7972)[0m     @     0x55c3a4ab2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7972)[0m     @     0x55c3a4a27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7972)[0m     @     0x55c3a4ab1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7972)[0m     @     0x55c3a4ab2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7972)[0m     @     0x55c3a4a27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7972)[0m     @     0x55c3a4ab1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7922)[0m     @     0x7f4be1956148 at::Tensor::copy_()
[2m[36m(pid=7922)[0m     @     0x7f4be7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7922)[0m     @     0x56308c350fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7922)[0m     @     0x56308c2abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7922)[0m     @     0x56308c336baf _PyEval_EvalCodeWithName
[2m[36m(pid=7922)[0m     @     0x56308c337a20 method_vectorcall
[2m[36m(pid=7922)[0m     @     0x56308c2abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7922)[0m     @     0x56308c336baf _PyEval_EvalCodeWithName
[2m[36m(pid=7922)[0m     @     0x56308c337643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7922)[0m     @     0x56308c2ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7922)[0m     @     0x56308c336baf _PyEval_EvalCodeWithName
[2m[36m(pid=7922)[0m     @     0x56308c337643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7922)[0m     @     0x56308c2ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7922)[0m     @     0x56308c336baf _PyEval_EvalCodeWithName
[2m[36m(pid=7922)[0m     @     0x56308c337643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7922)[0m     @     0x56308c2ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7922)[0m     @     0x56308c336baf _PyEval_EvalCodeWithName
[2m[36m(pid=7899)[0m     @     0x7faa55bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7899)[0m     @     0x7faa55cc5148 at::Tensor::copy_()
[2m[36m(pid=7899)[0m     @     0x7faa5bf7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7899)[0m     @     0x5555f59c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7899)[0m     @     0x5555f591db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7899)[0m     @     0x5555f59a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7899)[0m     @     0x5555f59a9a20 method_vectorcall
[2m[36m(pid=7899)[0m     @     0x5555f591dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7899)[0m     @     0x5555f59a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7899)[0m     @     0x5555f59a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7899)[0m     @     0x5555f591e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7899)[0m     @     0x5555f59a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7899)[0m     @     0x5555f59a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7899)[0m     @     0x5555f591e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7899)[0m     @     0x5555f59a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7899)[0m     @     0x5555f59a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7899)[0m     @     0x5555f591e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7899)[0m     @     0x5555f59a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x7f3638fc1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8015)[0m     @     0x7f3638fbfc3f at::native::copy_impl()
[2m[36m(pid=8015)[0m     @     0x7f3638fc0ed4 at::native::copy_()
[2m[36m(pid=8015)[0m     @     0x7f36397035cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8015)[0m     @     0x7f363980b148 at::Tensor::copy_()
[2m[36m(pid=8015)[0m     @     0x7f363b402989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7963)[0m     @     0x7f4e706b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7963)[0m     @     0x7f4e706b2c3f at::native::copy_impl()
[2m[36m(pid=7963)[0m     @     0x7f4e706b3ed4 at::native::copy_()
[2m[36m(pid=7963)[0m     @     0x7f4e70df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7963)[0m     @     0x7f4e70efe148 at::Tensor::copy_()
[2m[36m(pid=7963)[0m     @     0x7f4e72af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7963)[0m     @     0x7f4e70df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7906)[0m     @     0x7f1cc8793e11 at::TensorIterator::for_each()
[2m[36m(pid=7906)[0m     @     0x7f1ccb4acc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7906)[0m     @     0x7f1ccb4cfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7906)[0m     @     0x7f1cc850d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7906)[0m     @     0x7f1cc850bc3f at::native::copy_impl()
[2m[36m(pid=7906)[0m     @     0x7f1cc850ced4 at::native::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadaf3b3c3f at::native::copy_impl()
[2m[36m(pid=7950)[0m     @     0x7fadaf3b4ed4 at::native::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadafaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7950)[0m     @     0x7fadafbff148 at::Tensor::copy_()
[2m[36m(pid=7954)[0m     @     0x7fa7fc9b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7954)[0m     @     0x7fa7f99f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7954)[0m     @     0x7fa7f99f0c3f at::native::copy_impl()
[2m[36m(pid=7954)[0m     @     0x7fa7f99f1ed4 at::native::copy_()
[2m[36m(pid=7954)[0m     @     0x7fa7fa1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7923)[0m     @     0x7f69bb84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7923)[0m     @     0x7f69bb849c3f at::native::copy_impl()
[2m[36m(pid=7923)[0m     @     0x7f69bb84aed4 at::native::copy_()
[2m[36m(pid=7923)[0m     @     0x7f69bbf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7923)[0m     @     0x7f69bc095148 at::Tensor::copy_()
[2m[36m(pid=7908)[0m     @     0x7f2e007215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7908)[0m     @     0x7f2e00829148 at::Tensor::copy_()
[2m[36m(pid=7908)[0m     @     0x7f2e02420989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7908)[0m     @     0x7f2e007215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7997)[0m     @     0x7f136511e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7997)[0m     @     0x7f1365226148 at::Tensor::copy_()
[2m[36m(pid=7997)[0m     @     0x7f1366e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7997)[0m     @     0x7f136511e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7957)[0m     @     0x7f364dd08ed4 at::native::copy_()
[2m[36m(pid=7957)[0m     @     0x7f364e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7957)[0m     @     0x7f364e553148 at::Tensor::copy_()
[2m[36m(pid=7957)[0m     @     0x7f365014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7957)[0m     @     0x7f364e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7953)[0m     @     0x7f901ea37c3f at::native::copy_impl()
[2m[36m(pid=7953)[0m     @     0x7f901ea38ed4 at::native::copy_()
[2m[36m(pid=7953)[0m     @     0x7f901f17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7953)[0m     @     0x7f901f283148 at::Tensor::copy_()
[2m[36m(pid=7953)[0m     @     0x7f9020e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7992)[0m     @     0x7f64cab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7992)[0m     @     0x7f64cac56148 at::Tensor::copy_()
[2m[36m(pid=7992)[0m     @     0x7f64cc84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7992)[0m     @     0x7f64cab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7992)[0m     @     0x7f64cac56148 at::Tensor::copy_()
[2m[36m(pid=7992)[0m     @     0x7f64d0f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7992)[0m     @     0x55d11eb12fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7992)[0m     @     0x55d11ea6db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x7eed5ab215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7970)[0m     @     0x7eed5ac29148 at::Tensor::copy_()
[2m[36m(pid=7970)[0m     @     0x7eed5c820989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7970)[0m     @     0x7eed5ab215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7890)[0m     @     0x7f70ce906ed4 at::native::copy_()
[2m[36m(pid=7890)[0m     @     0x7f70cf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7890)[0m     @     0x7f70cf151148 at::Tensor::copy_()
[2m[36m(pid=7890)[0m     @     0x7f70d0d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7890)[0m     @     0x7f70cf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7959)[0m     @     0x7f3023619c3f at::native::copy_impl()
[2m[36m(pid=7959)[0m     @     0x7f302361aed4 at::native::copy_()
[2m[36m(pid=7959)[0m     @     0x7f3023d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7994)[0m     @     0x7fc4101a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7994)[0m     @     0x7fc4102ae148 at::Tensor::copy_()
[2m[36m(pid=7994)[0m     @     0x7fc411ea5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7994)[0m     @     0x7fc4101a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7994)[0m     @     0x7fc4102ae148 at::Tensor::copy_()
[2m[36m(pid=7994)[0m     @     0x7fc416564bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7994)[0m     @     0x55761806efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7994)[0m     @     0x557617fc9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7994)[0m     @     0x557618054baf _PyEval_EvalCodeWithName
[2m[36m(pid=7994)[0m     @     0x557618055a20 method_vectorcall
[2m[36m(pid=7994)[0m     @     0x557617fc9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7994)[0m     @     0x557618054baf _PyEval_EvalCodeWithName
[2m[36m(pid=7994)[0m     @     0x557618055643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7994)[0m     @     0x557617fca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7994)[0m     @     0x557618054baf _PyEval_EvalCodeWithName
[2m[36m(pid=7994)[0m     @     0x557618055643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7994)[0m     @     0x557617fca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7994)[0m     @     0x557618054baf _PyEval_EvalCodeWithName
[2m[36m(pid=7994)[0m     @     0x557618055643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7994)[0m     @     0x557617fca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7994)[0m     @     0x557618054baf _PyEval_EvalCodeWithName
[2m[36m(pid=7894)[0m     @     0x7ee3c78d0148 at::Tensor::copy_()
[2m[36m(pid=7894)[0m     @     0x7ee3c94c7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7894)[0m     @     0x7ee3c77c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7894)[0m     @     0x7ee3c78d0148 at::Tensor::copy_()
[2m[36m(pid=7894)[0m     @     0x7ee3cdb86bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7894)[0m     @     0x5643245a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7894)[0m     @     0x5643244ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7894)[0m     @     0x56432458abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7894)[0m     @     0x56432458ba20 method_vectorcall
[2m[36m(pid=7894)[0m     @     0x5643244ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7894)[0m     @     0x56432458abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7894)[0m     @     0x56432458b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7894)[0m     @     0x564324500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7894)[0m     @     0x56432458abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7894)[0m     @     0x56432458b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7894)[0m     @     0x564324500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7894)[0m     @     0x56432458abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7894)[0m     @     0x56432458b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7894)[0m     @     0x564324500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7894)[0m     @     0x56432458abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7905)[0m     @     0x7f701510bed4 at::native::copy_()
[2m[36m(pid=7905)[0m     @     0x7f701584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7905)[0m     @     0x7f7015956148 at::Tensor::copy_()
[2m[36m(pid=7905)[0m     @     0x7f701754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7905)[0m     @     0x7f701584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7905)[0m     @     0x7f7015956148 at::Tensor::copy_()
[2m[36m(pid=7905)[0m     @     0x7f701bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7905)[0m     @     0x558eab640fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7905)[0m     @     0x558eab59bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7905)[0m     @     0x558eab626baf _PyEval_EvalCodeWithName
[2m[36m(pid=7999)[0m     @     0x7fb21c357148 at::Tensor::copy_()
[2m[36m(pid=7999)[0m     @     0x7fb22260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7999)[0m     @     0x557060180fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7999)[0m     @     0x5570600dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7999)[0m     @     0x557060166baf _PyEval_EvalCodeWithName
[2m[36m(pid=7999)[0m     @     0x557060167a20 method_vectorcall
[2m[36m(pid=7999)[0m     @     0x5570600dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7999)[0m     @     0x557060166baf _PyEval_EvalCodeWithName
[2m[36m(pid=7999)[0m     @     0x557060167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7999)[0m     @     0x5570600dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7999)[0m     @     0x557060166baf _PyEval_EvalCodeWithName
[2m[36m(pid=7999)[0m     @     0x557060167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7999)[0m     @     0x5570600dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7999)[0m     @     0x557060166baf _PyEval_EvalCodeWithName
[2m[36m(pid=7999)[0m     @     0x557060167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7999)[0m     @     0x5570600dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7999)[0m     @     0x557060166baf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x7f8acbf36c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=7925)[0m     @     0x7f8acbf59cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=7925)[0m     @     0x7f8ac8f97009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7925)[0m     @     0x7f8ac8f95c3f at::native::copy_impl()
[2m[36m(pid=7925)[0m     @     0x7f8ac8f96ed4 at::native::copy_()
[2m[36m(pid=7925)[0m     @     0x7f8ac96d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7925)[0m     @     0x7f8ac97e1148 at::Tensor::copy_()
[2m[36m(pid=7909)[0m     @     0x7f4754e22009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7909)[0m     @     0x7f4754e20c3f at::native::copy_impl()
[2m[36m(pid=7909)[0m     @     0x7f4754e21ed4 at::native::copy_()
[2m[36m(pid=7909)[0m     @     0x7f47555645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7909)[0m     @     0x7f475566c148 at::Tensor::copy_()
[2m[36m(pid=7909)[0m     @     0x7f4757263989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8005)[0m     @     0x7ef7507cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8005)[0m     @     0x7ef7507c9c3f at::native::copy_impl()
[2m[36m(pid=8005)[0m     @     0x7ef7507caed4 at::native::copy_()
[2m[36m(pid=8005)[0m     @     0x7ef750f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8005)[0m     @     0x7ef751015148 at::Tensor::copy_()
[2m[36m(pid=7918)[0m     @     0x5641e8cb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7918)[0m     @     0x5641e8c26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7918)[0m     @     0x5641e8cb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x7f6c6dc5ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7967)[0m     @     0x56338cb93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7967)[0m     @     0x56338caeeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7967)[0m     @     0x56338cb79baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x56338cb7aa20 method_vectorcall
[2m[36m(pid=7967)[0m     @     0x56338caeebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7967)[0m     @     0x56338cb79baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x56338cb7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7967)[0m     @     0x56338caef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7967)[0m     @     0x56338cb79baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x56338cb7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7967)[0m     @     0x56338caef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7967)[0m     @     0x56338cb79baf _PyEval_EvalCodeWithName
[2m[36m(pid=7967)[0m     @     0x56338cb7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7967)[0m     @     0x56338caef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7967)[0m     @     0x56338cb79baf _PyEval_EvalCodeWithName
[2m[36m(pid=8024)[0m     @     0x7f4f53283148 at::Tensor::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f54e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f5317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8024)[0m     @     0x7f4f53283148 at::Tensor::copy_()
[2m[36m(pid=8024)[0m     @     0x7f4f59539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8024)[0m     @     0x5623daad2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8024)[0m     @     0x5623daa2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8024)[0m     @     0x5623daab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8024)[0m     @     0x5623daab9a20 method_vectorcall
[2m[36m(pid=8024)[0m     @     0x5623daa2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8024)[0m     @     0x5623daab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8024)[0m     @     0x5623daab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8024)[0m     @     0x5623daa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8024)[0m     @     0x5623daab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8024)[0m     @     0x5623daab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8024)[0m     @     0x5623daa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8024)[0m     @     0x5623daab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8024)[0m     @     0x5623daab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8024)[0m     @     0x5623daa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8024)[0m     @     0x5623daab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7900)[0m     @     0x5559e227a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7900)[0m     @     0x5559e21ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7900)[0m     @     0x5559e2279baf _PyEval_EvalCodeWithName
[2m[36m(pid=7900)[0m     @     0x5559e227a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7900)[0m     @     0x5559e21ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7900)[0m     @     0x5559e2279baf _PyEval_EvalCodeWithName
[2m[36m(pid=7900)[0m     @     0x5559e227a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7900)[0m     @     0x5559e21ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7900)[0m     @     0x5559e2279baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x7f8a1abc5ed4 at::native::copy_()
[2m[36m(pid=7889)[0m     @     0x7f8a1b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7889)[0m     @     0x7f8a1b410148 at::Tensor::copy_()
[2m[36m(pid=7889)[0m     @     0x7f8a1d007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7889)[0m     @     0x7f8a1b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7903)[0m     @     0x7f9d17b4e148 at::Tensor::copy_()
[2m[36m(pid=7903)[0m     @     0x7f9d19745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7903)[0m     @     0x7f9d17a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7903)[0m     @     0x7f9d17b4e148 at::Tensor::copy_()
[2m[36m(pid=7903)[0m     @     0x7f9d1de04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7903)[0m     @     0x557f93b1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7903)[0m     @     0x557f93a7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7903)[0m     @     0x557f93b05baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x557f93b06a20 method_vectorcall
[2m[36m(pid=7903)[0m     @     0x557f93a7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x7ed51dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7910)[0m     @     0x7ed51de7d148 at::Tensor::copy_()
[2m[36m(pid=7910)[0m     @     0x7ed524133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7910)[0m     @     0x55c42d306fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7910)[0m     @     0x55c42d261b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x55c42d2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7910)[0m     @     0x55c42d2eda20 method_vectorcall
[2m[36m(pid=7910)[0m     @     0x55c42d261bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x55c42d2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7910)[0m     @     0x55c42d2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7910)[0m     @     0x55c42d262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x55c42d2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7910)[0m     @     0x55c42d2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7910)[0m     @     0x55c42d262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x55c42d2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7910)[0m     @     0x55c42d2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7910)[0m     @     0x55c42d262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7910)[0m     @     0x55c42d2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x7f674c070ed4 at::native::copy_()
[2m[36m(pid=7904)[0m     @     0x7f674c7b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7904)[0m     @     0x7f674c8bb148 at::Tensor::copy_()
[2m[36m(pid=7904)[0m     @     0x7f674e4b2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7996)[0m     @     0x7ef31765b148 at::Tensor::copy_()
[2m[36m(pid=7996)[0m     @     0x7ef319252989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7996)[0m     @     0x7ef3175535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7962)[0m     @     0x7efef1605ed4 at::native::copy_()
[2m[36m(pid=7962)[0m     @     0x7efef1d485cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7962)[0m     @     0x7efef1e50148 at::Tensor::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c105f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=7971)[0m     @     0x7fc5c105dc3f at::native::copy_impl()
[2m[36m(pid=7971)[0m     @     0x7fc5c105eed4 at::native::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c17a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7966)[0m     @     0x7ee87084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7966)[0m     @     0x7ee86eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7955)[0m     @     0x7f7217520989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7955)[0m     @     0x7f72158215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7898)[0m     @     0x7f0ca88b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7898)[0m     @     0x55b16c9acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7898)[0m     @     0x55b16c907b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7898)[0m     @     0x55b16c992baf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x55b16c993a20 method_vectorcall
[2m[36m(pid=7898)[0m     @     0x55b16c907bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7898)[0m     @     0x55b16c992baf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x55b16c993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7898)[0m     @     0x55b16c908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7898)[0m     @     0x55b16c992baf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x55b16c993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7898)[0m     @     0x55b16c908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7898)[0m     @     0x55b16c992baf _PyEval_EvalCodeWithName
[2m[36m(pid=7898)[0m     @     0x55b16c993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7898)[0m     @     0x55b16c908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7898)[0m     @     0x55b16c992baf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x7ee32b173148 at::Tensor::copy_()
[2m[36m(pid=7907)[0m     @     0x7ee331429bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7907)[0m     @     0x55fa88b06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7907)[0m     @     0x55fa88a61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7907)[0m     @     0x55fa88aecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x55fa88aeda20 method_vectorcall
[2m[36m(pid=7907)[0m     @     0x55fa88a61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7907)[0m     @     0x55fa88aecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x55fa88aed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7907)[0m     @     0x55fa88a62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7907)[0m     @     0x55fa88aecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x55fa88aed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7907)[0m     @     0x55fa88a62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7907)[0m     @     0x55fa88aecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7907)[0m     @     0x55fa88aed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7907)[0m     @     0x55fa88a62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7907)[0m     @     0x55fa88aecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7895)[0m     @     0x7f817db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7895)[0m     @     0x7f817dc6c148 at::Tensor::copy_()
[2m[36m(pid=7895)[0m     @     0x7f8183f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7895)[0m     @     0x561601fdefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7895)[0m     @     0x561601f39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7895)[0m     @     0x561601fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=7895)[0m     @     0x561601fc5a20 method_vectorcall
[2m[36m(pid=7895)[0m     @     0x561601f39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7895)[0m     @     0x561601fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=7895)[0m     @     0x561601fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7895)[0m     @     0x561601f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7895)[0m     @     0x561601fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=7895)[0m     @     0x561601fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7895)[0m     @     0x561601f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7895)[0m     @     0x561601fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=7895)[0m     @     0x561601fc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7895)[0m     @     0x561601f3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7895)[0m     @     0x561601fc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x7edcc64fe148 at::Tensor::copy_()
[2m[36m(pid=7911)[0m     @     0x7edccc7b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7911)[0m     @     0x55b7ebcaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7911)[0m     @     0x55b7ebc0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7911)[0m     @     0x55b7ebc95baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x55b7ebc96a20 method_vectorcall
[2m[36m(pid=7911)[0m     @     0x55b7ebc0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7911)[0m     @     0x55b7ebc95baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x55b7ebc96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7911)[0m     @     0x55b7ebc0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7911)[0m     @     0x55b7ebc95baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x55b7ebc96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7911)[0m     @     0x55b7ebc0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7911)[0m     @     0x55b7ebc95baf _PyEval_EvalCodeWithName
[2m[36m(pid=7911)[0m     @     0x55b7ebc96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7911)[0m     @     0x55b7ebc0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7911)[0m     @     0x55b7ebc95baf _PyEval_EvalCodeWithName
[2m[36m(pid=7975)[0m     @     0x7f4ccb410148 at::Tensor::copy_()
[2m[36m(pid=7975)[0m     @     0x7f4cd16c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7975)[0m     @     0x559012f19fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7975)[0m     @     0x559012e74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7975)[0m     @     0x559012effbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7975)[0m     @     0x559012f00a20 method_vectorcall
[2m[36m(pid=7975)[0m     @     0x559012e74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7975)[0m     @     0x559012effbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7975)[0m     @     0x559012f00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7975)[0m     @     0x559012e75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7975)[0m     @     0x559012effbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7975)[0m     @     0x559012f00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7975)[0m     @     0x559012e75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7975)[0m     @     0x559012effbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7975)[0m     @     0x559012f00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7975)[0m     @     0x559012e75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7975)[0m     @     0x559012effbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x7f36397035cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8015)[0m     @     0x7f363980b148 at::Tensor::copy_()
[2m[36m(pid=8015)[0m     @     0x7f363fac1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8015)[0m     @     0x55f0bdd38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8015)[0m     @     0x55f0bdc93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8015)[0m     @     0x55f0bdd1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x55f0bdd1fa20 method_vectorcall
[2m[36m(pid=8015)[0m     @     0x55f0bdc93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8015)[0m     @     0x55f0bdd1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x55f0bdd1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8015)[0m     @     0x55f0bdc94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8015)[0m     @     0x55f0bdd1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x55f0bdd1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8015)[0m     @     0x55f0bdc94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8015)[0m     @     0x55f0bdd1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8015)[0m     @     0x55f0bdd1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8015)[0m     @     0x55f0bdc94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8015)[0m     @     0x55f0bdd1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7963)[0m     @     0x7f4e70efe148 at::Tensor::copy_()
[2m[36m(pid=7963)[0m     @     0x7f4e771b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7963)[0m     @     0x55bf84ef7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7963)[0m     @     0x55bf84e52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7963)[0m     @     0x55bf84eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7963)[0m     @     0x55bf84edea20 method_vectorcall
[2m[36m(pid=7963)[0m     @     0x55bf84e52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7963)[0m     @     0x55bf84eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7963)[0m     @     0x55bf84ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7963)[0m     @     0x55bf84e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7963)[0m     @     0x55bf84eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7963)[0m     @     0x55bf84ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7963)[0m     @     0x55bf84e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7963)[0m     @     0x55bf84eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7963)[0m     @     0x55bf84ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7963)[0m     @     0x55bf84e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7963)[0m     @     0x55bf84eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x7f1cc8c4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7906)[0m     @     0x7f1cc8d57148 at::Tensor::copy_()
[2m[36m(pid=7906)[0m     @     0x7f1cca94e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadb17f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadafaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7950)[0m     @     0x7fadafbff148 at::Tensor::copy_()
[2m[36m(pid=7950)[0m     @     0x7fadb5eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7950)[0m     @     0x55b3353affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7950)[0m     @     0x55b33530ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7950)[0m     @     0x55b335395baf _PyEval_EvalCodeWithName
[2m[36m(pid=7950)[0m     @     0x55b335396a20 method_vectorcall
[2m[36m(pid=7950)[0m     @     0x55b33530abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x7fa7fa23c148 at::Tensor::copy_()
[2m[36m(pid=7954)[0m     @     0x7fa7fbe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7954)[0m     @     0x7fa7fa1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7923)[0m     @     0x7f69bdc8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7923)[0m     @     0x7f69bbf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7908)[0m     @     0x7f2e00829148 at::Tensor::copy_()
[2m[36m(pid=7908)[0m     @     0x7f2e06adfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7908)[0m     @     0x5556051a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7908)[0m     @     0x555605101b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7908)[0m     @     0x55560518cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7908)[0m     @     0x55560518da20 method_vectorcall
[2m[36m(pid=7908)[0m     @     0x555605101bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7908)[0m     @     0x55560518cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7908)[0m     @     0x55560518d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7908)[0m     @     0x555605102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7908)[0m     @     0x55560518cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7908)[0m     @     0x55560518d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7908)[0m     @     0x555605102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7908)[0m     @     0x55560518cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7908)[0m     @     0x55560518d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7908)[0m     @     0x555605102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7908)[0m     @     0x55560518cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7997)[0m     @     0x7f1365226148 at::Tensor::copy_()
[2m[36m(pid=7997)[0m     @     0x7f136b4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7997)[0m     @     0x5579caf75fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7997)[0m     @     0x5579caed0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7997)[0m     @     0x5579caf5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7997)[0m     @     0x5579caf5ca20 method_vectorcall
[2m[36m(pid=7997)[0m     @     0x5579caed0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7997)[0m     @     0x5579caf5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7997)[0m     @     0x5579caf5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7997)[0m     @     0x5579caed1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7997)[0m     @     0x5579caf5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7997)[0m     @     0x5579caf5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7997)[0m     @     0x5579caed1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7997)[0m     @     0x5579caf5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7997)[0m     @     0x5579caf5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7997)[0m     @     0x5579caed1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7997)[0m     @     0x5579caf5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=7957)[0m     @     0x7f364e553148 at::Tensor::copy_()
[2m[36m(pid=7957)[0m     @     0x7f3654809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7957)[0m     @     0x5586a521cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7957)[0m     @     0x5586a5177b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7957)[0m     @     0x5586a5202baf _PyEval_EvalCodeWithName
[2m[36m(pid=7957)[0m     @     0x5586a5203a20 method_vectorcall
[2m[36m(pid=7957)[0m     @     0x5586a5177bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7957)[0m     @     0x5586a5202baf _PyEval_EvalCodeWithName
[2m[36m(pid=7957)[0m     @     0x5586a5203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7957)[0m     @     0x5586a5178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7957)[0m     @     0x5586a5202baf _PyEval_EvalCodeWithName
[2m[36m(pid=7957)[0m     @     0x5586a5203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7957)[0m     @     0x5586a5178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7957)[0m     @     0x5586a5202baf _PyEval_EvalCodeWithName
[2m[36m(pid=7957)[0m     @     0x5586a5203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7957)[0m     @     0x5586a5178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7957)[0m     @     0x5586a5202baf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x7f901f17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7953)[0m     @     0x7f901f283148 at::Tensor::copy_()
[2m[36m(pid=7953)[0m     @     0x7f9025539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7953)[0m     @     0x5590b46e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7953)[0m     @     0x5590b463fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7953)[0m     @     0x5590b46cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x5590b46cba20 method_vectorcall
[2m[36m(pid=7953)[0m     @     0x5590b463fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7953)[0m     @     0x5590b46cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x5590b46cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7953)[0m     @     0x5590b4640689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7953)[0m     @     0x5590b46cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x5590b46cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7953)[0m     @     0x5590b4640689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7953)[0m     @     0x5590b46cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x5590b46cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7953)[0m     @     0x5590b4640689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7992)[0m     @     0x55d11eaf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7992)[0m     @     0x55d11eaf9a20 method_vectorcall
[2m[36m(pid=7992)[0m     @     0x55d11ea6dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7992)[0m     @     0x55d11eaf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7992)[0m     @     0x55d11eaf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7992)[0m     @     0x55d11ea6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7992)[0m     @     0x55d11eaf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7992)[0m     @     0x55d11eaf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7992)[0m     @     0x55d11ea6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7992)[0m     @     0x55d11eaf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7992)[0m     @     0x55d11eaf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7992)[0m     @     0x55d11ea6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7992)[0m     @     0x55d11eaf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=7970)[0m     @     0x7eed5ac29148 at::Tensor::copy_()
[2m[36m(pid=7970)[0m     @     0x7eed60edfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7970)[0m     @     0x556c55d28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7970)[0m     @     0x556c55c83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x556c55d0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7970)[0m     @     0x556c55d0fa20 method_vectorcall
[2m[36m(pid=7970)[0m     @     0x556c55c83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x556c55d0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7970)[0m     @     0x556c55d0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7970)[0m     @     0x556c55c84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x556c55d0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7970)[0m     @     0x556c55d0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7970)[0m     @     0x556c55c84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x556c55d0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7970)[0m     @     0x556c55d0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7970)[0m     @     0x556c55c84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7970)[0m     @     0x556c55d0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7890)[0m     @     0x7f70cf151148 at::Tensor::copy_()
[2m[36m(pid=7890)[0m     @     0x7f70d5407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7890)[0m     @     0x5575412abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7890)[0m     @     0x557541206b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7890)[0m     @     0x557541291baf _PyEval_EvalCodeWithName
[2m[36m(pid=7890)[0m     @     0x557541292a20 method_vectorcall
[2m[36m(pid=7890)[0m     @     0x557541206bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7890)[0m     @     0x557541291baf _PyEval_EvalCodeWithName
[2m[36m(pid=7890)[0m     @     0x557541292643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7890)[0m     @     0x557541207689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7890)[0m     @     0x557541291baf _PyEval_EvalCodeWithName
[2m[36m(pid=7890)[0m     @     0x557541292643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7890)[0m     @     0x557541207689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7890)[0m     @     0x557541291baf _PyEval_EvalCodeWithName
[2m[36m(pid=7890)[0m     @     0x557541292643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7890)[0m     @     0x557541207689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7890)[0m     @     0x557541291baf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x7f3023e65148 at::Tensor::copy_()
[2m[36m(pid=7959)[0m     @     0x7f3025a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7905)[0m     @     0x558eab627a20 method_vectorcall
[2m[36m(pid=7905)[0m     @     0x558eab59bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7905)[0m     @     0x558eab626baf _PyEval_EvalCodeWithName
[2m[36m(pid=7905)[0m     @     0x558eab627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7905)[0m     @     0x558eab59c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7905)[0m     @     0x558eab626baf _PyEval_EvalCodeWithName
[2m[36m(pid=7905)[0m     @     0x558eab627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7905)[0m     @     0x558eab59c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7905)[0m     @     0x558eab626baf _PyEval_EvalCodeWithName
[2m[36m(pid=7905)[0m     @     0x558eab627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7905)[0m     @     0x558eab59c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7905)[0m     @     0x558eab626baf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x7f8acb3d8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7909)[0m     @     0x7f47555645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=8005)[0m     @     0x7ef752c0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8005)[0m     @     0x7ef750f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7889)[0m     @     0x7f8a1b410148 at::Tensor::copy_()
[2m[36m(pid=7889)[0m     @     0x7f8a216c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7889)[0m     @     0x561438501fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7889)[0m     @     0x56143845cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7889)[0m     @     0x5614384e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x5614384e8a20 method_vectorcall
[2m[36m(pid=7889)[0m     @     0x56143845cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7889)[0m     @     0x5614384e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x5614384e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7889)[0m     @     0x56143845d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7889)[0m     @     0x5614384e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x5614384e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7889)[0m     @     0x56143845d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7889)[0m     @     0x5614384e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7889)[0m     @     0x5614384e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7889)[0m     @     0x56143845d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7889)[0m     @     0x5614384e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x557f93b05baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x557f93b06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7903)[0m     @     0x557f93a7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7903)[0m     @     0x557f93b05baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x557f93b06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7903)[0m     @     0x557f93a7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7903)[0m     @     0x557f93b05baf _PyEval_EvalCodeWithName
[2m[36m(pid=7903)[0m     @     0x557f93b06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7903)[0m     @     0x557f93a7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7903)[0m     @     0x557f93b05baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x7f674c7b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7904)[0m     @     0x7f674c8bb148 at::Tensor::copy_()
[2m[36m(pid=7904)[0m     @     0x7f6752b71bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7904)[0m     @     0x562f3a26bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7904)[0m     @     0x562f3a1c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7904)[0m     @     0x562f3a251baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x562f3a252a20 method_vectorcall
[2m[36m(pid=7904)[0m     @     0x562f3a1c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7904)[0m     @     0x562f3a251baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x562f3a252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7904)[0m     @     0x562f3a1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7904)[0m     @     0x562f3a251baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x562f3a252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7904)[0m     @     0x562f3a1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7904)[0m     @     0x562f3a251baf _PyEval_EvalCodeWithName
[2m[36m(pid=7904)[0m     @     0x562f3a252643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7904)[0m     @     0x562f3a1c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7904)[0m     @     0x562f3a251baf _PyEval_EvalCodeWithName
[2m[36m(pid=7996)[0m     @     0x7ef31765b148 at::Tensor::copy_()
[2m[36m(pid=7996)[0m     @     0x7ef31d911bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7996)[0m     @     0x557dffbbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7996)[0m     @     0x557dffb1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7996)[0m     @     0x557dffba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7996)[0m     @     0x557dffba6a20 method_vectorcall
[2m[36m(pid=7996)[0m     @     0x557dffb1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7996)[0m     @     0x557dffba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7996)[0m     @     0x557dffba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7996)[0m     @     0x557dffb1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7996)[0m     @     0x557dffba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7996)[0m     @     0x557dffba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7996)[0m     @     0x557dffb1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7996)[0m     @     0x557dffba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7996)[0m     @     0x557dffba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7996)[0m     @     0x557dffb1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7996)[0m     @     0x557dffba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x7efef3a47989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7962)[0m     @     0x7efef1d485cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7962)[0m     @     0x7efef1e50148 at::Tensor::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c18a9148 at::Tensor::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c34a0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c17a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7966)[0m     @     0x7ee86ec56148 at::Tensor::copy_()
[2m[36m(pid=7906)[0m     @     0x7f1cc8c4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7950)[0m     @     0x55b335395baf _PyEval_EvalCodeWithName
[2m[36m(pid=7950)[0m     @     0x55b335396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7950)[0m     @     0x55b33530b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7950)[0m     @     0x55b335395baf _PyEval_EvalCodeWithName
[2m[36m(pid=7950)[0m     @     0x55b335396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7950)[0m     @     0x55b33530b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7950)[0m     @     0x55b335395baf _PyEval_EvalCodeWithName
[2m[36m(pid=7950)[0m     @     0x55b335396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7950)[0m     @     0x55b33530b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7950)[0m     @     0x55b335395baf _PyEval_EvalCodeWithName
[2m[36m(pid=7954)[0m     @     0x7fa7fa23c148 at::Tensor::copy_()
[2m[36m(pid=7954)[0m     @     0x7fa8004f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7954)[0m     @     0x55aa869dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7954)[0m     @     0x55aa86936b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x55aa869c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7954)[0m     @     0x55aa869c2a20 method_vectorcall
[2m[36m(pid=7954)[0m     @     0x55aa86936bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x55aa869c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7954)[0m     @     0x55aa869c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7954)[0m     @     0x55aa86937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x55aa869c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7954)[0m     @     0x55aa869c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7954)[0m     @     0x55aa86937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x55aa869c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7954)[0m     @     0x55aa869c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7954)[0m     @     0x55aa86937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7954)[0m     @     0x55aa869c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7923)[0m     @     0x7f69bc095148 at::Tensor::copy_()
[2m[36m(pid=7923)[0m     @     0x7f69c234bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7923)[0m     @     0x5561f4ec4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7923)[0m     @     0x5561f4e1fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7923)[0m     @     0x5561f4eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7923)[0m     @     0x5561f4eaba20 method_vectorcall
[2m[36m(pid=7923)[0m     @     0x5561f4e1fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7923)[0m     @     0x5561f4eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7923)[0m     @     0x5561f4eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7923)[0m     @     0x5561f4e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7923)[0m     @     0x5561f4eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7923)[0m     @     0x5561f4eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7923)[0m     @     0x5561f4e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7923)[0m     @     0x5561f4eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7923)[0m     @     0x5561f4eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7923)[0m     @     0x5561f4e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7923)[0m     @     0x5561f4eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7953)[0m     @     0x5590b46cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x7f3023d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7959)[0m     @     0x7f3023e65148 at::Tensor::copy_()
[2m[36m(pid=7959)[0m     @     0x7f302a11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7959)[0m     @     0x5620aac78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7959)[0m     @     0x5620aabd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7959)[0m     @     0x5620aac5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x5620aac5fa20 method_vectorcall
[2m[36m(pid=7959)[0m     @     0x5620aabd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x7f8ac96d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=7925)[0m     @     0x7f8ac97e1148 at::Tensor::copy_()
[2m[36m(pid=7925)[0m     @     0x7f8acfa97bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7925)[0m     @     0x564116a94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7925)[0m     @     0x5641169efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x564116a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x564116a7ba20 method_vectorcall
[2m[36m(pid=7925)[0m     @     0x5641169efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x564116a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x564116a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7925)[0m     @     0x5641169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x564116a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x564116a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7925)[0m     @     0x5641169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x564116a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7925)[0m     @     0x564116a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7925)[0m     @     0x5641169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7925)[0m     @     0x564116a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7909)[0m     @     0x7f475566c148 at::Tensor::copy_()
[2m[36m(pid=7909)[0m     @     0x7f475b922bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7909)[0m     @     0x5594b6c9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7909)[0m     @     0x5594b6bf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7909)[0m     @     0x5594b6c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=7909)[0m     @     0x5594b6c82a20 method_vectorcall
[2m[36m(pid=7909)[0m     @     0x5594b6bf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7909)[0m     @     0x5594b6c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=7909)[0m     @     0x5594b6c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7909)[0m     @     0x5594b6bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7909)[0m     @     0x5594b6c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=7909)[0m     @     0x5594b6c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7909)[0m     @     0x5594b6bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7909)[0m     @     0x5594b6c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=7909)[0m     @     0x5594b6c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7909)[0m     @     0x5594b6bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7909)[0m     @     0x5594b6c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=8005)[0m     @     0x7ef751015148 at::Tensor::copy_()
[2m[36m(pid=8005)[0m     @     0x7ef7572cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=8005)[0m     @     0x55923a95afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8005)[0m     @     0x55923a8b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8005)[0m     @     0x55923a940baf _PyEval_EvalCodeWithName
[2m[36m(pid=8005)[0m     @     0x55923a941a20 method_vectorcall
[2m[36m(pid=8005)[0m     @     0x55923a8b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8005)[0m     @     0x55923a940baf _PyEval_EvalCodeWithName
[2m[36m(pid=8005)[0m     @     0x55923a941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8005)[0m     @     0x55923a8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8005)[0m     @     0x55923a940baf _PyEval_EvalCodeWithName
[2m[36m(pid=8005)[0m     @     0x55923a941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8005)[0m     @     0x55923a8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8005)[0m     @     0x55923a940baf _PyEval_EvalCodeWithName
[2m[36m(pid=8005)[0m     @     0x55923a941643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8005)[0m     @     0x55923a8b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8005)[0m     @     0x55923a940baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x7efef8106bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7962)[0m     @     0x5619bf56dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7962)[0m     @     0x5619bf4c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7962)[0m     @     0x5619bf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x5619bf554a20 method_vectorcall
[2m[36m(pid=7962)[0m     @     0x5619bf4c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7962)[0m     @     0x5619bf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x5619bf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7962)[0m     @     0x5619bf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7962)[0m     @     0x5619bf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x5619bf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7962)[0m     @     0x5619bf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7962)[0m     @     0x5619bf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=7962)[0m     @     0x5619bf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7962)[0m     @     0x5619bf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7962)[0m     @     0x5619bf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x7fc5c18a9148 at::Tensor::copy_()
[2m[36m(pid=7971)[0m     @     0x7fc5c7b5fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7971)[0m     @     0x55fd44ff3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7971)[0m     @     0x55fd44f4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7971)[0m     @     0x55fd44fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x55fd44fdaa20 method_vectorcall
[2m[36m(pid=7971)[0m     @     0x55fd44f4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7971)[0m     @     0x55fd44fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x55fd44fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7971)[0m     @     0x55fd44f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7971)[0m     @     0x55fd44fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x55fd44fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7971)[0m     @     0x55fd44f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7971)[0m     @     0x55fd44fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x55fd44fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7966)[0m     @     0x7ee874f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7966)[0m     @     0x564ce849dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7966)[0m     @     0x564ce83f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7966)[0m     @     0x564ce8483baf _PyEval_EvalCodeWithName
[2m[36m(pid=7966)[0m     @     0x564ce8484a20 method_vectorcall
[2m[36m(pid=7966)[0m     @     0x564ce83f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7966)[0m     @     0x564ce8483baf _PyEval_EvalCodeWithName
[2m[36m(pid=7966)[0m     @     0x564ce8484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7966)[0m     @     0x564ce83f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7966)[0m     @     0x564ce8483baf _PyEval_EvalCodeWithName
[2m[36m(pid=7966)[0m     @     0x564ce8484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7966)[0m     @     0x564ce83f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7966)[0m     @     0x564ce8483baf _PyEval_EvalCodeWithName
[2m[36m(pid=7966)[0m     @     0x564ce8484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7966)[0m     @     0x564ce83f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7966)[0m     @     0x564ce8483baf _PyEval_EvalCodeWithName
[2m[36m(pid=7955)[0m     @     0x7f7215929148 at::Tensor::copy_()
[2m[36m(pid=7955)[0m     @     0x7f721bbdfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7955)[0m     @     0x5647322bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7955)[0m     @     0x564732216b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7955)[0m     @     0x5647322a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7955)[0m     @     0x5647322a2a20 method_vectorcall
[2m[36m(pid=7955)[0m     @     0x564732216bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7955)[0m     @     0x5647322a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7955)[0m     @     0x5647322a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7955)[0m     @     0x564732217689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7955)[0m     @     0x5647322a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7955)[0m     @     0x5647322a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7955)[0m     @     0x564732217689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7955)[0m     @     0x5647322a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x7f1cc8d57148 at::Tensor::copy_()
[2m[36m(pid=7906)[0m     @     0x7f1ccf00dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=7906)[0m     @     0x564546eb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=7906)[0m     @     0x564546e0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7906)[0m     @     0x564546e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x564546e9ba20 method_vectorcall
[2m[36m(pid=7906)[0m     @     0x564546e0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7906)[0m     @     0x564546e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x564546e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7906)[0m     @     0x564546e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7906)[0m     @     0x564546e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x564546e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7906)[0m     @     0x564546e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7906)[0m     @     0x564546e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7906)[0m     @     0x564546e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7906)[0m     @     0x564546e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7906)[0m     @     0x564546e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x5620aac5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x5620aac5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7959)[0m     @     0x5620aabd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7959)[0m     @     0x5620aac5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x5620aac5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7959)[0m     @     0x5620aabd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7959)[0m     @     0x5620aac5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7959)[0m     @     0x5620aac5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7959)[0m     @     0x5620aabd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7959)[0m     @     0x5620aac5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=7971)[0m     @     0x55fd44f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7971)[0m     @     0x55fd44fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=7955)[0m     @     0x5647322a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=7955)[0m     @     0x564732217689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=7955)[0m     @     0x5647322a1baf _PyEval_EvalCodeWithName
2020-11-05 10:57:50,865	ERROR trial_runner.py:567 -- Trial PPO_jss_env_bad12_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=8001, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:57:50,868	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:57:50,868	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_bad12_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_bad12_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_bad12_00000_0_2020-11-05_10-57-43/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:57:50,879	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
== Status ==
Memory usage on this node: 24.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_bad12_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_bad12_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_bad12_00000_0_2020-11-05_10-57-43/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_bad12_00000])
