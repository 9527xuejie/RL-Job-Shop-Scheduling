2020-11-05 10:56:23,349	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.86 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c024_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=80122)[0m 2020-11-05 10:56:26,118	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=80115)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80115)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80115)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80115)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80115)[0m *** SIGSEGV (@0x0) received by PID 80115 (TID 0x7f27736c1700) from PID 0; stack trace: ***
[2m[36m(pid=80115)[0m     @     0x7f277329a390 (unknown)
[2m[36m(pid=80115)[0m     @     0x7ef8754b0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80115)[0m     @     0x7ef8727a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80150)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80150)[0m *** SIGSEGV (@0x0) received by PID 80150 (TID 0x7fd8d97fb700) from PID 0; stack trace: ***
[2m[36m(pid=80150)[0m     @     0x7fd8d93d4390 (unknown)
[2m[36m(pid=80150)[0m     @     0x7fa9db5d6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80150)[0m     @     0x7fa9d88ca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80150)[0m     @     0x7fa9d88cd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80150)[0m     @     0x7fa9d88cdb53 at::TensorIterator::for_each()
[2m[36m(pid=80136)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80136)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80136)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80136)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80136)[0m *** SIGSEGV (@0x0) received by PID 80136 (TID 0x7f1f5ee83700) from PID 0; stack trace: ***
[2m[36m(pid=80136)[0m     @     0x7f1f5ea5c390 (unknown)
[2m[36m(pid=80136)[0m     @     0x7ef060c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80136)[0m     @     0x7ef05df3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80136)[0m     @     0x7ef05df3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80136)[0m     @     0x7ef05df3ab53 at::TensorIterator::for_each()
[2m[36m(pid=80116)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80116)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80116)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80116)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80116)[0m *** SIGSEGV (@0x0) received by PID 80116 (TID 0x7ffa211ff700) from PID 0; stack trace: ***
[2m[36m(pid=80116)[0m     @     0x7ffa20dd8390 (unknown)
[2m[36m(pid=80116)[0m     @     0x7fcb22fdbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80116)[0m     @     0x7fcb202cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80116)[0m     @     0x7fcb202d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80116)[0m     @     0x7fcb202d2b53 at::TensorIterator::for_each()
[2m[36m(pid=80142)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80142)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80142)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80142)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80142)[0m *** SIGSEGV (@0x0) received by PID 80142 (TID 0x7f2566c9c700) from PID 0; stack trace: ***
[2m[36m(pid=80142)[0m     @     0x7f2566875390 (unknown)
[2m[36m(pid=80142)[0m     @     0x7ef668a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80142)[0m     @     0x7ef665d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80142)[0m     @     0x7ef665d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80142)[0m     @     0x7ef665d29b53 at::TensorIterator::for_each()
[2m[36m(pid=80142)[0m     @     0x7ef665d29e11 at::TensorIterator::for_each()
[2m[36m(pid=80142)[0m     @     0x7ef668a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80104)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80104)[0m *** SIGSEGV (@0x0) received by PID 80104 (TID 0x7f4a629bd700) from PID 0; stack trace: ***
[2m[36m(pid=80104)[0m     @     0x7f4a62596390 (unknown)
[2m[36m(pid=80104)[0m     @     0x7f1b64770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80104)[0m     @     0x7f1b61a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80104)[0m     @     0x7f1b61a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80104)[0m     @     0x7f1b61a67b53 at::TensorIterator::for_each()
[2m[36m(pid=80104)[0m     @     0x7f1b61a67e11 at::TensorIterator::for_each()
[2m[36m(pid=80104)[0m     @     0x7f1b64780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80144)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80144)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80144)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80144)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80144)[0m *** SIGSEGV (@0x0) received by PID 80144 (TID 0x7f7741d7e700) from PID 0; stack trace: ***
[2m[36m(pid=80144)[0m     @     0x7f7741957390 (unknown)
[2m[36m(pid=80144)[0m     @     0x7f4843a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80144)[0m     @     0x7f4840d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80144)[0m     @     0x7f4840d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80144)[0m     @     0x7f4840d67b53 at::TensorIterator::for_each()
[2m[36m(pid=80144)[0m     @     0x7f4840d67e11 at::TensorIterator::for_each()
[2m[36m(pid=80140)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80140)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80140)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80140)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80140)[0m *** SIGSEGV (@0x0) received by PID 80140 (TID 0x7f54cbf49700) from PID 0; stack trace: ***
[2m[36m(pid=80140)[0m     @     0x7f54cbb22390 (unknown)
[2m[36m(pid=80140)[0m     @     0x7f25cdd33fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80140)[0m     @     0x7f25cb02764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80140)[0m     @     0x7f25cb02a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80140)[0m     @     0x7f25cb02ab53 at::TensorIterator::for_each()
[2m[36m(pid=80107)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80107)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80107)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80107)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80107)[0m *** SIGSEGV (@0x0) received by PID 80107 (TID 0x7f3b7e23a700) from PID 0; stack trace: ***
[2m[36m(pid=80107)[0m     @     0x7f3b7de13390 (unknown)
[2m[36m(pid=80107)[0m     @     0x7f0c8001bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80107)[0m     @     0x7f0c7d30f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80107)[0m     @     0x7f0c7d312977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80113)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80113)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80146)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80146)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80146)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80146)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80146)[0m *** SIGSEGV (@0x0) received by PID 80146 (TID 0x7fb07667a700) from PID 0; stack trace: ***
[2m[36m(pid=80146)[0m     @     0x7fb076253390 (unknown)
[2m[36m(pid=80146)[0m     @     0x7f81783b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80146)[0m     @     0x7f81756a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80146)[0m     @     0x7f81756a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80146)[0m     @     0x7f81756a8b53 at::TensorIterator::for_each()
[2m[36m(pid=80146)[0m     @     0x7f81756a8e11 at::TensorIterator::for_each()
[2m[36m(pid=80079)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80079)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80131)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80131)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80131)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80131)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80131)[0m *** SIGSEGV (@0x0) received by PID 80131 (TID 0x7f259ad71700) from PID 0; stack trace: ***
[2m[36m(pid=80131)[0m     @     0x7f259a94a390 (unknown)
[2m[36m(pid=80131)[0m     @     0x7ef69c981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80131)[0m     @     0x7ef699c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80131)[0m     @     0x7ef699c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80131)[0m     @     0x7ef699c78b53 at::TensorIterator::for_each()
[2m[36m(pid=80061)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80061)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80061)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80061)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80061)[0m *** SIGSEGV (@0x0) received by PID 80061 (TID 0x7f2f1dbaa700) from PID 0; stack trace: ***
[2m[36m(pid=80061)[0m     @     0x7f2f1d783390 (unknown)
[2m[36m(pid=80061)[0m     @     0x7f001f96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80061)[0m     @     0x7f001cc5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80061)[0m     @     0x7f001cc62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80061)[0m     @     0x7f001cc62b53 at::TensorIterator::for_each()
[2m[36m(pid=80088)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80088)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80088)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80088)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80088)[0m *** SIGSEGV (@0x0) received by PID 80088 (TID 0x7fde52fdb700) from PID 0; stack trace: ***
[2m[36m(pid=80088)[0m     @     0x7fde52bb4390 (unknown)
[2m[36m(pid=80088)[0m     @     0x7faf54dc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80088)[0m     @     0x7faf520bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80088)[0m     @     0x7faf520c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80088)[0m     @     0x7faf520c0b53 at::TensorIterator::for_each()
[2m[36m(pid=80109)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80109)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80109)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80109)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80109)[0m *** SIGSEGV (@0x0) received by PID 80109 (TID 0x7f0c5b704700) from PID 0; stack trace: ***
[2m[36m(pid=80109)[0m     @     0x7f0c5b2dd390 (unknown)
[2m[36m(pid=80109)[0m     @     0x7edd5d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80109)[0m     @     0x7edd5a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80109)[0m     @     0x7edd5a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80109)[0m     @     0x7edd5a797b53 at::TensorIterator::for_each()
[2m[36m(pid=80110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80110)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80110)[0m *** SIGSEGV (@0x0) received by PID 80110 (TID 0x7f3b5ab82700) from PID 0; stack trace: ***
[2m[36m(pid=80110)[0m     @     0x7f3b5a75b390 (unknown)
[2m[36m(pid=80110)[0m     @     0x7f0c5c962fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80110)[0m     @     0x7f0c59c5664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80110)[0m     @     0x7f0c59c59977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80110)[0m     @     0x7f0c59c59b53 at::TensorIterator::for_each()
[2m[36m(pid=80041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80058)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80058)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80058)[0m *** SIGSEGV (@0x0) received by PID 80058 (TID 0x7f26e0f6a700) from PID 0; stack trace: ***
[2m[36m(pid=80058)[0m     @     0x7f26e0b43390 (unknown)
[2m[36m(pid=80058)[0m     @     0x7ef7e2d4cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80058)[0m     @     0x7ef7e004064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80058)[0m     @     0x7ef7e0043977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80058)[0m     @     0x7ef7e0043b53 at::TensorIterator::for_each()
[2m[36m(pid=80074)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80074)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80074)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80074)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80074)[0m *** SIGSEGV (@0x0) received by PID 80074 (TID 0x7f9563e4b700) from PID 0; stack trace: ***
[2m[36m(pid=80074)[0m     @     0x7f9563a24390 (unknown)
[2m[36m(pid=80074)[0m     @     0x7f6665b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80074)[0m     @     0x7f6662e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80074)[0m     @     0x7f6662e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80074)[0m     @     0x7f6662e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=80093)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80093)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80108)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80108)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80108)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80108)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80108)[0m *** SIGSEGV (@0x0) received by PID 80108 (TID 0x7f4c94940700) from PID 0; stack trace: ***
[2m[36m(pid=80108)[0m     @     0x7f4c94519390 (unknown)
[2m[36m(pid=80108)[0m     @     0x7f1d965b0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80108)[0m     @     0x7f1d938a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80108)[0m     @     0x7f1d938a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80108)[0m     @     0x7f1d938a7b53 at::TensorIterator::for_each()
[2m[36m(pid=80083)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80083)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80083)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80083)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80083)[0m *** SIGSEGV (@0x0) received by PID 80083 (TID 0x7fe6c585e700) from PID 0; stack trace: ***
[2m[36m(pid=80115)[0m     @     0x7ef8727a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80115)[0m     @     0x7ef8727a7b53 at::TensorIterator::for_each()
[2m[36m(pid=80027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80027)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80034)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80153)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80153)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80153)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80044)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80133)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80133)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80133)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80089)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80089)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80089)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80106)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80037)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80037)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80037)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80119)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80119)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80119)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80150)[0m     @     0x7fa9d88cde11 at::TensorIterator::for_each()
[2m[36m(pid=80150)[0m     @     0x7fa9db5e6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80150)[0m     @     0x7fa9db609cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80150)[0m     @     0x7fa9d8647009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80136)[0m     @     0x7ef05df3ae11 at::TensorIterator::for_each()
[2m[36m(pid=80136)[0m     @     0x7ef060c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80136)[0m     @     0x7ef060c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80116)[0m     @     0x7fcb202d2e11 at::TensorIterator::for_each()
[2m[36m(pid=80116)[0m     @     0x7fcb22febc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80116)[0m     @     0x7fcb2300ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80116)[0m     @     0x7fcb2004c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80142)[0m     @     0x7ef668a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80142)[0m     @     0x7ef665aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80142)[0m     @     0x7ef665aa1c3f at::native::copy_impl()
[2m[36m(pid=80104)[0m     @     0x7f1b647a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80104)[0m     @     0x7f1b617e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80104)[0m     @     0x7f1b617dfc3f at::native::copy_impl()
[2m[36m(pid=80144)[0m     @     0x7f4843a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80144)[0m     @     0x7f4843aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80144)[0m     @     0x7f4840ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80144)[0m     @     0x7f4840adfc3f at::native::copy_impl()
[2m[36m(pid=80140)[0m     @     0x7f25cb02ae11 at::TensorIterator::for_each()
[2m[36m(pid=80140)[0m     @     0x7f25cdd43c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80140)[0m     @     0x7f25cdd66cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80107)[0m     @     0x7f0c7d312b53 at::TensorIterator::for_each()
[2m[36m(pid=80107)[0m     @     0x7f0c7d312e11 at::TensorIterator::for_each()
[2m[36m(pid=80107)[0m     @     0x7f0c8002bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80107)[0m     @     0x7f0c8004ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80030)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80030)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80030)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80030)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80030)[0m *** SIGSEGV (@0x0) received by PID 80030 (TID 0x7faa57962700) from PID 0; stack trace: ***
[2m[36m(pid=80149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80149)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80149)[0m *** SIGSEGV (@0x0) received by PID 80149 (TID 0x7f1a615e2700) from PID 0; stack trace: ***
[2m[36m(pid=80123)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80123)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80123)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80123)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80123)[0m *** SIGSEGV (@0x0) received by PID 80123 (TID 0x7f3d8fb37700) from PID 0; stack trace: ***
[2m[36m(pid=80113)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80113)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80113)[0m *** SIGSEGV (@0x0) received by PID 80113 (TID 0x7f5282f14700) from PID 0; stack trace: ***
[2m[36m(pid=80113)[0m     @     0x7f5282aed390 (unknown)
[2m[36m(pid=80113)[0m     @     0x7f2384c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80113)[0m     @     0x7f2381f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80043)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80043)[0m *** SIGSEGV (@0x0) received by PID 80043 (TID 0x7fda578c5700) from PID 0; stack trace: ***
[2m[36m(pid=80043)[0m     @     0x7fda5749e390 (unknown)
[2m[36m(pid=80043)[0m     @     0x7fab594a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80043)[0m     @     0x7fab5679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80146)[0m     @     0x7f81783c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80146)[0m     @     0x7f81783e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80146)[0m     @     0x7f8175422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80146)[0m     @     0x7f8175420c3f at::native::copy_impl()
[2m[36m(pid=80028)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80028)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80028)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80028)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80028)[0m *** SIGSEGV (@0x0) received by PID 80028 (TID 0x7fb6f9ed8700) from PID 0; stack trace: ***
[2m[36m(pid=80028)[0m     @     0x7fb6f9ab1390 (unknown)
[2m[36m(pid=80079)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80079)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80079)[0m *** SIGSEGV (@0x0) received by PID 80079 (TID 0x7fa299715700) from PID 0; stack trace: ***
[2m[36m(pid=80079)[0m     @     0x7fa2992ee390 (unknown)
[2m[36m(pid=80079)[0m     @     0x7f739b4c1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80079)[0m     @     0x7f73987b564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80131)[0m     @     0x7ef699c78e11 at::TensorIterator::for_each()
[2m[36m(pid=80131)[0m     @     0x7ef69c991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80131)[0m     @     0x7ef69c9b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80131)[0m     @     0x7ef6999f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80096)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80061)[0m     @     0x7f001cc62e11 at::TensorIterator::for_each()
[2m[36m(pid=80061)[0m     @     0x7f001f97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80061)[0m     @     0x7f001f99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80088)[0m     @     0x7faf520c0e11 at::TensorIterator::for_each()
[2m[36m(pid=80088)[0m     @     0x7faf54dd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80088)[0m     @     0x7faf54dfccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80088)[0m     @     0x7faf51e3a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80088)[0m     @     0x7faf51e38c3f at::native::copy_impl()
[2m[36m(pid=80109)[0m     @     0x7edd5a797e11 at::TensorIterator::for_each()
[2m[36m(pid=80109)[0m     @     0x7edd5d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80109)[0m     @     0x7edd5d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80109)[0m     @     0x7edd5a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80109)[0m     @     0x7edd5a50fc3f at::native::copy_impl()
[2m[36m(pid=80110)[0m     @     0x7f0c59c59e11 at::TensorIterator::for_each()
[2m[36m(pid=80110)[0m     @     0x7f0c5c972c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80110)[0m     @     0x7f0c5c995cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80110)[0m     @     0x7f0c599d3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80110)[0m     @     0x7f0c599d1c3f at::native::copy_impl()
[2m[36m(pid=80130)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80130)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80130)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80130)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80130)[0m *** SIGSEGV (@0x0) received by PID 80130 (TID 0x7fe10a1a8700) from PID 0; stack trace: ***
[2m[36m(pid=80130)[0m     @     0x7fe109d81390 (unknown)
[2m[36m(pid=80130)[0m     @     0x7fb20bfaefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80130)[0m     @     0x7fb2092a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80053)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80053)[0m *** SIGSEGV (@0x0) received by PID 80053 (TID 0x7f3f0d89b700) from PID 0; stack trace: ***
[2m[36m(pid=80053)[0m     @     0x7f3f0d474390 (unknown)
[2m[36m(pid=80053)[0m     @     0x7f100f643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80053)[0m     @     0x7f100c93764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80053)[0m     @     0x7f100c93a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80029)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80029)[0m *** SIGSEGV (@0x0) received by PID 80029 (TID 0x7f8b8b360700) from PID 0; stack trace: ***
[2m[36m(pid=80029)[0m     @     0x7f8b8af39390 (unknown)
[2m[36m(pid=80029)[0m     @     0x7f5c8d14afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80029)[0m     @     0x7f5c8a43e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80052)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80052)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80052)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80052)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80052)[0m *** SIGSEGV (@0x0) received by PID 80052 (TID 0x7f722eab2700) from PID 0; stack trace: ***
[2m[36m(pid=80052)[0m     @     0x7f722e68b390 (unknown)
[2m[36m(pid=80052)[0m     @     0x7f4330770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80052)[0m     @     0x7f432da6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80052)[0m     @     0x7f432da67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80041)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80041)[0m *** SIGSEGV (@0x0) received by PID 80041 (TID 0x7f8d332c1700) from PID 0; stack trace: ***
[2m[36m(pid=80041)[0m     @     0x7f8d32e9a390 (unknown)
[2m[36m(pid=80041)[0m     @     0x7f5e350cafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80041)[0m     @     0x7f5e323be64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80041)[0m     @     0x7f5e323c1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80040)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80040)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80040)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80040)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80040)[0m *** SIGSEGV (@0x0) received by PID 80040 (TID 0x7f96dd350700) from PID 0; stack trace: ***
[2m[36m(pid=80040)[0m     @     0x7f96dcf29390 (unknown)
[2m[36m(pid=80040)[0m     @     0x7f67df11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80040)[0m     @     0x7f67dc40f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80040)[0m     @     0x7f67dc412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80039)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80039)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80039)[0m *** SIGSEGV (@0x0) received by PID 80039 (TID 0x7f5b48ca2700) from PID 0; stack trace: ***
[2m[36m(pid=80039)[0m     @     0x7f5b4887b390 (unknown)
[2m[36m(pid=80039)[0m     @     0x7f2c4a9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80039)[0m     @     0x7f2c47cdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80058)[0m     @     0x7ef7e0043e11 at::TensorIterator::for_each()
[2m[36m(pid=80058)[0m     @     0x7ef7e2d5cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80058)[0m     @     0x7ef7e2d7fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80058)[0m     @     0x7ef7dfdbd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80058)[0m     @     0x7ef7dfdbbc3f at::native::copy_impl()
[2m[36m(pid=80058)[0m     @     0x7ef7dfdbced4 at::native::copy_()
[2m[36m(pid=80074)[0m     @     0x7f6662e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=80074)[0m     @     0x7f6665b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80074)[0m     @     0x7f6665b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80074)[0m     @     0x7f6662bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80074)[0m     @     0x7f6662bc4c3f at::native::copy_impl()
[2m[36m(pid=80074)[0m     @     0x7f6662bc5ed4 at::native::copy_()
[2m[36m(pid=80093)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80093)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80093)[0m *** SIGSEGV (@0x0) received by PID 80093 (TID 0x7ff567f74700) from PID 0; stack trace: ***
[2m[36m(pid=80093)[0m     @     0x7ff567b4d390 (unknown)
[2m[36m(pid=80093)[0m     @     0x7fc669d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80093)[0m     @     0x7fc66706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80093)[0m     @     0x7fc667063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80108)[0m     @     0x7f1d938a7e11 at::TensorIterator::for_each()
[2m[36m(pid=80108)[0m     @     0x7f1d965c0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80108)[0m     @     0x7f1d965e3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80108)[0m     @     0x7f1d93621009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80108)[0m     @     0x7f1d9361fc3f at::native::copy_impl()
[2m[36m(pid=80045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80045)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80045)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80045)[0m *** SIGSEGV (@0x0) received by PID 80045 (TID 0x7fb9d9069700) from PID 0; stack trace: ***
[2m[36m(pid=80045)[0m     @     0x7fb9d8c42390 (unknown)
[2m[36m(pid=80045)[0m     @     0x7f8adad02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80045)[0m     @     0x7f8ad7ff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80045)[0m     @     0x7f8ad7ff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80056)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80056)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80056)[0m *** SIGSEGV (@0x0) received by PID 80056 (TID 0x7ff3bd624700) from PID 0; stack trace: ***
[2m[36m(pid=80024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80024)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80024)[0m *** SIGSEGV (@0x0) received by PID 80024 (TID 0x7fbffeaf3700) from PID 0; stack trace: ***
[2m[36m(pid=80048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80048)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80048)[0m *** SIGSEGV (@0x0) received by PID 80048 (TID 0x7ff02290a700) from PID 0; stack trace: ***
[2m[36m(pid=80048)[0m     @     0x7ff0224e3390 (unknown)
[2m[36m(pid=80048)[0m     @     0x7fc1246defb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80048)[0m     @     0x7fc1219d264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80033)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80033)[0m *** SIGSEGV (@0x0) received by PID 80033 (TID 0x7f4f873c4700) from PID 0; stack trace: ***
[2m[36m(pid=80033)[0m     @     0x7f4f86f9d390 (unknown)
[2m[36m(pid=80134)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80134)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80134)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80134)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80134)[0m *** SIGSEGV (@0x0) received by PID 80134 (TID 0x7f4d548a3700) from PID 0; stack trace: ***
[2m[36m(pid=80134)[0m     @     0x7f4d5447c390 (unknown)
[2m[36m(pid=80134)[0m     @     0x7f1e5665afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80112)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80112)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80112)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80112)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80112)[0m *** SIGSEGV (@0x0) received by PID 80112 (TID 0x7fe418ff2700) from PID 0; stack trace: ***
[2m[36m(pid=80112)[0m     @     0x7fe418bcb390 (unknown)
[2m[36m(pid=80112)[0m     @     0x7fb51ad02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80129)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80129)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80129)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80129)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80129)[0m *** SIGSEGV (@0x0) received by PID 80129 (TID 0x7f7fed45c700) from PID 0; stack trace: ***
[2m[36m(pid=80129)[0m     @     0x7f7fed035390 (unknown)
[2m[36m(pid=80129)[0m     @     0x7f50ef11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80129)[0m     @     0x7f50ec40f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80129)[0m     @     0x7f50ec412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80080)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80080)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80080)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80080)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80080)[0m *** SIGSEGV (@0x0) received by PID 80080 (TID 0x7fb321e23700) from PID 0; stack trace: ***
[2m[36m(pid=80080)[0m     @     0x7fb3219fc390 (unknown)
[2m[36m(pid=80111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80111)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80111)[0m *** SIGSEGV (@0x0) received by PID 80111 (TID 0x7fb4c8ef8700) from PID 0; stack trace: ***
[2m[36m(pid=80035)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80035)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80035)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80036)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80036)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80036)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80036)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80036)[0m *** SIGSEGV (@0x0) received by PID 80036 (TID 0x7f4fd088d700) from PID 0; stack trace: ***
[2m[36m(pid=80036)[0m     @     0x7f4fd0466390 (unknown)
[2m[36m(pid=80036)[0m     @     0x7f20d265afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80036)[0m     @     0x7f20cf94e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80036)[0m     @     0x7f20cf951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80124)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80124)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80124)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80124)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80124)[0m *** SIGSEGV (@0x0) received by PID 80124 (TID 0x7f9033355700) from PID 0; stack trace: ***
[2m[36m(pid=80124)[0m     @     0x7f9032f2e390 (unknown)
[2m[36m(pid=80124)[0m     @     0x7f613514afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80124)[0m     @     0x7f613243e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80124)[0m     @     0x7f6132441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80083)[0m     @     0x7fe6c5437390 (unknown)
[2m[36m(pid=80083)[0m     @     0x7fb7c7643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80083)[0m     @     0x7fb7c493764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80083)[0m     @     0x7fb7c493a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80083)[0m     @     0x7fb7c493ab53 at::TensorIterator::for_each()
[2m[36m(pid=80047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80047)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80047)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80047)[0m *** SIGSEGV (@0x0) received by PID 80047 (TID 0x7f165f7eb700) from PID 0; stack trace: ***
[2m[36m(pid=80047)[0m     @     0x7f165f3c4390 (unknown)
[2m[36m(pid=80047)[0m     @     0x7ee7614a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80047)[0m     @     0x7ee75e79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80047)[0m     @     0x7ee75e797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80115)[0m     @     0x7ef8727a7e11 at::TensorIterator::for_each()
[2m[36m(pid=80115)[0m     @     0x7ef8754c0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80115)[0m     @     0x7ef8754e3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80115)[0m     @     0x7ef872521009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80115)[0m     @     0x7ef87251fc3f at::native::copy_impl()
[2m[36m(pid=80115)[0m     @     0x7ef872520ed4 at::native::copy_()
[2m[36m(pid=80115)[0m     @     0x7ef872c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80042)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80042)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80042)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80042)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80042)[0m *** SIGSEGV (@0x0) received by PID 80042 (TID 0x7fc705010700) from PID 0; stack trace: ***
[2m[36m(pid=80042)[0m     @     0x7fc704be9390 (unknown)
[2m[36m(pid=80042)[0m     @     0x7f9806ddbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80042)[0m     @     0x7f98040cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80042)[0m     @     0x7f98040d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80046)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80046)[0m *** SIGSEGV (@0x0) received by PID 80046 (TID 0x7fe2428a2700) from PID 0; stack trace: ***
[2m[36m(pid=80046)[0m     @     0x7fe24247b390 (unknown)
[2m[36m(pid=80046)[0m     @     0x7fb34469efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80055)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80055)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80055)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80055)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80055)[0m *** SIGSEGV (@0x0) received by PID 80055 (TID 0x7f575a6e7700) from PID 0; stack trace: ***
[2m[36m(pid=80055)[0m     @     0x7f575a2c0390 (unknown)
[2m[36m(pid=80055)[0m     @     0x7f285c4d5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80055)[0m     @     0x7f28597c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80103)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80103)[0m *** SIGSEGV (@0x0) received by PID 80103 (TID 0x7f182b7bd700) from PID 0; stack trace: ***
[2m[36m(pid=80103)[0m     @     0x7f182b396390 (unknown)
[2m[36m(pid=80103)[0m     @     0x7ee92d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80103)[0m     @     0x7ee92a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80103)[0m     @     0x7ee92a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80091)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80091)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80091)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80091)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80091)[0m *** SIGSEGV (@0x0) received by PID 80091 (TID 0x7f5cd40b3700) from PID 0; stack trace: ***
[2m[36m(pid=80091)[0m     @     0x7f5cd3c8c390 (unknown)
[2m[36m(pid=80091)[0m     @     0x7f2dd5e3efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80091)[0m     @     0x7f2dd313264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80091)[0m     @     0x7f2dd3135977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80031)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80031)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80031)[0m *** SIGSEGV (@0x0) received by PID 80031 (TID 0x7f863023e700) from PID 0; stack trace: ***
[2m[36m(pid=80031)[0m     @     0x7f862fe17390 (unknown)
[2m[36m(pid=80031)[0m     @     0x7f573201dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80031)[0m     @     0x7f572f31164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80031)[0m     @     0x7f572f314977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80098)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80098)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80098)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80098)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80098)[0m *** SIGSEGV (@0x0) received by PID 80098 (TID 0x7fe694aa7700) from PID 0; stack trace: ***
[2m[36m(pid=80098)[0m     @     0x7fe694680390 (unknown)
[2m[36m(pid=80098)[0m     @     0x7fb796885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80098)[0m     @     0x7fb793b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80098)[0m     @     0x7fb793b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80025)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80025)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80025)[0m *** SIGSEGV (@0x0) received by PID 80025 (TID 0x7fdc151fc700) from PID 0; stack trace: ***
[2m[36m(pid=80025)[0m     @     0x7fdc14dd5390 (unknown)
[2m[36m(pid=80025)[0m     @     0x7fad16eebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80025)[0m     @     0x7fad141df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80137)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80137)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80137)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80137)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80137)[0m *** SIGSEGV (@0x0) received by PID 80137 (TID 0x7f092b765700) from PID 0; stack trace: ***
[2m[36m(pid=80137)[0m     @     0x7f092b33e390 (unknown)
[2m[36m(pid=80147)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80147)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80147)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80147)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80147)[0m *** SIGSEGV (@0x0) received by PID 80147 (TID 0x7fd020c34700) from PID 0; stack trace: ***
[2m[36m(pid=80147)[0m     @     0x7fd02080d390 (unknown)
[2m[36m(pid=80147)[0m     @     0x7fa1227dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80147)[0m     @     0x7fa11face64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80147)[0m     @     0x7fa11fad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80087)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80087)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80087)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80087)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80087)[0m *** SIGSEGV (@0x0) received by PID 80087 (TID 0x7ffbcb08e700) from PID 0; stack trace: ***
[2m[36m(pid=80102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80102)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80102)[0m *** SIGSEGV (@0x0) received by PID 80102 (TID 0x7f4eb9ad2700) from PID 0; stack trace: ***
[2m[36m(pid=80027)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80027)[0m *** SIGSEGV (@0x0) received by PID 80027 (TID 0x7f0ad6c80700) from PID 0; stack trace: ***
[2m[36m(pid=80027)[0m     @     0x7f0ad6859390 (unknown)
[2m[36m(pid=80027)[0m     @     0x7edbd89e2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80027)[0m     @     0x7edbd5cd664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80027)[0m     @     0x7edbd5cd9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80034)[0m *** SIGSEGV (@0x0) received by PID 80034 (TID 0x7f37cd300700) from PID 0; stack trace: ***
[2m[36m(pid=80034)[0m     @     0x7f37cced9390 (unknown)
[2m[36m(pid=80034)[0m     @     0x7f08cf0f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80034)[0m     @     0x7f08cc3ea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80034)[0m     @     0x7f08cc3ed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80153)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80153)[0m *** SIGSEGV (@0x0) received by PID 80153 (TID 0x7f9b8aa7e700) from PID 0; stack trace: ***
[2m[36m(pid=80153)[0m     @     0x7f9b8a657390 (unknown)
[2m[36m(pid=80153)[0m     @     0x7f6c8c770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80153)[0m     @     0x7f6c89a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80153)[0m     @     0x7f6c89a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80026)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80026)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80026)[0m *** SIGSEGV (@0x0) received by PID 80026 (TID 0x7f68b75bf700) from PID 0; stack trace: ***
[2m[36m(pid=80026)[0m     @     0x7f68b7198390 (unknown)
[2m[36m(pid=80044)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80044)[0m *** SIGSEGV (@0x0) received by PID 80044 (TID 0x7fbe338c2700) from PID 0; stack trace: ***
[2m[36m(pid=80044)[0m     @     0x7fbe3349b390 (unknown)
[2m[36m(pid=80044)[0m     @     0x7f8f354a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80044)[0m     @     0x7f8f3279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80044)[0m     @     0x7f8f32797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80044)[0m     @     0x7f8f32797b53 at::TensorIterator::for_each()
[2m[36m(pid=80133)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80133)[0m *** SIGSEGV (@0x0) received by PID 80133 (TID 0x7efdebf51700) from PID 0; stack trace: ***
[2m[36m(pid=80133)[0m     @     0x7efdebb2a390 (unknown)
[2m[36m(pid=80133)[0m     @     0x7eceedd3ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80133)[0m     @     0x7eceeb03364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80133)[0m     @     0x7eceeb036977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80089)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80089)[0m *** SIGSEGV (@0x0) received by PID 80089 (TID 0x7f9392f8a700) from PID 0; stack trace: ***
[2m[36m(pid=80089)[0m     @     0x7f9392b63390 (unknown)
[2m[36m(pid=80089)[0m     @     0x7f6494d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80089)[0m     @     0x7f649203c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80089)[0m     @     0x7f649203f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80089)[0m     @     0x7f649203fb53 at::TensorIterator::for_each()
[2m[36m(pid=80105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80105)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80105)[0m *** SIGSEGV (@0x0) received by PID 80105 (TID 0x7fbb83a76700) from PID 0; stack trace: ***
[2m[36m(pid=80105)[0m     @     0x7fbb8364f390 (unknown)
[2m[36m(pid=80105)[0m     @     0x7f8c85869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80105)[0m     @     0x7f8c82b5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80105)[0m     @     0x7f8c82b60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80105)[0m     @     0x7f8c82b60b53 at::TensorIterator::for_each()
[2m[36m(pid=80106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80106)[0m *** SIGSEGV (@0x0) received by PID 80106 (TID 0x7f3993507700) from PID 0; stack trace: ***
[2m[36m(pid=80106)[0m     @     0x7f39930e0390 (unknown)
[2m[36m(pid=80106)[0m     @     0x7f0a95309fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80106)[0m     @     0x7f0a925fd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80106)[0m     @     0x7f0a92600977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80106)[0m     @     0x7f0a92600b53 at::TensorIterator::for_each()
[2m[36m(pid=80037)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80037)[0m *** SIGSEGV (@0x0) received by PID 80037 (TID 0x7f9ffa491700) from PID 0; stack trace: ***
[2m[36m(pid=80037)[0m     @     0x7f9ffa06a390 (unknown)
[2m[36m(pid=80037)[0m     @     0x7f70fc27cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80037)[0m     @     0x7f70f957064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80037)[0m     @     0x7f70f9573977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80037)[0m     @     0x7f70f9573b53 at::TensorIterator::for_each()
[2m[36m(pid=80119)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80119)[0m *** SIGSEGV (@0x0) received by PID 80119 (TID 0x7fbbe574f700) from PID 0; stack trace: ***
[2m[36m(pid=80119)[0m     @     0x7fbbe5328390 (unknown)
[2m[36m(pid=80119)[0m     @     0x7f8ce7501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80119)[0m     @     0x7f8ce47f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80119)[0m     @     0x7f8ce47f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80119)[0m     @     0x7f8ce47f8b53 at::TensorIterator::for_each()
[2m[36m(pid=80101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80101)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80101)[0m *** SIGSEGV (@0x0) received by PID 80101 (TID 0x7fadd2b59700) from PID 0; stack trace: ***
[2m[36m(pid=80101)[0m     @     0x7fadd2732390 (unknown)
[2m[36m(pid=80101)[0m     @     0x7f7ed4770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80101)[0m     @     0x7f7ed1a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80101)[0m     @     0x7f7ed1a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80118)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80118)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80118)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80118)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80118)[0m *** SIGSEGV (@0x0) received by PID 80118 (TID 0x7f4c8de50700) from PID 0; stack trace: ***
[2m[36m(pid=80118)[0m     @     0x7f4c8da29390 (unknown)
[2m[36m(pid=80118)[0m     @     0x7f1d8fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80118)[0m     @     0x7f1d8cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80128)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80128)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80128)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80128)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80128)[0m *** SIGSEGV (@0x0) received by PID 80128 (TID 0x7f7251f07700) from PID 0; stack trace: ***
[2m[36m(pid=80062)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80062)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80062)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80062)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80062)[0m *** SIGSEGV (@0x0) received by PID 80062 (TID 0x7f0db02cb700) from PID 0; stack trace: ***
[2m[36m(pid=80062)[0m     @     0x7f0dafea4390 (unknown)
[2m[36m(pid=80062)[0m     @     0x7edeb2082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80062)[0m     @     0x7edeaf37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80062)[0m     @     0x7edeaf379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80086)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80086)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80086)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80086)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80086)[0m *** SIGSEGV (@0x0) received by PID 80086 (TID 0x7f873c157700) from PID 0; stack trace: ***
[2m[36m(pid=80086)[0m     @     0x7f873bd30390 (unknown)
[2m[36m(pid=80086)[0m     @     0x7f583dd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80086)[0m     @     0x7f583b06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80086)[0m     @     0x7f583b063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80077)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80077)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80077)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80077)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80077)[0m *** SIGSEGV (@0x0) received by PID 80077 (TID 0x7fab09ae8700) from PID 0; stack trace: ***
[2m[36m(pid=80077)[0m     @     0x7fab096c1390 (unknown)
[2m[36m(pid=80077)[0m     @     0x7f7c0b8ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80077)[0m     @     0x7f7c08bdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80077)[0m     @     0x7f7c08be2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80138)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=80138)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=80138)[0m *** Aborted at 1604573791 (unix time) try "date -d @1604573791" if you are using GNU date ***
[2m[36m(pid=80138)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80138)[0m *** SIGSEGV (@0x0) received by PID 80138 (TID 0x7fbae9069700) from PID 0; stack trace: ***
[2m[36m(pid=80138)[0m     @     0x7fbae8c42390 (unknown)
[2m[36m(pid=80138)[0m     @     0x7f8beadb2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80150)[0m     @     0x7fa9d8645c3f at::native::copy_impl()
[2m[36m(pid=80150)[0m     @     0x7fa9d8646ed4 at::native::copy_()
[2m[36m(pid=80150)[0m     @     0x7fa9d8d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80150)[0m     @     0x7fa9d8e91148 at::Tensor::copy_()
[2m[36m(pid=80150)[0m     @     0x7fa9daa88989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80136)[0m     @     0x7ef05dcb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80136)[0m     @     0x7ef05dcb2c3f at::native::copy_impl()
[2m[36m(pid=80136)[0m     @     0x7ef05dcb3ed4 at::native::copy_()
[2m[36m(pid=80136)[0m     @     0x7ef05e3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80136)[0m     @     0x7ef05e4fe148 at::Tensor::copy_()
[2m[36m(pid=80116)[0m     @     0x7fcb2004ac3f at::native::copy_impl()
[2m[36m(pid=80116)[0m     @     0x7fcb2004bed4 at::native::copy_()
[2m[36m(pid=80116)[0m     @     0x7fcb2078e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80116)[0m     @     0x7fcb20896148 at::Tensor::copy_()
[2m[36m(pid=80116)[0m     @     0x7fcb2248d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80142)[0m     @     0x7ef665aa2ed4 at::native::copy_()
[2m[36m(pid=80142)[0m     @     0x7ef6661e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80142)[0m     @     0x7ef6662ed148 at::Tensor::copy_()
[2m[36m(pid=80142)[0m     @     0x7ef667ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80142)[0m     @     0x7ef6661e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80104)[0m     @     0x7f1b617e0ed4 at::native::copy_()
[2m[36m(pid=80104)[0m     @     0x7f1b61f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80104)[0m     @     0x7f1b6202b148 at::Tensor::copy_()
[2m[36m(pid=80104)[0m     @     0x7f1b63c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80104)[0m     @     0x7f1b61f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80144)[0m     @     0x7f4840ae0ed4 at::native::copy_()
[2m[36m(pid=80144)[0m     @     0x7f48412235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80144)[0m     @     0x7f484132b148 at::Tensor::copy_()
[2m[36m(pid=80144)[0m     @     0x7f4842f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80144)[0m     @     0x7f48412235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80140)[0m     @     0x7f25cada4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80140)[0m     @     0x7f25cada2c3f at::native::copy_impl()
[2m[36m(pid=80140)[0m     @     0x7f25cada3ed4 at::native::copy_()
[2m[36m(pid=80140)[0m     @     0x7f25cb4e65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80107)[0m     @     0x7f0c7d08c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80107)[0m     @     0x7f0c7d08ac3f at::native::copy_impl()
[2m[36m(pid=80107)[0m     @     0x7f0c7d08bed4 at::native::copy_()
[2m[36m(pid=80107)[0m     @     0x7f0c7d7ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80107)[0m     @     0x7f0c7d8d6148 at::Tensor::copy_()
[2m[36m(pid=80030)[0m     @     0x7faa5753b390 (unknown)
[2m[36m(pid=80030)[0m     @     0x7f7b596b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80030)[0m     @     0x7f7b569a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80030)[0m     @     0x7f7b569a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80030)[0m     @     0x7f7b569a8b53 at::TensorIterator::for_each()
[2m[36m(pid=80149)[0m     @     0x7f1a611bb390 (unknown)
[2m[36m(pid=80149)[0m     @     0x7eeb6332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80149)[0m     @     0x7eeb6062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80149)[0m     @     0x7eeb60623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80149)[0m     @     0x7eeb60623b53 at::TensorIterator::for_each()
[2m[36m(pid=80149)[0m     @     0x7eeb60623e11 at::TensorIterator::for_each()
[2m[36m(pid=80123)[0m     @     0x7f3d8f710390 (unknown)
[2m[36m(pid=80123)[0m     @     0x7f0e91925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80123)[0m     @     0x7f0e8ec1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80123)[0m     @     0x7f0e8ec1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80123)[0m     @     0x7f0e8ec1cb53 at::TensorIterator::for_each()
[2m[36m(pid=80113)[0m     @     0x7f2381f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80113)[0m     @     0x7f2381f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=80113)[0m     @     0x7f2381f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=80113)[0m     @     0x7f2384ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80113)[0m     @     0x7f2384ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80043)[0m     @     0x7fab56797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80043)[0m     @     0x7fab56797b53 at::TensorIterator::for_each()
[2m[36m(pid=80043)[0m     @     0x7fab56797e11 at::TensorIterator::for_each()
[2m[36m(pid=80043)[0m     @     0x7fab594b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80043)[0m     @     0x7fab594d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80146)[0m     @     0x7f8175421ed4 at::native::copy_()
[2m[36m(pid=80146)[0m     @     0x7f8175b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80146)[0m     @     0x7f8175c6c148 at::Tensor::copy_()
[2m[36m(pid=80146)[0m     @     0x7f8177863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:56:32,026	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=80028)[0m     @     0x7f87fbb66fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80028)[0m     @     0x7f87f8e5a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80028)[0m     @     0x7f87f8e5d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80028)[0m     @     0x7f87f8e5db53 at::TensorIterator::for_each()
[2m[36m(pid=80028)[0m     @     0x7f87f8e5de11 at::TensorIterator::for_each()
[2m[36m(pid=80028)[0m     @     0x7f87fbb76c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80079)[0m     @     0x7f73987b8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80079)[0m     @     0x7f73987b8b53 at::TensorIterator::for_each()
[2m[36m(pid=80079)[0m     @     0x7f73987b8e11 at::TensorIterator::for_each()
[2m[36m(pid=80079)[0m     @     0x7f739b4d1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80079)[0m     @     0x7f739b4f4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80131)[0m     @     0x7ef6999f0c3f at::native::copy_impl()
[2m[36m(pid=80131)[0m     @     0x7ef6999f1ed4 at::native::copy_()
[2m[36m(pid=80131)[0m     @     0x7ef69a1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80131)[0m     @     0x7ef69a23c148 at::Tensor::copy_()
[2m[36m(pid=80131)[0m     @     0x7ef69be33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80096)[0m *** SIGSEGV (@0x0) received by PID 80096 (TID 0x7f3d297b6700) from PID 0; stack trace: ***
[2m[36m(pid=80096)[0m     @     0x7f3d2938f390 (unknown)
[2m[36m(pid=80096)[0m     @     0x7f0e2b5b2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80096)[0m     @     0x7f0e288a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80096)[0m     @     0x7f0e288a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80096)[0m     @     0x7f0e288a9b53 at::TensorIterator::for_each()
[2m[36m(pid=80061)[0m     @     0x7f001c9dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80061)[0m     @     0x7f001c9dac3f at::native::copy_impl()
[2m[36m(pid=80061)[0m     @     0x7f001c9dbed4 at::native::copy_()
[2m[36m(pid=80061)[0m     @     0x7f001d11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80061)[0m     @     0x7f001d226148 at::Tensor::copy_()
[2m[36m(pid=80088)[0m     @     0x7faf51e39ed4 at::native::copy_()
[2m[36m(pid=80088)[0m     @     0x7faf5257c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80088)[0m     @     0x7faf52684148 at::Tensor::copy_()
[2m[36m(pid=80088)[0m     @     0x7faf5427b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80088)[0m     @     0x7faf5257c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80109)[0m     @     0x7edd5a510ed4 at::native::copy_()
[2m[36m(pid=80109)[0m     @     0x7edd5ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80109)[0m     @     0x7edd5ad5b148 at::Tensor::copy_()
[2m[36m(pid=80109)[0m     @     0x7edd5c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80110)[0m     @     0x7f0c599d2ed4 at::native::copy_()
[2m[36m(pid=80110)[0m     @     0x7f0c5a1155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80110)[0m     @     0x7f0c5a21d148 at::Tensor::copy_()
[2m[36m(pid=80110)[0m     @     0x7f0c5be14989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80130)[0m     @     0x7fb2092a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80130)[0m     @     0x7fb2092a5b53 at::TensorIterator::for_each()
[2m[36m(pid=80130)[0m     @     0x7fb2092a5e11 at::TensorIterator::for_each()
[2m[36m(pid=80130)[0m     @     0x7fb20bfbec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80053)[0m     @     0x7f100c93ab53 at::TensorIterator::for_each()
[2m[36m(pid=80053)[0m     @     0x7f100c93ae11 at::TensorIterator::for_each()
[2m[36m(pid=80053)[0m     @     0x7f100f653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80053)[0m     @     0x7f100f676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80029)[0m     @     0x7f5c8a441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80029)[0m     @     0x7f5c8a441b53 at::TensorIterator::for_each()
[2m[36m(pid=80052)[0m     @     0x7f432da67b53 at::TensorIterator::for_each()
[2m[36m(pid=80052)[0m     @     0x7f432da67e11 at::TensorIterator::for_each()
[2m[36m(pid=80052)[0m     @     0x7f4330780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80041)[0m     @     0x7f5e323c1b53 at::TensorIterator::for_each()
[2m[36m(pid=80041)[0m     @     0x7f5e323c1e11 at::TensorIterator::for_each()
[2m[36m(pid=80041)[0m     @     0x7f5e350dac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80040)[0m     @     0x7f67dc412b53 at::TensorIterator::for_each()
[2m[36m(pid=80040)[0m     @     0x7f67dc412e11 at::TensorIterator::for_each()
[2m[36m(pid=80040)[0m     @     0x7f67df12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80039)[0m     @     0x7f2c47ce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80039)[0m     @     0x7f2c47ce2b53 at::TensorIterator::for_each()
[2m[36m(pid=80058)[0m     @     0x7ef7e04ff5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80058)[0m     @     0x7ef7e0607148 at::Tensor::copy_()
[2m[36m(pid=80058)[0m     @     0x7ef7e21fe989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80074)[0m     @     0x7f66633085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80074)[0m     @     0x7f6663410148 at::Tensor::copy_()
[2m[36m(pid=80074)[0m     @     0x7f6665007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc667063b53 at::TensorIterator::for_each()
[2m[36m(pid=80093)[0m     @     0x7fc667063e11 at::TensorIterator::for_each()
[2m[36m(pid=80093)[0m     @     0x7fc669d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80108)[0m     @     0x7f1d93620ed4 at::native::copy_()
[2m[36m(pid=80108)[0m     @     0x7f1d93d635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80045)[0m     @     0x7f8ad7ff9b53 at::TensorIterator::for_each()
[2m[36m(pid=80045)[0m     @     0x7f8ad7ff9e11 at::TensorIterator::for_each()
[2m[36m(pid=80045)[0m     @     0x7f8adad12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80056)[0m     @     0x7ff3bd1fd390 (unknown)
[2m[36m(pid=80056)[0m     @     0x7fc4bf32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80056)[0m     @     0x7fc4bc62064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80024)[0m     @     0x7fbffe6cc390 (unknown)
[2m[36m(pid=80024)[0m     @     0x7f9100770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80024)[0m     @     0x7f90fda6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80024)[0m     @     0x7f90fda67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80048)[0m     @     0x7fc1219d5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80048)[0m     @     0x7fc1219d5b53 at::TensorIterator::for_each()
[2m[36m(pid=80033)[0m     @     0x7f208918afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80033)[0m     @     0x7f208647e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80033)[0m     @     0x7f2086481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80134)[0m     @     0x7f1e5394e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80134)[0m     @     0x7f1e53951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80112)[0m     @     0x7fb517ff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80112)[0m     @     0x7fb517ff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80129)[0m     @     0x7f50ec412b53 at::TensorIterator::for_each()
[2m[36m(pid=80129)[0m     @     0x7f50ec412e11 at::TensorIterator::for_each()
[2m[36m(pid=80080)[0m     @     0x7f8423978fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80080)[0m     @     0x7f8420c6c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80080)[0m     @     0x7f8420c6f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80111)[0m     @     0x7fb4c8ad1390 (unknown)
[2m[36m(pid=80111)[0m     @     0x7f85cabf6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80111)[0m     @     0x7f85c7eea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80035)[0m PC: @                0x0 (unknown)
[2m[36m(pid=80035)[0m *** SIGSEGV (@0x0) received by PID 80035 (TID 0x7f9c1e68f700) from PID 0; stack trace: ***
[2m[36m(pid=80036)[0m     @     0x7f20cf951b53 at::TensorIterator::for_each()
[2m[36m(pid=80036)[0m     @     0x7f20cf951e11 at::TensorIterator::for_each()
[2m[36m(pid=80124)[0m     @     0x7f6132441b53 at::TensorIterator::for_each()
[2m[36m(pid=80124)[0m     @     0x7f6132441e11 at::TensorIterator::for_each()
[2m[36m(pid=80124)[0m     @     0x7f613515ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80083)[0m     @     0x7fb7c493ae11 at::TensorIterator::for_each()
[2m[36m(pid=80083)[0m     @     0x7fb7c7653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80083)[0m     @     0x7fb7c7676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80083)[0m     @     0x7fb7c46b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80047)[0m     @     0x7ee75e797b53 at::TensorIterator::for_each()
[2m[36m(pid=80047)[0m     @     0x7ee75e797e11 at::TensorIterator::for_each()
[2m[36m(pid=80115)[0m     @     0x7ef872d6b148 at::Tensor::copy_()
[2m[36m(pid=80115)[0m     @     0x7ef874962989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80115)[0m     @     0x7ef872c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80042)[0m     @     0x7f98040d2b53 at::TensorIterator::for_each()
[2m[36m(pid=80042)[0m     @     0x7f98040d2e11 at::TensorIterator::for_each()
[2m[36m(pid=80042)[0m     @     0x7f9806debc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80042)[0m     @     0x7f9806e0ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80046)[0m     @     0x7fb34199264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80046)[0m     @     0x7fb341995977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80046)[0m     @     0x7fb341995b53 at::TensorIterator::for_each()
[2m[36m(pid=80055)[0m     @     0x7f28597cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80055)[0m     @     0x7f28597ccb53 at::TensorIterator::for_each()
[2m[36m(pid=80055)[0m     @     0x7f28597cce11 at::TensorIterator::for_each()
[2m[36m(pid=80055)[0m     @     0x7f285c4e5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80103)[0m     @     0x7ee92a797b53 at::TensorIterator::for_each()
[2m[36m(pid=80103)[0m     @     0x7ee92a797e11 at::TensorIterator::for_each()
[2m[36m(pid=80103)[0m     @     0x7ee92d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80103)[0m     @     0x7ee92d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80103)[0m     @     0x7ee92a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80091)[0m     @     0x7f2dd3135b53 at::TensorIterator::for_each()
[2m[36m(pid=80091)[0m     @     0x7f2dd3135e11 at::TensorIterator::for_each()
[2m[36m(pid=80091)[0m     @     0x7f2dd5e4ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80091)[0m     @     0x7f2dd5e71cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80031)[0m     @     0x7f572f314b53 at::TensorIterator::for_each()
[2m[36m(pid=80031)[0m     @     0x7f572f314e11 at::TensorIterator::for_each()
[2m[36m(pid=80031)[0m     @     0x7f573202dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80031)[0m     @     0x7f5732050cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80098)[0m     @     0x7fb793b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=80098)[0m     @     0x7fb793b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=80098)[0m     @     0x7fb796895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80098)[0m     @     0x7fb7968b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80025)[0m     @     0x7fad141e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80025)[0m     @     0x7fad141e2b53 at::TensorIterator::for_each()
[2m[36m(pid=80137)[0m     @     0x7eda2d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80137)[0m     @     0x7eda2a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80137)[0m     @     0x7eda2a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80137)[0m     @     0x7eda2a797b53 at::TensorIterator::for_each()
[2m[36m(pid=80147)[0m     @     0x7fa11fad1b53 at::TensorIterator::for_each()
[2m[36m(pid=80147)[0m     @     0x7fa11fad1e11 at::TensorIterator::for_each()
[2m[36m(pid=80147)[0m     @     0x7fa1227eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80147)[0m     @     0x7fa12280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80087)[0m     @     0x7ffbcac67390 (unknown)
[2m[36m(pid=80087)[0m     @     0x7fccccc98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80087)[0m     @     0x7fccc9f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80087)[0m     @     0x7fccc9f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80102)[0m     @     0x7f4eb96ab390 (unknown)
[2m[36m(pid=80102)[0m     @     0x7f1fbb8abfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80102)[0m     @     0x7f1fb8b9f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80027)[0m     @     0x7edbd5cd9b53 at::TensorIterator::for_each()
[2m[36m(pid=80027)[0m     @     0x7edbd5cd9e11 at::TensorIterator::for_each()
[2m[36m(pid=80027)[0m     @     0x7edbd89f2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80027)[0m     @     0x7edbd8a15cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80034)[0m     @     0x7f08cc3edb53 at::TensorIterator::for_each()
[2m[36m(pid=80034)[0m     @     0x7f08cc3ede11 at::TensorIterator::for_each()
[2m[36m(pid=80034)[0m     @     0x7f08cf106c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80034)[0m     @     0x7f08cf129cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80153)[0m     @     0x7f6c89a67b53 at::TensorIterator::for_each()
[2m[36m(pid=80153)[0m     @     0x7f6c89a67e11 at::TensorIterator::for_each()
[2m[36m(pid=80153)[0m     @     0x7f6c8c780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80153)[0m     @     0x7f6c8c7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80026)[0m     @     0x7f39b939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80026)[0m     @     0x7f39b668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80026)[0m     @     0x7f39b6692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80026)[0m     @     0x7f39b6692b53 at::TensorIterator::for_each()
[2m[36m(pid=80044)[0m     @     0x7f8f32797e11 at::TensorIterator::for_each()
[2m[36m(pid=80044)[0m     @     0x7f8f354b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80044)[0m     @     0x7f8f354d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80133)[0m     @     0x7eceeb036b53 at::TensorIterator::for_each()
[2m[36m(pid=80133)[0m     @     0x7eceeb036e11 at::TensorIterator::for_each()
[2m[36m(pid=80089)[0m     @     0x7f649203fe11 at::TensorIterator::for_each()
[2m[36m(pid=80089)[0m     @     0x7f6494d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80089)[0m     @     0x7f6494d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80105)[0m     @     0x7f8c82b60e11 at::TensorIterator::for_each()
[2m[36m(pid=80105)[0m     @     0x7f8c85879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80105)[0m     @     0x7f8c8589ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80106)[0m     @     0x7f0a92600e11 at::TensorIterator::for_each()
[2m[36m(pid=80106)[0m     @     0x7f0a95319c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80106)[0m     @     0x7f0a9533ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80037)[0m     @     0x7f70f9573e11 at::TensorIterator::for_each()
[2m[36m(pid=80037)[0m     @     0x7f70fc28cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80037)[0m     @     0x7f70fc2afcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80119)[0m     @     0x7f8ce47f8e11 at::TensorIterator::for_each()
[2m[36m(pid=80119)[0m     @     0x7f8ce7511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80119)[0m     @     0x7f8ce7534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80101)[0m     @     0x7f7ed1a67b53 at::TensorIterator::for_each()
[2m[36m(pid=80101)[0m     @     0x7f7ed1a67e11 at::TensorIterator::for_each()
[2m[36m(pid=80118)[0m     @     0x7f1d8cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80118)[0m     @     0x7f1d8cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=80128)[0m     @     0x7f7251ae0390 (unknown)
[2m[36m(pid=80128)[0m     @     0x7f4353c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80128)[0m     @     0x7f4350f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80062)[0m     @     0x7edeaf379b53 at::TensorIterator::for_each()
[2m[36m(pid=80062)[0m     @     0x7edeaf379e11 at::TensorIterator::for_each()
[2m[36m(pid=80086)[0m     @     0x7f583b063b53 at::TensorIterator::for_each()
[2m[36m(pid=80086)[0m     @     0x7f583b063e11 at::TensorIterator::for_each()
[2m[36m(pid=80077)[0m     @     0x7f7c08be2b53 at::TensorIterator::for_each()
[2m[36m(pid=80077)[0m     @     0x7f7c08be2e11 at::TensorIterator::for_each()
[2m[36m(pid=80138)[0m     @     0x7f8be80a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80138)[0m     @     0x7f8be80a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80150)[0m     @     0x7fa9d8d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80150)[0m     @     0x7fa9d8e91148 at::Tensor::copy_()
[2m[36m(pid=80150)[0m     @     0x7fa9df147bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80150)[0m     @     0x5606916e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80150)[0m     @     0x56069163eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80150)[0m     @     0x5606916c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80150)[0m     @     0x5606916caa20 method_vectorcall
[2m[36m(pid=80150)[0m     @     0x56069163ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80150)[0m     @     0x5606916c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80150)[0m     @     0x5606916ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80150)[0m     @     0x56069163f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80150)[0m     @     0x5606916c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80150)[0m     @     0x5606916ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80150)[0m     @     0x56069163f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80150)[0m     @     0x5606916c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x7ef0600f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80136)[0m     @     0x7ef05e3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80116)[0m     @     0x7fcb2078e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80116)[0m     @     0x7fcb20896148 at::Tensor::copy_()
[2m[36m(pid=80116)[0m     @     0x7fcb26b4cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80116)[0m     @     0x55d759680fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80116)[0m     @     0x55d7595dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80116)[0m     @     0x55d759666baf _PyEval_EvalCodeWithName
[2m[36m(pid=80116)[0m     @     0x55d759667a20 method_vectorcall
[2m[36m(pid=80116)[0m     @     0x55d7595dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80116)[0m     @     0x55d759666baf _PyEval_EvalCodeWithName
[2m[36m(pid=80142)[0m     @     0x7ef6662ed148 at::Tensor::copy_()
[2m[36m(pid=80142)[0m     @     0x7ef66c5a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80142)[0m     @     0x55cee2e02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80142)[0m     @     0x55cee2d5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80142)[0m     @     0x55cee2de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80142)[0m     @     0x55cee2de9a20 method_vectorcall
[2m[36m(pid=80142)[0m     @     0x55cee2d5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80142)[0m     @     0x55cee2de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80142)[0m     @     0x55cee2de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80142)[0m     @     0x55cee2d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80142)[0m     @     0x55cee2de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80142)[0m     @     0x55cee2de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80142)[0m     @     0x55cee2d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80142)[0m     @     0x55cee2de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80142)[0m     @     0x55cee2de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80142)[0m     @     0x55cee2d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80142)[0m     @     0x55cee2de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80104)[0m     @     0x7f1b6202b148 at::Tensor::copy_()
[2m[36m(pid=80104)[0m     @     0x7f1b682e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80104)[0m     @     0x55a1f91d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80104)[0m     @     0x55a1f9130b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80104)[0m     @     0x55a1f91bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80104)[0m     @     0x55a1f91bca20 method_vectorcall
[2m[36m(pid=80104)[0m     @     0x55a1f9130bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80104)[0m     @     0x55a1f91bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80104)[0m     @     0x55a1f91bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80104)[0m     @     0x55a1f9131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80104)[0m     @     0x55a1f91bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80104)[0m     @     0x55a1f91bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80104)[0m     @     0x55a1f9131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80104)[0m     @     0x55a1f91bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80104)[0m     @     0x55a1f91bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80104)[0m     @     0x55a1f9131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80104)[0m     @     0x55a1f91bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80144)[0m     @     0x7f484132b148 at::Tensor::copy_()
[2m[36m(pid=80144)[0m     @     0x7f48475e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80144)[0m     @     0x559920961fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80144)[0m     @     0x5599208bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80144)[0m     @     0x559920947baf _PyEval_EvalCodeWithName
[2m[36m(pid=80144)[0m     @     0x559920948a20 method_vectorcall
[2m[36m(pid=80144)[0m     @     0x5599208bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80144)[0m     @     0x559920947baf _PyEval_EvalCodeWithName
[2m[36m(pid=80144)[0m     @     0x559920948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80144)[0m     @     0x5599208bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80144)[0m     @     0x559920947baf _PyEval_EvalCodeWithName
[2m[36m(pid=80144)[0m     @     0x559920948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80144)[0m     @     0x5599208bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80144)[0m     @     0x559920947baf _PyEval_EvalCodeWithName
[2m[36m(pid=80144)[0m     @     0x559920948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80144)[0m     @     0x5599208bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80144)[0m     @     0x559920947baf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x7f25cb5ee148 at::Tensor::copy_()
[2m[36m(pid=80140)[0m     @     0x7f25cd1e5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80140)[0m     @     0x7f25cb4e65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80140)[0m     @     0x7f25cb5ee148 at::Tensor::copy_()
[2m[36m(pid=80107)[0m     @     0x7f0c7f4cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80107)[0m     @     0x7f0c7d7ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80107)[0m     @     0x7f0c7d8d6148 at::Tensor::copy_()
[2m[36m(pid=80107)[0m     @     0x7f0c83b8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80107)[0m     @     0x55bad6757fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80107)[0m     @     0x55bad66b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80107)[0m     @     0x55bad673dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80107)[0m     @     0x55bad673ea20 method_vectorcall
[2m[36m(pid=80107)[0m     @     0x55bad66b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80107)[0m     @     0x55bad673dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80107)[0m     @     0x55bad673e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80107)[0m     @     0x55bad66b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80107)[0m     @     0x55bad673dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80107)[0m     @     0x55bad673e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80107)[0m     @     0x55bad66b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80107)[0m     @     0x55bad673dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80107)[0m     @     0x55bad673e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80107)[0m     @     0x55bad66b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80107)[0m     @     0x55bad673dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x7f7b569a8e11 at::TensorIterator::for_each()
[2m[36m(pid=80030)[0m     @     0x7f7b596c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80030)[0m     @     0x7f7b596e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80030)[0m     @     0x7f7b56722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80030)[0m     @     0x7f7b56720c3f at::native::copy_impl()
[2m[36m(pid=80149)[0m     @     0x7eeb6333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80149)[0m     @     0x7eeb6335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80149)[0m     @     0x7eeb6039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80149)[0m     @     0x7eeb6039bc3f at::native::copy_impl()
[2m[36m(pid=80149)[0m     @     0x7eeb6039ced4 at::native::copy_()
[2m[36m(pid=80123)[0m     @     0x7f0e8ec1ce11 at::TensorIterator::for_each()
[2m[36m(pid=80123)[0m     @     0x7f0e91935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80123)[0m     @     0x7f0e91958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80123)[0m     @     0x7f0e8e996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80123)[0m     @     0x7f0e8e994c3f at::native::copy_impl()
[2m[36m(pid=80123)[0m     @     0x7f0e8e995ed4 at::native::copy_()
[2m[36m(pid=80113)[0m     @     0x7f2381d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80113)[0m     @     0x7f2381d07c3f at::native::copy_impl()
[2m[36m(pid=80113)[0m     @     0x7f2381d08ed4 at::native::copy_()
[2m[36m(pid=80113)[0m     @     0x7f238244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80043)[0m     @     0x7fab56511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80043)[0m     @     0x7fab5650fc3f at::native::copy_impl()
[2m[36m(pid=80043)[0m     @     0x7fab56510ed4 at::native::copy_()
[2m[36m(pid=80043)[0m     @     0x7fab56c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80146)[0m     @     0x7f8175b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80146)[0m     @     0x7f8175c6c148 at::Tensor::copy_()
[2m[36m(pid=80146)[0m     @     0x7f817bf22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80146)[0m     @     0x555589040fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80146)[0m     @     0x555588f9bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80146)[0m     @     0x555589026baf _PyEval_EvalCodeWithName
[2m[36m(pid=80146)[0m     @     0x555589027a20 method_vectorcall
[2m[36m(pid=80146)[0m     @     0x555588f9bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80146)[0m     @     0x555589026baf _PyEval_EvalCodeWithName
[2m[36m(pid=80146)[0m     @     0x555589027643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80146)[0m     @     0x555588f9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80146)[0m     @     0x555589026baf _PyEval_EvalCodeWithName
[2m[36m(pid=80146)[0m     @     0x555589027643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80146)[0m     @     0x555588f9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80146)[0m     @     0x555589026baf _PyEval_EvalCodeWithName
[2m[36m(pid=80146)[0m     @     0x555589027643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80146)[0m     @     0x555588f9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80146)[0m     @     0x555589026baf _PyEval_EvalCodeWithName
[2m[36m(pid=80028)[0m     @     0x7f87fbb99cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80028)[0m     @     0x7f87f8bd7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80028)[0m     @     0x7f87f8bd5c3f at::native::copy_impl()
[2m[36m(pid=80028)[0m     @     0x7f87f8bd6ed4 at::native::copy_()
[2m[36m(pid=80028)[0m     @     0x7f87f93195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80079)[0m     @     0x7f7398532009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80079)[0m     @     0x7f7398530c3f at::native::copy_impl()
[2m[36m(pid=80079)[0m     @     0x7f7398531ed4 at::native::copy_()
[2m[36m(pid=80079)[0m     @     0x7f7398c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80131)[0m     @     0x7ef69a1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80131)[0m     @     0x7ef69a23c148 at::Tensor::copy_()
[2m[36m(pid=80131)[0m     @     0x7ef6a04f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80131)[0m     @     0x55cbfec5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80131)[0m     @     0x55cbfebb6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80131)[0m     @     0x55cbfec41baf _PyEval_EvalCodeWithName
[2m[36m(pid=80131)[0m     @     0x55cbfec42a20 method_vectorcall
[2m[36m(pid=80131)[0m     @     0x55cbfebb6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80131)[0m     @     0x55cbfec41baf _PyEval_EvalCodeWithName
[2m[36m(pid=80131)[0m     @     0x55cbfec42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80131)[0m     @     0x55cbfebb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80131)[0m     @     0x55cbfec41baf _PyEval_EvalCodeWithName
[2m[36m(pid=80131)[0m     @     0x55cbfec42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80131)[0m     @     0x55cbfebb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80131)[0m     @     0x55cbfec41baf _PyEval_EvalCodeWithName
[2m[36m(pid=80131)[0m     @     0x55cbfec42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80131)[0m     @     0x55cbfebb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80131)[0m     @     0x55cbfec41baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x7f0e288a9e11 at::TensorIterator::for_each()
[2m[36m(pid=80096)[0m     @     0x7f0e2b5c2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80096)[0m     @     0x7f0e2b5e5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80096)[0m     @     0x7f0e28623009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80096)[0m     @     0x7f0e28621c3f at::native::copy_impl()
[2m[36m(pid=80061)[0m     @     0x7f001ee1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80061)[0m     @     0x7f001d11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80061)[0m     @     0x7f001d226148 at::Tensor::copy_()
[2m[36m(pid=80061)[0m     @     0x7f00234dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80061)[0m     @     0x556e11b68fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80061)[0m     @     0x556e11ac3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80061)[0m     @     0x556e11b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80061)[0m     @     0x556e11b4fa20 method_vectorcall
[2m[36m(pid=80061)[0m     @     0x556e11ac3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80061)[0m     @     0x556e11b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80061)[0m     @     0x556e11b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80061)[0m     @     0x556e11ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80061)[0m     @     0x556e11b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80061)[0m     @     0x556e11b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80061)[0m     @     0x556e11ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80061)[0m     @     0x556e11b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80061)[0m     @     0x556e11b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80061)[0m     @     0x556e11ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80061)[0m     @     0x556e11b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80088)[0m     @     0x7faf52684148 at::Tensor::copy_()
[2m[36m(pid=80088)[0m     @     0x7faf5893abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80088)[0m     @     0x558ae9745fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80088)[0m     @     0x558ae96a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80088)[0m     @     0x558ae972bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80088)[0m     @     0x558ae972ca20 method_vectorcall
[2m[36m(pid=80088)[0m     @     0x558ae96a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80088)[0m     @     0x558ae972bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80088)[0m     @     0x558ae972c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80088)[0m     @     0x558ae96a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80088)[0m     @     0x558ae972bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80088)[0m     @     0x558ae972c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80088)[0m     @     0x558ae96a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80088)[0m     @     0x558ae972bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80088)[0m     @     0x558ae972c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80088)[0m     @     0x558ae96a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80088)[0m     @     0x558ae972bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80109)[0m     @     0x7edd5ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80109)[0m     @     0x7edd5ad5b148 at::Tensor::copy_()
[2m[36m(pid=80109)[0m     @     0x7edd61011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80109)[0m     @     0x55d71a9ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80109)[0m     @     0x55d71a946b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80109)[0m     @     0x55d71a9d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80109)[0m     @     0x55d71a9d2a20 method_vectorcall
[2m[36m(pid=80109)[0m     @     0x55d71a946bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80109)[0m     @     0x55d71a9d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80109)[0m     @     0x55d71a9d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80109)[0m     @     0x55d71a947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80109)[0m     @     0x55d71a9d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80109)[0m     @     0x55d71a9d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80109)[0m     @     0x55d71a947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80109)[0m     @     0x55d71a9d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80109)[0m     @     0x55d71a9d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80109)[0m     @     0x55d71a947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80109)[0m     @     0x55d71a9d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80110)[0m     @     0x7f0c5a1155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80110)[0m     @     0x7f0c5a21d148 at::Tensor::copy_()
[2m[36m(pid=80110)[0m     @     0x7f0c604d3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80110)[0m     @     0x555b986ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80110)[0m     @     0x555b98647b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80110)[0m     @     0x555b986d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80110)[0m     @     0x555b986d3a20 method_vectorcall
[2m[36m(pid=80110)[0m     @     0x555b98647bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80110)[0m     @     0x555b986d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80110)[0m     @     0x555b986d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80110)[0m     @     0x555b98648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80110)[0m     @     0x555b986d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80110)[0m     @     0x555b986d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80110)[0m     @     0x555b98648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80110)[0m     @     0x555b986d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80110)[0m     @     0x555b986d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80110)[0m     @     0x555b98648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80110)[0m     @     0x555b986d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x7fb20bfe1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80130)[0m     @     0x7fb20901f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80130)[0m     @     0x7fb20901dc3f at::native::copy_impl()
[2m[36m(pid=80130)[0m     @     0x7fb20901eed4 at::native::copy_()
[2m[36m(pid=80053)[0m     @     0x7f100c6b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80053)[0m     @     0x7f100c6b2c3f at::native::copy_impl()
[2m[36m(pid=80053)[0m     @     0x7f100c6b3ed4 at::native::copy_()
[2m[36m(pid=80053)[0m     @     0x7f100cdf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80029)[0m     @     0x7f5c8a441e11 at::TensorIterator::for_each()
[2m[36m(pid=80029)[0m     @     0x7f5c8d15ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80029)[0m     @     0x7f5c8d17dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80029)[0m     @     0x7f5c8a1bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80029)[0m     @     0x7f5c8a1b9c3f at::native::copy_impl()
[2m[36m(pid=80052)[0m     @     0x7f43307a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80052)[0m     @     0x7f432d7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80052)[0m     @     0x7f432d7dfc3f at::native::copy_impl()
[2m[36m(pid=80052)[0m     @     0x7f432d7e0ed4 at::native::copy_()
[2m[36m(pid=80041)[0m     @     0x7f5e350fdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80041)[0m     @     0x7f5e3213b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80041)[0m     @     0x7f5e32139c3f at::native::copy_impl()
[2m[36m(pid=80041)[0m     @     0x7f5e3213aed4 at::native::copy_()
[2m[36m(pid=80040)[0m     @     0x7f67df14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80040)[0m     @     0x7f67dc18c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80040)[0m     @     0x7f67dc18ac3f at::native::copy_impl()
[2m[36m(pid=80040)[0m     @     0x7f67dc18bed4 at::native::copy_()
[2m[36m(pid=80039)[0m     @     0x7f2c47ce2e11 at::TensorIterator::for_each()
[2m[36m(pid=80039)[0m     @     0x7f2c4a9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80039)[0m     @     0x7f2c4aa1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80039)[0m     @     0x7f2c47a5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80039)[0m     @     0x7f2c47a5ac3f at::native::copy_impl()
[2m[36m(pid=80039)[0m     @     0x7f2c47a5bed4 at::native::copy_()
[2m[36m(pid=80058)[0m     @     0x7ef7e04ff5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80058)[0m     @     0x7ef7e0607148 at::Tensor::copy_()
[2m[36m(pid=80058)[0m     @     0x7ef7e68bdbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80058)[0m     @     0x5590b7b73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80058)[0m     @     0x5590b7aceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80058)[0m     @     0x5590b7b59baf _PyEval_EvalCodeWithName
[2m[36m(pid=80058)[0m     @     0x5590b7b5aa20 method_vectorcall
[2m[36m(pid=80058)[0m     @     0x5590b7acebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80058)[0m     @     0x5590b7b59baf _PyEval_EvalCodeWithName
[2m[36m(pid=80058)[0m     @     0x5590b7b5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80058)[0m     @     0x5590b7acf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80058)[0m     @     0x5590b7b59baf _PyEval_EvalCodeWithName
[2m[36m(pid=80058)[0m     @     0x5590b7b5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80058)[0m     @     0x5590b7acf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80058)[0m     @     0x5590b7b59baf _PyEval_EvalCodeWithName
[2m[36m(pid=80058)[0m     @     0x5590b7b5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80058)[0m     @     0x5590b7acf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80058)[0m     @     0x5590b7b59baf _PyEval_EvalCodeWithName
[2m[36m(pid=80074)[0m     @     0x7f66633085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80074)[0m     @     0x7f6663410148 at::Tensor::copy_()
[2m[36m(pid=80074)[0m     @     0x7f66696c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80074)[0m     @     0x558386766fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80074)[0m     @     0x5583866c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80074)[0m     @     0x55838674cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80074)[0m     @     0x55838674da20 method_vectorcall
[2m[36m(pid=80074)[0m     @     0x5583866c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80074)[0m     @     0x55838674cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80074)[0m     @     0x55838674d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80074)[0m     @     0x5583866c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80074)[0m     @     0x55838674cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80074)[0m     @     0x55838674d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80074)[0m     @     0x5583866c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80074)[0m     @     0x55838674cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80074)[0m     @     0x55838674d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80074)[0m     @     0x5583866c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80074)[0m     @     0x55838674cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80093)[0m     @     0x7fc669d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80093)[0m     @     0x7fc666ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80093)[0m     @     0x7fc666ddbc3f at::native::copy_impl()
[2m[36m(pid=80093)[0m     @     0x7fc666ddced4 at::native::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc66751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80108)[0m     @     0x7f1d93e6b148 at::Tensor::copy_()
[2m[36m(pid=80108)[0m     @     0x7f1d95a62989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80108)[0m     @     0x7f1d93d635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80108)[0m     @     0x7f1d93e6b148 at::Tensor::copy_()
[2m[36m(pid=80108)[0m     @     0x7f1d9a121bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80108)[0m     @     0x55674938bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80108)[0m     @     0x5567492e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80108)[0m     @     0x556749371baf _PyEval_EvalCodeWithName
[2m[36m(pid=80108)[0m     @     0x556749372a20 method_vectorcall
[2m[36m(pid=80045)[0m     @     0x7f8adad35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80045)[0m     @     0x7f8ad7d73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80045)[0m     @     0x7f8ad7d71c3f at::native::copy_impl()
[2m[36m(pid=80045)[0m     @     0x7f8ad7d72ed4 at::native::copy_()
[2m[36m(pid=80045)[0m     @     0x7f8ad84b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80056)[0m     @     0x7fc4bc623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80056)[0m     @     0x7fc4bc623b53 at::TensorIterator::for_each()
[2m[36m(pid=80056)[0m     @     0x7fc4bc623e11 at::TensorIterator::for_each()
[2m[36m(pid=80056)[0m     @     0x7fc4bf33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80056)[0m     @     0x7fc4bf35fcfd at::native::(anonymous namespace)::copy_kernel()
2020-11-05 10:56:32,049	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=80024)[0m     @     0x7f90fda67b53 at::TensorIterator::for_each()
[2m[36m(pid=80024)[0m     @     0x7f90fda67e11 at::TensorIterator::for_each()
[2m[36m(pid=80024)[0m     @     0x7f9100780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80024)[0m     @     0x7f91007a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80024)[0m     @     0x7f90fd7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80024)[0m     @     0x7f90fd7dfc3f at::native::copy_impl()
[2m[36m(pid=80048)[0m     @     0x7fc1219d5e11 at::TensorIterator::for_each()
[2m[36m(pid=80048)[0m     @     0x7fc1246eec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80048)[0m     @     0x7fc124711cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80048)[0m     @     0x7fc12174f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80048)[0m     @     0x7fc12174dc3f at::native::copy_impl()
[2m[36m(pid=80048)[0m     @     0x7fc12174eed4 at::native::copy_()
[2m[36m(pid=80033)[0m     @     0x7f2086481b53 at::TensorIterator::for_each()
[2m[36m(pid=80033)[0m     @     0x7f2086481e11 at::TensorIterator::for_each()
[2m[36m(pid=80033)[0m     @     0x7f208919ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80033)[0m     @     0x7f20891bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80033)[0m     @     0x7f20861fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80134)[0m     @     0x7f1e53951b53 at::TensorIterator::for_each()
[2m[36m(pid=80134)[0m     @     0x7f1e53951e11 at::TensorIterator::for_each()
[2m[36m(pid=80134)[0m     @     0x7f1e5666ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80134)[0m     @     0x7f1e5668dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80134)[0m     @     0x7f1e536cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80134)[0m     @     0x7f1e536c9c3f at::native::copy_impl()
[2m[36m(pid=80112)[0m     @     0x7fb517ff9b53 at::TensorIterator::for_each()
[2m[36m(pid=80112)[0m     @     0x7fb517ff9e11 at::TensorIterator::for_each()
[2m[36m(pid=80112)[0m     @     0x7fb51ad12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80112)[0m     @     0x7fb51ad35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80129)[0m     @     0x7f50ef12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80129)[0m     @     0x7f50ef14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80129)[0m     @     0x7f50ec18c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80129)[0m     @     0x7f50ec18ac3f at::native::copy_impl()
[2m[36m(pid=80129)[0m     @     0x7f50ec18bed4 at::native::copy_()
[2m[36m(pid=80129)[0m     @     0x7f50ec8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80080)[0m     @     0x7f8420c6fb53 at::TensorIterator::for_each()
[2m[36m(pid=80080)[0m     @     0x7f8420c6fe11 at::TensorIterator::for_each()
[2m[36m(pid=80080)[0m     @     0x7f8423988c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80080)[0m     @     0x7f84239abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80080)[0m     @     0x7f84209e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80111)[0m     @     0x7f85c7eed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80111)[0m     @     0x7f85c7eedb53 at::TensorIterator::for_each()
[2m[36m(pid=80111)[0m     @     0x7f85c7eede11 at::TensorIterator::for_each()
[2m[36m(pid=80035)[0m     @     0x7f9c1e268390 (unknown)
[2m[36m(pid=80035)[0m     @     0x7f6d203b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=80035)[0m     @     0x7f6d1d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=80035)[0m     @     0x7f6d1d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80035)[0m     @     0x7f6d1d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=80036)[0m     @     0x7f20d266ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80036)[0m     @     0x7f20d268dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80036)[0m     @     0x7f20cf6cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80036)[0m     @     0x7f20cf6c9c3f at::native::copy_impl()
[2m[36m(pid=80036)[0m     @     0x7f20cf6caed4 at::native::copy_()
[2m[36m(pid=80036)[0m     @     0x7f20cfe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80124)[0m     @     0x7f613517dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80124)[0m     @     0x7f61321bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80124)[0m     @     0x7f61321b9c3f at::native::copy_impl()
[2m[36m(pid=80124)[0m     @     0x7f61321baed4 at::native::copy_()
[2m[36m(pid=80124)[0m     @     0x7f61328fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80083)[0m     @     0x7fb7c46b2c3f at::native::copy_impl()
[2m[36m(pid=80083)[0m     @     0x7fb7c46b3ed4 at::native::copy_()
[2m[36m(pid=80083)[0m     @     0x7fb7c4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80083)[0m     @     0x7fb7c4efe148 at::Tensor::copy_()
[2m[36m(pid=80083)[0m     @     0x7fb7c6af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80047)[0m     @     0x7ee7614b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80047)[0m     @     0x7ee7614d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80047)[0m     @     0x7ee75e511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80047)[0m     @     0x7ee75e50fc3f at::native::copy_impl()
[2m[36m(pid=80047)[0m     @     0x7ee75e510ed4 at::native::copy_()
[2m[36m(pid=80047)[0m     @     0x7ee75ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80115)[0m     @     0x7ef872d6b148 at::Tensor::copy_()
[2m[36m(pid=80115)[0m     @     0x7ef879021bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80115)[0m     @     0x55fda638efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80115)[0m     @     0x55fda62e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80115)[0m     @     0x55fda6374baf _PyEval_EvalCodeWithName
[2m[36m(pid=80115)[0m     @     0x55fda6375a20 method_vectorcall
[2m[36m(pid=80115)[0m     @     0x55fda62e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80115)[0m     @     0x55fda6374baf _PyEval_EvalCodeWithName
[2m[36m(pid=80115)[0m     @     0x55fda6375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80115)[0m     @     0x55fda62ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80115)[0m     @     0x55fda6374baf _PyEval_EvalCodeWithName
[2m[36m(pid=80115)[0m     @     0x55fda6375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80115)[0m     @     0x55fda62ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80115)[0m     @     0x55fda6374baf _PyEval_EvalCodeWithName
[2m[36m(pid=80115)[0m     @     0x55fda6375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80115)[0m     @     0x55fda62ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80115)[0m     @     0x55fda6374baf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x7f9803e4c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80042)[0m     @     0x7f9803e4ac3f at::native::copy_impl()
[2m[36m(pid=80042)[0m     @     0x7f9803e4bed4 at::native::copy_()
[2m[36m(pid=80042)[0m     @     0x7f980458e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80046)[0m     @     0x7fb341995e11 at::TensorIterator::for_each()
[2m[36m(pid=80046)[0m     @     0x7fb3446aec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80046)[0m     @     0x7fb3446d1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80046)[0m     @     0x7fb34170f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80046)[0m     @     0x7fb34170dc3f at::native::copy_impl()
[2m[36m(pid=80055)[0m     @     0x7f285c508cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80055)[0m     @     0x7f2859546009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80055)[0m     @     0x7f2859544c3f at::native::copy_impl()
[2m[36m(pid=80055)[0m     @     0x7f2859545ed4 at::native::copy_()
[2m[36m(pid=80103)[0m     @     0x7ee92a50fc3f at::native::copy_impl()
[2m[36m(pid=80103)[0m     @     0x7ee92a510ed4 at::native::copy_()
[2m[36m(pid=80103)[0m     @     0x7ee92ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80091)[0m     @     0x7f2dd2eaf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80091)[0m     @     0x7f2dd2eadc3f at::native::copy_impl()
[2m[36m(pid=80091)[0m     @     0x7f2dd2eaeed4 at::native::copy_()
[2m[36m(pid=80091)[0m     @     0x7f2dd35f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80031)[0m     @     0x7f572f08e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80031)[0m     @     0x7f572f08cc3f at::native::copy_impl()
[2m[36m(pid=80031)[0m     @     0x7f572f08ded4 at::native::copy_()
[2m[36m(pid=80031)[0m     @     0x7f572f7d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80098)[0m     @     0x7fb7938f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80098)[0m     @     0x7fb7938f4c3f at::native::copy_impl()
[2m[36m(pid=80098)[0m     @     0x7fb7938f5ed4 at::native::copy_()
[2m[36m(pid=80098)[0m     @     0x7fb7940385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80025)[0m     @     0x7fad141e2e11 at::TensorIterator::for_each()
[2m[36m(pid=80025)[0m     @     0x7fad16efbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80025)[0m     @     0x7fad16f1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80025)[0m     @     0x7fad13f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80025)[0m     @     0x7fad13f5ac3f at::native::copy_impl()
[2m[36m(pid=80137)[0m     @     0x7eda2a797e11 at::TensorIterator::for_each()
[2m[36m(pid=80137)[0m     @     0x7eda2d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80137)[0m     @     0x7eda2d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80137)[0m     @     0x7eda2a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80137)[0m     @     0x7eda2a50fc3f at::native::copy_impl()
[2m[36m(pid=80147)[0m     @     0x7fa11f84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80147)[0m     @     0x7fa11f849c3f at::native::copy_impl()
[2m[36m(pid=80147)[0m     @     0x7fa11f84aed4 at::native::copy_()
[2m[36m(pid=80147)[0m     @     0x7fa11ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80087)[0m     @     0x7fccc9f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=80087)[0m     @     0x7fccc9f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=80087)[0m     @     0x7fccccca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80087)[0m     @     0x7fccccccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80087)[0m     @     0x7fccc9d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80102)[0m     @     0x7f1fb8ba2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80102)[0m     @     0x7f1fb8ba2b53 at::TensorIterator::for_each()
[2m[36m(pid=80027)[0m     @     0x7edbd5a53009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80027)[0m     @     0x7edbd5a51c3f at::native::copy_impl()
[2m[36m(pid=80027)[0m     @     0x7edbd5a52ed4 at::native::copy_()
[2m[36m(pid=80027)[0m     @     0x7edbd61955cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80027)[0m     @     0x7edbd629d148 at::Tensor::copy_()
[2m[36m(pid=80027)[0m     @     0x7edbd7e94989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80034)[0m     @     0x7f08cc167009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80034)[0m     @     0x7f08cc165c3f at::native::copy_impl()
[2m[36m(pid=80034)[0m     @     0x7f08cc166ed4 at::native::copy_()
[2m[36m(pid=80034)[0m     @     0x7f08cc8a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80034)[0m     @     0x7f08cc9b1148 at::Tensor::copy_()
[2m[36m(pid=80153)[0m     @     0x7f6c897e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80153)[0m     @     0x7f6c897dfc3f at::native::copy_impl()
[2m[36m(pid=80153)[0m     @     0x7f6c897e0ed4 at::native::copy_()
[2m[36m(pid=80153)[0m     @     0x7f6c89f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80153)[0m     @     0x7f6c8a02b148 at::Tensor::copy_()
[2m[36m(pid=80153)[0m     @     0x7f6c8bc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80026)[0m     @     0x7f39b6692e11 at::TensorIterator::for_each()
[2m[36m(pid=80026)[0m     @     0x7f39b93abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80026)[0m     @     0x7f39b93cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80026)[0m     @     0x7f39b640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80026)[0m     @     0x7f39b640ac3f at::native::copy_impl()
[2m[36m(pid=80026)[0m     @     0x7f39b640bed4 at::native::copy_()
[2m[36m(pid=80044)[0m     @     0x7f8f32511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80044)[0m     @     0x7f8f3250fc3f at::native::copy_impl()
[2m[36m(pid=80044)[0m     @     0x7f8f32510ed4 at::native::copy_()
[2m[36m(pid=80044)[0m     @     0x7f8f32c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80044)[0m     @     0x7f8f32d5b148 at::Tensor::copy_()
[2m[36m(pid=80044)[0m     @     0x7f8f34952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80133)[0m     @     0x7eceedd4fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80133)[0m     @     0x7eceedd72cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80133)[0m     @     0x7eceeadb0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80133)[0m     @     0x7eceeadaec3f at::native::copy_impl()
[2m[36m(pid=80133)[0m     @     0x7eceeadafed4 at::native::copy_()
[2m[36m(pid=80133)[0m     @     0x7eceeb4f25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80089)[0m     @     0x7f6491db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80089)[0m     @     0x7f6491db7c3f at::native::copy_impl()
[2m[36m(pid=80089)[0m     @     0x7f6491db8ed4 at::native::copy_()
[2m[36m(pid=80089)[0m     @     0x7f64924fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80089)[0m     @     0x7f6492603148 at::Tensor::copy_()
[2m[36m(pid=80089)[0m     @     0x7f64941fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80089)[0m     @     0x7f64924fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80105)[0m     @     0x7f8c828da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80105)[0m     @     0x7f8c828d8c3f at::native::copy_impl()
[2m[36m(pid=80105)[0m     @     0x7f8c828d9ed4 at::native::copy_()
[2m[36m(pid=80105)[0m     @     0x7f8c8301c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80105)[0m     @     0x7f8c83124148 at::Tensor::copy_()
[2m[36m(pid=80105)[0m     @     0x7f8c84d1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a9237a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80106)[0m     @     0x7f0a92378c3f at::native::copy_impl()
[2m[36m(pid=80106)[0m     @     0x7f0a92379ed4 at::native::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a92abc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80037)[0m     @     0x7f70f92ed009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80037)[0m     @     0x7f70f92ebc3f at::native::copy_impl()
[2m[36m(pid=80037)[0m     @     0x7f70f92eced4 at::native::copy_()
[2m[36m(pid=80037)[0m     @     0x7f70f9a2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80037)[0m     @     0x7f70f9b37148 at::Tensor::copy_()
[2m[36m(pid=80037)[0m     @     0x7f70fb72e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80119)[0m     @     0x7f8ce4572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80119)[0m     @     0x7f8ce4570c3f at::native::copy_impl()
[2m[36m(pid=80119)[0m     @     0x7f8ce4571ed4 at::native::copy_()
[2m[36m(pid=80119)[0m     @     0x7f8ce4cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80119)[0m     @     0x7f8ce4dbc148 at::Tensor::copy_()
[2m[36m(pid=80119)[0m     @     0x7f8ce69b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80119)[0m     @     0x7f8ce4cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80101)[0m     @     0x7f7ed4780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80101)[0m     @     0x7f7ed47a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80101)[0m     @     0x7f7ed17e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80101)[0m     @     0x7f7ed17dfc3f at::native::copy_impl()
[2m[36m(pid=80101)[0m     @     0x7f7ed17e0ed4 at::native::copy_()
[2m[36m(pid=80101)[0m     @     0x7f7ed1f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80101)[0m     @     0x7f7ed202b148 at::Tensor::copy_()
[2m[36m(pid=80118)[0m     @     0x7f1d8cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=80118)[0m     @     0x7f1d8fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80118)[0m     @     0x7f1d8faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80118)[0m     @     0x7f1d8cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80118)[0m     @     0x7f1d8cadfc3f at::native::copy_impl()
[2m[36m(pid=80128)[0m     @     0x7f4350f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=80128)[0m     @     0x7f4350f78b53 at::TensorIterator::for_each()
[2m[36m(pid=80062)[0m     @     0x7edeb2092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80062)[0m     @     0x7edeb20b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80062)[0m     @     0x7edeaf0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80062)[0m     @     0x7edeaf0f1c3f at::native::copy_impl()
[2m[36m(pid=80062)[0m     @     0x7edeaf0f2ed4 at::native::copy_()
[2m[36m(pid=80062)[0m     @     0x7edeaf8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80062)[0m     @     0x7edeaf93d148 at::Tensor::copy_()
[2m[36m(pid=80086)[0m     @     0x7f583dd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80086)[0m     @     0x7f583dd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80086)[0m     @     0x7f583addd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80086)[0m     @     0x7f583addbc3f at::native::copy_impl()
[2m[36m(pid=80086)[0m     @     0x7f583addced4 at::native::copy_()
[2m[36m(pid=80086)[0m     @     0x7f583b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80077)[0m     @     0x7f7c0b8fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80077)[0m     @     0x7f7c0b91ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80077)[0m     @     0x7f7c0895c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80077)[0m     @     0x7f7c0895ac3f at::native::copy_impl()
[2m[36m(pid=80077)[0m     @     0x7f7c0895bed4 at::native::copy_()
[2m[36m(pid=80077)[0m     @     0x7f7c0909e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80077)[0m     @     0x7f7c091a6148 at::Tensor::copy_()
[2m[36m(pid=80138)[0m     @     0x7f8be80a9b53 at::TensorIterator::for_each()
[2m[36m(pid=80138)[0m     @     0x7f8be80a9e11 at::TensorIterator::for_each()
[2m[36m(pid=80138)[0m     @     0x7f8beadc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80138)[0m     @     0x7f8beade5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80138)[0m     @     0x7f8be7e23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80138)[0m     @     0x7f8be7e21c3f at::native::copy_impl()
[2m[36m(pid=80138)[0m     @     0x7f8be7e22ed4 at::native::copy_()
[2m[36m(pid=80150)[0m     @     0x5606916ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80150)[0m     @     0x56069163f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80150)[0m     @     0x5606916c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x7ef05e4fe148 at::Tensor::copy_()
[2m[36m(pid=80136)[0m     @     0x7ef0647b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80136)[0m     @     0x564bb5682fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80136)[0m     @     0x564bb55ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80136)[0m     @     0x564bb5668baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x564bb5669a20 method_vectorcall
[2m[36m(pid=80136)[0m     @     0x564bb55ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80136)[0m     @     0x564bb5668baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x564bb5669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80136)[0m     @     0x564bb55de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80136)[0m     @     0x564bb5668baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x564bb5669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80136)[0m     @     0x564bb55de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80136)[0m     @     0x564bb5668baf _PyEval_EvalCodeWithName
[2m[36m(pid=80136)[0m     @     0x564bb5669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80136)[0m     @     0x564bb55de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80136)[0m     @     0x564bb5668baf _PyEval_EvalCodeWithName
[2m[36m(pid=80116)[0m     @     0x55d759667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80116)[0m     @     0x55d7595dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80116)[0m     @     0x55d759666baf _PyEval_EvalCodeWithName
[2m[36m(pid=80116)[0m     @     0x55d759667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80116)[0m     @     0x55d7595dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80116)[0m     @     0x55d759666baf _PyEval_EvalCodeWithName
[2m[36m(pid=80116)[0m     @     0x55d759667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80116)[0m     @     0x55d7595dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80116)[0m     @     0x55d759666baf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x7f25d18a4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80140)[0m     @     0x555ad1708fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80140)[0m     @     0x555ad1663b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80140)[0m     @     0x555ad16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x555ad16efa20 method_vectorcall
[2m[36m(pid=80140)[0m     @     0x555ad1663bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80140)[0m     @     0x555ad16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x555ad16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80140)[0m     @     0x555ad1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80140)[0m     @     0x555ad16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x555ad16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80140)[0m     @     0x555ad1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80140)[0m     @     0x555ad16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80140)[0m     @     0x555ad16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80140)[0m     @     0x555ad1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80140)[0m     @     0x555ad16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x7f7b56721ed4 at::native::copy_()
[2m[36m(pid=80030)[0m     @     0x7f7b56e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80030)[0m     @     0x7f7b56f6c148 at::Tensor::copy_()
[2m[36m(pid=80030)[0m     @     0x7f7b58b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80030)[0m     @     0x7f7b56e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80149)[0m     @     0x7eeb60adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80149)[0m     @     0x7eeb60be7148 at::Tensor::copy_()
[2m[36m(pid=80149)[0m     @     0x7eeb627de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80149)[0m     @     0x7eeb60adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80123)[0m     @     0x7f0e8f0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80123)[0m     @     0x7f0e8f1e0148 at::Tensor::copy_()
[2m[36m(pid=80123)[0m     @     0x7f0e90dd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80123)[0m     @     0x7f0e8f0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80113)[0m     @     0x7f2382553148 at::Tensor::copy_()
[2m[36m(pid=80113)[0m     @     0x7f238414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80113)[0m     @     0x7f238244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80113)[0m     @     0x7f2382553148 at::Tensor::copy_()
[2m[36m(pid=80113)[0m     @     0x7f2388809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80113)[0m     @     0x55ba28eddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80113)[0m     @     0x55ba28e38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80113)[0m     @     0x55ba28ec3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80113)[0m     @     0x55ba28ec4a20 method_vectorcall
[2m[36m(pid=80113)[0m     @     0x55ba28e38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80113)[0m     @     0x55ba28ec3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80113)[0m     @     0x55ba28ec4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80113)[0m     @     0x55ba28e39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80113)[0m     @     0x55ba28ec3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80113)[0m     @     0x55ba28ec4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80113)[0m     @     0x55ba28e39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80113)[0m     @     0x55ba28ec3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80113)[0m     @     0x55ba28ec4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80113)[0m     @     0x55ba28e39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80113)[0m     @     0x55ba28ec3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x7fab56d5b148 at::Tensor::copy_()
[2m[36m(pid=80043)[0m     @     0x7fab58952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80043)[0m     @     0x7fab56c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80043)[0m     @     0x7fab56d5b148 at::Tensor::copy_()
[2m[36m(pid=80043)[0m     @     0x7fab5d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80043)[0m     @     0x5567e22ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80043)[0m     @     0x5567e2247b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80043)[0m     @     0x5567e22d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x5567e22d3a20 method_vectorcall
[2m[36m(pid=80043)[0m     @     0x5567e2247bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80043)[0m     @     0x5567e22d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x5567e22d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80043)[0m     @     0x5567e2248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x7f87f9421148 at::Tensor::copy_()
[2m[36m(pid=80028)[0m     @     0x7f87fb018989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80028)[0m     @     0x7f87f93195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80028)[0m     @     0x7f87f9421148 at::Tensor::copy_()
[2m[36m(pid=80028)[0m     @     0x7f8810800bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80028)[0m     @     0x5641e3ef0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80028)[0m     @     0x5641e3e4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x5641e3ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80028)[0m     @     0x5641e3ed7a20 method_vectorcall
[2m[36m(pid=80028)[0m     @     0x5641e3e4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x5641e3ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80079)[0m     @     0x7f7398d7c148 at::Tensor::copy_()
[2m[36m(pid=80079)[0m     @     0x7f739a973989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80079)[0m     @     0x7f7398c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80079)[0m     @     0x7f7398d7c148 at::Tensor::copy_()
[2m[36m(pid=80079)[0m     @     0x7f739f032bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80079)[0m     @     0x559568f64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80079)[0m     @     0x559568ebfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80079)[0m     @     0x559568f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80079)[0m     @     0x559568f4ba20 method_vectorcall
[2m[36m(pid=80079)[0m     @     0x559568ebfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80079)[0m     @     0x559568f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80079)[0m     @     0x559568f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80079)[0m     @     0x559568ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80079)[0m     @     0x559568f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80079)[0m     @     0x559568f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80079)[0m     @     0x559568ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80079)[0m     @     0x559568f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80079)[0m     @     0x559568f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80079)[0m     @     0x559568ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80079)[0m     @     0x559568f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x7f0e28622ed4 at::native::copy_()
[2m[36m(pid=80096)[0m     @     0x7f0e28d655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80096)[0m     @     0x7f0e28e6d148 at::Tensor::copy_()
[2m[36m(pid=80096)[0m     @     0x7f0e2aa64989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80130)[0m     @     0x7fb2097615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80130)[0m     @     0x7fb209869148 at::Tensor::copy_()
[2m[36m(pid=80130)[0m     @     0x7fb20b460989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80130)[0m     @     0x7fb2097615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80053)[0m     @     0x7f100cefe148 at::Tensor::copy_()
[2m[36m(pid=80053)[0m     @     0x7f100eaf5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80053)[0m     @     0x7f100cdf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80053)[0m     @     0x7f100cefe148 at::Tensor::copy_()
[2m[36m(pid=80053)[0m     @     0x7f10131b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80053)[0m     @     0x559939ffbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80053)[0m     @     0x559939f56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80053)[0m     @     0x559939fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80053)[0m     @     0x559939fe2a20 method_vectorcall
[2m[36m(pid=80053)[0m     @     0x559939f56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80053)[0m     @     0x559939fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80053)[0m     @     0x559939fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80053)[0m     @     0x559939f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80053)[0m     @     0x559939fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80053)[0m     @     0x559939fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80053)[0m     @     0x559939f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80053)[0m     @     0x559939fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80053)[0m     @     0x559939fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80053)[0m     @     0x559939f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80053)[0m     @     0x559939fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x7f5c8a1baed4 at::native::copy_()
[2m[36m(pid=80029)[0m     @     0x7f5c8a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80029)[0m     @     0x7f5c8aa05148 at::Tensor::copy_()
[2m[36m(pid=80029)[0m     @     0x7f5c8c5fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80052)[0m     @     0x7f432df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80052)[0m     @     0x7f432e02b148 at::Tensor::copy_()
[2m[36m(pid=80052)[0m     @     0x7f432fc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80052)[0m     @     0x7f432df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80041)[0m     @     0x7f5e3287d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80041)[0m     @     0x7f5e32985148 at::Tensor::copy_()
[2m[36m(pid=80041)[0m     @     0x7f5e3457c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80041)[0m     @     0x7f5e3287d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80040)[0m     @     0x7f67dc8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80040)[0m     @     0x7f67dc9d6148 at::Tensor::copy_()
[2m[36m(pid=80040)[0m     @     0x7f67de5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80040)[0m     @     0x7f67dc8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80039)[0m     @     0x7f2c4819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80039)[0m     @     0x7f2c482a6148 at::Tensor::copy_()
[2m[36m(pid=80039)[0m     @     0x7f2c49e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc667627148 at::Tensor::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc66921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc66751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80108)[0m     @     0x5567492e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80108)[0m     @     0x556749371baf _PyEval_EvalCodeWithName
[2m[36m(pid=80108)[0m     @     0x556749372643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80108)[0m     @     0x5567492e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80108)[0m     @     0x556749371baf _PyEval_EvalCodeWithName
[2m[36m(pid=80108)[0m     @     0x556749372643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80108)[0m     @     0x5567492e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80108)[0m     @     0x556749371baf _PyEval_EvalCodeWithName
[2m[36m(pid=80108)[0m     @     0x556749372643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80108)[0m     @     0x5567492e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80108)[0m     @     0x556749371baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x7f8ad85bd148 at::Tensor::copy_()
[2m[36m(pid=80045)[0m     @     0x7f8ada1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80045)[0m     @     0x7f8ad84b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80045)[0m     @     0x7f8ad85bd148 at::Tensor::copy_()
[2m[36m(pid=80056)[0m     @     0x7fc4bc39d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80056)[0m     @     0x7fc4bc39bc3f at::native::copy_impl()
[2m[36m(pid=80056)[0m     @     0x7fc4bc39ced4 at::native::copy_()
[2m[36m(pid=80056)[0m     @     0x7fc4bcadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80024)[0m     @     0x7f90fd7e0ed4 at::native::copy_()
[2m[36m(pid=80024)[0m     @     0x7f90fdf235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80024)[0m     @     0x7f90fe02b148 at::Tensor::copy_()
[2m[36m(pid=80048)[0m     @     0x7fc121e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80048)[0m     @     0x7fc121f99148 at::Tensor::copy_()
[2m[36m(pid=80048)[0m     @     0x7fc123b90989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80033)[0m     @     0x7f20861f9c3f at::native::copy_impl()
[2m[36m(pid=80033)[0m     @     0x7f20861faed4 at::native::copy_()
[2m[36m(pid=80033)[0m     @     0x7f208693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80033)[0m     @     0x7f2086a45148 at::Tensor::copy_()
[2m[36m(pid=80134)[0m     @     0x7f1e536caed4 at::native::copy_()
[2m[36m(pid=80134)[0m     @     0x7f1e53e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80134)[0m     @     0x7f1e53f15148 at::Tensor::copy_()
[2m[36m(pid=80112)[0m     @     0x7fb517d73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80112)[0m     @     0x7fb517d71c3f at::native::copy_impl()
[2m[36m(pid=80112)[0m     @     0x7fb517d72ed4 at::native::copy_()
[2m[36m(pid=80112)[0m     @     0x7fb5184b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80129)[0m     @     0x7f50ec9d6148 at::Tensor::copy_()
[2m[36m(pid=80129)[0m     @     0x7f50ee5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80129)[0m     @     0x7f50ec8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80129)[0m     @     0x7f50ec9d6148 at::Tensor::copy_()
[2m[36m(pid=80129)[0m     @     0x7f50f2c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80129)[0m     @     0x5604ffc03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80129)[0m     @     0x5604ffb5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80129)[0m     @     0x5604ffbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80129)[0m     @     0x5604ffbeaa20 method_vectorcall
[2m[36m(pid=80129)[0m     @     0x5604ffb5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80129)[0m     @     0x5604ffbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80129)[0m     @     0x5604ffbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80129)[0m     @     0x5604ffb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80129)[0m     @     0x5604ffbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80129)[0m     @     0x5604ffbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80129)[0m     @     0x5604ffb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80129)[0m     @     0x5604ffbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80129)[0m     @     0x5604ffbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80129)[0m     @     0x5604ffb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80129)[0m     @     0x5604ffbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x7f84209e7c3f at::native::copy_impl()
[2m[36m(pid=80080)[0m     @     0x7f84209e8ed4 at::native::copy_()
[2m[36m(pid=80080)[0m     @     0x7f842112b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80080)[0m     @     0x7f8421233148 at::Tensor::copy_()
[2m[36m(pid=80111)[0m     @     0x7f85cac06c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80111)[0m     @     0x7f85cac29cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80111)[0m     @     0x7f85c7c67009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80111)[0m     @     0x7f85c7c65c3f at::native::copy_impl()
[2m[36m(pid=80111)[0m     @     0x7f85c7c66ed4 at::native::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d1d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=80035)[0m     @     0x7f6d203c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80035)[0m     @     0x7f6d203e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80035)[0m     @     0x7f6d1d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80036)[0m     @     0x7f20cff15148 at::Tensor::copy_()
[2m[36m(pid=80036)[0m     @     0x7f20d1b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80036)[0m     @     0x7f20cfe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80036)[0m     @     0x7f20cff15148 at::Tensor::copy_()
[2m[36m(pid=80036)[0m     @     0x7f20d61cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80036)[0m     @     0x557419c95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80036)[0m     @     0x557419bf0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80036)[0m     @     0x557419c7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80036)[0m     @     0x557419c7ca20 method_vectorcall
[2m[36m(pid=80036)[0m     @     0x557419bf0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80124)[0m     @     0x7f6132a05148 at::Tensor::copy_()
[2m[36m(pid=80124)[0m     @     0x7f61345fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80124)[0m     @     0x7f61328fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80124)[0m     @     0x7f6132a05148 at::Tensor::copy_()
[2m[36m(pid=80124)[0m     @     0x7f6138cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80124)[0m     @     0x55d5cb635fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80124)[0m     @     0x55d5cb590b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80124)[0m     @     0x55d5cb61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80124)[0m     @     0x55d5cb61ca20 method_vectorcall
[2m[36m(pid=80124)[0m     @     0x55d5cb590bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80124)[0m     @     0x55d5cb61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80124)[0m     @     0x55d5cb61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80124)[0m     @     0x55d5cb591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80124)[0m     @     0x55d5cb61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80124)[0m     @     0x55d5cb61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80124)[0m     @     0x55d5cb591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x7fb7c4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80083)[0m     @     0x7fb7c4efe148 at::Tensor::copy_()
[2m[36m(pid=80083)[0m     @     0x7fb7cb1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80083)[0m     @     0x556101e5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80083)[0m     @     0x556101db8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x556101e43baf _PyEval_EvalCodeWithName
[2m[36m(pid=80083)[0m     @     0x556101e44a20 method_vectorcall
[2m[36m(pid=80083)[0m     @     0x556101db8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x556101e43baf _PyEval_EvalCodeWithName
[2m[36m(pid=80083)[0m     @     0x556101e44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80083)[0m     @     0x556101db9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x556101e43baf _PyEval_EvalCodeWithName
[2m[36m(pid=80083)[0m     @     0x556101e44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80083)[0m     @     0x556101db9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x556101e43baf _PyEval_EvalCodeWithName
[2m[36m(pid=80083)[0m     @     0x556101e44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80083)[0m     @     0x556101db9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80083)[0m     @     0x556101e43baf _PyEval_EvalCodeWithName
[2m[36m(pid=80047)[0m     @     0x7ee75ed5b148 at::Tensor::copy_()
[2m[36m(pid=80047)[0m     @     0x7ee760952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80047)[0m     @     0x7ee75ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80047)[0m     @     0x7ee75ed5b148 at::Tensor::copy_()
[2m[36m(pid=80047)[0m     @     0x7ee765011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80047)[0m     @     0x558f3f7d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80047)[0m     @     0x558f3f731b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80047)[0m     @     0x558f3f7bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80047)[0m     @     0x558f3f7bda20 method_vectorcall
[2m[36m(pid=80047)[0m     @     0x558f3f731bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80047)[0m     @     0x558f3f7bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80047)[0m     @     0x558f3f7bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80047)[0m     @     0x558f3f732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80047)[0m     @     0x558f3f7bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80047)[0m     @     0x558f3f7bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80047)[0m     @     0x558f3f732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80047)[0m     @     0x558f3f7bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80047)[0m     @     0x558f3f7bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80047)[0m     @     0x558f3f732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80047)[0m     @     0x558f3f7bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x7f9804696148 at::Tensor::copy_()
[2m[36m(pid=80042)[0m     @     0x7f980628d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80042)[0m     @     0x7f980458e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80042)[0m     @     0x7f9804696148 at::Tensor::copy_()
[2m[36m(pid=80042)[0m     @     0x7f980a94cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80042)[0m     @     0x5601f984cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80042)[0m     @     0x5601f97a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80042)[0m     @     0x5601f9832baf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x5601f9833a20 method_vectorcall
[2m[36m(pid=80042)[0m     @     0x5601f97a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80042)[0m     @     0x5601f9832baf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x5601f9833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80042)[0m     @     0x5601f97a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80042)[0m     @     0x5601f9832baf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x5601f9833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80042)[0m     @     0x5601f97a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80042)[0m     @     0x5601f9832baf _PyEval_EvalCodeWithName
[2m[36m(pid=80042)[0m     @     0x5601f9833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80042)[0m     @     0x5601f97a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80042)[0m     @     0x5601f9832baf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x7fb34170eed4 at::native::copy_()
[2m[36m(pid=80046)[0m     @     0x7fb341e515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80046)[0m     @     0x7fb341f59148 at::Tensor::copy_()
[2m[36m(pid=80046)[0m     @     0x7fb343b50989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80046)[0m     @     0x7fb341e515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80055)[0m     @     0x7f2859c885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80055)[0m     @     0x7f2859d90148 at::Tensor::copy_()
[2m[36m(pid=80055)[0m     @     0x7f285b987989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80055)[0m     @     0x7f2859c885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80055)[0m     @     0x7f2859d90148 at::Tensor::copy_()
[2m[36m(pid=80055)[0m     @     0x7f2860046bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80103)[0m     @     0x7ee92ad5b148 at::Tensor::copy_()
[2m[36m(pid=80103)[0m     @     0x7ee92c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80103)[0m     @     0x7ee92ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80103)[0m     @     0x7ee92ad5b148 at::Tensor::copy_()
[2m[36m(pid=80103)[0m     @     0x7ee931011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80103)[0m     @     0x56291d95dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80103)[0m     @     0x56291d8b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80103)[0m     @     0x56291d943baf _PyEval_EvalCodeWithName
[2m[36m(pid=80103)[0m     @     0x56291d944a20 method_vectorcall
[2m[36m(pid=80103)[0m     @     0x56291d8b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80103)[0m     @     0x56291d943baf _PyEval_EvalCodeWithName
[2m[36m(pid=80103)[0m     @     0x56291d944643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80103)[0m     @     0x56291d8b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80103)[0m     @     0x56291d943baf _PyEval_EvalCodeWithName
[2m[36m(pid=80103)[0m     @     0x56291d944643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80103)[0m     @     0x56291d8b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80103)[0m     @     0x56291d943baf _PyEval_EvalCodeWithName
[2m[36m(pid=80103)[0m     @     0x56291d944643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80103)[0m     @     0x56291d8b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80103)[0m     @     0x56291d943baf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x7f2dd36f9148 at::Tensor::copy_()
[2m[36m(pid=80091)[0m     @     0x7f2dd52f0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80091)[0m     @     0x7f2dd35f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80091)[0m     @     0x7f2dd36f9148 at::Tensor::copy_()
[2m[36m(pid=80091)[0m     @     0x7f2dd99afbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80091)[0m     @     0x5570c3385fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80091)[0m     @     0x5570c32e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80091)[0m     @     0x5570c336bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x5570c336ca20 method_vectorcall
[2m[36m(pid=80091)[0m     @     0x5570c32e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80091)[0m     @     0x5570c336bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x5570c336c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80091)[0m     @     0x5570c32e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80091)[0m     @     0x5570c336bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x5570c336c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80091)[0m     @     0x5570c32e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x7f572f8d8148 at::Tensor::copy_()
[2m[36m(pid=80031)[0m     @     0x7f57314cf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80031)[0m     @     0x7f572f7d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80031)[0m     @     0x7f572f8d8148 at::Tensor::copy_()
[2m[36m(pid=80031)[0m     @     0x7f5735b8ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80031)[0m     @     0x55758079bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80031)[0m     @     0x5575806f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x557580781baf _PyEval_EvalCodeWithName
[2m[36m(pid=80031)[0m     @     0x557580782a20 method_vectorcall
[2m[36m(pid=80031)[0m     @     0x5575806f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x557580781baf _PyEval_EvalCodeWithName
[2m[36m(pid=80031)[0m     @     0x557580782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80031)[0m     @     0x5575806f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x557580781baf _PyEval_EvalCodeWithName
[2m[36m(pid=80031)[0m     @     0x557580782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80031)[0m     @     0x5575806f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x557580781baf _PyEval_EvalCodeWithName
[2m[36m(pid=80031)[0m     @     0x557580782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80031)[0m     @     0x5575806f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80031)[0m     @     0x557580781baf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x7fb794140148 at::Tensor::copy_()
[2m[36m(pid=80098)[0m     @     0x7fb795d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80098)[0m     @     0x7fb7940385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80098)[0m     @     0x7fb794140148 at::Tensor::copy_()
[2m[36m(pid=80025)[0m     @     0x7fad13f5bed4 at::native::copy_()
[2m[36m(pid=80025)[0m     @     0x7fad1469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80025)[0m     @     0x7fad147a6148 at::Tensor::copy_()
[2m[36m(pid=80025)[0m     @     0x7fad1639d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80025)[0m     @     0x7fad1469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80137)[0m     @     0x7eda2a510ed4 at::native::copy_()
[2m[36m(pid=80137)[0m     @     0x7eda2ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80137)[0m     @     0x7eda2ad5b148 at::Tensor::copy_()
[2m[36m(pid=80137)[0m     @     0x7eda2c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80147)[0m     @     0x7fa120095148 at::Tensor::copy_()
[2m[36m(pid=80147)[0m     @     0x7fa121c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80147)[0m     @     0x7fa11ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80147)[0m     @     0x7fa120095148 at::Tensor::copy_()
[2m[36m(pid=80087)[0m     @     0x7fccc9d07c3f at::native::copy_impl()
[2m[36m(pid=80087)[0m     @     0x7fccc9d08ed4 at::native::copy_()
[2m[36m(pid=80087)[0m     @     0x7fccca44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80087)[0m     @     0x7fccca553148 at::Tensor::copy_()
[2m[36m(pid=80087)[0m     @     0x7fcccc14a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80102)[0m     @     0x7f1fb8ba2e11 at::TensorIterator::for_each()
[2m[36m(pid=80102)[0m     @     0x7f1fbb8bbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80102)[0m     @     0x7f1fbb8decfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80102)[0m     @     0x7f1fb891c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80102)[0m     @     0x7f1fb891ac3f at::native::copy_impl()
[2m[36m(pid=80027)[0m     @     0x7edbd61955cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80027)[0m     @     0x7edbd629d148 at::Tensor::copy_()
[2m[36m(pid=80027)[0m     @     0x7edbdc553bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80027)[0m     @     0x558e0daf5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80027)[0m     @     0x558e0da50b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80027)[0m     @     0x558e0dadbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80027)[0m     @     0x558e0dadca20 method_vectorcall
[2m[36m(pid=80027)[0m     @     0x558e0da50bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80027)[0m     @     0x558e0dadbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80027)[0m     @     0x558e0dadc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80027)[0m     @     0x558e0da51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80027)[0m     @     0x558e0dadbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80027)[0m     @     0x558e0dadc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80027)[0m     @     0x558e0da51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80027)[0m     @     0x558e0dadbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80027)[0m     @     0x558e0dadc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80027)[0m     @     0x558e0da51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80027)[0m     @     0x558e0dadbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80034)[0m     @     0x7f08ce5a8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80034)[0m     @     0x7f08cc8a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80034)[0m     @     0x7f08cc9b1148 at::Tensor::copy_()
[2m[36m(pid=80153)[0m     @     0x7f6c89f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80153)[0m     @     0x7f6c8a02b148 at::Tensor::copy_()
[2m[36m(pid=80153)[0m     @     0x7f6c902e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80153)[0m     @     0x559a1d827fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80153)[0m     @     0x559a1d782b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80153)[0m     @     0x559a1d80dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80153)[0m     @     0x559a1d80ea20 method_vectorcall
[2m[36m(pid=80153)[0m     @     0x559a1d782bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80153)[0m     @     0x559a1d80dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80153)[0m     @     0x559a1d80e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80153)[0m     @     0x559a1d783689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80153)[0m     @     0x559a1d80dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80153)[0m     @     0x559a1d80e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80153)[0m     @     0x559a1d783689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80153)[0m     @     0x559a1d80dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x7f39b6b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80026)[0m     @     0x7f39b6c56148 at::Tensor::copy_()
[2m[36m(pid=80026)[0m     @     0x7f39b884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80044)[0m     @     0x7f8f32c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80044)[0m     @     0x7f8f32d5b148 at::Tensor::copy_()
[2m[36m(pid=80044)[0m     @     0x7f8f39011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80044)[0m     @     0x55e76b6cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80044)[0m     @     0x55e76b629b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80044)[0m     @     0x55e76b6b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=80044)[0m     @     0x55e76b6b5a20 method_vectorcall
[2m[36m(pid=80044)[0m     @     0x55e76b629bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80044)[0m     @     0x55e76b6b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=80044)[0m     @     0x55e76b6b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80044)[0m     @     0x55e76b62a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80044)[0m     @     0x55e76b6b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=80044)[0m     @     0x55e76b6b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80044)[0m     @     0x55e76b62a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x7eceeb5fa148 at::Tensor::copy_()
[2m[36m(pid=80133)[0m     @     0x7eceed1f1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80133)[0m     @     0x7eceeb4f25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80089)[0m     @     0x7f6492603148 at::Tensor::copy_()
[2m[36m(pid=80089)[0m     @     0x7f64988b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80089)[0m     @     0x55fb163dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80089)[0m     @     0x55fb16335b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80089)[0m     @     0x55fb163c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80089)[0m     @     0x55fb163c1a20 method_vectorcall
[2m[36m(pid=80089)[0m     @     0x55fb16335bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80089)[0m     @     0x55fb163c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80089)[0m     @     0x55fb163c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80089)[0m     @     0x55fb16336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80089)[0m     @     0x55fb163c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80089)[0m     @     0x55fb163c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80089)[0m     @     0x55fb16336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80089)[0m     @     0x55fb163c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80089)[0m     @     0x55fb163c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80089)[0m     @     0x55fb16336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80089)[0m     @     0x55fb163c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x7f8c8301c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80105)[0m     @     0x7f8c83124148 at::Tensor::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a92bc4148 at::Tensor::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a947bb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a92abc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80037)[0m     @     0x7f70f9a2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80037)[0m     @     0x7f70f9b37148 at::Tensor::copy_()
[2m[36m(pid=80037)[0m     @     0x7f70ffdedbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80037)[0m     @     0x55f5bfe59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80037)[0m     @     0x55f5bfdb4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80037)[0m     @     0x55f5bfe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80037)[0m     @     0x55f5bfe40a20 method_vectorcall
[2m[36m(pid=80037)[0m     @     0x55f5bfdb4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80037)[0m     @     0x55f5bfe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80037)[0m     @     0x55f5bfe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80037)[0m     @     0x55f5bfdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80037)[0m     @     0x55f5bfe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80037)[0m     @     0x55f5bfe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80037)[0m     @     0x55f5bfdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80037)[0m     @     0x55f5bfe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80037)[0m     @     0x55f5bfe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80037)[0m     @     0x55f5bfdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80037)[0m     @     0x55f5bfe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80119)[0m     @     0x7f8ce4dbc148 at::Tensor::copy_()
[2m[36m(pid=80119)[0m     @     0x7f8ceb072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80119)[0m     @     0x561b121eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80119)[0m     @     0x561b12145b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80119)[0m     @     0x561b121d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80119)[0m     @     0x561b121d1a20 method_vectorcall
[2m[36m(pid=80119)[0m     @     0x561b12145bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80119)[0m     @     0x561b121d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80119)[0m     @     0x561b121d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80119)[0m     @     0x561b12146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80119)[0m     @     0x561b121d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80119)[0m     @     0x561b121d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80119)[0m     @     0x561b12146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80119)[0m     @     0x561b121d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80119)[0m     @     0x561b121d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80119)[0m     @     0x561b12146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80119)[0m     @     0x561b121d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x7f7ed3c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80101)[0m     @     0x7f7ed1f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80101)[0m     @     0x7f7ed202b148 at::Tensor::copy_()
[2m[36m(pid=80118)[0m     @     0x7f1d8cae0ed4 at::native::copy_()
[2m[36m(pid=80118)[0m     @     0x7f1d8d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80118)[0m     @     0x7f1d8d32b148 at::Tensor::copy_()
[2m[36m(pid=80118)[0m     @     0x7f1d8ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80128)[0m     @     0x7f4350f78e11 at::TensorIterator::for_each()
[2m[36m(pid=80128)[0m     @     0x7f4353c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=80128)[0m     @     0x7f4353cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=80062)[0m     @     0x7edeb1534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80062)[0m     @     0x7edeaf8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80062)[0m     @     0x7edeaf93d148 at::Tensor::copy_()
[2m[36m(pid=80062)[0m     @     0x7edeb5bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80062)[0m     @     0x5606892acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80062)[0m     @     0x560689207b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80062)[0m     @     0x560689292baf _PyEval_EvalCodeWithName
[2m[36m(pid=80062)[0m     @     0x560689293a20 method_vectorcall
[2m[36m(pid=80062)[0m     @     0x560689207bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80062)[0m     @     0x560689292baf _PyEval_EvalCodeWithName
[2m[36m(pid=80062)[0m     @     0x560689293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80062)[0m     @     0x560689208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80062)[0m     @     0x560689292baf _PyEval_EvalCodeWithName
[2m[36m(pid=80062)[0m     @     0x560689293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80062)[0m     @     0x560689208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80062)[0m     @     0x560689292baf _PyEval_EvalCodeWithName
[2m[36m(pid=80062)[0m     @     0x560689293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80062)[0m     @     0x560689208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80062)[0m     @     0x560689292baf _PyEval_EvalCodeWithName
[2m[36m(pid=80086)[0m     @     0x7f583b627148 at::Tensor::copy_()
[2m[36m(pid=80086)[0m     @     0x7f583d21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80086)[0m     @     0x7f583b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80086)[0m     @     0x7f583b627148 at::Tensor::copy_()
[2m[36m(pid=80086)[0m     @     0x7f58418ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80086)[0m     @     0x56236eb09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80086)[0m     @     0x56236ea64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80086)[0m     @     0x56236eaefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80086)[0m     @     0x56236eaf0a20 method_vectorcall
[2m[36m(pid=80086)[0m     @     0x56236ea64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80086)[0m     @     0x56236eaefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80077)[0m     @     0x7f7c0ad9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80077)[0m     @     0x7f7c0909e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80077)[0m     @     0x7f7c091a6148 at::Tensor::copy_()
[2m[36m(pid=80077)[0m     @     0x7f7c0f45cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80077)[0m     @     0x55b486cccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80077)[0m     @     0x55b486c27b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80077)[0m     @     0x55b486cb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80077)[0m     @     0x55b486cb3a20 method_vectorcall
[2m[36m(pid=80077)[0m     @     0x55b486c27bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80077)[0m     @     0x55b486cb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80077)[0m     @     0x55b486cb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80077)[0m     @     0x55b486c28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80077)[0m     @     0x55b486cb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80077)[0m     @     0x55b486cb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80077)[0m     @     0x55b486c28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80077)[0m     @     0x55b486cb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80077)[0m     @     0x55b486cb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80077)[0m     @     0x55b486c28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80077)[0m     @     0x55b486cb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x7f8be85655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80138)[0m     @     0x7f8be866d148 at::Tensor::copy_()
[2m[36m(pid=80138)[0m     @     0x7f8bea264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80138)[0m     @     0x7f8be85655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80030)[0m     @     0x7f7b56f6c148 at::Tensor::copy_()
[2m[36m(pid=80030)[0m     @     0x7f7b5d222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80030)[0m     @     0x55aa472fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80030)[0m     @     0x55aa47257b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80030)[0m     @     0x55aa472e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x55aa472e3a20 method_vectorcall
[2m[36m(pid=80030)[0m     @     0x55aa47257bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80030)[0m     @     0x55aa472e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x55aa472e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80030)[0m     @     0x55aa47258689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80030)[0m     @     0x55aa472e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x55aa472e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80030)[0m     @     0x55aa47258689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80030)[0m     @     0x55aa472e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80030)[0m     @     0x55aa472e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80030)[0m     @     0x55aa47258689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80030)[0m     @     0x55aa472e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80149)[0m     @     0x7eeb60be7148 at::Tensor::copy_()
[2m[36m(pid=80149)[0m     @     0x7eeb66e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80149)[0m     @     0x55bc87edbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80149)[0m     @     0x55bc87e36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80149)[0m     @     0x55bc87ec1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80149)[0m     @     0x55bc87ec2a20 method_vectorcall
[2m[36m(pid=80149)[0m     @     0x55bc87e36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80149)[0m     @     0x55bc87ec1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80149)[0m     @     0x55bc87ec2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80149)[0m     @     0x55bc87e37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80149)[0m     @     0x55bc87ec1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80149)[0m     @     0x55bc87ec2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80149)[0m     @     0x55bc87e37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80149)[0m     @     0x55bc87ec1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80149)[0m     @     0x55bc87ec2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80149)[0m     @     0x55bc87e37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80149)[0m     @     0x55bc87ec1baf _PyEval_EvalCodeWithName
[2m[36m(pid=80123)[0m     @     0x7f0e8f1e0148 at::Tensor::copy_()
[2m[36m(pid=80123)[0m     @     0x7f0e95496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80123)[0m     @     0x56224409afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80123)[0m     @     0x562243ff5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80123)[0m     @     0x562244080baf _PyEval_EvalCodeWithName
[2m[36m(pid=80123)[0m     @     0x562244081a20 method_vectorcall
[2m[36m(pid=80123)[0m     @     0x562243ff5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80123)[0m     @     0x562244080baf _PyEval_EvalCodeWithName
[2m[36m(pid=80123)[0m     @     0x562244081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80123)[0m     @     0x562243ff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80123)[0m     @     0x562244080baf _PyEval_EvalCodeWithName
[2m[36m(pid=80123)[0m     @     0x562244081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80123)[0m     @     0x562243ff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80123)[0m     @     0x562244080baf _PyEval_EvalCodeWithName
[2m[36m(pid=80123)[0m     @     0x562244081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80123)[0m     @     0x562243ff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80123)[0m     @     0x562244080baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x5567e22d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x5567e22d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80043)[0m     @     0x5567e2248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80043)[0m     @     0x5567e22d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80043)[0m     @     0x5567e22d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80043)[0m     @     0x5567e2248689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80043)[0m     @     0x5567e22d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80028)[0m     @     0x5641e3ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80028)[0m     @     0x5641e3e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x5641e3ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80028)[0m     @     0x5641e3ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80028)[0m     @     0x5641e3e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x5641e3ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80028)[0m     @     0x5641e3ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80028)[0m     @     0x5641e3e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80028)[0m     @     0x5641e3ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x7f0e28d655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80096)[0m     @     0x7f0e28e6d148 at::Tensor::copy_()
[2m[36m(pid=80096)[0m     @     0x7f0e2f123bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80096)[0m     @     0x55972d48dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80096)[0m     @     0x55972d3e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80096)[0m     @     0x55972d473baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x55972d474a20 method_vectorcall
[2m[36m(pid=80096)[0m     @     0x55972d3e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80096)[0m     @     0x55972d473baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x55972d474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80096)[0m     @     0x55972d3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80096)[0m     @     0x55972d473baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x55972d474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80096)[0m     @     0x55972d3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80096)[0m     @     0x55972d473baf _PyEval_EvalCodeWithName
[2m[36m(pid=80096)[0m     @     0x55972d474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80096)[0m     @     0x55972d3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80096)[0m     @     0x55972d473baf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x7fb209869148 at::Tensor::copy_()
[2m[36m(pid=80130)[0m     @     0x7fb20fb1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80130)[0m     @     0x55742eeb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80130)[0m     @     0x55742ee0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80130)[0m     @     0x55742ee9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x55742ee9ba20 method_vectorcall
[2m[36m(pid=80130)[0m     @     0x55742ee0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80130)[0m     @     0x55742ee9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x55742ee9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80130)[0m     @     0x55742ee10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80130)[0m     @     0x55742ee9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x55742ee9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80130)[0m     @     0x55742ee10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80130)[0m     @     0x55742ee9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80130)[0m     @     0x55742ee9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80130)[0m     @     0x55742ee10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80130)[0m     @     0x55742ee9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x7f5c8a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80029)[0m     @     0x7f5c8aa05148 at::Tensor::copy_()
[2m[36m(pid=80029)[0m     @     0x7f5c90cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80029)[0m     @     0x561460c94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80029)[0m     @     0x561460befb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80029)[0m     @     0x561460c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x561460c7ba20 method_vectorcall
[2m[36m(pid=80029)[0m     @     0x561460befbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80029)[0m     @     0x561460c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x561460c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80029)[0m     @     0x561460bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80029)[0m     @     0x561460c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x561460c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80029)[0m     @     0x561460bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80029)[0m     @     0x561460c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80029)[0m     @     0x561460c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80029)[0m     @     0x561460bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80029)[0m     @     0x561460c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=80052)[0m     @     0x7f432e02b148 at::Tensor::copy_()
[2m[36m(pid=80052)[0m     @     0x7f43342e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80052)[0m     @     0x55dd86296fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80052)[0m     @     0x55dd861f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80052)[0m     @     0x55dd8627cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80052)[0m     @     0x55dd8627da20 method_vectorcall
[2m[36m(pid=80052)[0m     @     0x55dd861f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80052)[0m     @     0x55dd8627cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80052)[0m     @     0x55dd8627d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80052)[0m     @     0x55dd861f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80052)[0m     @     0x55dd8627cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80052)[0m     @     0x55dd8627d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80052)[0m     @     0x55dd861f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80052)[0m     @     0x55dd8627cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80052)[0m     @     0x55dd8627d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80052)[0m     @     0x55dd861f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80052)[0m     @     0x55dd8627cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80041)[0m     @     0x7f5e32985148 at::Tensor::copy_()
[2m[36m(pid=80041)[0m     @     0x7f5e38c3bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80041)[0m     @     0x563dc4747fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80041)[0m     @     0x563dc46a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80041)[0m     @     0x563dc472dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80041)[0m     @     0x563dc472ea20 method_vectorcall
[2m[36m(pid=80041)[0m     @     0x563dc46a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80041)[0m     @     0x563dc472dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80041)[0m     @     0x563dc472e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80041)[0m     @     0x563dc46a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80041)[0m     @     0x563dc472dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80041)[0m     @     0x563dc472e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80041)[0m     @     0x563dc46a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80041)[0m     @     0x563dc472dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80041)[0m     @     0x563dc472e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80041)[0m     @     0x563dc46a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80041)[0m     @     0x563dc472dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80040)[0m     @     0x7f67dc9d6148 at::Tensor::copy_()
[2m[36m(pid=80040)[0m     @     0x7f67e2c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80040)[0m     @     0x55ebb2dd1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80040)[0m     @     0x55ebb2d2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80040)[0m     @     0x55ebb2db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=80040)[0m     @     0x55ebb2db8a20 method_vectorcall
[2m[36m(pid=80040)[0m     @     0x55ebb2d2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80040)[0m     @     0x55ebb2db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=80040)[0m     @     0x55ebb2db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80040)[0m     @     0x55ebb2d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80040)[0m     @     0x55ebb2db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=80040)[0m     @     0x55ebb2db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80040)[0m     @     0x55ebb2d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80040)[0m     @     0x55ebb2db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=80040)[0m     @     0x55ebb2db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80040)[0m     @     0x55ebb2d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80040)[0m     @     0x55ebb2db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x7f2c4819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80039)[0m     @     0x7f2c482a6148 at::Tensor::copy_()
[2m[36m(pid=80039)[0m     @     0x7f2c4e55cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80039)[0m     @     0x55c3cded0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80039)[0m     @     0x55c3cde2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80039)[0m     @     0x55c3cdeb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x55c3cdeb7a20 method_vectorcall
[2m[36m(pid=80039)[0m     @     0x55c3cde2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80039)[0m     @     0x55c3cdeb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x55c3cdeb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80039)[0m     @     0x55c3cde2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80039)[0m     @     0x55c3cdeb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x55c3cdeb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80039)[0m     @     0x55c3cde2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80039)[0m     @     0x55c3cdeb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x55c3cdeb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80093)[0m     @     0x7fc667627148 at::Tensor::copy_()
[2m[36m(pid=80093)[0m     @     0x7fc66d8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80093)[0m     @     0x555e0d14efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80093)[0m     @     0x555e0d0a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80093)[0m     @     0x555e0d134baf _PyEval_EvalCodeWithName
[2m[36m(pid=80093)[0m     @     0x555e0d135a20 method_vectorcall
[2m[36m(pid=80093)[0m     @     0x555e0d0a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80093)[0m     @     0x555e0d134baf _PyEval_EvalCodeWithName
[2m[36m(pid=80093)[0m     @     0x555e0d135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80093)[0m     @     0x555e0d0aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80093)[0m     @     0x555e0d134baf _PyEval_EvalCodeWithName
[2m[36m(pid=80093)[0m     @     0x555e0d135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80093)[0m     @     0x555e0d0aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80093)[0m     @     0x555e0d134baf _PyEval_EvalCodeWithName
[2m[36m(pid=80093)[0m     @     0x555e0d135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80093)[0m     @     0x555e0d0aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80093)[0m     @     0x555e0d134baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x7f8ade873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80045)[0m     @     0x5569bcc53fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80045)[0m     @     0x5569bcbaeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80045)[0m     @     0x5569bcc39baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x5569bcc3aa20 method_vectorcall
[2m[36m(pid=80045)[0m     @     0x5569bcbaebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80045)[0m     @     0x5569bcc39baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x5569bcc3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80045)[0m     @     0x5569bcbaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80045)[0m     @     0x5569bcc39baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x5569bcc3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80045)[0m     @     0x5569bcbaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80045)[0m     @     0x5569bcc39baf _PyEval_EvalCodeWithName
[2m[36m(pid=80045)[0m     @     0x5569bcc3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80045)[0m     @     0x5569bcbaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80045)[0m     @     0x5569bcc39baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x7fc4bcbe7148 at::Tensor::copy_()
[2m[36m(pid=80056)[0m     @     0x7fc4be7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80056)[0m     @     0x7fc4bcadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80024)[0m     @     0x7f90ffc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80024)[0m     @     0x7f90fdf235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80024)[0m     @     0x7f90fe02b148 at::Tensor::copy_()
[2m[36m(pid=80024)[0m     @     0x7f91042e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80024)[0m     @     0x55edb3732fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80024)[0m     @     0x55edb368db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80024)[0m     @     0x55edb3718baf _PyEval_EvalCodeWithName
[2m[36m(pid=80024)[0m     @     0x55edb3719a20 method_vectorcall
[2m[36m(pid=80024)[0m     @     0x55edb368dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80024)[0m     @     0x55edb3718baf _PyEval_EvalCodeWithName
[2m[36m(pid=80024)[0m     @     0x55edb3719643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80024)[0m     @     0x55edb368e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80024)[0m     @     0x55edb3718baf _PyEval_EvalCodeWithName
[2m[36m(pid=80024)[0m     @     0x55edb3719643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80024)[0m     @     0x55edb368e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80024)[0m     @     0x55edb3718baf _PyEval_EvalCodeWithName
[2m[36m(pid=80024)[0m     @     0x55edb3719643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80024)[0m     @     0x55edb368e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80024)[0m     @     0x55edb3718baf _PyEval_EvalCodeWithName
[2m[36m(pid=80048)[0m     @     0x7fc121e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80048)[0m     @     0x7fc121f99148 at::Tensor::copy_()
[2m[36m(pid=80048)[0m     @     0x7fc12824fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80048)[0m     @     0x55b6d119dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80048)[0m     @     0x55b6d10f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80048)[0m     @     0x55b6d1183baf _PyEval_EvalCodeWithName
[2m[36m(pid=80048)[0m     @     0x55b6d1184a20 method_vectorcall
[2m[36m(pid=80048)[0m     @     0x55b6d10f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80048)[0m     @     0x55b6d1183baf _PyEval_EvalCodeWithName
[2m[36m(pid=80048)[0m     @     0x55b6d1184643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80048)[0m     @     0x55b6d10f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80048)[0m     @     0x55b6d1183baf _PyEval_EvalCodeWithName
[2m[36m(pid=80048)[0m     @     0x55b6d1184643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80048)[0m     @     0x55b6d10f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80048)[0m     @     0x55b6d1183baf _PyEval_EvalCodeWithName
[2m[36m(pid=80048)[0m     @     0x55b6d1184643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80048)[0m     @     0x55b6d10f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80048)[0m     @     0x55b6d1183baf _PyEval_EvalCodeWithName
[2m[36m(pid=80033)[0m     @     0x7f208863c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80033)[0m     @     0x7f208693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80033)[0m     @     0x7f2086a45148 at::Tensor::copy_()
[2m[36m(pid=80033)[0m     @     0x7f208ccfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80033)[0m     @     0x55ee066aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80033)[0m     @     0x55ee06605b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80033)[0m     @     0x55ee06690baf _PyEval_EvalCodeWithName
[2m[36m(pid=80033)[0m     @     0x55ee06691a20 method_vectorcall
[2m[36m(pid=80033)[0m     @     0x55ee06605bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80033)[0m     @     0x55ee06690baf _PyEval_EvalCodeWithName
[2m[36m(pid=80033)[0m     @     0x55ee06691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80033)[0m     @     0x55ee06606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80033)[0m     @     0x55ee06690baf _PyEval_EvalCodeWithName
[2m[36m(pid=80033)[0m     @     0x55ee06691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80033)[0m     @     0x55ee06606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80033)[0m     @     0x55ee06690baf _PyEval_EvalCodeWithName
[2m[36m(pid=80033)[0m     @     0x55ee06691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80033)[0m     @     0x55ee06606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80033)[0m     @     0x55ee06690baf _PyEval_EvalCodeWithName
[2m[36m(pid=80134)[0m     @     0x7f1e55b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80134)[0m     @     0x7f1e53e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80134)[0m     @     0x7f1e53f15148 at::Tensor::copy_()
[2m[36m(pid=80134)[0m     @     0x7f1e5a1cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80134)[0m     @     0x561cb49e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80134)[0m     @     0x561cb493db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80134)[0m     @     0x561cb49c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80134)[0m     @     0x561cb49c9a20 method_vectorcall
[2m[36m(pid=80134)[0m     @     0x561cb493dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80134)[0m     @     0x561cb49c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80134)[0m     @     0x561cb49c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80134)[0m     @     0x561cb493e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80134)[0m     @     0x561cb49c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80112)[0m     @     0x7fb5185bd148 at::Tensor::copy_()
[2m[36m(pid=80112)[0m     @     0x7fb51a1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80112)[0m     @     0x7fb5184b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80112)[0m     @     0x7fb5185bd148 at::Tensor::copy_()
[2m[36m(pid=80112)[0m     @     0x7fb51e873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80112)[0m     @     0x5597c6020fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80112)[0m     @     0x5597c5f7bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80112)[0m     @     0x5597c6006baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x7f8422e2a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80080)[0m     @     0x7f842112b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80080)[0m     @     0x7f8421233148 at::Tensor::copy_()
[2m[36m(pid=80080)[0m     @     0x7f84274e9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80080)[0m     @     0x55a5a90fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80080)[0m     @     0x55a5a9058b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80080)[0m     @     0x55a5a90e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x55a5a90e4a20 method_vectorcall
[2m[36m(pid=80080)[0m     @     0x55a5a9058bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80080)[0m     @     0x55a5a90e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x55a5a90e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80080)[0m     @     0x55a5a9059689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80080)[0m     @     0x55a5a90e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x55a5a90e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80080)[0m     @     0x55a5a9059689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80080)[0m     @     0x55a5a90e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80080)[0m     @     0x55a5a90e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80080)[0m     @     0x55a5a9059689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80080)[0m     @     0x55a5a90e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x7f85c83a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80111)[0m     @     0x7f85c84b1148 at::Tensor::copy_()
[2m[36m(pid=80111)[0m     @     0x7f85ca0a8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d1d420c3f at::native::copy_impl()
[2m[36m(pid=80035)[0m     @     0x7f6d1d421ed4 at::native::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d1db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80036)[0m     @     0x557419c7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80036)[0m     @     0x557419c7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80036)[0m     @     0x557419bf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80036)[0m     @     0x557419c7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80036)[0m     @     0x557419c7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80036)[0m     @     0x557419bf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80036)[0m     @     0x557419c7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80036)[0m     @     0x557419c7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80036)[0m     @     0x557419bf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80036)[0m     @     0x557419c7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80124)[0m     @     0x55d5cb61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80124)[0m     @     0x55d5cb61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80124)[0m     @     0x55d5cb591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80124)[0m     @     0x55d5cb61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x7fb341f59148 at::Tensor::copy_()
[2m[36m(pid=80046)[0m     @     0x7fb34820fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80046)[0m     @     0x55a166bfcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80046)[0m     @     0x55a166b57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80046)[0m     @     0x55a166be2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x55a166be3a20 method_vectorcall
[2m[36m(pid=80046)[0m     @     0x55a166b57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80046)[0m     @     0x55a166be2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x55a166be3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80046)[0m     @     0x55a166b58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80046)[0m     @     0x55a166be2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x55a166be3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80046)[0m     @     0x55a166b58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80055)[0m     @     0x56535ba83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80055)[0m     @     0x56535bb0fa20 method_vectorcall
[2m[36m(pid=80055)[0m     @     0x56535ba83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80055)[0m     @     0x56535bb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80055)[0m     @     0x56535ba84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80055)[0m     @     0x56535bb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80055)[0m     @     0x56535ba84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80055)[0m     @     0x56535bb0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80055)[0m     @     0x56535ba84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80055)[0m     @     0x56535bb0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x5570c336bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80091)[0m     @     0x5570c336c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80091)[0m     @     0x5570c32e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80091)[0m     @     0x5570c336bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x7fb79a3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80098)[0m     @     0x5586cd457fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80098)[0m     @     0x5586cd3b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80098)[0m     @     0x5586cd43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x5586cd43ea20 method_vectorcall
[2m[36m(pid=80098)[0m     @     0x5586cd3b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80098)[0m     @     0x5586cd43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x5586cd43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80098)[0m     @     0x5586cd3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80098)[0m     @     0x5586cd43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x5586cd43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80098)[0m     @     0x5586cd3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80098)[0m     @     0x5586cd43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80098)[0m     @     0x5586cd43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80098)[0m     @     0x5586cd3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80098)[0m     @     0x5586cd43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80025)[0m     @     0x7fad147a6148 at::Tensor::copy_()
[2m[36m(pid=80025)[0m     @     0x7fad1aa5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80025)[0m     @     0x55b8c9791fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80025)[0m     @     0x55b8c96ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80025)[0m     @     0x55b8c9777baf _PyEval_EvalCodeWithName
[2m[36m(pid=80025)[0m     @     0x55b8c9778a20 method_vectorcall
[2m[36m(pid=80025)[0m     @     0x55b8c96ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80025)[0m     @     0x55b8c9777baf _PyEval_EvalCodeWithName
[2m[36m(pid=80025)[0m     @     0x55b8c9778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80025)[0m     @     0x55b8c96ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80025)[0m     @     0x55b8c9777baf _PyEval_EvalCodeWithName
[2m[36m(pid=80025)[0m     @     0x55b8c9778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80025)[0m     @     0x55b8c96ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80025)[0m     @     0x55b8c9777baf _PyEval_EvalCodeWithName
[2m[36m(pid=80025)[0m     @     0x55b8c9778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80025)[0m     @     0x55b8c96ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80025)[0m     @     0x55b8c9777baf _PyEval_EvalCodeWithName
[2m[36m(pid=80137)[0m     @     0x7eda2ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80137)[0m     @     0x7eda2ad5b148 at::Tensor::copy_()
[2m[36m(pid=80137)[0m     @     0x7eda31011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80137)[0m     @     0x557e66371fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80137)[0m     @     0x557e662ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80137)[0m     @     0x557e66357baf _PyEval_EvalCodeWithName
[2m[36m(pid=80137)[0m     @     0x557e66358a20 method_vectorcall
[2m[36m(pid=80137)[0m     @     0x557e662ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80137)[0m     @     0x557e66357baf _PyEval_EvalCodeWithName
[2m[36m(pid=80137)[0m     @     0x557e66358643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80137)[0m     @     0x557e662cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80137)[0m     @     0x557e66357baf _PyEval_EvalCodeWithName
[2m[36m(pid=80137)[0m     @     0x557e66358643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80137)[0m     @     0x557e662cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80137)[0m     @     0x557e66357baf _PyEval_EvalCodeWithName
[2m[36m(pid=80137)[0m     @     0x557e66358643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80137)[0m     @     0x557e662cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80137)[0m     @     0x557e66357baf _PyEval_EvalCodeWithName
[2m[36m(pid=80147)[0m     @     0x7fa12634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80147)[0m     @     0x56440fa8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80147)[0m     @     0x56440f9e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80147)[0m     @     0x56440fa72baf _PyEval_EvalCodeWithName
[2m[36m(pid=80147)[0m     @     0x56440fa73a20 method_vectorcall
[2m[36m(pid=80147)[0m     @     0x56440f9e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80147)[0m     @     0x56440fa72baf _PyEval_EvalCodeWithName
[2m[36m(pid=80147)[0m     @     0x56440fa73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80147)[0m     @     0x56440f9e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80147)[0m     @     0x56440fa72baf _PyEval_EvalCodeWithName
[2m[36m(pid=80147)[0m     @     0x56440fa73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80147)[0m     @     0x56440f9e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80147)[0m     @     0x56440fa72baf _PyEval_EvalCodeWithName
[2m[36m(pid=80147)[0m     @     0x56440fa73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80147)[0m     @     0x56440f9e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80147)[0m     @     0x56440fa72baf _PyEval_EvalCodeWithName
[2m[36m(pid=80087)[0m     @     0x7fccca44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80087)[0m     @     0x7fccca553148 at::Tensor::copy_()
[2m[36m(pid=80087)[0m     @     0x7fccd0809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80087)[0m     @     0x55be26176fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80087)[0m     @     0x55be260d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80087)[0m     @     0x55be2615cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80087)[0m     @     0x55be2615da20 method_vectorcall
[2m[36m(pid=80087)[0m     @     0x55be260d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80087)[0m     @     0x55be2615cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80087)[0m     @     0x55be2615d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80087)[0m     @     0x55be260d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80087)[0m     @     0x55be2615cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80087)[0m     @     0x55be2615d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80087)[0m     @     0x55be260d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80087)[0m     @     0x55be2615cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80087)[0m     @     0x55be2615d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80087)[0m     @     0x55be260d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80087)[0m     @     0x55be2615cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x7f1fb891bed4 at::native::copy_()
[2m[36m(pid=80102)[0m     @     0x7f1fb905e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80034)[0m     @     0x7f08d2c67bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80034)[0m     @     0x55a1e0dadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80034)[0m     @     0x55a1e0d08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80034)[0m     @     0x55a1e0d93baf _PyEval_EvalCodeWithName
[2m[36m(pid=80034)[0m     @     0x55a1e0d94a20 method_vectorcall
[2m[36m(pid=80034)[0m     @     0x55a1e0d08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80034)[0m     @     0x55a1e0d93baf _PyEval_EvalCodeWithName
[2m[36m(pid=80034)[0m     @     0x55a1e0d94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80034)[0m     @     0x55a1e0d09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80034)[0m     @     0x55a1e0d93baf _PyEval_EvalCodeWithName
[2m[36m(pid=80034)[0m     @     0x55a1e0d94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80034)[0m     @     0x55a1e0d09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80034)[0m     @     0x55a1e0d93baf _PyEval_EvalCodeWithName
[2m[36m(pid=80034)[0m     @     0x55a1e0d94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80034)[0m     @     0x55a1e0d09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80034)[0m     @     0x55a1e0d93baf _PyEval_EvalCodeWithName
[2m[36m(pid=80153)[0m     @     0x559a1d80e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80153)[0m     @     0x559a1d783689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80153)[0m     @     0x559a1d80dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x7f39b6b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80026)[0m     @     0x7f39b6c56148 at::Tensor::copy_()
[2m[36m(pid=80026)[0m     @     0x7f39bcf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80026)[0m     @     0x556f8df4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80026)[0m     @     0x556f8deaab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80026)[0m     @     0x556f8df35baf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x556f8df36a20 method_vectorcall
[2m[36m(pid=80026)[0m     @     0x556f8deaabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80026)[0m     @     0x556f8df35baf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x556f8df36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80026)[0m     @     0x556f8deab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80026)[0m     @     0x556f8df35baf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x556f8df36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80026)[0m     @     0x556f8deab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80026)[0m     @     0x556f8df35baf _PyEval_EvalCodeWithName
[2m[36m(pid=80026)[0m     @     0x556f8df36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80026)[0m     @     0x556f8deab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80026)[0m     @     0x556f8df35baf _PyEval_EvalCodeWithName
[2m[36m(pid=80044)[0m     @     0x55e76b6b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=80044)[0m     @     0x55e76b6b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80044)[0m     @     0x55e76b62a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80044)[0m     @     0x55e76b6b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=80133)[0m     @     0x7eceeb5fa148 at::Tensor::copy_()
[2m[36m(pid=80133)[0m     @     0x7ecef18b0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80133)[0m     @     0x564f48fddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80133)[0m     @     0x564f48f38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x564f48fc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80133)[0m     @     0x564f48fc4a20 method_vectorcall
[2m[36m(pid=80133)[0m     @     0x564f48f38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x564f48fc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80133)[0m     @     0x564f48fc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80133)[0m     @     0x564f48f39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x564f48fc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80133)[0m     @     0x564f48fc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80133)[0m     @     0x564f48f39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x564f48fc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80133)[0m     @     0x564f48fc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80133)[0m     @     0x564f48f39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80133)[0m     @     0x564f48fc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x7f8c893dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80105)[0m     @     0x55a5c2825fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80105)[0m     @     0x55a5c2780b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80105)[0m     @     0x55a5c280bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x55a5c280ca20 method_vectorcall
[2m[36m(pid=80105)[0m     @     0x55a5c2780bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80105)[0m     @     0x55a5c280bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x55a5c280c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80105)[0m     @     0x55a5c2781689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80105)[0m     @     0x55a5c280bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x55a5c280c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80105)[0m     @     0x55a5c2781689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80105)[0m     @     0x55a5c280bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80105)[0m     @     0x55a5c280c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80105)[0m     @     0x55a5c2781689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80105)[0m     @     0x55a5c280bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80106)[0m     @     0x7f0a92bc4148 at::Tensor::copy_()
[2m[36m(pid=80106)[0m     @     0x7f0a98e7abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80106)[0m     @     0x55f8d497afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80106)[0m     @     0x55f8d48d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80106)[0m     @     0x55f8d4960baf _PyEval_EvalCodeWithName
[2m[36m(pid=80106)[0m     @     0x55f8d4961a20 method_vectorcall
[2m[36m(pid=80106)[0m     @     0x55f8d48d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80106)[0m     @     0x55f8d4960baf _PyEval_EvalCodeWithName
[2m[36m(pid=80106)[0m     @     0x55f8d4961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80106)[0m     @     0x55f8d48d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80106)[0m     @     0x55f8d4960baf _PyEval_EvalCodeWithName
[2m[36m(pid=80106)[0m     @     0x55f8d4961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80106)[0m     @     0x55f8d48d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80106)[0m     @     0x55f8d4960baf _PyEval_EvalCodeWithName
[2m[36m(pid=80106)[0m     @     0x55f8d4961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80106)[0m     @     0x55f8d48d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80106)[0m     @     0x55f8d4960baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x7f7ed82e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80101)[0m     @     0x562cf0053fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80101)[0m     @     0x562ceffaeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80101)[0m     @     0x562cf0039baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x562cf003aa20 method_vectorcall
[2m[36m(pid=80101)[0m     @     0x562ceffaebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80101)[0m     @     0x562cf0039baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x562cf003a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80101)[0m     @     0x562ceffaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80101)[0m     @     0x562cf0039baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x562cf003a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80101)[0m     @     0x562ceffaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80101)[0m     @     0x562cf0039baf _PyEval_EvalCodeWithName
[2m[36m(pid=80101)[0m     @     0x562cf003a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80101)[0m     @     0x562ceffaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80101)[0m     @     0x562cf0039baf _PyEval_EvalCodeWithName
[2m[36m(pid=80118)[0m     @     0x7f1d8d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80118)[0m     @     0x7f1d8d32b148 at::Tensor::copy_()
[2m[36m(pid=80118)[0m     @     0x7f1d935e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80118)[0m     @     0x55a67b117fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80118)[0m     @     0x55a67b072b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80118)[0m     @     0x55a67b0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80118)[0m     @     0x55a67b0fea20 method_vectorcall
[2m[36m(pid=80086)[0m     @     0x56236eaf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80086)[0m     @     0x56236ea65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80086)[0m     @     0x56236eaefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80086)[0m     @     0x56236eaf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80086)[0m     @     0x56236ea65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80086)[0m     @     0x56236eaefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80086)[0m     @     0x56236eaf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80086)[0m     @     0x56236ea65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80086)[0m     @     0x56236eaefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x7f8be866d148 at::Tensor::copy_()
[2m[36m(pid=80138)[0m     @     0x7f8bee923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80138)[0m     @     0x5600c86edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80138)[0m     @     0x5600c8648b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80138)[0m     @     0x5600c86d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x5600c86d4a20 method_vectorcall
[2m[36m(pid=80138)[0m     @     0x5600c8648bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80138)[0m     @     0x5600c86d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x5600c86d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80138)[0m     @     0x5600c8649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80138)[0m     @     0x5600c86d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x5600c86d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80138)[0m     @     0x5600c8649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80138)[0m     @     0x5600c86d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80138)[0m     @     0x5600c86d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80138)[0m     @     0x5600c8649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80138)[0m     @     0x5600c86d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=80039)[0m     @     0x55c3cde2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80039)[0m     @     0x55c3cdeb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x7fc4bcbe7148 at::Tensor::copy_()
[2m[36m(pid=80056)[0m     @     0x7fc4c2e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80056)[0m     @     0x5633e2eaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80056)[0m     @     0x5633e2e09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80056)[0m     @     0x5633e2e94baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x5633e2e95a20 method_vectorcall
[2m[36m(pid=80056)[0m     @     0x5633e2e09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80056)[0m     @     0x5633e2e94baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x5633e2e95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80056)[0m     @     0x5633e2e0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80056)[0m     @     0x5633e2e94baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x5633e2e95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80056)[0m     @     0x5633e2e0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80056)[0m     @     0x5633e2e94baf _PyEval_EvalCodeWithName
[2m[36m(pid=80056)[0m     @     0x5633e2e95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80056)[0m     @     0x5633e2e0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80056)[0m     @     0x5633e2e94baf _PyEval_EvalCodeWithName
[2m[36m(pid=80134)[0m     @     0x561cb49c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80134)[0m     @     0x561cb493e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80134)[0m     @     0x561cb49c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80134)[0m     @     0x561cb49c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80134)[0m     @     0x561cb493e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80134)[0m     @     0x561cb49c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=80112)[0m     @     0x5597c6007a20 method_vectorcall
[2m[36m(pid=80112)[0m     @     0x5597c5f7bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80112)[0m     @     0x5597c6006baf _PyEval_EvalCodeWithName
[2m[36m(pid=80112)[0m     @     0x5597c6007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80112)[0m     @     0x5597c5f7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80112)[0m     @     0x5597c6006baf _PyEval_EvalCodeWithName
[2m[36m(pid=80112)[0m     @     0x5597c6007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80112)[0m     @     0x5597c5f7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80112)[0m     @     0x5597c6006baf _PyEval_EvalCodeWithName
[2m[36m(pid=80112)[0m     @     0x5597c6007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80112)[0m     @     0x5597c5f7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80112)[0m     @     0x5597c6006baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x7f85c83a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80111)[0m     @     0x7f85c84b1148 at::Tensor::copy_()
[2m[36m(pid=80111)[0m     @     0x7f85ce767bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80111)[0m     @     0x559a0d26afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80111)[0m     @     0x559a0d1c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80111)[0m     @     0x559a0d250baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x559a0d251a20 method_vectorcall
[2m[36m(pid=80111)[0m     @     0x559a0d1c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80111)[0m     @     0x559a0d250baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x559a0d251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80111)[0m     @     0x559a0d1c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80111)[0m     @     0x559a0d250baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x559a0d251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80111)[0m     @     0x559a0d1c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80111)[0m     @     0x559a0d250baf _PyEval_EvalCodeWithName
[2m[36m(pid=80111)[0m     @     0x559a0d251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80111)[0m     @     0x559a0d1c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80111)[0m     @     0x559a0d250baf _PyEval_EvalCodeWithName
[2m[36m(pid=80035)[0m     @     0x7f6d1dc6c148 at::Tensor::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d1f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d1db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80035)[0m     @     0x7f6d1dc6c148 at::Tensor::copy_()
[2m[36m(pid=80035)[0m     @     0x7f6d23f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80035)[0m     @     0x55568ca5efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80035)[0m     @     0x55568c9b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80035)[0m     @     0x55568ca44baf _PyEval_EvalCodeWithName
[2m[36m(pid=80035)[0m     @     0x55568ca45a20 method_vectorcall
[2m[36m(pid=80035)[0m     @     0x55568c9b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80035)[0m     @     0x55568ca44baf _PyEval_EvalCodeWithName
[2m[36m(pid=80035)[0m     @     0x55568ca45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80035)[0m     @     0x55568c9ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80035)[0m     @     0x55568ca44baf _PyEval_EvalCodeWithName
[2m[36m(pid=80035)[0m     @     0x55568ca45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80046)[0m     @     0x55a166be2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80046)[0m     @     0x55a166be3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80046)[0m     @     0x55a166b58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80046)[0m     @     0x55a166be2baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x7f1fb9166148 at::Tensor::copy_()
[2m[36m(pid=80102)[0m     @     0x7f1fbad5d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80118)[0m     @     0x55a67b072bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80118)[0m     @     0x55a67b0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80118)[0m     @     0x55a67b0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80118)[0m     @     0x55a67b073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80118)[0m     @     0x55a67b0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80118)[0m     @     0x55a67b0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80118)[0m     @     0x55a67b073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80118)[0m     @     0x55a67b0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80118)[0m     @     0x55a67b0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80118)[0m     @     0x55a67b073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80118)[0m     @     0x55a67b0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=80128)[0m     @     0x7f4350cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=80128)[0m     @     0x7f4350cf0c3f at::native::copy_impl()
[2m[36m(pid=80128)[0m     @     0x7f4350cf1ed4 at::native::copy_()
[2m[36m(pid=80128)[0m     @     0x7f43514345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80035)[0m     @     0x55568c9ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80035)[0m     @     0x55568ca44baf _PyEval_EvalCodeWithName
[2m[36m(pid=80035)[0m     @     0x55568ca45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80035)[0m     @     0x55568c9ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80035)[0m     @     0x55568ca44baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x7f1fb905e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=80102)[0m     @     0x7f1fb9166148 at::Tensor::copy_()
[2m[36m(pid=80102)[0m     @     0x7f1fbf41cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=80102)[0m     @     0x5585fbb9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=80102)[0m     @     0x5585fbaf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80102)[0m     @     0x5585fbb81baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x5585fbb82a20 method_vectorcall
[2m[36m(pid=80102)[0m     @     0x5585fbaf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80102)[0m     @     0x5585fbb81baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x5585fbb82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80102)[0m     @     0x5585fbaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80102)[0m     @     0x5585fbb81baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x5585fbb82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80102)[0m     @     0x5585fbaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80102)[0m     @     0x5585fbb81baf _PyEval_EvalCodeWithName
[2m[36m(pid=80102)[0m     @     0x5585fbb82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=80128)[0m     @     0x7f435153c148 at::Tensor::copy_()
[2m[36m(pid=80102)[0m     @     0x5585fbaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=80102)[0m     @     0x5585fbb81baf _PyEval_EvalCodeWithName
[2m[36m(pid=80128)[0m     @     0x7f4353133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=80128)[0m     @     0x7f43514345cc c10::Dispatcher::callWithDispatchKey<>()
2020-11-05 10:56:32,255	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:56:32,258	ERROR trial_runner.py:567 -- Trial PPO_jss_env_8c024_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=80122, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 25.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.86 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c024_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8c024_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8c024_00000_0_2020-11-05_10-56-24/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:56:32,267	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:56:32,267	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 24.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.86 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8c024_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8c024_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8c024_00000_0_2020-11-05_10-56-24/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_8c024_00000])
