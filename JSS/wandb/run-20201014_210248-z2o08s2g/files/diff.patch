diff --git a/JSS/.ipynb_checkpoints/PPO-checkpoint.ipynb b/JSS/.ipynb_checkpoints/PPO-checkpoint.ipynb
index 4ec3a0c..4e2b290 100644
--- a/JSS/.ipynb_checkpoints/PPO-checkpoint.ipynb
+++ b/JSS/.ipynb_checkpoints/PPO-checkpoint.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [
     {
@@ -74,15 +74,15 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 14,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Create sweep with ID: 1x8v92mc\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\n"
+      "Create sweep with ID: po3ygyxo\n",
+      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\n"
      ]
     }
    ],
@@ -92,7 +92,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [
     {
@@ -100,67 +100,425 @@
      "output_type": "stream",
      "text": [
       "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-13 11:45:51,946 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-13 11:45:52,259 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 11:45:52,260 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "2020-10-14 20:43:27,735 - wandb.wandb_agent - INFO - Running runs: []\n",
+      "2020-10-14 20:43:31,145 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:43:31,145 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
       "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-13 11:45:52,261 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python RandomGreedy.py --instance_path=/JSS/JSS/env/instances/ta51\n",
+      "2020-10-14 20:43:31,147 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta51\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mrandom\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3qwfavbb\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_114553-3qwfavbb\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/9bbl2cxc\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204333-9bbl2cxc\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
-      "2020-10-13 11:45:57,278 - wandb.wandb_agent - INFO - Running runs: ['3qwfavbb']\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 39394\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3282\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:43:36,159 - wandb.wandb_agent - INFO - Running runs: ['9bbl2cxc']\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201013_114553-3qwfavbb/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201013_114553-3qwfavbb/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204333-9bbl2cxc/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204333-9bbl2cxc/logs/debug-internal.log\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 4473\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 261.82891\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 280.71717\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     time_step_min 3203\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 197.38384\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 197.38384\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3753\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 607\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602590160\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708214\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     time_step_min ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mrandom\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3qwfavbb\u001b[0m\n",
-      "2020-10-13 11:56:07,517 - wandb.wandb_agent - INFO - Cleaning up finished run: 3qwfavbb\n",
-      "2020-10-13 11:56:07,847 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 11:56:07,847 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/9bbl2cxc\u001b[0m\n",
+      "2020-10-14 20:43:41,380 - wandb.wandb_agent - INFO - Cleaning up finished run: 9bbl2cxc\n",
+      "2020-10-14 20:43:41,772 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:43:41,772 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
       "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
-      "2020-10-13 11:56:07,849 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python RandomGreedy.py --instance_path=/JSS/JSS/env/instances/ta52\n",
+      "2020-10-14 20:43:41,774 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta52\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mrandom\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/av30c7rd\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_115608-av30c7rd\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/frw3hck3\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204343-frw3hck3\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
-      "2020-10-13 11:56:12,862 - wandb.wandb_agent - INFO - Running runs: ['av30c7rd']\n"
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3372\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:43:46,790 - wandb.wandb_agent - INFO - Running runs: ['frw3hck3']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204343-frw3hck3/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204343-frw3hck3/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 163.86869\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 163.86869\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3871\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 2\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708225\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/frw3hck3\u001b[0m\n",
+      "2020-10-14 20:43:52,006 - wandb.wandb_agent - INFO - Cleaning up finished run: frw3hck3\n",
+      "2020-10-14 20:43:52,326 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:43:52,327 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta53\n",
+      "2020-10-14 20:43:52,329 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta53\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/o0hyb863\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204354-o0hyb863\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3461\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:43:57,342 - wandb.wandb_agent - INFO - Running runs: ['o0hyb863']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204354-o0hyb863/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204354-o0hyb863/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 180.92929\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 180.92929\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3790\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708235\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/o0hyb863\u001b[0m\n",
+      "2020-10-14 20:44:02,563 - wandb.wandb_agent - INFO - Cleaning up finished run: o0hyb863\n",
+      "2020-10-14 20:44:02,910 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:02,911 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta54\n",
+      "2020-10-14 20:44:02,913 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta54\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/802owiob\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204405-802owiob\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3552\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:44:07,929 - wandb.wandb_agent - INFO - Running runs: ['802owiob']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204405-802owiob/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204405-802owiob/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 201.68687\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 201.68687\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3601\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708246\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/802owiob\u001b[0m\n",
+      "2020-10-14 20:44:13,147 - wandb.wandb_agent - INFO - Cleaning up finished run: 802owiob\n",
+      "2020-10-14 20:44:13,451 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:13,451 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta55\n",
+      "2020-10-14 20:44:13,453 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta55\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ix8moovg\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204415-ix8moovg\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3642\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:44:18,469 - wandb.wandb_agent - INFO - Running runs: ['ix8moovg']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204415-ix8moovg/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204415-ix8moovg/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 224.37374\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 224.37374\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3435\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708256\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ix8moovg\u001b[0m\n",
+      "2020-10-14 20:44:23,694 - wandb.wandb_agent - INFO - Cleaning up finished run: ix8moovg\n",
+      "2020-10-14 20:44:24,023 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:24,023 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta56\n",
+      "2020-10-14 20:44:24,025 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta56\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/zda8eskt\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204426-zda8eskt\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3726\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:44:29,037 - wandb.wandb_agent - INFO - Running runs: ['zda8eskt']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204426-zda8eskt/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204426-zda8eskt/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 178.59596\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 178.59596\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3881\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708267\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/zda8eskt\u001b[0m\n",
+      "2020-10-14 20:44:34,252 - wandb.wandb_agent - INFO - Cleaning up finished run: zda8eskt\n",
+      "2020-10-14 20:44:36,273 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:36,273 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta57\n",
+      "2020-10-14 20:44:36,275 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta57\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/uz9lk4hk\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204438-uz9lk4hk\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3824\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:44:41,292 - wandb.wandb_agent - INFO - Running runs: ['uz9lk4hk']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204438-uz9lk4hk/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204438-uz9lk4hk/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 209.43434\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 209.43434\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3742\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708279\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/uz9lk4hk\u001b[0m\n",
+      "2020-10-14 20:44:46,515 - wandb.wandb_agent - INFO - Cleaning up finished run: uz9lk4hk\n",
+      "2020-10-14 20:44:46,834 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:46,834 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta58\n",
+      "2020-10-14 20:44:46,836 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta58\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/i1pzxngg\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204448-i1pzxngg\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3912\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:44:51,849 - wandb.wandb_agent - INFO - Running runs: ['i1pzxngg']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204448-i1pzxngg/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204448-i1pzxngg/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 209.89899\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 209.89899\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3826\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708290\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/i1pzxngg\u001b[0m\n",
+      "2020-10-14 20:44:57,073 - wandb.wandb_agent - INFO - Cleaning up finished run: i1pzxngg\n",
+      "2020-10-14 20:44:57,383 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:44:57,384 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta59\n",
+      "2020-10-14 20:44:57,386 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta59\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3kcee9dt\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204459-3kcee9dt\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3998\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:45:02,401 - wandb.wandb_agent - INFO - Running runs: ['3kcee9dt']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204459-3kcee9dt/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204459-3kcee9dt/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 211.84848\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 211.84848\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3517\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708300\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3kcee9dt\u001b[0m\n",
+      "2020-10-14 20:45:07,613 - wandb.wandb_agent - INFO - Cleaning up finished run: 3kcee9dt\n",
+      "2020-10-14 20:45:10,058 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:45:10,059 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta60\n",
+      "2020-10-14 20:45:10,061 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta60\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/kkype8ue\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204512-kkype8ue\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 4096\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
+      "2020-10-14 20:45:15,074 - wandb.wandb_agent - INFO - Running runs: ['kkype8ue']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204512-kkype8ue/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204512-kkype8ue/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 197.64646\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 197.64646\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3735\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708313\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/kkype8ue\u001b[0m\n",
+      "2020-10-14 20:45:20,294 - wandb.wandb_agent - INFO - Cleaning up finished run: kkype8ue\n",
+      "2020-10-14 20:45:20,607 - wandb.wandb_agent - INFO - Agent received command: exit\n",
+      "2020-10-14 20:45:20,607 - wandb.wandb_agent - INFO - Received exit command. Killing runs and quitting.\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Terminating and syncing runs. Press ctrl-c to kill.\n"
      ]
     }
    ],
    "source": [
-    "!wandb agent 1x8v92mc"
+    "!wandb agent po3ygyxo"
    ]
   },
   {
diff --git a/JSS/.ipynb_checkpoints/default_config-checkpoint.py b/JSS/.ipynb_checkpoints/default_config-checkpoint.py
index 46f4d10..4729210 100644
--- a/JSS/.ipynb_checkpoints/default_config-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/default_config-checkpoint.py
@@ -6,7 +6,7 @@ default_config = {
     'env': 'jss_env',
     'seed': 0,
     'framework': 'torch',
-    'log_level': 'INFO',
+    'log_level': 'WARN',
     'num_gpus': 1,
     'instance_path': '/JSS/JSS/env/instances/ta51',
     'num_envs_per_worker': 2,
diff --git a/JSS/.ipynb_checkpoints/train-checkpoint.py b/JSS/.ipynb_checkpoints/train-checkpoint.py
index d4ac941..3400140 100644
--- a/JSS/.ipynb_checkpoints/train-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/train-checkpoint.py
@@ -50,7 +50,7 @@ def train_func():
     ray.init()
 
     stop = {
-        "time_total_s": 60 * 60,
+        "time_total_s": 3 * 60 * 60,
     }
 
     analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
diff --git a/JSS/PPO.ipynb b/JSS/PPO.ipynb
index 23b572b..32be34a 100644
--- a/JSS/PPO.ipynb
+++ b/JSS/PPO.ipynb
@@ -2,17 +2,9 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "I have detected 80 CPUs here, so I'm going to create 79 actors\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "import os\n",
     "import multiprocessing as mp\n",
@@ -56,7 +48,7 @@
     "    print(\"I have detected {} CPUs here, so I'm going to create {} actors\".format(mp.cpu_count(), mp.cpu_count() - 1))\n",
     "    os.environ[\"WANDB_API_KEY\"] = '3487a01956bf67cc7882bca2a38f70c8c95f8463'\n",
     "    sweep_config = {\n",
-    "        'program': 'MTWR.py',\n",
+    "        'program': 'train.py',\n",
     "        'method': 'grid',\n",
     "        'metric': {\n",
     "            'name': 'time_step_min',\n",
@@ -74,25 +66,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Create sweep with ID: po3ygyxo\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "sweep_id = wandb.sweep(sweep_config, project=\"RLLIB_SWEEP_2\")"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -100,425 +83,9431 @@
      "output_type": "stream",
      "text": [
       "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-14 20:43:27,735 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-14 20:43:31,145 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:43:31,145 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "2020-10-14 20:54:08,635 - wandb.wandb_agent - INFO - Running runs: []\n",
+      "2020-10-14 20:54:10,257 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:54:10,257 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
       "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-14 20:43:31,147 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta51\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/9bbl2cxc\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204333-9bbl2cxc\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3282\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:43:36,159 - wandb.wandb_agent - INFO - Running runs: ['9bbl2cxc']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204333-9bbl2cxc/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204333-9bbl2cxc/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 197.38384\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 197.38384\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3753\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708214\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/9bbl2cxc\u001b[0m\n",
-      "2020-10-14 20:43:41,380 - wandb.wandb_agent - INFO - Cleaning up finished run: 9bbl2cxc\n",
-      "2020-10-14 20:43:41,772 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:43:41,772 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
-      "2020-10-14 20:43:41,774 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta52\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/frw3hck3\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204343-frw3hck3\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3372\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:43:46,790 - wandb.wandb_agent - INFO - Running runs: ['frw3hck3']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204343-frw3hck3/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204343-frw3hck3/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 163.86869\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 163.86869\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3871\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 2\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708225\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/frw3hck3\u001b[0m\n",
-      "2020-10-14 20:43:52,006 - wandb.wandb_agent - INFO - Cleaning up finished run: frw3hck3\n",
-      "2020-10-14 20:43:52,326 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:43:52,327 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta53\n",
-      "2020-10-14 20:43:52,329 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta53\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/o0hyb863\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204354-o0hyb863\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3461\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:43:57,342 - wandb.wandb_agent - INFO - Running runs: ['o0hyb863']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204354-o0hyb863/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204354-o0hyb863/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 180.92929\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 180.92929\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3790\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708235\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/o0hyb863\u001b[0m\n",
-      "2020-10-14 20:44:02,563 - wandb.wandb_agent - INFO - Cleaning up finished run: o0hyb863\n",
-      "2020-10-14 20:44:02,910 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:02,911 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta54\n",
-      "2020-10-14 20:44:02,913 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta54\n",
+      "2020-10-14 20:54:10,259 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python train.py --instance_path=/JSS/JSS/env/instances/ta51\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mchocolate-sweep-1\u001b[0m\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/802owiob\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204405-802owiob\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/kdrms7i3\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/8xpxlznr\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_205412-8xpxlznr\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
+      "2020-10-14 20:54:15,277 - wandb.wandb_agent - INFO - Running runs: ['8xpxlznr']\n",
+      "2020-10-14 20:54:15,845\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
+      "== Status ==\n",
+      "Memory usage on this node: 11.5/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.4 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 RUNNING)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_6c9b8_00000 | RUNNING  |       |\n",
+      "+-------------------------+----------+-------+\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3552\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:44:07,929 - wandb.wandb_agent - INFO - Running runs: ['802owiob']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204405-802owiob/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204405-802owiob/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 201.68687\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 201.68687\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3601\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708246\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/802owiob\u001b[0m\n",
-      "2020-10-14 20:44:13,147 - wandb.wandb_agent - INFO - Cleaning up finished run: 802owiob\n",
-      "2020-10-14 20:44:13,451 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:13,451 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta55\n",
-      "2020-10-14 20:44:13,453 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta55\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ix8moovg\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204415-ix8moovg\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
+      "\u001b[2m\u001b[36m(pid=459)\u001b[0m 2020-10-14 20:54:18,628\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=464)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=464)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=422)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=422)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=444)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=444)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=423)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=423)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=404)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=404)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=382)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=382)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=446)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=446)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=419)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=419)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=352)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=352)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=380)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=380)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "2020-10-14 20:54:28,028\tERROR trial_runner.py:567 -- Trial PPO_jss_env_6c9b8_00000: Error processing event.\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py\", line 515, in _process_trial\n",
+      "    result = self.trial_executor.fetch_result(trial)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py\", line 488, in fetch_result\n",
+      "    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1428, in get\n",
+      "    raise value.as_instanceof_cause()\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::PPO.train()\u001b[39m (pid=459, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 516, in train\n",
+      "    raise e\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 505, in train\n",
+      "    result = Trainable.train(self)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py\", line 336, in train\n",
+      "    result = self.step()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py\", line 134, in step\n",
+      "    res = next(self.train_exec_impl)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 756, in __next__\n",
+      "    return next(self.built_iterator)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  [Previous line repeated 1 more time]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 876, in apply_flatten\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 828, in add_wait_hooks\n",
+      "    item = next(it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  [Previous line repeated 1 more time]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 471, in base_iterator\n",
+      "    yield ray.get(futures, timeout=timeout)\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RolloutWorker.par_iter_next()\u001b[39m (pid=464, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([1.00000000e+00, 0.00000000e+00, 8.00000000e-01, 5.23076923e-01,\n",
+      "       8.28282828e-01, 3.30256410e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.24242424e-01, 6.66666667e-01, 5.10769231e-01, 9.09090909e-02,\n",
+      "       3.28205128e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 6.07179487e-01, 2.62626263e-01, 2.87179487e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.64646465e-01, 6.66666667e-01,\n",
+      "       7.17948718e-01, 1.31313131e-01, 3.89743590e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 3.25128205e-01,\n",
+      "       5.25252525e-01, 2.01025641e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 5.28205128e-01, 2.02020202e-02,\n",
+      "       9.84615385e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 4.08205128e-01, 7.37373737e-01, 1.13846154e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.00000000e-01,\n",
+      "       6.07179487e-01, 2.52525253e-01, 2.50256410e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,\n",
+      "       8.08080808e-02, 2.76923077e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 5.33333333e-01, 3.63076923e-01, 1.11111111e-01,\n",
+      "       5.74358974e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       9.33333333e-01, 6.54358974e-01, 4.64646465e-01, 1.29230769e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       4.07179487e-01, 3.33333333e-01, 4.20512821e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 2.72727273e-01, 3.33333333e-01, 3.46666667e-01,\n",
+      "       1.01010101e-01, 2.05128205e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.35353535e-01, 4.66666667e-01, 3.29230769e-01, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 7.06666667e-01, 1.00000000e+00, 8.61538462e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,\n",
+      "       6.96410256e-01, 1.00000000e+00, 5.18974359e-03, 0.00000000e+00,\n",
+      "       1.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.90256410e-01,\n",
+      "       0.00000000e+00, 5.74358974e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.04040404e-02, 6.00000000e-01, 5.98974359e-01, 7.37373737e-01,\n",
+      "       4.84102564e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       9.33333333e-01, 5.46666667e-01, 4.54545455e-01, 3.07692308e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.05050505e-02, 6.66666667e-01,\n",
+      "       5.35384615e-01, 2.82828283e-01, 2.52307692e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 5.06666667e-01,\n",
+      "       5.05050505e-01, 3.44615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.48205128e-01, 4.64646465e-01,\n",
+      "       1.36205128e-02, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       4.00000000e-01, 2.78974359e-01, 6.96969697e-01, 3.03589744e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       3.61025641e-01, 7.07070707e-02, 7.17948718e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.02564103e-01,\n",
+      "       5.25252525e-01, 1.64102564e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       3.03030303e-01, 3.33333333e-01, 4.11282051e-01, 4.34343434e-01,\n",
+      "       5.94871795e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 4.98461538e-01, 2.52525253e-01, 6.76923077e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       6.85128205e-01, 4.04040404e-01, 1.64102564e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.38461538e-01,\n",
+      "       2.02020202e-02, 3.48717949e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       3.48717949e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 3.24102564e-01, 8.58585859e-01, 6.56410256e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.14141414e-01, 6.66666667e-01,\n",
+      "       6.56410256e-01, 2.02020202e-01, 7.24102564e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.41025641e-01,\n",
+      "       6.46464646e-01, 1.98974359e-03, 0.00000000e+00, 1.00000000e+00,\n",
+      "       0.00000000e+00, 8.66666667e-01, 5.18974359e-01, 6.26262626e-01,\n",
+      "       1.27179487e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 5.88717949e-01, 9.89898990e-01, 9.23076923e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,\n",
+      "       9.70256410e-01, 1.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.09743590e-01,\n",
+      "       5.15151515e-01, 2.33846154e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.00000000e-01, 4.22564103e-01, 7.57575758e-01,\n",
+      "       2.11282051e-03, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 7.56923077e-01, 3.73737374e-01, 4.69743590e-03,\n",
+      "       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 8.00000000e-01,\n",
+      "       5.06666667e-01, 2.02020202e-02, 4.10256410e-05, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 7.58974359e-01,\n",
+      "       1.00000000e+00, 3.38461538e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.62626263e-01, 5.33333333e-01, 4.99487179e-01, 3.73737374e-01,\n",
+      "       6.89230769e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.66666667e-01, 5.56923077e-01, 4.14141414e-01, 1.76410256e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       5.56923077e-01, 8.98989899e-01, 1.01538462e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 8.03076923e-01,\n",
+      "       5.15151515e-01, 1.84615385e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 5.24102564e-01, 4.54545455e-01,\n",
+      "       1.64102564e-03, 0.00000000e+00, 0.00000000e+00, 3.53535354e-01,\n",
+      "       8.66666667e-01, 7.44615385e-01, 5.25252525e-01, 1.06666667e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.23232323e-01, 8.00000000e-01,\n",
+      "       7.57948718e-01, 2.92929293e-01, 5.94871795e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.76923077e-01,\n",
+      "       5.65656566e-01, 3.83589744e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.56565657e-01, 6.66666667e-01, 4.69743590e-01, 4.04040404e-01,\n",
+      "       8.20512821e-04, 0.00000000e+00]), 'action_mask': array([ True, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False,  True, False,\n",
+      "       False, False, False, False,  True, False, False, False, False,\n",
+      "       False, False, False, False, False, False,  True, False, False,\n",
+      "       False, False,  True,  True, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False])})\n",
+      "== Status ==\n",
+      "Memory usage on this node: 24.2/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.4 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_6c9b8_00000 | ERROR    |       |\n",
+      "+-------------------------+----------+-------+\n",
+      "Number of errored trials: 1\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
+      "| Trial name              |   # failures | error file                                                                        |\n",
+      "|-------------------------+--------------+-----------------------------------------------------------------------------------|\n",
+      "| PPO_jss_env_6c9b8_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6c9b8_00000_0_2020-10-14_20-54-17/error.txt |\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3642\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:44:18,469 - wandb.wandb_agent - INFO - Running runs: ['ix8moovg']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204415-ix8moovg/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204415-ix8moovg/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 224.37374\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 224.37374\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3435\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708256\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ix8moovg\u001b[0m\n",
-      "2020-10-14 20:44:23,694 - wandb.wandb_agent - INFO - Cleaning up finished run: ix8moovg\n",
-      "2020-10-14 20:44:24,023 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:24,023 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta56\n",
-      "2020-10-14 20:44:24,025 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta56\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/zda8eskt\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204426-zda8eskt\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "== Status ==\n",
+      "Memory usage on this node: 24.2/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.4 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_6c9b8_00000 | ERROR    |       |\n",
+      "+-------------------------+----------+-------+\n",
+      "Number of errored trials: 1\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
+      "| Trial name              |   # failures | error file                                                                        |\n",
+      "|-------------------------+--------------+-----------------------------------------------------------------------------------|\n",
+      "| PPO_jss_env_6c9b8_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6c9b8_00000_0_2020-10-14_20-54-17/error.txt |\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
       "\n",
+      "Traceback (most recent call last):\n",
+      "  File \"train.py\", line 74, in <module>\n",
+      "    train_func()\n",
+      "  File \"train.py\", line 56, in train_func\n",
+      "    analysis = tune.run(PPOTrainer, config=config, stop=stop, name=\"ppo-jss\")\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py\", line 427, in run\n",
+      "    raise TuneError(\"Trials did not complete\", incomplete_trials)\n",
+      "ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_6c9b8_00000])\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3726\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:44:29,037 - wandb.wandb_agent - INFO - Running runs: ['zda8eskt']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 236\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program failed with code 1.  Press ctrl-c to abort syncing.\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m 2020-10-14 20:54:28,117\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/activation.py\", line 102, in forward\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     return F.relu(input, inplace=self.inplace)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1119, in relu\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     result = torch.relu(input)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m 2020-10-14 20:54:28,112\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 819, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     episode._set_last_raw_obs(agent_id, raw_obs)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/episode.py\", line 201, in _set_last_raw_obs\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     self._agent_to_last_raw_obs[agent_id] = obs\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=365)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=476)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 58, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     if torch.is_tensor(item):\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=396)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 725, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     self._forward_hooks.values()):\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=384)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 72, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     logp = action_dist.sampled_action_logp()\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 50, in sampled_action_logp\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return self.logp(self.last_sample)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 32, in logp\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return self.dist.log_prob(actions)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 113, in log_prob\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     value, log_pmf = torch.broadcast_tensors(value, self.logits)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/functional.py\", line 65, in broadcast_tensors\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return _VF.broadcast_tensors(tensors)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/_VF.py\", line 14, in __getattr__\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     return getattr(self.vf, attr)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=361)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/JSS/JSS/models.py\", line 35, in forward\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     inf_mask = torch.clamp(torch.log(action_mask), min=-1e10)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=378)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 144, in step\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=355)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 144, in step\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=372)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=403)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=398)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=426)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 128, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return self._value_branch(\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=375)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/JSS/JSS/models.py\", line 35, in forward\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     inf_mask = torch.clamp(torch.log(action_mask), min=-1e10)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 140, in step\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     if action == self.jobs:\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=421)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=407)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m 2020-10-14 20:54:28,112\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 182, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     return convert_to_non_torch_type((actions, state_out,\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 37, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     item.cpu().detach().numpy()\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=452)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 118, in forward\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     logits = self._logits(self._features) if self._logits else \\\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 116, in forward\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     for module in self:\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=348)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=440)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=473)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=431)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 632, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     _process_policy_eval_results(\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1411, in _process_policy_eval_results\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     clipped_action = clip_action(action,\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/policy.py\", line 532, in clip_action\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     return tree.map_structure(map_, action, action_space)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=469)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m 2020-10-14 20:54:28,117\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 729, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     if (len(self._backward_hooks) > 0) or (len(_global_backward_hooks) > 0):\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=460)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/JSS/JSS/models.py\", line 29, in forward\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     action_mask = input_dict[\"obs\"][\"action_mask\"]\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 312, in flatten\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     return _tree.flatten(structure)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=439)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 199, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     self.time_until_finish_current_op_jobs[job_id] = max(0, self.time_until_finish_current_op_jobs[\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=450)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m 2020-10-14 20:54:28,128\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=481)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     item = next(self.rollout_provider)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=470)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m 2020-10-14 20:54:28,117\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff20d842ad01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m     sys.exit(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=347)\u001b[0m SystemExit: 1\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m Traceback (most recent call last):\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffeca600ef01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     return next(self.local_it)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     batches = [self.get_data()]\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff1e7ae67b01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     item = next(self.rollout_provider)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7b2861ac01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     return self.env.step(action)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     reward -= self._increase_time_step()\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=435)\u001b[0m SystemExit: 1\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0d557f6601000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m 2020-10-14 20:54:28,122\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m Traceback (most recent call last):\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     return next(self.local_it)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8d06128001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     yield self.sample()\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     batches = [self.get_data()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffa4f7314201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 182, in compute_actions\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     return convert_to_non_torch_type((actions, state_out,\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 512, in map_structure\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     for other in structures[1:]:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m     sys.exit(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=410)\u001b[0m SystemExit: 1\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff358dd45601000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m Traceback (most recent call last):\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffccf343cc01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     return next(self.local_it)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff244a7d1001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffc3083e0c01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     return self.action_model.value_function()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     return self._model(x)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff58dd50c101000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7f7c936001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m     sys.exit(1)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=360)\u001b[0m SystemExit: 1\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff10f667b001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     yield self.sample()\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff120020c01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     item = next(self.rollout_provider)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff61dc472601000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     return self.action_model.value_function()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff257d30801000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     return self._model(x)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff091d563401000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1670, in linear\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     if any([type(t) is not Tensor for t in tens_ops]) and has_torch_function(tens_ops):\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1670, in <listcomp>\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     if any([type(t) is not Tensor for t in tens_ops]) and has_torch_function(tens_ops):\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m     sys.exit(1)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=418)\u001b[0m SystemExit: 1\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m 2020-10-14 20:54:28,129\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffbdff035801000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff252160a301000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     yield self.sample()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     batches = [self.get_data()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     item = next(self.rollout_provider)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffffefbd9801000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     self._compute_action_helper(\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff310e963d01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m     sys.exit(1)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=477)\u001b[0m SystemExit: 1\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff99d0343201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m Traceback (most recent call last):\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     return next(self.local_it)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff5843697701000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     item = next(self.rollout_provider)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff3a9488b101000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     self._compute_action_helper(\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff04668d8f01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     return self.action_model.value_function()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7ef9157101000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     return self._model(x)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 713, in _call_impl\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8f9a5fc701000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     self._forward_pre_hooks.values()):\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m     sys.exit(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=416)\u001b[0m SystemExit: 1\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m 2020-10-14 20:54:28,118\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff19fd5b4901000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff80993fa801000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     return next(self.local_it)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     yield self.sample()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff75f329e601000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     item = next(self.rollout_provider)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffef1af81501000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff34cbbac201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff018c9dac01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     input = module(input)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffda2cd21f01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     return self._model(x)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     input = module(input)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffb3cace0801000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff392716d01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=346)\u001b[0m SystemExit: 1\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m 2020-10-14 20:54:28,118\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff2d1a71ea01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     yield self.sample()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     batches = [self.get_data()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     item = next(self.rollout_provider)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     self._compute_action_helper(\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8edbbd3001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff452e714401000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     input = module(input)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff14da135201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     return self._model(x)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd8f83c3801000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     input = module(input)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m     sys.exit(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=427)\u001b[0m SystemExit: 1\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m Traceback (most recent call last):\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff71ca01c001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     return next(self.local_it)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     batches = [self.get_data()]\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     item = next(self.rollout_provider)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     self._compute_action_helper(\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     return self.action_model.value_function()\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     input = module(input)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     return self._model(x)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 725, in _call_impl\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     self._forward_hooks.values()):\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m     sys.exit(1)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff4f9bfece01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=467)\u001b[0m SystemExit: 1\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff41e0fbff01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffee8852f401000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     yield self.sample()\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     batches = [self.get_data()]\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     item = next(self.rollout_provider)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 344, in send_actions\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     self.new_obs, self.cur_rewards, self.cur_dones, self.cur_infos = \\\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m     sys.exit(1)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=455)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m Traceback (most recent call last):\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffe9f6a7cf01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     yield self.sample()\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff3166f9e301000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     batches = [self.get_data()]\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     item = next(self.rollout_provider)\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff50168bc201000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     return self.env.step(action)\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 144, in step\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 198, in _increase_time_step\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     performed_op_job = min(difference, was_left_time)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd989d1f001000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m     sys.exit(1)\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=457)\u001b[0m SystemExit: 1\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m Traceback (most recent call last):\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd784bf0601000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     yield self.sample()\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "--- Logging error ---\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff90aded9101000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "ValueError: I/O operation on closed file.\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "Call stack:\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0aeae6a301000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=362)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m 2020-10-14 20:54:28,117\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=447)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 156, in step\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     time_needed = self.instance_matrix[action][current_time_step_job][1]\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=420)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 182, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return convert_to_non_torch_type((actions, state_out,\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 515, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return unflatten_as(structures[0],\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 461, in unflatten_as\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     _, packed = _packed_nest_with_indices(structure, flat_sequence, 0)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 395, in _packed_nest_with_indices\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     for s in _yield_value(structure):\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 213, in _yield_value\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     for _, v in _yield_sorted_items(iterable):\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 232, in _yield_sorted_items\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     if isinstance(iterable, collections.Mapping):\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/abc.py\", line 98, in __instancecheck__\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     return _abc_instancecheck(cls, instance)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=345)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=428)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=350)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 58, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     super(Categorical, self).__init__(batch_shape, validate_args=validate_args)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/distribution.py\", line 37, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     super(Distribution, self).__init__()\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=351)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 128, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     return self._value_branch(\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=479)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 157, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     seq_lens = torch.ones(len(obs_batch), dtype=torch.int32)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=344)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m 2020-10-14 20:54:28,118\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=356)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 116, in forward\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     self._last_flat_in = obs.reshape(obs.shape[0], -1)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 775, in __setattr__\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     def remove_from(*dicts_or_sets):\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=441)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m 2020-10-14 20:54:28,127\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1670, in linear\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     if any([type(t) is not Tensor for t in tens_ops]) and has_torch_function(tens_ops):\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/_overrides.py\", line 792, in has_torch_function\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return any(hasattr(a, '__torch_function__') for a in relevant_args)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/_overrides.py\", line 792, in <genexpr>\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     return any(hasattr(a, '__torch_function__') for a in relevant_args)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=451)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 312, in flatten\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     return _tree.flatten(structure)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=414)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=413)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 291, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     return convert_to_non_torch_type(stats_dict)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 515, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     return unflatten_as(structures[0],\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=415)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 196, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     was_left_time = self.time_until_finish_current_op_jobs[job_id]\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=425)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m 2020-10-14 20:54:28,115\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 71, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     action = action_dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 44, in sample\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     self.last_sample = self.dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 105, in sample\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     probs_2d = self.probs.reshape(-1, self._num_events)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/utils.py\", line 103, in __get__\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     value = self.wrapped(instance)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 88, in probs\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     return logits_to_probs(self.logits)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/utils.py\", line 67, in logits_to_probs\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     return F.softmax(logits, dim=-1)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1498, in softmax\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     ret = input.softmax(dim)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=449)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 711, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     for hook in itertools.chain(\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=381)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m 2020-10-14 20:54:28,112\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=342)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=358)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m 2020-10-14 20:54:28,112\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 548, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     base_env.poll()\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 326, in poll\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     new_obs = dict(enumerate(self.new_obs))\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=359)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m 2020-10-14 20:54:28,112\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 156, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     with torch.no_grad():\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/autograd/grad_mode.py\", line 66, in __enter__\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     self.prev = torch.is_grad_enabled()\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=354)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=357)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=442)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m 2020-10-14 20:54:28,113\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 116, in forward\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     for module in self:\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=369)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m 2020-10-14 20:54:28,117\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=370)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m 2020-10-14 20:54:28,114\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=453)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m 2020-10-14 20:54:28,118\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 118, in forward\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     logits = self._logits(self._features) if self._logits else \\\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=417)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m 2020-10-14 20:54:28,116\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=343)\u001b[0m SystemExit: 1\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204426-zda8eskt/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204426-zda8eskt/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 178.59596\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 178.59596\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3881\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708267\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_205412-8xpxlznr/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_205412-8xpxlznr/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/zda8eskt\u001b[0m\n",
-      "2020-10-14 20:44:34,252 - wandb.wandb_agent - INFO - Cleaning up finished run: zda8eskt\n",
-      "2020-10-14 20:44:36,273 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:36,273 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta57\n",
-      "2020-10-14 20:44:36,275 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta57\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/uz9lk4hk\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204438-uz9lk4hk\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3824\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:44:41,292 - wandb.wandb_agent - INFO - Running runs: ['uz9lk4hk']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204438-uz9lk4hk/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204438-uz9lk4hk/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 209.43434\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 209.43434\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3742\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708279\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/uz9lk4hk\u001b[0m\n",
-      "2020-10-14 20:44:46,515 - wandb.wandb_agent - INFO - Cleaning up finished run: uz9lk4hk\n",
-      "2020-10-14 20:44:46,834 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:46,834 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta58\n",
-      "2020-10-14 20:44:46,836 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta58\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mchocolate-sweep-1\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/8xpxlznr\u001b[0m\n",
+      "2020-10-14 20:54:36,131 - wandb.wandb_agent - INFO - Cleaning up finished run: 8xpxlznr\n",
+      "2020-10-14 20:54:36,467 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:54:36,467 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
+      "2020-10-14 20:54:36,469 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python train.py --instance_path=/JSS/JSS/env/instances/ta52\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "2020-10-14 20:54:41,487 - wandb.wandb_agent - INFO - Running runs: ['v1jeb89u']\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mhonest-sweep-2\u001b[0m\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/i1pzxngg\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204448-i1pzxngg\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/kdrms7i3\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/v1jeb89u\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_205438-v1jeb89u\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
+      "2020-10-14 20:54:42,133\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
+      "== Status ==\n",
+      "Memory usage on this node: 11.5/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 RUNNING)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_7c47e_00000 | RUNNING  |       |\n",
+      "+-------------------------+----------+-------+\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3912\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:44:51,849 - wandb.wandb_agent - INFO - Running runs: ['i1pzxngg']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204448-i1pzxngg/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204448-i1pzxngg/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 209.89899\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 209.89899\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3826\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708290\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/i1pzxngg\u001b[0m\n",
-      "2020-10-14 20:44:57,073 - wandb.wandb_agent - INFO - Cleaning up finished run: i1pzxngg\n",
-      "2020-10-14 20:44:57,383 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:44:57,384 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta59\n",
-      "2020-10-14 20:44:57,386 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta59\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3kcee9dt\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204459-3kcee9dt\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
+      "\u001b[2m\u001b[36m(pid=2075)\u001b[0m 2020-10-14 20:54:44,972\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
+      "\u001b[2m\u001b[36m(pid=2035)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2035)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2059)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2059)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2009)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2009)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1953)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1953)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2028)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2028)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1969)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1969)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1948)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1948)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1963)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1963)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2057)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2057)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
+      "2020-10-14 20:54:54,582\tERROR trial_runner.py:567 -- Trial PPO_jss_env_7c47e_00000: Error processing event.\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py\", line 515, in _process_trial\n",
+      "    result = self.trial_executor.fetch_result(trial)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py\", line 488, in fetch_result\n",
+      "    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1428, in get\n",
+      "    raise value.as_instanceof_cause()\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::PPO.train()\u001b[39m (pid=2075, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 516, in train\n",
+      "    raise e\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 505, in train\n",
+      "    result = Trainable.train(self)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py\", line 336, in train\n",
+      "    result = self.step()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py\", line 134, in step\n",
+      "    res = next(self.train_exec_impl)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 756, in __next__\n",
+      "    return next(self.built_iterator)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  [Previous line repeated 1 more time]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 876, in apply_flatten\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 828, in add_wait_hooks\n",
+      "    item = next(it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  [Previous line repeated 1 more time]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 471, in base_iterator\n",
+      "    yield ray.get(futures, timeout=timeout)\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RolloutWorker.par_iter_next()\u001b[39m (pid=1948, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 5.58093347e-01,\n",
+      "       9.09090909e-02, 1.19165839e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.66666667e-01, 6.09731877e-01, 7.07070707e-01,\n",
+      "       1.80734856e-03, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 4.81628600e-01, 1.01010101e-01, 1.98609732e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.21212121e-01, 4.00000000e-01,\n",
+      "       3.50546177e-01, 3.23232323e-01, 7.70605760e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 6.47467726e-01,\n",
+      "       1.00000000e+00, 6.05759682e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 7.50744786e-01, 1.00000000e+00,\n",
+      "       1.21350546e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       3.33333333e-01, 2.67130089e-01, 5.15151515e-01, 4.36941410e-04,\n",
+      "       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       4.77656405e-01, 1.11111111e-01, 3.87288977e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.33333333e-01, 2.58192651e-01,\n",
+      "       2.42424242e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.52525253e-01, 4.00000000e-01, 3.41608739e-01, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 5.38232373e-01, 2.22222222e-01, 1.00893744e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       5.50148957e-01, 7.77777778e-01, 8.69910626e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 4.65739821e-01,\n",
+      "       6.56565657e-01, 4.94538232e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.42424242e-01, 6.00000000e-01, 4.43892751e-01, 8.08080808e-02,\n",
+      "       6.07745780e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 4.95531281e-01, 1.41414141e-01, 3.57497517e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       7.05064548e-01, 2.02020202e-01, 8.14299901e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.07070707e-02, 8.66666667e-01, 6.84210526e-01,\n",
+      "       3.93939394e-01, 2.84011917e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 4.38927507e-01, 1.21212121e-01,\n",
+      "       1.06256207e-02, 0.00000000e+00, 0.00000000e+00, 5.05050505e-01,\n",
+      "       5.33333333e-01, 4.36941410e-01, 8.28282828e-01, 1.62859980e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       2.55213505e-01, 1.41414141e-01, 8.73882820e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.00000000e-01, 3.83316783e-01,\n",
+      "       6.26262626e-01, 4.96524330e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.33333333e-01, 6.63356504e-01, 3.03030303e-01,\n",
+      "       9.93048659e-05, 0.00000000e+00, 0.00000000e+00, 2.92929293e-01,\n",
+      "       6.66666667e-01, 4.83614697e-01, 2.32323232e-01, 4.56802383e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.00000000e-01,\n",
+      "       5.85898709e-01, 7.37373737e-01, 2.04568024e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 5.10427011e-01,\n",
+      "       2.42424242e-01, 8.93743793e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.87586892e-01, 2.42424242e-01,\n",
+      "       4.17080437e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.58490566e-01, 2.32323232e-01, 2.50248262e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       6.42502483e-01, 2.02020202e-01, 1.39026812e-03, 0.00000000e+00,\n",
+      "       1.00000000e+00, 0.00000000e+00, 3.33333333e-01, 2.80039722e-01,\n",
+      "       1.11111111e-01, 1.24528302e-02, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 2.61171797e-01, 4.04040404e-02,\n",
+      "       9.73187686e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 6.54419067e-01, 4.64646465e-01, 2.72095333e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,\n",
+      "       7.18967229e-01, 1.00000000e+00, 8.44091360e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.03030303e-01, 6.66666667e-01, 3.01886792e-01,\n",
+      "       4.04040404e-02, 1.80734856e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.33333333e-01, 4.05163853e-01, 4.04040404e-02,\n",
+      "       2.36345581e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 6.61370407e-01, 1.00000000e+00, 2.91956306e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.15094340e-01, 3.33333333e-01, 2.70109235e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 3.43594836e-01,\n",
+      "       6.46464646e-01, 2.07547170e-02, 0.00000000e+00, 1.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 4.04170804e-01, 6.06060606e-02,\n",
+      "       1.74180735e-02, 0.00000000e+00, 0.00000000e+00, 8.08080808e-01,\n",
+      "       6.66666667e-01, 3.62462761e-01, 4.74747475e-01, 1.70804369e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.03030303e-02, 4.00000000e-01,\n",
+      "       3.99205561e-01, 0.00000000e+00, 4.19066534e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.36363636e-01, 6.66666667e-01, 4.04170804e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.02020202e-02, 8.00000000e-01, 6.30585899e-01, 4.04040404e-02,\n",
+      "       7.94438928e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.66666667e-01, 6.40516385e-01, 1.01010101e-02, 9.93048659e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       5.76961271e-01, 1.91919192e-01, 2.42303873e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       1.00000000e+00, 7.34856008e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       3.73737374e-01, 7.33333333e-01, 6.44488580e-01, 3.33333333e-01,\n",
+      "       6.55412115e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 7.48758689e-01, 1.00000000e+00, 3.17775571e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.91919192e-01, 6.00000000e-01,\n",
+      "       3.63455809e-01, 0.00000000e+00, 7.94438928e-05, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 8.41112214e-01,\n",
+      "       1.00000000e+00, 3.83316783e-03, 0.00000000e+00, 1.00000000e+00,\n",
+      "       0.00000000e+00, 8.66666667e-01, 8.02383317e-01, 2.52525253e-01,\n",
+      "       2.32373386e-03, 0.00000000e+00]), 'action_mask': array([False, False,  True, False, False, False, False,  True, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False,  True, False, False, False, False, False, False, False,\n",
+      "       False,  True, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False,  True, False])})\n",
+      "== Status ==\n",
+      "Memory usage on this node: 24.2/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_7c47e_00000 | ERROR    |       |\n",
+      "+-------------------------+----------+-------+\n",
+      "Number of errored trials: 1\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
+      "| Trial name              |   # failures | error file                                                                        |\n",
+      "|-------------------------+--------------+-----------------------------------------------------------------------------------|\n",
+      "| PPO_jss_env_7c47e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_7c47e_00000_0_2020-10-14_20-54-43/error.txt |\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 3998\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:45:02,401 - wandb.wandb_agent - INFO - Running runs: ['3kcee9dt']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204459-3kcee9dt/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204459-3kcee9dt/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 211.84848\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 211.84848\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3517\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708300\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3kcee9dt\u001b[0m\n",
-      "2020-10-14 20:45:07,613 - wandb.wandb_agent - INFO - Cleaning up finished run: 3kcee9dt\n",
-      "2020-10-14 20:45:10,058 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-14 20:45:10,059 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta60\n",
-      "2020-10-14 20:45:10,061 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python MTWR.py --instance_path=/JSS/JSS/env/instances/ta60\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mMTWR\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/po3ygyxo\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/kkype8ue\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_204512-kkype8ue\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "== Status ==\n",
+      "Memory usage on this node: 24.2/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+-------------------------+----------+-------+\n",
+      "| Trial name              | status   | loc   |\n",
+      "|-------------------------+----------+-------|\n",
+      "| PPO_jss_env_7c47e_00000 | ERROR    |       |\n",
+      "+-------------------------+----------+-------+\n",
+      "Number of errored trials: 1\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
+      "| Trial name              |   # failures | error file                                                                        |\n",
+      "|-------------------------+--------------+-----------------------------------------------------------------------------------|\n",
+      "| PPO_jss_env_7c47e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_7c47e_00000_0_2020-10-14_20-54-43/error.txt |\n",
+      "+-------------------------+--------------+-----------------------------------------------------------------------------------+\n",
       "\n",
+      "Traceback (most recent call last):\n",
+      "  File \"train.py\", line 74, in <module>\n",
+      "    train_func()\n",
+      "  File \"train.py\", line 56, in train_func\n",
+      "    analysis = tune.run(PPOTrainer, config=config, stop=stop, name=\"ppo-jss\")\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py\", line 427, in run\n",
+      "    raise TuneError(\"Trials did not complete\", incomplete_trials)\n",
+      "ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_7c47e_00000])\n",
       "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 4096\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "2020-10-14 20:45:15,074 - wandb.wandb_agent - INFO - Running runs: ['kkype8ue']\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 1842\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program failed with code 1.  Press ctrl-c to abort syncing.\n",
+      "--- Logging error --- 0.07MB of 0.07MB uploaded (0.00MB deduped)\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffef1af81501000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff3166f9e301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff5cc87e2501000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7b2861ac01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff452e714401000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff14da135201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff10f667b001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8f9a5fc701000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffe9f6a7cf01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffc3083e0c01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff3a9488b101000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff75f329e601000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff4f9bfece01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff244a7d1001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff302122d001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff252160a301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff091d563401000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff61dc472601000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffda2cd21f01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff702ed69e01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd989d1f001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffee8852f401000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd784bf0601000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff358dd45601000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffa97540c201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff99d0343201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffd8f83c3801000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff32335d4e01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8cd168e101000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff04668d8f01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffb3cace0801000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff34cbbac201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff0f72e3901000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff1e7ae67b01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff41e0fbff01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff392716d01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffa7ad1db301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff71ca01c001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff50168bc201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7a508a7a01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff51728d3301000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff0d557f6601000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff018c9dac01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff19fd5b4901000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff2d1a71ea01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff257d30801000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task fffffffffffffffff120020c01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffdd5654aa01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff7f7c936001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff310e963d01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffccf343cc01000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff80993fa801000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffff8d06128001000000.'\n",
+      "Arguments: ()\n",
+      "--- Logging error ---\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1085, in emit\n",
+      "    self.flush()\n",
+      "  File \"/root/miniconda3/lib/python3.8/logging/__init__.py\", line 1065, in flush\n",
+      "    self.stream.flush()\n",
+      "ValueError: I/O operation on closed file.\n",
+      "Call stack:\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 890, in _bootstrap\n",
+      "    self._bootstrap_inner()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\n",
+      "    self.run()\n",
+      "  File \"/root/miniconda3/lib/python3.8/threading.py\", line 870, in run\n",
+      "    self._target(*self._args, **self._kwargs)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1072, in listen_error_messages_raylet\n",
+      "    logger.warning(error_message)\n",
+      "Message: 'A worker died or was killed while executing task ffffffffffffffffeca600ef01000000.'\n",
+      "Arguments: ()\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 69, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     return tensor if device is None else tensor.to(device)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1972)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 68, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     tensor = tensor.float()\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2002)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 219, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     if len(shape) != 2 or int(shape[1]) != self.num_outputs:\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2056)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m 2020-10-14 20:54:54,672\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1971)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2049)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2037)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 769, in __getattr__\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     if name in modules:\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2004)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2025)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 71, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     action = action_dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 44, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     self.last_sample = self.dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 105, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     probs_2d = self.probs.reshape(-1, self._num_events)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1964)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 759, in __getattr__\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     if '_parameters' in self.__dict__:\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2020)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 799, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     if log_once(\"prep_obs\"):\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2052)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/activation.py\", line 102, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     return F.relu(input, inplace=self.inplace)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1119, in relu\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     result = torch.relu(input)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1952)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 198, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     restored = input_dict.copy()\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 22, in copy\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     copy.set_get_interceptor(self.get_interceptor)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2022)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2041)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m 2020-10-14 20:54:54,673\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/activation.py\", line 102, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     return F.relu(input, inplace=self.inplace)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1119, in relu\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     result = torch.relu(input)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1967)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 834, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     prev_actions=episode.prev_action_for(agent_id),\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1976)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1961)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 503, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     if not structures:\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1949)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m 2020-10-14 20:54:54,672\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2031)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 144, in step\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 199, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     self.time_until_finish_current_op_jobs[job_id] = max(0, self.time_until_finish_current_op_jobs[\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1978)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 260, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     action_dist = dist_class(dist_inputs, self.model)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 63, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     self.dist = torch.distributions.categorical.Categorical(\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 54, in __init__\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     self.logits = logits - logits.logsumexp(dim=-1, keepdim=True)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2070)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 291, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     return convert_to_non_torch_type(stats_dict)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 512, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     for other in structures[1:]:\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2051)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2044)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 71, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     action = action_dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 44, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     self.last_sample = self.dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 106, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     samples_2d = torch.multinomial(probs_2d, sample_shape.numel(), True).T\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2067)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2048)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 825, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     batch_builder.add_values(\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sample_batch_builder.py\", line 158, in add_values\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     self.agent_builders[agent_id].add_values(**values)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2050)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 760, in __getattr__\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     _parameters = self.__dict__['_parameters']\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2063)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 549, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     perf_stats.env_wait_time += time.time() - t0\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1968)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 221, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     self.state[job_id * 7 + 5] += difference / (self.max_time_jobs * self.jobs)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2066)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 825, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     batch_builder.add_values(\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sample_batch_builder.py\", line 158, in add_values\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     self.agent_builders[agent_id].add_values(**values)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sample_batch_builder.py\", line 51, in add_values\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     self.buffers[k].append(v)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2034)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1983)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 741, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     if (batch_builder.total() > large_batch_threshold\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sample_batch_builder.py\", line 127, in total\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     return sum(a.count for a in self.agent_builders.values())\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sample_batch_builder.py\", line 127, in <genexpr>\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     return sum(a.count for a in self.agent_builders.values())\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1985)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 116, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     self._last_flat_in = obs.reshape(obs.shape[0], -1)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 819, in __setattr__\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     object.__setattr__(self, name, value)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2042)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 200, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     input_dict[\"obs\"], self.obs_space, self.framework)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/tracking_dict.py\", line 30, in __getitem__\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     self.intercepted_values[key] = self.get_interceptor(value)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 71, in convert_to_torch_tensor\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     return tree.map_structure(mapping, x)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 68, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     tensor = tensor.float()\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2078)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1954)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 116, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     self._last_flat_in = obs.reshape(obs.shape[0], -1)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1951)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1965)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2029)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 223, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     if self.time_until_available_machine[machine] < difference:\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2001)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 167, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     np.asarray(prev_reward_batch)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/numpy/core/_asarray.py\", line 83, in asarray\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     return array(a, dtype, copy=False, order=order)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2021)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 157, in step\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     reward += time_needed\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1979)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2045)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 221, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     self.state[job_id * 7 + 5] += difference / (self.max_time_jobs * self.jobs)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2060)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2065)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 71, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     action = action_dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 44, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     self.last_sample = self.dist.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 105, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     probs_2d = self.probs.reshape(-1, self._num_events)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/utils.py\", line 103, in __get__\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     value = self.wrapped(instance)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 88, in probs\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     return logits_to_probs(self.logits)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/utils.py\", line 67, in logits_to_probs\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     return F.softmax(logits, dim=-1)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1498, in softmax\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     ret = input.softmax(dim)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2058)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 549, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     perf_stats.env_wait_time += time.time() - t0\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1950)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 222, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     for machine in range(self.machines):\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2068)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     active_envs, to_eval, outputs = _process_observations(\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 723, in _process_observations\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     active_envs: Set[EnvID] = set()\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2019)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1958)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 264, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     self.exploration.get_exploration_action(\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 43, in get_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return self._get_torch_exploration_action(action_distribution,\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/exploration/stochastic_sampling.py\", line 72, in _get_torch_exploration_action\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     logp = action_dist.sampled_action_logp()\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 50, in sampled_action_logp\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return self.logp(self.last_sample)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/torch_action_dist.py\", line 32, in logp\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return self.dist.log_prob(actions)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/distributions/categorical.py\", line 115, in log_prob\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     return log_pmf.gather(-1, value).squeeze(-1)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1955)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m 2020-10-14 20:54:54,684\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2012)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 178, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     logp = convert_to_non_torch_type(logp)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 37, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     item.cpu().detach().numpy()\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2015)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 118, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     logits = self._logits(self._features) if self._logits else \\\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1670, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     if any([type(t) is not Tensor for t in tens_ops]) and has_torch_function(tens_ops):\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1670, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     if any([type(t) is not Tensor for t in tens_ops]) and has_torch_function(tens_ops):\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1989)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m 2020-10-14 20:54:54,678\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1956)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m 2020-10-14 20:54:54,679\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2046)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2038)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2036)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 178, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     logp = convert_to_non_torch_type(logp)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 276, in flatten\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     def flatten(structure):\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1970)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m 2020-10-14 20:54:54,675\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 196, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     was_left_time = self.time_until_finish_current_op_jobs[job_id]\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1957)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2024)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 129, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     self._value_branch_separate(self._last_flat_in)).squeeze(1)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2007)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m 2020-10-14 20:54:54,671\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/JSS/JSS/models.py\", line 32, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     raw_actions, state = self.action_model({\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/modelv2.py\", line 206, in __call__\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     res = self.forward(restored, state or [], seq_lens)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     self._features = self._hidden_layers(self._last_flat_in)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2026)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 291, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     return convert_to_non_torch_type(stats_dict)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 41, in convert_to_non_torch_type\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     return tree.map_structure(mapping, stats)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in map_structure\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/tree/__init__.py\", line 516, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     [func(*args) for args in zip(*map(flatten, structures))])\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py\", line 37, in mapping\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     item.cpu().detach().numpy()\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2027)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 144, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     if not np.isscalar(r) or not np.isreal(r) or not np.isfinite(r):\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"<__array_function__ internals>\", line 2, in isreal\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2033)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 144, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     if not np.isscalar(r) or not np.isreal(r) or not np.isfinite(r):\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"<__array_function__ internals>\", line 5, in isreal\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/numpy/lib/type_check.py\", line 276, in isreal\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     return imag(x) == 0\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1980)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 221, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     self.state[job_id * 7 + 5] += difference / (self.max_time_jobs * self.jobs)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1986)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m 2020-10-14 20:54:54,667\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 250, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     dist_inputs, state_out = self.model(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2023)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m 2020-10-14 20:54:54,670\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1253, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     eval_results[policy_id] = policy.compute_actions(\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 173, in compute_actions\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     self._compute_action_helper(\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy.py\", line 272, in _compute_action_helper\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     extra_fetches = self.extra_action_out(input_dict, state_batches,\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/policy/torch_policy_template.py\", line 286, in extra_action_out\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     stats_dict = extra_action_out_fn(\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/ppo/ppo_torch_policy.py\", line 171, in vf_preds_fetches\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     SampleBatch.VF_PREDS: policy.model.value_function(),\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/JSS/JSS/models.py\", line 41, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return self.action_model.value_function()\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/fcnet.py\", line 128, in value_function\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return self._value_branch(\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/torch/misc.py\", line 125, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return self._model(x)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py\", line 117, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     input = module(input)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 722, in _call_impl\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     result = self.forward(*input, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/linear.py\", line 91, in forward\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     return F.linear(input, self.weight, self.bias)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py\", line 1674, in linear\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     ret = torch.addmm(bias, input, weight.t())\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=1960)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m 2020-10-14 20:54:54,668\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 621, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     eval_results = _do_policy_eval(\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1258, in _do_policy_eval\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     info_batch=[t.info for t in eval_data],\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 1258, in <listcomp>\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     info_batch=[t.info for t in eval_data],\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2039)\u001b[0m SystemExit: 1\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m 2020-10-14 20:54:54,669\tERROR worker.py:372 -- SystemExit was raised from the worker\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m Traceback (most recent call last):\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 553, in ray._raylet.task_execution_handler\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 440, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 479, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 483, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/function_manager.py\", line 553, in actor_method_executor\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     return method(actor, *args, **kwargs)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     return next(self.local_it)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     yield self.sample()\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     batches = [self.input_reader.next()]\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     batches = [self.get_data()]\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     item = next(self.rollout_provider)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 648, in _env_runner\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     base_env.send_actions(actions_to_send)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/base_env.py\", line 345, in send_actions\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     self.vector_env.vector_step(action_vector)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/env/vector_env.py\", line 143, in vector_step\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     obs, r, done, info = self.envs[i].step(actions[i])\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/JSS/JSS/env_wrapper.py\", line 48, in step\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     observation, reward, done, real_action_performed = super(BestActionsWrapper, self).step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/gym/core.py\", line 234, in step\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     return self.env.step(action)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 172, in step\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     reward -= self._increase_time_step()\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/JSS/JSS/env/JSS.py\", line 230, in _increase_time_step\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     if self.needed_machine_jobs[job_id] == machine and not self.legal_actions[job_id]:\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m   File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 369, in sigterm_handler\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m     sys.exit(1)\n",
+      "\u001b[2m\u001b[36m(pid=2030)\u001b[0m SystemExit: 1\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_204512-kkype8ue/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_204512-kkype8ue/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 197.64646\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 197.64646\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep 3735\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 1\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602708313\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     best_timestep ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_205438-v1jeb89u/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_205438-v1jeb89u/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mMTWR\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/kkype8ue\u001b[0m\n",
-      "2020-10-14 20:45:20,294 - wandb.wandb_agent - INFO - Cleaning up finished run: kkype8ue\n",
-      "2020-10-14 20:45:20,607 - wandb.wandb_agent - INFO - Agent received command: exit\n",
-      "2020-10-14 20:45:20,607 - wandb.wandb_agent - INFO - Received exit command. Killing runs and quitting.\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Terminating and syncing runs. Press ctrl-c to kill.\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mhonest-sweep-2\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/v1jeb89u\u001b[0m\n",
+      "2020-10-14 20:55:02,375 - wandb.wandb_agent - INFO - Cleaning up finished run: v1jeb89u\n",
+      "2020-10-14 20:55:02,700 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 20:55:02,700 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta53\n",
+      "2020-10-14 20:55:02,707 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python train.py --instance_path=/JSS/JSS/env/instances/ta53\n",
+      "^C\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl-c pressed. Waiting for runs to end. Press ctrl-c again to terminate them.\n"
      ]
     }
    ],
    "source": [
-    "!wandb agent po3ygyxo"
+    "!wandb agent kdrms7i3"
    ]
   },
   {
diff --git a/JSS/__pycache__/default_config.cpython-38.pyc b/JSS/__pycache__/default_config.cpython-38.pyc
index 14e0018..8fbfc47 100644
Binary files a/JSS/__pycache__/default_config.cpython-38.pyc and b/JSS/__pycache__/default_config.cpython-38.pyc differ
diff --git a/JSS/default_config.py b/JSS/default_config.py
index 46f4d10..4729210 100644
--- a/JSS/default_config.py
+++ b/JSS/default_config.py
@@ -6,7 +6,7 @@ default_config = {
     'env': 'jss_env',
     'seed': 0,
     'framework': 'torch',
-    'log_level': 'INFO',
+    'log_level': 'WARN',
     'num_gpus': 1,
     'instance_path': '/JSS/JSS/env/instances/ta51',
     'num_envs_per_worker': 2,
diff --git a/JSS/env/__pycache__/JSS.cpython-38.pyc b/JSS/env/__pycache__/JSS.cpython-38.pyc
index b190093..07151e8 100644
Binary files a/JSS/env/__pycache__/JSS.cpython-38.pyc and b/JSS/env/__pycache__/JSS.cpython-38.pyc differ
diff --git a/JSS/train.py b/JSS/train.py
index d4ac941..3400140 100644
--- a/JSS/train.py
+++ b/JSS/train.py
@@ -50,7 +50,7 @@ def train_func():
     ray.init()
 
     stop = {
-        "time_total_s": 60 * 60,
+        "time_total_s": 3 * 60 * 60,
     }
 
     analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
diff --git a/JSS/wandb/debug-internal.log b/JSS/wandb/debug-internal.log
index f73d8af..33a8042 120000
--- a/JSS/wandb/debug-internal.log
+++ b/JSS/wandb/debug-internal.log
@@ -1 +1 @@
-run-20201014_204512-kkype8ue/logs/debug-internal.log
\ No newline at end of file
+run-20201014_210248-z2o08s2g/logs/debug-internal.log
\ No newline at end of file
diff --git a/JSS/wandb/debug.log b/JSS/wandb/debug.log
index db2ed2e..241973f 120000
--- a/JSS/wandb/debug.log
+++ b/JSS/wandb/debug.log
@@ -1 +1 @@
-run-20201014_204512-kkype8ue/logs/debug.log
\ No newline at end of file
+run-20201014_210248-z2o08s2g/logs/debug.log
\ No newline at end of file
diff --git a/JSS/wandb/latest-run b/JSS/wandb/latest-run
index f19e5b0..2692a10 120000
--- a/JSS/wandb/latest-run
+++ b/JSS/wandb/latest-run
@@ -1 +1 @@
-run-20201014_204512-kkype8ue
\ No newline at end of file
+run-20201014_210248-z2o08s2g
\ No newline at end of file
diff --git a/JSS/wandb/run-20201014_185459-4qedwvw4/logs/debug-internal.log b/JSS/wandb/run-20201014_185459-4qedwvw4/logs/debug-internal.log
index 62aefa0..a469c27 100644
--- a/JSS/wandb/run-20201014_185459-4qedwvw4/logs/debug-internal.log
+++ b/JSS/wandb/run-20201014_185459-4qedwvw4/logs/debug-internal.log
@@ -3791,3 +3791,60 @@
 2020-10-14 20:48:22,755 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
 2020-10-14 20:48:24,674 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
 2020-10-14 20:48:29,293 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:33,903 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:37,761 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:48:37,761 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:48:37,761 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:48:37,765 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:48:37,962 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:48:38,519 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:43,143 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:47,759 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:52,385 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:48:52,968 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:48:52,968 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:48:52,968 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:48:52,975 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:48:53,184 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:48:57,005 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:01,622 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:06,249 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:08,189 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:08,190 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:49:08,190 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:08,195 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:08,392 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:10,874 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:15,492 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:20,107 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:23,398 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:23,398 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:49:23,398 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:23,403 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:23,595 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:24,725 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:29,333 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:33,953 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:38,566 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:38,601 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:38,601 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:49:38,601 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:38,605 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:38,802 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:43,182 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:47,813 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:52,436 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:49:53,808 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:53,809 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:49:53,809 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:53,813 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:54,014 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:57,041 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:50:01,665 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:50:06,273 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
+2020-10-14 20:50:09,020 DEBUG   HandlerThread:30187 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:50:09,020 DEBUG   SenderThread:30187 [sender.py:send():88] send: request
+2020-10-14 20:50:09,020 DEBUG   SenderThread:30187 [sender.py:send_request():97] send_request: status
+2020-10-14 20:50:09,024 DEBUG   SenderThread:30187 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:50:09,226 DEBUG   SenderThread:30187 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:50:10,902 DEBUG   SenderThread:30187 [sender.py:send():88] send: stats
diff --git a/JSS/wandb/run-20201014_185459-4qedwvw4/run-4qedwvw4.wandb b/JSS/wandb/run-20201014_185459-4qedwvw4/run-4qedwvw4.wandb
index fe32750..a173876 100644
Binary files a/JSS/wandb/run-20201014_185459-4qedwvw4/run-4qedwvw4.wandb and b/JSS/wandb/run-20201014_185459-4qedwvw4/run-4qedwvw4.wandb differ
diff --git a/JSS/wandb/run-20201014_185623-es6i30gb/logs/debug-internal.log b/JSS/wandb/run-20201014_185623-es6i30gb/logs/debug-internal.log
index 6c28b35..39056d1 100644
--- a/JSS/wandb/run-20201014_185623-es6i30gb/logs/debug-internal.log
+++ b/JSS/wandb/run-20201014_185623-es6i30gb/logs/debug-internal.log
@@ -3766,3 +3766,55 @@
 2020-10-14 20:48:28,206 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
 2020-10-14 20:48:28,210 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
 2020-10-14 20:48:28,411 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:48:32,759 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:37,379 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:41,998 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:43,417 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:48:43,417 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:48:43,418 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:48:43,425 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:48:43,622 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:48:46,618 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:51,237 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:55,878 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:48:58,628 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:48:58,629 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:48:58,629 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:48:58,634 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:48:58,828 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:00,486 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:05,100 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:09,717 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:13,834 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:13,834 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:49:13,835 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:13,839 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:14,032 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:14,334 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:18,948 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:23,561 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:28,192 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:29,038 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:29,038 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:49:29,039 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:29,043 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:29,241 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:32,806 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:37,429 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:42,040 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:44,247 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:44,247 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:49:44,247 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:44,252 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:44,453 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:49:46,669 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:51,288 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:55,904 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:49:59,459 DEBUG   HandlerThread:34843 [handler.py:handle_request():54] handle_request: status
+2020-10-14 20:49:59,459 DEBUG   SenderThread:34843 [sender.py:send():88] send: request
+2020-10-14 20:49:59,460 DEBUG   SenderThread:34843 [sender.py:send_request():97] send_request: status
+2020-10-14 20:49:59,464 DEBUG   SenderThread:34843 [connectionpool.py:_new_conn():955] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-10-14 20:49:59,667 DEBUG   SenderThread:34843 [connectionpool.py:_make_request():428] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 None
+2020-10-14 20:50:00,513 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:50:05,125 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
+2020-10-14 20:50:09,744 DEBUG   SenderThread:34843 [sender.py:send():88] send: stats
diff --git a/JSS/wandb/run-20201014_185623-es6i30gb/run-es6i30gb.wandb b/JSS/wandb/run-20201014_185623-es6i30gb/run-es6i30gb.wandb
index 6b25ef1..0114685 100644
Binary files a/JSS/wandb/run-20201014_185623-es6i30gb/run-es6i30gb.wandb and b/JSS/wandb/run-20201014_185623-es6i30gb/run-es6i30gb.wandb differ
