2020-11-05 11:03:47,254	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_949fd_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=25188)[0m 2020-11-05 11:03:50,096	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=25042)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25042)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25042)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25154)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25154)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25154)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25154)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25154)[0m *** SIGSEGV (@0x0) received by PID 25154 (TID 0x7fed2d179700) from PID 0; stack trace: ***
[2m[36m(pid=25154)[0m     @     0x7fed2cd52390 (unknown)
[2m[36m(pid=25154)[0m     @     0x7fbe2eeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25154)[0m     @     0x7fbe2c1df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25154)[0m     @     0x7fbe2c1e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25060)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25060)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25112)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25112)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25112)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25112)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25112)[0m *** SIGSEGV (@0x0) received by PID 25112 (TID 0x7fc0312b4700) from PID 0; stack trace: ***
[2m[36m(pid=25112)[0m     @     0x7fc030e8d390 (unknown)
[2m[36m(pid=25112)[0m     @     0x7f9133089fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25112)[0m     @     0x7f913037d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25112)[0m     @     0x7f9130380977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25112)[0m     @     0x7f9130380b53 at::TensorIterator::for_each()
[2m[36m(pid=25112)[0m     @     0x7f9130380e11 at::TensorIterator::for_each()
[2m[36m(pid=25112)[0m     @     0x7f9133099c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25049)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25049)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25049)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25120)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25120)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25120)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25120)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25120)[0m *** SIGSEGV (@0x0) received by PID 25120 (TID 0x7fafaeece700) from PID 0; stack trace: ***
[2m[36m(pid=25120)[0m     @     0x7fafaeaa7390 (unknown)
[2m[36m(pid=25120)[0m     @     0x7f80b0c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25120)[0m     @     0x7f80adf8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25120)[0m     @     0x7f80adf8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25044)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25044)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25044)[0m *** SIGSEGV (@0x0) received by PID 25044 (TID 0x7f4bfb9c8700) from PID 0; stack trace: ***
[2m[36m(pid=25044)[0m     @     0x7f4bfb5a1390 (unknown)
[2m[36m(pid=25044)[0m     @     0x7f1cfd6b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25044)[0m     @     0x7f1cfa9a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25044)[0m     @     0x7f1cfa9a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25044)[0m     @     0x7f1cfa9a8b53 at::TensorIterator::for_each()
[2m[36m(pid=25044)[0m     @     0x7f1cfa9a8e11 at::TensorIterator::for_each()
[2m[36m(pid=25103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25103)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25103)[0m *** SIGSEGV (@0x0) received by PID 25103 (TID 0x7fe28f311700) from PID 0; stack trace: ***
[2m[36m(pid=25103)[0m     @     0x7fe28eeea390 (unknown)
[2m[36m(pid=25103)[0m     @     0x7fb39110afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25103)[0m     @     0x7fb38e3fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25103)[0m     @     0x7fb38e401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25103)[0m     @     0x7fb38e401b53 at::TensorIterator::for_each()
[2m[36m(pid=25103)[0m     @     0x7fb38e401e11 at::TensorIterator::for_each()
[2m[36m(pid=25103)[0m     @     0x7fb39111ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25155)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25155)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25155)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25155)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25155)[0m *** SIGSEGV (@0x0) received by PID 25155 (TID 0x7f609a3db700) from PID 0; stack trace: ***
[2m[36m(pid=25155)[0m     @     0x7f6099fb4390 (unknown)
[2m[36m(pid=25155)[0m     @     0x7f319c09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25155)[0m     @     0x7f319938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25155)[0m     @     0x7f3199392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25155)[0m     @     0x7f3199392b53 at::TensorIterator::for_each()
[2m[36m(pid=25155)[0m     @     0x7f3199392e11 at::TensorIterator::for_each()
[2m[36m(pid=25155)[0m     @     0x7f319c0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25174)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25174)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25174)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25174)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25174)[0m *** SIGSEGV (@0x0) received by PID 25174 (TID 0x7fdd04fdf700) from PID 0; stack trace: ***
[2m[36m(pid=25174)[0m     @     0x7fdd04bb8390 (unknown)
[2m[36m(pid=25174)[0m     @     0x7fae06d02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25174)[0m     @     0x7fae03ff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25174)[0m     @     0x7fae03ff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25174)[0m     @     0x7fae03ff9b53 at::TensorIterator::for_each()
[2m[36m(pid=25174)[0m     @     0x7fae03ff9e11 at::TensorIterator::for_each()
[2m[36m(pid=25174)[0m     @     0x7fae06d12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25046)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25099)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25099)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25099)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25182)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25182)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25182)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25182)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25182)[0m *** SIGSEGV (@0x0) received by PID 25182 (TID 0x7f52cb535700) from PID 0; stack trace: ***
[2m[36m(pid=25070)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25070)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25070)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25114)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25074)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25074)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25074)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25073)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25073)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25073)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25073)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25073)[0m *** SIGSEGV (@0x0) received by PID 25073 (TID 0x7f6cca3e6700) from PID 0; stack trace: ***
[2m[36m(pid=25073)[0m     @     0x7f6cc9fbf390 (unknown)
[2m[36m(pid=25073)[0m     @     0x7f3dcc09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25073)[0m     @     0x7f3dc938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25073)[0m     @     0x7f3dc9392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25073)[0m     @     0x7f3dc9392b53 at::TensorIterator::for_each()
[2m[36m(pid=25055)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25055)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25055)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25055)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25055)[0m *** SIGSEGV (@0x0) received by PID 25055 (TID 0x7f94fbb18700) from PID 0; stack trace: ***
[2m[36m(pid=25055)[0m     @     0x7f94fb6f1390 (unknown)
[2m[36m(pid=25055)[0m     @     0x7f65fd896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25055)[0m     @     0x7f65fab8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25055)[0m     @     0x7f65fab8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25055)[0m     @     0x7f65fab8db53 at::TensorIterator::for_each()
[2m[36m(pid=25116)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25116)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25116)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25116)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25116)[0m *** SIGSEGV (@0x0) received by PID 25116 (TID 0x7fe0e65fb700) from PID 0; stack trace: ***
[2m[36m(pid=25116)[0m     @     0x7fe0e61d4390 (unknown)
[2m[36m(pid=25116)[0m     @     0x7fb1e83b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25116)[0m     @     0x7fb1e56a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25116)[0m     @     0x7fb1e56a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25116)[0m     @     0x7fb1e56a8b53 at::TensorIterator::for_each()
[2m[36m(pid=25116)[0m     @     0x7fb1e56a8e11 at::TensorIterator::for_each()
[2m[36m(pid=25116)[0m     @     0x7fb1e83c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25116)[0m     @     0x7fb1e83e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25161)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25161)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25161)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25161)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25161)[0m *** SIGSEGV (@0x0) received by PID 25161 (TID 0x7fa35d084700) from PID 0; stack trace: ***
[2m[36m(pid=25161)[0m     @     0x7fa35cc5d390 (unknown)
[2m[36m(pid=25161)[0m     @     0x7f745edb9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25161)[0m     @     0x7f745c0ad64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25161)[0m     @     0x7f745c0b0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25161)[0m     @     0x7f745c0b0b53 at::TensorIterator::for_each()
[2m[36m(pid=25161)[0m     @     0x7f745c0b0e11 at::TensorIterator::for_each()
[2m[36m(pid=25161)[0m     @     0x7f745edc9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25161)[0m     @     0x7f745edeccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25161)[0m     @     0x7f745be2a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25161)[0m     @     0x7f745be28c3f at::native::copy_impl()
[2m[36m(pid=25041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25041)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25149)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25149)[0m *** SIGSEGV (@0x0) received by PID 25149 (TID 0x7f4873b00700) from PID 0; stack trace: ***
[2m[36m(pid=25136)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25136)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25136)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25136)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25136)[0m *** SIGSEGV (@0x0) received by PID 25136 (TID 0x7f26a68b1700) from PID 0; stack trace: ***
[2m[36m(pid=25136)[0m     @     0x7f26a648a390 (unknown)
[2m[36m(pid=25067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25067)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25047)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25047)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25047)[0m *** SIGSEGV (@0x0) received by PID 25047 (TID 0x7f78e3803700) from PID 0; stack trace: ***
[2m[36m(pid=25047)[0m     @     0x7f78e33dc390 (unknown)
[2m[36m(pid=25047)[0m     @     0x7f49e54a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25047)[0m     @     0x7f49e279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25110)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25110)[0m *** SIGSEGV (@0x0) received by PID 25110 (TID 0x7f12bb9fc700) from PID 0; stack trace: ***
[2m[36m(pid=25110)[0m     @     0x7f12bb5d5390 (unknown)
[2m[36m(pid=25110)[0m     @     0x7ee3bd7e9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25110)[0m     @     0x7ee3baadd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25072)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25072)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25072)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25072)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25072)[0m *** SIGSEGV (@0x0) received by PID 25072 (TID 0x7fe1c6c8d700) from PID 0; stack trace: ***
[2m[36m(pid=25072)[0m     @     0x7fe1c6866390 (unknown)
[2m[36m(pid=25072)[0m     @     0x7fb2c8981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25072)[0m     @     0x7fb2c5c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25072)[0m     @     0x7fb2c5c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25050)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25050)[0m *** SIGSEGV (@0x0) received by PID 25050 (TID 0x7fe1f4ccf700) from PID 0; stack trace: ***
[2m[36m(pid=25050)[0m     @     0x7fe1f48a8390 (unknown)
[2m[36m(pid=25050)[0m     @     0x7fb2f6ac2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25050)[0m     @     0x7fb2f3db664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25050)[0m     @     0x7fb2f3db9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25068)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25068)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25068)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25068)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25068)[0m *** SIGSEGV (@0x0) received by PID 25068 (TID 0x7ff8d3245700) from PID 0; stack trace: ***
[2m[36m(pid=25068)[0m     @     0x7ff8d2e1e390 (unknown)
[2m[36m(pid=25068)[0m     @     0x7fc9d503afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25068)[0m     @     0x7fc9d232e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25068)[0m     @     0x7fc9d2331977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25095)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25095)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25095)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25095)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25095)[0m *** SIGSEGV (@0x0) received by PID 25095 (TID 0x7fd780a27700) from PID 0; stack trace: ***
[2m[36m(pid=25095)[0m     @     0x7fd780600390 (unknown)
[2m[36m(pid=25095)[0m     @     0x7fa88265afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25095)[0m     @     0x7fa87f94e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25147)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25147)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25147)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25147)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25147)[0m *** SIGSEGV (@0x0) received by PID 25147 (TID 0x7f083259c700) from PID 0; stack trace: ***
[2m[36m(pid=25147)[0m     @     0x7f0832175390 (unknown)
[2m[36m(pid=25147)[0m     @     0x7ed9343acfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25147)[0m     @     0x7ed9316a064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25147)[0m     @     0x7ed9316a3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25164)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25164)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25164)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25164)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25164)[0m *** SIGSEGV (@0x0) received by PID 25164 (TID 0x7f5c741c4700) from PID 0; stack trace: ***
[2m[36m(pid=25164)[0m     @     0x7f5c73d9d390 (unknown)
[2m[36m(pid=25164)[0m     @     0x7f2d75e3efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25164)[0m     @     0x7f2d7313264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25164)[0m     @     0x7f2d73135977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25121)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25121)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25121)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25121)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25121)[0m *** SIGSEGV (@0x0) received by PID 25121 (TID 0x7fd6a053d700) from PID 0; stack trace: ***
[2m[36m(pid=25121)[0m     @     0x7fd6a0116390 (unknown)
[2m[36m(pid=25150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25150)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25150)[0m *** SIGSEGV (@0x0) received by PID 25150 (TID 0x7fb0fc540700) from PID 0; stack trace: ***
[2m[36m(pid=25150)[0m     @     0x7fb0fc119390 (unknown)
[2m[36m(pid=25150)[0m     @     0x7f81fe293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25150)[0m     @     0x7f81fb58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25115)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25115)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25115)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25115)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25115)[0m *** SIGSEGV (@0x0) received by PID 25115 (TID 0x7f37e854d700) from PID 0; stack trace: ***
[2m[36m(pid=25115)[0m     @     0x7f37e8126390 (unknown)
[2m[36m(pid=25053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25053)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25053)[0m *** SIGSEGV (@0x0) received by PID 25053 (TID 0x7f909f126700) from PID 0; stack trace: ***
[2m[36m(pid=25053)[0m     @     0x7f909ecff390 (unknown)
[2m[36m(pid=25053)[0m     @     0x7f61a0f06fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25053)[0m     @     0x7f619e1fa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25053)[0m     @     0x7f619e1fd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25048)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25048)[0m *** SIGSEGV (@0x0) received by PID 25048 (TID 0x7f2523813700) from PID 0; stack trace: ***
[2m[36m(pid=25048)[0m     @     0x7f25233ec390 (unknown)
[2m[36m(pid=25048)[0m     @     0x7ef6254a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25048)[0m     @     0x7ef62279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25048)[0m     @     0x7ef622797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25048)[0m     @     0x7ef622797b53 at::TensorIterator::for_each()
[2m[36m(pid=25063)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25063)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25063)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25063)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25063)[0m *** SIGSEGV (@0x0) received by PID 25063 (TID 0x7f2877b02700) from PID 0; stack trace: ***
[2m[36m(pid=25063)[0m     @     0x7f28776db390 (unknown)
[2m[36m(pid=25063)[0m     @     0x7ef979896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25063)[0m     @     0x7ef976b8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25063)[0m     @     0x7ef976b8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25063)[0m     @     0x7ef976b8db53 at::TensorIterator::for_each()
[2m[36m(pid=25040)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25040)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25040)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25040)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25040)[0m *** SIGSEGV (@0x0) received by PID 25040 (TID 0x7f05af8ca700) from PID 0; stack trace: ***
[2m[36m(pid=25040)[0m     @     0x7f05af4a3390 (unknown)
[2m[36m(pid=25040)[0m     @     0x7ed6b14a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25040)[0m     @     0x7ed6ae79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25040)[0m     @     0x7ed6ae797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25117)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25117)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25117)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25117)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25117)[0m *** SIGSEGV (@0x0) received by PID 25117 (TID 0x7fdd93e9c700) from PID 0; stack trace: ***
[2m[36m(pid=25117)[0m     @     0x7fdd93a75390 (unknown)
[2m[36m(pid=25117)[0m     @     0x7fae95c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25117)[0m     @     0x7fae92f3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25117)[0m     @     0x7fae92f33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25167)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25167)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25167)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25167)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25167)[0m *** SIGSEGV (@0x0) received by PID 25167 (TID 0x7f79b0d8c700) from PID 0; stack trace: ***
[2m[36m(pid=25167)[0m     @     0x7f79b0965390 (unknown)
[2m[36m(pid=25167)[0m     @     0x7f4ab2b67fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25167)[0m     @     0x7f4aafe5b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25167)[0m     @     0x7f4aafe5e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25039)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25039)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25039)[0m *** SIGSEGV (@0x0) received by PID 25039 (TID 0x7f9d0933f700) from PID 0; stack trace: ***
[2m[36m(pid=25039)[0m     @     0x7f9d08f18390 (unknown)
[2m[36m(pid=25039)[0m     @     0x7f6e0a559fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25039)[0m     @     0x7f6e0784d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25039)[0m     @     0x7f6e07850977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25057)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25057)[0m *** SIGSEGV (@0x0) received by PID 25057 (TID 0x7fbac6401700) from PID 0; stack trace: ***
[2m[36m(pid=25057)[0m     @     0x7fbac5fda390 (unknown)
[2m[36m(pid=25057)[0m     @     0x7f8bc809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25057)[0m     @     0x7f8bc538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25057)[0m     @     0x7f8bc5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25145)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25145)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25145)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25145)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25145)[0m *** SIGSEGV (@0x0) received by PID 25145 (TID 0x7f2fc1a8d700) from PID 0; stack trace: ***
[2m[36m(pid=25145)[0m     @     0x7f2fc1666390 (unknown)
[2m[36m(pid=25145)[0m     @     0x7f00c3859fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25145)[0m     @     0x7f00c0b4d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25145)[0m     @     0x7f00c0b50977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25145)[0m     @     0x7f00c0b50b53 at::TensorIterator::for_each()
[2m[36m(pid=25145)[0m     @     0x7f00c0b50e11 at::TensorIterator::for_each()
[2m[36m(pid=25145)[0m     @     0x7f00c3869c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25145)[0m     @     0x7f00c388ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25145)[0m     @     0x7f00c08ca009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25145)[0m     @     0x7f00c08c8c3f at::native::copy_impl()
[2m[36m(pid=25145)[0m     @     0x7f00c08c9ed4 at::native::copy_()
[2m[36m(pid=25145)[0m     @     0x7f00c100c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25069)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25069)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25069)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25069)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25069)[0m *** SIGSEGV (@0x0) received by PID 25069 (TID 0x7f204c06f700) from PID 0; stack trace: ***
[2m[36m(pid=25069)[0m     @     0x7f204bc48390 (unknown)
[2m[36m(pid=25069)[0m     @     0x7ef14dc3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25069)[0m     @     0x7ef14af3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25069)[0m     @     0x7ef14af33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25069)[0m     @     0x7ef14af33b53 at::TensorIterator::for_each()
[2m[36m(pid=25069)[0m     @     0x7ef14af33e11 at::TensorIterator::for_each()
[2m[36m(pid=25069)[0m     @     0x7ef14dc4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25069)[0m     @     0x7ef14dc6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25069)[0m     @     0x7ef14acad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25069)[0m     @     0x7ef14acabc3f at::native::copy_impl()
[2m[36m(pid=25069)[0m     @     0x7ef14acaced4 at::native::copy_()
[2m[36m(pid=25069)[0m     @     0x7ef14b3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25157)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25157)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25157)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25157)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25157)[0m *** SIGSEGV (@0x0) received by PID 25157 (TID 0x7f85d7c19700) from PID 0; stack trace: ***
[2m[36m(pid=25157)[0m     @     0x7f85d77f2390 (unknown)
[2m[36m(pid=25157)[0m     @     0x7f56d99c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25157)[0m     @     0x7f56d6cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25157)[0m     @     0x7f56d6cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25157)[0m     @     0x7f56d6cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=25157)[0m     @     0x7f56d6cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=25157)[0m     @     0x7f56d99d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25157)[0m     @     0x7f56d99fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25157)[0m     @     0x7f56d6a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25157)[0m     @     0x7f56d6a37c3f at::native::copy_impl()
[2m[36m(pid=25157)[0m     @     0x7f56d6a38ed4 at::native::copy_()
[2m[36m(pid=25157)[0m     @     0x7f56d717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25157)[0m     @     0x7f56d7283148 at::Tensor::copy_()
[2m[36m(pid=25157)[0m     @     0x7f56d8e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25056)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25056)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25056)[0m *** SIGSEGV (@0x0) received by PID 25056 (TID 0x7f8531221700) from PID 0; stack trace: ***
[2m[36m(pid=25056)[0m     @     0x7f8530dfa390 (unknown)
[2m[36m(pid=25056)[0m     @     0x7f5632ff7fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25056)[0m     @     0x7f56302eb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25056)[0m     @     0x7f56302ee977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25056)[0m     @     0x7f56302eeb53 at::TensorIterator::for_each()
[2m[36m(pid=25056)[0m     @     0x7f56302eee11 at::TensorIterator::for_each()
[2m[36m(pid=25056)[0m     @     0x7f5633007c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25056)[0m     @     0x7f563302acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25056)[0m     @     0x7f5630068009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25056)[0m     @     0x7f5630066c3f at::native::copy_impl()
[2m[36m(pid=25056)[0m     @     0x7f5630067ed4 at::native::copy_()
[2m[36m(pid=25056)[0m     @     0x7f56307aa5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25056)[0m     @     0x7f56308b2148 at::Tensor::copy_()
[2m[36m(pid=25056)[0m     @     0x7f56324a9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25177)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25177)[0m *** SIGSEGV (@0x0) received by PID 25177 (TID 0x7fe4ae1d8700) from PID 0; stack trace: ***
[2m[36m(pid=25177)[0m     @     0x7fe4addb1390 (unknown)
[2m[36m(pid=25177)[0m     @     0x7fb5affc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25177)[0m     @     0x7fb5ad2bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25177)[0m     @     0x7fb5ad2c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25177)[0m     @     0x7fb5ad2c0b53 at::TensorIterator::for_each()
[2m[36m(pid=25177)[0m     @     0x7fb5ad2c0e11 at::TensorIterator::for_each()
[2m[36m(pid=25177)[0m     @     0x7fb5affd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25177)[0m     @     0x7fb5afffccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25177)[0m     @     0x7fb5ad03a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25177)[0m     @     0x7fb5ad038c3f at::native::copy_impl()
[2m[36m(pid=25177)[0m     @     0x7fb5ad039ed4 at::native::copy_()
[2m[36m(pid=25177)[0m     @     0x7fb5ad77c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25177)[0m     @     0x7fb5ad884148 at::Tensor::copy_()
[2m[36m(pid=25177)[0m     @     0x7fb5af47b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25177)[0m     @     0x7fb5ad77c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25148)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25148)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25148)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25148)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25148)[0m *** SIGSEGV (@0x0) received by PID 25148 (TID 0x7f97683db700) from PID 0; stack trace: ***
[2m[36m(pid=25148)[0m     @     0x7f9767fb4390 (unknown)
[2m[36m(pid=25148)[0m     @     0x7f686a12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25148)[0m     @     0x7f686742164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25148)[0m     @     0x7f6867424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25148)[0m     @     0x7f6867424b53 at::TensorIterator::for_each()
[2m[36m(pid=25148)[0m     @     0x7f6867424e11 at::TensorIterator::for_each()
[2m[36m(pid=25148)[0m     @     0x7f686a13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25148)[0m     @     0x7f686a160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25148)[0m     @     0x7f686719e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25148)[0m     @     0x7f686719cc3f at::native::copy_impl()
[2m[36m(pid=25148)[0m     @     0x7f686719ded4 at::native::copy_()
[2m[36m(pid=25148)[0m     @     0x7f68678e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25160)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25160)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25160)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25160)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25160)[0m *** SIGSEGV (@0x0) received by PID 25160 (TID 0x7f13a95e4700) from PID 0; stack trace: ***
[2m[36m(pid=25160)[0m     @     0x7f13a91bd390 (unknown)
[2m[36m(pid=25160)[0m     @     0x7ee4ab32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25160)[0m     @     0x7ee4a862064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25160)[0m     @     0x7ee4a8623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25160)[0m     @     0x7ee4a8623b53 at::TensorIterator::for_each()
[2m[36m(pid=25160)[0m     @     0x7ee4a8623e11 at::TensorIterator::for_each()
[2m[36m(pid=25160)[0m     @     0x7ee4ab33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25160)[0m     @     0x7ee4ab35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25160)[0m     @     0x7ee4a839d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25160)[0m     @     0x7ee4a839bc3f at::native::copy_impl()
[2m[36m(pid=25160)[0m     @     0x7ee4a839ced4 at::native::copy_()
[2m[36m(pid=25160)[0m     @     0x7ee4a8adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25160)[0m     @     0x7ee4a8be7148 at::Tensor::copy_()
[2m[36m(pid=25160)[0m     @     0x7ee4aa7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25160)[0m     @     0x7ee4a8adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25119)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25119)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25119)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25119)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25119)[0m *** SIGSEGV (@0x0) received by PID 25119 (TID 0x7ff67cf67700) from PID 0; stack trace: ***
[2m[36m(pid=25119)[0m     @     0x7ff67cb40390 (unknown)
[2m[36m(pid=25119)[0m     @     0x7fc77ea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25119)[0m     @     0x7fc77bd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25119)[0m     @     0x7fc77bd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25119)[0m     @     0x7fc77bd93b53 at::TensorIterator::for_each()
[2m[36m(pid=25119)[0m     @     0x7fc77bd93e11 at::TensorIterator::for_each()
[2m[36m(pid=25119)[0m     @     0x7fc77eaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25119)[0m     @     0x7fc77eacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25119)[0m     @     0x7fc77bb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25119)[0m     @     0x7fc77bb0bc3f at::native::copy_impl()
[2m[36m(pid=25119)[0m     @     0x7fc77bb0ced4 at::native::copy_()
[2m[36m(pid=25119)[0m     @     0x7fc77c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25119)[0m     @     0x7fc77c357148 at::Tensor::copy_()
[2m[36m(pid=25119)[0m     @     0x7fc77df4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25142)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25142)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25142)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25142)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25142)[0m *** SIGSEGV (@0x0) received by PID 25142 (TID 0x7f6e262c3700) from PID 0; stack trace: ***
[2m[36m(pid=25142)[0m     @     0x7f6e25e9c390 (unknown)
[2m[36m(pid=25142)[0m     @     0x7f3f2809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25142)[0m     @     0x7f3f2538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25142)[0m     @     0x7f3f25392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25142)[0m     @     0x7f3f25392b53 at::TensorIterator::for_each()
[2m[36m(pid=25142)[0m     @     0x7f3f25392e11 at::TensorIterator::for_each()
[2m[36m(pid=25142)[0m     @     0x7f3f280abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25142)[0m     @     0x7f3f280cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25142)[0m     @     0x7f3f2510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25142)[0m     @     0x7f3f2510ac3f at::native::copy_impl()
[2m[36m(pid=25142)[0m     @     0x7f3f2510bed4 at::native::copy_()
[2m[36m(pid=25142)[0m     @     0x7f3f2584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25142)[0m     @     0x7f3f25956148 at::Tensor::copy_()
[2m[36m(pid=25142)[0m     @     0x7f3f2754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25142)[0m     @     0x7f3f2584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25133)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25133)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25133)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25133)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25133)[0m *** SIGSEGV (@0x0) received by PID 25133 (TID 0x7f0421583700) from PID 0; stack trace: ***
[2m[36m(pid=25133)[0m     @     0x7f042115c390 (unknown)
[2m[36m(pid=25133)[0m     @     0x7ed523370fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25133)[0m     @     0x7ed52066464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25133)[0m     @     0x7ed520667977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25133)[0m     @     0x7ed520667b53 at::TensorIterator::for_each()
[2m[36m(pid=25133)[0m     @     0x7ed520667e11 at::TensorIterator::for_each()
[2m[36m(pid=25133)[0m     @     0x7ed523380c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25133)[0m     @     0x7ed5233a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25133)[0m     @     0x7ed5203e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25133)[0m     @     0x7ed5203dfc3f at::native::copy_impl()
[2m[36m(pid=25133)[0m     @     0x7ed5203e0ed4 at::native::copy_()
[2m[36m(pid=25133)[0m     @     0x7ed520b235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25133)[0m     @     0x7ed520c2b148 at::Tensor::copy_()
[2m[36m(pid=25133)[0m     @     0x7ed522822989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25176)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25176)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25176)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25176)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25176)[0m *** SIGSEGV (@0x0) received by PID 25176 (TID 0x7fcbc5865700) from PID 0; stack trace: ***
[2m[36m(pid=25176)[0m     @     0x7fcbc543e390 (unknown)
[2m[36m(pid=25176)[0m     @     0x7f9cc75eefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25176)[0m     @     0x7f9cc48e264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25176)[0m     @     0x7f9cc48e5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25176)[0m     @     0x7f9cc48e5b53 at::TensorIterator::for_each()
[2m[36m(pid=25176)[0m     @     0x7f9cc48e5e11 at::TensorIterator::for_each()
[2m[36m(pid=25176)[0m     @     0x7f9cc75fec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25176)[0m     @     0x7f9cc7621cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25176)[0m     @     0x7f9cc465f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25176)[0m     @     0x7f9cc465dc3f at::native::copy_impl()
[2m[36m(pid=25176)[0m     @     0x7f9cc465eed4 at::native::copy_()
[2m[36m(pid=25176)[0m     @     0x7f9cc4da15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25176)[0m     @     0x7f9cc4ea9148 at::Tensor::copy_()
[2m[36m(pid=25176)[0m     @     0x7f9cc6aa0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25176)[0m     @     0x7f9cc4da15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25062)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25062)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25062)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25062)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25062)[0m *** SIGSEGV (@0x0) received by PID 25062 (TID 0x7fdfbc527700) from PID 0; stack trace: ***
[2m[36m(pid=25062)[0m     @     0x7fdfbc100390 (unknown)
[2m[36m(pid=25062)[0m     @     0x7fb0be293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25062)[0m     @     0x7fb0bb58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25062)[0m     @     0x7fb0bb58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25062)[0m     @     0x7fb0bb58ab53 at::TensorIterator::for_each()
[2m[36m(pid=25062)[0m     @     0x7fb0bb58ae11 at::TensorIterator::for_each()
[2m[36m(pid=25062)[0m     @     0x7fb0be2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25062)[0m     @     0x7fb0be2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25062)[0m     @     0x7fb0bb304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25062)[0m     @     0x7fb0bb302c3f at::native::copy_impl()
[2m[36m(pid=25062)[0m     @     0x7fb0bb303ed4 at::native::copy_()
[2m[36m(pid=25062)[0m     @     0x7fb0bba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25062)[0m     @     0x7fb0bbb4e148 at::Tensor::copy_()
[2m[36m(pid=25062)[0m     @     0x7fb0bd745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25062)[0m     @     0x7fb0bba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25166)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25166)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25166)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25166)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25166)[0m *** SIGSEGV (@0x0) received by PID 25166 (TID 0x7fd9864a4700) from PID 0; stack trace: ***
[2m[36m(pid=25166)[0m     @     0x7fd98607d390 (unknown)
[2m[36m(pid=25166)[0m     @     0x7faa8829ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25166)[0m     @     0x7faa8559364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25166)[0m     @     0x7faa85596977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25166)[0m     @     0x7faa85596b53 at::TensorIterator::for_each()
[2m[36m(pid=25166)[0m     @     0x7faa85596e11 at::TensorIterator::for_each()
[2m[36m(pid=25166)[0m     @     0x7faa882afc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25166)[0m     @     0x7faa882d2cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25166)[0m     @     0x7faa85310009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25166)[0m     @     0x7faa8530ec3f at::native::copy_impl()
[2m[36m(pid=25166)[0m     @     0x7faa8530fed4 at::native::copy_()
[2m[36m(pid=25166)[0m     @     0x7faa85a525cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25166)[0m     @     0x7faa85b5a148 at::Tensor::copy_()
[2m[36m(pid=25166)[0m     @     0x7faa87751989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25043)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25043)[0m *** SIGSEGV (@0x0) received by PID 25043 (TID 0x7f1dd10fd700) from PID 0; stack trace: ***
[2m[36m(pid=25043)[0m     @     0x7f1dd0cd6390 (unknown)
[2m[36m(pid=25043)[0m     @     0x7eeed2e96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25043)[0m     @     0x7eeed018a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25043)[0m     @     0x7eeed018d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25043)[0m     @     0x7eeed018db53 at::TensorIterator::for_each()
[2m[36m(pid=25162)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25162)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25162)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25162)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25162)[0m *** SIGSEGV (@0x0) received by PID 25162 (TID 0x7f0b1e758700) from PID 0; stack trace: ***
[2m[36m(pid=25162)[0m     @     0x7f0b1e331390 (unknown)
[2m[36m(pid=25162)[0m     @     0x7edc20204fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25162)[0m     @     0x7edc1d4f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25162)[0m     @     0x7edc1d4fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25162)[0m     @     0x7edc1d4fbb53 at::TensorIterator::for_each()
[2m[36m(pid=25162)[0m     @     0x7edc1d4fbe11 at::TensorIterator::for_each()
[2m[36m(pid=25169)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25169)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25169)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25169)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25169)[0m *** SIGSEGV (@0x0) received by PID 25169 (TID 0x7f68518a9700) from PID 0; stack trace: ***
[2m[36m(pid=25169)[0m     @     0x7f6851482390 (unknown)
[2m[36m(pid=25169)[0m     @     0x7f3953686fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25169)[0m     @     0x7f395097a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25169)[0m     @     0x7f395097d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25169)[0m     @     0x7f395097db53 at::TensorIterator::for_each()
[2m[36m(pid=25169)[0m     @     0x7f395097de11 at::TensorIterator::for_each()
[2m[36m(pid=25169)[0m     @     0x7f3953696c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25113)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25113)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25113)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25113)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25113)[0m *** SIGSEGV (@0x0) received by PID 25113 (TID 0x7f21d756c700) from PID 0; stack trace: ***
[2m[36m(pid=25113)[0m     @     0x7f21d7145390 (unknown)
[2m[36m(pid=25113)[0m     @     0x7ef2d935bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25113)[0m     @     0x7ef2d664f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25113)[0m     @     0x7ef2d6652977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25113)[0m     @     0x7ef2d6652b53 at::TensorIterator::for_each()
[2m[36m(pid=25113)[0m     @     0x7ef2d6652e11 at::TensorIterator::for_each()
[2m[36m(pid=25113)[0m     @     0x7ef2d936bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25113)[0m     @     0x7ef2d938ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25113)[0m     @     0x7ef2d63cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25113)[0m     @     0x7ef2d63cac3f at::native::copy_impl()
[2m[36m(pid=25113)[0m     @     0x7ef2d63cbed4 at::native::copy_()
[2m[36m(pid=25113)[0m     @     0x7ef2d6b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25042)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25042)[0m *** SIGSEGV (@0x0) received by PID 25042 (TID 0x7fb73f25e700) from PID 0; stack trace: ***
[2m[36m(pid=25042)[0m     @     0x7fb73ee37390 (unknown)
[2m[36m(pid=25042)[0m     @     0x7f8841067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25042)[0m     @     0x7f883e35b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25042)[0m     @     0x7f883e35e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25042)[0m     @     0x7f883e35eb53 at::TensorIterator::for_each()
[2m[36m(pid=25042)[0m     @     0x7f883e35ee11 at::TensorIterator::for_each()
[2m[36m(pid=25042)[0m     @     0x7f8841077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25042)[0m     @     0x7f884109acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25154)[0m     @     0x7fbe2c1e2b53 at::TensorIterator::for_each()
[2m[36m(pid=25154)[0m     @     0x7fbe2c1e2e11 at::TensorIterator::for_each()
[2m[36m(pid=25154)[0m     @     0x7fbe2eefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25154)[0m     @     0x7fbe2ef1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25154)[0m     @     0x7fbe2bf5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25154)[0m     @     0x7fbe2bf5ac3f at::native::copy_impl()
[2m[36m(pid=25154)[0m     @     0x7fbe2bf5bed4 at::native::copy_()
[2m[36m(pid=25154)[0m     @     0x7fbe2c69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25060)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25060)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25060)[0m *** SIGSEGV (@0x0) received by PID 25060 (TID 0x7ff17eee7700) from PID 0; stack trace: ***
[2m[36m(pid=25060)[0m     @     0x7ff17eac0390 (unknown)
[2m[36m(pid=25060)[0m     @     0x7fc280c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25060)[0m     @     0x7fc27df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25060)[0m     @     0x7fc27df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25060)[0m     @     0x7fc27df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=25112)[0m     @     0x7f91330bccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25112)[0m     @     0x7f91300fa009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25112)[0m     @     0x7f91300f8c3f at::native::copy_impl()
[2m[36m(pid=25112)[0m     @     0x7f91300f9ed4 at::native::copy_()
[2m[36m(pid=25112)[0m     @     0x7f913083c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25112)[0m     @     0x7f9130944148 at::Tensor::copy_()
[2m[36m(pid=25112)[0m     @     0x7f913253b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25049)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25049)[0m *** SIGSEGV (@0x0) received by PID 25049 (TID 0x7f5bc948b700) from PID 0; stack trace: ***
[2m[36m(pid=25049)[0m     @     0x7f5bc9064390 (unknown)
[2m[36m(pid=25049)[0m     @     0x7f2ccb25afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25049)[0m     @     0x7f2cc854e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25049)[0m     @     0x7f2cc8551977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25049)[0m     @     0x7f2cc8551b53 at::TensorIterator::for_each()
[2m[36m(pid=25049)[0m     @     0x7f2cc8551e11 at::TensorIterator::for_each()
[2m[36m(pid=25120)[0m     @     0x7f80adf8fb53 at::TensorIterator::for_each()
[2m[36m(pid=25120)[0m     @     0x7f80adf8fe11 at::TensorIterator::for_each()
[2m[36m(pid=25120)[0m     @     0x7f80b0ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25120)[0m     @     0x7f80b0ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25120)[0m     @     0x7f80add09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25120)[0m     @     0x7f80add07c3f at::native::copy_impl()
[2m[36m(pid=25120)[0m     @     0x7f80add08ed4 at::native::copy_()
[2m[36m(pid=25044)[0m     @     0x7f1cfd6c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25044)[0m     @     0x7f1cfd6e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25044)[0m     @     0x7f1cfa722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25044)[0m     @     0x7f1cfa720c3f at::native::copy_impl()
[2m[36m(pid=25044)[0m     @     0x7f1cfa721ed4 at::native::copy_()
[2m[36m(pid=25044)[0m     @     0x7f1cfae645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25044)[0m     @     0x7f1cfaf6c148 at::Tensor::copy_()
[2m[36m(pid=25044)[0m     @     0x7f1cfcb63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25103)[0m     @     0x7fb39113dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25103)[0m     @     0x7fb38e17b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25103)[0m     @     0x7fb38e179c3f at::native::copy_impl()
[2m[36m(pid=25103)[0m     @     0x7fb38e17aed4 at::native::copy_()
[2m[36m(pid=25103)[0m     @     0x7fb38e8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25103)[0m     @     0x7fb38e9c5148 at::Tensor::copy_()
[2m[36m(pid=25103)[0m     @     0x7fb3905bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25155)[0m     @     0x7f319c0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25155)[0m     @     0x7f319910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25155)[0m     @     0x7f319910ac3f at::native::copy_impl()
[2m[36m(pid=25155)[0m     @     0x7f319910bed4 at::native::copy_()
[2m[36m(pid=25155)[0m     @     0x7f319984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25155)[0m     @     0x7f3199956148 at::Tensor::copy_()
[2m[36m(pid=25155)[0m     @     0x7f319b54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25174)[0m     @     0x7fae06d35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25174)[0m     @     0x7fae03d73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25174)[0m     @     0x7fae03d71c3f at::native::copy_impl()
[2m[36m(pid=25174)[0m     @     0x7fae03d72ed4 at::native::copy_()
[2m[36m(pid=25174)[0m     @     0x7fae044b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25174)[0m     @     0x7fae045bd148 at::Tensor::copy_()
[2m[36m(pid=25174)[0m     @     0x7fae061b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25061)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25061)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25061)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25061)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25061)[0m *** SIGSEGV (@0x0) received by PID 25061 (TID 0x7fcb7f0db700) from PID 0; stack trace: ***
[2m[36m(pid=25061)[0m     @     0x7fcb7ecb4390 (unknown)
[2m[36m(pid=25061)[0m     @     0x7f9c80c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25061)[0m     @     0x7f9c7df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25138)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25138)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25138)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25138)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25138)[0m *** SIGSEGV (@0x0) received by PID 25138 (TID 0x7f41cfa0e700) from PID 0; stack trace: ***
[2m[36m(pid=25138)[0m     @     0x7f41cf5e7390 (unknown)
[2m[36m(pid=25138)[0m     @     0x7f12d1804fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25138)[0m     @     0x7f12ceaf864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25138)[0m     @     0x7f12ceafb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25138)[0m     @     0x7f12ceafbb53 at::TensorIterator::for_each()
[2m[36m(pid=25163)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25163)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25163)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25163)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25163)[0m *** SIGSEGV (@0x0) received by PID 25163 (TID 0x7f10a74d9700) from PID 0; stack trace: ***
[2m[36m(pid=25163)[0m     @     0x7f10a70b2390 (unknown)
[2m[36m(pid=25163)[0m     @     0x7ee1a92c9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25163)[0m     @     0x7ee1a65bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25129)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25129)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25129)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25129)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25129)[0m *** SIGSEGV (@0x0) received by PID 25129 (TID 0x7f5abc5c4700) from PID 0; stack trace: ***
[2m[36m(pid=25129)[0m     @     0x7f5abc19d390 (unknown)
[2m[36m(pid=25129)[0m     @     0x7f2bbe344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25129)[0m     @     0x7f2bbb63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25129)[0m     @     0x7f2bbb63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25104)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25104)[0m *** SIGSEGV (@0x0) received by PID 25104 (TID 0x7f28ca06f700) from PID 0; stack trace: ***
[2m[36m(pid=25104)[0m     @     0x7f28c9c48390 (unknown)
[2m[36m(pid=25104)[0m     @     0x7ef9cbe63fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25104)[0m     @     0x7ef9c915764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25111)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25111)[0m *** SIGSEGV (@0x0) received by PID 25111 (TID 0x7fcbe3dd4700) from PID 0; stack trace: ***
[2m[36m(pid=25111)[0m     @     0x7fcbe39ad390 (unknown)
[2m[36m(pid=25111)[0m     @     0x7f9ce5b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25111)[0m     @     0x7f9ce2e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25111)[0m     @     0x7f9ce2e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25173)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25173)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25173)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25173)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25173)[0m *** SIGSEGV (@0x0) received by PID 25173 (TID 0x7f90cae7d700) from PID 0; stack trace: ***
[2m[36m(pid=25173)[0m     @     0x7f90caa56390 (unknown)
[2m[36m(pid=25173)[0m     @     0x7f61ccc43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25173)[0m     @     0x7f61c9f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25046)[0m *** SIGSEGV (@0x0) received by PID 25046 (TID 0x7f70653a6700) from PID 0; stack trace: ***
[2m[36m(pid=25046)[0m     @     0x7f7064f7f390 (unknown)
[2m[36m(pid=25046)[0m     @     0x7f4166dfcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25046)[0m     @     0x7f41640f064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25046)[0m     @     0x7f41640f3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25046)[0m     @     0x7f41640f3b53 at::TensorIterator::for_each()
[2m[36m(pid=25046)[0m     @     0x7f41640f3e11 at::TensorIterator::for_each()
[2m[36m(pid=25170)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25170)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25170)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25170)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25170)[0m *** SIGSEGV (@0x0) received by PID 25170 (TID 0x7f18995b9700) from PID 0; stack trace: ***
[2m[36m(pid=25170)[0m     @     0x7f1899192390 (unknown)
[2m[36m(pid=25170)[0m     @     0x7ee99b32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25170)[0m     @     0x7ee99862064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25170)[0m     @     0x7ee998623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25170)[0m     @     0x7ee998623b53 at::TensorIterator::for_each()
[2m[36m(pid=25045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25045)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25045)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25045)[0m *** SIGSEGV (@0x0) received by PID 25045 (TID 0x7ffafc1d8700) from PID 0; stack trace: ***
[2m[36m(pid=25045)[0m     @     0x7ffafbdb1390 (unknown)
[2m[36m(pid=25045)[0m     @     0x7fcbfdfd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25045)[0m     @     0x7fcbfb2c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25045)[0m     @     0x7fcbfb2cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25045)[0m     @     0x7fcbfb2ccb53 at::TensorIterator::for_each()
[2m[36m(pid=25178)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25178)[0m *** SIGSEGV (@0x0) received by PID 25178 (TID 0x7f96576e3700) from PID 0; stack trace: ***
[2m[36m(pid=25178)[0m     @     0x7f96572bc390 (unknown)
[2m[36m(pid=25178)[0m     @     0x7f67594a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25178)[0m     @     0x7f675679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25178)[0m     @     0x7f6756797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25178)[0m     @     0x7f6756797b53 at::TensorIterator::for_each()
[2m[36m(pid=25152)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25152)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25152)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25152)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25152)[0m *** SIGSEGV (@0x0) received by PID 25152 (TID 0x7f5d35962700) from PID 0; stack trace: ***
[2m[36m(pid=25152)[0m     @     0x7f5d3553b390 (unknown)
[2m[36m(pid=25152)[0m     @     0x7f2e3775afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25152)[0m     @     0x7f2e34a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25152)[0m     @     0x7f2e34a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25152)[0m     @     0x7f2e34a51b53 at::TensorIterator::for_each()
[2m[36m(pid=25099)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25099)[0m *** SIGSEGV (@0x0) received by PID 25099 (TID 0x7f8bf941c700) from PID 0; stack trace: ***
[2m[36m(pid=25099)[0m     @     0x7f8bf8ff5390 (unknown)
[2m[36m(pid=25099)[0m     @     0x7f5cfb11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25099)[0m     @     0x7f5cf840f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25099)[0m     @     0x7f5cf8412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25099)[0m     @     0x7f5cf8412b53 at::TensorIterator::for_each()
[2m[36m(pid=25099)[0m     @     0x7f5cf8412e11 at::TensorIterator::for_each()
[2m[36m(pid=25182)[0m     @     0x7f52cb10e390 (unknown)
[2m[36m(pid=25182)[0m     @     0x7f23cd309fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25182)[0m     @     0x7f23ca5fd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25182)[0m     @     0x7f23ca600977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25182)[0m     @     0x7f23ca600b53 at::TensorIterator::for_each()
[2m[36m(pid=25182)[0m     @     0x7f23ca600e11 at::TensorIterator::for_each()
[2m[36m(pid=25182)[0m     @     0x7f23cd319c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25182)[0m     @     0x7f23cd33ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25070)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25070)[0m *** SIGSEGV (@0x0) received by PID 25070 (TID 0x7fc8983fd700) from PID 0; stack trace: ***
[2m[36m(pid=25070)[0m     @     0x7fc897fd6390 (unknown)
[2m[36m(pid=25070)[0m     @     0x7f999a12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25070)[0m     @     0x7f999742164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25070)[0m     @     0x7f9997424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25070)[0m     @     0x7f9997424b53 at::TensorIterator::for_each()
[2m[36m(pid=25070)[0m     @     0x7f9997424e11 at::TensorIterator::for_each()
[2m[36m(pid=25070)[0m     @     0x7f999a13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25114)[0m *** SIGSEGV (@0x0) received by PID 25114 (TID 0x7faec9a31700) from PID 0; stack trace: ***
[2m[36m(pid=25114)[0m     @     0x7faec960a390 (unknown)
[2m[36m(pid=25114)[0m     @     0x7f7fcb81bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25114)[0m     @     0x7f7fc8b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25114)[0m     @     0x7f7fc8b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25114)[0m     @     0x7f7fc8b12b53 at::TensorIterator::for_each()
[2m[36m(pid=25114)[0m     @     0x7f7fc8b12e11 at::TensorIterator::for_each()
[2m[36m(pid=25114)[0m     @     0x7f7fcb82bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25114)[0m     @     0x7f7fcb84ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25074)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25074)[0m *** SIGSEGV (@0x0) received by PID 25074 (TID 0x7f345cad2700) from PID 0; stack trace: ***
[2m[36m(pid=25074)[0m     @     0x7f345c6ab390 (unknown)
[2m[36m(pid=25074)[0m     @     0x7f055e8d6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25074)[0m     @     0x7f055bbca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25074)[0m     @     0x7f055bbcd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25074)[0m     @     0x7f055bbcdb53 at::TensorIterator::for_each()
[2m[36m(pid=25074)[0m     @     0x7f055bbcde11 at::TensorIterator::for_each()
[2m[36m(pid=25074)[0m     @     0x7f055e8e6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25074)[0m     @     0x7f055e909cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25073)[0m     @     0x7f3dc9392e11 at::TensorIterator::for_each()
[2m[36m(pid=25073)[0m     @     0x7f3dcc0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25073)[0m     @     0x7f3dcc0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25073)[0m     @     0x7f3dc910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25073)[0m     @     0x7f3dc910ac3f at::native::copy_impl()
[2m[36m(pid=25073)[0m     @     0x7f3dc910bed4 at::native::copy_()
[2m[36m(pid=25073)[0m     @     0x7f3dc984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25055)[0m     @     0x7f65fab8de11 at::TensorIterator::for_each()
[2m[36m(pid=25055)[0m     @     0x7f65fd8a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25055)[0m     @     0x7f65fd8c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25055)[0m     @     0x7f65fa907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25055)[0m     @     0x7f65fa905c3f at::native::copy_impl()
[2m[36m(pid=25055)[0m     @     0x7f65fa906ed4 at::native::copy_()
[2m[36m(pid=25055)[0m     @     0x7f65fb0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25055)[0m     @     0x7f65fb151148 at::Tensor::copy_()
[2m[36m(pid=25055)[0m     @     0x7f65fcd48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25116)[0m     @     0x7fb1e5422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25116)[0m     @     0x7fb1e5420c3f at::native::copy_impl()
[2m[36m(pid=25116)[0m     @     0x7fb1e5421ed4 at::native::copy_()
[2m[36m(pid=25116)[0m     @     0x7fb1e5b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25116)[0m     @     0x7fb1e5c6c148 at::Tensor::copy_()
[2m[36m(pid=25116)[0m     @     0x7fb1e7863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25116)[0m     @     0x7fb1e5b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25161)[0m     @     0x7f745be29ed4 at::native::copy_()
[2m[36m(pid=25161)[0m     @     0x7f745c56c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25161)[0m     @     0x7f745c674148 at::Tensor::copy_()
[2m[36m(pid=25161)[0m     @     0x7f745e26b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25161)[0m     @     0x7f745c56c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25161)[0m     @     0x7f745c674148 at::Tensor::copy_()
[2m[36m(pid=25161)[0m     @     0x7f746292abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25161)[0m     @     0x55556e2defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25161)[0m     @     0x55556e239b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25161)[0m     @     0x55556e2c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25161)[0m     @     0x55556e2c5a20 method_vectorcall
[2m[36m(pid=25161)[0m     @     0x55556e239bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25161)[0m     @     0x55556e2c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25161)[0m     @     0x55556e2c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25161)[0m     @     0x55556e23a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25161)[0m     @     0x55556e2c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25161)[0m     @     0x55556e2c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25161)[0m     @     0x55556e23a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25161)[0m     @     0x55556e2c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25161)[0m     @     0x55556e2c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25161)[0m     @     0x55556e23a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25161)[0m     @     0x55556e2c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25051)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25051)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25051)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25051)[0m *** SIGSEGV (@0x0) received by PID 25051 (TID 0x7f5f649e9700) from PID 0; stack trace: ***
[2m[36m(pid=25051)[0m     @     0x7f5f645c2390 (unknown)
[2m[36m(pid=25051)[0m     @     0x7f30667adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25051)[0m     @     0x7f3063aa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25051)[0m     @     0x7f3063aa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25051)[0m     @     0x7f3063aa4b53 at::TensorIterator::for_each()
[2m[36m(pid=25051)[0m     @     0x7f3063aa4e11 at::TensorIterator::for_each()
[2m[36m(pid=25051)[0m     @     0x7f30667bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25051)[0m     @     0x7f30667e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25051)[0m     @     0x7f306381e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25058)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25058)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25058)[0m *** SIGSEGV (@0x0) received by PID 25058 (TID 0x7f903b335700) from PID 0; stack trace: ***
[2m[36m(pid=25058)[0m     @     0x7f903af0e390 (unknown)
[2m[36m(pid=25058)[0m     @     0x7f613d10afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25058)[0m     @     0x7f613a3fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25058)[0m     @     0x7f613a401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25058)[0m     @     0x7f613a401b53 at::TensorIterator::for_each()
[2m[36m(pid=25058)[0m     @     0x7f613a401e11 at::TensorIterator::for_each()
[2m[36m(pid=25058)[0m     @     0x7f613d11ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25058)[0m     @     0x7f613d13dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25058)[0m     @     0x7f613a17b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25100)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25100)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25100)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25100)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25100)[0m *** SIGSEGV (@0x0) received by PID 25100 (TID 0x7f0ec2c92700) from PID 0; stack trace: ***
[2m[36m(pid=25100)[0m     @     0x7f0ec286b390 (unknown)
[2m[36m(pid=25100)[0m     @     0x7edfc4981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25100)[0m     @     0x7edfc1c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25100)[0m     @     0x7edfc1c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25100)[0m     @     0x7edfc1c78b53 at::TensorIterator::for_each()
[2m[36m(pid=25100)[0m     @     0x7edfc1c78e11 at::TensorIterator::for_each()
[2m[36m(pid=25100)[0m     @     0x7edfc4991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25100)[0m     @     0x7edfc49b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25140)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25140)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25140)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25140)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25140)[0m *** SIGSEGV (@0x0) received by PID 25140 (TID 0x7fb537209700) from PID 0; stack trace: ***
[2m[36m(pid=25140)[0m     @     0x7fb536de2390 (unknown)
[2m[36m(pid=25140)[0m     @     0x7f8638ffafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25140)[0m     @     0x7f86362ee64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25140)[0m     @     0x7f86362f1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25140)[0m     @     0x7f86362f1b53 at::TensorIterator::for_each()
[2m[36m(pid=25140)[0m     @     0x7f86362f1e11 at::TensorIterator::for_each()
[2m[36m(pid=25140)[0m     @     0x7f863900ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25140)[0m     @     0x7f863902dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25140)[0m     @     0x7f863606b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25165)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25165)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25165)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25165)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25165)[0m *** SIGSEGV (@0x0) received by PID 25165 (TID 0x7fdbf592f700) from PID 0; stack trace: ***
[2m[36m(pid=25165)[0m     @     0x7fdbf5508390 (unknown)
[2m[36m(pid=25165)[0m     @     0x7facf771afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25165)[0m     @     0x7facf4a0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25165)[0m     @     0x7facf4a11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25165)[0m     @     0x7facf4a11b53 at::TensorIterator::for_each()
[2m[36m(pid=25165)[0m     @     0x7facf4a11e11 at::TensorIterator::for_each()
[2m[36m(pid=25165)[0m     @     0x7facf772ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25165)[0m     @     0x7facf774dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25165)[0m     @     0x7facf478b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25102)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25102)[0m *** SIGSEGV (@0x0) received by PID 25102 (TID 0x7f8c68c28700) from PID 0; stack trace: ***
[2m[36m(pid=25102)[0m     @     0x7f8c68801390 (unknown)
[2m[36m(pid=25102)[0m     @     0x7f5d6a7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25102)[0m     @     0x7f5d67ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25102)[0m     @     0x7f5d67ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25102)[0m     @     0x7f5d67ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=25102)[0m     @     0x7f5d67ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=25102)[0m     @     0x7f5d6a7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25102)[0m     @     0x7f5d6a80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25059)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25059)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25059)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25059)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25059)[0m *** SIGSEGV (@0x0) received by PID 25059 (TID 0x7f323b319700) from PID 0; stack trace: ***
[2m[36m(pid=25059)[0m     @     0x7f323aef2390 (unknown)
[2m[36m(pid=25059)[0m     @     0x7f033d10afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25059)[0m     @     0x7f033a3fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25059)[0m     @     0x7f033a401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25059)[0m     @     0x7f033a401b53 at::TensorIterator::for_each()
[2m[36m(pid=25059)[0m     @     0x7f033a401e11 at::TensorIterator::for_each()
[2m[36m(pid=25059)[0m     @     0x7f033d11ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25097)[0m *** Aborted at 1604574235 (unix time) try "date -d @1604574235" if you are using GNU date ***
[2m[36m(pid=25097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25097)[0m *** SIGSEGV (@0x0) received by PID 25097 (TID 0x7ff7bc1a7700) from PID 0; stack trace: ***
[2m[36m(pid=25097)[0m     @     0x7ff7bbd80390 (unknown)
[2m[36m(pid=25097)[0m     @     0x7fc8bdf9dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25097)[0m     @     0x7fc8bb29164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25097)[0m     @     0x7fc8bb294977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25097)[0m     @     0x7fc8bb294b53 at::TensorIterator::for_each()
[2m[36m(pid=25097)[0m     @     0x7fc8bb294e11 at::TensorIterator::for_each()
[2m[36m(pid=25097)[0m     @     0x7fc8bdfadc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25097)[0m     @     0x7fc8bdfd0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25041)[0m *** SIGSEGV (@0x0) received by PID 25041 (TID 0x7f8a75b5e700) from PID 0; stack trace: ***
[2m[36m(pid=25041)[0m     @     0x7f8a75737390 (unknown)
[2m[36m(pid=25041)[0m     @     0x7f5b77953fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25041)[0m     @     0x7f5b74c4764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25041)[0m     @     0x7f5b74c4a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25041)[0m     @     0x7f5b74c4ab53 at::TensorIterator::for_each()
[2m[36m(pid=25041)[0m     @     0x7f5b74c4ae11 at::TensorIterator::for_each()
[2m[36m(pid=25041)[0m     @     0x7f5b77963c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25041)[0m     @     0x7f5b77986cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25041)[0m     @     0x7f5b749c4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25149)[0m     @     0x7f48736d9390 (unknown)
[2m[36m(pid=25149)[0m     @     0x7f19758f8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25149)[0m     @     0x7f1972bec64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25149)[0m     @     0x7f1972bef977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25149)[0m     @     0x7f1972befb53 at::TensorIterator::for_each()
[2m[36m(pid=25149)[0m     @     0x7f1972befe11 at::TensorIterator::for_each()
[2m[36m(pid=25149)[0m     @     0x7f1975908c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25149)[0m     @     0x7f197592bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25149)[0m     @     0x7f1972969009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25149)[0m     @     0x7f1972967c3f at::native::copy_impl()
[2m[36m(pid=25136)[0m     @     0x7ef7a85c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25136)[0m     @     0x7ef7a58b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25136)[0m     @     0x7ef7a58b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25136)[0m     @     0x7ef7a58b9b53 at::TensorIterator::for_each()
[2m[36m(pid=25136)[0m     @     0x7ef7a58b9e11 at::TensorIterator::for_each()
[2m[36m(pid=25136)[0m     @     0x7ef7a85d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25136)[0m     @     0x7ef7a85f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25136)[0m     @     0x7ef7a5633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25136)[0m     @     0x7ef7a5631c3f at::native::copy_impl()
[2m[36m(pid=25067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25067)[0m *** SIGSEGV (@0x0) received by PID 25067 (TID 0x7f27db685700) from PID 0; stack trace: ***
[2m[36m(pid=25067)[0m     @     0x7f27db25e390 (unknown)
[2m[36m(pid=25067)[0m     @     0x7ef8dd38cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25067)[0m     @     0x7ef8da68064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25047)[0m     @     0x7f49e2797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25047)[0m     @     0x7f49e2797b53 at::TensorIterator::for_each()
[2m[36m(pid=25047)[0m     @     0x7f49e2797e11 at::TensorIterator::for_each()
[2m[36m(pid=25047)[0m     @     0x7f49e54b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25047)[0m     @     0x7f49e54d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25047)[0m     @     0x7f49e2511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25047)[0m     @     0x7f49e250fc3f at::native::copy_impl()
[2m[36m(pid=25110)[0m     @     0x7ee3baae0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25110)[0m     @     0x7ee3baae0b53 at::TensorIterator::for_each()
[2m[36m(pid=25110)[0m     @     0x7ee3baae0e11 at::TensorIterator::for_each()
[2m[36m(pid=25110)[0m     @     0x7ee3bd7f9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25110)[0m     @     0x7ee3bd81ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25110)[0m     @     0x7ee3ba85a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25110)[0m     @     0x7ee3ba858c3f at::native::copy_impl()
[2m[36m(pid=25072)[0m     @     0x7fb2c5c78b53 at::TensorIterator::for_each()
[2m[36m(pid=25072)[0m     @     0x7fb2c5c78e11 at::TensorIterator::for_each()
[2m[36m(pid=25072)[0m     @     0x7fb2c8991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25072)[0m     @     0x7fb2c89b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25072)[0m     @     0x7fb2c59f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25072)[0m     @     0x7fb2c59f0c3f at::native::copy_impl()
[2m[36m(pid=25050)[0m     @     0x7fb2f3db9b53 at::TensorIterator::for_each()
[2m[36m(pid=25050)[0m     @     0x7fb2f3db9e11 at::TensorIterator::for_each()
[2m[36m(pid=25050)[0m     @     0x7fb2f6ad2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25050)[0m     @     0x7fb2f6af5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25050)[0m     @     0x7fb2f3b33009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25050)[0m     @     0x7fb2f3b31c3f at::native::copy_impl()
[2m[36m(pid=25068)[0m     @     0x7fc9d2331b53 at::TensorIterator::for_each()
[2m[36m(pid=25068)[0m     @     0x7fc9d2331e11 at::TensorIterator::for_each()
[2m[36m(pid=25068)[0m     @     0x7fc9d504ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25068)[0m     @     0x7fc9d506dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25068)[0m     @     0x7fc9d20ab009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25068)[0m     @     0x7fc9d20a9c3f at::native::copy_impl()
[2m[36m(pid=25095)[0m     @     0x7fa87f951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25147)[0m     @     0x7ed9316a3b53 at::TensorIterator::for_each()
[2m[36m(pid=25147)[0m     @     0x7ed9316a3e11 at::TensorIterator::for_each()
[2m[36m(pid=25147)[0m     @     0x7ed9343bcc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25147)[0m     @     0x7ed9343dfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25147)[0m     @     0x7ed93141d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25147)[0m     @     0x7ed93141bc3f at::native::copy_impl()
[2m[36m(pid=25164)[0m     @     0x7f2d73135b53 at::TensorIterator::for_each()
[2m[36m(pid=25164)[0m     @     0x7f2d73135e11 at::TensorIterator::for_each()
[2m[36m(pid=25164)[0m     @     0x7f2d75e4ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25164)[0m     @     0x7f2d75e71cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25164)[0m     @     0x7f2d72eaf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25121)[0m     @     0x7fa7a2344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25121)[0m     @     0x7fa79f63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25121)[0m     @     0x7fa79f63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25121)[0m     @     0x7fa79f63bb53 at::TensorIterator::for_each()
[2m[36m(pid=25150)[0m     @     0x7f81fb58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25150)[0m     @     0x7f81fb58ab53 at::TensorIterator::for_each()
[2m[36m(pid=25150)[0m     @     0x7f81fb58ae11 at::TensorIterator::for_each()
[2m[36m(pid=25150)[0m     @     0x7f81fe2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25115)[0m     @     0x7f08ea344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25115)[0m     @     0x7f08e763864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25115)[0m     @     0x7f08e763b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25053)[0m     @     0x7f619e1fdb53 at::TensorIterator::for_each()
[2m[36m(pid=25053)[0m     @     0x7f619e1fde11 at::TensorIterator::for_each()
[2m[36m(pid=25053)[0m     @     0x7f61a0f16c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25053)[0m     @     0x7f61a0f39cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25053)[0m     @     0x7f619df77009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25053)[0m     @     0x7f619df75c3f at::native::copy_impl()
[2m[36m(pid=25048)[0m     @     0x7ef622797e11 at::TensorIterator::for_each()
[2m[36m(pid=25048)[0m     @     0x7ef6254b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25048)[0m     @     0x7ef6254d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25048)[0m     @     0x7ef622511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25048)[0m     @     0x7ef62250fc3f at::native::copy_impl()
[2m[36m(pid=25048)[0m     @     0x7ef622510ed4 at::native::copy_()
[2m[36m(pid=25063)[0m     @     0x7ef976b8de11 at::TensorIterator::for_each()
[2m[36m(pid=25063)[0m     @     0x7ef9798a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25063)[0m     @     0x7ef9798c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25063)[0m     @     0x7ef976907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25063)[0m     @     0x7ef976905c3f at::native::copy_impl()
[2m[36m(pid=25063)[0m     @     0x7ef976906ed4 at::native::copy_()
[2m[36m(pid=25040)[0m     @     0x7ed6ae797b53 at::TensorIterator::for_each()
[2m[36m(pid=25040)[0m     @     0x7ed6ae797e11 at::TensorIterator::for_each()
[2m[36m(pid=25040)[0m     @     0x7ed6b14b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25040)[0m     @     0x7ed6b14d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25040)[0m     @     0x7ed6ae511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25040)[0m     @     0x7ed6ae50fc3f at::native::copy_impl()
[2m[36m(pid=25117)[0m     @     0x7fae92f33b53 at::TensorIterator::for_each()
[2m[36m(pid=25117)[0m     @     0x7fae92f33e11 at::TensorIterator::for_each()
[2m[36m(pid=25117)[0m     @     0x7fae95c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25117)[0m     @     0x7fae95c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25117)[0m     @     0x7fae92cad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25117)[0m     @     0x7fae92cabc3f at::native::copy_impl()
[2m[36m(pid=25167)[0m     @     0x7f4aafe5eb53 at::TensorIterator::for_each()
[2m[36m(pid=25167)[0m     @     0x7f4aafe5ee11 at::TensorIterator::for_each()
[2m[36m(pid=25167)[0m     @     0x7f4ab2b77c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25167)[0m     @     0x7f4ab2b9acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25167)[0m     @     0x7f4aafbd8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25167)[0m     @     0x7f4aafbd6c3f at::native::copy_impl()
[2m[36m(pid=25039)[0m     @     0x7f6e07850b53 at::TensorIterator::for_each()
[2m[36m(pid=25039)[0m     @     0x7f6e07850e11 at::TensorIterator::for_each()
[2m[36m(pid=25039)[0m     @     0x7f6e0a569c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25039)[0m     @     0x7f6e0a58ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25039)[0m     @     0x7f6e075ca009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25039)[0m     @     0x7f6e075c8c3f at::native::copy_impl()
[2m[36m(pid=25057)[0m     @     0x7f8bc5392b53 at::TensorIterator::for_each()
[2m[36m(pid=25057)[0m     @     0x7f8bc5392e11 at::TensorIterator::for_each()
[2m[36m(pid=25057)[0m     @     0x7f8bc80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25057)[0m     @     0x7f8bc80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25057)[0m     @     0x7f8bc510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25057)[0m     @     0x7f8bc510ac3f at::native::copy_impl()
[2m[36m(pid=25145)[0m     @     0x7f00c1114148 at::Tensor::copy_()
[2m[36m(pid=25145)[0m     @     0x7f00c2d0b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25145)[0m     @     0x7f00c100c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25145)[0m     @     0x7f00c1114148 at::Tensor::copy_()
[2m[36m(pid=25145)[0m     @     0x7f00c73cabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25145)[0m     @     0x55a754a4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25145)[0m     @     0x55a7549a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25145)[0m     @     0x55a754a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=25145)[0m     @     0x55a754a35a20 method_vectorcall
[2m[36m(pid=25145)[0m     @     0x55a7549a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25145)[0m     @     0x55a754a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=25145)[0m     @     0x55a754a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25145)[0m     @     0x55a7549aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25145)[0m     @     0x55a754a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=25145)[0m     @     0x55a754a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25145)[0m     @     0x55a7549aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25145)[0m     @     0x55a754a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=25145)[0m     @     0x55a754a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25145)[0m     @     0x55a7549aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25145)[0m     @     0x55a754a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=25069)[0m     @     0x7ef14b4f7148 at::Tensor::copy_()
[2m[36m(pid=25069)[0m     @     0x7ef14d0ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25069)[0m     @     0x7ef14b3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25069)[0m     @     0x7ef14b4f7148 at::Tensor::copy_()
[2m[36m(pid=25069)[0m     @     0x7ef1517adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25069)[0m     @     0x55af7712afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25069)[0m     @     0x55af77085b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25069)[0m     @     0x55af77110baf _PyEval_EvalCodeWithName
[2m[36m(pid=25069)[0m     @     0x55af77111a20 method_vectorcall
[2m[36m(pid=25069)[0m     @     0x55af77085bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25069)[0m     @     0x55af77110baf _PyEval_EvalCodeWithName
[2m[36m(pid=25069)[0m     @     0x55af77111643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25069)[0m     @     0x55af77086689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25069)[0m     @     0x55af77110baf _PyEval_EvalCodeWithName
[2m[36m(pid=25069)[0m     @     0x55af77111643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25069)[0m     @     0x55af77086689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25069)[0m     @     0x55af77110baf _PyEval_EvalCodeWithName
[2m[36m(pid=25069)[0m     @     0x55af77111643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25069)[0m     @     0x55af77086689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25069)[0m     @     0x55af77110baf _PyEval_EvalCodeWithName
[2m[36m(pid=25157)[0m     @     0x7f56d717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25157)[0m     @     0x7f56d7283148 at::Tensor::copy_()
[2m[36m(pid=25157)[0m     @     0x7f56dd539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25157)[0m     @     0x55e8227d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25157)[0m     @     0x55e82272cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25157)[0m     @     0x55e8227b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25157)[0m     @     0x55e8227b8a20 method_vectorcall
[2m[36m(pid=25157)[0m     @     0x55e82272cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25157)[0m     @     0x55e8227b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25157)[0m     @     0x55e8227b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25157)[0m     @     0x55e82272d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25157)[0m     @     0x55e8227b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25157)[0m     @     0x55e8227b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25157)[0m     @     0x55e82272d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25157)[0m     @     0x55e8227b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25157)[0m     @     0x55e8227b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25157)[0m     @     0x55e82272d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25157)[0m     @     0x55e8227b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25056)[0m     @     0x7f56307aa5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25056)[0m     @     0x7f56308b2148 at::Tensor::copy_()
[2m[36m(pid=25056)[0m     @     0x7f5636b68bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25056)[0m     @     0x56291ea8dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25056)[0m     @     0x56291e9e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25056)[0m     @     0x56291ea73baf _PyEval_EvalCodeWithName
[2m[36m(pid=25056)[0m     @     0x56291ea74a20 method_vectorcall
[2m[36m(pid=25056)[0m     @     0x56291e9e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25056)[0m     @     0x56291ea73baf _PyEval_EvalCodeWithName
[2m[36m(pid=25056)[0m     @     0x56291ea74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25056)[0m     @     0x56291e9e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25056)[0m     @     0x56291ea73baf _PyEval_EvalCodeWithName
[2m[36m(pid=25056)[0m     @     0x56291ea74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25056)[0m     @     0x56291e9e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25056)[0m     @     0x56291ea73baf _PyEval_EvalCodeWithName
[2m[36m(pid=25056)[0m     @     0x56291ea74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25056)[0m     @     0x56291e9e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25056)[0m     @     0x56291ea73baf _PyEval_EvalCodeWithName
[2m[36m(pid=25177)[0m     @     0x7fb5ad884148 at::Tensor::copy_()
[2m[36m(pid=25177)[0m     @     0x7fb5b3b3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25177)[0m     @     0x5571acf11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25177)[0m     @     0x5571ace6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25177)[0m     @     0x5571acef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25177)[0m     @     0x5571acef8a20 method_vectorcall
[2m[36m(pid=25177)[0m     @     0x5571ace6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25177)[0m     @     0x5571acef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25177)[0m     @     0x5571acef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25177)[0m     @     0x5571ace6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25177)[0m     @     0x5571acef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25177)[0m     @     0x5571acef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25177)[0m     @     0x5571ace6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25177)[0m     @     0x5571acef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25177)[0m     @     0x5571acef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25177)[0m     @     0x5571ace6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25177)[0m     @     0x5571acef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25148)[0m     @     0x7f68679e8148 at::Tensor::copy_()
[2m[36m(pid=25148)[0m     @     0x7f68695df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25148)[0m     @     0x7f68678e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25148)[0m     @     0x7f68679e8148 at::Tensor::copy_()
[2m[36m(pid=25148)[0m     @     0x7f686dc9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25148)[0m     @     0x555da5522fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25148)[0m     @     0x555da547db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25148)[0m     @     0x555da5508baf _PyEval_EvalCodeWithName
[2m[36m(pid=25148)[0m     @     0x555da5509a20 method_vectorcall
[2m[36m(pid=25148)[0m     @     0x555da547dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25148)[0m     @     0x555da5508baf _PyEval_EvalCodeWithName
[2m[36m(pid=25148)[0m     @     0x555da5509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25148)[0m     @     0x555da547e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25148)[0m     @     0x555da5508baf _PyEval_EvalCodeWithName
[2m[36m(pid=25148)[0m     @     0x555da5509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25148)[0m     @     0x555da547e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25148)[0m     @     0x555da5508baf _PyEval_EvalCodeWithName
[2m[36m(pid=25148)[0m     @     0x555da5509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25148)[0m     @     0x555da547e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25148)[0m     @     0x555da5508baf _PyEval_EvalCodeWithName
[2m[36m(pid=25160)[0m     @     0x7ee4a8be7148 at::Tensor::copy_()
[2m[36m(pid=25160)[0m     @     0x7ee4aee9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25160)[0m     @     0x563ee7dabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25160)[0m     @     0x563ee7d06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25160)[0m     @     0x563ee7d91baf _PyEval_EvalCodeWithName
[2m[36m(pid=25160)[0m     @     0x563ee7d92a20 method_vectorcall
[2m[36m(pid=25160)[0m     @     0x563ee7d06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25160)[0m     @     0x563ee7d91baf _PyEval_EvalCodeWithName
[2m[36m(pid=25160)[0m     @     0x563ee7d92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25160)[0m     @     0x563ee7d07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25160)[0m     @     0x563ee7d91baf _PyEval_EvalCodeWithName
[2m[36m(pid=25160)[0m     @     0x563ee7d92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25160)[0m     @     0x563ee7d07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25160)[0m     @     0x563ee7d91baf _PyEval_EvalCodeWithName
[2m[36m(pid=25160)[0m     @     0x563ee7d92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25160)[0m     @     0x563ee7d07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25160)[0m     @     0x563ee7d91baf _PyEval_EvalCodeWithName
[2m[36m(pid=25119)[0m     @     0x7fc77c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25119)[0m     @     0x7fc77c357148 at::Tensor::copy_()
[2m[36m(pid=25119)[0m     @     0x7fc78260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25119)[0m     @     0x557463edffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25119)[0m     @     0x557463e3ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25119)[0m     @     0x557463ec5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25119)[0m     @     0x557463ec6a20 method_vectorcall
[2m[36m(pid=25119)[0m     @     0x557463e3abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25119)[0m     @     0x557463ec5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25119)[0m     @     0x557463ec6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25119)[0m     @     0x557463e3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25119)[0m     @     0x557463ec5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25119)[0m     @     0x557463ec6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25119)[0m     @     0x557463e3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25119)[0m     @     0x557463ec5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25119)[0m     @     0x557463ec6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25119)[0m     @     0x557463e3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25119)[0m     @     0x557463ec5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25142)[0m     @     0x7f3f25956148 at::Tensor::copy_()
[2m[36m(pid=25142)[0m     @     0x7f3f2bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25142)[0m     @     0x5630b3a78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25142)[0m     @     0x5630b39d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25142)[0m     @     0x5630b3a5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25142)[0m     @     0x5630b3a5fa20 method_vectorcall
[2m[36m(pid=25142)[0m     @     0x5630b39d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25142)[0m     @     0x5630b3a5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25142)[0m     @     0x5630b3a5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25142)[0m     @     0x5630b39d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25142)[0m     @     0x5630b3a5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25142)[0m     @     0x5630b3a5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25142)[0m     @     0x5630b39d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25142)[0m     @     0x5630b3a5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25142)[0m     @     0x5630b3a5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25142)[0m     @     0x5630b39d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25142)[0m     @     0x5630b3a5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25133)[0m     @     0x7ed520b235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25133)[0m     @     0x7ed520c2b148 at::Tensor::copy_()
[2m[36m(pid=25133)[0m     @     0x7ed526ee1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25133)[0m     @     0x55ccc9100fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25133)[0m     @     0x55ccc905bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25133)[0m     @     0x55ccc90e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25133)[0m     @     0x55ccc90e7a20 method_vectorcall
[2m[36m(pid=25133)[0m     @     0x55ccc905bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25133)[0m     @     0x55ccc90e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25133)[0m     @     0x55ccc90e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25133)[0m     @     0x55ccc905c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25133)[0m     @     0x55ccc90e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25133)[0m     @     0x55ccc90e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25133)[0m     @     0x55ccc905c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25133)[0m     @     0x55ccc90e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25133)[0m     @     0x55ccc90e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25133)[0m     @     0x55ccc905c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25133)[0m     @     0x55ccc90e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25176)[0m     @     0x7f9cc4ea9148 at::Tensor::copy_()
[2m[36m(pid=25176)[0m     @     0x7f9ccb15fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25176)[0m     @     0x55aa22e99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25176)[0m     @     0x55aa22df4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25176)[0m     @     0x55aa22e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25176)[0m     @     0x55aa22e80a20 method_vectorcall
[2m[36m(pid=25176)[0m     @     0x55aa22df4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25176)[0m     @     0x55aa22e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25176)[0m     @     0x55aa22e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25176)[0m     @     0x55aa22df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25176)[0m     @     0x55aa22e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25176)[0m     @     0x55aa22e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25176)[0m     @     0x55aa22df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25176)[0m     @     0x55aa22e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25176)[0m     @     0x55aa22e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25176)[0m     @     0x55aa22df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25176)[0m     @     0x55aa22e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25062)[0m     @     0x7fb0bbb4e148 at::Tensor::copy_()
[2m[36m(pid=25062)[0m     @     0x7fb0c1e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25062)[0m     @     0x562e3ba64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25062)[0m     @     0x562e3b9bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25062)[0m     @     0x562e3ba4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25062)[0m     @     0x562e3ba4ba20 method_vectorcall
[2m[36m(pid=25062)[0m     @     0x562e3b9bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25062)[0m     @     0x562e3ba4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25062)[0m     @     0x562e3ba4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25062)[0m     @     0x562e3b9c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25062)[0m     @     0x562e3ba4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25062)[0m     @     0x562e3ba4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25062)[0m     @     0x562e3b9c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25062)[0m     @     0x562e3ba4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25062)[0m     @     0x562e3ba4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25062)[0m     @     0x562e3b9c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25062)[0m     @     0x562e3ba4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25166)[0m     @     0x7faa85a525cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25166)[0m     @     0x7faa85b5a148 at::Tensor::copy_()
[2m[36m(pid=25166)[0m     @     0x7faa8be10bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25166)[0m     @     0x557aac4e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25166)[0m     @     0x557aac43bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25166)[0m     @     0x557aac4c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25166)[0m     @     0x557aac4c7a20 method_vectorcall
[2m[36m(pid=25166)[0m     @     0x557aac43bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25166)[0m     @     0x557aac4c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25166)[0m     @     0x557aac4c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25166)[0m     @     0x557aac43c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25166)[0m     @     0x557aac4c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25166)[0m     @     0x557aac4c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25166)[0m     @     0x557aac43c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25166)[0m     @     0x557aac4c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25166)[0m     @     0x557aac4c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25166)[0m     @     0x557aac43c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25166)[0m     @     0x557aac4c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x7eeed018de11 at::TensorIterator::for_each()
[2m[36m(pid=25043)[0m     @     0x7eeed2ea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25043)[0m     @     0x7eeed2ec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25043)[0m     @     0x7eeecff07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25043)[0m     @     0x7eeecff05c3f at::native::copy_impl()
[2m[36m(pid=25043)[0m     @     0x7eeecff06ed4 at::native::copy_()
[2m[36m(pid=25043)[0m     @     0x7eeed06495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25162)[0m     @     0x7edc20214c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25162)[0m     @     0x7edc20237cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25162)[0m     @     0x7edc1d275009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25162)[0m     @     0x7edc1d273c3f at::native::copy_impl()
[2m[36m(pid=25162)[0m     @     0x7edc1d274ed4 at::native::copy_()
[2m[36m(pid=25162)[0m     @     0x7edc1d9b75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25169)[0m     @     0x7f39536b9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25169)[0m     @     0x7f39506f7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25169)[0m     @     0x7f39506f5c3f at::native::copy_impl()
[2m[36m(pid=25169)[0m     @     0x7f39506f6ed4 at::native::copy_()
[2m[36m(pid=25169)[0m     @     0x7f3950e395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25169)[0m     @     0x7f3950f41148 at::Tensor::copy_()
[2m[36m(pid=25113)[0m     @     0x7ef2d6c16148 at::Tensor::copy_()
[2m[36m(pid=25113)[0m     @     0x7ef2d880d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25113)[0m     @     0x7ef2d6b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25113)[0m     @     0x7ef2d6c16148 at::Tensor::copy_()
[2m[36m(pid=25113)[0m     @     0x7ef2dceccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25113)[0m     @     0x5620520dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25113)[0m     @     0x562052037b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25113)[0m     @     0x5620520c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25113)[0m     @     0x5620520c3a20 method_vectorcall
[2m[36m(pid=25113)[0m     @     0x562052037bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25113)[0m     @     0x5620520c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25113)[0m     @     0x5620520c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25113)[0m     @     0x562052038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25113)[0m     @     0x5620520c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25113)[0m     @     0x5620520c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25113)[0m     @     0x562052038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25113)[0m     @     0x5620520c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25113)[0m     @     0x5620520c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25113)[0m     @     0x562052038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25113)[0m     @     0x5620520c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x7f883e0d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25042)[0m     @     0x7f883e0d6c3f at::native::copy_impl()
[2m[36m(pid=25042)[0m     @     0x7f883e0d7ed4 at::native::copy_()
[2m[36m(pid=25042)[0m     @     0x7f883e81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25042)[0m     @     0x7f883e922148 at::Tensor::copy_()
[2m[36m(pid=25042)[0m     @     0x7f8840519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25154)[0m     @     0x7fbe2c7a6148 at::Tensor::copy_()
[2m[36m(pid=25154)[0m     @     0x7fbe2e39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25154)[0m     @     0x7fbe2c69e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25154)[0m     @     0x7fbe2c7a6148 at::Tensor::copy_()
[2m[36m(pid=25154)[0m     @     0x7fbe32a5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25154)[0m     @     0x561a5066ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25154)[0m     @     0x561a505cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25154)[0m     @     0x561a50655baf _PyEval_EvalCodeWithName
[2m[36m(pid=25154)[0m     @     0x561a50656a20 method_vectorcall
[2m[36m(pid=25154)[0m     @     0x561a505cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25154)[0m     @     0x561a50655baf _PyEval_EvalCodeWithName
[2m[36m(pid=25154)[0m     @     0x561a50656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25154)[0m     @     0x561a505cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25154)[0m     @     0x561a50655baf _PyEval_EvalCodeWithName
[2m[36m(pid=25154)[0m     @     0x561a50656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25154)[0m     @     0x561a505cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25154)[0m     @     0x561a50655baf _PyEval_EvalCodeWithName
[2m[36m(pid=25154)[0m     @     0x561a50656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25154)[0m     @     0x561a505cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25154)[0m     @     0x561a50655baf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x7fc27df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=25060)[0m     @     0x7fc280ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25060)[0m     @     0x7fc280ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25060)[0m     @     0x7fc27dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25060)[0m     @     0x7fc27dd07c3f at::native::copy_impl()
[2m[36m(pid=25060)[0m     @     0x7fc27dd08ed4 at::native::copy_()
[2m[36m(pid=25060)[0m     @     0x7fc27e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25112)[0m     @     0x7f913083c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25112)[0m     @     0x7f9130944148 at::Tensor::copy_()
[2m[36m(pid=25112)[0m     @     0x7f9136bfabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25112)[0m     @     0x55fd0c97efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25112)[0m     @     0x55fd0c8d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25112)[0m     @     0x55fd0c964baf _PyEval_EvalCodeWithName
[2m[36m(pid=25112)[0m     @     0x55fd0c965a20 method_vectorcall
[2m[36m(pid=25112)[0m     @     0x55fd0c8d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25112)[0m     @     0x55fd0c964baf _PyEval_EvalCodeWithName
[2m[36m(pid=25112)[0m     @     0x55fd0c965643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25112)[0m     @     0x55fd0c8da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25112)[0m     @     0x55fd0c964baf _PyEval_EvalCodeWithName
[2m[36m(pid=25112)[0m     @     0x55fd0c965643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25112)[0m     @     0x55fd0c8da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25112)[0m     @     0x55fd0c964baf _PyEval_EvalCodeWithName
[2m[36m(pid=25112)[0m     @     0x55fd0c965643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25112)[0m     @     0x55fd0c8da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25112)[0m     @     0x55fd0c964baf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x7f2ccb26ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25049)[0m     @     0x7f2ccb28dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25049)[0m     @     0x7f2cc82cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25049)[0m     @     0x7f2cc82c9c3f at::native::copy_impl()
[2m[36m(pid=25049)[0m     @     0x7f2cc82caed4 at::native::copy_()
[2m[36m(pid=25049)[0m     @     0x7f2cc8a0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25120)[0m     @     0x7f80ae44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25120)[0m     @     0x7f80ae553148 at::Tensor::copy_()
[2m[36m(pid=25120)[0m     @     0x7f80b014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25120)[0m     @     0x7f80ae44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25120)[0m     @     0x7f80ae553148 at::Tensor::copy_()
[2m[36m(pid=25120)[0m     @     0x7f80b4809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25120)[0m     @     0x556c80899fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25120)[0m     @     0x556c807f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25120)[0m     @     0x556c8087fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25120)[0m     @     0x556c80880a20 method_vectorcall
[2m[36m(pid=25120)[0m     @     0x556c807f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25120)[0m     @     0x556c8087fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25120)[0m     @     0x556c80880643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25120)[0m     @     0x556c807f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25120)[0m     @     0x556c8087fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25120)[0m     @     0x556c80880643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25120)[0m     @     0x556c807f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25120)[0m     @     0x556c8087fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25120)[0m     @     0x556c80880643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25120)[0m     @     0x556c807f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25120)[0m     @     0x556c8087fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25044)[0m     @     0x7f1cfae645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25044)[0m     @     0x7f1cfaf6c148 at::Tensor::copy_()
[2m[36m(pid=25044)[0m     @     0x7f1d01222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25044)[0m     @     0x55be1b56cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25044)[0m     @     0x55be1b4c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25044)[0m     @     0x55be1b552baf _PyEval_EvalCodeWithName
[2m[36m(pid=25044)[0m     @     0x55be1b553a20 method_vectorcall
[2m[36m(pid=25044)[0m     @     0x55be1b4c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25044)[0m     @     0x55be1b552baf _PyEval_EvalCodeWithName
[2m[36m(pid=25044)[0m     @     0x55be1b553643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25044)[0m     @     0x55be1b4c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25044)[0m     @     0x55be1b552baf _PyEval_EvalCodeWithName
[2m[36m(pid=25044)[0m     @     0x55be1b553643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25044)[0m     @     0x55be1b4c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25044)[0m     @     0x55be1b552baf _PyEval_EvalCodeWithName
[2m[36m(pid=25044)[0m     @     0x55be1b553643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25044)[0m     @     0x55be1b4c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25044)[0m     @     0x55be1b552baf _PyEval_EvalCodeWithName
[2m[36m(pid=25103)[0m     @     0x7fb38e8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25103)[0m     @     0x7fb38e9c5148 at::Tensor::copy_()
[2m[36m(pid=25103)[0m     @     0x7fb394c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25103)[0m     @     0x55d65e487fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25103)[0m     @     0x55d65e3e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25103)[0m     @     0x55d65e46dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25103)[0m     @     0x55d65e46ea20 method_vectorcall
[2m[36m(pid=25103)[0m     @     0x55d65e3e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25103)[0m     @     0x55d65e46dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25103)[0m     @     0x55d65e46e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25103)[0m     @     0x55d65e3e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25103)[0m     @     0x55d65e46dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25103)[0m     @     0x55d65e46e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25103)[0m     @     0x55d65e3e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25103)[0m     @     0x55d65e46dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25103)[0m     @     0x55d65e46e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25103)[0m     @     0x55d65e3e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25103)[0m     @     0x55d65e46dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25155)[0m     @     0x7f319984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25155)[0m     @     0x7f3199956148 at::Tensor::copy_()
[2m[36m(pid=25155)[0m     @     0x7f319fc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25155)[0m     @     0x556b05509fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25155)[0m     @     0x556b05464b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25155)[0m     @     0x556b054efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25155)[0m     @     0x556b054f0a20 method_vectorcall
[2m[36m(pid=25155)[0m     @     0x556b05464bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25155)[0m     @     0x556b054efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25155)[0m     @     0x556b054f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25155)[0m     @     0x556b05465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25155)[0m     @     0x556b054efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25155)[0m     @     0x556b054f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25155)[0m     @     0x556b05465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25155)[0m     @     0x556b054efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25155)[0m     @     0x556b054f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25155)[0m     @     0x556b05465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25155)[0m     @     0x556b054efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25174)[0m     @     0x7fae044b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25174)[0m     @     0x7fae045bd148 at::Tensor::copy_()
[2m[36m(pid=25174)[0m     @     0x7fae0a873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25174)[0m     @     0x562b178fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25174)[0m     @     0x562b17856b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25174)[0m     @     0x562b178e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25174)[0m     @     0x562b178e2a20 method_vectorcall
[2m[36m(pid=25174)[0m     @     0x562b17856bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25174)[0m     @     0x562b178e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25174)[0m     @     0x562b178e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25174)[0m     @     0x562b17857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25174)[0m     @     0x562b178e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25174)[0m     @     0x562b178e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25174)[0m     @     0x562b17857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25174)[0m     @     0x562b178e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25174)[0m     @     0x562b178e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25174)[0m     @     0x562b17857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25174)[0m     @     0x562b178e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x7f9c7df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25061)[0m     @     0x7f9c7df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=25138)[0m     @     0x7f12ceafbe11 at::TensorIterator::for_each()
[2m[36m(pid=25138)[0m     @     0x7f12d1814c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25138)[0m     @     0x7f12d1837cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25138)[0m     @     0x7f12ce875009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25138)[0m     @     0x7f12ce873c3f at::native::copy_impl()
[2m[36m(pid=25138)[0m     @     0x7f12ce874ed4 at::native::copy_()
[2m[36m(pid=25163)[0m     @     0x7ee1a65c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25163)[0m     @     0x7ee1a65c0b53 at::TensorIterator::for_each()
[2m[36m(pid=25163)[0m     @     0x7ee1a65c0e11 at::TensorIterator::for_each()
[2m[36m(pid=25163)[0m     @     0x7ee1a92d9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25163)[0m     @     0x7ee1a92fccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25163)[0m     @     0x7ee1a633a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25163)[0m     @     0x7ee1a6338c3f at::native::copy_impl()
[2m[36m(pid=25129)[0m     @     0x7f2bbb63bb53 at::TensorIterator::for_each()
[2m[36m(pid=25129)[0m     @     0x7f2bbb63be11 at::TensorIterator::for_each()
[2m[36m(pid=25129)[0m     @     0x7f2bbe354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25129)[0m     @     0x7f2bbe377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25129)[0m     @     0x7f2bbb3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25129)[0m     @     0x7f2bbb3b3c3f at::native::copy_impl()
[2m[36m(pid=25129)[0m     @     0x7f2bbb3b4ed4 at::native::copy_()
[2m[36m(pid=25104)[0m     @     0x7ef9c915a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25104)[0m     @     0x7ef9c915ab53 at::TensorIterator::for_each()
[2m[36m(pid=25104)[0m     @     0x7ef9c915ae11 at::TensorIterator::for_each()
[2m[36m(pid=25104)[0m     @     0x7ef9cbe73c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25104)[0m     @     0x7ef9cbe96cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25111)[0m     @     0x7f9ce2e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=25111)[0m     @     0x7f9ce2e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=25111)[0m     @     0x7f9ce5b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25111)[0m     @     0x7f9ce5b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25111)[0m     @     0x7f9ce2bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25111)[0m     @     0x7f9ce2bc4c3f at::native::copy_impl()
[2m[36m(pid=25173)[0m     @     0x7f61c9f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25173)[0m     @     0x7f61c9f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=25173)[0m     @     0x7f61c9f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=25173)[0m     @     0x7f61ccc53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25173)[0m     @     0x7f61ccc76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25173)[0m     @     0x7f61c9cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25173)[0m     @     0x7f61c9cb2c3f at::native::copy_impl()
[2m[36m(pid=25046)[0m     @     0x7f4166e0cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25046)[0m     @     0x7f4166e2fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25046)[0m     @     0x7f4163e6d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25046)[0m     @     0x7f4163e6bc3f at::native::copy_impl()
[2m[36m(pid=25046)[0m     @     0x7f4163e6ced4 at::native::copy_()
[2m[36m(pid=25170)[0m     @     0x7ee998623e11 at::TensorIterator::for_each()
[2m[36m(pid=25170)[0m     @     0x7ee99b33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25170)[0m     @     0x7ee99b35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25170)[0m     @     0x7ee99839d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25170)[0m     @     0x7ee99839bc3f at::native::copy_impl()
[2m[36m(pid=25170)[0m     @     0x7ee99839ced4 at::native::copy_()
[2m[36m(pid=25170)[0m     @     0x7ee998adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25045)[0m     @     0x7fcbfb2cce11 at::TensorIterator::for_each()
[2m[36m(pid=25045)[0m     @     0x7fcbfdfe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25045)[0m     @     0x7fcbfe008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25045)[0m     @     0x7fcbfb046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25045)[0m     @     0x7fcbfb044c3f at::native::copy_impl()
[2m[36m(pid=25045)[0m     @     0x7fcbfb045ed4 at::native::copy_()
[2m[36m(pid=25178)[0m     @     0x7f6756797e11 at::TensorIterator::for_each()
[2m[36m(pid=25178)[0m     @     0x7f67594b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25178)[0m     @     0x7f67594d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25178)[0m     @     0x7f6756511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25178)[0m     @     0x7f675650fc3f at::native::copy_impl()
[2m[36m(pid=25178)[0m     @     0x7f6756510ed4 at::native::copy_()
[2m[36m(pid=25152)[0m     @     0x7f2e34a51e11 at::TensorIterator::for_each()
[2m[36m(pid=25152)[0m     @     0x7f2e3776ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25152)[0m     @     0x7f2e3778dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25152)[0m     @     0x7f2e347cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25152)[0m     @     0x7f2e347c9c3f at::native::copy_impl()
[2m[36m(pid=25152)[0m     @     0x7f2e347caed4 at::native::copy_()
[2m[36m(pid=25099)[0m     @     0x7f5cfb12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25099)[0m     @     0x7f5cfb14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25099)[0m     @     0x7f5cf818c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25099)[0m     @     0x7f5cf818ac3f at::native::copy_impl()
[2m[36m(pid=25099)[0m     @     0x7f5cf818bed4 at::native::copy_()
[2m[36m(pid=25099)[0m     @     0x7f5cf88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25182)[0m     @     0x7f23ca37a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25182)[0m     @     0x7f23ca378c3f at::native::copy_impl()
[2m[36m(pid=25182)[0m     @     0x7f23ca379ed4 at::native::copy_()
[2m[36m(pid=25182)[0m     @     0x7f23caabc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25182)[0m     @     0x7f23cabc4148 at::Tensor::copy_()
[2m[36m(pid=25182)[0m     @     0x7f23cc7bb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25070)[0m     @     0x7f999a160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25070)[0m     @     0x7f999719e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25070)[0m     @     0x7f999719cc3f at::native::copy_impl()
[2m[36m(pid=25070)[0m     @     0x7f999719ded4 at::native::copy_()
[2m[36m(pid=25070)[0m     @     0x7f99978e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25114)[0m     @     0x7f7fc888c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25114)[0m     @     0x7f7fc888ac3f at::native::copy_impl()
[2m[36m(pid=25114)[0m     @     0x7f7fc888bed4 at::native::copy_()
[2m[36m(pid=25114)[0m     @     0x7f7fc8fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25114)[0m     @     0x7f7fc90d6148 at::Tensor::copy_()
[2m[36m(pid=25074)[0m     @     0x7f055b947009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25074)[0m     @     0x7f055b945c3f at::native::copy_impl()
[2m[36m(pid=25074)[0m     @     0x7f055b946ed4 at::native::copy_()
[2m[36m(pid=25074)[0m     @     0x7f055c0895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25074)[0m     @     0x7f055c191148 at::Tensor::copy_()
[2m[36m(pid=25074)[0m     @     0x7f055dd88989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25073)[0m     @     0x7f3dc9956148 at::Tensor::copy_()
[2m[36m(pid=25073)[0m     @     0x7f3dcb54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25073)[0m     @     0x7f3dc984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25073)[0m     @     0x7f3dc9956148 at::Tensor::copy_()
[2m[36m(pid=25073)[0m     @     0x7f3dcfc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25073)[0m     @     0x55aef5566fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25073)[0m     @     0x55aef54c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25073)[0m     @     0x55aef554cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25073)[0m     @     0x55aef554da20 method_vectorcall
[2m[36m(pid=25073)[0m     @     0x55aef54c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25073)[0m     @     0x55aef554cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25073)[0m     @     0x55aef554d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25073)[0m     @     0x55aef54c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25073)[0m     @     0x55aef554cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25073)[0m     @     0x55aef554d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25073)[0m     @     0x55aef54c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25073)[0m     @     0x55aef554cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25073)[0m     @     0x55aef554d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25073)[0m     @     0x55aef54c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25073)[0m     @     0x55aef554cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25055)[0m     @     0x7f65fb0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25055)[0m     @     0x7f65fb151148 at::Tensor::copy_()
[2m[36m(pid=25055)[0m     @     0x7f6601407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25055)[0m     @     0x55f7ca4c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25055)[0m     @     0x55f7ca41fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25055)[0m     @     0x55f7ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25055)[0m     @     0x55f7ca4aba20 method_vectorcall
[2m[36m(pid=25055)[0m     @     0x55f7ca41fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25055)[0m     @     0x55f7ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25055)[0m     @     0x55f7ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25055)[0m     @     0x55f7ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25055)[0m     @     0x55f7ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25055)[0m     @     0x55f7ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25055)[0m     @     0x55f7ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25055)[0m     @     0x55f7ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25055)[0m     @     0x55f7ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25055)[0m     @     0x55f7ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25055)[0m     @     0x55f7ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25116)[0m     @     0x7fb1e5c6c148 at::Tensor::copy_()
[2m[36m(pid=25116)[0m     @     0x7fb1ebf22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25116)[0m     @     0x564b11984fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25116)[0m     @     0x564b118dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25116)[0m     @     0x564b1196abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25116)[0m     @     0x564b1196ba20 method_vectorcall
[2m[36m(pid=25116)[0m     @     0x564b118dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25116)[0m     @     0x564b1196abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25116)[0m     @     0x564b1196b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25116)[0m     @     0x564b118e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25116)[0m     @     0x564b1196abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25116)[0m     @     0x564b1196b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25116)[0m     @     0x564b118e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25116)[0m     @     0x564b1196abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25116)[0m     @     0x564b1196b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25116)[0m     @     0x564b118e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25116)[0m     @     0x564b1196abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x7f306381cc3f at::native::copy_impl()
[2m[36m(pid=25051)[0m     @     0x7f306381ded4 at::native::copy_()
[2m[36m(pid=25051)[0m     @     0x7f3063f605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25058)[0m     @     0x7f613a179c3f at::native::copy_impl()
[2m[36m(pid=25058)[0m     @     0x7f613a17aed4 at::native::copy_()
[2m[36m(pid=25058)[0m     @     0x7f613a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25100)[0m     @     0x7edfc19f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25100)[0m     @     0x7edfc19f0c3f at::native::copy_impl()
[2m[36m(pid=25100)[0m     @     0x7edfc19f1ed4 at::native::copy_()
[2m[36m(pid=25140)[0m     @     0x7f8636069c3f at::native::copy_impl()
[2m[36m(pid=25140)[0m     @     0x7f863606aed4 at::native::copy_()
[2m[36m(pid=25140)[0m     @     0x7f86367ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25165)[0m     @     0x7facf4789c3f at::native::copy_impl()
[2m[36m(pid=25165)[0m     @     0x7facf478aed4 at::native::copy_()
[2m[36m(pid=25165)[0m     @     0x7facf4ecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25102)[0m     @     0x7f5d6784b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25102)[0m     @     0x7f5d67849c3f at::native::copy_impl()
[2m[36m(pid=25102)[0m     @     0x7f5d6784aed4 at::native::copy_()
[2m[36m(pid=25059)[0m     @     0x7f033d13dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25059)[0m     @     0x7f033a17b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25059)[0m     @     0x7f033a179c3f at::native::copy_impl()
[2m[36m(pid=25059)[0m     @     0x7f033a17aed4 at::native::copy_()
[2m[36m(pid=25097)[0m     @     0x7fc8bb00e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25097)[0m     @     0x7fc8bb00cc3f at::native::copy_impl()
[2m[36m(pid=25097)[0m     @     0x7fc8bb00ded4 at::native::copy_()
[2m[36m(pid=25097)[0m     @     0x7fc8bb7505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25041)[0m     @     0x7f5b749c2c3f at::native::copy_impl()
[2m[36m(pid=25041)[0m     @     0x7f5b749c3ed4 at::native::copy_()
[2m[36m(pid=25041)[0m     @     0x7f5b751065cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25149)[0m     @     0x7f1972968ed4 at::native::copy_()
[2m[36m(pid=25149)[0m     @     0x7f19730ab5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25136)[0m     @     0x7ef7a5632ed4 at::native::copy_()
[2m[36m(pid=25136)[0m     @     0x7ef7a5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25136)[0m     @     0x7ef7a5e7d148 at::Tensor::copy_()
[2m[36m(pid=25136)[0m     @     0x7ef7a7a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25136)[0m     @     0x7ef7a5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25067)[0m     @     0x7ef8da683977 at::TensorIterator::serial_for_each()
[2m[36m(pid=25067)[0m     @     0x7ef8da683b53 at::TensorIterator::for_each()
[2m[36m(pid=25067)[0m     @     0x7ef8da683e11 at::TensorIterator::for_each()
[2m[36m(pid=25067)[0m     @     0x7ef8dd39cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25047)[0m     @     0x7f49e2510ed4 at::native::copy_()
[2m[36m(pid=25047)[0m     @     0x7f49e2c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25047)[0m     @     0x7f49e2d5b148 at::Tensor::copy_()
[2m[36m(pid=25047)[0m     @     0x7f49e4952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25110)[0m     @     0x7ee3ba859ed4 at::native::copy_()
[2m[36m(pid=25110)[0m     @     0x7ee3baf9c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25110)[0m     @     0x7ee3bb0a4148 at::Tensor::copy_()
[2m[36m(pid=25110)[0m     @     0x7ee3bcc9b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25072)[0m     @     0x7fb2c59f1ed4 at::native::copy_()
[2m[36m(pid=25072)[0m     @     0x7fb2c61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25072)[0m     @     0x7fb2c623c148 at::Tensor::copy_()
[2m[36m(pid=25072)[0m     @     0x7fb2c7e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25050)[0m     @     0x7fb2f3b32ed4 at::native::copy_()
[2m[36m(pid=25050)[0m     @     0x7fb2f42755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25050)[0m     @     0x7fb2f437d148 at::Tensor::copy_()
[2m[36m(pid=25050)[0m     @     0x7fb2f5f74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25068)[0m     @     0x7fc9d20aaed4 at::native::copy_()
[2m[36m(pid=25068)[0m     @     0x7fc9d27ed5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25068)[0m     @     0x7fc9d28f5148 at::Tensor::copy_()
[2m[36m(pid=25068)[0m     @     0x7fc9d44ec989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25095)[0m     @     0x7fa87f951b53 at::TensorIterator::for_each()
[2m[36m(pid=25095)[0m     @     0x7fa87f951e11 at::TensorIterator::for_each()
[2m[36m(pid=25095)[0m     @     0x7fa88266ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25095)[0m     @     0x7fa88268dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25147)[0m     @     0x7ed93141ced4 at::native::copy_()
[2m[36m(pid=25147)[0m     @     0x7ed931b5f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25147)[0m     @     0x7ed931c67148 at::Tensor::copy_()
[2m[36m(pid=25164)[0m     @     0x7f2d72eadc3f at::native::copy_impl()
[2m[36m(pid=25164)[0m     @     0x7f2d72eaeed4 at::native::copy_()
[2m[36m(pid=25164)[0m     @     0x7f2d735f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25164)[0m     @     0x7f2d736f9148 at::Tensor::copy_()
[2m[36m(pid=25121)[0m     @     0x7fa79f63be11 at::TensorIterator::for_each()
[2m[36m(pid=25121)[0m     @     0x7fa7a2354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25121)[0m     @     0x7fa7a2377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25121)[0m     @     0x7fa79f3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25121)[0m     @     0x7fa79f3b3c3f at::native::copy_impl()
[2m[36m(pid=25121)[0m     @     0x7fa79f3b4ed4 at::native::copy_()
[2m[36m(pid=25150)[0m     @     0x7f81fe2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25150)[0m     @     0x7f81fb304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25150)[0m     @     0x7f81fb302c3f at::native::copy_impl()
[2m[36m(pid=25150)[0m     @     0x7f81fb303ed4 at::native::copy_()
[2m[36m(pid=25150)[0m     @     0x7f81fba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25115)[0m     @     0x7f08e763bb53 at::TensorIterator::for_each()
[2m[36m(pid=25115)[0m     @     0x7f08e763be11 at::TensorIterator::for_each()
[2m[36m(pid=25053)[0m     @     0x7f619df76ed4 at::native::copy_()
[2m[36m(pid=25053)[0m     @     0x7f619e6b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25053)[0m     @     0x7f619e7c1148 at::Tensor::copy_()
[2m[36m(pid=25053)[0m     @     0x7f61a03b8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25053)[0m     @     0x7f619e6b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25048)[0m     @     0x7ef622c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25048)[0m     @     0x7ef622d5b148 at::Tensor::copy_()
[2m[36m(pid=25063)[0m     @     0x7ef9770495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25063)[0m     @     0x7ef977151148 at::Tensor::copy_()
[2m[36m(pid=25063)[0m     @     0x7ef978d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25063)[0m     @     0x7ef9770495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25040)[0m     @     0x7ed6ae510ed4 at::native::copy_()
[2m[36m(pid=25040)[0m     @     0x7ed6aec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25040)[0m     @     0x7ed6aed5b148 at::Tensor::copy_()
[2m[36m(pid=25040)[0m     @     0x7ed6b0952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25117)[0m     @     0x7fae92caced4 at::native::copy_()
[2m[36m(pid=25117)[0m     @     0x7fae933ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25117)[0m     @     0x7fae934f7148 at::Tensor::copy_()
[2m[36m(pid=25117)[0m     @     0x7fae950ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25167)[0m     @     0x7f4aafbd7ed4 at::native::copy_()
[2m[36m(pid=25167)[0m     @     0x7f4ab031a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25167)[0m     @     0x7f4ab0422148 at::Tensor::copy_()
[2m[36m(pid=25167)[0m     @     0x7f4ab2019989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25039)[0m     @     0x7f6e075c9ed4 at::native::copy_()
[2m[36m(pid=25039)[0m     @     0x7f6e07d0c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25039)[0m     @     0x7f6e07e14148 at::Tensor::copy_()
[2m[36m(pid=25039)[0m     @     0x7f6e09a0b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25057)[0m     @     0x7f8bc510bed4 at::native::copy_()
[2m[36m(pid=25057)[0m     @     0x7f8bc584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25057)[0m     @     0x7f8bc5956148 at::Tensor::copy_()
[2m[36m(pid=25057)[0m     @     0x7f8bc754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25043)[0m     @     0x7eeed0751148 at::Tensor::copy_()
[2m[36m(pid=25043)[0m     @     0x7eeed2348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25043)[0m     @     0x7eeed06495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25162)[0m     @     0x7edc1dabf148 at::Tensor::copy_()
[2m[36m(pid=25162)[0m     @     0x7edc1f6b6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25162)[0m     @     0x7edc1d9b75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25169)[0m     @     0x7f3952b38989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25169)[0m     @     0x7f3950e395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25169)[0m     @     0x7f3950f41148 at::Tensor::copy_()
[2m[36m(pid=25169)[0m     @     0x7f39571f7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25169)[0m     @     0x56082b87efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25169)[0m     @     0x56082b7d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x7f883e81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25042)[0m     @     0x7f883e922148 at::Tensor::copy_()
[2m[36m(pid=25042)[0m     @     0x7f8844bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25042)[0m     @     0x563c087d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25042)[0m     @     0x563c08734b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x563c087bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x563c087c0a20 method_vectorcall
[2m[36m(pid=25042)[0m     @     0x563c08734bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x563c087bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x563c087c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25060)[0m     @     0x7fc27e553148 at::Tensor::copy_()
[2m[36m(pid=25060)[0m     @     0x7fc28014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25049)[0m     @     0x7f2cc8b15148 at::Tensor::copy_()
[2m[36m(pid=25049)[0m     @     0x7f2cca70c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25049)[0m     @     0x7f2cc8a0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25061)[0m     @     0x7f9c7df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=25061)[0m     @     0x7f9c80ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25138)[0m     @     0x7f12cefb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25138)[0m     @     0x7f12cf0bf148 at::Tensor::copy_()
[2m[36m(pid=25138)[0m     @     0x7f12d0cb6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25163)[0m     @     0x7ee1a6339ed4 at::native::copy_()
[2m[36m(pid=25163)[0m     @     0x7ee1a6a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25163)[0m     @     0x7ee1a6b84148 at::Tensor::copy_()
[2m[36m(pid=25129)[0m     @     0x7f2bbbaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25129)[0m     @     0x7f2bbbbff148 at::Tensor::copy_()
[2m[36m(pid=25129)[0m     @     0x7f2bbd7f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25104)[0m     @     0x7ef9c8ed4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25104)[0m     @     0x7ef9c8ed2c3f at::native::copy_impl()
[2m[36m(pid=25104)[0m     @     0x7ef9c8ed3ed4 at::native::copy_()
[2m[36m(pid=25111)[0m     @     0x7f9ce2bc5ed4 at::native::copy_()
[2m[36m(pid=25111)[0m     @     0x7f9ce33085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25173)[0m     @     0x7f61c9cb3ed4 at::native::copy_()
[2m[36m(pid=25173)[0m     @     0x7f61ca3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25173)[0m     @     0x7f61ca4fe148 at::Tensor::copy_()
[2m[36m(pid=25170)[0m     @     0x7ee998be7148 at::Tensor::copy_()
[2m[36m(pid=25170)[0m     @     0x7ee99a7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25045)[0m     @     0x7fcbfb7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25045)[0m     @     0x7fcbfb890148 at::Tensor::copy_()
[2m[36m(pid=25045)[0m     @     0x7fcbfd487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25178)[0m     @     0x7f6756c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25178)[0m     @     0x7f6756d5b148 at::Tensor::copy_()
[2m[36m(pid=25178)[0m     @     0x7f6758952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25178)[0m     @     0x7f6756c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25152)[0m     @     0x7f2e34f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25152)[0m     @     0x7f2e35015148 at::Tensor::copy_()
[2m[36m(pid=25152)[0m     @     0x7f2e36c0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25152)[0m     @     0x7f2e34f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25099)[0m     @     0x7f5cf89d6148 at::Tensor::copy_()
[2m[36m(pid=25099)[0m     @     0x7f5cfa5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25099)[0m     @     0x7f5cf88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25099)[0m     @     0x7f5cf89d6148 at::Tensor::copy_()
[2m[36m(pid=25099)[0m     @     0x7f5cfec8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25099)[0m     @     0x55ae038a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25099)[0m     @     0x55ae037ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25099)[0m     @     0x55ae0388abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25099)[0m     @     0x55ae0388ba20 method_vectorcall
[2m[36m(pid=25099)[0m     @     0x55ae037ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25099)[0m     @     0x55ae0388abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25099)[0m     @     0x55ae0388b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25099)[0m     @     0x55ae03800689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25099)[0m     @     0x55ae0388abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25099)[0m     @     0x55ae0388b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25099)[0m     @     0x55ae03800689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x7f23caabc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25182)[0m     @     0x7f23cabc4148 at::Tensor::copy_()
[2m[36m(pid=25182)[0m     @     0x7f23d0e7abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25182)[0m     @     0x55d545d3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25182)[0m     @     0x55d545c95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x55d545d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25182)[0m     @     0x55d545d21a20 method_vectorcall
[2m[36m(pid=25182)[0m     @     0x55d545c95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x55d545d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25182)[0m     @     0x55d545d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25182)[0m     @     0x55d545c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x55d545d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25182)[0m     @     0x55d545d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25182)[0m     @     0x55d545c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x55d545d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25182)[0m     @     0x55d545d21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25182)[0m     @     0x55d545c96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25182)[0m     @     0x55d545d20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25070)[0m     @     0x7f99979e8148 at::Tensor::copy_()
[2m[36m(pid=25070)[0m     @     0x7f99995df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25070)[0m     @     0x7f99978e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25070)[0m     @     0x7f99979e8148 at::Tensor::copy_()
[2m[36m(pid=25070)[0m     @     0x7f999dc9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25070)[0m     @     0x560b8a7fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25070)[0m     @     0x560b8a758b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25070)[0m     @     0x560b8a7e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25070)[0m     @     0x560b8a7e4a20 method_vectorcall
[2m[36m(pid=25070)[0m     @     0x560b8a758bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25070)[0m     @     0x560b8a7e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25070)[0m     @     0x560b8a7e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25070)[0m     @     0x560b8a759689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25070)[0m     @     0x560b8a7e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25070)[0m     @     0x560b8a7e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25070)[0m     @     0x560b8a759689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25070)[0m     @     0x560b8a7e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25070)[0m     @     0x560b8a7e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25070)[0m     @     0x560b8a759689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25070)[0m     @     0x560b8a7e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25114)[0m     @     0x7f7fcaccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25114)[0m     @     0x7f7fc8fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25114)[0m     @     0x7f7fc90d6148 at::Tensor::copy_()
[2m[36m(pid=25114)[0m     @     0x7f7fcf38cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25114)[0m     @     0x557e52b9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25114)[0m     @     0x557e52af9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25114)[0m     @     0x557e52b84baf _PyEval_EvalCodeWithName
[2m[36m(pid=25114)[0m     @     0x557e52b85a20 method_vectorcall
[2m[36m(pid=25114)[0m     @     0x557e52af9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25114)[0m     @     0x557e52b84baf _PyEval_EvalCodeWithName
[2m[36m(pid=25114)[0m     @     0x557e52b85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25114)[0m     @     0x557e52afa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25114)[0m     @     0x557e52b84baf _PyEval_EvalCodeWithName
[2m[36m(pid=25114)[0m     @     0x557e52b85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25114)[0m     @     0x557e52afa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25114)[0m     @     0x557e52b84baf _PyEval_EvalCodeWithName
[2m[36m(pid=25114)[0m     @     0x557e52b85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25114)[0m     @     0x557e52afa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25114)[0m     @     0x557e52b84baf _PyEval_EvalCodeWithName
[2m[36m(pid=25074)[0m     @     0x7f055c0895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25074)[0m     @     0x7f055c191148 at::Tensor::copy_()
[2m[36m(pid=25074)[0m     @     0x7f0562447bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25074)[0m     @     0x5647ad8b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25074)[0m     @     0x5647ad80cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25074)[0m     @     0x5647ad897baf _PyEval_EvalCodeWithName
[2m[36m(pid=25074)[0m     @     0x5647ad898a20 method_vectorcall
[2m[36m(pid=25074)[0m     @     0x5647ad80cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25074)[0m     @     0x5647ad897baf _PyEval_EvalCodeWithName
[2m[36m(pid=25074)[0m     @     0x5647ad898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25074)[0m     @     0x5647ad80d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25074)[0m     @     0x5647ad897baf _PyEval_EvalCodeWithName
[2m[36m(pid=25074)[0m     @     0x5647ad898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25074)[0m     @     0x5647ad80d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25074)[0m     @     0x5647ad897baf _PyEval_EvalCodeWithName
[2m[36m(pid=25074)[0m     @     0x5647ad898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25074)[0m     @     0x5647ad80d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25074)[0m     @     0x5647ad897baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x7f3064068148 at::Tensor::copy_()
[2m[36m(pid=25051)[0m     @     0x7f3065c5f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25051)[0m     @     0x7f3063f605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25051)[0m     @     0x7f3064068148 at::Tensor::copy_()
[2m[36m(pid=25051)[0m     @     0x7f306a31ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25051)[0m     @     0x55cb3d450fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25051)[0m     @     0x55cb3d3abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25051)[0m     @     0x55cb3d436baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x55cb3d437a20 method_vectorcall
[2m[36m(pid=25051)[0m     @     0x55cb3d3abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25051)[0m     @     0x55cb3d436baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x55cb3d437643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25051)[0m     @     0x55cb3d3ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25051)[0m     @     0x55cb3d436baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x55cb3d437643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25051)[0m     @     0x55cb3d3ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25051)[0m     @     0x55cb3d436baf _PyEval_EvalCodeWithName
[2m[36m(pid=25051)[0m     @     0x55cb3d437643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25051)[0m     @     0x55cb3d3ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25051)[0m     @     0x55cb3d436baf _PyEval_EvalCodeWithName
[2m[36m(pid=25058)[0m     @     0x7f613a9c5148 at::Tensor::copy_()
[2m[36m(pid=25058)[0m     @     0x7f613c5bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25058)[0m     @     0x7f613a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25058)[0m     @     0x7f613a9c5148 at::Tensor::copy_()
[2m[36m(pid=25058)[0m     @     0x7f6140c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25058)[0m     @     0x56088370dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25058)[0m     @     0x560883668b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25058)[0m     @     0x5608836f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25058)[0m     @     0x5608836f4a20 method_vectorcall
[2m[36m(pid=25058)[0m     @     0x560883668bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25058)[0m     @     0x5608836f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25058)[0m     @     0x5608836f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25058)[0m     @     0x560883669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25058)[0m     @     0x5608836f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25058)[0m     @     0x5608836f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25058)[0m     @     0x560883669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25058)[0m     @     0x5608836f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25058)[0m     @     0x5608836f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25058)[0m     @     0x560883669689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25058)[0m     @     0x5608836f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x7edfc21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25100)[0m     @     0x7edfc223c148 at::Tensor::copy_()
[2m[36m(pid=25100)[0m     @     0x7edfc3e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25140)[0m     @     0x7f86368b5148 at::Tensor::copy_()
[2m[36m(pid=25140)[0m     @     0x7f86384ac989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25140)[0m     @     0x7f86367ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25140)[0m     @     0x7f86368b5148 at::Tensor::copy_()
[2m[36m(pid=25140)[0m     @     0x7f863cb6bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25140)[0m     @     0x5638c396ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25140)[0m     @     0x5638c38cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25140)[0m     @     0x5638c3955baf _PyEval_EvalCodeWithName
[2m[36m(pid=25140)[0m     @     0x5638c3956a20 method_vectorcall
[2m[36m(pid=25140)[0m     @     0x5638c38cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25140)[0m     @     0x5638c3955baf _PyEval_EvalCodeWithName
[2m[36m(pid=25140)[0m     @     0x5638c3956643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25140)[0m     @     0x5638c38cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25140)[0m     @     0x5638c3955baf _PyEval_EvalCodeWithName
[2m[36m(pid=25140)[0m     @     0x5638c3956643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25140)[0m     @     0x5638c38cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25140)[0m     @     0x5638c3955baf _PyEval_EvalCodeWithName
[2m[36m(pid=25140)[0m     @     0x5638c3956643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25140)[0m     @     0x5638c38cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25140)[0m     @     0x5638c3955baf _PyEval_EvalCodeWithName
[2m[36m(pid=25165)[0m     @     0x7facf4fd5148 at::Tensor::copy_()
[2m[36m(pid=25165)[0m     @     0x7facf6bcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25165)[0m     @     0x7facf4ecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25165)[0m     @     0x7facf4fd5148 at::Tensor::copy_()
[2m[36m(pid=25165)[0m     @     0x7facfb28bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25165)[0m     @     0x55d5a6b54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25165)[0m     @     0x55d5a6aafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25165)[0m     @     0x55d5a6b3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25165)[0m     @     0x55d5a6b3ba20 method_vectorcall
[2m[36m(pid=25165)[0m     @     0x55d5a6aafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25165)[0m     @     0x55d5a6b3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25165)[0m     @     0x55d5a6b3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25165)[0m     @     0x55d5a6ab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25165)[0m     @     0x55d5a6b3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25165)[0m     @     0x55d5a6b3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25165)[0m     @     0x55d5a6ab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25165)[0m     @     0x55d5a6b3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25165)[0m     @     0x55d5a6b3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25165)[0m     @     0x55d5a6ab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25165)[0m     @     0x55d5a6b3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25102)[0m     @     0x7f5d67f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25102)[0m     @     0x7f5d68095148 at::Tensor::copy_()
[2m[36m(pid=25102)[0m     @     0x7f5d69c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25102)[0m     @     0x7f5d67f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25059)[0m     @     0x7f033a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25059)[0m     @     0x7f033a9c5148 at::Tensor::copy_()
[2m[36m(pid=25059)[0m     @     0x7f033c5bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25059)[0m     @     0x7f033a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25097)[0m     @     0x7fc8bb858148 at::Tensor::copy_()
[2m[36m(pid=25097)[0m     @     0x7fc8bd44f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25097)[0m     @     0x7fc8bb7505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25041)[0m     @     0x7f5b7520e148 at::Tensor::copy_()
[2m[36m(pid=25041)[0m     @     0x7f5b76e05989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25041)[0m     @     0x7f5b751065cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25041)[0m     @     0x7f5b7520e148 at::Tensor::copy_()
[2m[36m(pid=25041)[0m     @     0x7f5b7b4c4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25149)[0m     @     0x7f19731b3148 at::Tensor::copy_()
[2m[36m(pid=25149)[0m     @     0x7f1974daa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25149)[0m     @     0x7f19730ab5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25149)[0m     @     0x7f19731b3148 at::Tensor::copy_()
[2m[36m(pid=25149)[0m     @     0x7f1979469bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25149)[0m     @     0x5618ba1e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25149)[0m     @     0x5618ba141b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25149)[0m     @     0x5618ba1ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25149)[0m     @     0x5618ba1cda20 method_vectorcall
[2m[36m(pid=25149)[0m     @     0x5618ba141bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25149)[0m     @     0x5618ba1ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25149)[0m     @     0x5618ba1cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25149)[0m     @     0x5618ba142689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25149)[0m     @     0x5618ba1ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25149)[0m     @     0x5618ba1cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25149)[0m     @     0x5618ba142689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25149)[0m     @     0x5618ba1ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25149)[0m     @     0x5618ba1cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25149)[0m     @     0x5618ba142689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25149)[0m     @     0x5618ba1ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25136)[0m     @     0x7ef7a5e7d148 at::Tensor::copy_()
[2m[36m(pid=25136)[0m     @     0x7ef7ac133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25136)[0m     @     0x56465487ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25136)[0m     @     0x5646547dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25136)[0m     @     0x564654865baf _PyEval_EvalCodeWithName
[2m[36m(pid=25136)[0m     @     0x564654866a20 method_vectorcall
[2m[36m(pid=25136)[0m     @     0x5646547dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25136)[0m     @     0x564654865baf _PyEval_EvalCodeWithName
[2m[36m(pid=25136)[0m     @     0x564654866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25136)[0m     @     0x5646547db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25136)[0m     @     0x564654865baf _PyEval_EvalCodeWithName
[2m[36m(pid=25136)[0m     @     0x564654866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25136)[0m     @     0x5646547db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25136)[0m     @     0x564654865baf _PyEval_EvalCodeWithName
[2m[36m(pid=25136)[0m     @     0x564654866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25136)[0m     @     0x5646547db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25136)[0m     @     0x564654865baf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x7ef8dd3bfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25067)[0m     @     0x7ef8da3fd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25067)[0m     @     0x7ef8da3fbc3f at::native::copy_impl()
[2m[36m(pid=25067)[0m     @     0x7ef8da3fced4 at::native::copy_()
[2m[36m(pid=25047)[0m     @     0x7f49e2c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25047)[0m     @     0x7f49e2d5b148 at::Tensor::copy_()
[2m[36m(pid=25047)[0m     @     0x7f49e9011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25047)[0m     @     0x556d9fe10fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25047)[0m     @     0x556d9fd6bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25047)[0m     @     0x556d9fdf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25047)[0m     @     0x556d9fdf7a20 method_vectorcall
[2m[36m(pid=25047)[0m     @     0x556d9fd6bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25047)[0m     @     0x556d9fdf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25047)[0m     @     0x556d9fdf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25047)[0m     @     0x556d9fd6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25047)[0m     @     0x556d9fdf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25047)[0m     @     0x556d9fdf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25047)[0m     @     0x556d9fd6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25047)[0m     @     0x556d9fdf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25047)[0m     @     0x556d9fdf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25047)[0m     @     0x556d9fd6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25047)[0m     @     0x556d9fdf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25110)[0m     @     0x7ee3baf9c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25110)[0m     @     0x7ee3bb0a4148 at::Tensor::copy_()
[2m[36m(pid=25110)[0m     @     0x7ee3c135abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25110)[0m     @     0x5603e70a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25110)[0m     @     0x5603e7004b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25110)[0m     @     0x5603e708fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25110)[0m     @     0x5603e7090a20 method_vectorcall
[2m[36m(pid=25110)[0m     @     0x5603e7004bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25110)[0m     @     0x5603e708fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25110)[0m     @     0x5603e7090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25110)[0m     @     0x5603e7005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25110)[0m     @     0x5603e708fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25110)[0m     @     0x5603e7090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25110)[0m     @     0x5603e7005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25110)[0m     @     0x5603e708fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25110)[0m     @     0x5603e7090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25110)[0m     @     0x5603e7005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25110)[0m     @     0x5603e708fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25072)[0m     @     0x7fb2c61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25072)[0m     @     0x7fb2c623c148 at::Tensor::copy_()
[2m[36m(pid=25072)[0m     @     0x7fb2cc4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25072)[0m     @     0x558f71ef8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25072)[0m     @     0x558f71e53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25072)[0m     @     0x558f71edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25072)[0m     @     0x558f71edfa20 method_vectorcall
[2m[36m(pid=25072)[0m     @     0x558f71e53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25072)[0m     @     0x558f71edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25072)[0m     @     0x558f71edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25072)[0m     @     0x558f71e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25072)[0m     @     0x558f71edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25072)[0m     @     0x558f71edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25072)[0m     @     0x558f71e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25072)[0m     @     0x558f71edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25072)[0m     @     0x558f71edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25072)[0m     @     0x558f71e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25072)[0m     @     0x558f71edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25050)[0m     @     0x7fb2f42755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25050)[0m     @     0x7fb2f437d148 at::Tensor::copy_()
[2m[36m(pid=25050)[0m     @     0x7fb2fa633bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25068)[0m     @     0x7fc9d27ed5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25068)[0m     @     0x7fc9d28f5148 at::Tensor::copy_()
[2m[36m(pid=25068)[0m     @     0x7fc9d8babbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25068)[0m     @     0x563f75513fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25068)[0m     @     0x563f7546eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25068)[0m     @     0x563f754f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25068)[0m     @     0x563f754faa20 method_vectorcall
[2m[36m(pid=25068)[0m     @     0x563f7546ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25068)[0m     @     0x563f754f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25068)[0m     @     0x563f754fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25068)[0m     @     0x563f7546f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25068)[0m     @     0x563f754f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25068)[0m     @     0x563f754fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25068)[0m     @     0x563f7546f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25068)[0m     @     0x563f754f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25068)[0m     @     0x563f754fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25068)[0m     @     0x563f7546f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25068)[0m     @     0x563f754f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x7fa87f6cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25095)[0m     @     0x7fa87f6c9c3f at::native::copy_impl()
[2m[36m(pid=25095)[0m     @     0x7fa87f6caed4 at::native::copy_()
[2m[36m(pid=25147)[0m     @     0x7ed93385e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25147)[0m     @     0x7ed931b5f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25147)[0m     @     0x7ed931c67148 at::Tensor::copy_()
[2m[36m(pid=25147)[0m     @     0x7ed937f1dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25147)[0m     @     0x558bd5adafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25164)[0m     @     0x7f2d752f0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25164)[0m     @     0x7f2d735f15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25164)[0m     @     0x7f2d736f9148 at::Tensor::copy_()
[2m[36m(pid=25121)[0m     @     0x7fa79faf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25121)[0m     @     0x7fa79fbff148 at::Tensor::copy_()
[2m[36m(pid=25121)[0m     @     0x7fa7a17f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25150)[0m     @     0x7f81fbb4e148 at::Tensor::copy_()
[2m[36m(pid=25150)[0m     @     0x7f81fd745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25150)[0m     @     0x7f81fba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25115)[0m     @     0x7f08ea354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25115)[0m     @     0x7f08ea377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25053)[0m     @     0x7f619e7c1148 at::Tensor::copy_()
[2m[36m(pid=25053)[0m     @     0x7f61a4a77bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25053)[0m     @     0x560551978fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25053)[0m     @     0x5605518d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25053)[0m     @     0x56055195ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25053)[0m     @     0x56055195fa20 method_vectorcall
[2m[36m(pid=25053)[0m     @     0x5605518d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25053)[0m     @     0x56055195ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25053)[0m     @     0x56055195f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25053)[0m     @     0x5605518d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25053)[0m     @     0x56055195ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25053)[0m     @     0x56055195f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25053)[0m     @     0x5605518d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25053)[0m     @     0x56055195ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25053)[0m     @     0x56055195f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25053)[0m     @     0x5605518d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25053)[0m     @     0x56055195ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25048)[0m     @     0x7ef624952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25048)[0m     @     0x7ef622c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25063)[0m     @     0x7ef977151148 at::Tensor::copy_()
[2m[36m(pid=25063)[0m     @     0x7ef97d407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25063)[0m     @     0x55ae952dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25063)[0m     @     0x55ae9523ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25063)[0m     @     0x55ae952c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25063)[0m     @     0x55ae952c6a20 method_vectorcall
[2m[36m(pid=25063)[0m     @     0x55ae9523abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25063)[0m     @     0x55ae952c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25063)[0m     @     0x55ae952c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25063)[0m     @     0x55ae9523b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25063)[0m     @     0x55ae952c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25063)[0m     @     0x55ae952c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25063)[0m     @     0x55ae9523b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25063)[0m     @     0x55ae952c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25063)[0m     @     0x55ae952c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25063)[0m     @     0x55ae9523b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25063)[0m     @     0x55ae952c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25040)[0m     @     0x7ed6aec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25040)[0m     @     0x7ed6aed5b148 at::Tensor::copy_()
[2m[36m(pid=25040)[0m     @     0x7ed6b5011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25040)[0m     @     0x55851a9c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25040)[0m     @     0x55851a921b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25040)[0m     @     0x55851a9acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25040)[0m     @     0x55851a9ada20 method_vectorcall
[2m[36m(pid=25040)[0m     @     0x55851a921bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25040)[0m     @     0x55851a9acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25040)[0m     @     0x55851a9ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25040)[0m     @     0x55851a922689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25040)[0m     @     0x55851a9acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25040)[0m     @     0x55851a9ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25040)[0m     @     0x55851a922689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25040)[0m     @     0x55851a9acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25040)[0m     @     0x55851a9ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25040)[0m     @     0x55851a922689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25040)[0m     @     0x55851a9acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25117)[0m     @     0x7fae933ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25117)[0m     @     0x7fae934f7148 at::Tensor::copy_()
[2m[36m(pid=25117)[0m     @     0x7fae997adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25117)[0m     @     0x5616fe4dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25117)[0m     @     0x5616fe435b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25117)[0m     @     0x5616fe4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25117)[0m     @     0x5616fe4c1a20 method_vectorcall
[2m[36m(pid=25117)[0m     @     0x5616fe435bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25117)[0m     @     0x5616fe4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25117)[0m     @     0x5616fe4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25117)[0m     @     0x5616fe436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25117)[0m     @     0x5616fe4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25117)[0m     @     0x5616fe4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25117)[0m     @     0x5616fe436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25117)[0m     @     0x5616fe4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25117)[0m     @     0x5616fe4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25117)[0m     @     0x5616fe436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25117)[0m     @     0x5616fe4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25167)[0m     @     0x7f4ab031a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25167)[0m     @     0x7f4ab0422148 at::Tensor::copy_()
[2m[36m(pid=25167)[0m     @     0x7f4ab66d8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25167)[0m     @     0x564ca5384fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25167)[0m     @     0x564ca52dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25167)[0m     @     0x564ca536abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25167)[0m     @     0x564ca536ba20 method_vectorcall
[2m[36m(pid=25167)[0m     @     0x564ca52dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25167)[0m     @     0x564ca536abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25167)[0m     @     0x564ca536b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25167)[0m     @     0x564ca52e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25167)[0m     @     0x564ca536abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25167)[0m     @     0x564ca536b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25167)[0m     @     0x564ca52e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25167)[0m     @     0x564ca536abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25167)[0m     @     0x564ca536b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25167)[0m     @     0x564ca52e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25167)[0m     @     0x564ca536abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25039)[0m     @     0x7f6e07d0c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25039)[0m     @     0x7f6e07e14148 at::Tensor::copy_()
[2m[36m(pid=25039)[0m     @     0x7f6e0dcaebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25039)[0m     @     0x565120a58fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25039)[0m     @     0x5651209b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25039)[0m     @     0x565120a3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25039)[0m     @     0x565120a3fa20 method_vectorcall
[2m[36m(pid=25039)[0m     @     0x5651209b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25039)[0m     @     0x565120a3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25039)[0m     @     0x565120a3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25039)[0m     @     0x5651209b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25039)[0m     @     0x565120a3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25039)[0m     @     0x565120a3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25039)[0m     @     0x5651209b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25039)[0m     @     0x565120a3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25039)[0m     @     0x565120a3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25039)[0m     @     0x5651209b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25039)[0m     @     0x565120a3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25057)[0m     @     0x7f8bc584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25057)[0m     @     0x7f8bc5956148 at::Tensor::copy_()
[2m[36m(pid=25057)[0m     @     0x7f8bcbc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25057)[0m     @     0x5622546eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25057)[0m     @     0x562254645b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25057)[0m     @     0x5622546d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25057)[0m     @     0x5622546d1a20 method_vectorcall
[2m[36m(pid=25057)[0m     @     0x562254645bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25057)[0m     @     0x5622546d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25057)[0m     @     0x5622546d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25057)[0m     @     0x562254646689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25057)[0m     @     0x5622546d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25057)[0m     @     0x5622546d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25057)[0m     @     0x562254646689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25057)[0m     @     0x5622546d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25057)[0m     @     0x5622546d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25057)[0m     @     0x562254646689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25057)[0m     @     0x5622546d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x7eeed0751148 at::Tensor::copy_()
[2m[36m(pid=25043)[0m     @     0x7eeed6a07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25043)[0m     @     0x55e0ebe37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25043)[0m     @     0x55e0ebd92b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25043)[0m     @     0x55e0ebe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x55e0ebe1ea20 method_vectorcall
[2m[36m(pid=25043)[0m     @     0x55e0ebd92bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25043)[0m     @     0x55e0ebe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x55e0ebe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25043)[0m     @     0x55e0ebd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25043)[0m     @     0x55e0ebe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x55e0ebe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25043)[0m     @     0x55e0ebd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25043)[0m     @     0x55e0ebe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25043)[0m     @     0x55e0ebe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25043)[0m     @     0x55e0ebd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25043)[0m     @     0x55e0ebe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25162)[0m     @     0x7edc1dabf148 at::Tensor::copy_()
[2m[36m(pid=25162)[0m     @     0x7edc23d75bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25162)[0m     @     0x562ea3441fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25162)[0m     @     0x562ea339cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25162)[0m     @     0x562ea3427baf _PyEval_EvalCodeWithName
[2m[36m(pid=25162)[0m     @     0x562ea3428a20 method_vectorcall
[2m[36m(pid=25162)[0m     @     0x562ea339cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25162)[0m     @     0x562ea3427baf _PyEval_EvalCodeWithName
[2m[36m(pid=25162)[0m     @     0x562ea3428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25162)[0m     @     0x562ea339d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25162)[0m     @     0x562ea3427baf _PyEval_EvalCodeWithName
[2m[36m(pid=25162)[0m     @     0x562ea3428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25162)[0m     @     0x562ea339d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25162)[0m     @     0x562ea3427baf _PyEval_EvalCodeWithName
[2m[36m(pid=25162)[0m     @     0x562ea3428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25162)[0m     @     0x562ea339d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25162)[0m     @     0x562ea3427baf _PyEval_EvalCodeWithName
[2m[36m(pid=25169)[0m     @     0x56082b864baf _PyEval_EvalCodeWithName
[2m[36m(pid=25169)[0m     @     0x56082b865a20 method_vectorcall
[2m[36m(pid=25169)[0m     @     0x56082b7d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25169)[0m     @     0x56082b864baf _PyEval_EvalCodeWithName
[2m[36m(pid=25169)[0m     @     0x56082b865643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25169)[0m     @     0x56082b7da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25169)[0m     @     0x56082b864baf _PyEval_EvalCodeWithName
[2m[36m(pid=25169)[0m     @     0x56082b865643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25169)[0m     @     0x56082b7da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25169)[0m     @     0x56082b864baf _PyEval_EvalCodeWithName
[2m[36m(pid=25169)[0m     @     0x56082b865643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25169)[0m     @     0x56082b7da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25169)[0m     @     0x56082b864baf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x563c08735689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x563c087bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x563c087c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25042)[0m     @     0x563c08735689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x563c087bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25042)[0m     @     0x563c087c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25042)[0m     @     0x563c08735689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25042)[0m     @     0x563c087bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x7fc27e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25060)[0m     @     0x7fc27e553148 at::Tensor::copy_()
[2m[36m(pid=25060)[0m     @     0x7fc284809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25060)[0m     @     0x55d6491c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25060)[0m     @     0x55d64911fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25060)[0m     @     0x55d6491aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x55d6491aba20 method_vectorcall
[2m[36m(pid=25060)[0m     @     0x55d64911fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25060)[0m     @     0x55d6491aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x55d6491ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25060)[0m     @     0x55d649120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25060)[0m     @     0x55d6491aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x55d6491ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25060)[0m     @     0x55d649120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25060)[0m     @     0x55d6491aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25060)[0m     @     0x55d6491ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25060)[0m     @     0x55d649120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25060)[0m     @     0x55d6491aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x7f2cc8b15148 at::Tensor::copy_()
[2m[36m(pid=25049)[0m     @     0x7f2ccedcbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25049)[0m     @     0x5592935dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25049)[0m     @     0x55929353ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25049)[0m     @     0x5592935c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x5592935c6a20 method_vectorcall
[2m[36m(pid=25049)[0m     @     0x55929353abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25049)[0m     @     0x5592935c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x5592935c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25049)[0m     @     0x55929353b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25049)[0m     @     0x5592935c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x5592935c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25049)[0m     @     0x55929353b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25049)[0m     @     0x5592935c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25049)[0m     @     0x5592935c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25049)[0m     @     0x55929353b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25049)[0m     @     0x5592935c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x7f9c80ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25061)[0m     @     0x7f9c7dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25061)[0m     @     0x7f9c7dd07c3f at::native::copy_impl()
[2m[36m(pid=25061)[0m     @     0x7f9c7dd08ed4 at::native::copy_()
[2m[36m(pid=25138)[0m     @     0x7f12cefb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25138)[0m     @     0x7f12cf0bf148 at::Tensor::copy_()
[2m[36m(pid=25138)[0m     @     0x7f12d5375bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25138)[0m     @     0x563013d8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25138)[0m     @     0x563013ceab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25138)[0m     @     0x563013d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25138)[0m     @     0x563013d76a20 method_vectorcall
[2m[36m(pid=25138)[0m     @     0x563013ceabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25138)[0m     @     0x563013d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25138)[0m     @     0x563013d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25138)[0m     @     0x563013ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25138)[0m     @     0x563013d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25138)[0m     @     0x563013d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25138)[0m     @     0x563013ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25138)[0m     @     0x563013d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25138)[0m     @     0x563013d76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25138)[0m     @     0x563013ceb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25138)[0m     @     0x563013d75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25163)[0m     @     0x7ee1a877b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25163)[0m     @     0x7ee1a6a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25163)[0m     @     0x7ee1a6b84148 at::Tensor::copy_()
[2m[36m(pid=25163)[0m     @     0x7ee1ace3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25163)[0m     @     0x564854140fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25163)[0m     @     0x56485409bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25163)[0m     @     0x564854126baf _PyEval_EvalCodeWithName
[2m[36m(pid=25163)[0m     @     0x564854127a20 method_vectorcall
[2m[36m(pid=25163)[0m     @     0x56485409bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25163)[0m     @     0x564854126baf _PyEval_EvalCodeWithName
[2m[36m(pid=25163)[0m     @     0x564854127643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25163)[0m     @     0x56485409c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25163)[0m     @     0x564854126baf _PyEval_EvalCodeWithName
[2m[36m(pid=25163)[0m     @     0x564854127643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25163)[0m     @     0x56485409c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25163)[0m     @     0x564854126baf _PyEval_EvalCodeWithName
[2m[36m(pid=25163)[0m     @     0x564854127643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25163)[0m     @     0x56485409c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25163)[0m     @     0x564854126baf _PyEval_EvalCodeWithName
[2m[36m(pid=25129)[0m     @     0x7f2bbbaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25129)[0m     @     0x7f2bbbbff148 at::Tensor::copy_()
[2m[36m(pid=25129)[0m     @     0x7f2bc1eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25129)[0m     @     0x55aceb3bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25129)[0m     @     0x55aceb315b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25129)[0m     @     0x55aceb3a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25129)[0m     @     0x55aceb3a1a20 method_vectorcall
[2m[36m(pid=25129)[0m     @     0x55aceb315bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25129)[0m     @     0x55aceb3a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25129)[0m     @     0x55aceb3a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25129)[0m     @     0x55aceb316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25129)[0m     @     0x55aceb3a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25129)[0m     @     0x55aceb3a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25129)[0m     @     0x55aceb316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25129)[0m     @     0x55aceb3a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25129)[0m     @     0x55aceb3a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25129)[0m     @     0x55aceb316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25129)[0m     @     0x55aceb3a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25104)[0m     @     0x7ef9c96165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25104)[0m     @     0x7ef9c971e148 at::Tensor::copy_()
[2m[36m(pid=25104)[0m     @     0x7ef9cb315989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25104)[0m     @     0x7ef9c96165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25104)[0m     @     0x7ef9c971e148 at::Tensor::copy_()
[2m[36m(pid=25104)[0m     @     0x7ef9cf9d4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25104)[0m     @     0x557d49d86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25104)[0m     @     0x557d49ce1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25104)[0m     @     0x557d49d6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25104)[0m     @     0x557d49d6da20 method_vectorcall
[2m[36m(pid=25104)[0m     @     0x557d49ce1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25104)[0m     @     0x557d49d6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25104)[0m     @     0x557d49d6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25104)[0m     @     0x557d49ce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25104)[0m     @     0x557d49d6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25104)[0m     @     0x557d49d6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25104)[0m     @     0x557d49ce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25104)[0m     @     0x557d49d6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25104)[0m     @     0x557d49d6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25104)[0m     @     0x557d49ce2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25104)[0m     @     0x557d49d6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25111)[0m     @     0x7f9ce3410148 at::Tensor::copy_()
[2m[36m(pid=25111)[0m     @     0x7f9ce5007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25111)[0m     @     0x7f9ce33085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25111)[0m     @     0x7f9ce3410148 at::Tensor::copy_()
[2m[36m(pid=25111)[0m     @     0x7f9ce96c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25111)[0m     @     0x555c3e1f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25111)[0m     @     0x555c3e153b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25111)[0m     @     0x555c3e1debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25111)[0m     @     0x555c3e1dfa20 method_vectorcall
[2m[36m(pid=25111)[0m     @     0x555c3e153bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25111)[0m     @     0x555c3e1debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25111)[0m     @     0x555c3e1df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25111)[0m     @     0x555c3e154689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25111)[0m     @     0x555c3e1debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25111)[0m     @     0x555c3e1df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25111)[0m     @     0x555c3e154689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25111)[0m     @     0x555c3e1debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25111)[0m     @     0x555c3e1df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25111)[0m     @     0x555c3e154689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25111)[0m     @     0x555c3e1debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25173)[0m     @     0x7f61cc0f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25173)[0m     @     0x7f61ca3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25173)[0m     @     0x7f61ca4fe148 at::Tensor::copy_()
[2m[36m(pid=25173)[0m     @     0x7f61d07b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25173)[0m     @     0x558aa8f0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25173)[0m     @     0x558aa8e65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25173)[0m     @     0x558aa8ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25173)[0m     @     0x558aa8ef1a20 method_vectorcall
[2m[36m(pid=25173)[0m     @     0x558aa8e65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25173)[0m     @     0x558aa8ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25173)[0m     @     0x558aa8ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25173)[0m     @     0x558aa8e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25173)[0m     @     0x558aa8ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25173)[0m     @     0x558aa8ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25173)[0m     @     0x558aa8e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25173)[0m     @     0x558aa8ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25173)[0m     @     0x558aa8ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25173)[0m     @     0x558aa8e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25173)[0m     @     0x558aa8ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25046)[0m     @     0x7f41645af5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25046)[0m     @     0x7f41646b7148 at::Tensor::copy_()
[2m[36m(pid=25046)[0m     @     0x7f41662ae989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25046)[0m     @     0x7f41645af5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25046)[0m     @     0x7f41646b7148 at::Tensor::copy_()
[2m[36m(pid=25046)[0m     @     0x7f416a96dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25046)[0m     @     0x5636b1003fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25046)[0m     @     0x5636b0f5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25046)[0m     @     0x5636b0fe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25046)[0m     @     0x5636b0feaa20 method_vectorcall
[2m[36m(pid=25046)[0m     @     0x5636b0f5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25046)[0m     @     0x5636b0fe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25046)[0m     @     0x5636b0fea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25046)[0m     @     0x5636b0f5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25046)[0m     @     0x5636b0fe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25046)[0m     @     0x5636b0fea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25046)[0m     @     0x5636b0f5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25046)[0m     @     0x5636b0fe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25046)[0m     @     0x5636b0fea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25046)[0m     @     0x5636b0f5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25046)[0m     @     0x5636b0fe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25170)[0m     @     0x7ee998adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25170)[0m     @     0x7ee998be7148 at::Tensor::copy_()
[2m[36m(pid=25170)[0m     @     0x7ee99ee9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25170)[0m     @     0x561e641b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25170)[0m     @     0x561e6410fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25170)[0m     @     0x561e6419abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25170)[0m     @     0x561e6419ba20 method_vectorcall
[2m[36m(pid=25170)[0m     @     0x561e6410fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25170)[0m     @     0x561e6419abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25170)[0m     @     0x561e6419b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25170)[0m     @     0x561e64110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25170)[0m     @     0x561e6419abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25170)[0m     @     0x561e6419b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25170)[0m     @     0x561e64110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25170)[0m     @     0x561e6419abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25170)[0m     @     0x561e6419b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25170)[0m     @     0x561e64110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25170)[0m     @     0x561e6419abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25045)[0m     @     0x7fcbfb7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25045)[0m     @     0x7fcbfb890148 at::Tensor::copy_()
[2m[36m(pid=25045)[0m     @     0x7fcc01b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25045)[0m     @     0x55c502f84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25045)[0m     @     0x55c502edfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25045)[0m     @     0x55c502f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25045)[0m     @     0x55c502f6ba20 method_vectorcall
[2m[36m(pid=25045)[0m     @     0x55c502edfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25045)[0m     @     0x55c502f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25045)[0m     @     0x55c502f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25045)[0m     @     0x55c502ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25045)[0m     @     0x55c502f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25045)[0m     @     0x55c502f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25045)[0m     @     0x55c502ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25045)[0m     @     0x55c502f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25045)[0m     @     0x55c502f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25045)[0m     @     0x55c502ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25045)[0m     @     0x55c502f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25178)[0m     @     0x7f6756d5b148 at::Tensor::copy_()
[2m[36m(pid=25178)[0m     @     0x7f675d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25178)[0m     @     0x564ade463fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25178)[0m     @     0x564ade3beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25178)[0m     @     0x564ade449baf _PyEval_EvalCodeWithName
[2m[36m(pid=25178)[0m     @     0x564ade44aa20 method_vectorcall
[2m[36m(pid=25178)[0m     @     0x564ade3bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25178)[0m     @     0x564ade449baf _PyEval_EvalCodeWithName
[2m[36m(pid=25178)[0m     @     0x564ade44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25178)[0m     @     0x564ade3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25178)[0m     @     0x564ade449baf _PyEval_EvalCodeWithName
[2m[36m(pid=25178)[0m     @     0x564ade44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25178)[0m     @     0x564ade3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25178)[0m     @     0x564ade449baf _PyEval_EvalCodeWithName
[2m[36m(pid=25178)[0m     @     0x564ade44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25178)[0m     @     0x564ade3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25178)[0m     @     0x564ade449baf _PyEval_EvalCodeWithName
[2m[36m(pid=25152)[0m     @     0x7f2e35015148 at::Tensor::copy_()
[2m[36m(pid=25152)[0m     @     0x7f2e3b2cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25152)[0m     @     0x561e77e04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25152)[0m     @     0x561e77d5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25152)[0m     @     0x561e77deabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25152)[0m     @     0x561e77deba20 method_vectorcall
[2m[36m(pid=25152)[0m     @     0x561e77d5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25152)[0m     @     0x561e77deabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25152)[0m     @     0x561e77deb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25152)[0m     @     0x561e77d60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25152)[0m     @     0x561e77deabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25152)[0m     @     0x561e77deb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25152)[0m     @     0x561e77d60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25152)[0m     @     0x561e77deabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25152)[0m     @     0x561e77deb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25152)[0m     @     0x561e77d60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25152)[0m     @     0x561e77deabaf _PyEval_EvalCodeWithName
[2m[36m(pid=25099)[0m     @     0x55ae0388abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25099)[0m     @     0x55ae0388b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25099)[0m     @     0x55ae03800689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25099)[0m     @     0x55ae0388abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x7edfc21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25102)[0m     @     0x7f5d68095148 at::Tensor::copy_()
[2m[36m(pid=25102)[0m     @     0x7f5d6e34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25102)[0m     @     0x564c3b00cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25102)[0m     @     0x564c3af67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25102)[0m     @     0x564c3aff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25102)[0m     @     0x564c3aff3a20 method_vectorcall
[2m[36m(pid=25102)[0m     @     0x564c3af67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25102)[0m     @     0x564c3aff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25102)[0m     @     0x564c3aff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25102)[0m     @     0x564c3af68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25102)[0m     @     0x564c3aff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25102)[0m     @     0x564c3aff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25102)[0m     @     0x564c3af68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25102)[0m     @     0x564c3aff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25102)[0m     @     0x564c3aff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25102)[0m     @     0x564c3af68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25102)[0m     @     0x564c3aff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25059)[0m     @     0x7f033a9c5148 at::Tensor::copy_()
[2m[36m(pid=25059)[0m     @     0x7f0340c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25059)[0m     @     0x55c36a342fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25059)[0m     @     0x55c36a29db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25059)[0m     @     0x55c36a328baf _PyEval_EvalCodeWithName
[2m[36m(pid=25059)[0m     @     0x55c36a329a20 method_vectorcall
[2m[36m(pid=25059)[0m     @     0x55c36a29dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25059)[0m     @     0x55c36a328baf _PyEval_EvalCodeWithName
[2m[36m(pid=25059)[0m     @     0x55c36a329643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25059)[0m     @     0x55c36a29e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25059)[0m     @     0x55c36a328baf _PyEval_EvalCodeWithName
[2m[36m(pid=25059)[0m     @     0x55c36a329643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25059)[0m     @     0x55c36a29e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25059)[0m     @     0x55c36a328baf _PyEval_EvalCodeWithName
[2m[36m(pid=25059)[0m     @     0x55c36a329643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25059)[0m     @     0x55c36a29e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25059)[0m     @     0x55c36a328baf _PyEval_EvalCodeWithName
[2m[36m(pid=25097)[0m     @     0x7fc8bb858148 at::Tensor::copy_()
[2m[36m(pid=25097)[0m     @     0x7fc8c1b0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25097)[0m     @     0x563896f3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25097)[0m     @     0x563896e95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25097)[0m     @     0x563896f20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25097)[0m     @     0x563896f21a20 method_vectorcall
[2m[36m(pid=25097)[0m     @     0x563896e95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25097)[0m     @     0x563896f20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25097)[0m     @     0x563896f21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25097)[0m     @     0x563896e96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25097)[0m     @     0x563896f20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25097)[0m     @     0x563896f21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25097)[0m     @     0x563896e96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25097)[0m     @     0x563896f20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25097)[0m     @     0x563896f21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25097)[0m     @     0x563896e96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25097)[0m     @     0x563896f20baf _PyEval_EvalCodeWithName
[2m[36m(pid=25041)[0m     @     0x564f6e500fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25041)[0m     @     0x564f6e45bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25041)[0m     @     0x564f6e4e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25041)[0m     @     0x564f6e4e7a20 method_vectorcall
[2m[36m(pid=25041)[0m     @     0x564f6e45bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25041)[0m     @     0x564f6e4e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25041)[0m     @     0x564f6e4e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25041)[0m     @     0x564f6e45c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25041)[0m     @     0x564f6e4e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25041)[0m     @     0x564f6e4e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25041)[0m     @     0x564f6e45c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25041)[0m     @     0x564f6e4e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25041)[0m     @     0x564f6e4e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25041)[0m     @     0x564f6e45c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25041)[0m     @     0x564f6e4e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x7ef8dab3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25067)[0m     @     0x7ef8dac47148 at::Tensor::copy_()
[2m[36m(pid=25067)[0m     @     0x7ef8dc83e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25067)[0m     @     0x7ef8dab3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25050)[0m     @     0x564742e98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25050)[0m     @     0x564742df3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25050)[0m     @     0x564742e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25050)[0m     @     0x564742e7fa20 method_vectorcall
[2m[36m(pid=25050)[0m     @     0x564742df3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25050)[0m     @     0x564742e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25050)[0m     @     0x564742e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25050)[0m     @     0x564742df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25050)[0m     @     0x564742e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25050)[0m     @     0x564742e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25050)[0m     @     0x564742df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25050)[0m     @     0x564742e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25050)[0m     @     0x564742e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25050)[0m     @     0x564742df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25050)[0m     @     0x564742e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x7fa87fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25095)[0m     @     0x7fa87ff15148 at::Tensor::copy_()
[2m[36m(pid=25095)[0m     @     0x7fa881b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25095)[0m     @     0x7fa87fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25147)[0m     @     0x558bd5a35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25147)[0m     @     0x558bd5ac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25147)[0m     @     0x558bd5ac1a20 method_vectorcall
[2m[36m(pid=25147)[0m     @     0x558bd5a35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25147)[0m     @     0x558bd5ac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25147)[0m     @     0x558bd5ac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25147)[0m     @     0x558bd5a36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25147)[0m     @     0x558bd5ac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25147)[0m     @     0x558bd5ac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25147)[0m     @     0x558bd5a36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25147)[0m     @     0x558bd5ac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25147)[0m     @     0x558bd5ac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25147)[0m     @     0x558bd5a36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25147)[0m     @     0x558bd5ac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25164)[0m     @     0x7f2d799afbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25164)[0m     @     0x560cc0c3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25164)[0m     @     0x560cc0b97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25164)[0m     @     0x560cc0c22baf _PyEval_EvalCodeWithName
[2m[36m(pid=25164)[0m     @     0x560cc0c23a20 method_vectorcall
[2m[36m(pid=25164)[0m     @     0x560cc0b97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25164)[0m     @     0x560cc0c22baf _PyEval_EvalCodeWithName
[2m[36m(pid=25164)[0m     @     0x560cc0c23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25164)[0m     @     0x560cc0b98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25164)[0m     @     0x560cc0c22baf _PyEval_EvalCodeWithName
[2m[36m(pid=25164)[0m     @     0x560cc0c23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25164)[0m     @     0x560cc0b98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25164)[0m     @     0x560cc0c22baf _PyEval_EvalCodeWithName
[2m[36m(pid=25164)[0m     @     0x560cc0c23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25164)[0m     @     0x560cc0b98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25164)[0m     @     0x560cc0c22baf _PyEval_EvalCodeWithName
[2m[36m(pid=25121)[0m     @     0x7fa79faf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25121)[0m     @     0x7fa79fbff148 at::Tensor::copy_()
[2m[36m(pid=25121)[0m     @     0x7fa7a5eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25121)[0m     @     0x560342c5cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25121)[0m     @     0x560342bb7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25121)[0m     @     0x560342c42baf _PyEval_EvalCodeWithName
[2m[36m(pid=25121)[0m     @     0x560342c43a20 method_vectorcall
[2m[36m(pid=25121)[0m     @     0x560342bb7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25121)[0m     @     0x560342c42baf _PyEval_EvalCodeWithName
[2m[36m(pid=25121)[0m     @     0x560342c43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25121)[0m     @     0x560342bb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25121)[0m     @     0x560342c42baf _PyEval_EvalCodeWithName
[2m[36m(pid=25121)[0m     @     0x560342c43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25121)[0m     @     0x560342bb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25121)[0m     @     0x560342c42baf _PyEval_EvalCodeWithName
[2m[36m(pid=25121)[0m     @     0x560342c43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25121)[0m     @     0x560342bb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25121)[0m     @     0x560342c42baf _PyEval_EvalCodeWithName
[2m[36m(pid=25150)[0m     @     0x7f81fbb4e148 at::Tensor::copy_()
[2m[36m(pid=25150)[0m     @     0x7f8201e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25150)[0m     @     0x562b8e21bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25150)[0m     @     0x562b8e176b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25150)[0m     @     0x562b8e201baf _PyEval_EvalCodeWithName
[2m[36m(pid=25150)[0m     @     0x562b8e202a20 method_vectorcall
[2m[36m(pid=25150)[0m     @     0x562b8e176bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25150)[0m     @     0x562b8e201baf _PyEval_EvalCodeWithName
[2m[36m(pid=25150)[0m     @     0x562b8e202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25150)[0m     @     0x562b8e177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25150)[0m     @     0x562b8e201baf _PyEval_EvalCodeWithName
[2m[36m(pid=25150)[0m     @     0x562b8e202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25150)[0m     @     0x562b8e177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25150)[0m     @     0x562b8e201baf _PyEval_EvalCodeWithName
[2m[36m(pid=25150)[0m     @     0x562b8e202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25150)[0m     @     0x562b8e177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25150)[0m     @     0x562b8e201baf _PyEval_EvalCodeWithName
[2m[36m(pid=25115)[0m     @     0x7f08e73b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25115)[0m     @     0x7f08e73b3c3f at::native::copy_impl()
[2m[36m(pid=25115)[0m     @     0x7f08e73b4ed4 at::native::copy_()
[2m[36m(pid=25048)[0m     @     0x7ef622d5b148 at::Tensor::copy_()
[2m[36m(pid=25048)[0m     @     0x7ef629011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25048)[0m     @     0x556697049fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25048)[0m     @     0x556696fa4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25048)[0m     @     0x55669702fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25048)[0m     @     0x556697030a20 method_vectorcall
[2m[36m(pid=25048)[0m     @     0x556696fa4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25048)[0m     @     0x55669702fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25048)[0m     @     0x556697030643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25048)[0m     @     0x556696fa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25048)[0m     @     0x55669702fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25048)[0m     @     0x556697030643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25048)[0m     @     0x556696fa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25048)[0m     @     0x55669702fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25048)[0m     @     0x556697030643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25048)[0m     @     0x556696fa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25048)[0m     @     0x55669702fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x7f9c7e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25061)[0m     @     0x7f9c7e553148 at::Tensor::copy_()
[2m[36m(pid=25061)[0m     @     0x7f9c8014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25100)[0m     @     0x7edfc223c148 at::Tensor::copy_()
[2m[36m(pid=25100)[0m     @     0x7edfc84f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25067)[0m     @     0x7ef8dac47148 at::Tensor::copy_()
[2m[36m(pid=25067)[0m     @     0x7ef8e0efdbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25067)[0m     @     0x55d5fadd6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25067)[0m     @     0x55d5fad31b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25067)[0m     @     0x55d5fadbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x55d5fadbda20 method_vectorcall
[2m[36m(pid=25067)[0m     @     0x55d5fad31bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25067)[0m     @     0x55d5fadbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x55d5fadbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25067)[0m     @     0x55d5fad32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x7fa87ff15148 at::Tensor::copy_()
[2m[36m(pid=25095)[0m     @     0x7fa8861cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25095)[0m     @     0x555c7edeafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25095)[0m     @     0x555c7ed45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x555c7edd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x555c7edd1a20 method_vectorcall
[2m[36m(pid=25095)[0m     @     0x555c7ed45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x555c7edd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x555c7edd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25095)[0m     @     0x555c7ed46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x555c7edd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x555c7edd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25095)[0m     @     0x555c7ed46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x555c7edd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25095)[0m     @     0x555c7edd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25095)[0m     @     0x555c7ed46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25095)[0m     @     0x555c7edd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25115)[0m     @     0x7f08e7af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25061)[0m     @     0x7f9c7e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=25100)[0m     @     0x5589d8e44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25100)[0m     @     0x5589d8d9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25100)[0m     @     0x5589d8e2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x5589d8e2ba20 method_vectorcall
[2m[36m(pid=25100)[0m     @     0x5589d8d9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25100)[0m     @     0x5589d8e2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x5589d8e2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25100)[0m     @     0x5589d8da0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25100)[0m     @     0x5589d8e2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x5589d8e2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25100)[0m     @     0x5589d8da0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25100)[0m     @     0x5589d8e2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25100)[0m     @     0x5589d8e2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25100)[0m     @     0x5589d8da0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25100)[0m     @     0x5589d8e2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x55d5fadbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x55d5fadbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25067)[0m     @     0x55d5fad32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25067)[0m     @     0x55d5fadbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25067)[0m     @     0x55d5fadbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25067)[0m     @     0x55d5fad32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25067)[0m     @     0x55d5fadbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25115)[0m     @     0x7f08e7bff148 at::Tensor::copy_()
[2m[36m(pid=25115)[0m     @     0x7f08e97f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25188)[0m E1105 11:03:56.107362 25188 26344 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9ecf84e34eb8e61dc2621d1401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}2020-11-05 11:03:56,114	ERROR trial_runner.py:567 -- Trial PPO_jss_env_949fd_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=25188, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.

[2m[36m(pid=25188)[0m E1105 11:03:56.107537 25188 26344 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f3cba62d4c01820bc2621d1401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=25061)[0m     @     0x7f9c7e553148 at::Tensor::copy_()
[2m[36m(pid=25061)[0m     @     0x7f9c84809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25061)[0m     @     0x5555c00f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25061)[0m     @     0x5555c0053b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25061)[0m     @     0x5555c00debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x5555c00dfa20 method_vectorcall
[2m[36m(pid=25061)[0m     @     0x5555c0053bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25061)[0m     @     0x5555c00debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x5555c00df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25061)[0m     @     0x5555c0054689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25061)[0m     @     0x5555c00debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x5555c00df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25061)[0m     @     0x5555c0054689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25061)[0m     @     0x5555c00debaf _PyEval_EvalCodeWithName
[2m[36m(pid=25061)[0m     @     0x5555c00df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25061)[0m     @     0x5555c0054689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25061)[0m     @     0x5555c00debaf _PyEval_EvalCodeWithName
2020-11-05 11:03:56,115	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
== Status ==
Memory usage on this node: 26.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_949fd_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_949fd_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_949fd_00000_0_2020-11-05_11-03-48/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=25115)[0m     @     0x7f08e7af75cc c10::Dispatcher::callWithDispatchKey<>()== Status ==
Memory usage on this node: 26.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_949fd_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_949fd_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_949fd_00000_0_2020-11-05_11-03-48/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+


Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_949fd_00000])
[2m[36m(pid=25115)[0m     @     0x7f08e7bff148 at::Tensor::copy_()
[2m[36m(pid=25115)[0m     @     0x7f08edeb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=25115)[0m     @     0x557f8476dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25115)[0m     @     0x557f846c8b08 _PyEval_EvalFrameDefault.cold.2792
