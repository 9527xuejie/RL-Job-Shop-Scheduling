diff --git a/JSS/.ipynb_checkpoints/Random-checkpoint.ipynb b/JSS/.ipynb_checkpoints/Random-checkpoint.ipynb
index 0fd7b85..c3d10c3 100644
--- a/JSS/.ipynb_checkpoints/Random-checkpoint.ipynb
+++ b/JSS/.ipynb_checkpoints/Random-checkpoint.ipynb
@@ -81,8 +81,8 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Create sweep with ID: 4kvs4n7l\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/4kvs4n7l\n"
+      "Create sweep with ID: kitgghxj\n",
+      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/kitgghxj\n"
      ]
     }
    ],
@@ -100,185 +100,239 @@
      "output_type": "stream",
      "text": [
       "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-13 10:31:26,613 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-13 10:31:30,470 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 10:31:30,470 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "2020-10-13 12:32:48,579 - wandb.wandb_agent - INFO - Running runs: []\n",
+      "2020-10-13 12:32:48,906 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-13 12:32:48,906 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
       "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-13 10:31:30,471 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random.py --instance_path=/JSS/JSS/env/instances/ta51\n",
-      "Traceback (most recent call last):\n",
-      "  File \"bit_generator.pyx\", line 40, in numpy.random.bit_generator\n",
-      "  File \"/root/miniconda3/lib/python3.8/secrets.py\", line 20, in <module>\n",
-      "    from random import SystemRandom\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
+      "2020-10-13 12:32:48,908 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random_loop.py --instance_path=/JSS/JSS/env/instances/ta51\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mdrawn-sweep-1\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/kitgghxj\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/7zjyogzl\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_123250-7zjyogzl\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
-      "During handling of the above exception, another exception occurred:\n",
+      "2020-10-13 12:32:53,926 - wandb.wandb_agent - INFO - Running runs: ['7zjyogzl']\n",
+      "2020-10-13 12:32:54,468\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
+      "== Status ==\n",
+      "Memory usage on this node: 11.5/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/558.4 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 RUNNING)\n",
+      "+----------------------------------+----------+-------+\n",
+      "| Trial name                       | status   | loc   |\n",
+      "|----------------------------------+----------+-------|\n",
+      "| RandomMasked_jss_env_3851e_00000 | RUNNING  |       |\n",
+      "+----------------------------------+----------+-------+\n",
       "\n",
-      "Traceback (most recent call last):\n",
-      "  File \"random.py\", line 1, in <module>\n",
-      "    import ray\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/__init__.py\", line 56, in <module>\n",
-      "    import ray._raylet  # noqa: E402\n",
-      "  File \"python/ray/_raylet.pyx\", line 10, in init ray._raylet\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/__init__.py\", line 151, in <module>\n",
-      "    from . import random\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/__init__.py\", line 179, in <module>\n",
-      "    from . import _pickle\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/_pickle.py\", line 1, in <module>\n",
-      "    from .mtrand import RandomState\n",
-      "  File \"mtrand.pyx\", line 1, in init numpy.random.mtrand\n",
-      "  File \"bit_generator.pyx\", line 43, in init numpy.random.bit_generator\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
-      "2020-10-13 10:31:35,489 - wandb.wandb_agent - INFO - Running runs: ['f2gizgn5']\n",
-      "2020-10-13 10:31:35,490 - wandb.wandb_agent - INFO - Cleaning up finished run: f2gizgn5\n",
-      "2020-10-13 10:31:35,832 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 10:31:35,833 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
-      "2020-10-13 10:31:35,835 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random.py --instance_path=/JSS/JSS/env/instances/ta52\n",
-      "Traceback (most recent call last):\n",
-      "  File \"bit_generator.pyx\", line 40, in numpy.random.bit_generator\n",
-      "  File \"/root/miniconda3/lib/python3.8/secrets.py\", line 20, in <module>\n",
-      "    from random import SystemRandom\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
       "\n",
-      "During handling of the above exception, another exception occurred:\n",
-      "\n",
-      "Traceback (most recent call last):\n",
-      "  File \"random.py\", line 1, in <module>\n",
-      "    import ray\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/__init__.py\", line 56, in <module>\n",
-      "    import ray._raylet  # noqa: E402\n",
-      "  File \"python/ray/_raylet.pyx\", line 10, in init ray._raylet\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/__init__.py\", line 151, in <module>\n",
-      "    from . import random\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/__init__.py\", line 179, in <module>\n",
-      "    from . import _pickle\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/_pickle.py\", line 1, in <module>\n",
-      "    from .mtrand import RandomState\n",
-      "  File \"mtrand.pyx\", line 1, in init numpy.random.mtrand\n",
-      "  File \"bit_generator.pyx\", line 43, in init numpy.random.bit_generator\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
-      "2020-10-13 10:31:40,853 - wandb.wandb_agent - INFO - Running runs: ['hb8zrj3k']\n",
-      "2020-10-13 10:31:40,854 - wandb.wandb_agent - INFO - Cleaning up finished run: hb8zrj3k\n",
-      "2020-10-13 10:31:41,206 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 10:31:41,207 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta53\n",
-      "2020-10-13 10:31:41,209 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random.py --instance_path=/JSS/JSS/env/instances/ta53\n",
-      "Traceback (most recent call last):\n",
-      "  File \"bit_generator.pyx\", line 40, in numpy.random.bit_generator\n",
-      "  File \"/root/miniconda3/lib/python3.8/secrets.py\", line 20, in <module>\n",
-      "    from random import SystemRandom\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
-      "\n",
-      "During handling of the above exception, another exception occurred:\n",
-      "\n",
-      "Traceback (most recent call last):\n",
-      "  File \"random.py\", line 1, in <module>\n",
-      "    import ray\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/__init__.py\", line 56, in <module>\n",
-      "    import ray._raylet  # noqa: E402\n",
-      "  File \"python/ray/_raylet.pyx\", line 10, in init ray._raylet\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/__init__.py\", line 151, in <module>\n",
-      "    from . import random\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/__init__.py\", line 179, in <module>\n",
-      "    from . import _pickle\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/numpy/random/_pickle.py\", line 1, in <module>\n",
-      "    from .mtrand import RandomState\n",
-      "  File \"mtrand.pyx\", line 1, in init numpy.random.mtrand\n",
-      "  File \"bit_generator.pyx\", line 43, in init numpy.random.bit_generator\n",
-      "  File \"/JSS/JSS/random.py\", line 2, in <module>\n",
-      "    import wandb\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/__init__.py\", line 37, in <module>\n",
-      "    from wandb import sdk as wandb_sdk\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/__init__.py\", line 8, in <module>\n",
-      "    from .wandb_artifacts import Artifact  # noqa: F401\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/wandb/sdk/wandb_artifacts.py\", line 6, in <module>\n",
-      "    import requests\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/__init__.py\", line 112, in <module>\n",
-      "    from . import utils\n",
-      "  File \"/root/miniconda3/lib/python3.8/site-packages/requests/utils.py\", line 19, in <module>\n",
-      "    import tempfile\n",
-      "  File \"/root/miniconda3/lib/python3.8/tempfile.py\", line 45, in <module>\n",
-      "    from random import Random as _Random\n",
-      "ImportError: cannot import name 'Random' from partially initialized module 'random' (most likely due to a circular import) (/JSS/JSS/random.py)\n",
-      "2020-10-13 10:31:46,226 - wandb.wandb_agent - INFO - Running runs: ['ey28b8v6']\n",
-      "2020-10-13 10:31:46,227 - wandb.wandb_agent - ERROR - Detected 3 failed runs in the first 60 seconds, shutting down.\n",
-      "2020-10-13 10:31:46,227 - wandb.wandb_agent - INFO - To disable this check set WANDB_AGENT_DISABLE_FLAPPING=true\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Terminating and syncing runs. Press ctrl-c to kill.\n"
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m F1013 12:32:56.746781   308   308 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f29941c66ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f29941c784c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f29941c63c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f29941c65e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f299417d789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993ec11ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993ec12ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993ec1491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993ec3801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m F1013 12:32:56.731905   318   318 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d8d36ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d8d484c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d8d33c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d8d35e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d88a789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d5ce1ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d5ce2ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d5ce491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d5d0801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d4df7a8  ray::gcs::GlobalStateAccessor::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914d450a2c  __pyx_pw_3ray_7_raylet_19GlobalStateAccessor_3connect()\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9dcc98a  method_vectorcall_NOARGS\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d5cb08  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de76a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de8a20  method_vectorcall\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d5dde6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de7baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de8643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d5dde6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de76a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9de8454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9e76bbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9e76c64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9ea8d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d71625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d71a0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9d728cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9eab829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x7f914ebd8840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=318)\u001b[0m     @     0x55b7d9e3bb33  (unknown)\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m F1013 12:32:56.749399   329   329 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245ddef6ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245ddf084c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245ddef3c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245ddef5e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245dda6789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245daea1ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245daea2ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245daea491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245daec801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245d9fb7a8  ray::gcs::GlobalStateAccessor::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m F1013 12:32:56.749487   437   437 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f36026ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f360384c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f36023c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f36025e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f35b9789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f32fd1ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f32fd2ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f32fd491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f32ff801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f3280ed6  ray::CoreWorker::CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m F1013 12:32:56.749395   401   401 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253f536ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253f5484c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253f533c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253f535e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253f0a789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253c4e1ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253c4e2ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253c4e491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253c50801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253bd1ed6  ray::CoreWorker::CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m F1013 12:32:56.749400   363   363 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.17.0.4:35371\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m *** Check failure stack trace: ***\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42549ba6ed  google::LogMessage::Fail()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42549bb84c  google::LogMessage::SendToLog()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42549ba3c9  google::LogMessage::Flush()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42549ba5e1  google::LogMessage::~LogMessage()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f4254971789  ray::RayLog::~RayLog()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42546b51ea  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42546b52ef  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42546b5491  ray::gcs::ServiceBasedGcsClient::PeriodicallyCheckGcsServerAddress()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f42546b7801  ray::gcs::ServiceBasedGcsClient::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f4254638ed6  ray::CoreWorker::CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993dd27a8  ray::gcs::GlobalStateAccessor::Connect()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f2993d43a2c  __pyx_pw_3ray_7_raylet_19GlobalStateAccessor_3connect()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c48b98a  method_vectorcall_NOARGS\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c41bb08  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a66a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a7a20  method_vectorcall\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c41cde6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a6baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a7643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c41cde6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a66a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4a7454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c535bbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c535c64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c567d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c430625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c430a0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4318cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c56a829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245d96ca2c  __pyx_pw_3ray_7_raylet_19GlobalStateAccessor_3connect()\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f167698a  method_vectorcall_NOARGS\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1606b08  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f16916a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1692a20  method_vectorcall\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1607de6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1691baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1692643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1607de6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f16916a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1692454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1720bbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1720c64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f3284c14  ray::CoreWorkerProcess::CreateWorker()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f3285e82  ray::CoreWorkerProcess::CoreWorkerProcess()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253bd5c14  ray::CoreWorkerProcess::CreateWorker()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253bd6e82  ray::CoreWorkerProcess::CoreWorkerProcess()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f425463cc14  ray::CoreWorkerProcess::CreateWorker()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f425463de82  ray::CoreWorkerProcess::CoreWorkerProcess()\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x7f29954cb840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=308)\u001b[0m     @     0x563b5c4fab33  (unknown)\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1752d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f161b625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f161ba0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f161c8cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f1755829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x7f245f0f4840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=329)\u001b[0m     @     0x55d7f16e5b33  (unknown)\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f328684b  ray::CoreWorkerProcess::Initialize()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f31c4448  __pyx_pw_3ray_7_raylet_10CoreWorker_1__cinit__()\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f31c5ba5  __pyx_tp_new_3ray_7_raylet_CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253bd784b  ray::CoreWorkerProcess::Initialize()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253b15448  __pyx_pw_3ray_7_raylet_10CoreWorker_1__cinit__()\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1253b16ba5  __pyx_tp_new_3ray_7_raylet_CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f425463e84b  ray::CoreWorkerProcess::Initialize()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f425457c448  __pyx_pw_3ray_7_raylet_10CoreWorker_1__cinit__()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f425457dba5  __pyx_tp_new_3ray_7_raylet_CoreWorker()\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fad7337d  _PyObject_MakeTpCall\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d1cb37d  _PyObject_MakeTpCall\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d253d09  _PyEval_EvalFrameDefault\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d218baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d219643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d18ede6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d2186a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d219454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d2a7bbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d2a7c64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d2d9d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d1a2625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d1a2a0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f801b37d  _PyObject_MakeTpCall\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f80a3d09  _PyEval_EvalFrameDefault\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f8068baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f8069643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f7fdede6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f80686a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f8069454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f80f7bbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f80f7c64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f8129d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f7ff2625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f7ff2a0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fadfbd09  _PyEval_EvalFrameDefault\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fadc0baf  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fadc1643  _PyFunction_Vectorcall.localalias.353\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fad36de6  _PyEval_EvalFrameDefault.cold.2792\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fadc06a2  _PyEval_EvalCodeWithName\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fadc1454  PyEval_EvalCodeEx\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fae4fbbc  PyEval_EvalCode\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fae4fc64  run_eval_code_obj\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fae81d14  run_mod\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fad4a625  PyRun_FileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fad4aa0a  PyRun_SimpleFileExFlags\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fad4b8cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d1a38cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d2dc829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x7f92f4907840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=437)\u001b[0m     @     0x55917d26cb33  (unknown)\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f7ff38cf  Py_RunMain.cold.2911\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f812c829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x7f1255258840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=401)\u001b[0m     @     0x55c7f80bcb33  (unknown)\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fae84829  Py_BytesMain\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x7f4255cbf840  __libc_start_main\n",
+      "\u001b[2m\u001b[36m(pid=363)\u001b[0m     @     0x5609fae14b33  (unknown)\n",
+      "2020-10-13 12:32:56,926\tWARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffdf5a1a8201000000.\n",
+      "\u001b[2m\u001b[33m(pid=raylet)\u001b[0m E1013 12:32:56.915767   265   265 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Socket closed\n",
+      "\u001b[2m\u001b[33m(pid=raylet)\u001b[0m E1013 12:32:56.929625   265   265 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Socket closed\n",
+      "\u001b[2m\u001b[33m(pid=raylet)\u001b[0m E1013 12:32:56.932425   265   265 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Socket closed\n"
      ]
     }
    ],
    "source": [
-    "!wandb agent 4kvs4n7l"
+    "!wandb agent kitgghxj"
    ]
   },
   {
diff --git a/JSS/.ipynb_checkpoints/RandomRLLib-checkpoint.py b/JSS/.ipynb_checkpoints/RandomRLLib-checkpoint.py
index 300c443..20df2cd 100644
--- a/JSS/.ipynb_checkpoints/RandomRLLib-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/RandomRLLib-checkpoint.py
@@ -50,7 +50,7 @@ class RandomLegalPolicy(Policy):
 
 def execution_plan(workers: WorkerSet,
                    config: TrainerConfigDict) -> LocalIterator[dict]:
-    rollouts = ParallelRollouts(workers, mode="bulk_sync")
+    rollouts = ParallelRollouts(workers, mode="async")
 
     # Collect batches for the trainable policies.
     rollouts = rollouts.for_each(
diff --git a/JSS/.ipynb_checkpoints/Untitled-checkpoint.ipynb b/JSS/.ipynb_checkpoints/Untitled-checkpoint.ipynb
deleted file mode 100644
index ce827b2..0000000
--- a/JSS/.ipynb_checkpoints/Untitled-checkpoint.ipynb
+++ /dev/null
@@ -1,901 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 4,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "I have detected 80 CPUs here, so I'm going to create 79 actors\n"
-     ]
-    }
-   ],
-   "source": [
-    "import os\n",
-    "import multiprocessing as mp\n",
-    "import plotly.io as pio\n",
-    "import ray\n",
-    "from ray import tune\n",
-    "\n",
-    "from JSS.CustomCallbacks import CustomCallbacks\n",
-    "from JSS.env.JSS import JSS\n",
-    "from ray.rllib.agents.ppo import ppo, PPOTrainer\n",
-    "\n",
-    "from ray.tune.logger import DEFAULT_LOGGERS\n",
-    "from ray.tune.integration.wandb import WandbLogger\n",
-    "\n",
-    "from JSS.env_wrapper import BestActionsWrapper\n",
-    "\n",
-    "from JSS.models import FCMaskedActionsModel\n",
-    "\n",
-    "pio.orca.config.use_xvfb = True\n",
-    "import wandb\n",
-    "\n",
-    "'''\n",
-    "            'lr': {\n",
-    "                'values': [5e-5, 1e-5]\n",
-    "            },\n",
-    "            'lambda': {\n",
-    "                'values': [0.90, 0.95, 1.0]\n",
-    "            },\n",
-    "            'clip_param': {\n",
-    "                'values': [0.2, 0.3, 0.4]\n",
-    "            },\n",
-    "            'num_sgd_iter': {\n",
-    "                'values': [30, 35, 40]\n",
-    "            },\n",
-    "            'entropy_coeff': {\n",
-    "                'values': [0.0, 1e-4]\n",
-    "            }\n",
-    "'''\n",
-    "\n",
-    "if __name__ == \"__main__\":\n",
-    "    print(\"I have detected {} CPUs here, so I'm going to create {} actors\".format(mp.cpu_count(), mp.cpu_count() - 1))\n",
-    "    os.environ[\"WANDB_API_KEY\"] = '3487a01956bf67cc7882bca2a38f70c8c95f8463'\n",
-    "    sweep_config = {\n",
-    "        'program': 'RandomGreedy.py',\n",
-    "        'method': 'grid',\n",
-    "        'metric': {\n",
-    "            'name': 'time_step_min',\n",
-    "            'goal': 'minimize',\n",
-    "        },\n",
-    "        'parameters': {\n",
-    "            'instance_path': {\n",
-    "                'values': ['/JSS/JSS/env/instances/ta51', '/JSS/JSS/env/instances/ta52', '/JSS/JSS/env/instances/ta53', '/JSS/JSS/env/instances/ta54',\n",
-    "                           '/JSS/JSS/env/instances/ta55', '/JSS/JSS/env/instances/ta56', '/JSS/JSS/env/instances/ta57', '/JSS/JSS/env/instances/ta58',\n",
-    "                           '/JSS/JSS/env/instances/ta59', '/JSS/JSS/env/instances/ta60']\n",
-    "            }\n",
-    "        }\n",
-    "    }"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 5,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Create sweep with ID: u34ll0uk\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/u34ll0uk\n"
-     ]
-    }
-   ],
-   "source": [
-    "sweep_id = wandb.sweep(sweep_config, project=\"RLLIB_SWEEP_2\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-12 14:18:04,700 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-12 14:18:05,135 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-12 14:18:05,136 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-12 14:18:05,137 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python train.py --instance_path=/JSS/JSS/env/instances/ta51\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "2020-10-12 14:18:10,153 - wandb.wandb_agent - INFO - Running runs: ['ghl8l9jj']\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mtrim-sweep-1\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/u34ll0uk\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ghl8l9jj\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201012_141806-ghl8l9jj\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "2020-10-12 14:18:10,755\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
-      "== Status ==\n",
-      "Memory usage on this node: 11.5/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+-------+\n",
-      "| Trial name              | status   | loc   |\n",
-      "|-------------------------+----------+-------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  |       |\n",
-      "+-------------------------+----------+-------+\n",
-      "\n",
-      "\n",
-      "\u001b[2m\u001b[36m(pid=70054)\u001b[0m 2020-10-12 14:18:13,502\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
-      "\u001b[2m\u001b[36m(pid=70052)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70052)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70034)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70034)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70041)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70041)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70019)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70019)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70045)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70045)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70044)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70044)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70068)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70068)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70070)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70070)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70077)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70077)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70017)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70017)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70032)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70032)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70020)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70020)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70033)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70033)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70035)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70035)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70042)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70042)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70055)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70055)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70046)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70046)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70025)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70025)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70084)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70084)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70076)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70076)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70048)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70048)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70030)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70030)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69979)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69979)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69958)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69958)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69945)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69945)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70016)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70016)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70026)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70026)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70027)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70027)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70028)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70028)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69959)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69959)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69962)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69962)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70057)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70057)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69946)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69946)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69963)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69963)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69987)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69987)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70023)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70023)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69953)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69953)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69950)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69950)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70060)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70060)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70009)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70009)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69981)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69981)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69965)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69965)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69986)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69986)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69947)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69947)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70056)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70056)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70082)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70082)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70018)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70018)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70010)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70010)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69972)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69972)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69968)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69968)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69984)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69984)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69966)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69966)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69967)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69967)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70051)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70051)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69956)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69956)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69949)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69949)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70059)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70059)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70021)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70021)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70066)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70066)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70011)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70011)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70072)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70072)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69955)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69955)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70007)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70007)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70064)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70064)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69975)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69975)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69961)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69961)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69951)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69951)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70014)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70014)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70015)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70015)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70024)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70024)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69954)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69954)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69960)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69960)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70022)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70022)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69973)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69973)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69978)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69978)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70029)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70029)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=69948)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=69948)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70086)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70086)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "\u001b[2m\u001b[36m(pid=70013)\u001b[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)\n",
-      "\u001b[2m\u001b[36m(pid=70013)\u001b[0m   tensor = torch.from_numpy(np.asarray(item))\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3615.0923076923077\n",
-      "    time_step_min: 3379\n",
-      "  date: 2020-10-12_14-18-46\n",
-      "  done: false\n",
-      "  episode_len_mean: 891.1139240506329\n",
-      "  episode_reward_max: 258.59595959595964\n",
-      "  episode_reward_mean: 216.07678046285614\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 158\n",
-      "  episodes_total: 158\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.20000000000000004\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.1851047078768413\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.004071502441850801\n",
-      "        model: {}\n",
-      "        policy_loss: -0.00785889983914482\n",
-      "        total_loss: 507.07567087809247\n",
-      "        vf_explained_var: 0.540532648563385\n",
-      "        vf_loss: 507.0832926432292\n",
-      "    num_steps_sampled: 161792\n",
-      "    num_steps_trained: 161792\n",
-      "  iterations_since_restore: 1\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 29.659374999999997\n",
-      "    gpu_util_percent0: 0.24875000000000003\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.55625\n",
-      "    vram_util_percent0: 0.08526873565103313\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.16994892060296626\n",
-      "    mean_env_wait_ms: 1.169091189632669\n",
-      "    mean_inference_ms: 5.872200097004254\n",
-      "    mean_raw_obs_processing_ms: 0.45335577092961277\n",
-      "  time_since_restore: 27.71648859977722\n",
-      "  time_this_iter_s: 27.71648859977722\n",
-      "  time_total_s: 27.71648859977722\n",
-      "  timers:\n",
-      "    learn_throughput: 8874.446\n",
-      "    learn_time_ms: 18231.223\n",
-      "    sample_throughput: 17216.996\n",
-      "    sample_time_ms: 9397.226\n",
-      "    update_time_ms: 45.065\n",
-      "  timestamp: 1602512326\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 161792\n",
-      "  training_iteration: 1\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 27.6/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      1 |          27.7165 | 161792 |  216.077 |              258.596 |              145.717 |            891.114 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3614.4305555555557\n",
-      "    time_step_min: 3250\n",
-      "  date: 2020-10-12_14-19-13\n",
-      "  done: false\n",
-      "  episode_len_mean: 890.8607594936709\n",
-      "  episode_reward_max: 273.5959595959592\n",
-      "  episode_reward_mean: 217.6365234624726\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 158\n",
-      "  episodes_total: 316\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.1561074058214824\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.007923512797181806\n",
-      "        model: {}\n",
-      "        policy_loss: -0.010965243893830726\n",
-      "        total_loss: 127.46906661987305\n",
-      "        vf_explained_var: 0.8076093792915344\n",
-      "        vf_loss: 127.47981770833333\n",
-      "    num_steps_sampled: 323584\n",
-      "    num_steps_trained: 323584\n",
-      "  iterations_since_restore: 2\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 25.34193548387097\n",
-      "    gpu_util_percent0: 0.3187096774193548\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.748387096774193\n",
-      "    vram_util_percent0: 0.10437848474909812\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.16561765606620044\n",
-      "    mean_env_wait_ms: 1.165680428994888\n",
-      "    mean_inference_ms: 5.6226371336530185\n",
-      "    mean_raw_obs_processing_ms: 0.4413906555255206\n",
-      "  time_since_restore: 54.19657015800476\n",
-      "  time_this_iter_s: 26.48008155822754\n",
-      "  time_total_s: 54.19657015800476\n",
-      "  timers:\n",
-      "    learn_throughput: 8799.877\n",
-      "    learn_time_ms: 18385.711\n",
-      "    sample_throughput: 18754.589\n",
-      "    sample_time_ms: 8626.795\n",
-      "    update_time_ms: 41.168\n",
-      "  timestamp: 1602512353\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 323584\n",
-      "  training_iteration: 2\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.1/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      2 |          54.1966 | 323584 |  217.637 |              273.596 |              145.717 |            890.861 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3601.8677130044844\n",
-      "    time_step_min: 3250\n",
-      "  date: 2020-10-12_14-19-39\n",
-      "  done: false\n",
-      "  episode_len_mean: 885.132911392405\n",
-      "  episode_reward_max: 273.5959595959592\n",
-      "  episode_reward_mean: 219.87009333844756\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 158\n",
-      "  episodes_total: 474\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.1456398169199626\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.008224547879459957\n",
-      "        model: {}\n",
-      "        policy_loss: -0.013529085864623388\n",
-      "        total_loss: 61.275455474853516\n",
-      "        vf_explained_var: 0.8916645646095276\n",
-      "        vf_loss: 61.28873507181803\n",
-      "    num_steps_sampled: 485376\n",
-      "    num_steps_trained: 485376\n",
-      "  iterations_since_restore: 3\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 24.036666666666665\n",
-      "    gpu_util_percent0: 0.4583333333333333\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.766666666666666\n",
-      "    vram_util_percent0: 0.10437848474909811\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.16292763164001656\n",
-      "    mean_env_wait_ms: 1.1660419208572714\n",
-      "    mean_inference_ms: 5.433839896911039\n",
-      "    mean_raw_obs_processing_ms: 0.4330986534385022\n",
-      "  time_since_restore: 80.38152575492859\n",
-      "  time_this_iter_s: 26.184955596923828\n",
-      "  time_total_s: 80.38152575492859\n",
-      "  timers:\n",
-      "    learn_throughput: 8760.554\n",
-      "    learn_time_ms: 18468.239\n",
-      "    sample_throughput: 19699.668\n",
-      "    sample_time_ms: 8212.93\n",
-      "    update_time_ms: 40.926\n",
-      "  timestamp: 1602512379\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 485376\n",
-      "  training_iteration: 3\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.0/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      3 |          80.3815 | 485376 |   219.87 |              273.596 |              145.717 |            885.133 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3596.0099337748343\n",
-      "    time_step_min: 3231\n",
-      "  date: 2020-10-12_14-20-04\n",
-      "  done: false\n",
-      "  episode_len_mean: 878.7689873417721\n",
-      "  episode_reward_max: 276.47474747474763\n",
-      "  episode_reward_mean: 220.6047340493541\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 158\n",
-      "  episodes_total: 632\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.1263898611068726\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.008100568510902425\n",
-      "        model: {}\n",
-      "        policy_loss: -0.013406771836647144\n",
-      "        total_loss: 47.16934140523275\n",
-      "        vf_explained_var: 0.9198758602142334\n",
-      "        vf_loss: 47.18250052134196\n",
-      "    num_steps_sampled: 647168\n",
-      "    num_steps_trained: 647168\n",
-      "  iterations_since_restore: 4\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 25.53103448275862\n",
-      "    gpu_util_percent0: 0.2900000000000001\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.768965517241379\n",
-      "    vram_util_percent0: 0.10437848474909811\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.16094661920745734\n",
-      "    mean_env_wait_ms: 1.167455903288604\n",
-      "    mean_inference_ms: 5.2910087094709635\n",
-      "    mean_raw_obs_processing_ms: 0.42653092723086955\n",
-      "  time_since_restore: 105.78936982154846\n",
-      "  time_this_iter_s: 25.407844066619873\n",
-      "  time_total_s: 105.78936982154846\n",
-      "  timers:\n",
-      "    learn_throughput: 8772.696\n",
-      "    learn_time_ms: 18442.677\n",
-      "    sample_throughput: 20485.045\n",
-      "    sample_time_ms: 7898.054\n",
-      "    update_time_ms: 40.294\n",
-      "  timestamp: 1602512404\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 647168\n",
-      "  training_iteration: 4\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.2/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      4 |          105.789 | 647168 |  220.605 |              276.475 |              145.717 |            878.769 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3581.6985583224114\n",
-      "    time_step_min: 3204\n",
-      "  date: 2020-10-12_14-20-30\n",
-      "  done: false\n",
-      "  episode_len_mean: 872.4867256637168\n",
-      "  episode_reward_max: 280.5656565656565\n",
-      "  episode_reward_mean: 222.48133675567283\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 159\n",
-      "  episodes_total: 791\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.0873714486757915\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.006956188706681132\n",
-      "        model: {}\n",
-      "        policy_loss: -0.011262792395427823\n",
-      "        total_loss: 34.19948164621989\n",
-      "        vf_explained_var: 0.9459590911865234\n",
-      "        vf_loss: 34.2105925877889\n",
-      "    num_steps_sampled: 808960\n",
-      "    num_steps_trained: 808960\n",
-      "  iterations_since_restore: 5\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 24.066666666666663\n",
-      "    gpu_util_percent0: 0.43766666666666665\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.7666666666666657\n",
-      "    vram_util_percent0: 0.10437848474909811\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.15940651242537818\n",
-      "    mean_env_wait_ms: 1.169971635752512\n",
-      "    mean_inference_ms: 5.180106083655211\n",
-      "    mean_raw_obs_processing_ms: 0.4212780660858121\n",
-      "  time_since_restore: 131.2926995754242\n",
-      "  time_this_iter_s: 25.503329753875732\n",
-      "  time_total_s: 131.2926995754242\n",
-      "  timers:\n",
-      "    learn_throughput: 8760.483\n",
-      "    learn_time_ms: 18468.388\n",
-      "    sample_throughput: 21079.592\n",
-      "    sample_time_ms: 7675.291\n",
-      "    update_time_ms: 36.471\n",
-      "  timestamp: 1602512430\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 808960\n",
-      "  training_iteration: 5\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.2/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      5 |          131.293 | 808960 |  222.481 |              280.566 |              145.717 |            872.487 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3564.887755102041\n",
-      "    time_step_min: 3204\n",
-      "  date: 2020-10-12_14-20-56\n",
-      "  done: false\n",
-      "  episode_len_mean: 860.6943942133815\n",
-      "  episode_reward_max: 280.5656565656565\n",
-      "  episode_reward_mean: 225.7112809834327\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 315\n",
-      "  episodes_total: 1106\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.0886386533578236\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.007588425030310948\n",
-      "        model: {}\n",
-      "        policy_loss: -0.01092883839737624\n",
-      "        total_loss: 30.730765342712402\n",
-      "        vf_explained_var: 0.9611188769340515\n",
-      "        vf_loss: 30.741480032602947\n",
-      "    num_steps_sampled: 970752\n",
-      "    num_steps_trained: 970752\n",
-      "  iterations_since_restore: 6\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 25.18965517241379\n",
-      "    gpu_util_percent0: 0.2837931034482758\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.7620689655172406\n",
-      "    vram_util_percent0: 0.10437848474909811\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.15734562235197594\n",
-      "    mean_env_wait_ms: 1.1756497799942263\n",
-      "    mean_inference_ms: 5.0326967604555675\n",
-      "    mean_raw_obs_processing_ms: 0.41464838863890185\n",
-      "  time_since_restore: 156.71548414230347\n",
-      "  time_this_iter_s: 25.422784566879272\n",
-      "  time_total_s: 156.71548414230347\n",
-      "  timers:\n",
-      "    learn_throughput: 8759.305\n",
-      "    learn_time_ms: 18470.871\n",
-      "    sample_throughput: 21462.045\n",
-      "    sample_time_ms: 7538.517\n",
-      "    update_time_ms: 36.673\n",
-      "  timestamp: 1602512456\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 970752\n",
-      "  training_iteration: 6\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.2/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      6 |          156.715 | 970752 |  225.711 |              280.566 |              145.717 |            860.694 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n",
-      "Result for PPO_jss_env_c29f8_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4054\n",
-      "    time_step_mean: 3552.704692556634\n",
-      "    time_step_min: 3179\n",
-      "  date: 2020-10-12_14-21-21\n",
-      "  done: false\n",
-      "  episode_len_mean: 855.0387658227849\n",
-      "  episode_reward_max: 284.35353535353545\n",
-      "  episode_reward_mean: 227.46978487405684\n",
-      "  episode_reward_min: 145.7171717171716\n",
-      "  episodes_this_iter: 158\n",
-      "  episodes_total: 1264\n",
-      "  experiment_id: 824facd13c99490c857fa26d81a874e0\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    learner:\n",
-      "      default_policy:\n",
-      "        allreduce_latency: 0.0\n",
-      "        cur_kl_coeff: 0.10000000000000002\n",
-      "        cur_lr: 5.0e-05\n",
-      "        entropy: 1.0706470410029094\n",
-      "        entropy_coeff: 0.0005000000000000001\n",
-      "        kl: 0.007387861027382314\n",
-      "        model: {}\n",
-      "        policy_loss: -0.013462736414415607\n",
-      "        total_loss: 19.742233912150066\n",
-      "        vf_explained_var: 0.9632093906402588\n",
-      "        vf_loss: 19.75549300511678\n",
-      "    num_steps_sampled: 1132544\n",
-      "    num_steps_trained: 1132544\n",
-      "  iterations_since_restore: 7\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 25.182758620689658\n",
-      "    gpu_util_percent0: 0.30241379310344835\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 3.775862068965517\n",
-      "    vram_util_percent0: 0.10437848474909811\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 70054\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.15659944710447274\n",
-      "    mean_env_wait_ms: 1.1781296386862312\n",
-      "    mean_inference_ms: 4.979102261022608\n",
-      "    mean_raw_obs_processing_ms: 0.41223103840983283\n",
-      "  time_since_restore: 182.10720825195312\n",
-      "  time_this_iter_s: 25.391724109649658\n",
-      "  time_total_s: 182.10720825195312\n",
-      "  timers:\n",
-      "    learn_throughput: 8762.399\n",
-      "    learn_time_ms: 18464.35\n",
-      "    sample_throughput: 21732.82\n",
-      "    sample_time_ms: 7444.593\n",
-      "    update_time_ms: 36.744\n",
-      "  timestamp: 1602512481\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 1132544\n",
-      "  training_iteration: 7\n",
-      "  trial_id: c29f8_00000\n",
-      "  \n",
-      "== Status ==\n",
-      "Memory usage on this node: 28.1/754.6 GiB\n",
-      "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/557.57 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
-      "Result logdir: /root/ray_results/ppo-jss\n",
-      "Number of trials: 1 (1 RUNNING)\n",
-      "+-------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name              | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|-------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| PPO_jss_env_c29f8_00000 | RUNNING  | 172.17.0.4:70054 |      7 |          182.107 | 1132544 |   227.47 |              284.354 |              145.717 |            855.039 |\n",
-      "+-------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "\n",
-      "\n"
-     ]
-    }
-   ],
-   "source": [
-    "!wandb agent u34ll0uk"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.8.3"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 4
-}
diff --git a/JSS/.ipynb_checkpoints/default_config-checkpoint.py b/JSS/.ipynb_checkpoints/default_config-checkpoint.py
index 0a91a3d..46f4d10 100644
--- a/JSS/.ipynb_checkpoints/default_config-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/default_config-checkpoint.py
@@ -6,7 +6,7 @@ default_config = {
     'env': 'jss_env',
     'seed': 0,
     'framework': 'torch',
-    'log_level': 'WARN',
+    'log_level': 'INFO',
     'num_gpus': 1,
     'instance_path': '/JSS/JSS/env/instances/ta51',
     'num_envs_per_worker': 2,
@@ -18,7 +18,7 @@ default_config = {
     'layer_size': 1024,
     'layer_nb': 2,
     'lr': 5e-5,
-    'clip_param': 0.5,
+    'clip_param': 0.3,
     'vf_clip_param': 10.0,
     'kl_target': 0.01,
     'num_sgd_iter': 25,
diff --git a/JSS/.ipynb_checkpoints/random_loop-checkpoint.py b/JSS/.ipynb_checkpoints/random_loop-checkpoint.py
index aa1b333..2d05ff1 100644
--- a/JSS/.ipynb_checkpoints/random_loop-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/random_loop-checkpoint.py
@@ -33,9 +33,10 @@ def rand_func():
     wandb.init(config={})
     config = with_common_config(wandb.config)
 
+    config['evaluation_num_episodes'] = 10
     config['num_workers'] = mp.cpu_count() - 1
-    config['num_envs_per_worker'] = 3
-    config['metrics_smoothing_episodes'] = 9e10
+    config['num_envs_per_worker'] = 2
+    config['metrics_smoothing_episodes'] = 999999999
     config['observation_filter'] = 'NoFilter'
     config['env'] = default_config['env']
     config['env_config'] = {
diff --git a/JSS/.ipynb_checkpoints/train-checkpoint.py b/JSS/.ipynb_checkpoints/train-checkpoint.py
index 401c564..d4ac941 100644
--- a/JSS/.ipynb_checkpoints/train-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/train-checkpoint.py
@@ -50,12 +50,12 @@ def train_func():
     ray.init()
 
     stop = {
-        "time_total_s": 600,
+        "time_total_s": 60 * 60,
     }
 
     analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
     result = analysis.results_df.to_dict('index')
-    last_run_id = result.keys()[0]
+    last_run_id = list(result.keys())[0]
     result = result[last_run_id]
     wandb.log({'time_step_min': result['custom_metrics.time_step_min']})
     if result['custom_metrics.time_step_max'] != float('inf'):
diff --git a/JSS/FIFO.py b/JSS/FIFO.py
index e6f3550..48f232a 100644
--- a/JSS/FIFO.py
+++ b/JSS/FIFO.py
@@ -1,33 +1,33 @@
 import random
 import numpy as np
 
-import gym
 import wandb
 
-from JSS import default_dqn_config
+from JSS.default_config import default_config
+from JSS.env import JSS
 from JSS.env_wrapper import BestActionsWrapper
 
 
 def FIFO_worker(default_config):
     wandb.init(name='FIFO', config=default_config)
     config = wandb.config
-    env = BestActionsWrapper(gym.make(config['env_name'], env_config={'instance_path': config['instance']}))
+    env = BestActionsWrapper(JSS(env_config={'instance_path': config['instance_path']}))
     env.seed(config['seed'])
     random.seed(config['seed'])
     np.random.seed(config['seed'])
     done = False
-    states = env.reset()
-    legal_actions = env.get_legal_actions()
+    state = env.reset()
     while not done:
-        waiting_time = np.reshape(states, (env.jobs, 7))[:, 5]
+        real_state = np.copy(state['real_obs'])
+        legal_actions = state['action_mask'][:-1]
+        reshaped = np.reshape(real_state, (env.jobs, 7))
+        remaining_time = reshaped[:, 5]
         illegal_actions = np.invert(legal_actions)
         mask = illegal_actions * -1e8
-        waiting_time += mask
-        fifo_action = np.argmax(waiting_time)
-        assert legal_actions[fifo_action]
-        state, reward, done, _ = env.step(fifo_action)
-        legal_actions = env.get_legal_actions()
-
+        remaining_time += mask
+        FIFO_action = np.argmax(remaining_time)
+        assert legal_actions[FIFO_action]
+        state, reward, done, _ = env.step(FIFO_action)
     env.reset()
     all_best_score = env.best_score
     all_best_actions = env.best_actions
@@ -36,4 +36,4 @@ def FIFO_worker(default_config):
                "best_timestep": all_best_time_step})
 
 if __name__ == "__main__":
-    FIFO_worker(default_dqn_config.config)
\ No newline at end of file
+    FIFO_worker(default_config)
\ No newline at end of file
diff --git a/JSS/Random.ipynb b/JSS/Random.ipynb
index 425a462..a16b1ba 100644
--- a/JSS/Random.ipynb
+++ b/JSS/Random.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [
     {
@@ -74,15 +74,15 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Create sweep with ID: y6web2p5\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/y6web2p5\n"
+      "Create sweep with ID: lh9x5rb9\n",
+      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/lh9x5rb9\n"
      ]
     }
    ],
@@ -92,7 +92,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -100,39 +100,39 @@
      "output_type": "stream",
      "text": [
       "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-13 12:02:35,780 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-13 12:02:36,121 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 12:02:36,121 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "2020-10-14 18:51:58,915 - wandb.wandb_agent - INFO - Running runs: []\n",
+      "2020-10-14 18:51:59,229 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 18:51:59,229 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
       "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-13 12:02:36,123 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random_loop.py --instance_path=/JSS/JSS/env/instances/ta51\n",
+      "2020-10-14 18:51:59,231 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random_loop.py --instance_path=/JSS/JSS/env/instances/ta51\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "2020-10-14 18:52:04,245 - wandb.wandb_agent - INFO - Running runs: ['bgm3l5ts']\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mcharmed-sweep-1\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33meffortless-sweep-1\u001b[0m\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/y6web2p5\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ev8vh4v7\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_120238-ev8vh4v7\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/lh9x5rb9\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/bgm3l5ts\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_185201-bgm3l5ts\n",
       "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
       "\n",
-      "2020-10-13 12:02:40,130\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8266\u001b[39m\u001b[22m\n",
-      "2020-10-13 12:02:41,138 - wandb.wandb_agent - INFO - Running runs: ['ev8vh4v7']\n",
+      "2020-10-14 18:52:04,834\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
       "== Status ==\n",
-      "Memory usage on this node: 23.7/754.6 GiB\n",
+      "Memory usage on this node: 11.7/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
       "+----------------------------------+----------+-------+\n",
       "| Trial name                       | status   | loc   |\n",
       "|----------------------------------+----------+-------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  |       |\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  |       |\n",
       "+----------------------------------+----------+-------+\n",
       "\n",
       "\n",
-      "\u001b[2m\u001b[36m(pid=45729)\u001b[0m 2020-10-13 12:02:43,278\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
+      "\u001b[2m\u001b[36m(pid=25130)\u001b[0m 2020-10-14 18:52:07,658\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
       "  custom_metrics: {}\n",
-      "  date: 2020-10-13_12-02-47\n",
+      "  date: 2020-10-14_18-52-11\n",
       "  done: false\n",
       "  episode_len_mean: .nan\n",
       "  episode_reward_max: .nan\n",
@@ -140,1230 +140,1937 @@
       "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
       "  episodes_total: 0\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 31600\n",
+      "    num_steps_sampled: 400\n",
       "  iterations_since_restore: 1\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 73.56666666666668\n",
+      "    cpu_util_percent: 72.94000000000001\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.05\n",
+      "    ram_util_percent: 2.3600000000000003\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
       "  sampler_perf: {}\n",
-      "  time_since_restore: 3.8673207759857178\n",
-      "  time_this_iter_s: 3.8673207759857178\n",
-      "  time_total_s: 3.8673207759857178\n",
+      "  time_since_restore: 3.247757911682129\n",
+      "  time_this_iter_s: 3.247757911682129\n",
+      "  time_total_s: 3.247757911682129\n",
       "  timers: {}\n",
-      "  timestamp: 1602590567\n",
+      "  timestamp: 1602701531\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 31600\n",
+      "  timesteps_total: 400\n",
       "  training_iteration: 1\n",
-      "  trial_id: fed9e_00000\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 33.9/754.6 GiB\n",
+      "Memory usage on this node: 21.8/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |      1 |          3.86732 | 31600 |      nan |                  nan |                  nan |                nan |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |   ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |      1 |          3.24776 |  400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 3908\n",
-      "    time_step_mean: 3624.32\n",
-      "    time_step_min: 3323\n",
-      "  date: 2020-10-13_12-02-52\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-52-16\n",
       "  done: false\n",
-      "  episode_len_mean: 891.74\n",
-      "  episode_reward_max: 262.6868686868688\n",
-      "  episode_reward_mean: 219.3141414141412\n",
-      "  episode_reward_min: 173.89898989898953\n",
-      "  episodes_this_iter: 19\n",
-      "  episodes_total: 316\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 316000\n",
-      "  iterations_since_restore: 10\n",
+      "    num_steps_sampled: 12000\n",
+      "  iterations_since_restore: 30\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 59.8\n",
+      "    cpu_util_percent: 5.3\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.9\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.12300545187024917\n",
-      "    mean_env_wait_ms: 0.999840473918018\n",
-      "    mean_inference_ms: 0.3464153013004247\n",
-      "    mean_raw_obs_processing_ms: 0.2143251544201179\n",
-      "  time_since_restore: 8.684232473373413\n",
-      "  time_this_iter_s: 0.5255699157714844\n",
-      "  time_total_s: 8.684232473373413\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 8.01456618309021\n",
+      "  time_this_iter_s: 0.16585516929626465\n",
+      "  time_total_s: 8.01456618309021\n",
       "  timers: {}\n",
-      "  timestamp: 1602590572\n",
+      "  timestamp: 1602701536\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 316000\n",
-      "  training_iteration: 10\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 12000\n",
+      "  training_iteration: 30\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.2/754.6 GiB\n",
+      "Memory usage on this node: 21.9/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     10 |          8.68423 | 316000 |  219.314 |              262.687 |              173.899 |             891.74 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |     30 |          8.01457 | 12000 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4032\n",
-      "    time_step_mean: 3608.51\n",
-      "    time_step_min: 3342\n",
-      "  date: 2020-10-13_12-02-58\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-52-21\n",
       "  done: false\n",
-      "  episode_len_mean: 892.18\n",
-      "  episode_reward_max: 261.32323232323216\n",
-      "  episode_reward_mean: 216.28080808080784\n",
-      "  episode_reward_min: 155.11111111111111\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 632\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 632000\n",
-      "  iterations_since_restore: 20\n",
+      "    num_steps_sampled: 23600\n",
+      "  iterations_since_restore: 59\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf: {}\n",
-      "  pid: 45729\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.12101582324124685\n",
-      "    mean_env_wait_ms: 0.9986277371409678\n",
-      "    mean_inference_ms: 0.34668429329602124\n",
-      "    mean_raw_obs_processing_ms: 0.21227341561294594\n",
-      "  time_since_restore: 13.821089744567871\n",
-      "  time_this_iter_s: 0.4796741008758545\n",
-      "  time_total_s: 13.821089744567871\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 12.782260656356812\n",
+      "  time_this_iter_s: 0.1621565818786621\n",
+      "  time_total_s: 12.782260656356812\n",
       "  timers: {}\n",
-      "  timestamp: 1602590578\n",
+      "  timestamp: 1602701541\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 632000\n",
-      "  training_iteration: 20\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 23600\n",
+      "  training_iteration: 59\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.2/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     20 |          13.8211 | 632000 |  216.281 |              261.323 |              155.111 |             892.18 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |     59 |          12.7823 | 23600 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 3992\n",
-      "    time_step_mean: 3612.47\n",
-      "    time_step_min: 3335\n",
-      "  date: 2020-10-13_12-03-03\n",
-      "  done: false\n",
-      "  episode_len_mean: 889.58\n",
-      "  episode_reward_max: 255.71717171717154\n",
-      "  episode_reward_mean: 220.74292929292915\n",
-      "  episode_reward_min: 161.1717171717173\n",
-      "  episodes_this_iter: 0\n",
-      "  episodes_total: 948\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    num_steps_sampled: 916400\n",
-      "  iterations_since_restore: 29\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 69.6\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.12037284411562876\n",
-      "    mean_env_wait_ms: 0.9998667688299355\n",
-      "    mean_inference_ms: 0.34727889976500154\n",
-      "    mean_raw_obs_processing_ms: 0.21223382842088592\n",
-      "  time_since_restore: 18.721665620803833\n",
-      "  time_this_iter_s: 0.5147233009338379\n",
-      "  time_total_s: 18.721665620803833\n",
-      "  timers: {}\n",
-      "  timestamp: 1602590583\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 916400\n",
-      "  training_iteration: 29\n",
-      "  trial_id: fed9e_00000\n",
-      "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.2/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |     ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     29 |          18.7217 | 916400 |  220.743 |              255.717 |              161.172 |             889.58 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+--------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |     87 |          17.4055 | 34800 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4175\n",
-      "    time_step_mean: 3596.25\n",
-      "    time_step_min: 3304\n",
-      "  date: 2020-10-13_12-03-08\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-52-26\n",
       "  done: false\n",
-      "  episode_len_mean: 891.19\n",
-      "  episode_reward_max: 265.414141414141\n",
-      "  episode_reward_mean: 222.85808080808064\n",
-      "  episode_reward_min: 161.92929292929267\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 1264\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 1200800\n",
-      "  iterations_since_restore: 38\n",
+      "    num_steps_sampled: 35200\n",
+      "  iterations_since_restore: 88\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 73.1\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.12012156174539398\n",
-      "    mean_env_wait_ms: 1.0001862143886004\n",
-      "    mean_inference_ms: 0.34722541312899713\n",
-      "    mean_raw_obs_processing_ms: 0.21143310262047005\n",
-      "  time_since_restore: 23.57568120956421\n",
-      "  time_this_iter_s: 0.4894094467163086\n",
-      "  time_total_s: 23.57568120956421\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 17.567854166030884\n",
+      "  time_this_iter_s: 0.16233396530151367\n",
+      "  time_total_s: 17.567854166030884\n",
       "  timers: {}\n",
-      "  timestamp: 1602590588\n",
+      "  timestamp: 1602701546\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 1200800\n",
-      "  training_iteration: 38\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 35200\n",
+      "  training_iteration: 88\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     38 |          23.5757 | 1200800 |  222.858 |              265.414 |              161.929 |             891.19 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |    116 |          22.0842 | 46400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4001\n",
-      "    time_step_mean: 3600.74\n",
-      "    time_step_min: 3293\n",
-      "  date: 2020-10-13_12-03-13\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-52-31\n",
       "  done: false\n",
-      "  episode_len_mean: 889.41\n",
-      "  episode_reward_max: 265.56565656565624\n",
-      "  episode_reward_mean: 216.73535353535328\n",
-      "  episode_reward_min: 159.80808080808035\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 1580\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 1485200\n",
-      "  iterations_since_restore: 47\n",
+      "    num_steps_sampled: 46800\n",
+      "  iterations_since_restore: 117\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 58.6\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11990381993960651\n",
-      "    mean_env_wait_ms: 1.0005201784431916\n",
-      "    mean_inference_ms: 0.34748163635590124\n",
-      "    mean_raw_obs_processing_ms: 0.21161691344726868\n",
-      "  time_since_restore: 28.468678951263428\n",
-      "  time_this_iter_s: 0.5163655281066895\n",
-      "  time_total_s: 28.468678951263428\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 22.268078804016113\n",
+      "  time_this_iter_s: 0.18388056755065918\n",
+      "  time_total_s: 22.268078804016113\n",
       "  timers: {}\n",
-      "  timestamp: 1602590593\n",
+      "  timestamp: 1602701551\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 1485200\n",
-      "  training_iteration: 47\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 46800\n",
+      "  training_iteration: 117\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
+      "2020-10-14 18:52:32,975\tERROR worker.py:1018 -- Possible unhandled error from worker: \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=25093, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 4.00000000e-01, 2.46153846e-01,\n",
+      "       6.26262626e-01, 5.02564103e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.77948718e-01, 4.44444444e-01,\n",
+      "       8.88205128e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 6.85128205e-01, 3.73737374e-01, 8.00000000e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.07692308e-01, 3.43434343e-01, 9.21025641e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.27272727e-01, 6.00000000e-01, 4.10256410e-01,\n",
+      "       1.21212121e-01, 7.73333333e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.91919192e-01, 7.33333333e-01, 3.82564103e-01, 2.22222222e-01,\n",
+      "       3.95897436e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 5.54871795e-01, 1.31313131e-01, 9.23076923e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 2.72727273e-01, 8.00000000e-01,\n",
+      "       6.23589744e-01, 3.23232323e-01, 6.56410256e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 2.94358974e-01,\n",
+      "       2.02020202e-01, 2.35897436e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.12820513e-01, 4.34343434e-01,\n",
+      "       2.25641026e-04, 0.00000000e+00, 0.00000000e+00, 1.31313131e-01,\n",
+      "       4.00000000e-01, 2.28717949e-01, 7.57575758e-01, 5.10769231e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       4.41025641e-01, 4.54545455e-01, 1.76410256e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.23232323e-01, 6.00000000e-01, 6.53333333e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.00000000e-01, 1.98974359e-01, 2.02020202e-02,\n",
+      "       3.54871795e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 3.25128205e-01, 1.91919192e-01, 3.85641026e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       4.20512821e-01, 3.23232323e-01, 2.42051282e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.78787879e-01, 6.00000000e-01, 5.18974359e-01,\n",
+      "       7.07070707e-02, 1.12820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 6.83076923e-01, 2.72727273e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 2.92307692e-01, 2.92929293e-01, 2.56410256e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.00000000e-01,\n",
+      "       5.85641026e-01, 2.32323232e-01, 2.44102564e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 6.56410256e-01,\n",
+      "       4.24242424e-01, 3.22051282e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.48205128e-01, 8.68686869e-01,\n",
+      "       1.76410256e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 5.00512821e-01, 4.94949495e-01, 4.51282051e-03,\n",
+      "       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       3.61025641e-01, 8.08080808e-02, 6.17435897e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.02564103e-01,\n",
+      "       8.08080808e-01, 1.94871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.33333333e-01, 3.64102564e-01, 1.21212121e-01,\n",
+      "       7.97948718e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.33333333e-01, 9.74358974e-02, 3.03030303e-01, 8.41025641e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.41538462e-01, 4.04040404e-01, 3.24102564e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.11111111e-01, 4.66666667e-01, 3.84615385e-01,\n",
+      "       8.18181818e-01, 1.66153846e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       2.17435897e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 7.37435897e-01, 1.00000000e+00, 1.14256410e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       8.32820513e-01, 3.43434343e-01, 6.56410256e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.04040404e-02, 4.66666667e-01, 4.81025641e-01,\n",
+      "       5.35353535e-01, 1.08717949e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.33333333e-01, 1.91794872e-01, 2.02020202e-02,\n",
+      "       4.10256410e-05, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.89743590e-01, 5.85858586e-01, 1.49743590e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       6.70769231e-01, 2.92929293e-01, 3.28205128e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.14871795e-01,\n",
+      "       6.66666667e-01, 5.10769231e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.02020202e-02, 4.66666667e-01, 4.77948718e-01, 6.66666667e-01,\n",
+      "       4.18461538e-03, 0.00000000e+00, 0.00000000e+00, 2.52525253e-01,\n",
+      "       5.33333333e-01, 5.51794872e-01, 3.83838384e-01, 1.70256410e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       3.20000000e-01, 7.27272727e-01, 1.23076923e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.43434343e-01, 6.66666667e-01, 5.40512821e-01,\n",
+      "       2.72727273e-01, 3.01538462e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 5.33333333e-01, 4.94949495e-01,\n",
+      "       7.79487179e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 4.68717949e-01, 7.57575758e-01, 3.50769231e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 9.33333333e-01,\n",
+      "       8.01025641e-01, 1.41414141e-01, 1.08717949e-03, 0.00000000e+00,\n",
+      "       1.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.94871795e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 3.54871795e-01, 5.05050505e-02,\n",
+      "       9.02564103e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 6.22564103e-01, 4.54545455e-01, 8.82051282e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.47692308e-01, 4.04040404e-01, 3.07692308e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.30256410e-01,\n",
+      "       7.07070707e-01, 2.64615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 2.77948718e-01, 3.93939394e-01,\n",
+      "       1.64102564e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False,  True,\n",
+      "       False, False, False, False, False, False])})\n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     47 |          28.4687 | 1485200 |  216.735 |              265.566 |              159.808 |             889.41 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | RUNNING  | 172.17.0.4:25130 |    145 |           26.762 | 58000 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4154\n",
-      "    time_step_mean: 3586.63\n",
-      "    time_step_min: 3270\n",
-      "  date: 2020-10-13_12-03-19\n",
+      "Result for RandomMasked_jss_env_5afa5_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-52-37\n",
       "  done: false\n",
-      "  episode_len_mean: 891.1\n",
-      "  episode_reward_max: 266.77777777777806\n",
-      "  episode_reward_mean: 223.55959595959575\n",
-      "  episode_reward_min: 136.62626262626236\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 1896\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 1d2b23a635304ca6bea1e0ffde98d7ee\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 1801200\n",
-      "  iterations_since_restore: 57\n",
+      "    num_steps_sampled: 58800\n",
+      "  iterations_since_restore: 147\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf: {}\n",
-      "  pid: 45729\n",
+      "  pid: 25130\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11965139296431003\n",
-      "    mean_env_wait_ms: 0.9993329301665445\n",
-      "    mean_inference_ms: 0.34633305621258004\n",
-      "    mean_raw_obs_processing_ms: 0.21092245334685913\n",
-      "  time_since_restore: 33.70241403579712\n",
-      "  time_this_iter_s: 0.5075874328613281\n",
-      "  time_total_s: 33.70241403579712\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 27.082104921340942\n",
+      "  time_this_iter_s: 0.1581122875213623\n",
+      "  time_total_s: 27.082104921340942\n",
       "  timers: {}\n",
-      "  timestamp: 1602590599\n",
+      "  timestamp: 1602701557\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 1801200\n",
-      "  training_iteration: 57\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 58800\n",
+      "  training_iteration: 147\n",
+      "  trial_id: 5afa5_00000\n",
       "  \n",
+      "2020-10-14 18:52:41,582\tERROR trial_runner.py:567 -- Trial RandomMasked_jss_env_5afa5_00000: Error processing event.\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py\", line 515, in _process_trial\n",
+      "    result = self.trial_executor.fetch_result(trial)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py\", line 488, in fetch_result\n",
+      "    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1428, in get\n",
+      "    raise value.as_instanceof_cause()\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RandomMasked.train()\u001b[39m (pid=25130, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 516, in train\n",
+      "    raise e\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 505, in train\n",
+      "    result = Trainable.train(self)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py\", line 336, in train\n",
+      "    result = self.step()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py\", line 134, in step\n",
+      "    res = next(self.train_exec_impl)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 756, in __next__\n",
+      "    return next(self.built_iterator)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 551, in base_iterator\n",
+      "    batch = ray.get(obj_ref)\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=25093, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 4.00000000e-01, 2.46153846e-01,\n",
+      "       6.26262626e-01, 5.02564103e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.77948718e-01, 4.44444444e-01,\n",
+      "       8.88205128e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 6.85128205e-01, 3.73737374e-01, 8.00000000e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.07692308e-01, 3.43434343e-01, 9.21025641e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.27272727e-01, 6.00000000e-01, 4.10256410e-01,\n",
+      "       1.21212121e-01, 7.73333333e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.91919192e-01, 7.33333333e-01, 3.82564103e-01, 2.22222222e-01,\n",
+      "       3.95897436e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 5.54871795e-01, 1.31313131e-01, 9.23076923e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 2.72727273e-01, 8.00000000e-01,\n",
+      "       6.23589744e-01, 3.23232323e-01, 6.56410256e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 2.94358974e-01,\n",
+      "       2.02020202e-01, 2.35897436e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.12820513e-01, 4.34343434e-01,\n",
+      "       2.25641026e-04, 0.00000000e+00, 0.00000000e+00, 1.31313131e-01,\n",
+      "       4.00000000e-01, 2.28717949e-01, 7.57575758e-01, 5.10769231e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       4.41025641e-01, 4.54545455e-01, 1.76410256e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.23232323e-01, 6.00000000e-01, 6.53333333e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.00000000e-01, 1.98974359e-01, 2.02020202e-02,\n",
+      "       3.54871795e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 3.25128205e-01, 1.91919192e-01, 3.85641026e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       4.20512821e-01, 3.23232323e-01, 2.42051282e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.78787879e-01, 6.00000000e-01, 5.18974359e-01,\n",
+      "       7.07070707e-02, 1.12820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 6.83076923e-01, 2.72727273e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 2.92307692e-01, 2.92929293e-01, 2.56410256e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.00000000e-01,\n",
+      "       5.85641026e-01, 2.32323232e-01, 2.44102564e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 6.56410256e-01,\n",
+      "       4.24242424e-01, 3.22051282e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.48205128e-01, 8.68686869e-01,\n",
+      "       1.76410256e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 5.00512821e-01, 4.94949495e-01, 4.51282051e-03,\n",
+      "       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       3.61025641e-01, 8.08080808e-02, 6.17435897e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.02564103e-01,\n",
+      "       8.08080808e-01, 1.94871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.33333333e-01, 3.64102564e-01, 1.21212121e-01,\n",
+      "       7.97948718e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.33333333e-01, 9.74358974e-02, 3.03030303e-01, 8.41025641e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.41538462e-01, 4.04040404e-01, 3.24102564e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.11111111e-01, 4.66666667e-01, 3.84615385e-01,\n",
+      "       8.18181818e-01, 1.66153846e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       2.17435897e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 7.37435897e-01, 1.00000000e+00, 1.14256410e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       8.32820513e-01, 3.43434343e-01, 6.56410256e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.04040404e-02, 4.66666667e-01, 4.81025641e-01,\n",
+      "       5.35353535e-01, 1.08717949e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.33333333e-01, 1.91794872e-01, 2.02020202e-02,\n",
+      "       4.10256410e-05, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.89743590e-01, 5.85858586e-01, 1.49743590e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       6.70769231e-01, 2.92929293e-01, 3.28205128e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.14871795e-01,\n",
+      "       6.66666667e-01, 5.10769231e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.02020202e-02, 4.66666667e-01, 4.77948718e-01, 6.66666667e-01,\n",
+      "       4.18461538e-03, 0.00000000e+00, 0.00000000e+00, 2.52525253e-01,\n",
+      "       5.33333333e-01, 5.51794872e-01, 3.83838384e-01, 1.70256410e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       3.20000000e-01, 7.27272727e-01, 1.23076923e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.43434343e-01, 6.66666667e-01, 5.40512821e-01,\n",
+      "       2.72727273e-01, 3.01538462e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 5.33333333e-01, 4.94949495e-01,\n",
+      "       7.79487179e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 4.68717949e-01, 7.57575758e-01, 3.50769231e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 9.33333333e-01,\n",
+      "       8.01025641e-01, 1.41414141e-01, 1.08717949e-03, 0.00000000e+00,\n",
+      "       1.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.94871795e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 3.54871795e-01, 5.05050505e-02,\n",
+      "       9.02564103e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 6.22564103e-01, 4.54545455e-01, 8.82051282e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.47692308e-01, 4.04040404e-01, 3.07692308e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.30256410e-01,\n",
+      "       7.07070707e-01, 2.64615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 2.77948718e-01, 3.93939394e-01,\n",
+      "       1.64102564e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False,  True,\n",
+      "       False, False, False, False, False, False])})\n",
+      "== Status ==\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/557.13 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc   |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 | ERROR    |       |    172 |          31.1614 | 68800 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "Number of errored trials: 1\n",
+      "+----------------------------------+--------------+--------------------------------------------------------------------------------------------+\n",
+      "| Trial name                       |   # failures | error file                                                                                 |\n",
+      "|----------------------------------+--------------+--------------------------------------------------------------------------------------------|\n",
+      "| RandomMasked_jss_env_5afa5_00000 |            1 | /root/ray_results/ppo-jss/RandomMasked_jss_env_5afa5_00000_0_2020-10-14_18-52-06/error.txt |\n",
+      "+----------------------------------+--------------+--------------------------------------------------------------------------------------------+\n",
+      "\n",
+      "Traceback (most recent call last):\n",
+      "  File \"random_loop.py\", line 73, in <module>\n",
+      "    rand_func()\n",
+      "  File \"random_loop.py\", line 55, in rand_func\n",
+      "    analysis = tune.run(RandomMaskedTrainer, config=config, stop=stop, name=\"ppo-jss\")\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py\", line 427, in run\n",
+      "    raise TuneError(\"Trials did not complete\", incomplete_trials)\n",
+      "ray.tune.error.TuneError: ('Trials did not complete', [RandomMasked_jss_env_5afa5_00000])\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 24896\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program failed with code 1.  Press ctrl-c to abort syncing.\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_185201-bgm3l5ts/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_185201-bgm3l5ts/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33meffortless-sweep-1\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/bgm3l5ts\u001b[0m\n",
+      "2020-10-14 18:52:51,177 - wandb.wandb_agent - INFO - Cleaning up finished run: bgm3l5ts\n",
+      "2020-10-14 18:52:51,692 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 18:52:51,693 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
+      "2020-10-14 18:52:51,700 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random_loop.py --instance_path=/JSS/JSS/env/instances/ta52\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33msuper-sweep-2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/lh9x5rb9\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ezglujb0\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_185253-ezglujb0\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "2020-10-14 18:52:56,719 - wandb.wandb_agent - INFO - Running runs: ['ezglujb0']\n",
+      "2020-10-14 18:52:57,270\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 11.7/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     57 |          33.7024 | 1801200 |   223.56 |              266.778 |              136.626 |              891.1 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+-------+\n",
+      "| Trial name                       | status   | loc   |\n",
+      "|----------------------------------+----------+-------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  |       |\n",
+      "+----------------------------------+----------+-------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 3909\n",
-      "    time_step_mean: 3613.2\n",
-      "    time_step_min: 3286\n",
-      "  date: 2020-10-13_12-03-24\n",
+      "\u001b[2m\u001b[36m(pid=26894)\u001b[0m 2020-10-14 18:53:00,066\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-03\n",
       "  done: false\n",
-      "  episode_len_mean: 891.29\n",
-      "  episode_reward_max: 268.1414141414137\n",
-      "  episode_reward_mean: 214.13080808080787\n",
-      "  episode_reward_min: 146.77777777777712\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 2212\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 2085600\n",
-      "  iterations_since_restore: 66\n",
+      "    num_steps_sampled: 400\n",
+      "  iterations_since_restore: 1\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 65.4\n",
+      "    cpu_util_percent: 71.17999999999999\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.3600000000000003\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11966413339445793\n",
-      "    mean_env_wait_ms: 0.9985832019170477\n",
-      "    mean_inference_ms: 0.3462936247958898\n",
-      "    mean_raw_obs_processing_ms: 0.21066510916683337\n",
-      "  time_since_restore: 38.49736285209656\n",
-      "  time_this_iter_s: 0.46733856201171875\n",
-      "  time_total_s: 38.49736285209656\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 3.277367115020752\n",
+      "  time_this_iter_s: 3.277367115020752\n",
+      "  time_total_s: 3.277367115020752\n",
       "  timers: {}\n",
-      "  timestamp: 1602590604\n",
+      "  timestamp: 1602701583\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 2085600\n",
-      "  training_iteration: 66\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 400\n",
+      "  training_iteration: 1\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 21.8/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     66 |          38.4974 | 2085600 |  214.131 |              268.141 |              146.778 |             891.29 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |   ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |      1 |          3.27737 |  400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4574\n",
-      "    time_step_mean: 3645.05\n",
-      "    time_step_min: 3331\n",
-      "  date: 2020-10-13_12-03-29\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-08\n",
       "  done: false\n",
-      "  episode_len_mean: 892.17\n",
-      "  episode_reward_max: 263.595959595959\n",
-      "  episode_reward_mean: 214.31262626262603\n",
-      "  episode_reward_min: 72.98989898989893\n",
-      "  episodes_this_iter: 2\n",
-      "  episodes_total: 2530\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 2370000\n",
-      "  iterations_since_restore: 75\n",
+      "    num_steps_sampled: 11600\n",
+      "  iterations_since_restore: 29\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 67.4\n",
+      "    cpu_util_percent: 5.1\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.9\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11940118033182412\n",
-      "    mean_env_wait_ms: 0.9993787699787372\n",
-      "    mean_inference_ms: 0.34541182518526475\n",
-      "    mean_raw_obs_processing_ms: 0.21040739990968604\n",
-      "  time_since_restore: 43.31702017784119\n",
-      "  time_this_iter_s: 0.5080223083496094\n",
-      "  time_total_s: 43.31702017784119\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 7.904330253601074\n",
+      "  time_this_iter_s: 0.16050171852111816\n",
+      "  time_total_s: 7.904330253601074\n",
       "  timers: {}\n",
-      "  timestamp: 1602590609\n",
+      "  timestamp: 1602701588\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 2370000\n",
-      "  training_iteration: 75\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 11600\n",
+      "  training_iteration: 29\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 21.9/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     75 |           43.317 | 2370000 |  214.313 |              263.596 |              72.9899 |             892.17 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |     29 |          7.90433 | 11600 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4222\n",
-      "    time_step_mean: 3607.58\n",
-      "    time_step_min: 3308\n",
-      "  date: 2020-10-13_12-03-34\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-13\n",
       "  done: false\n",
-      "  episode_len_mean: 892.12\n",
-      "  episode_reward_max: 268.4444444444439\n",
-      "  episode_reward_mean: 218.25050505050473\n",
-      "  episode_reward_min: 126.32323232323229\n",
-      "  episodes_this_iter: 5\n",
-      "  episodes_total: 2849\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 2654400\n",
-      "  iterations_since_restore: 84\n",
+      "    num_steps_sampled: 22400\n",
+      "  iterations_since_restore: 56\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf: {}\n",
-      "  pid: 45729\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11909096120959982\n",
-      "    mean_env_wait_ms: 0.9991230433472026\n",
-      "    mean_inference_ms: 0.3453031287758722\n",
-      "    mean_raw_obs_processing_ms: 0.21014637069018524\n",
-      "  time_since_restore: 48.192556619644165\n",
-      "  time_this_iter_s: 0.512589693069458\n",
-      "  time_total_s: 48.192556619644165\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 12.449386596679688\n",
+      "  time_this_iter_s: 0.16517019271850586\n",
+      "  time_total_s: 12.449386596679688\n",
       "  timers: {}\n",
-      "  timestamp: 1602590614\n",
+      "  timestamp: 1602701593\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 2654400\n",
-      "  training_iteration: 84\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 22400\n",
+      "  training_iteration: 56\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     84 |          48.1926 | 2654400 |  218.251 |              268.444 |              126.323 |             892.12 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |     56 |          12.4494 | 22400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4015\n",
-      "    time_step_mean: 3617.25\n",
-      "    time_step_min: 3334\n",
-      "  date: 2020-10-13_12-03-39\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-18\n",
       "  done: false\n",
-      "  episode_len_mean: 892.55\n",
-      "  episode_reward_max: 263.4444444444441\n",
-      "  episode_reward_mean: 218.17712842712822\n",
-      "  episode_reward_min: 163.74747474747474\n",
-      "  episodes_this_iter: 140\n",
-      "  episodes_total: 3312\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 2970400\n",
-      "  iterations_since_restore: 94\n",
+      "    num_steps_sampled: 33600\n",
+      "  iterations_since_restore: 84\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 59.4\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.6\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11905737943218203\n",
-      "    mean_env_wait_ms: 0.9997140731073263\n",
-      "    mean_inference_ms: 0.3452473737420196\n",
-      "    mean_raw_obs_processing_ms: 0.2100466846739485\n",
-      "  time_since_restore: 53.44197487831116\n",
-      "  time_this_iter_s: 0.5872890949249268\n",
-      "  time_total_s: 53.44197487831116\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 17.05783486366272\n",
+      "  time_this_iter_s: 0.1567375659942627\n",
+      "  time_total_s: 17.05783486366272\n",
       "  timers: {}\n",
-      "  timestamp: 1602590619\n",
+      "  timestamp: 1602701598\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 2970400\n",
-      "  training_iteration: 94\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 33600\n",
+      "  training_iteration: 84\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |     94 |           53.442 | 2970400 |  218.177 |              263.444 |              163.747 |             892.55 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |     84 |          17.0578 | 33600 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4105\n",
-      "    time_step_mean: 3640.9\n",
-      "    time_step_min: 3317\n",
-      "  date: 2020-10-13_12-03-45\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-24\n",
       "  done: false\n",
-      "  episode_len_mean: 891.03\n",
-      "  episode_reward_max: 260.71717171717137\n",
-      "  episode_reward_mean: 212.79898989898967\n",
-      "  episode_reward_min: 144.0505050505051\n",
-      "  episodes_this_iter: 3\n",
-      "  episodes_total: 3634\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 3286400\n",
-      "  iterations_since_restore: 104\n",
+      "    num_steps_sampled: 45200\n",
+      "  iterations_since_restore: 113\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 73.5\n",
+      "    cpu_util_percent: 4.5\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.9\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11922418521787664\n",
-      "    mean_env_wait_ms: 0.9987463610178086\n",
-      "    mean_inference_ms: 0.3459298965478697\n",
-      "    mean_raw_obs_processing_ms: 0.20962619964894466\n",
-      "  time_since_restore: 58.70706391334534\n",
-      "  time_this_iter_s: 0.5695362091064453\n",
-      "  time_total_s: 58.70706391334534\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 21.754982709884644\n",
+      "  time_this_iter_s: 0.16276907920837402\n",
+      "  time_total_s: 21.754982709884644\n",
       "  timers: {}\n",
-      "  timestamp: 1602590625\n",
+      "  timestamp: 1602701604\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 3286400\n",
-      "  training_iteration: 104\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 45200\n",
+      "  training_iteration: 113\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    104 |          58.7071 | 3286400 |  212.799 |              260.717 |              144.051 |             891.03 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |    113 |           21.755 | 45200 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4093\n",
-      "    time_step_mean: 3606.98\n",
-      "    time_step_min: 3290\n",
-      "  date: 2020-10-13_12-03-50\n",
+      "2020-10-14 18:53:25,585\tERROR worker.py:1018 -- Possible unhandled error from worker: \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=26854, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 3.67179487e-01,\n",
+      "       5.05050505e-01, 6.72820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.07070707e-02, 4.00000000e-01, 3.89743590e-01, 7.47474747e-01,\n",
+      "       1.20205128e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 7.47692308e-01, 3.43434343e-01, 5.82564103e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.15151515e-01, 5.33333333e-01,\n",
+      "       5.48717949e-01, 6.76767677e-01, 1.37435897e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 5.56923077e-01,\n",
+      "       1.51515152e-01, 1.12820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 2.81025641e-01, 2.42424242e-01,\n",
+      "       1.47692308e-03, 0.00000000e+00, 0.00000000e+00, 7.07070707e-02,\n",
+      "       6.66666667e-01, 5.47692308e-01, 0.00000000e+00, 6.66666667e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 2.66666667e-01,\n",
+      "       1.79487179e-01, 7.17171717e-01, 1.95076923e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,\n",
+      "       1.71717172e-01, 1.12205128e-02, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.12820513e-01, 4.04040404e-02,\n",
+      "       2.58461538e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.48717949e-01, 4.34343434e-01, 1.14256410e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.75897436e-01, 1.01010101e-01, 5.90769231e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.82564103e-01,\n",
+      "       6.86868687e-01, 1.25128205e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.06060606e-02, 6.66666667e-01, 5.57948718e-01, 2.62626263e-01,\n",
+      "       5.33333333e-04, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 4.02051282e-01, 9.69696970e-01, 5.53846154e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       5.22051282e-01, 1.51515152e-01, 1.84615385e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.08080808e-02, 8.00000000e-01, 7.04615385e-01,\n",
+      "       5.65656566e-01, 1.14871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.01538462e-01, 6.66666667e-01,\n",
+      "       6.25641026e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 2.92307692e-01, 6.36363636e-01, 1.12410256e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       5.40512821e-01, 1.51515152e-01, 1.43589744e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 6.56410256e-01,\n",
+      "       3.33333333e-01, 5.57948718e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.86868687e-01, 7.33333333e-01, 5.47692308e-01, 8.58585859e-01,\n",
+      "       1.74358974e-03, 0.00000000e+00, 0.00000000e+00, 2.02020202e-01,\n",
+      "       5.33333333e-01, 4.80000000e-01, 3.63636364e-01, 7.38461538e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.86153846e-01, 3.83838384e-01, 6.35897436e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.00000000e-01,\n",
+      "       6.26262626e-01, 3.69230769e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 8.72820513e-01, 1.00000000e+00,\n",
+      "       8.20512821e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 4.98461538e-01, 6.76767677e-01, 2.07179487e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.51515152e-01, 4.00000000e-01,\n",
+      "       4.74871795e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.13131313e-01, 8.00000000e-01, 6.59487179e-01,\n",
+      "       8.58585859e-01, 1.74358974e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       3.07692308e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.66666667e-01, 1.58974359e-01, 3.03030303e-02, 5.21025641e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       3.84615385e-01, 5.65656566e-01, 1.25538462e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 7.68205128e-01,\n",
+      "       1.00000000e+00, 3.36410256e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 6.26666667e-01, 1.00000000e+00,\n",
+      "       1.24923077e-02, 0.00000000e+00, 0.00000000e+00, 6.06060606e-02,\n",
+      "       5.33333333e-01, 4.31794872e-01, 4.54545455e-01, 9.23076923e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,\n",
+      "       9.70256410e-01, 1.00000000e+00, 9.84615385e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 3.58974359e-01,\n",
+      "       1.01010101e-02, 8.41025641e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.44444444e-01, 9.33333333e-01, 8.36923077e-01, 4.04040404e-02,\n",
+      "       1.15487179e-02, 0.00000000e+00, 0.00000000e+00, 6.96969697e-01,\n",
+      "       6.00000000e-01, 5.84615385e-01, 2.92929293e-01, 1.07282051e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       4.65641026e-01, 0.00000000e+00, 3.38461538e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.02564103e-01,\n",
+      "       7.07070707e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.66666667e-01, 6.17435897e-01, 1.51515152e-01,\n",
+      "       3.38461538e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.81538462e-01, 2.02020202e-02, 4.59487179e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.13131313e-01, 5.33333333e-01,\n",
+      "       5.09743590e-01, 1.71717172e-01, 2.93333333e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.94871795e-01,\n",
+      "       4.94949495e-01, 6.97435897e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.62564103e-01, 3.23232323e-01,\n",
+      "       1.43589744e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       9.33333333e-01, 7.80512821e-01, 2.62626263e-01, 3.69230769e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 2.52525253e-01, 9.33333333e-01,\n",
+      "       8.87179487e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 5.10769231e-01,\n",
+      "       6.26262626e-01, 6.40000000e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 5.94871795e-01, 1.11111111e-01,\n",
+      "       2.21538462e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True])})\n",
+      "2020-10-14 18:53:27,586\tERROR worker.py:1018 -- Possible unhandled error from worker: \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=26840, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.80512821e-01,\n",
+      "       2.12121212e-01, 3.26153846e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 3.96923077e-01, 6.56565657e-01,\n",
+      "       1.82564103e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 6.07179487e-01, 4.84848485e-01, 1.02564103e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.35353535e-01, 4.66666667e-01,\n",
+      "       4.53333333e-01, 1.71717172e-01, 3.48717949e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.44444444e-01, 8.00000000e-01, 6.14358974e-01,\n",
+      "       4.34343434e-01, 8.82051282e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.02020202e-01, 6.66666667e-01, 3.46666667e-01, 2.72727273e-01,\n",
+      "       1.90769231e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.00000000e-01, 3.28205128e-01, 5.35353535e-01, 6.35897436e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.08080808e-02, 5.33333333e-01,\n",
+      "       3.95897436e-01, 1.41414141e-01, 2.87179487e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.06060606e-02, 6.00000000e-01, 3.89743590e-01,\n",
+      "       3.33333333e-01, 4.94358974e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.33333333e-01, 5.87692308e-01, 5.15151515e-01,\n",
+      "       1.43589744e-04, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 5.33333333e-01, 8.48484848e-01, 1.72307692e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.75897436e-01, 9.09090909e-02, 6.83076923e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 5.92820513e-01,\n",
+      "       8.08080808e-02, 2.46153846e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.44444444e-01, 5.33333333e-01, 4.10256410e-01, 7.87878788e-01,\n",
+      "       4.51282051e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 5.43589744e-01, 1.61616162e-01, 4.82051282e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       4.24615385e-01, 4.64646465e-01, 5.33333333e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 6.08205128e-01,\n",
+      "       6.56565657e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 6.03076923e-01, 1.21212121e-01,\n",
+      "       9.47692308e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.66666667e-01, 1.62051282e-01, 4.34343434e-01, 6.76923077e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       5.01538462e-01, 2.02020202e-01, 1.43589744e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 8.71794872e-01,\n",
+      "       1.00000000e+00, 1.98974359e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.02020202e-01, 7.33333333e-01, 5.96923077e-01, 1.01010101e-01,\n",
+      "       8.41025641e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.00000000e+00, 7.61025641e-01, 1.00000000e+00, 1.51794872e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       3.95897436e-01, 5.05050505e-02, 6.15384615e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 5.81538462e-01,\n",
+      "       6.86868687e-01, 2.03076923e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       9.29292929e-01, 5.33333333e-01, 5.00512821e-01, 6.86868687e-01,\n",
+      "       1.82564103e-03, 0.00000000e+00, 0.00000000e+00, 4.34343434e-01,\n",
+      "       4.66666667e-01, 4.54358974e-01, 2.62626263e-01, 5.33333333e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       4.90256410e-01, 7.77777778e-01, 5.29230769e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.14141414e-01, 8.00000000e-01, 6.49230769e-01,\n",
+      "       1.01010101e-02, 2.05128205e-05, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       3.69230769e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 3.24102564e-01, 3.23232323e-01, 1.16923077e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       5.93846154e-01, 6.56565657e-01, 3.13846154e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 6.98461538e-01,\n",
+      "       1.71717172e-01, 2.64615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.31313131e-01, 8.00000000e-01, 5.05641026e-01, 4.84848485e-01,\n",
+      "       3.44615385e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.89743590e-01, 2.62626263e-01, 2.33846154e-03,\n",
+      "       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       3.53846154e-01, 4.04040404e-02, 8.20512821e-05, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.10256410e-01,\n",
+      "       3.33333333e-01, 8.88205128e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 7.21025641e-01, 6.76767677e-01,\n",
+      "       4.10256410e-05, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.00000000e-01, 3.36410256e-01, 4.04040404e-02, 8.10256410e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       5.74358974e-01, 7.07070707e-02, 1.31282051e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.35897436e-01,\n",
+      "       2.82828283e-01, 2.37948718e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 5.33333333e-01, 7.77777778e-01,\n",
+      "       1.16923077e-03, 0.00000000e+00, 0.00000000e+00, 6.56565657e-01,\n",
+      "       4.66666667e-01, 2.40000000e-01, 1.81818182e-01, 2.29743590e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       4.27692308e-01, 1.51515152e-01, 8.51282051e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 6.10256410e-01,\n",
+      "       1.71717172e-01, 8.20512821e-05, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.22222222e-01, 3.33333333e-01, 2.95384615e-01, 7.87878788e-01,\n",
+      "       3.54871795e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 5.16923077e-01, 3.63636364e-01, 7.79487179e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       6.00000000e-01, 1.31313131e-01, 3.48717949e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 6.70769231e-01,\n",
+      "       1.61616162e-01, 2.62564103e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 5.94871795e-01, 2.42424242e-01,\n",
+      "       3.32307692e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False,  True, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False,  True,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False])})\n",
+      "Result for RandomMasked_jss_env_7a318_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-29\n",
       "  done: false\n",
-      "  episode_len_mean: 890.95\n",
-      "  episode_reward_max: 263.44444444444406\n",
-      "  episode_reward_mean: 217.97171717171693\n",
-      "  episode_reward_min: 145.86868686868684\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 3950\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: a0d7abda875641ee8277cfe989ce99c0\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 3602400\n",
-      "  iterations_since_restore: 114\n",
+      "    num_steps_sampled: 56800\n",
+      "  iterations_since_restore: 142\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 64.3\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 26894\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11889466729772012\n",
-      "    mean_env_wait_ms: 0.9975395323478005\n",
-      "    mean_inference_ms: 0.34500793460010826\n",
-      "    mean_raw_obs_processing_ms: 0.2091891618081517\n",
-      "  time_since_restore: 63.72520422935486\n",
-      "  time_this_iter_s: 0.46548008918762207\n",
-      "  time_total_s: 63.72520422935486\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 26.409894704818726\n",
+      "  time_this_iter_s: 0.16816067695617676\n",
+      "  time_total_s: 26.409894704818726\n",
       "  timers: {}\n",
-      "  timestamp: 1602590630\n",
+      "  timestamp: 1602701609\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 3602400\n",
-      "  training_iteration: 114\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 56800\n",
+      "  training_iteration: 142\n",
+      "  trial_id: 7a318_00000\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    114 |          63.7252 | 3602400 |  217.972 |              263.444 |              145.869 |             890.95 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | RUNNING  | 172.17.0.4:26894 |    142 |          26.4099 | 56800 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4252\n",
-      "    time_step_mean: 3652.29\n",
-      "    time_step_min: 3380\n",
-      "  date: 2020-10-13_12-03-55\n",
-      "  done: false\n",
-      "  episode_len_mean: 889.44\n",
-      "  episode_reward_max: 279.05050505050446\n",
-      "  episode_reward_mean: 215.57020202020186\n",
-      "  episode_reward_min: 121.77777777777787\n",
-      "  episodes_this_iter: 7\n",
-      "  episodes_total: 4273\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
-      "  experiment_tag: '0'\n",
-      "  hostname: f85e62b52919\n",
-      "  info:\n",
-      "    num_steps_sampled: 3918400\n",
-      "  iterations_since_restore: 124\n",
-      "  node_ip: 172.17.0.4\n",
-      "  num_healthy_workers: 79\n",
-      "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 83.5\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
-      "  policy_reward_max: {}\n",
-      "  policy_reward_mean: {}\n",
-      "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11878936725064276\n",
-      "    mean_env_wait_ms: 0.9980415004622466\n",
-      "    mean_inference_ms: 0.3447697887515012\n",
-      "    mean_raw_obs_processing_ms: 0.20929478292376516\n",
-      "  time_since_restore: 68.56549787521362\n",
-      "  time_this_iter_s: 0.47615480422973633\n",
-      "  time_total_s: 68.56549787521362\n",
-      "  timers: {}\n",
-      "  timestamp: 1602590635\n",
-      "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 3918400\n",
-      "  training_iteration: 124\n",
-      "  trial_id: fed9e_00000\n",
-      "  \n",
+      "2020-10-14 18:53:30,587\tERROR worker.py:1018 -- Possible unhandled error from worker: \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=26878, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 3.03030303e-01, 4.66666667e-01, 3.36410256e-01,\n",
+      "       6.46464646e-01, 1.31282051e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 3.96923077e-01, 0.00000000e+00,\n",
+      "       1.84615385e-04, 0.00000000e+00, 0.00000000e+00, 1.91919192e-01,\n",
+      "       4.66666667e-01, 5.66153846e-01, 2.72727273e-01, 2.78974359e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       6.01025641e-01, 7.77777778e-01, 1.18974359e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 3.20000000e-01,\n",
+      "       7.57575758e-01, 1.38051282e-02, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 5.82564103e-01, 1.00000000e+00,\n",
+      "       6.97435897e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 5.95897436e-01, 1.61616162e-01, 3.05641026e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       2.87179487e-01, 7.07070707e-02, 3.89743590e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,\n",
+      "       5.25252525e-01, 6.46153846e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.22222222e-01, 6.00000000e-01, 4.82051282e-01, 1.01010101e-02,\n",
+      "       1.57948718e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 5.33333333e-01, 3.63636364e-01, 1.49743590e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.15151515e-01, 4.66666667e-01,\n",
+      "       3.54871795e-01, 3.43434343e-01, 3.01538462e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 7.41538462e-01,\n",
+      "       1.41414141e-01, 2.74871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.00000000e-01, 1.98974359e-01, 4.34343434e-01,\n",
+      "       7.67179487e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 5.43589744e-01, 2.02020202e-02, 8.61538462e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       4.24615385e-01, 4.34343434e-01, 2.46153846e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.03030303e-02, 4.66666667e-01, 4.87179487e-01,\n",
+      "       1.01010101e-01, 5.04615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 7.33333333e-01, 6.37948718e-01, 1.21212121e-01,\n",
+      "       2.42051282e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.00000000e-01, 9.94871795e-02, 4.04040404e-01, 7.38461538e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.13131313e-01, 6.66666667e-01,\n",
+      "       5.08717949e-01, 3.33333333e-01, 2.03076923e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 8.71794872e-01,\n",
+      "       1.00000000e+00, 1.14871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 4.81025641e-01, 6.36363636e-01,\n",
+      "       2.46153846e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 5.50769231e-01, 3.63636364e-01, 3.91794872e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.23232323e-01, 6.00000000e-01,\n",
+      "       4.53333333e-01, 1.01010101e-01, 2.99487179e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 2.32323232e-01, 6.00000000e-01, 4.78974359e-01,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.33333333e-01, 3.64102564e-01, 4.94949495e-01,\n",
+      "       3.83589744e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 5.04615385e-01, 1.21212121e-01, 9.43589744e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       5.65128205e-01, 5.75757576e-01, 4.92307692e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 5.50769231e-01,\n",
+      "       3.83838384e-01, 1.92820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       1.06666667e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.82564103e-01, 2.02020202e-01, 5.80512821e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       6.98461538e-01, 6.76767677e-01, 1.06666667e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 6.98461538e-01,\n",
+      "       7.27272727e-01, 8.20512821e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 3.65128205e-01, 5.05050505e-02,\n",
+      "       1.88717949e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 5.88717949e-01, 6.96969697e-01, 7.58974359e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       4.34871795e-01, 1.01010101e-01, 2.13333333e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 5.25252525e-01, 6.66666667e-01, 5.46666667e-01,\n",
+      "       0.00000000e+00, 3.69230769e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       1.51515152e-01, 6.00000000e-01, 6.16410256e-01, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 3.23232323e-01,\n",
+      "       7.33333333e-01, 7.24102564e-01, 8.08080808e-01, 3.05641026e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.31313131e-01, 4.66666667e-01,\n",
+      "       3.29230769e-01, 1.11111111e-01, 6.83076923e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.35897436e-01,\n",
+      "       3.03030303e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 5.84615385e-01, 6.06060606e-02,\n",
+      "       1.78461538e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.06666667e-01, 2.12121212e-01, 9.08717949e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       4.44102564e-01, 2.42424242e-01, 2.42051282e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 6.10256410e-01,\n",
+      "       3.03030303e-02, 2.52307692e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 6.01025641e-01, 3.13131313e-01,\n",
+      "       2.21538462e-03, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       8.00000000e-01, 6.66666667e-01, 1.01010101e-01, 3.26153846e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.04040404e-02, 6.00000000e-01,\n",
+      "       6.83076923e-01, 6.06060606e-02, 1.23076923e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 5.10769231e-01,\n",
+      "       2.32323232e-01, 3.22051282e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.44444444e-01, 6.66666667e-01, 4.91282051e-01, 1.01010101e-02,\n",
+      "       1.37435897e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False,  True, False, False, False,  True])})\n",
+      "2020-10-14 18:53:33,891\tERROR trial_runner.py:567 -- Trial RandomMasked_jss_env_7a318_00000: Error processing event.\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py\", line 515, in _process_trial\n",
+      "    result = self.trial_executor.fetch_result(trial)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py\", line 488, in fetch_result\n",
+      "    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/worker.py\", line 1428, in get\n",
+      "    raise value.as_instanceof_cause()\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RandomMasked.train()\u001b[39m (pid=26894, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 516, in train\n",
+      "    raise e\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py\", line 505, in train\n",
+      "    result = Trainable.train(self)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py\", line 336, in train\n",
+      "    result = self.step()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py\", line 134, in step\n",
+      "    res = next(self.train_exec_impl)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 756, in __next__\n",
+      "    return next(self.built_iterator)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 843, in apply_filter\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 783, in apply_foreach\n",
+      "    for item in it:\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 551, in base_iterator\n",
+      "    batch = ray.get(obj_ref)\n",
+      "ray.exceptions.RayTaskError(ValueError): \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=26854, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 3.67179487e-01,\n",
+      "       5.05050505e-01, 6.72820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.07070707e-02, 4.00000000e-01, 3.89743590e-01, 7.47474747e-01,\n",
+      "       1.20205128e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.33333333e-01, 7.47692308e-01, 3.43434343e-01, 5.82564103e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.15151515e-01, 5.33333333e-01,\n",
+      "       5.48717949e-01, 6.76767677e-01, 1.37435897e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 5.56923077e-01,\n",
+      "       1.51515152e-01, 1.12820513e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 2.81025641e-01, 2.42424242e-01,\n",
+      "       1.47692308e-03, 0.00000000e+00, 0.00000000e+00, 7.07070707e-02,\n",
+      "       6.66666667e-01, 5.47692308e-01, 0.00000000e+00, 6.66666667e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 2.66666667e-01,\n",
+      "       1.79487179e-01, 7.17171717e-01, 1.95076923e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,\n",
+      "       1.71717172e-01, 1.12205128e-02, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.12820513e-01, 4.04040404e-02,\n",
+      "       2.58461538e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.48717949e-01, 4.34343434e-01, 1.14256410e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.75897436e-01, 1.01010101e-01, 5.90769231e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.82564103e-01,\n",
+      "       6.86868687e-01, 1.25128205e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.06060606e-02, 6.66666667e-01, 5.57948718e-01, 2.62626263e-01,\n",
+      "       5.33333333e-04, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 4.02051282e-01, 9.69696970e-01, 5.53846154e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       5.22051282e-01, 1.51515152e-01, 1.84615385e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.08080808e-02, 8.00000000e-01, 7.04615385e-01,\n",
+      "       5.65656566e-01, 1.14871795e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 9.33333333e-01, 7.01538462e-01, 6.66666667e-01,\n",
+      "       6.25641026e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 2.92307692e-01, 6.36363636e-01, 1.12410256e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       5.40512821e-01, 1.51515152e-01, 1.43589744e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 7.33333333e-01, 6.56410256e-01,\n",
+      "       3.33333333e-01, 5.57948718e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.86868687e-01, 7.33333333e-01, 5.47692308e-01, 8.58585859e-01,\n",
+      "       1.74358974e-03, 0.00000000e+00, 0.00000000e+00, 2.02020202e-01,\n",
+      "       5.33333333e-01, 4.80000000e-01, 3.63636364e-01, 7.38461538e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,\n",
+      "       4.86153846e-01, 3.83838384e-01, 6.35897436e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.00000000e-01,\n",
+      "       6.26262626e-01, 3.69230769e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 8.72820513e-01, 1.00000000e+00,\n",
+      "       8.20512821e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 4.98461538e-01, 6.76767677e-01, 2.07179487e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.51515152e-01, 4.00000000e-01,\n",
+      "       4.74871795e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 3.13131313e-01, 8.00000000e-01, 6.59487179e-01,\n",
+      "       8.58585859e-01, 1.74358974e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       3.07692308e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       2.66666667e-01, 1.58974359e-01, 3.03030303e-02, 5.21025641e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.00000000e-01,\n",
+      "       3.84615385e-01, 5.65656566e-01, 1.25538462e-02, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 7.68205128e-01,\n",
+      "       1.00000000e+00, 3.36410256e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 6.26666667e-01, 1.00000000e+00,\n",
+      "       1.24923077e-02, 0.00000000e+00, 0.00000000e+00, 6.06060606e-02,\n",
+      "       5.33333333e-01, 4.31794872e-01, 4.54545455e-01, 9.23076923e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,\n",
+      "       9.70256410e-01, 1.00000000e+00, 9.84615385e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 3.58974359e-01,\n",
+      "       1.01010101e-02, 8.41025641e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.44444444e-01, 9.33333333e-01, 8.36923077e-01, 4.04040404e-02,\n",
+      "       1.15487179e-02, 0.00000000e+00, 0.00000000e+00, 6.96969697e-01,\n",
+      "       6.00000000e-01, 5.84615385e-01, 2.92929293e-01, 1.07282051e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       4.65641026e-01, 0.00000000e+00, 3.38461538e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.02564103e-01,\n",
+      "       7.07070707e-02, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.66666667e-01, 6.17435897e-01, 1.51515152e-01,\n",
+      "       3.38461538e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.81538462e-01, 2.02020202e-02, 4.59487179e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.13131313e-01, 5.33333333e-01,\n",
+      "       5.09743590e-01, 1.71717172e-01, 2.93333333e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.94871795e-01,\n",
+      "       4.94949495e-01, 6.97435897e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 4.62564103e-01, 3.23232323e-01,\n",
+      "       1.43589744e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       9.33333333e-01, 7.80512821e-01, 2.62626263e-01, 3.69230769e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 2.52525253e-01, 9.33333333e-01,\n",
+      "       8.87179487e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 5.10769231e-01,\n",
+      "       6.26262626e-01, 6.40000000e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 5.94871795e-01, 1.11111111e-01,\n",
+      "       2.21538462e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True])})\n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Result logdir: /root/ray_results/ppo-jss\n",
+      "Number of trials: 1 (1 ERROR)\n",
+      "+----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc   |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 | ERROR    |       |    171 |          30.8067 | 68400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+-------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "Number of errored trials: 1\n",
+      "+----------------------------------+--------------+--------------------------------------------------------------------------------------------+\n",
+      "| Trial name                       |   # failures | error file                                                                                 |\n",
+      "|----------------------------------+--------------+--------------------------------------------------------------------------------------------|\n",
+      "| RandomMasked_jss_env_7a318_00000 |            1 | /root/ray_results/ppo-jss/RandomMasked_jss_env_7a318_00000_0_2020-10-14_18-52-58/error.txt |\n",
+      "+----------------------------------+--------------+--------------------------------------------------------------------------------------------+\n",
+      "\n",
+      "Traceback (most recent call last):\n",
+      "  File \"random_loop.py\", line 73, in <module>\n",
+      "    rand_func()\n",
+      "  File \"random_loop.py\", line 55, in rand_func\n",
+      "    analysis = tune.run(RandomMaskedTrainer, config=config, stop=stop, name=\"ppo-jss\")\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py\", line 427, in run\n",
+      "    raise TuneError(\"Trials did not complete\", incomplete_trials)\n",
+      "ray.tune.error.TuneError: ('Trials did not complete', [RandomMasked_jss_env_7a318_00000])\n",
+      "\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 26647\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Program failed with code 1.  Press ctrl-c to abort syncing.\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201014_185253-ezglujb0/logs/debug.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201014_185253-ezglujb0/logs/debug-internal.log\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33msuper-sweep-2\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/ezglujb0\u001b[0m\n",
+      "2020-10-14 18:53:43,767 - wandb.wandb_agent - INFO - Cleaning up finished run: ezglujb0\n",
+      "2020-10-14 18:53:44,146 - wandb.wandb_agent - INFO - Agent received command: run\n",
+      "2020-10-14 18:53:44,146 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
+      "\tinstance_path: /JSS/JSS/env/instances/ta53\n",
+      "2020-10-14 18:53:44,148 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python random_loop.py --instance_path=/JSS/JSS/env/instances/ta53\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mspring-sweep-3\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/lh9x5rb9\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/gx7ht69p\u001b[0m\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201014_185345-gx7ht69p\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
+      "\n",
+      "2020-10-14 18:53:49,166 - wandb.wandb_agent - INFO - Running runs: ['gx7ht69p']\n",
+      "2020-10-14 18:53:49,662\tINFO services.py:1164 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n",
+      "== Status ==\n",
+      "Memory usage on this node: 11.7/754.6 GiB\n",
+      "Using FIFO scheduling algorithm.\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    124 |          68.5655 | 3918400 |   215.57 |              279.051 |              121.778 |             889.44 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+-------+\n",
+      "| Trial name                       | status   | loc   |\n",
+      "|----------------------------------+----------+-------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  |       |\n",
+      "+----------------------------------+----------+-------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4192\n",
-      "    time_step_mean: 3588.008\n",
-      "    time_step_min: 3282\n",
-      "  date: 2020-10-13_12-04-01\n",
+      "\u001b[2m\u001b[36m(pid=28631)\u001b[0m 2020-10-14 18:53:52,367\tINFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-53-56\n",
       "  done: false\n",
-      "  episode_len_mean: 889.624\n",
-      "  episode_reward_max: 272.38383838383777\n",
-      "  episode_reward_mean: 222.58868686868655\n",
-      "  episode_reward_min: 130.86868686868704\n",
-      "  episodes_this_iter: 125\n",
-      "  episodes_total: 4718\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 4234400\n",
-      "  iterations_since_restore: 134\n",
+      "    num_steps_sampled: 400\n",
+      "  iterations_since_restore: 1\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 73.0\n",
+      "    cpu_util_percent: 68.7\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.3600000000000003\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11885535464812193\n",
-      "    mean_env_wait_ms: 0.998562804371878\n",
-      "    mean_inference_ms: 0.3437329332827009\n",
-      "    mean_raw_obs_processing_ms: 0.20896995719219918\n",
-      "  time_since_restore: 73.70387387275696\n",
-      "  time_this_iter_s: 0.563262939453125\n",
-      "  time_total_s: 73.70387387275696\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 3.336198329925537\n",
+      "  time_this_iter_s: 3.336198329925537\n",
+      "  time_total_s: 3.336198329925537\n",
       "  timers: {}\n",
-      "  timestamp: 1602590641\n",
+      "  timestamp: 1602701636\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 4234400\n",
-      "  training_iteration: 134\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 400\n",
+      "  training_iteration: 1\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 21.8/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    134 |          73.7039 | 4234400 |  222.589 |              272.384 |              130.869 |            889.624 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |   ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |      1 |           3.3362 |  400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 3941\n",
-      "    time_step_mean: 3613.56\n",
-      "    time_step_min: 3305\n",
-      "  date: 2020-10-13_12-04-06\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-54-01\n",
       "  done: false\n",
-      "  episode_len_mean: 893.57\n",
-      "  episode_reward_max: 263.7474747474745\n",
-      "  episode_reward_mean: 214.5247474747473\n",
-      "  episode_reward_min: 148.89898989898956\n",
-      "  episodes_this_iter: 14\n",
-      "  episodes_total: 5056\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 4550400\n",
-      "  iterations_since_restore: 144\n",
+      "    num_steps_sampled: 11600\n",
+      "  iterations_since_restore: 29\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 77.3\n",
+      "    cpu_util_percent: 5.2\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.9\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.1186132796742732\n",
-      "    mean_env_wait_ms: 0.9963958461862492\n",
-      "    mean_inference_ms: 0.3433433317678296\n",
-      "    mean_raw_obs_processing_ms: 0.20837956772435193\n",
-      "  time_since_restore: 78.68051385879517\n",
-      "  time_this_iter_s: 0.46913623809814453\n",
-      "  time_total_s: 78.68051385879517\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 7.95437479019165\n",
+      "  time_this_iter_s: 0.16468524932861328\n",
+      "  time_total_s: 7.95437479019165\n",
       "  timers: {}\n",
-      "  timestamp: 1602590646\n",
+      "  timestamp: 1602701641\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 4550400\n",
-      "  training_iteration: 144\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 11600\n",
+      "  training_iteration: 29\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 21.9/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    144 |          78.6805 | 4550400 |  214.525 |              263.747 |              148.899 |             893.57 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |     29 |          7.95437 | 11600 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 3950\n",
-      "    time_step_mean: 3619.5\n",
-      "    time_step_min: 3332\n",
-      "  date: 2020-10-13_12-04-11\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-54-06\n",
       "  done: false\n",
-      "  episode_len_mean: 890.18\n",
-      "  episode_reward_max: 261.4747474747466\n",
-      "  episode_reward_mean: 217.39898989898964\n",
-      "  episode_reward_min: 167.5353535353535\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
       "  episodes_this_iter: 0\n",
-      "  episodes_total: 5372\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 4866400\n",
-      "  iterations_since_restore: 154\n",
+      "    num_steps_sampled: 23200\n",
+      "  iterations_since_restore: 58\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 71.8\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.1184759557087424\n",
-      "    mean_env_wait_ms: 0.9946395727649014\n",
-      "    mean_inference_ms: 0.34262980707052226\n",
-      "    mean_raw_obs_processing_ms: 0.20800511750687656\n",
-      "  time_since_restore: 83.81842088699341\n",
-      "  time_this_iter_s: 0.47928905487060547\n",
-      "  time_total_s: 83.81842088699341\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 12.706214427947998\n",
+      "  time_this_iter_s: 0.1642756462097168\n",
+      "  time_total_s: 12.706214427947998\n",
       "  timers: {}\n",
-      "  timestamp: 1602590651\n",
+      "  timestamp: 1602701646\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 4866400\n",
-      "  training_iteration: 154\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 23200\n",
+      "  training_iteration: 58\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    154 |          83.8184 | 4866400 |  217.399 |              261.475 |              167.535 |             890.18 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |     58 |          12.7062 | 23200 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4337\n",
-      "    time_step_mean: 3635.58\n",
-      "    time_step_min: 3346\n",
-      "  date: 2020-10-13_12-04-17\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-54-11\n",
       "  done: false\n",
-      "  episode_len_mean: 889.15\n",
-      "  episode_reward_max: 263.5959595959592\n",
-      "  episode_reward_mean: 215.6005050505048\n",
-      "  episode_reward_min: 142.83838383838386\n",
-      "  episodes_this_iter: 7\n",
-      "  episodes_total: 5695\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 5182400\n",
-      "  iterations_since_restore: 164\n",
+      "    num_steps_sampled: 34800\n",
+      "  iterations_since_restore: 87\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 78.7\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11814998797634668\n",
-      "    mean_env_wait_ms: 0.9943916081562785\n",
-      "    mean_inference_ms: 0.3419352410019591\n",
-      "    mean_raw_obs_processing_ms: 0.2075831450892113\n",
-      "  time_since_restore: 88.77592206001282\n",
-      "  time_this_iter_s: 0.4863924980163574\n",
-      "  time_total_s: 88.77592206001282\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 17.468780755996704\n",
+      "  time_this_iter_s: 0.15766501426696777\n",
+      "  time_total_s: 17.468780755996704\n",
       "  timers: {}\n",
-      "  timestamp: 1602590657\n",
+      "  timestamp: 1602701651\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 5182400\n",
-      "  training_iteration: 164\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 34800\n",
+      "  training_iteration: 87\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    164 |          88.7759 | 5182400 |  215.601 |              263.596 |              142.838 |             889.15 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |     87 |          17.4688 | 34800 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4306\n",
-      "    time_step_mean: 3611.208695652174\n",
-      "    time_step_min: 3227\n",
-      "  date: 2020-10-13_12-04-22\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-54-16\n",
       "  done: false\n",
-      "  episode_len_mean: 890.0521739130435\n",
-      "  episode_reward_max: 277.08080808080746\n",
-      "  episode_reward_mean: 220.13350900307398\n",
-      "  episode_reward_min: 113.59595959595946\n",
-      "  episodes_this_iter: 115\n",
-      "  episodes_total: 6129\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 5498400\n",
-      "  iterations_since_restore: 174\n",
+      "    num_steps_sampled: 46400\n",
+      "  iterations_since_restore: 116\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
       "  perf:\n",
-      "    cpu_util_percent: 75.0\n",
+      "    cpu_util_percent: 4.3\n",
       "    gpu_util_percent0: 0.0\n",
       "    gpu_util_percent1: 0.0\n",
       "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
+      "    ram_util_percent: 2.9\n",
       "    vram_util_percent0: 0.0\n",
       "    vram_util_percent1: 0.0\n",
       "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11838534249041163\n",
-      "    mean_env_wait_ms: 0.9965345407108273\n",
-      "    mean_inference_ms: 0.342221549733306\n",
-      "    mean_raw_obs_processing_ms: 0.20800824491048503\n",
-      "  time_since_restore: 93.90710353851318\n",
-      "  time_this_iter_s: 0.5214099884033203\n",
-      "  time_total_s: 93.90710353851318\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 22.175960779190063\n",
+      "  time_this_iter_s: 0.1871342658996582\n",
+      "  time_total_s: 22.175960779190063\n",
       "  timers: {}\n",
-      "  timestamp: 1602590662\n",
+      "  timestamp: 1602701656\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 5498400\n",
-      "  training_iteration: 174\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 46400\n",
+      "  training_iteration: 116\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.0/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    174 |          93.9071 | 5498400 |  220.134 |              277.081 |              113.596 |            890.052 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |    116 |           22.176 | 46400 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
       "\n",
       "\n",
-      "Result for RandomMasked_jss_env_fed9e_00000:\n",
-      "  custom_metrics:\n",
-      "    time_step_max: 4007\n",
-      "    time_step_mean: 3628.41\n",
-      "    time_step_min: 3278\n",
-      "  date: 2020-10-13_12-04-27\n",
+      "Result for RandomMasked_jss_env_99699_00000:\n",
+      "  custom_metrics: {}\n",
+      "  date: 2020-10-14_18-54-21\n",
       "  done: false\n",
-      "  episode_len_mean: 892.54\n",
-      "  episode_reward_max: 269.35353535353573\n",
-      "  episode_reward_mean: 218.41868686868665\n",
-      "  episode_reward_min: 158.89898989898927\n",
-      "  episodes_this_iter: 24\n",
-      "  episodes_total: 6478\n",
-      "  experiment_id: 33ffffa4bf5e40fb9965429358697a14\n",
+      "  episode_len_mean: .nan\n",
+      "  episode_reward_max: .nan\n",
+      "  episode_reward_mean: .nan\n",
+      "  episode_reward_min: .nan\n",
+      "  episodes_this_iter: 0\n",
+      "  episodes_total: 0\n",
+      "  experiment_id: 00d9f426bb89434f8ae7ff271eb43732\n",
       "  experiment_tag: '0'\n",
       "  hostname: f85e62b52919\n",
       "  info:\n",
-      "    num_steps_sampled: 5814400\n",
-      "  iterations_since_restore: 184\n",
+      "    num_steps_sampled: 58000\n",
+      "  iterations_since_restore: 145\n",
       "  node_ip: 172.17.0.4\n",
       "  num_healthy_workers: 79\n",
       "  off_policy_estimator: {}\n",
-      "  perf:\n",
-      "    cpu_util_percent: 78.7\n",
-      "    gpu_util_percent0: 0.0\n",
-      "    gpu_util_percent1: 0.0\n",
-      "    gpu_util_percent2: 0.0\n",
-      "    ram_util_percent: 4.5\n",
-      "    vram_util_percent0: 0.0\n",
-      "    vram_util_percent1: 0.0\n",
-      "    vram_util_percent2: 0.0\n",
-      "  pid: 45729\n",
+      "  perf: {}\n",
+      "  pid: 28631\n",
       "  policy_reward_max: {}\n",
       "  policy_reward_mean: {}\n",
       "  policy_reward_min: {}\n",
-      "  sampler_perf:\n",
-      "    mean_action_processing_ms: 0.11810777381372156\n",
-      "    mean_env_wait_ms: 0.993845886598609\n",
-      "    mean_inference_ms: 0.3413515809403675\n",
-      "    mean_raw_obs_processing_ms: 0.20749925424729482\n",
-      "  time_since_restore: 98.84467649459839\n",
-      "  time_this_iter_s: 0.5232670307159424\n",
-      "  time_total_s: 98.84467649459839\n",
+      "  sampler_perf: {}\n",
+      "  time_since_restore: 26.801780700683594\n",
+      "  time_this_iter_s: 0.15772652626037598\n",
+      "  time_total_s: 26.801780700683594\n",
       "  timers: {}\n",
-      "  timestamp: 1602590667\n",
+      "  timestamp: 1602701661\n",
       "  timesteps_since_restore: 0\n",
-      "  timesteps_total: 5814400\n",
-      "  training_iteration: 184\n",
-      "  trial_id: fed9e_00000\n",
+      "  timesteps_total: 58000\n",
+      "  training_iteration: 145\n",
+      "  trial_id: '99699_00000'\n",
       "  \n",
       "== Status ==\n",
-      "Memory usage on this node: 34.3/754.6 GiB\n",
+      "Memory usage on this node: 22.1/754.6 GiB\n",
       "Using FIFO scheduling algorithm.\n",
-      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/545.17 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
+      "Resources requested: 80/80 CPUs, 0/3 GPUs, 0.0/557.08 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)\n",
       "Result logdir: /root/ray_results/ppo-jss\n",
       "Number of trials: 1 (1 RUNNING)\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
-      "| Trial name                       | status   | loc              |   iter |   total time (s) |      ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
-      "|----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------|\n",
-      "| RandomMasked_jss_env_fed9e_00000 | RUNNING  | 172.17.0.4:45729 |    184 |          98.8447 | 5814400 |  218.419 |              269.354 |              158.899 |             892.54 |\n",
-      "+----------------------------------+----------+------------------+--------+------------------+---------+----------+----------------------+----------------------+--------------------+\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "| Trial name                       | status   | loc              |   iter |   total time (s) |    ts |   reward |   episode_reward_max |   episode_reward_min |   episode_len_mean |\n",
+      "|----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------|\n",
+      "| RandomMasked_jss_env_99699_00000 | RUNNING  | 172.17.0.4:28631 |    145 |          26.8018 | 58000 |      nan |                  nan |                  nan |                nan |\n",
+      "+----------------------------------+----------+------------------+--------+------------------+-------+----------+----------------------+----------------------+--------------------+\n",
+      "\n",
       "\n",
-      "\n"
+      "2020-10-14 18:54:21,879\tERROR worker.py:1018 -- Possible unhandled error from worker: \u001b[36mray::RolloutWorker.par_iter_next_batch()\u001b[39m (pid=28512, ip=172.17.0.4)\n",
+      "  File \"python/ray/_raylet.pyx\", line 484, in ray._raylet.execute_task\n",
+      "  File \"python/ray/_raylet.pyx\", line 438, in ray._raylet.execute_task.function_executor\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1158, in par_iter_next_batch\n",
+      "    batch.append(self.par_iter_next())\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py\", line 1152, in par_iter_next\n",
+      "    return next(self.local_it)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 288, in gen_rollouts\n",
+      "    yield self.sample()\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py\", line 579, in sample\n",
+      "    batches = [self.input_reader.next()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 93, in next\n",
+      "    batches = [self.get_data()]\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 209, in get_data\n",
+      "    item = next(self.rollout_provider)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 585, in _env_runner\n",
+      "    active_envs, to_eval, outputs = _process_observations(\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py\", line 797, in _process_observations\n",
+      "    prep_obs: EnvObsType = _get_or_raise(preprocessors,\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 233, in transform\n",
+      "    self.check_shape(observation)\n",
+      "  File \"/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py\", line 61, in check_shape\n",
+      "    raise ValueError(\n",
+      "ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 3.67179487e-01,\n",
+      "       1.31313131e-01, 1.84615385e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 5.87692308e-01, 2.42424242e-01,\n",
+      "       1.16923077e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.66666667e-01, 8.18461538e-01, 1.71717172e-01, 1.84615385e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.56565657e-01, 6.66666667e-01,\n",
+      "       6.98461538e-01, 1.01010101e-02, 9.23076923e-04, 0.00000000e+00,\n",
+      "       1.00000000e+00, 0.00000000e+00, 6.66666667e-01, 4.84102564e-01,\n",
+      "       4.44444444e-01, 1.74358974e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       7.17171717e-01, 6.66666667e-01, 2.94358974e-01, 0.00000000e+00,\n",
+      "       1.02564103e-04, 0.00000000e+00, 0.00000000e+00, 4.04040404e-01,\n",
+      "       6.66666667e-01, 5.13846154e-01, 7.77777778e-01, 1.57948718e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 2.00000000e-01,\n",
+      "       1.30256410e-01, 5.35353535e-01, 7.20000000e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,\n",
+      "       4.54545455e-01, 1.09333333e-02, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 8.00000000e-01, 6.25641026e-01, 5.45454545e-01,\n",
+      "       8.20512821e-05, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.66666667e-01, 2.42051282e-01, 1.61616162e-01, 1.25128205e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       3.11794872e-01, 4.04040404e-02, 1.16923077e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.99487179e-01,\n",
+      "       6.56565657e-01, 8.61538462e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 5.33333333e-01, 3.83589744e-01, 2.22222222e-01,\n",
+      "       5.33333333e-04, 0.00000000e+00, 0.00000000e+00, 2.32323232e-01,\n",
+      "       6.00000000e-01, 4.54358974e-01, 3.13131313e-01, 7.58974359e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,\n",
+      "       3.66153846e-01, 7.87878788e-01, 5.29230769e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 6.55384615e-01,\n",
+      "       0.00000000e+00, 2.66666667e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.08080808e-02, 8.00000000e-01, 6.92307692e-01, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 3.06666667e-01, 6.46464646e-01, 3.28205128e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       6.07179487e-01, 3.33333333e-01, 6.15384615e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.44102564e-01,\n",
+      "       9.09090909e-02, 1.57948718e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       8.08080808e-02, 6.66666667e-02, 8.00000000e-02, 7.07070707e-01,\n",
+      "       8.82051282e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 5.00512821e-01, 4.14141414e-01, 6.76923077e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,\n",
+      "       3.95897436e-01, 1.51515152e-01, 8.41025641e-04, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 6.40000000e-01,\n",
+      "       7.17171717e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.05050505e-02, 6.66666667e-01, 6.82051282e-01, 5.05050505e-02,\n",
+      "       2.25641026e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 5.04615385e-01, 3.03030303e-02, 9.84615385e-04,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.41538462e-01, 9.79797980e-01, 5.68205128e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.33333333e-01, 2.86153846e-01,\n",
+      "       2.72727273e-01, 9.23076923e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
+      "       1.39487179e-03, 0.00000000e+00, 0.00000000e+00, 5.35353535e-01,\n",
+      "       8.66666667e-01, 5.94871795e-01, 5.45454545e-01, 3.63076923e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.68205128e-01, 6.66666667e-01, 3.69230769e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 2.66666667e-01, 2.67692308e-01,\n",
+      "       7.47474747e-01, 5.21025641e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.00000000e-01, 3.65128205e-01, 1.51515152e-01,\n",
+      "       7.69230769e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.66666667e-01, 4.74871795e-01, 1.21212121e-01, 2.95384615e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,\n",
+      "       8.50256410e-01, 5.35353535e-01, 4.77948718e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 6.10256410e-01,\n",
+      "       5.45454545e-01, 6.35897436e-04, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 6.66666667e-01, 6.31794872e-01, 7.07070707e-01,\n",
+      "       7.15897436e-03, 0.00000000e+00, 0.00000000e+00, 5.05050505e-01,\n",
+      "       6.00000000e-01, 6.04102564e-01, 4.04040404e-01, 1.09128205e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 3.03030303e-02, 7.33333333e-01,\n",
+      "       5.03589744e-01, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 1.11111111e-01, 7.33333333e-01, 5.93846154e-01,\n",
+      "       5.55555556e-01, 2.15384615e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 4.66666667e-01, 4.54358974e-01, 4.94949495e-01,\n",
+      "       4.26666667e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       6.00000000e-01, 3.81538462e-01, 1.71717172e-01, 3.26153846e-03,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,\n",
+      "       5.88717949e-01, 1.71717172e-01, 6.07179487e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 5.88717949e-01,\n",
+      "       2.92929293e-01, 5.76410256e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       4.84848485e-01, 4.66666667e-01, 3.88717949e-01, 6.36363636e-01,\n",
+      "       1.29230769e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
+      "       5.33333333e-01, 5.16923077e-01, 6.06060606e-02, 1.61230769e-02,\n",
+      "       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,\n",
+      "       5.47692308e-01, 6.16161616e-01, 4.94358974e-03, 0.00000000e+00,\n",
+      "       0.00000000e+00, 0.00000000e+00, 4.00000000e-01, 3.78461538e-01,\n",
+      "       2.52525253e-01, 8.82051282e-03, 0.00000000e+00, 0.00000000e+00,\n",
+      "       0.00000000e+00, 5.33333333e-01, 2.82051282e-01, 6.06060606e-01,\n",
+      "       4.43076923e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False,  True, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False, False, False, False, False,\n",
+      "       False, False, False, False, False,  True])})\n"
      ]
     }
    ],
    "source": [
-    "!wandb agent y6web2p5"
+    "!wandb agent lh9x5rb9"
    ]
   },
   {
diff --git a/JSS/RandomRLLib.py b/JSS/RandomRLLib.py
index 300c443..20df2cd 100644
--- a/JSS/RandomRLLib.py
+++ b/JSS/RandomRLLib.py
@@ -50,7 +50,7 @@ class RandomLegalPolicy(Policy):
 
 def execution_plan(workers: WorkerSet,
                    config: TrainerConfigDict) -> LocalIterator[dict]:
-    rollouts = ParallelRollouts(workers, mode="bulk_sync")
+    rollouts = ParallelRollouts(workers, mode="async")
 
     # Collect batches for the trainable policies.
     rollouts = rollouts.for_each(
diff --git a/JSS/Untitled.ipynb b/JSS/Untitled.ipynb
deleted file mode 100644
index 3ab2231..0000000
--- a/JSS/Untitled.ipynb
+++ /dev/null
@@ -1,195 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 7,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "I have detected 80 CPUs here, so I'm going to create 79 actors\n"
-     ]
-    }
-   ],
-   "source": [
-    "import os\n",
-    "import multiprocessing as mp\n",
-    "import plotly.io as pio\n",
-    "import ray\n",
-    "from ray import tune\n",
-    "\n",
-    "from JSS.CustomCallbacks import CustomCallbacks\n",
-    "from JSS.env.JSS import JSS\n",
-    "from ray.rllib.agents.ppo import ppo, PPOTrainer\n",
-    "\n",
-    "from ray.tune.logger import DEFAULT_LOGGERS\n",
-    "from ray.tune.integration.wandb import WandbLogger\n",
-    "\n",
-    "from JSS.env_wrapper import BestActionsWrapper\n",
-    "\n",
-    "from JSS.models import FCMaskedActionsModel\n",
-    "\n",
-    "pio.orca.config.use_xvfb = True\n",
-    "import wandb\n",
-    "\n",
-    "'''\n",
-    "            'lr': {\n",
-    "                'values': [5e-5, 1e-5]\n",
-    "            },\n",
-    "            'lambda': {\n",
-    "                'values': [0.90, 0.95, 1.0]\n",
-    "            },\n",
-    "            'clip_param': {\n",
-    "                'values': [0.2, 0.3, 0.4]\n",
-    "            },\n",
-    "            'num_sgd_iter': {\n",
-    "                'values': [30, 35, 40]\n",
-    "            },\n",
-    "            'entropy_coeff': {\n",
-    "                'values': [0.0, 1e-4]\n",
-    "            }\n",
-    "'''\n",
-    "\n",
-    "if __name__ == \"__main__\":\n",
-    "    print(\"I have detected {} CPUs here, so I'm going to create {} actors\".format(mp.cpu_count(), mp.cpu_count() - 1))\n",
-    "    os.environ[\"WANDB_API_KEY\"] = '3487a01956bf67cc7882bca2a38f70c8c95f8463'\n",
-    "    sweep_config = {\n",
-    "        'program': 'RandomGreedy.py',\n",
-    "        'method': 'grid',\n",
-    "        'metric': {\n",
-    "            'name': 'time_step_min',\n",
-    "            'goal': 'minimize',\n",
-    "        },\n",
-    "        'parameters': {\n",
-    "            'instance_path': {\n",
-    "                'values': ['/JSS/JSS/env/instances/ta51', '/JSS/JSS/env/instances/ta52', '/JSS/JSS/env/instances/ta53', '/JSS/JSS/env/instances/ta54',\n",
-    "                           '/JSS/JSS/env/instances/ta55', '/JSS/JSS/env/instances/ta56', '/JSS/JSS/env/instances/ta57', '/JSS/JSS/env/instances/ta58',\n",
-    "                           '/JSS/JSS/env/instances/ta59', '/JSS/JSS/env/instances/ta60']\n",
-    "            }\n",
-    "        }\n",
-    "    }"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 8,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Create sweep with ID: 1x8v92mc\n",
-      "Sweep URL: https://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\n"
-     ]
-    }
-   ],
-   "source": [
-    "sweep_id = wandb.sweep(sweep_config, project=\"RLLIB_SWEEP_2\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 9,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Starting wandb agent üïµÔ∏è\n",
-      "2020-10-13 11:45:51,946 - wandb.wandb_agent - INFO - Running runs: []\n",
-      "2020-10-13 11:45:52,259 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 11:45:52,260 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta51\n",
-      "2020-10-13 11:45:52,261 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python RandomGreedy.py --instance_path=/JSS/JSS/env/instances/ta51\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mrandom\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3qwfavbb\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_114553-3qwfavbb\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "2020-10-13 11:45:57,278 - wandb.wandb_agent - INFO - Running runs: ['3qwfavbb']\n",
-      "\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Waiting for W&B process to finish, PID 39394\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Program ended successfully.\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find user logs for this run at: wandb/run-20201013_114553-3qwfavbb/logs/debug.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Find internal logs for this run at: wandb/run-20201013_114553-3qwfavbb/logs/debug-internal.log\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes 4473\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result 261.82891\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode 280.71717\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     time_step_min 3203\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step 0\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime 607\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp 1602590160\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:       nb_episodes ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:   avg_best_result ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:      best_episode ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:     time_step_min ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:             _step ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:          _runtime ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:        _timestamp ‚ñÅ\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced \u001b[33mrandom\u001b[0m: \u001b[34mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/3qwfavbb\u001b[0m\n",
-      "2020-10-13 11:56:07,517 - wandb.wandb_agent - INFO - Cleaning up finished run: 3qwfavbb\n",
-      "2020-10-13 11:56:07,847 - wandb.wandb_agent - INFO - Agent received command: run\n",
-      "2020-10-13 11:56:07,847 - wandb.wandb_agent - INFO - Agent starting run with config:\n",
-      "\tinstance_path: /JSS/JSS/env/instances/ta52\n",
-      "2020-10-13 11:56:07,849 - wandb.wandb_agent - INFO - About to run command: /usr/bin/env python RandomGreedy.py --instance_path=/JSS/JSS/env/instances/ta52\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mingambe\u001b[0m (use `wandb login --relogin` to force relogin)\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.10.5\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33mrandom\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: ‚≠êÔ∏è View project at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üßπ View sweep at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/sweeps/1x8v92mc\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: üöÄ View run at \u001b[34m\u001b[4mhttps://wandb.ai/ingambe/RLLIB_SWEEP_2/runs/av30c7rd\u001b[0m\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in wandb/run-20201013_115608-av30c7rd\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Run `wandb off` to turn off syncing.\n",
-      "\n",
-      "2020-10-13 11:56:12,862 - wandb.wandb_agent - INFO - Running runs: ['av30c7rd']\n"
-     ]
-    }
-   ],
-   "source": [
-    "!wandb agent 1x8v92mc"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.8.3"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 4
-}
diff --git a/JSS/__pycache__/RandomRLLib.cpython-38.pyc b/JSS/__pycache__/RandomRLLib.cpython-38.pyc
index 8d44d02..ec005fa 100644
Binary files a/JSS/__pycache__/RandomRLLib.cpython-38.pyc and b/JSS/__pycache__/RandomRLLib.cpython-38.pyc differ
diff --git a/JSS/__pycache__/default_config.cpython-38.pyc b/JSS/__pycache__/default_config.cpython-38.pyc
index 2088d08..14e0018 100644
Binary files a/JSS/__pycache__/default_config.cpython-38.pyc and b/JSS/__pycache__/default_config.cpython-38.pyc differ
diff --git a/JSS/default_config.py b/JSS/default_config.py
index 0a91a3d..46f4d10 100644
--- a/JSS/default_config.py
+++ b/JSS/default_config.py
@@ -6,7 +6,7 @@ default_config = {
     'env': 'jss_env',
     'seed': 0,
     'framework': 'torch',
-    'log_level': 'WARN',
+    'log_level': 'INFO',
     'num_gpus': 1,
     'instance_path': '/JSS/JSS/env/instances/ta51',
     'num_envs_per_worker': 2,
@@ -18,7 +18,7 @@ default_config = {
     'layer_size': 1024,
     'layer_nb': 2,
     'lr': 5e-5,
-    'clip_param': 0.5,
+    'clip_param': 0.3,
     'vf_clip_param': 10.0,
     'kl_target': 0.01,
     'num_sgd_iter': 25,
diff --git a/JSS/env/__pycache__/JSS.cpython-38.pyc b/JSS/env/__pycache__/JSS.cpython-38.pyc
index 5098d7f..b190093 100644
Binary files a/JSS/env/__pycache__/JSS.cpython-38.pyc and b/JSS/env/__pycache__/JSS.cpython-38.pyc differ
diff --git a/JSS/random_loop.py b/JSS/random_loop.py
index aa1b333..2d05ff1 100644
--- a/JSS/random_loop.py
+++ b/JSS/random_loop.py
@@ -33,9 +33,10 @@ def rand_func():
     wandb.init(config={})
     config = with_common_config(wandb.config)
 
+    config['evaluation_num_episodes'] = 10
     config['num_workers'] = mp.cpu_count() - 1
-    config['num_envs_per_worker'] = 3
-    config['metrics_smoothing_episodes'] = 9e10
+    config['num_envs_per_worker'] = 2
+    config['metrics_smoothing_episodes'] = 999999999
     config['observation_filter'] = 'NoFilter'
     config['env'] = default_config['env']
     config['env_config'] = {
diff --git a/JSS/train.py b/JSS/train.py
index 010c6c9..d4ac941 100644
--- a/JSS/train.py
+++ b/JSS/train.py
@@ -50,7 +50,7 @@ def train_func():
     ray.init()
 
     stop = {
-        "time_total_s": 600,
+        "time_total_s": 60 * 60,
     }
 
     analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
