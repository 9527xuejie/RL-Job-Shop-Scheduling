2020-11-05 11:01:33,160	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_44a89_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=17410)[0m 2020-11-05 11:01:35,942	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=17368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17368)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17368)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17368)[0m *** SIGSEGV (@0x0) received by PID 17368 (TID 0x7f15e8b8a700) from PID 0; stack trace: ***
[2m[36m(pid=17368)[0m     @     0x7f15e8763390 (unknown)
[2m[36m(pid=17368)[0m     @     0x7ee6ea86bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17368)[0m     @     0x7ee6e7b5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17352)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17352)[0m *** SIGSEGV (@0x0) received by PID 17352 (TID 0x7f82f0068700) from PID 0; stack trace: ***
[2m[36m(pid=17352)[0m     @     0x7f82efc41390 (unknown)
[2m[36m(pid=17352)[0m     @     0x7f53f1d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17352)[0m     @     0x7f53ef06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17399)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17399)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17399)[0m *** SIGSEGV (@0x0) received by PID 17399 (TID 0x7f1b020b4700) from PID 0; stack trace: ***
[2m[36m(pid=17399)[0m     @     0x7f1b01c8d390 (unknown)
[2m[36m(pid=17399)[0m     @     0x7eec03e88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17399)[0m     @     0x7eec0117c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17414)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17414)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17414)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17414)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17414)[0m *** SIGSEGV (@0x0) received by PID 17414 (TID 0x7f3c0ffbf700) from PID 0; stack trace: ***
[2m[36m(pid=17414)[0m     @     0x7f3c0fb98390 (unknown)
[2m[36m(pid=17363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17363)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17363)[0m *** SIGSEGV (@0x0) received by PID 17363 (TID 0x7f5a13e3d700) from PID 0; stack trace: ***
[2m[36m(pid=17363)[0m     @     0x7f5a13a16390 (unknown)
[2m[36m(pid=17363)[0m     @     0x7f2b14e9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17363)[0m     @     0x7f2b1219264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17363)[0m     @     0x7f2b12195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17358)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17358)[0m *** SIGSEGV (@0x0) received by PID 17358 (TID 0x7eff73990700) from PID 0; stack trace: ***
[2m[36m(pid=17358)[0m     @     0x7eff73569390 (unknown)
[2m[36m(pid=17389)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17389)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17389)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17389)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17389)[0m *** SIGSEGV (@0x0) received by PID 17389 (TID 0x7fa6d3374700) from PID 0; stack trace: ***
[2m[36m(pid=17389)[0m     @     0x7fa6d2f4d390 (unknown)
[2m[36m(pid=17389)[0m     @     0x7f77d514afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17389)[0m     @     0x7f77d243e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17387)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17387)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17387)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17387)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17387)[0m *** SIGSEGV (@0x0) received by PID 17387 (TID 0x7f3399be2700) from PID 0; stack trace: ***
[2m[36m(pid=17387)[0m     @     0x7f33997bb390 (unknown)
[2m[36m(pid=17387)[0m     @     0x7f049b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17387)[0m     @     0x7f0498c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17416)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17416)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17416)[0m *** SIGSEGV (@0x0) received by PID 17416 (TID 0x7f7d72852700) from PID 0; stack trace: ***
[2m[36m(pid=17416)[0m     @     0x7f7d7242b390 (unknown)
[2m[36m(pid=17416)[0m     @     0x7f4e745c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17416)[0m     @     0x7f4e718b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17365)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17365)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17365)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17365)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17365)[0m *** SIGSEGV (@0x0) received by PID 17365 (TID 0x7f4c014b9700) from PID 0; stack trace: ***
[2m[36m(pid=17365)[0m     @     0x7f4c01092390 (unknown)
[2m[36m(pid=17365)[0m     @     0x7f1d0329afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17365)[0m     @     0x7f1d0058e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17379)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17379)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17379)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17379)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17379)[0m *** SIGSEGV (@0x0) received by PID 17379 (TID 0x7f4054751700) from PID 0; stack trace: ***
[2m[36m(pid=17379)[0m     @     0x7f405432a390 (unknown)
[2m[36m(pid=17379)[0m     @     0x7f1156507fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17379)[0m     @     0x7f11537fb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17421)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17421)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17421)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17421)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17421)[0m *** SIGSEGV (@0x0) received by PID 17421 (TID 0x7fa107a21700) from PID 0; stack trace: ***
[2m[36m(pid=17421)[0m     @     0x7fa1075fa390 (unknown)
[2m[36m(pid=17421)[0m     @     0x7f72097f9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17421)[0m     @     0x7f7206aed64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17381)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17381)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17381)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17381)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17381)[0m *** SIGSEGV (@0x0) received by PID 17381 (TID 0x7fc015947700) from PID 0; stack trace: ***
[2m[36m(pid=17381)[0m     @     0x7fc015520390 (unknown)
[2m[36m(pid=17381)[0m     @     0x7f911775afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17381)[0m     @     0x7f9114a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17374)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17374)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17374)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17374)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17374)[0m *** SIGSEGV (@0x0) received by PID 17374 (TID 0x7f65edd29700) from PID 0; stack trace: ***
[2m[36m(pid=17374)[0m     @     0x7f65ed902390 (unknown)
[2m[36m(pid=17374)[0m     @     0x7f36efa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17374)[0m     @     0x7f36ecd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17367)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17367)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17367)[0m *** SIGSEGV (@0x0) received by PID 17367 (TID 0x7f22f4571700) from PID 0; stack trace: ***
[2m[36m(pid=17367)[0m     @     0x7f22f414a390 (unknown)
[2m[36m(pid=17367)[0m     @     0x7ef3f612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17367)[0m     @     0x7ef3f342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17342)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17342)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17342)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17342)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17342)[0m *** SIGSEGV (@0x0) received by PID 17342 (TID 0x7fdb90f52700) from PID 0; stack trace: ***
[2m[36m(pid=17342)[0m     @     0x7fdb90b2b390 (unknown)
[2m[36m(pid=17342)[0m     @     0x7fac92c5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17372)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17372)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17372)[0m *** SIGSEGV (@0x0) received by PID 17372 (TID 0x7fcdc2c2e700) from PID 0; stack trace: ***
[2m[36m(pid=17372)[0m     @     0x7fcdc2807390 (unknown)
[2m[36m(pid=17397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17397)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17397)[0m *** SIGSEGV (@0x0) received by PID 17397 (TID 0x7f7c754c0700) from PID 0; stack trace: ***
[2m[36m(pid=17397)[0m     @     0x7f7c75099390 (unknown)
[2m[36m(pid=17397)[0m     @     0x7f4d772a8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17397)[0m     @     0x7f4d7459c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17397)[0m     @     0x7f4d7459f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17397)[0m     @     0x7f4d7459fb53 at::TensorIterator::for_each()
[2m[36m(pid=17385)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17385)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17385)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17385)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17385)[0m *** SIGSEGV (@0x0) received by PID 17385 (TID 0x7ff84846b700) from PID 0; stack trace: ***
[2m[36m(pid=17385)[0m     @     0x7ff848044390 (unknown)
[2m[36m(pid=17385)[0m     @     0x7fc94a082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17385)[0m     @     0x7fc94737664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17385)[0m     @     0x7fc947379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17322)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17322)[0m *** SIGSEGV (@0x0) received by PID 17322 (TID 0x7fb367c7b700) from PID 0; stack trace: ***
[2m[36m(pid=17322)[0m     @     0x7fb367854390 (unknown)
[2m[36m(pid=17322)[0m     @     0x7f8469a72fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17322)[0m     @     0x7f8466d6664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17322)[0m     @     0x7f8466d69977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17426)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17426)[0m *** SIGSEGV (@0x0) received by PID 17426 (TID 0x7f290eeb7700) from PID 0; stack trace: ***
[2m[36m(pid=17426)[0m     @     0x7f290ea90390 (unknown)
[2m[36m(pid=17426)[0m     @     0x7efa10cb6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17426)[0m     @     0x7efa0dfaa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17426)[0m     @     0x7efa0dfad977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17426)[0m     @     0x7efa0dfadb53 at::TensorIterator::for_each()
[2m[36m(pid=17411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17411)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17411)[0m *** SIGSEGV (@0x0) received by PID 17411 (TID 0x7fbbea035700) from PID 0; stack trace: ***
[2m[36m(pid=17411)[0m     @     0x7fbbe9c0e390 (unknown)
[2m[36m(pid=17411)[0m     @     0x7f8cebe16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17411)[0m     @     0x7f8ce910a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17411)[0m     @     0x7f8ce910d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17411)[0m     @     0x7f8ce910db53 at::TensorIterator::for_each()
[2m[36m(pid=17411)[0m     @     0x7f8ce910de11 at::TensorIterator::for_each()
[2m[36m(pid=17429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17429)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17429)[0m *** SIGSEGV (@0x0) received by PID 17429 (TID 0x7fe057997700) from PID 0; stack trace: ***
[2m[36m(pid=17429)[0m     @     0x7fe057570390 (unknown)
[2m[36m(pid=17429)[0m     @     0x7fb1596b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17429)[0m     @     0x7fb1569a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17429)[0m     @     0x7fb1569a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17429)[0m     @     0x7fb1569a8b53 at::TensorIterator::for_each()
[2m[36m(pid=17400)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17400)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17400)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17400)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17400)[0m *** SIGSEGV (@0x0) received by PID 17400 (TID 0x7f1272a4d700) from PID 0; stack trace: ***
[2m[36m(pid=17400)[0m     @     0x7f1272626390 (unknown)
[2m[36m(pid=17400)[0m     @     0x7ee3745dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17400)[0m     @     0x7ee3718d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17400)[0m     @     0x7ee3718d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17400)[0m     @     0x7ee3718d3b53 at::TensorIterator::for_each()
[2m[36m(pid=17400)[0m     @     0x7ee3718d3e11 at::TensorIterator::for_each()
[2m[36m(pid=17400)[0m     @     0x7ee3745ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17368)[0m     @     0x7ee6e7b62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17368)[0m     @     0x7ee6e7b62b53 at::TensorIterator::for_each()
[2m[36m(pid=17352)[0m     @     0x7f53ef063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17352)[0m     @     0x7f53ef063b53 at::TensorIterator::for_each()
[2m[36m(pid=17399)[0m     @     0x7eec0117f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17399)[0m     @     0x7eec0117fb53 at::TensorIterator::for_each()
[2m[36m(pid=17414)[0m     @     0x7f0d11c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17414)[0m     @     0x7f0d0ef3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17363)[0m     @     0x7f2b12195b53 at::TensorIterator::for_each()
[2m[36m(pid=17358)[0m     @     0x7ed07579dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17358)[0m     @     0x7ed072a9164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17389)[0m     @     0x7f77d2441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17389)[0m     @     0x7f77d2441b53 at::TensorIterator::for_each()
[2m[36m(pid=17387)[0m     @     0x7f0498c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17387)[0m     @     0x7f0498c62b53 at::TensorIterator::for_each()
[2m[36m(pid=17416)[0m     @     0x7f4e718b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17365)[0m     @     0x7f1d00591977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17365)[0m     @     0x7f1d00591b53 at::TensorIterator::for_each()
[2m[36m(pid=17379)[0m     @     0x7f11537fe977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17379)[0m     @     0x7f11537feb53 at::TensorIterator::for_each()
[2m[36m(pid=17421)[0m     @     0x7f7206af0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17381)[0m     @     0x7f9114a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17374)[0m     @     0x7f36ecd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17374)[0m     @     0x7f36ecd67b53 at::TensorIterator::for_each()
[2m[36m(pid=17367)[0m     @     0x7ef3f3424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17367)[0m     @     0x7ef3f3424b53 at::TensorIterator::for_each()
[2m[36m(pid=17342)[0m     @     0x7fac8ff5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17342)[0m     @     0x7fac8ff56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17372)[0m     @     0x7f9ec4a05fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17372)[0m     @     0x7f9ec1cf964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17397)[0m     @     0x7f4d7459fe11 at::TensorIterator::for_each()
[2m[36m(pid=17397)[0m     @     0x7f4d772b8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17397)[0m     @     0x7f4d772dbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17385)[0m     @     0x7fc947379b53 at::TensorIterator::for_each()
[2m[36m(pid=17385)[0m     @     0x7fc947379e11 at::TensorIterator::for_each()
[2m[36m(pid=17297)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17297)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17297)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17322)[0m     @     0x7f8466d69b53 at::TensorIterator::for_each()
[2m[36m(pid=17322)[0m     @     0x7f8466d69e11 at::TensorIterator::for_each()
[2m[36m(pid=17292)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17292)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17310)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17306)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17306)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17306)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17305)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17305)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17305)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17426)[0m     @     0x7efa0dfade11 at::TensorIterator::for_each()
[2m[36m(pid=17426)[0m     @     0x7efa10cc6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17426)[0m     @     0x7efa10ce9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17426)[0m     @     0x7efa0dd27009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17426)[0m     @     0x7efa0dd25c3f at::native::copy_impl()
[2m[36m(pid=17411)[0m     @     0x7f8cebe26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17411)[0m     @     0x7f8cebe49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17411)[0m     @     0x7f8ce8e87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17411)[0m     @     0x7f8ce8e85c3f at::native::copy_impl()
[2m[36m(pid=17411)[0m     @     0x7f8ce8e86ed4 at::native::copy_()
[2m[36m(pid=17429)[0m     @     0x7fb1569a8e11 at::TensorIterator::for_each()
[2m[36m(pid=17429)[0m     @     0x7fb1596c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17429)[0m     @     0x7fb1596e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17429)[0m     @     0x7fb156722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17429)[0m     @     0x7fb156720c3f at::native::copy_impl()
[2m[36m(pid=17429)[0m     @     0x7fb156721ed4 at::native::copy_()
[2m[36m(pid=17400)[0m     @     0x7ee37460fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17400)[0m     @     0x7ee37164d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17400)[0m     @     0x7ee37164bc3f at::native::copy_impl()
[2m[36m(pid=17400)[0m     @     0x7ee37164ced4 at::native::copy_()
[2m[36m(pid=17400)[0m     @     0x7ee371d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17303)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17303)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17303)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17356)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17356)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17356)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17356)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17356)[0m *** SIGSEGV (@0x0) received by PID 17356 (TID 0x7f0487805700) from PID 0; stack trace: ***
[2m[36m(pid=17288)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17288)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17288)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17288)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17288)[0m *** SIGSEGV (@0x0) received by PID 17288 (TID 0x7f3b566c0700) from PID 0; stack trace: ***
[2m[36m(pid=17302)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17302)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17302)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17368)[0m     @     0x7ee6e7b62e11 at::TensorIterator::for_each()
[2m[36m(pid=17368)[0m     @     0x7ee6ea87bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17368)[0m     @     0x7ee6ea89ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17368)[0m     @     0x7ee6e78dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17368)[0m     @     0x7ee6e78dac3f at::native::copy_impl()
[2m[36m(pid=17368)[0m     @     0x7ee6e78dbed4 at::native::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53ef063e11 at::TensorIterator::for_each()
[2m[36m(pid=17352)[0m     @     0x7f53f1d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17352)[0m     @     0x7f53f1d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17352)[0m     @     0x7f53eeddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17352)[0m     @     0x7f53eeddbc3f at::native::copy_impl()
[2m[36m(pid=17399)[0m     @     0x7eec0117fe11 at::TensorIterator::for_each()
[2m[36m(pid=17399)[0m     @     0x7eec03e98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17399)[0m     @     0x7eec03ebbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17399)[0m     @     0x7eec00ef9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17399)[0m     @     0x7eec00ef7c3f at::native::copy_impl()
[2m[36m(pid=17414)[0m     @     0x7f0d0ef33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17414)[0m     @     0x7f0d0ef33b53 at::TensorIterator::for_each()
[2m[36m(pid=17414)[0m     @     0x7f0d0ef33e11 at::TensorIterator::for_each()
[2m[36m(pid=17363)[0m     @     0x7f2b12195e11 at::TensorIterator::for_each()
[2m[36m(pid=17363)[0m     @     0x7f2b14eaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17363)[0m     @     0x7f2b14ed1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17363)[0m     @     0x7f2b11f0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17363)[0m     @     0x7f2b11f0dc3f at::native::copy_impl()
[2m[36m(pid=17363)[0m     @     0x7f2b11f0eed4 at::native::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed072a94977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17358)[0m     @     0x7ed072a94b53 at::TensorIterator::for_each()
[2m[36m(pid=17358)[0m     @     0x7ed072a94e11 at::TensorIterator::for_each()
[2m[36m(pid=17389)[0m     @     0x7f77d2441e11 at::TensorIterator::for_each()
[2m[36m(pid=17389)[0m     @     0x7f77d515ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17389)[0m     @     0x7f77d517dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17389)[0m     @     0x7f77d21bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17389)[0m     @     0x7f77d21b9c3f at::native::copy_impl()
[2m[36m(pid=17389)[0m     @     0x7f77d21baed4 at::native::copy_()
[2m[36m(pid=17387)[0m     @     0x7f0498c62e11 at::TensorIterator::for_each()
[2m[36m(pid=17387)[0m     @     0x7f049b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17387)[0m     @     0x7f049b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17387)[0m     @     0x7f04989dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17387)[0m     @     0x7f04989dac3f at::native::copy_impl()
[2m[36m(pid=17416)[0m     @     0x7f4e718b9b53 at::TensorIterator::for_each()
[2m[36m(pid=17416)[0m     @     0x7f4e718b9e11 at::TensorIterator::for_each()
[2m[36m(pid=17416)[0m     @     0x7f4e745d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17416)[0m     @     0x7f4e745f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17416)[0m     @     0x7f4e71633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17416)[0m     @     0x7f4e71631c3f at::native::copy_impl()
[2m[36m(pid=17365)[0m     @     0x7f1d00591e11 at::TensorIterator::for_each()
[2m[36m(pid=17365)[0m     @     0x7f1d032aac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17365)[0m     @     0x7f1d032cdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17365)[0m     @     0x7f1d0030b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17379)[0m     @     0x7f11537fee11 at::TensorIterator::for_each()
[2m[36m(pid=17379)[0m     @     0x7f1156517c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17379)[0m     @     0x7f115653acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17379)[0m     @     0x7f1153578009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17379)[0m     @     0x7f1153576c3f at::native::copy_impl()
[2m[36m(pid=17421)[0m     @     0x7f7206af0b53 at::TensorIterator::for_each()
[2m[36m(pid=17421)[0m     @     0x7f7206af0e11 at::TensorIterator::for_each()
[2m[36m(pid=17421)[0m     @     0x7f7209809c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17421)[0m     @     0x7f720982ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17381)[0m     @     0x7f9114a51b53 at::TensorIterator::for_each()
[2m[36m(pid=17381)[0m     @     0x7f9114a51e11 at::TensorIterator::for_each()
[2m[36m(pid=17381)[0m     @     0x7f911776ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17381)[0m     @     0x7f911778dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17381)[0m     @     0x7f91147cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17295)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17295)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17295)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17295)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17295)[0m *** SIGSEGV (@0x0) received by PID 17295 (TID 0x7f75ea72f700) from PID 0; stack trace: ***
[2m[36m(pid=17374)[0m     @     0x7f36ecd67e11 at::TensorIterator::for_each()
[2m[36m(pid=17374)[0m     @     0x7f36efa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17374)[0m     @     0x7f36efaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17374)[0m     @     0x7f36ecae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17374)[0m     @     0x7f36ecadfc3f at::native::copy_impl()
[2m[36m(pid=17367)[0m     @     0x7ef3f3424e11 at::TensorIterator::for_each()
[2m[36m(pid=17367)[0m     @     0x7ef3f613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17367)[0m     @     0x7ef3f6160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17367)[0m     @     0x7ef3f319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17367)[0m     @     0x7ef3f319cc3f at::native::copy_impl()
[2m[36m(pid=17367)[0m     @     0x7ef3f319ded4 at::native::copy_()
[2m[36m(pid=17296)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17296)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17296)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17296)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17296)[0m *** SIGSEGV (@0x0) received by PID 17296 (TID 0x7f49c20e8700) from PID 0; stack trace: ***
[2m[36m(pid=17296)[0m     @     0x7f49c1cc1390 (unknown)
[2m[36m(pid=17296)[0m     @     0x7f1ac3e84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17373)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17373)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17373)[0m *** SIGSEGV (@0x0) received by PID 17373 (TID 0x7fd3b9243700) from PID 0; stack trace: ***
[2m[36m(pid=17373)[0m     @     0x7fd3b8e1c390 (unknown)
[2m[36m(pid=17293)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17293)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17293)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17293)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17293)[0m *** SIGSEGV (@0x0) received by PID 17293 (TID 0x7fc21b316700) from PID 0; stack trace: ***
[2m[36m(pid=17304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17304)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17342)[0m     @     0x7fac8ff56b53 at::TensorIterator::for_each()
[2m[36m(pid=17342)[0m     @     0x7fac8ff56e11 at::TensorIterator::for_each()
[2m[36m(pid=17342)[0m     @     0x7fac92c6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17342)[0m     @     0x7fac92c92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17370)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17370)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17370)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17370)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17370)[0m *** SIGSEGV (@0x0) received by PID 17370 (TID 0x7fb016017700) from PID 0; stack trace: ***
[2m[36m(pid=17312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17312)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17312)[0m *** SIGSEGV (@0x0) received by PID 17312 (TID 0x7f77ea1c7700) from PID 0; stack trace: ***
[2m[36m(pid=17312)[0m     @     0x7f77e9da0390 (unknown)
[2m[36m(pid=17372)[0m     @     0x7f9ec1cfc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17372)[0m     @     0x7f9ec1cfcb53 at::TensorIterator::for_each()
[2m[36m(pid=17372)[0m     @     0x7f9ec1cfce11 at::TensorIterator::for_each()
[2m[36m(pid=17397)[0m     @     0x7f4d74319009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17397)[0m     @     0x7f4d74317c3f at::native::copy_impl()
[2m[36m(pid=17397)[0m     @     0x7f4d74318ed4 at::native::copy_()
[2m[36m(pid=17308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17308)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17308)[0m *** SIGSEGV (@0x0) received by PID 17308 (TID 0x7f8ffba46700) from PID 0; stack trace: ***
[2m[36m(pid=17289)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17289)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17289)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17289)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17289)[0m *** SIGSEGV (@0x0) received by PID 17289 (TID 0x7fad7b23c700) from PID 0; stack trace: ***
[2m[36m(pid=17289)[0m     @     0x7fad7ae15390 (unknown)
[2m[36m(pid=17385)[0m     @     0x7fc94a092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17385)[0m     @     0x7fc94a0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17385)[0m     @     0x7fc9470f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17385)[0m     @     0x7fc9470f1c3f at::native::copy_impl()
[2m[36m(pid=17385)[0m     @     0x7fc9470f2ed4 at::native::copy_()
[2m[36m(pid=17297)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17297)[0m *** SIGSEGV (@0x0) received by PID 17297 (TID 0x7fb3c3691700) from PID 0; stack trace: ***
[2m[36m(pid=17297)[0m     @     0x7fb3c326a390 (unknown)
[2m[36m(pid=17297)[0m     @     0x7f84c539bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17297)[0m     @     0x7f84c268f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17394)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17394)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17394)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17394)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17318)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17318)[0m *** SIGSEGV (@0x0) received by PID 17318 (TID 0x7fd752bff700) from PID 0; stack trace: ***
[2m[36m(pid=17290)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17290)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17290)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17290)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17290)[0m *** SIGSEGV (@0x0) received by PID 17290 (TID 0x7f9b88e7a700) from PID 0; stack trace: ***
[2m[36m(pid=17321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17321)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17321)[0m *** SIGSEGV (@0x0) received by PID 17321 (TID 0x7f8e20946700) from PID 0; stack trace: ***
[2m[36m(pid=17369)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17369)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17369)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17369)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17369)[0m *** SIGSEGV (@0x0) received by PID 17369 (TID 0x7f3cd6b88700) from PID 0; stack trace: ***
[2m[36m(pid=17338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17338)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17338)[0m *** SIGSEGV (@0x0) received by PID 17338 (TID 0x7fe340a69700) from PID 0; stack trace: ***
[2m[36m(pid=17371)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17371)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17371)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17371)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17371)[0m *** SIGSEGV (@0x0) received by PID 17371 (TID 0x7f1aad3d0700) from PID 0; stack trace: ***
[2m[36m(pid=17300)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17300)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17300)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17286)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17286)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17286)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17315)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17315)[0m *** SIGSEGV (@0x0) received by PID 17315 (TID 0x7fabb5789700) from PID 0; stack trace: ***
[2m[36m(pid=17322)[0m     @     0x7f8469a82c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17322)[0m     @     0x7f8469aa5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17322)[0m     @     0x7f8466ae3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17322)[0m     @     0x7f8466ae1c3f at::native::copy_impl()
[2m[36m(pid=17325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17325)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17325)[0m *** SIGSEGV (@0x0) received by PID 17325 (TID 0x7fe7cfccd700) from PID 0; stack trace: ***
[2m[36m(pid=17325)[0m     @     0x7fe7cf8a6390 (unknown)
[2m[36m(pid=17325)[0m     @     0x7fb8d19c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17325)[0m     @     0x7fb8cecbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17418)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17418)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17418)[0m *** SIGSEGV (@0x0) received by PID 17418 (TID 0x7f67ba91a700) from PID 0; stack trace: ***
[2m[36m(pid=17418)[0m     @     0x7f67ba4f3390 (unknown)
[2m[36m(pid=17353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17353)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17353)[0m *** SIGSEGV (@0x0) received by PID 17353 (TID 0x7f345cdb4700) from PID 0; stack trace: ***
[2m[36m(pid=17292)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17292)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17292)[0m *** SIGSEGV (@0x0) received by PID 17292 (TID 0x7f9c1fff7700) from PID 0; stack trace: ***
[2m[36m(pid=17292)[0m     @     0x7f9c1fbd0390 (unknown)
[2m[36m(pid=17292)[0m     @     0x7f6d21d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17292)[0m     @     0x7f6d1f06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17310)[0m *** SIGSEGV (@0x0) received by PID 17310 (TID 0x7fc55056d700) from PID 0; stack trace: ***
[2m[36m(pid=17310)[0m     @     0x7fc550146390 (unknown)
[2m[36m(pid=17310)[0m     @     0x7f9652293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17310)[0m     @     0x7f964f58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17310)[0m     @     0x7f964f58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17350)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17350)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17350)[0m *** SIGSEGV (@0x0) received by PID 17350 (TID 0x7fe4268ab700) from PID 0; stack trace: ***
[2m[36m(pid=17350)[0m     @     0x7fe426484390 (unknown)
[2m[36m(pid=17350)[0m     @     0x7fb5285c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17350)[0m     @     0x7fb5258b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17424)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17424)[0m *** SIGSEGV (@0x0) received by PID 17424 (TID 0x7f4741a14700) from PID 0; stack trace: ***
[2m[36m(pid=17326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17326)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17326)[0m *** SIGSEGV (@0x0) received by PID 17326 (TID 0x7f9db280c700) from PID 0; stack trace: ***
[2m[36m(pid=17326)[0m     @     0x7f9db23e5390 (unknown)
[2m[36m(pid=17326)[0m     @     0x7f6eb45c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17326)[0m     @     0x7f6eb18b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17340)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17340)[0m *** SIGSEGV (@0x0) received by PID 17340 (TID 0x7fe09b2c1700) from PID 0; stack trace: ***
[2m[36m(pid=17340)[0m     @     0x7fe09ae9a390 (unknown)
[2m[36m(pid=17340)[0m     @     0x7fb19d09dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17340)[0m     @     0x7fb19a39164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17395)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17395)[0m *** SIGSEGV (@0x0) received by PID 17395 (TID 0x7f1b36870700) from PID 0; stack trace: ***
[2m[36m(pid=17395)[0m     @     0x7f1b36449390 (unknown)
[2m[36m(pid=17395)[0m     @     0x7eec385c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17395)[0m     @     0x7eec358b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17419)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17419)[0m *** SIGSEGV (@0x0) received by PID 17419 (TID 0x7f0d7ab7b700) from PID 0; stack trace: ***
[2m[36m(pid=17419)[0m     @     0x7f0d7a754390 (unknown)
[2m[36m(pid=17419)[0m     @     0x7ede7c770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17419)[0m     @     0x7ede79a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17306)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17306)[0m *** SIGSEGV (@0x0) received by PID 17306 (TID 0x7f05127ea700) from PID 0; stack trace: ***
[2m[36m(pid=17306)[0m     @     0x7f05123c3390 (unknown)
[2m[36m(pid=17306)[0m     @     0x7ed6145c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17306)[0m     @     0x7ed6118b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17305)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17305)[0m *** SIGSEGV (@0x0) received by PID 17305 (TID 0x7f61f10fd700) from PID 0; stack trace: ***
[2m[36m(pid=17305)[0m     @     0x7f61f0cd6390 (unknown)
[2m[36m(pid=17305)[0m     @     0x7f32f2e48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17305)[0m     @     0x7f32f013c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17305)[0m     @     0x7f32f013f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17426)[0m     @     0x7efa0dd26ed4 at::native::copy_()
[2m[36m(pid=17426)[0m     @     0x7efa0e4695cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17426)[0m     @     0x7efa0e571148 at::Tensor::copy_()
[2m[36m(pid=17426)[0m     @     0x7efa10168989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17411)[0m     @     0x7f8ce95c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17411)[0m     @     0x7f8ce96d1148 at::Tensor::copy_()
[2m[36m(pid=17411)[0m     @     0x7f8ceb2c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17429)[0m     @     0x7fb156e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17429)[0m     @     0x7fb156f6c148 at::Tensor::copy_()
[2m[36m(pid=17429)[0m     @     0x7fb158b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17400)[0m     @     0x7ee371e97148 at::Tensor::copy_()
[2m[36m(pid=17400)[0m     @     0x7ee373a8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17303)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17303)[0m *** SIGSEGV (@0x0) received by PID 17303 (TID 0x7f39786ae700) from PID 0; stack trace: ***
[2m[36m(pid=17303)[0m     @     0x7f3978287390 (unknown)
[2m[36m(pid=17303)[0m     @     0x7f0a7a49afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17303)[0m     @     0x7f0a7778e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17356)[0m     @     0x7f04873de390 (unknown)
[2m[36m(pid=17356)[0m     @     0x7ed5894a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17356)[0m     @     0x7ed58679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17356)[0m     @     0x7ed586797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17288)[0m     @     0x7f3b56299390 (unknown)
[2m[36m(pid=17288)[0m     @     0x7f0c5840afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17288)[0m     @     0x7f0c556fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17288)[0m     @     0x7f0c55701977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17302)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17302)[0m *** SIGSEGV (@0x0) received by PID 17302 (TID 0x7f9388ba2700) from PID 0; stack trace: ***
[2m[36m(pid=17302)[0m     @     0x7f938877b390 (unknown)
[2m[36m(pid=17302)[0m     @     0x7f648a885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17302)[0m     @     0x7f6487b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17368)[0m     @     0x7ee6e801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17368)[0m     @     0x7ee6e8126148 at::Tensor::copy_()
[2m[36m(pid=17368)[0m     @     0x7ee6e9d1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53eeddced4 at::native::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53ef51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17399)[0m     @     0x7eec00ef8ed4 at::native::copy_()
[2m[36m(pid=17399)[0m     @     0x7eec0163b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17414)[0m     @     0x7f0d11c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17414)[0m     @     0x7f0d11c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17414)[0m     @     0x7f0d0ecad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17414)[0m     @     0x7f0d0ecabc3f at::native::copy_impl()
[2m[36m(pid=17363)[0m     @     0x7f2b126515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17363)[0m     @     0x7f2b12759148 at::Tensor::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed0757adc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17358)[0m     @     0x7ed0757d0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17358)[0m     @     0x7ed07280e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17358)[0m     @     0x7ed07280cc3f at::native::copy_impl()
[2m[36m(pid=17389)[0m     @     0x7f77d28fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17389)[0m     @     0x7f77d2a05148 at::Tensor::copy_()
[2m[36m(pid=17389)[0m     @     0x7f77d45fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17346)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17320)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17327)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17327)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17327)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17378)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17378)[0m *** SIGSEGV (@0x0) received by PID 17378 (TID 0x7f894f02a700) from PID 0; stack trace: ***
[2m[36m(pid=17287)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17287)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17287)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17401)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17362)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17362)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17362)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17409)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17344)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17344)[0m *** SIGSEGV (@0x0) received by PID 17344 (TID 0x7f53f22d7700) from PID 0; stack trace: ***
[2m[36m(pid=17344)[0m     @     0x7f53f1eb0390 (unknown)
[2m[36m(pid=17387)[0m     @     0x7f04989dbed4 at::native::copy_()
[2m[36m(pid=17387)[0m     @     0x7f049911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17416)[0m     @     0x7f4e71632ed4 at::native::copy_()
[2m[36m(pid=17416)[0m     @     0x7f4e71d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17416)[0m     @     0x7f4e71e7d148 at::Tensor::copy_()
[2m[36m(pid=17416)[0m     @     0x7f4e73a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d00309c3f at::native::copy_impl()
[2m[36m(pid=17365)[0m     @     0x7f1d0030aed4 at::native::copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d00a4d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17379)[0m     @     0x7f1153577ed4 at::native::copy_()
[2m[36m(pid=17379)[0m     @     0x7f1153cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17379)[0m     @     0x7f1153dc2148 at::Tensor::copy_()
[2m[36m(pid=17379)[0m     @     0x7f11559b9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17421)[0m     @     0x7f720686a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17421)[0m     @     0x7f7206868c3f at::native::copy_impl()
[2m[36m(pid=17421)[0m     @     0x7f7206869ed4 at::native::copy_()
[2m[36m(pid=17421)[0m     @     0x7f7206fac5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17381)[0m     @     0x7f91147c9c3f at::native::copy_impl()
[2m[36m(pid=17381)[0m     @     0x7f91147caed4 at::native::copy_()
[2m[36m(pid=17381)[0m     @     0x7f9114f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17295)[0m     @     0x7f75ea308390 (unknown)
[2m[36m(pid=17295)[0m     @     0x7f46ec530fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17295)[0m     @     0x7f46e982464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17295)[0m     @     0x7f46e9827977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17295)[0m     @     0x7f46e9827b53 at::TensorIterator::for_each()
[2m[36m(pid=17374)[0m     @     0x7f36ecae0ed4 at::native::copy_()
[2m[36m(pid=17374)[0m     @     0x7f36ed2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17374)[0m     @     0x7f36ed32b148 at::Tensor::copy_()
[2m[36m(pid=17374)[0m     @     0x7f36eef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17367)[0m     @     0x7ef3f38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17367)[0m     @     0x7ef3f39e8148 at::Tensor::copy_()
[2m[36m(pid=17367)[0m     @     0x7ef3f55df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17367)[0m     @     0x7ef3f38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17296)[0m     @     0x7f1ac117864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17296)[0m     @     0x7f1ac117b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17296)[0m     @     0x7f1ac117bb53 at::TensorIterator::for_each()
[2m[36m(pid=17373)[0m     @     0x7fa4bb01bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17373)[0m     @     0x7fa4b830f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17373)[0m     @     0x7fa4b8312977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17373)[0m     @     0x7fa4b8312b53 at::TensorIterator::for_each()
[2m[36m(pid=17293)[0m     @     0x7fc21aeef390 (unknown)
[2m[36m(pid=17293)[0m     @     0x7f931d10afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17293)[0m     @     0x7f931a3fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17293)[0m     @     0x7f931a401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17293)[0m     @     0x7f931a401b53 at::TensorIterator::for_each()
[2m[36m(pid=17304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17304)[0m *** SIGSEGV (@0x0) received by PID 17304 (TID 0x7fc03fe0e700) from PID 0; stack trace: ***
[2m[36m(pid=17304)[0m     @     0x7fc03f9e7390 (unknown)
[2m[36m(pid=17304)[0m     @     0x7f9141b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17304)[0m     @     0x7f913ee4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17304)[0m     @     0x7f913ee4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17342)[0m     @     0x7fac8fcd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17342)[0m     @     0x7fac8fccec3f at::native::copy_impl()
[2m[36m(pid=17342)[0m     @     0x7fac8fccfed4 at::native::copy_()
[2m[36m(pid=17342)[0m     @     0x7fac904125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17370)[0m     @     0x7fb015bf0390 (unknown)
[2m[36m(pid=17370)[0m     @     0x7f8117e16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17370)[0m     @     0x7f811510a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17370)[0m     @     0x7f811510d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17312)[0m     @     0x7f48ebfc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17312)[0m     @     0x7f48e92bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17312)[0m     @     0x7f48e92c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17312)[0m     @     0x7f48e92c0b53 at::TensorIterator::for_each()
[2m[36m(pid=17372)[0m     @     0x7f9ec4a15c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17372)[0m     @     0x7f9ec4a38cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17372)[0m     @     0x7f9ec1a76009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17372)[0m     @     0x7f9ec1a74c3f at::native::copy_impl()
[2m[36m(pid=17372)[0m     @     0x7f9ec1a75ed4 at::native::copy_()
[2m[36m(pid=17397)[0m     @     0x7f4d74a5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17397)[0m     @     0x7f4d74b63148 at::Tensor::copy_()
[2m[36m(pid=17397)[0m     @     0x7f4d7675a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17397)[0m     @     0x7f4d74a5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17308)[0m     @     0x7f8ffb61f390 (unknown)
[2m[36m(pid=17308)[0m     @     0x7f60fd829fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17308)[0m     @     0x7f60fab1d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17308)[0m     @     0x7f60fab20977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17308)[0m     @     0x7f60fab20b53 at::TensorIterator::for_each()
[2m[36m(pid=17289)[0m     @     0x7f7e7cf73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17289)[0m     @     0x7f7e7a26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17289)[0m     @     0x7f7e7a26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17289)[0m     @     0x7f7e7a26ab53 at::TensorIterator::for_each()
[2m[36m(pid=17385)[0m     @     0x7fc9478355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17385)[0m     @     0x7fc94793d148 at::Tensor::copy_()
[2m[36m(pid=17385)[0m     @     0x7fc949534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17385)[0m     @     0x7fc9478355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17297)[0m     @     0x7f84c2692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17297)[0m     @     0x7f84c2692b53 at::TensorIterator::for_each()
[2m[36m(pid=17297)[0m     @     0x7f84c2692e11 at::TensorIterator::for_each()
[2m[36m(pid=17394)[0m *** SIGSEGV (@0x0) received by PID 17394 (TID 0x7f944b3b2700) from PID 0; stack trace: ***
[2m[36m(pid=17394)[0m     @     0x7f944af8b390 (unknown)
[2m[36m(pid=17394)[0m     @     0x7f654d18afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17394)[0m     @     0x7f654a47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17394)[0m     @     0x7f654a481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17318)[0m     @     0x7fd7527d8390 (unknown)
[2m[36m(pid=17318)[0m     @     0x7fa854770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17318)[0m     @     0x7fa851a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17318)[0m     @     0x7fa851a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17318)[0m     @     0x7fa851a67b53 at::TensorIterator::for_each()
[2m[36m(pid=17290)[0m     @     0x7f9b88a53390 (unknown)
[2m[36m(pid=17290)[0m     @     0x7f6c8abd4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17290)[0m     @     0x7f6c87ec864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17290)[0m     @     0x7f6c87ecb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17290)[0m     @     0x7f6c87ecbb53 at::TensorIterator::for_each()
[2m[36m(pid=17321)[0m     @     0x7f8e2051f390 (unknown)
[2m[36m(pid=17321)[0m     @     0x7f5f2265afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17321)[0m     @     0x7f5f1f94e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17321)[0m     @     0x7f5f1f951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17321)[0m     @     0x7f5f1f951b53 at::TensorIterator::for_each()
[2m[36m(pid=17369)[0m     @     0x7f3cd6761390 (unknown)
[2m[36m(pid=17369)[0m     @     0x7f0dd8770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17369)[0m     @     0x7f0dd5a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17369)[0m     @     0x7f0dd5a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17338)[0m     @     0x7fe340642390 (unknown)
[2m[36m(pid=17338)[0m     @     0x7fb4427dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17338)[0m     @     0x7fb43face64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17338)[0m     @     0x7fb43fad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17338)[0m     @     0x7fb43fad1b53 at::TensorIterator::for_each()
[2m[36m(pid=17404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17404)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17404)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17404)[0m *** SIGSEGV (@0x0) received by PID 17404 (TID 0x7f2fb06ff700) from PID 0; stack trace: ***
[2m[36m(pid=17404)[0m     @     0x7f2fb02d8390 (unknown)
[2m[36m(pid=17382)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17382)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17382)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17382)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17382)[0m *** SIGSEGV (@0x0) received by PID 17382 (TID 0x7fd3eda41700) from PID 0; stack trace: ***
[2m[36m(pid=17382)[0m     @     0x7fd3ed61a390 (unknown)
[2m[36m(pid=17382)[0m     @     0x7fa4ef836fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17382)[0m     @     0x7fa4ecb2a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17371)[0m     @     0x7f1aacfa9390 (unknown)
[2m[36m(pid=17371)[0m     @     0x7eebaf1c6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17371)[0m     @     0x7eebac4ba64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17371)[0m     @     0x7eebac4bd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17371)[0m     @     0x7eebac4bdb53 at::TensorIterator::for_each()
[2m[36m(pid=17300)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17300)[0m *** SIGSEGV (@0x0) received by PID 17300 (TID 0x7efd60128700) from PID 0; stack trace: ***
[2m[36m(pid=17300)[0m     @     0x7efd5fd01390 (unknown)
[2m[36m(pid=17300)[0m     @     0x7ece61f1ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17300)[0m     @     0x7ece5f21364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17300)[0m     @     0x7ece5f216977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17291)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17291)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17291)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17291)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17291)[0m *** SIGSEGV (@0x0) received by PID 17291 (TID 0x7f33fd8c9700) from PID 0; stack trace: ***
[2m[36m(pid=17291)[0m     @     0x7f33fd4a2390 (unknown)
[2m[36m(pid=17291)[0m     @     0x7f04feb08fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17291)[0m     @     0x7f04fbdfc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17361)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17361)[0m *** SIGSEGV (@0x0) received by PID 17361 (TID 0x7efdc99bc700) from PID 0; stack trace: ***
[2m[36m(pid=17361)[0m     @     0x7efdc9595390 (unknown)
[2m[36m(pid=17361)[0m     @     0x7ececb75afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17361)[0m     @     0x7ecec8a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17286)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17286)[0m *** SIGSEGV (@0x0) received by PID 17286 (TID 0x7f7b51cbf700) from PID 0; stack trace: ***
[2m[36m(pid=17286)[0m     @     0x7f7b51898390 (unknown)
[2m[36m(pid=17286)[0m     @     0x7f4c53a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17286)[0m     @     0x7f4c50d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17286)[0m     @     0x7f4c50d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17315)[0m     @     0x7fabb5362390 (unknown)
[2m[36m(pid=17315)[0m     @     0x7f7cb752efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17315)[0m     @     0x7f7cb482264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17315)[0m     @     0x7f7cb4825977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17315)[0m     @     0x7f7cb4825b53 at::TensorIterator::for_each()
[2m[36m(pid=17299)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17299)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17299)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17299)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17299)[0m *** SIGSEGV (@0x0) received by PID 17299 (TID 0x7f452b1bb700) from PID 0; stack trace: ***
[2m[36m(pid=17299)[0m     @     0x7f452ad94390 (unknown)
[2m[36m(pid=17299)[0m     @     0x7f162cf73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17299)[0m     @     0x7f162a26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17301)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17301)[0m *** SIGSEGV (@0x0) received by PID 17301 (TID 0x7fe10b1f4700) from PID 0; stack trace: ***
[2m[36m(pid=17301)[0m     @     0x7fe10adcd390 (unknown)
[2m[36m(pid=17301)[0m     @     0x7fb20cfd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17301)[0m     @     0x7fb20a2c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17322)[0m     @     0x7f8466ae2ed4 at::native::copy_()
[2m[36m(pid=17322)[0m     @     0x7f84672255cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17322)[0m     @     0x7f846732d148 at::Tensor::copy_()
[2m[36m(pid=17325)[0m     @     0x7fb8cecbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17325)[0m     @     0x7fb8cecbfb53 at::TensorIterator::for_each()
[2m[36m(pid=17418)[0m     @     0x7f38bc6defb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17418)[0m     @     0x7f38b99d264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17418)[0m     @     0x7f38b99d5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17418)[0m     @     0x7f38b99d5b53 at::TensorIterator::for_each()
[2m[36m(pid=17336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17336)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17336)[0m *** SIGSEGV (@0x0) received by PID 17336 (TID 0x7f657917d700) from PID 0; stack trace: ***
[2m[36m(pid=17336)[0m     @     0x7f6578d56390 (unknown)
[2m[36m(pid=17336)[0m     @     0x7f367aeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17353)[0m     @     0x7f345c98d390 (unknown)
[2m[36m(pid=17353)[0m     @     0x7f055e9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17353)[0m     @     0x7f055bcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17353)[0m     @     0x7f055bce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17292)[0m     @     0x7f6d1f063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17292)[0m     @     0x7f6d1f063b53 at::TensorIterator::for_each()
[2m[36m(pid=17335)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17335)[0m *** SIGSEGV (@0x0) received by PID 17335 (TID 0x7fc43b298700) from PID 0; stack trace: ***
[2m[36m(pid=17310)[0m     @     0x7f964f58ab53 at::TensorIterator::for_each()
[2m[36m(pid=17310)[0m     @     0x7f964f58ae11 at::TensorIterator::for_each()
[2m[36m(pid=17310)[0m     @     0x7f96522a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17310)[0m     @     0x7f96522c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17350)[0m     @     0x7fb5258b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17350)[0m     @     0x7fb5258b9b53 at::TensorIterator::for_each()
[2m[36m(pid=17350)[0m     @     0x7fb5258b9e11 at::TensorIterator::for_each()
[2m[36m(pid=17350)[0m     @     0x7fb5285d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17424)[0m     @     0x7f47415ed390 (unknown)
[2m[36m(pid=17424)[0m     @     0x7f18437f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17424)[0m     @     0x7f1840aea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17424)[0m     @     0x7f1840aed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17424)[0m     @     0x7f1840aedb53 at::TensorIterator::for_each()
[2m[36m(pid=17326)[0m     @     0x7f6eb18b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17326)[0m     @     0x7f6eb18b9b53 at::TensorIterator::for_each()
[2m[36m(pid=17326)[0m     @     0x7f6eb18b9e11 at::TensorIterator::for_each()
[2m[36m(pid=17340)[0m     @     0x7fb19a394977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17340)[0m     @     0x7fb19a394b53 at::TensorIterator::for_each()
[2m[36m(pid=17340)[0m     @     0x7fb19a394e11 at::TensorIterator::for_each()
[2m[36m(pid=17340)[0m     @     0x7fb19d0adc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17395)[0m     @     0x7eec358b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17395)[0m     @     0x7eec358b9b53 at::TensorIterator::for_each()
[2m[36m(pid=17395)[0m     @     0x7eec358b9e11 at::TensorIterator::for_each()
[2m[36m(pid=17419)[0m     @     0x7ede79a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17419)[0m     @     0x7ede79a67b53 at::TensorIterator::for_each()
[2m[36m(pid=17419)[0m     @     0x7ede79a67e11 at::TensorIterator::for_each()
[2m[36m(pid=17419)[0m     @     0x7ede7c780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17306)[0m     @     0x7ed6118b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17306)[0m     @     0x7ed6118b9b53 at::TensorIterator::for_each()
[2m[36m(pid=17306)[0m     @     0x7ed6118b9e11 at::TensorIterator::for_each()
[2m[36m(pid=17306)[0m     @     0x7ed6145d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17305)[0m     @     0x7f32f013fb53 at::TensorIterator::for_each()
[2m[36m(pid=17305)[0m     @     0x7f32f013fe11 at::TensorIterator::for_each()
[2m[36m(pid=17305)[0m     @     0x7f32f2e58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17305)[0m     @     0x7f32f2e7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17426)[0m     @     0x7efa0e4695cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17426)[0m     @     0x7efa0e571148 at::Tensor::copy_()
[2m[36m(pid=17426)[0m     @     0x7efa14827bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17426)[0m     @     0x562ae62d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17426)[0m     @     0x562ae622bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17426)[0m     @     0x562ae62b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17426)[0m     @     0x562ae62b7a20 method_vectorcall
[2m[36m(pid=17426)[0m     @     0x562ae622bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17426)[0m     @     0x562ae62b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17426)[0m     @     0x562ae62b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17426)[0m     @     0x562ae622c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17426)[0m     @     0x562ae62b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17426)[0m     @     0x562ae62b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17426)[0m     @     0x562ae622c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17426)[0m     @     0x562ae62b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17426)[0m     @     0x562ae62b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17426)[0m     @     0x562ae622c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17426)[0m     @     0x562ae62b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17411)[0m     @     0x7f8ce95c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17411)[0m     @     0x7f8ce96d1148 at::Tensor::copy_()
[2m[36m(pid=17411)[0m     @     0x7f8cef987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17411)[0m     @     0x55c6667c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17411)[0m     @     0x55c66671db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17411)[0m     @     0x55c6667a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17411)[0m     @     0x55c6667a9a20 method_vectorcall
[2m[36m(pid=17411)[0m     @     0x55c66671dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17411)[0m     @     0x55c6667a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17411)[0m     @     0x55c6667a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17411)[0m     @     0x55c66671e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17411)[0m     @     0x55c6667a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17411)[0m     @     0x55c6667a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17411)[0m     @     0x55c66671e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17411)[0m     @     0x55c6667a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17411)[0m     @     0x55c6667a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17411)[0m     @     0x55c66671e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17411)[0m     @     0x55c6667a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17429)[0m     @     0x7fb156e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17429)[0m     @     0x7fb156f6c148 at::Tensor::copy_()
[2m[36m(pid=17429)[0m     @     0x7fb15d222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17429)[0m     @     0x56316f430fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17429)[0m     @     0x56316f38bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17429)[0m     @     0x56316f416baf _PyEval_EvalCodeWithName
[2m[36m(pid=17429)[0m     @     0x56316f417a20 method_vectorcall
[2m[36m(pid=17429)[0m     @     0x56316f38bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17429)[0m     @     0x56316f416baf _PyEval_EvalCodeWithName
[2m[36m(pid=17429)[0m     @     0x56316f417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17429)[0m     @     0x56316f38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17429)[0m     @     0x56316f416baf _PyEval_EvalCodeWithName
[2m[36m(pid=17429)[0m     @     0x56316f417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17429)[0m     @     0x56316f38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17429)[0m     @     0x56316f416baf _PyEval_EvalCodeWithName
[2m[36m(pid=17429)[0m     @     0x56316f417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17429)[0m     @     0x56316f38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17429)[0m     @     0x56316f416baf _PyEval_EvalCodeWithName
[2m[36m(pid=17400)[0m     @     0x7ee371d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17400)[0m     @     0x7ee371e97148 at::Tensor::copy_()
[2m[36m(pid=17400)[0m     @     0x7ee37814dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17400)[0m     @     0x55c66c557fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17400)[0m     @     0x55c66c4b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17400)[0m     @     0x55c66c53dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17400)[0m     @     0x55c66c53ea20 method_vectorcall
[2m[36m(pid=17400)[0m     @     0x55c66c4b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17400)[0m     @     0x55c66c53dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17400)[0m     @     0x55c66c53e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17400)[0m     @     0x55c66c4b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17400)[0m     @     0x55c66c53dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17400)[0m     @     0x55c66c53e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17400)[0m     @     0x55c66c4b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17400)[0m     @     0x55c66c53dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17400)[0m     @     0x55c66c53e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17400)[0m     @     0x55c66c4b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17400)[0m     @     0x55c66c53dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x7f0a77791977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17303)[0m     @     0x7f0a77791b53 at::TensorIterator::for_each()
[2m[36m(pid=17303)[0m     @     0x7f0a77791e11 at::TensorIterator::for_each()
[2m[36m(pid=17356)[0m     @     0x7ed586797b53 at::TensorIterator::for_each()
[2m[36m(pid=17356)[0m     @     0x7ed586797e11 at::TensorIterator::for_each()
[2m[36m(pid=17356)[0m     @     0x7ed5894b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17356)[0m     @     0x7ed5894d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17356)[0m     @     0x7ed586511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17288)[0m     @     0x7f0c55701b53 at::TensorIterator::for_each()
[2m[36m(pid=17288)[0m     @     0x7f0c55701e11 at::TensorIterator::for_each()
[2m[36m(pid=17288)[0m     @     0x7f0c5841ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17288)[0m     @     0x7f0c5843dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17302)[0m     @     0x7f6487b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17302)[0m     @     0x7f6487b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=17302)[0m     @     0x7f6487b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=17302)[0m     @     0x7f648a895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17368)[0m     @     0x7ee6e801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17368)[0m     @     0x7ee6e8126148 at::Tensor::copy_()
[2m[36m(pid=17368)[0m     @     0x7ee6ee3dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17368)[0m     @     0x55d026c3efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17368)[0m     @     0x55d026b99b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17368)[0m     @     0x55d026c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=17368)[0m     @     0x55d026c25a20 method_vectorcall
[2m[36m(pid=17368)[0m     @     0x55d026b99bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17368)[0m     @     0x55d026c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=17368)[0m     @     0x55d026c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17368)[0m     @     0x55d026b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17368)[0m     @     0x55d026c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=17368)[0m     @     0x55d026c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17368)[0m     @     0x55d026b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17368)[0m     @     0x55d026c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=17368)[0m     @     0x55d026c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17368)[0m     @     0x55d026b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17368)[0m     @     0x55d026c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=17352)[0m     @     0x7f53ef627148 at::Tensor::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53f121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53ef51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17399)[0m     @     0x7eec01743148 at::Tensor::copy_()
[2m[36m(pid=17399)[0m     @     0x7eec0333a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17399)[0m     @     0x7eec0163b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17399)[0m     @     0x7eec01743148 at::Tensor::copy_()
[2m[36m(pid=17399)[0m     @     0x7eec079f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17399)[0m     @     0x5572f50a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17399)[0m     @     0x5572f5004b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17399)[0m     @     0x5572f508fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17399)[0m     @     0x5572f5090a20 method_vectorcall
[2m[36m(pid=17399)[0m     @     0x5572f5004bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x7f0d0ecaced4 at::native::copy_()
[2m[36m(pid=17414)[0m     @     0x7f0d0f3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17414)[0m     @     0x7f0d0f4f7148 at::Tensor::copy_()
[2m[36m(pid=17363)[0m     @     0x7f2b14350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17363)[0m     @     0x7f2b126515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17363)[0m     @     0x7f2b12759148 at::Tensor::copy_()
[2m[36m(pid=17363)[0m     @     0x7f2b185f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17363)[0m     @     0x55f1a651ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17363)[0m     @     0x55f1a647ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17363)[0m     @     0x55f1a6505baf _PyEval_EvalCodeWithName
[2m[36m(pid=17363)[0m     @     0x55f1a6506a20 method_vectorcall
[2m[36m(pid=17363)[0m     @     0x55f1a647abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17363)[0m     @     0x55f1a6505baf _PyEval_EvalCodeWithName
[2m[36m(pid=17363)[0m     @     0x55f1a6506643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17363)[0m     @     0x55f1a647b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17363)[0m     @     0x55f1a6505baf _PyEval_EvalCodeWithName
[2m[36m(pid=17363)[0m     @     0x55f1a6506643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17363)[0m     @     0x55f1a647b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17363)[0m     @     0x55f1a6505baf _PyEval_EvalCodeWithName
[2m[36m(pid=17363)[0m     @     0x55f1a6506643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17363)[0m     @     0x55f1a647b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17363)[0m     @     0x55f1a6505baf _PyEval_EvalCodeWithName
[2m[36m(pid=17358)[0m     @     0x7ed07280ded4 at::native::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed072f505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17358)[0m     @     0x7ed073058148 at::Tensor::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed074c4f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17389)[0m     @     0x7f77d28fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17389)[0m     @     0x7f77d2a05148 at::Tensor::copy_()
[2m[36m(pid=17389)[0m     @     0x7f77d8cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17389)[0m     @     0x5638c3178fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17389)[0m     @     0x5638c30d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17389)[0m     @     0x5638c315ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17389)[0m     @     0x5638c315fa20 method_vectorcall
[2m[36m(pid=17389)[0m     @     0x5638c30d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17389)[0m     @     0x5638c315ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17389)[0m     @     0x5638c315f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17389)[0m     @     0x5638c30d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17389)[0m     @     0x5638c315ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17389)[0m     @     0x5638c315f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17389)[0m     @     0x5638c30d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17389)[0m     @     0x5638c315ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17389)[0m     @     0x5638c315f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17389)[0m     @     0x5638c30d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17389)[0m     @     0x5638c315ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17346)[0m *** SIGSEGV (@0x0) received by PID 17346 (TID 0x7f485c971700) from PID 0; stack trace: ***
[2m[36m(pid=17346)[0m     @     0x7f485c54a390 (unknown)
[2m[36m(pid=17346)[0m     @     0x7f195e750fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17346)[0m     @     0x7f195ba4464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17320)[0m *** SIGSEGV (@0x0) received by PID 17320 (TID 0x7eff3fd80700) from PID 0; stack trace: ***
[2m[36m(pid=17320)[0m     @     0x7eff3f959390 (unknown)
[2m[36m(pid=17320)[0m     @     0x7ed041b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17320)[0m     @     0x7ed03ee4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17327)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17327)[0m *** SIGSEGV (@0x0) received by PID 17327 (TID 0x7efc7133a700) from PID 0; stack trace: ***
[2m[36m(pid=17327)[0m     @     0x7efc70f13390 (unknown)
[2m[36m(pid=17327)[0m     @     0x7ecd7311bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17327)[0m     @     0x7ecd7040f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17378)[0m     @     0x7f894ec03390 (unknown)
[2m[36m(pid=17378)[0m     @     0x7f5a50c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17378)[0m     @     0x7f5a4df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17378)[0m     @     0x7f5a4df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17334)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17334)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17334)[0m *** Aborted at 1604574101 (unix time) try "date -d @1604574101" if you are using GNU date ***
[2m[36m(pid=17334)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17334)[0m *** SIGSEGV (@0x0) received by PID 17334 (TID 0x7f607e4cb700) from PID 0; stack trace: ***
[2m[36m(pid=17334)[0m     @     0x7f607e0a4390 (unknown)
[2m[36m(pid=17334)[0m     @     0x7f31802c4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17334)[0m     @     0x7f317d5b864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17287)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17287)[0m *** SIGSEGV (@0x0) received by PID 17287 (TID 0x7fa7af078700) from PID 0; stack trace: ***
[2m[36m(pid=17287)[0m     @     0x7fa7aec51390 (unknown)
[2m[36m(pid=17287)[0m     @     0x7f78b0c8afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17401)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17401)[0m *** SIGSEGV (@0x0) received by PID 17401 (TID 0x7f3608bb4700) from PID 0; stack trace: ***
[2m[36m(pid=17401)[0m     @     0x7f360878d390 (unknown)
[2m[36m(pid=17401)[0m     @     0x7f070a885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17401)[0m     @     0x7f0707b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17401)[0m     @     0x7f0707b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17362)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17362)[0m *** SIGSEGV (@0x0) received by PID 17362 (TID 0x7f50fdbc8700) from PID 0; stack trace: ***
[2m[36m(pid=17362)[0m     @     0x7f50fd7a1390 (unknown)
[2m[36m(pid=17362)[0m     @     0x7f21ff96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17362)[0m     @     0x7f21fcc5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17362)[0m     @     0x7f21fcc62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17409)[0m *** SIGSEGV (@0x0) received by PID 17409 (TID 0x7f7db9a6d700) from PID 0; stack trace: ***
[2m[36m(pid=17409)[0m     @     0x7f7db9646390 (unknown)
[2m[36m(pid=17409)[0m     @     0x7f4ebb85bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17409)[0m     @     0x7f4eb8b4f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17409)[0m     @     0x7f4eb8b52977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17344)[0m     @     0x7f24f409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17344)[0m     @     0x7f24f138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17344)[0m     @     0x7f24f1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17344)[0m     @     0x7f24f1392b53 at::TensorIterator::for_each()
[2m[36m(pid=17387)[0m     @     0x7f0499226148 at::Tensor::copy_()
[2m[36m(pid=17387)[0m     @     0x7f049ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17387)[0m     @     0x7f049911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17416)[0m     @     0x7f4e71d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17416)[0m     @     0x7f4e71e7d148 at::Tensor::copy_()
[2m[36m(pid=17416)[0m     @     0x7f4e78133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d00b55148 at::Tensor::copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d0274c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d00a4d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17379)[0m     @     0x7f1153cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17379)[0m     @     0x7f1153dc2148 at::Tensor::copy_()
[2m[36m(pid=17379)[0m     @     0x7f115a078bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17379)[0m     @     0x560e70a43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17379)[0m     @     0x560e7099eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17379)[0m     @     0x560e70a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17379)[0m     @     0x560e70a2aa20 method_vectorcall
[2m[36m(pid=17379)[0m     @     0x560e7099ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17379)[0m     @     0x560e70a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17379)[0m     @     0x560e70a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17379)[0m     @     0x560e7099f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17379)[0m     @     0x560e70a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17379)[0m     @     0x560e70a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17379)[0m     @     0x560e7099f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17379)[0m     @     0x560e70a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17379)[0m     @     0x560e70a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17379)[0m     @     0x560e7099f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17379)[0m     @     0x560e70a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x7f72070b4148 at::Tensor::copy_()
[2m[36m(pid=17421)[0m     @     0x7f7208cab989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17421)[0m     @     0x7f7206fac5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17381)[0m     @     0x7f9115015148 at::Tensor::copy_()
[2m[36m(pid=17381)[0m     @     0x7f9116c0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17381)[0m     @     0x7f9114f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17295)[0m     @     0x7f46e9827e11 at::TensorIterator::for_each()
[2m[36m(pid=17295)[0m     @     0x7f46ec540c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17295)[0m     @     0x7f46ec563cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17374)[0m     @     0x7f36ed2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17374)[0m     @     0x7f36ed32b148 at::Tensor::copy_()
[2m[36m(pid=17367)[0m     @     0x7ef3f39e8148 at::Tensor::copy_()
[2m[36m(pid=17367)[0m     @     0x7ef3f9c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17367)[0m     @     0x55c35fa82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17367)[0m     @     0x55c35f9ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17367)[0m     @     0x55c35fa68baf _PyEval_EvalCodeWithName
[2m[36m(pid=17367)[0m     @     0x55c35fa69a20 method_vectorcall
[2m[36m(pid=17367)[0m     @     0x55c35f9ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17367)[0m     @     0x55c35fa68baf _PyEval_EvalCodeWithName
[2m[36m(pid=17367)[0m     @     0x55c35fa69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17367)[0m     @     0x55c35f9de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17367)[0m     @     0x55c35fa68baf _PyEval_EvalCodeWithName
[2m[36m(pid=17367)[0m     @     0x55c35fa69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17367)[0m     @     0x55c35f9de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17367)[0m     @     0x55c35fa68baf _PyEval_EvalCodeWithName
[2m[36m(pid=17367)[0m     @     0x55c35fa69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17367)[0m     @     0x55c35f9de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17367)[0m     @     0x55c35fa68baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x7f1ac117be11 at::TensorIterator::for_each()
[2m[36m(pid=17296)[0m     @     0x7f1ac3e94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17296)[0m     @     0x7f1ac3eb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17296)[0m     @     0x7f1ac0ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17296)[0m     @     0x7f1ac0ef3c3f at::native::copy_impl()
[2m[36m(pid=17373)[0m     @     0x7fa4b8312e11 at::TensorIterator::for_each()
[2m[36m(pid=17373)[0m     @     0x7fa4bb02bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17373)[0m     @     0x7fa4bb04ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17373)[0m     @     0x7fa4b808c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17293)[0m     @     0x7f931a401e11 at::TensorIterator::for_each()
[2m[36m(pid=17293)[0m     @     0x7f931d11ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17293)[0m     @     0x7f931d13dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17304)[0m     @     0x7f913ee4cb53 at::TensorIterator::for_each()
[2m[36m(pid=17304)[0m     @     0x7f913ee4ce11 at::TensorIterator::for_each()
[2m[36m(pid=17304)[0m     @     0x7f9141b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17342)[0m     @     0x7fac9051a148 at::Tensor::copy_()
[2m[36m(pid=17342)[0m     @     0x7fac92111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17342)[0m     @     0x7fac904125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17370)[0m     @     0x7f811510db53 at::TensorIterator::for_each()
[2m[36m(pid=17370)[0m     @     0x7f811510de11 at::TensorIterator::for_each()
[2m[36m(pid=17370)[0m     @     0x7f8117e26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17312)[0m     @     0x7f48e92c0e11 at::TensorIterator::for_each()
[2m[36m(pid=17312)[0m     @     0x7f48ebfd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17312)[0m     @     0x7f48ebffccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17372)[0m     @     0x7f9ec21b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17372)[0m     @     0x7f9ec22c0148 at::Tensor::copy_()
[2m[36m(pid=17372)[0m     @     0x7f9ec3eb7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17397)[0m     @     0x7f4d74b63148 at::Tensor::copy_()
[2m[36m(pid=17397)[0m     @     0x7f4d7ae19bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17397)[0m     @     0x555cbac0ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17397)[0m     @     0x555cbab6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17397)[0m     @     0x555cbabf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17397)[0m     @     0x555cbabf6a20 method_vectorcall
[2m[36m(pid=17397)[0m     @     0x555cbab6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17397)[0m     @     0x555cbabf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17397)[0m     @     0x555cbabf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17397)[0m     @     0x555cbab6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17397)[0m     @     0x555cbabf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17397)[0m     @     0x555cbabf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17397)[0m     @     0x555cbab6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17397)[0m     @     0x555cbabf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17397)[0m     @     0x555cbabf6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17397)[0m     @     0x555cbab6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17397)[0m     @     0x555cbabf5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x7f60fab20e11 at::TensorIterator::for_each()
[2m[36m(pid=17308)[0m     @     0x7f60fd839c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17308)[0m     @     0x7f60fd85ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17289)[0m     @     0x7f7e7a26ae11 at::TensorIterator::for_each()
[2m[36m(pid=17289)[0m     @     0x7f7e7cf83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17289)[0m     @     0x7f7e7cfa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17385)[0m     @     0x7fc94793d148 at::Tensor::copy_()
[2m[36m(pid=17385)[0m     @     0x7fc94dbf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17385)[0m     @     0x55a1562c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17385)[0m     @     0x55a15621cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17385)[0m     @     0x55a1562a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17385)[0m     @     0x55a1562a8a20 method_vectorcall
[2m[36m(pid=17385)[0m     @     0x55a15621cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17385)[0m     @     0x55a1562a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17385)[0m     @     0x55a1562a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17385)[0m     @     0x55a15621d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17385)[0m     @     0x55a1562a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17385)[0m     @     0x55a1562a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17385)[0m     @     0x55a15621d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17385)[0m     @     0x55a1562a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17385)[0m     @     0x55a1562a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17385)[0m     @     0x55a15621d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17385)[0m     @     0x55a1562a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17297)[0m     @     0x7f84c53abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17297)[0m     @     0x7f84c53cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17297)[0m     @     0x7f84c240c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17297)[0m     @     0x7f84c240ac3f at::native::copy_impl()
[2m[36m(pid=17394)[0m     @     0x7f654a481b53 at::TensorIterator::for_each()
[2m[36m(pid=17394)[0m     @     0x7f654a481e11 at::TensorIterator::for_each()
[2m[36m(pid=17394)[0m     @     0x7f654d19ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17394)[0m     @     0x7f654d1bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17318)[0m     @     0x7fa851a67e11 at::TensorIterator::for_each()
[2m[36m(pid=17318)[0m     @     0x7fa854780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17318)[0m     @     0x7fa8547a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17290)[0m     @     0x7f6c87ecbe11 at::TensorIterator::for_each()
[2m[36m(pid=17290)[0m     @     0x7f6c8abe4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17290)[0m     @     0x7f6c8ac07cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17321)[0m     @     0x7f5f1f951e11 at::TensorIterator::for_each()
[2m[36m(pid=17321)[0m     @     0x7f5f2266ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17321)[0m     @     0x7f5f2268dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17369)[0m     @     0x7f0dd5a67b53 at::TensorIterator::for_each()
[2m[36m(pid=17369)[0m     @     0x7f0dd5a67e11 at::TensorIterator::for_each()
[2m[36m(pid=17369)[0m     @     0x7f0dd8780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17369)[0m     @     0x7f0dd87a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17338)[0m     @     0x7fb43fad1e11 at::TensorIterator::for_each()
[2m[36m(pid=17338)[0m     @     0x7fb4427eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17338)[0m     @     0x7fb44280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17338)[0m     @     0x7fb43f84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17404)[0m     @     0x7f00b24dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17404)[0m     @     0x7f00af7ce64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17404)[0m     @     0x7f00af7d1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17382)[0m     @     0x7fa4ecb2d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17382)[0m     @     0x7fa4ecb2db53 at::TensorIterator::for_each()
[2m[36m(pid=17371)[0m     @     0x7eebac4bde11 at::TensorIterator::for_each()
[2m[36m(pid=17371)[0m     @     0x7eebaf1d6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17371)[0m     @     0x7eebaf1f9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17300)[0m     @     0x7ece5f216b53 at::TensorIterator::for_each()
[2m[36m(pid=17300)[0m     @     0x7ece5f216e11 at::TensorIterator::for_each()
[2m[36m(pid=17300)[0m     @     0x7ece61f2fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17300)[0m     @     0x7ece61f52cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17300)[0m     @     0x7ece5ef90009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17291)[0m     @     0x7f04fbdff977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17291)[0m     @     0x7f04fbdffb53 at::TensorIterator::for_each()
[2m[36m(pid=17291)[0m     @     0x7f04fbdffe11 at::TensorIterator::for_each()
[2m[36m(pid=17291)[0m     @     0x7f04feb18c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17361)[0m     @     0x7ecec8a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17361)[0m     @     0x7ecec8a51b53 at::TensorIterator::for_each()
[2m[36m(pid=17286)[0m     @     0x7f4c50d67b53 at::TensorIterator::for_each()
[2m[36m(pid=17286)[0m     @     0x7f4c50d67e11 at::TensorIterator::for_each()
[2m[36m(pid=17286)[0m     @     0x7f4c53a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17286)[0m     @     0x7f4c53aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17315)[0m     @     0x7f7cb4825e11 at::TensorIterator::for_each()
[2m[36m(pid=17315)[0m     @     0x7f7cb753ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17315)[0m     @     0x7f7cb7561cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17315)[0m     @     0x7f7cb459f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17315)[0m     @     0x7f7cb459dc3f at::native::copy_impl()
[2m[36m(pid=17299)[0m     @     0x7f162a26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17299)[0m     @     0x7f162a26ab53 at::TensorIterator::for_each()
[2m[36m(pid=17299)[0m     @     0x7f162a26ae11 at::TensorIterator::for_each()
[2m[36m(pid=17301)[0m     @     0x7fb20a2cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17301)[0m     @     0x7fb20a2ccb53 at::TensorIterator::for_each()
[2m[36m(pid=17301)[0m     @     0x7fb20a2cce11 at::TensorIterator::for_each()
[2m[36m(pid=17301)[0m     @     0x7fb20cfe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17322)[0m     @     0x7f8468f24989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17322)[0m     @     0x7f84672255cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17322)[0m     @     0x7f846732d148 at::Tensor::copy_()
[2m[36m(pid=17322)[0m     @     0x7f846d5e3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17322)[0m     @     0x5603d7e7dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17322)[0m     @     0x5603d7dd8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17322)[0m     @     0x5603d7e63baf _PyEval_EvalCodeWithName
[2m[36m(pid=17322)[0m     @     0x5603d7e64a20 method_vectorcall
[2m[36m(pid=17322)[0m     @     0x5603d7dd8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17322)[0m     @     0x5603d7e63baf _PyEval_EvalCodeWithName
[2m[36m(pid=17322)[0m     @     0x5603d7e64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17322)[0m     @     0x5603d7dd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x7fb8cecbfe11 at::TensorIterator::for_each()
[2m[36m(pid=17325)[0m     @     0x7fb8d19d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17325)[0m     @     0x7fb8d19fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17325)[0m     @     0x7fb8cea39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17325)[0m     @     0x7fb8cea37c3f at::native::copy_impl()
[2m[36m(pid=17418)[0m     @     0x7f38b99d5e11 at::TensorIterator::for_each()
[2m[36m(pid=17418)[0m     @     0x7f38bc6eec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17418)[0m     @     0x7f38bc711cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17418)[0m     @     0x7f38b974f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17418)[0m     @     0x7f38b974dc3f at::native::copy_impl()
[2m[36m(pid=17336)[0m     @     0x7f36781df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17336)[0m     @     0x7f36781e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17336)[0m     @     0x7f36781e2b53 at::TensorIterator::for_each()
[2m[36m(pid=17353)[0m     @     0x7f055bce2b53 at::TensorIterator::for_each()
[2m[36m(pid=17353)[0m     @     0x7f055bce2e11 at::TensorIterator::for_each()
[2m[36m(pid=17353)[0m     @     0x7f055e9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17353)[0m     @     0x7f055ea1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17292)[0m     @     0x7f6d1f063e11 at::TensorIterator::for_each()
[2m[36m(pid=17292)[0m     @     0x7f6d21d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17292)[0m     @     0x7f6d21d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17292)[0m     @     0x7f6d1eddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17292)[0m     @     0x7f6d1eddbc3f at::native::copy_impl()
[2m[36m(pid=17335)[0m     @     0x7fc43ae71390 (unknown)
[2m[36m(pid=17335)[0m     @     0x7f953d078fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17335)[0m     @     0x7f953a36c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17335)[0m     @     0x7f953a36f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17335)[0m     @     0x7f953a36fb53 at::TensorIterator::for_each()
[2m[36m(pid=17310)[0m     @     0x7f964f304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17310)[0m     @     0x7f964f302c3f at::native::copy_impl()
[2m[36m(pid=17310)[0m     @     0x7f964f303ed4 at::native::copy_()
[2m[36m(pid=17350)[0m     @     0x7fb5285f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17350)[0m     @     0x7fb525633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17350)[0m     @     0x7fb525631c3f at::native::copy_impl()
[2m[36m(pid=17424)[0m     @     0x7f1840aede11 at::TensorIterator::for_each()
[2m[36m(pid=17424)[0m     @     0x7f1843806c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17424)[0m     @     0x7f1843829cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17326)[0m     @     0x7f6eb45d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17326)[0m     @     0x7f6eb45f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17326)[0m     @     0x7f6eb1633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17326)[0m     @     0x7f6eb1631c3f at::native::copy_impl()
[2m[36m(pid=17340)[0m     @     0x7fb19d0d0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17340)[0m     @     0x7fb19a10e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17340)[0m     @     0x7fb19a10cc3f at::native::copy_impl()
[2m[36m(pid=17395)[0m     @     0x7eec385d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17395)[0m     @     0x7eec385f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17395)[0m     @     0x7eec35633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17395)[0m     @     0x7eec35631c3f at::native::copy_impl()
[2m[36m(pid=17419)[0m     @     0x7ede7c7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17419)[0m     @     0x7ede797e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17419)[0m     @     0x7ede797dfc3f at::native::copy_impl()
[2m[36m(pid=17306)[0m     @     0x7ed6145f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17306)[0m     @     0x7ed611633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17306)[0m     @     0x7ed611631c3f at::native::copy_impl()
[2m[36m(pid=17305)[0m     @     0x7f32efeb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17305)[0m     @     0x7f32efeb7c3f at::native::copy_impl()
[2m[36m(pid=17305)[0m     @     0x7f32efeb8ed4 at::native::copy_()
[2m[36m(pid=17303)[0m     @     0x7f0a7a4aac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17303)[0m     @     0x7f0a7a4cdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17303)[0m     @     0x7f0a7750b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17303)[0m     @     0x7f0a77509c3f at::native::copy_impl()
[2m[36m(pid=17356)[0m     @     0x7ed58650fc3f at::native::copy_impl()
[2m[36m(pid=17356)[0m     @     0x7ed586510ed4 at::native::copy_()
[2m[36m(pid=17356)[0m     @     0x7ed586c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17288)[0m     @     0x7f0c5547b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17288)[0m     @     0x7f0c55479c3f at::native::copy_impl()
[2m[36m(pid=17288)[0m     @     0x7f0c5547aed4 at::native::copy_()
[2m[36m(pid=17288)[0m     @     0x7f0c55bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17302)[0m     @     0x7f648a8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17302)[0m     @     0x7f64878f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17302)[0m     @     0x7f64878f4c3f at::native::copy_impl()
[2m[36m(pid=17302)[0m     @     0x7f64878f5ed4 at::native::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53ef627148 at::Tensor::copy_()
[2m[36m(pid=17352)[0m     @     0x7f53f58ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17352)[0m     @     0x55c47b681fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17352)[0m     @     0x55c47b5dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17352)[0m     @     0x55c47b667baf _PyEval_EvalCodeWithName
[2m[36m(pid=17352)[0m     @     0x55c47b668a20 method_vectorcall
[2m[36m(pid=17352)[0m     @     0x55c47b5dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17352)[0m     @     0x55c47b667baf _PyEval_EvalCodeWithName
[2m[36m(pid=17352)[0m     @     0x55c47b668643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17352)[0m     @     0x55c47b5dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17352)[0m     @     0x55c47b667baf _PyEval_EvalCodeWithName
[2m[36m(pid=17352)[0m     @     0x55c47b668643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17352)[0m     @     0x55c47b5dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17352)[0m     @     0x55c47b667baf _PyEval_EvalCodeWithName
[2m[36m(pid=17352)[0m     @     0x55c47b668643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17352)[0m     @     0x55c47b5dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17352)[0m     @     0x55c47b667baf _PyEval_EvalCodeWithName
[2m[36m(pid=17399)[0m     @     0x5572f508fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17399)[0m     @     0x5572f5090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17399)[0m     @     0x5572f5005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17399)[0m     @     0x5572f508fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17399)[0m     @     0x5572f5090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17399)[0m     @     0x5572f5005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17399)[0m     @     0x5572f508fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17399)[0m     @     0x5572f5090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17399)[0m     @     0x5572f5005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17399)[0m     @     0x5572f508fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x7f0d110ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed072f505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17358)[0m     @     0x7ed073058148 at::Tensor::copy_()
[2m[36m(pid=17358)[0m     @     0x7ed07930ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17358)[0m     @     0x559e65548fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17358)[0m     @     0x559e654a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17358)[0m     @     0x559e6552ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17358)[0m     @     0x559e6552fa20 method_vectorcall
[2m[36m(pid=17358)[0m     @     0x559e654a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17358)[0m     @     0x559e6552ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17358)[0m     @     0x559e6552f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17358)[0m     @     0x559e654a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17358)[0m     @     0x559e6552ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17358)[0m     @     0x559e6552f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17358)[0m     @     0x559e654a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17358)[0m     @     0x559e6552ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17358)[0m     @     0x559e6552f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17358)[0m     @     0x559e654a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17358)[0m     @     0x559e6552ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x7f195ba47977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17346)[0m     @     0x7f195ba47b53 at::TensorIterator::for_each()
[2m[36m(pid=17346)[0m     @     0x7f195ba47e11 at::TensorIterator::for_each()
[2m[36m(pid=17320)[0m     @     0x7ed03ee4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17320)[0m     @     0x7ed03ee4cb53 at::TensorIterator::for_each()
[2m[36m(pid=17327)[0m     @     0x7ecd70412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17327)[0m     @     0x7ecd70412b53 at::TensorIterator::for_each()
[2m[36m(pid=17327)[0m     @     0x7ecd70412e11 at::TensorIterator::for_each()
[2m[36m(pid=17378)[0m     @     0x7f5a4df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=17378)[0m     @     0x7f5a4df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=17378)[0m     @     0x7f5a50ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17378)[0m     @     0x7f5a50ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17378)[0m     @     0x7f5a4dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17287)[0m     @     0x7f78adf7e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17287)[0m     @     0x7f78adf81977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17401)[0m     @     0x7f0707b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=17401)[0m     @     0x7f0707b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=17401)[0m     @     0x7f070a895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17401)[0m     @     0x7f070a8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17401)[0m     @     0x7f07078f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17362)[0m     @     0x7f21fcc62b53 at::TensorIterator::for_each()
[2m[36m(pid=17362)[0m     @     0x7f21fcc62e11 at::TensorIterator::for_each()
[2m[36m(pid=17362)[0m     @     0x7f21ff97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17362)[0m     @     0x7f21ff99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17409)[0m     @     0x7f4eb8b52b53 at::TensorIterator::for_each()
[2m[36m(pid=17409)[0m     @     0x7f4eb8b52e11 at::TensorIterator::for_each()
[2m[36m(pid=17409)[0m     @     0x7f4ebb86bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17409)[0m     @     0x7f4ebb88ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17344)[0m     @     0x7f24f1392e11 at::TensorIterator::for_each()
[2m[36m(pid=17344)[0m     @     0x7f24f40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17344)[0m     @     0x7f24f40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17344)[0m     @     0x7f24f110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17344)[0m     @     0x7f24f110ac3f at::native::copy_impl()
[2m[36m(pid=17387)[0m     @     0x7f0499226148 at::Tensor::copy_()
[2m[36m(pid=17387)[0m     @     0x7f049f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17387)[0m     @     0x55fce7a38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17387)[0m     @     0x55fce7993b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17387)[0m     @     0x55fce7a1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17387)[0m     @     0x55fce7a1fa20 method_vectorcall
[2m[36m(pid=17387)[0m     @     0x55fce7993bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17387)[0m     @     0x55fce7a1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17387)[0m     @     0x55fce7a1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17387)[0m     @     0x55fce7994689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17387)[0m     @     0x55fce7a1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17387)[0m     @     0x55fce7a1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17387)[0m     @     0x55fce7994689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17387)[0m     @     0x55fce7a1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17387)[0m     @     0x55fce7a1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17387)[0m     @     0x55fce7994689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17387)[0m     @     0x55fce7a1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17416)[0m     @     0x56405e18cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17416)[0m     @     0x56405e0e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17416)[0m     @     0x56405e172baf _PyEval_EvalCodeWithName
[2m[36m(pid=17416)[0m     @     0x56405e173a20 method_vectorcall
[2m[36m(pid=17416)[0m     @     0x56405e0e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17416)[0m     @     0x56405e172baf _PyEval_EvalCodeWithName
[2m[36m(pid=17416)[0m     @     0x56405e173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17416)[0m     @     0x56405e0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17416)[0m     @     0x56405e172baf _PyEval_EvalCodeWithName
[2m[36m(pid=17416)[0m     @     0x56405e173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17416)[0m     @     0x56405e0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17416)[0m     @     0x56405e172baf _PyEval_EvalCodeWithName
[2m[36m(pid=17416)[0m     @     0x56405e173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17416)[0m     @     0x56405e0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17416)[0m     @     0x56405e172baf _PyEval_EvalCodeWithName
[2m[36m(pid=17365)[0m     @     0x7f1d00b55148 at::Tensor::copy_()
[2m[36m(pid=17365)[0m     @     0x7f1d06e0bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17365)[0m     @     0x55abf7527fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17365)[0m     @     0x55abf7482b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17365)[0m     @     0x55abf750dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17365)[0m     @     0x55abf750ea20 method_vectorcall
[2m[36m(pid=17365)[0m     @     0x55abf7482bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17365)[0m     @     0x55abf750dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17365)[0m     @     0x55abf750e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17365)[0m     @     0x55abf7483689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17365)[0m     @     0x55abf750dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17365)[0m     @     0x55abf750e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17365)[0m     @     0x55abf7483689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17365)[0m     @     0x55abf750dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17365)[0m     @     0x55abf750e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17365)[0m     @     0x55abf7483689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17365)[0m     @     0x55abf750dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x7f72070b4148 at::Tensor::copy_()
[2m[36m(pid=17421)[0m     @     0x7f720d36abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17421)[0m     @     0x557482a09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17421)[0m     @     0x557482964b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17421)[0m     @     0x5574829efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x5574829f0a20 method_vectorcall
[2m[36m(pid=17421)[0m     @     0x557482964bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17421)[0m     @     0x5574829efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x5574829f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17421)[0m     @     0x557482965689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17421)[0m     @     0x5574829efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x5574829f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17421)[0m     @     0x557482965689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17421)[0m     @     0x5574829efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17421)[0m     @     0x5574829f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17421)[0m     @     0x557482965689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17421)[0m     @     0x5574829efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17381)[0m     @     0x7f9115015148 at::Tensor::copy_()
[2m[36m(pid=17381)[0m     @     0x7f911b2cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17381)[0m     @     0x55b4b91a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17381)[0m     @     0x55b4b90feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17381)[0m     @     0x55b4b9189baf _PyEval_EvalCodeWithName
[2m[36m(pid=17381)[0m     @     0x55b4b918aa20 method_vectorcall
[2m[36m(pid=17381)[0m     @     0x55b4b90febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17381)[0m     @     0x55b4b9189baf _PyEval_EvalCodeWithName
[2m[36m(pid=17381)[0m     @     0x55b4b918a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17381)[0m     @     0x55b4b90ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17381)[0m     @     0x55b4b9189baf _PyEval_EvalCodeWithName
[2m[36m(pid=17381)[0m     @     0x55b4b918a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17381)[0m     @     0x55b4b90ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17381)[0m     @     0x55b4b9189baf _PyEval_EvalCodeWithName
[2m[36m(pid=17381)[0m     @     0x55b4b918a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17381)[0m     @     0x55b4b90ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17381)[0m     @     0x55b4b9189baf _PyEval_EvalCodeWithName
[2m[36m(pid=17295)[0m     @     0x7f46e95a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17295)[0m     @     0x7f46e959fc3f at::native::copy_impl()
[2m[36m(pid=17295)[0m     @     0x7f46e95a0ed4 at::native::copy_()
[2m[36m(pid=17295)[0m     @     0x7f46e9ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17374)[0m     @     0x7f36f35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17374)[0m     @     0x559e95f66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17374)[0m     @     0x559e95ec1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17374)[0m     @     0x559e95f4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17374)[0m     @     0x559e95f4da20 method_vectorcall
[2m[36m(pid=17374)[0m     @     0x559e95ec1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17374)[0m     @     0x559e95f4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17374)[0m     @     0x559e95f4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17374)[0m     @     0x559e95ec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17374)[0m     @     0x559e95f4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17374)[0m     @     0x559e95f4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17374)[0m     @     0x559e95ec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17374)[0m     @     0x559e95f4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17374)[0m     @     0x559e95f4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17374)[0m     @     0x559e95ec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17374)[0m     @     0x559e95f4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x7f1ac0ef4ed4 at::native::copy_()
[2m[36m(pid=17296)[0m     @     0x7f1ac16375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17373)[0m     @     0x7fa4b808ac3f at::native::copy_impl()
[2m[36m(pid=17373)[0m     @     0x7fa4b808bed4 at::native::copy_()
[2m[36m(pid=17373)[0m     @     0x7fa4b87ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17293)[0m     @     0x7f931a17b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17293)[0m     @     0x7f931a179c3f at::native::copy_impl()
[2m[36m(pid=17293)[0m     @     0x7f931a17aed4 at::native::copy_()
[2m[36m(pid=17304)[0m     @     0x7f9141b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17304)[0m     @     0x7f913ebc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17304)[0m     @     0x7f913ebc4c3f at::native::copy_impl()
[2m[36m(pid=17304)[0m     @     0x7f913ebc5ed4 at::native::copy_()
[2m[36m(pid=17342)[0m     @     0x7fac9051a148 at::Tensor::copy_()
[2m[36m(pid=17342)[0m     @     0x7fac967d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17342)[0m     @     0x562d3571bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17342)[0m     @     0x562d35676b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17342)[0m     @     0x562d35701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17342)[0m     @     0x562d35702a20 method_vectorcall
[2m[36m(pid=17342)[0m     @     0x562d35676bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17342)[0m     @     0x562d35701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17342)[0m     @     0x562d35702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17342)[0m     @     0x562d35677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17342)[0m     @     0x562d35701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17342)[0m     @     0x562d35702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17342)[0m     @     0x562d35677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17342)[0m     @     0x562d35701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17342)[0m     @     0x562d35702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17342)[0m     @     0x562d35677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17342)[0m     @     0x562d35701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x7f8117e49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17370)[0m     @     0x7f8114e87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17370)[0m     @     0x7f8114e85c3f at::native::copy_impl()
[2m[36m(pid=17370)[0m     @     0x7f8114e86ed4 at::native::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48e903a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17312)[0m     @     0x7f48e9038c3f at::native::copy_impl()
[2m[36m(pid=17312)[0m     @     0x7f48e9039ed4 at::native::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48e977c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17372)[0m     @     0x7f9ec21b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17372)[0m     @     0x7f9ec22c0148 at::Tensor::copy_()
[2m[36m(pid=17372)[0m     @     0x7f9ec8576bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17372)[0m     @     0x55b4f0b07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17372)[0m     @     0x55b4f0a62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17372)[0m     @     0x55b4f0aedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17372)[0m     @     0x55b4f0aeea20 method_vectorcall
[2m[36m(pid=17372)[0m     @     0x55b4f0a62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17372)[0m     @     0x55b4f0aedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17372)[0m     @     0x55b4f0aee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17372)[0m     @     0x55b4f0a63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17372)[0m     @     0x55b4f0aedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17372)[0m     @     0x55b4f0aee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17372)[0m     @     0x55b4f0a63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17372)[0m     @     0x55b4f0aedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17372)[0m     @     0x55b4f0aee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17372)[0m     @     0x55b4f0a63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17372)[0m     @     0x55b4f0aedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x7f60fa89a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17308)[0m     @     0x7f60fa898c3f at::native::copy_impl()
[2m[36m(pid=17308)[0m     @     0x7f60fa899ed4 at::native::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e79fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17289)[0m     @     0x7f7e79fe2c3f at::native::copy_impl()
[2m[36m(pid=17289)[0m     @     0x7f7e79fe3ed4 at::native::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e7a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17297)[0m     @     0x7f84c240bed4 at::native::copy_()
[2m[36m(pid=17297)[0m     @     0x7f84c2b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17297)[0m     @     0x7f84c2c56148 at::Tensor::copy_()
[2m[36m(pid=17394)[0m     @     0x7f654a1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17394)[0m     @     0x7f654a1f9c3f at::native::copy_impl()
[2m[36m(pid=17394)[0m     @     0x7f654a1faed4 at::native::copy_()
[2m[36m(pid=17318)[0m     @     0x7fa8517e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17318)[0m     @     0x7fa8517dfc3f at::native::copy_impl()
[2m[36m(pid=17318)[0m     @     0x7fa8517e0ed4 at::native::copy_()
[2m[36m(pid=17290)[0m     @     0x7f6c87c45009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17290)[0m     @     0x7f6c87c43c3f at::native::copy_impl()
[2m[36m(pid=17290)[0m     @     0x7f6c87c44ed4 at::native::copy_()
[2m[36m(pid=17290)[0m     @     0x7f6c883875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17321)[0m     @     0x7f5f1f6cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17321)[0m     @     0x7f5f1f6c9c3f at::native::copy_impl()
[2m[36m(pid=17321)[0m     @     0x7f5f1f6caed4 at::native::copy_()
[2m[36m(pid=17369)[0m     @     0x7f0dd57e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17369)[0m     @     0x7f0dd57dfc3f at::native::copy_impl()
[2m[36m(pid=17369)[0m     @     0x7f0dd57e0ed4 at::native::copy_()
[2m[36m(pid=17338)[0m     @     0x7fb43f849c3f at::native::copy_impl()
[2m[36m(pid=17338)[0m     @     0x7fb43f84aed4 at::native::copy_()
[2m[36m(pid=17338)[0m     @     0x7fb43ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17404)[0m     @     0x7f00af7d1b53 at::TensorIterator::for_each()
[2m[36m(pid=17404)[0m     @     0x7f00af7d1e11 at::TensorIterator::for_each()
[2m[36m(pid=17404)[0m     @     0x7f00b24eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17404)[0m     @     0x7f00b250dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17404)[0m     @     0x7f00af54b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17382)[0m     @     0x7fa4ecb2de11 at::TensorIterator::for_each()
[2m[36m(pid=17382)[0m     @     0x7fa4ef846c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17382)[0m     @     0x7fa4ef869cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17382)[0m     @     0x7fa4ec8a7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17371)[0m     @     0x7eebac237009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17371)[0m     @     0x7eebac235c3f at::native::copy_impl()
[2m[36m(pid=17371)[0m     @     0x7eebac236ed4 at::native::copy_()
[2m[36m(pid=17300)[0m     @     0x7ece5ef8ec3f at::native::copy_impl()
[2m[36m(pid=17300)[0m     @     0x7ece5ef8fed4 at::native::copy_()
[2m[36m(pid=17291)[0m     @     0x7f04feb3bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17291)[0m     @     0x7f04fbb79009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17291)[0m     @     0x7f04fbb77c3f at::native::copy_impl()
[2m[36m(pid=17361)[0m     @     0x7ecec8a51e11 at::TensorIterator::for_each()
[2m[36m(pid=17361)[0m     @     0x7ececb76ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17361)[0m     @     0x7ececb78dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17286)[0m     @     0x7f4c50ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17286)[0m     @     0x7f4c50adfc3f at::native::copy_impl()
[2m[36m(pid=17286)[0m     @     0x7f4c50ae0ed4 at::native::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cb459eed4 at::native::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cb4ce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17299)[0m     @     0x7f162cf83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17299)[0m     @     0x7f162cfa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17299)[0m     @     0x7f1629fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17299)[0m     @     0x7f1629fe2c3f at::native::copy_impl()
[2m[36m(pid=17301)[0m     @     0x7fb20d008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17301)[0m     @     0x7fb20a046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17301)[0m     @     0x7fb20a044c3f at::native::copy_impl()
[2m[36m(pid=17322)[0m     @     0x5603d7e63baf _PyEval_EvalCodeWithName
[2m[36m(pid=17322)[0m     @     0x5603d7e64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17322)[0m     @     0x5603d7dd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17322)[0m     @     0x5603d7e63baf _PyEval_EvalCodeWithName
[2m[36m(pid=17322)[0m     @     0x5603d7e64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17322)[0m     @     0x5603d7dd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17322)[0m     @     0x5603d7e63baf _PyEval_EvalCodeWithName
[2m[36m(pid=17325)[0m     @     0x7fb8cea38ed4 at::native::copy_()
[2m[36m(pid=17325)[0m     @     0x7fb8cf17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17325)[0m     @     0x7fb8cf283148 at::Tensor::copy_()
[2m[36m(pid=17325)[0m     @     0x7fb8d0e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38b974eed4 at::native::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38b9e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17336)[0m     @     0x7f36781e2e11 at::TensorIterator::for_each()
[2m[36m(pid=17336)[0m     @     0x7f367aefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17336)[0m     @     0x7f367af1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17336)[0m     @     0x7f3677f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17336)[0m     @     0x7f3677f5ac3f at::native::copy_impl()
[2m[36m(pid=17353)[0m     @     0x7f055ba5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17353)[0m     @     0x7f055ba5ac3f at::native::copy_impl()
[2m[36m(pid=17353)[0m     @     0x7f055ba5bed4 at::native::copy_()
[2m[36m(pid=17353)[0m     @     0x7f055c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17292)[0m     @     0x7f6d1eddced4 at::native::copy_()
[2m[36m(pid=17292)[0m     @     0x7f6d1f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17292)[0m     @     0x7f6d1f627148 at::Tensor::copy_()
[2m[36m(pid=17335)[0m     @     0x7f953a36fe11 at::TensorIterator::for_each()
[2m[36m(pid=17335)[0m     @     0x7f953d088c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17335)[0m     @     0x7f953d0abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17335)[0m     @     0x7f953a0e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17335)[0m     @     0x7f953a0e7c3f at::native::copy_impl()
[2m[36m(pid=17310)[0m     @     0x7f964fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17310)[0m     @     0x7f964fb4e148 at::Tensor::copy_()
[2m[36m(pid=17310)[0m     @     0x7f9651745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17310)[0m     @     0x7f964fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17350)[0m     @     0x7fb525632ed4 at::native::copy_()
[2m[36m(pid=17350)[0m     @     0x7fb525d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17350)[0m     @     0x7fb525e7d148 at::Tensor::copy_()
[2m[36m(pid=17350)[0m     @     0x7fb527a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17424)[0m     @     0x7f1840867009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17424)[0m     @     0x7f1840865c3f at::native::copy_impl()
[2m[36m(pid=17424)[0m     @     0x7f1840866ed4 at::native::copy_()
[2m[36m(pid=17424)[0m     @     0x7f1840fa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17326)[0m     @     0x7f6eb1632ed4 at::native::copy_()
[2m[36m(pid=17326)[0m     @     0x7f6eb1d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17326)[0m     @     0x7f6eb1e7d148 at::Tensor::copy_()
[2m[36m(pid=17340)[0m     @     0x7fb19a10ded4 at::native::copy_()
[2m[36m(pid=17340)[0m     @     0x7fb19a8505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17340)[0m     @     0x7fb19a958148 at::Tensor::copy_()
[2m[36m(pid=17395)[0m     @     0x7eec35632ed4 at::native::copy_()
[2m[36m(pid=17395)[0m     @     0x7eec35d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17395)[0m     @     0x7eec35e7d148 at::Tensor::copy_()
[2m[36m(pid=17419)[0m     @     0x7ede797e0ed4 at::native::copy_()
[2m[36m(pid=17419)[0m     @     0x7ede79f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17419)[0m     @     0x7ede7a02b148 at::Tensor::copy_()
[2m[36m(pid=17306)[0m     @     0x7ed611632ed4 at::native::copy_()
[2m[36m(pid=17306)[0m     @     0x7ed611d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17305)[0m     @     0x7f32f05fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17305)[0m     @     0x7f32f0703148 at::Tensor::copy_()
[2m[36m(pid=17305)[0m     @     0x7f32f22fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17305)[0m     @     0x7f32f05fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17303)[0m     @     0x7f0a7750aed4 at::native::copy_()
[2m[36m(pid=17303)[0m     @     0x7f0a77c4d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17356)[0m     @     0x7ed586d5b148 at::Tensor::copy_()
[2m[36m(pid=17356)[0m     @     0x7ed588952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17356)[0m     @     0x7ed586c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17288)[0m     @     0x7f0c55cc5148 at::Tensor::copy_()
[2m[36m(pid=17288)[0m     @     0x7f0c578bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17288)[0m     @     0x7f0c55bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17302)[0m     @     0x7f64880385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17302)[0m     @     0x7f6488140148 at::Tensor::copy_()
[2m[36m(pid=17302)[0m     @     0x7f6489d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17414)[0m     @     0x7f0d0f3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17414)[0m     @     0x7f0d0f4f7148 at::Tensor::copy_()
[2m[36m(pid=17346)[0m     @     0x7f195e760c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17346)[0m     @     0x7f195e783cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17346)[0m     @     0x7f195b7c1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17346)[0m     @     0x7f195b7bfc3f at::native::copy_impl()
[2m[36m(pid=17320)[0m     @     0x7ed03ee4ce11 at::TensorIterator::for_each()
[2m[36m(pid=17320)[0m     @     0x7ed041b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17320)[0m     @     0x7ed041b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17327)[0m     @     0x7ecd7312bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17327)[0m     @     0x7ecd7314ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17327)[0m     @     0x7ecd7018c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17327)[0m     @     0x7ecd7018ac3f at::native::copy_impl()
[2m[36m(pid=17378)[0m     @     0x7f5a4dd07c3f at::native::copy_impl()
[2m[36m(pid=17378)[0m     @     0x7f5a4dd08ed4 at::native::copy_()
[2m[36m(pid=17378)[0m     @     0x7f5a4e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17334)[0m     @     0x7f317d5bb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=17287)[0m     @     0x7f78adf81b53 at::TensorIterator::for_each()
[2m[36m(pid=17287)[0m     @     0x7f78adf81e11 at::TensorIterator::for_each()
[2m[36m(pid=17401)[0m     @     0x7f07078f4c3f at::native::copy_impl()
[2m[36m(pid=17401)[0m     @     0x7f07078f5ed4 at::native::copy_()
[2m[36m(pid=17401)[0m     @     0x7f07080385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17362)[0m     @     0x7f21fc9dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17362)[0m     @     0x7f21fc9dac3f at::native::copy_impl()
[2m[36m(pid=17362)[0m     @     0x7f21fc9dbed4 at::native::copy_()
[2m[36m(pid=17409)[0m     @     0x7f4eb88cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17409)[0m     @     0x7f4eb88cac3f at::native::copy_impl()
[2m[36m(pid=17409)[0m     @     0x7f4eb88cbed4 at::native::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f110bed4 at::native::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17295)[0m     @     0x7f46e9deb148 at::Tensor::copy_()
[2m[36m(pid=17295)[0m     @     0x7f46eb9e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17295)[0m     @     0x7f46e9ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17296)[0m     @     0x7f1ac173f148 at::Tensor::copy_()
[2m[36m(pid=17296)[0m     @     0x7f1ac3336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17296)[0m     @     0x7f1ac16375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17373)[0m     @     0x7fa4b88d6148 at::Tensor::copy_()
[2m[36m(pid=17373)[0m     @     0x7fa4ba4cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17373)[0m     @     0x7fa4b87ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17293)[0m     @     0x7f931a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17293)[0m     @     0x7f931a9c5148 at::Tensor::copy_()
[2m[36m(pid=17293)[0m     @     0x7f931c5bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17304)[0m     @     0x7f913f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17304)[0m     @     0x7f913f410148 at::Tensor::copy_()
[2m[36m(pid=17304)[0m     @     0x7f9141007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17370)[0m     @     0x7f81155c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17370)[0m     @     0x7f81156d1148 at::Tensor::copy_()
[2m[36m(pid=17370)[0m     @     0x7f81172c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48e9884148 at::Tensor::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48eb47b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48e977c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17308)[0m     @     0x7f60fafdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17308)[0m     @     0x7f60fb0e4148 at::Tensor::copy_()
[2m[36m(pid=17308)[0m     @     0x7f60fccdb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e7a82e148 at::Tensor::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e7c425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e7a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17297)[0m     @     0x7f84c484d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17297)[0m     @     0x7f84c2b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17297)[0m     @     0x7f84c2c56148 at::Tensor::copy_()
[2m[36m(pid=17297)[0m     @     0x7f84c8f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17297)[0m     @     0x55d271c78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17297)[0m     @     0x55d271bd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17297)[0m     @     0x55d271c5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17297)[0m     @     0x55d271c5fa20 method_vectorcall
[2m[36m(pid=17297)[0m     @     0x55d271bd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17297)[0m     @     0x55d271c5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17297)[0m     @     0x55d271c5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17297)[0m     @     0x55d271bd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17297)[0m     @     0x55d271c5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17297)[0m     @     0x55d271c5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17297)[0m     @     0x55d271bd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17297)[0m     @     0x55d271c5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17297)[0m     @     0x55d271c5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17297)[0m     @     0x55d271bd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17297)[0m     @     0x55d271c5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x7f654a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17394)[0m     @     0x7f654aa45148 at::Tensor::copy_()
[2m[36m(pid=17394)[0m     @     0x7f654c63c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17394)[0m     @     0x7f654a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17318)[0m     @     0x7fa851f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17318)[0m     @     0x7fa85202b148 at::Tensor::copy_()
[2m[36m(pid=17318)[0m     @     0x7fa853c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17318)[0m     @     0x7fa851f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17290)[0m     @     0x7f6c8848f148 at::Tensor::copy_()
[2m[36m(pid=17290)[0m     @     0x7f6c8a086989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17290)[0m     @     0x7f6c883875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17321)[0m     @     0x7f5f1fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17321)[0m     @     0x7f5f1ff15148 at::Tensor::copy_()
[2m[36m(pid=17321)[0m     @     0x7f5f21b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17321)[0m     @     0x7f5f1fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17369)[0m     @     0x7f0dd5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17369)[0m     @     0x7f0dd602b148 at::Tensor::copy_()
[2m[36m(pid=17369)[0m     @     0x7f0dd7c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17369)[0m     @     0x7f0dd5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17338)[0m     @     0x7fb440095148 at::Tensor::copy_()
[2m[36m(pid=17338)[0m     @     0x7fb441c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17338)[0m     @     0x7fb43ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17338)[0m     @     0x7fb440095148 at::Tensor::copy_()
[2m[36m(pid=17404)[0m     @     0x7f00af549c3f at::native::copy_impl()
[2m[36m(pid=17404)[0m     @     0x7f00af54aed4 at::native::copy_()
[2m[36m(pid=17404)[0m     @     0x7f00afc8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17382)[0m     @     0x7fa4ec8a5c3f at::native::copy_impl()
[2m[36m(pid=17382)[0m     @     0x7fa4ec8a6ed4 at::native::copy_()
[2m[36m(pid=17382)[0m     @     0x7fa4ecfe95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17371)[0m     @     0x7eebac9795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17371)[0m     @     0x7eebaca81148 at::Tensor::copy_()
[2m[36m(pid=17371)[0m     @     0x7eebae678989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17371)[0m     @     0x7eebac9795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17300)[0m     @     0x7ece5f6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17300)[0m     @     0x7ece5f7da148 at::Tensor::copy_()
[2m[36m(pid=17300)[0m     @     0x7ece613d1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17300)[0m     @     0x7ece5f6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17291)[0m     @     0x7f04fbb78ed4 at::native::copy_()
[2m[36m(pid=17291)[0m     @     0x7f04fc2bb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17291)[0m     @     0x7f04fc3c3148 at::Tensor::copy_()
[2m[36m(pid=17291)[0m     @     0x7f04fdfba989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17361)[0m     @     0x7ecec87cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17361)[0m     @     0x7ecec87c9c3f at::native::copy_impl()
[2m[36m(pid=17361)[0m     @     0x7ecec87caed4 at::native::copy_()
[2m[36m(pid=17286)[0m     @     0x7f4c512235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17286)[0m     @     0x7f4c5132b148 at::Tensor::copy_()
[2m[36m(pid=17286)[0m     @     0x7f4c52f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cb4de9148 at::Tensor::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cb69e0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cb4ce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17299)[0m     @     0x7f1629fe3ed4 at::native::copy_()
[2m[36m(pid=17299)[0m     @     0x7f162a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17301)[0m     @     0x7fb20a045ed4 at::native::copy_()
[2m[36m(pid=17301)[0m     @     0x7fb20a7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17301)[0m     @     0x7fb20a890148 at::Tensor::copy_()
[2m[36m(pid=17325)[0m     @     0x7fb8cf17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17325)[0m     @     0x7fb8cf283148 at::Tensor::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38b9f99148 at::Tensor::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38bbb90989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38b9e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17336)[0m     @     0x7f3677f5bed4 at::native::copy_()
[2m[36m(pid=17336)[0m     @     0x7f367869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17353)[0m     @     0x7f055c2a6148 at::Tensor::copy_()
[2m[36m(pid=17353)[0m     @     0x7f055de9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17353)[0m     @     0x7f055c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17292)[0m     @     0x7f6d2121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17292)[0m     @     0x7f6d1f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17335)[0m     @     0x7f953a0e8ed4 at::native::copy_()
[2m[36m(pid=17335)[0m     @     0x7f953a82b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17310)[0m     @     0x7f964fb4e148 at::Tensor::copy_()
[2m[36m(pid=17310)[0m     @     0x7f9655e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17310)[0m     @     0x55f45f71bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17310)[0m     @     0x55f45f676b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17310)[0m     @     0x55f45f701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17310)[0m     @     0x55f45f702a20 method_vectorcall
[2m[36m(pid=17310)[0m     @     0x55f45f676bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17310)[0m     @     0x55f45f701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17310)[0m     @     0x55f45f702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17310)[0m     @     0x55f45f677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17310)[0m     @     0x55f45f701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17310)[0m     @     0x55f45f702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17310)[0m     @     0x55f45f677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17310)[0m     @     0x55f45f701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17310)[0m     @     0x55f45f702643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17310)[0m     @     0x55f45f677689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17310)[0m     @     0x55f45f701baf _PyEval_EvalCodeWithName
[2m[36m(pid=17350)[0m     @     0x7fb525d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17350)[0m     @     0x7fb525e7d148 at::Tensor::copy_()
[2m[36m(pid=17424)[0m     @     0x7f18410b1148 at::Tensor::copy_()
[2m[36m(pid=17424)[0m     @     0x7f1842ca8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17424)[0m     @     0x7f1840fa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17326)[0m     @     0x7f6eb3a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17326)[0m     @     0x7f6eb1d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17340)[0m     @     0x7fb19c54f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17340)[0m     @     0x7fb19a8505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17395)[0m     @     0x7eec37a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17395)[0m     @     0x7eec35d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17419)[0m     @     0x7ede7bc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17419)[0m     @     0x7ede79f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17306)[0m     @     0x7ed611e7d148 at::Tensor::copy_()
[2m[36m(pid=17306)[0m     @     0x7ed613a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17305)[0m     @     0x7f32f0703148 at::Tensor::copy_()
[2m[36m(pid=17305)[0m     @     0x7f32f69b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17305)[0m     @     0x55702ea99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17305)[0m     @     0x55702e9f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17305)[0m     @     0x55702ea7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17305)[0m     @     0x55702ea80a20 method_vectorcall
[2m[36m(pid=17305)[0m     @     0x55702e9f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17305)[0m     @     0x55702ea7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17305)[0m     @     0x55702ea80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17305)[0m     @     0x55702e9f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17305)[0m     @     0x55702ea7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17305)[0m     @     0x55702ea80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17305)[0m     @     0x55702e9f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17305)[0m     @     0x55702ea7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17305)[0m     @     0x55702ea80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17305)[0m     @     0x55702e9f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17305)[0m     @     0x55702ea7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x7f0a77d55148 at::Tensor::copy_()
[2m[36m(pid=17303)[0m     @     0x7f0a7994c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17303)[0m     @     0x7f0a77c4d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17303)[0m     @     0x7f0a77d55148 at::Tensor::copy_()
[2m[36m(pid=17356)[0m     @     0x7ed586d5b148 at::Tensor::copy_()
[2m[36m(pid=17356)[0m     @     0x7ed58d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17356)[0m     @     0x558c1f178fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17356)[0m     @     0x558c1f0d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17356)[0m     @     0x558c1f15ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17356)[0m     @     0x558c1f15fa20 method_vectorcall
[2m[36m(pid=17356)[0m     @     0x558c1f0d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17356)[0m     @     0x558c1f15ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17356)[0m     @     0x558c1f15f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17356)[0m     @     0x558c1f0d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17356)[0m     @     0x558c1f15ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17356)[0m     @     0x558c1f15f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17356)[0m     @     0x558c1f0d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17356)[0m     @     0x558c1f15ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17356)[0m     @     0x558c1f15f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17356)[0m     @     0x558c1f0d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17356)[0m     @     0x558c1f15ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17288)[0m     @     0x7f0c55cc5148 at::Tensor::copy_()
[2m[36m(pid=17288)[0m     @     0x7f0c5bf7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17288)[0m     @     0x55e0dc675fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17288)[0m     @     0x55e0dc5d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17288)[0m     @     0x55e0dc65bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17288)[0m     @     0x55e0dc65ca20 method_vectorcall
[2m[36m(pid=17288)[0m     @     0x55e0dc5d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17288)[0m     @     0x55e0dc65bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17288)[0m     @     0x55e0dc65c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17288)[0m     @     0x55e0dc5d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17288)[0m     @     0x55e0dc65bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17288)[0m     @     0x55e0dc65c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17288)[0m     @     0x55e0dc5d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17288)[0m     @     0x55e0dc65bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17288)[0m     @     0x55e0dc65c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17288)[0m     @     0x55e0dc5d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17288)[0m     @     0x55e0dc65bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17302)[0m     @     0x7f64880385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17302)[0m     @     0x7f6488140148 at::Tensor::copy_()
[2m[36m(pid=17302)[0m     @     0x7f648e3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17302)[0m     @     0x557f529abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17302)[0m     @     0x557f52906b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17302)[0m     @     0x557f52991baf _PyEval_EvalCodeWithName
[2m[36m(pid=17302)[0m     @     0x557f52992a20 method_vectorcall
[2m[36m(pid=17302)[0m     @     0x557f52906bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17302)[0m     @     0x557f52991baf _PyEval_EvalCodeWithName
[2m[36m(pid=17302)[0m     @     0x557f52992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17302)[0m     @     0x557f52907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17302)[0m     @     0x557f52991baf _PyEval_EvalCodeWithName
[2m[36m(pid=17302)[0m     @     0x557f52992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17302)[0m     @     0x557f52907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17302)[0m     @     0x557f52991baf _PyEval_EvalCodeWithName
[2m[36m(pid=17302)[0m     @     0x557f52992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17302)[0m     @     0x557f52907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17302)[0m     @     0x557f52991baf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x7f0d157adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17414)[0m     @     0x56172cc71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17414)[0m     @     0x56172cbccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x56172cc57baf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x56172cc58a20 method_vectorcall
[2m[36m(pid=17414)[0m     @     0x56172cbccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x56172cc57baf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x56172cc58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17414)[0m     @     0x56172cbcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x56172cc57baf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x56172cc58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17414)[0m     @     0x56172cbcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x56172cc57baf _PyEval_EvalCodeWithName
[2m[36m(pid=17414)[0m     @     0x56172cc58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17414)[0m     @     0x56172cbcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17414)[0m     @     0x56172cc57baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x7f195b7c0ed4 at::native::copy_()
[2m[36m(pid=17346)[0m     @     0x7f195bf035cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17346)[0m     @     0x7f195c00b148 at::Tensor::copy_()
[2m[36m(pid=17346)[0m     @     0x7f195dc02989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17320)[0m     @     0x7ed03ebc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17320)[0m     @     0x7ed03ebc4c3f at::native::copy_impl()
[2m[36m(pid=17320)[0m     @     0x7ed03ebc5ed4 at::native::copy_()
[2m[36m(pid=17320)[0m     @     0x7ed03f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17327)[0m     @     0x7ecd7018bed4 at::native::copy_()
[2m[36m(pid=17327)[0m     @     0x7ecd708ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17327)[0m     @     0x7ecd709d6148 at::Tensor::copy_()
[2m[36m(pid=17327)[0m     @     0x7ecd725cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17378)[0m     @     0x7f5a4e553148 at::Tensor::copy_()
[2m[36m(pid=17378)[0m     @     0x7f5a5014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17378)[0m     @     0x7f5a4e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17334)[0m     @     0x7f317d5bbb53 at::TensorIterator::for_each()
[2m[36m(pid=17334)[0m     @     0x7f317d5bbe11 at::TensorIterator::for_each()
[2m[36m(pid=17334)[0m     @     0x7f31802d4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17334)[0m     @     0x7f31802f7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17287)[0m     @     0x7f78b0c9ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17287)[0m     @     0x7f78b0cbdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17287)[0m     @     0x7f78adcfb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17287)[0m     @     0x7f78adcf9c3f at::native::copy_impl()
[2m[36m(pid=17287)[0m     @     0x7f78adcfaed4 at::native::copy_()
[2m[36m(pid=17401)[0m     @     0x7f0708140148 at::Tensor::copy_()
[2m[36m(pid=17401)[0m     @     0x7f0709d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17401)[0m     @     0x7f07080385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17362)[0m     @     0x7f21fd11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17362)[0m     @     0x7f21fd226148 at::Tensor::copy_()
[2m[36m(pid=17362)[0m     @     0x7f21fee1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17409)[0m     @     0x7f4eb900e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17409)[0m     @     0x7f4eb9116148 at::Tensor::copy_()
[2m[36m(pid=17409)[0m     @     0x7f4ebad0d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f1956148 at::Tensor::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17344)[0m     @     0x7f24f1956148 at::Tensor::copy_()
[2m[36m(pid=17344)[0m     @     0x7f24f7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17344)[0m     @     0x55fe2625efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17344)[0m     @     0x55fe261b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17344)[0m     @     0x55fe26244baf _PyEval_EvalCodeWithName
[2m[36m(pid=17344)[0m     @     0x55fe26245a20 method_vectorcall
[2m[36m(pid=17344)[0m     @     0x55fe261b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x7f46e9deb148 at::Tensor::copy_()
[2m[36m(pid=17295)[0m     @     0x7f46f00a1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17295)[0m     @     0x55e57aec1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17295)[0m     @     0x55e57ae1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x55e57aea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17295)[0m     @     0x55e57aea8a20 method_vectorcall
[2m[36m(pid=17295)[0m     @     0x55e57ae1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x55e57aea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17295)[0m     @     0x55e57aea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17295)[0m     @     0x55e57ae1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x55e57aea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17295)[0m     @     0x55e57aea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17295)[0m     @     0x55e57ae1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x55e57aea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17295)[0m     @     0x55e57aea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17295)[0m     @     0x55e57ae1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17295)[0m     @     0x55e57aea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x7f1ac173f148 at::Tensor::copy_()
[2m[36m(pid=17296)[0m     @     0x7f1ac79f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17296)[0m     @     0x5618702edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17296)[0m     @     0x561870248b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17296)[0m     @     0x5618702d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x5618702d4a20 method_vectorcall
[2m[36m(pid=17296)[0m     @     0x561870248bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17296)[0m     @     0x5618702d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x5618702d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17296)[0m     @     0x561870249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17296)[0m     @     0x5618702d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x5618702d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17296)[0m     @     0x561870249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17296)[0m     @     0x5618702d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17296)[0m     @     0x5618702d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17296)[0m     @     0x561870249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17296)[0m     @     0x5618702d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17373)[0m     @     0x7fa4b88d6148 at::Tensor::copy_()
[2m[36m(pid=17373)[0m     @     0x7fa4beb8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17373)[0m     @     0x559909c2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17373)[0m     @     0x559909b86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17373)[0m     @     0x559909c11baf _PyEval_EvalCodeWithName
[2m[36m(pid=17373)[0m     @     0x559909c12a20 method_vectorcall
[2m[36m(pid=17373)[0m     @     0x559909b86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17373)[0m     @     0x559909c11baf _PyEval_EvalCodeWithName
[2m[36m(pid=17373)[0m     @     0x559909c12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17373)[0m     @     0x559909b87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17373)[0m     @     0x559909c11baf _PyEval_EvalCodeWithName
[2m[36m(pid=17373)[0m     @     0x559909c12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17373)[0m     @     0x559909b87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17373)[0m     @     0x559909c11baf _PyEval_EvalCodeWithName
[2m[36m(pid=17373)[0m     @     0x559909c12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17373)[0m     @     0x559909b87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17373)[0m     @     0x559909c11baf _PyEval_EvalCodeWithName
[2m[36m(pid=17293)[0m     @     0x7f931a8bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17293)[0m     @     0x7f931a9c5148 at::Tensor::copy_()
[2m[36m(pid=17293)[0m     @     0x7f9320c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17293)[0m     @     0x560ca3febfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17293)[0m     @     0x560ca3f46b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17293)[0m     @     0x560ca3fd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17293)[0m     @     0x560ca3fd2a20 method_vectorcall
[2m[36m(pid=17293)[0m     @     0x560ca3f46bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17293)[0m     @     0x560ca3fd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17293)[0m     @     0x560ca3fd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17293)[0m     @     0x560ca3f47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17293)[0m     @     0x560ca3fd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17293)[0m     @     0x560ca3fd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17293)[0m     @     0x560ca3f47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17293)[0m     @     0x560ca3fd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17293)[0m     @     0x560ca3fd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17293)[0m     @     0x560ca3f47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17293)[0m     @     0x560ca3fd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17304)[0m     @     0x7f913f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17304)[0m     @     0x7f913f410148 at::Tensor::copy_()
[2m[36m(pid=17304)[0m     @     0x7f91456c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17304)[0m     @     0x55b66847ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17304)[0m     @     0x55b6683dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17304)[0m     @     0x55b668465baf _PyEval_EvalCodeWithName
[2m[36m(pid=17304)[0m     @     0x55b668466a20 method_vectorcall
[2m[36m(pid=17304)[0m     @     0x55b6683dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17304)[0m     @     0x55b668465baf _PyEval_EvalCodeWithName
[2m[36m(pid=17304)[0m     @     0x55b668466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17304)[0m     @     0x55b6683db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17304)[0m     @     0x55b668465baf _PyEval_EvalCodeWithName
[2m[36m(pid=17304)[0m     @     0x55b668466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17304)[0m     @     0x55b6683db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17304)[0m     @     0x55b668465baf _PyEval_EvalCodeWithName
[2m[36m(pid=17304)[0m     @     0x55b668466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17304)[0m     @     0x55b6683db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17304)[0m     @     0x55b668465baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x7f81155c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17370)[0m     @     0x7f81156d1148 at::Tensor::copy_()
[2m[36m(pid=17370)[0m     @     0x7f811b987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17370)[0m     @     0x5608c8383fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17370)[0m     @     0x5608c82deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17370)[0m     @     0x5608c8369baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x5608c836aa20 method_vectorcall
[2m[36m(pid=17370)[0m     @     0x5608c82debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17370)[0m     @     0x5608c8369baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x5608c836a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17370)[0m     @     0x5608c82df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17370)[0m     @     0x5608c8369baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x5608c836a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17370)[0m     @     0x5608c82df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17370)[0m     @     0x5608c8369baf _PyEval_EvalCodeWithName
[2m[36m(pid=17370)[0m     @     0x5608c836a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17370)[0m     @     0x5608c82df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17370)[0m     @     0x5608c8369baf _PyEval_EvalCodeWithName
[2m[36m(pid=17312)[0m     @     0x7f48e9884148 at::Tensor::copy_()
[2m[36m(pid=17312)[0m     @     0x7f48efb3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17312)[0m     @     0x55a1c6626fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17312)[0m     @     0x55a1c6581b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17312)[0m     @     0x55a1c660cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17312)[0m     @     0x55a1c660da20 method_vectorcall
[2m[36m(pid=17312)[0m     @     0x55a1c6581bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17312)[0m     @     0x55a1c660cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17312)[0m     @     0x55a1c660d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17312)[0m     @     0x55a1c6582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17312)[0m     @     0x55a1c660cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17312)[0m     @     0x55a1c660d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17312)[0m     @     0x55a1c6582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17312)[0m     @     0x55a1c660cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17312)[0m     @     0x55a1c660d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17312)[0m     @     0x55a1c6582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17312)[0m     @     0x55a1c660cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x7f60fafdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17308)[0m     @     0x7f60fb0e4148 at::Tensor::copy_()
[2m[36m(pid=17308)[0m     @     0x7f610139abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17308)[0m     @     0x560d9f21dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17308)[0m     @     0x560d9f178b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17308)[0m     @     0x560d9f203baf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x560d9f204a20 method_vectorcall
[2m[36m(pid=17308)[0m     @     0x560d9f178bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17308)[0m     @     0x560d9f203baf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x560d9f204643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17308)[0m     @     0x560d9f179689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17308)[0m     @     0x560d9f203baf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x560d9f204643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17308)[0m     @     0x560d9f179689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17308)[0m     @     0x560d9f203baf _PyEval_EvalCodeWithName
[2m[36m(pid=17308)[0m     @     0x560d9f204643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17308)[0m     @     0x560d9f179689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17308)[0m     @     0x560d9f203baf _PyEval_EvalCodeWithName
[2m[36m(pid=17289)[0m     @     0x7f7e7a82e148 at::Tensor::copy_()
[2m[36m(pid=17289)[0m     @     0x7f7e80ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17289)[0m     @     0x5584963c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17289)[0m     @     0x55849631cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17289)[0m     @     0x5584963a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17289)[0m     @     0x5584963a8a20 method_vectorcall
[2m[36m(pid=17289)[0m     @     0x55849631cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17289)[0m     @     0x5584963a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17289)[0m     @     0x5584963a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17289)[0m     @     0x55849631d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17289)[0m     @     0x5584963a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17289)[0m     @     0x5584963a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17289)[0m     @     0x55849631d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17289)[0m     @     0x5584963a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17289)[0m     @     0x5584963a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17289)[0m     @     0x55849631d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17289)[0m     @     0x5584963a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x7f654aa45148 at::Tensor::copy_()
[2m[36m(pid=17394)[0m     @     0x7f6550cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17394)[0m     @     0x5591aafcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17394)[0m     @     0x5591aaf26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17394)[0m     @     0x5591aafb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x5591aafb2a20 method_vectorcall
[2m[36m(pid=17394)[0m     @     0x5591aaf26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17394)[0m     @     0x5591aafb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x5591aafb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17394)[0m     @     0x5591aaf27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17394)[0m     @     0x5591aafb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x5591aafb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17394)[0m     @     0x5591aaf27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17394)[0m     @     0x5591aafb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17394)[0m     @     0x5591aafb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17394)[0m     @     0x5591aaf27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17394)[0m     @     0x5591aafb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17318)[0m     @     0x7fa85202b148 at::Tensor::copy_()
[2m[36m(pid=17318)[0m     @     0x7fa8582e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17318)[0m     @     0x5643a9839fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17318)[0m     @     0x5643a9794b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17318)[0m     @     0x5643a981fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17318)[0m     @     0x5643a9820a20 method_vectorcall
[2m[36m(pid=17318)[0m     @     0x5643a9794bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17318)[0m     @     0x5643a981fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17318)[0m     @     0x5643a9820643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17318)[0m     @     0x5643a9795689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17318)[0m     @     0x5643a981fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17318)[0m     @     0x5643a9820643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17318)[0m     @     0x5643a9795689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17318)[0m     @     0x5643a981fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17318)[0m     @     0x5643a9820643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17318)[0m     @     0x5643a9795689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17318)[0m     @     0x5643a981fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17290)[0m     @     0x7f6c8848f148 at::Tensor::copy_()
[2m[36m(pid=17290)[0m     @     0x7f6c8e745bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17290)[0m     @     0x55dc95435fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17290)[0m     @     0x55dc95390b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17290)[0m     @     0x55dc9541bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17290)[0m     @     0x55dc9541ca20 method_vectorcall
[2m[36m(pid=17290)[0m     @     0x55dc95390bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17290)[0m     @     0x55dc9541bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17290)[0m     @     0x55dc9541c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17290)[0m     @     0x55dc95391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17290)[0m     @     0x55dc9541bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17290)[0m     @     0x55dc9541c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17290)[0m     @     0x55dc95391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17290)[0m     @     0x55dc9541bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17290)[0m     @     0x55dc9541c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17290)[0m     @     0x55dc95391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17290)[0m     @     0x55dc9541bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17321)[0m     @     0x7f5f1ff15148 at::Tensor::copy_()
[2m[36m(pid=17321)[0m     @     0x7f5f261cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17321)[0m     @     0x55d65e3f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17321)[0m     @     0x55d65e34cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17321)[0m     @     0x55d65e3d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17321)[0m     @     0x55d65e3d8a20 method_vectorcall
[2m[36m(pid=17321)[0m     @     0x55d65e34cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17321)[0m     @     0x55d65e3d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17321)[0m     @     0x55d65e3d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17321)[0m     @     0x55d65e34d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17321)[0m     @     0x55d65e3d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17321)[0m     @     0x55d65e3d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17321)[0m     @     0x55d65e34d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17321)[0m     @     0x55d65e3d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17321)[0m     @     0x55d65e3d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17321)[0m     @     0x55d65e34d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17321)[0m     @     0x55d65e3d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17369)[0m     @     0x7f0dd602b148 at::Tensor::copy_()
[2m[36m(pid=17369)[0m     @     0x7f0ddc2e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17369)[0m     @     0x564bf6990fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17369)[0m     @     0x564bf68ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17369)[0m     @     0x564bf6976baf _PyEval_EvalCodeWithName
[2m[36m(pid=17369)[0m     @     0x564bf6977a20 method_vectorcall
[2m[36m(pid=17369)[0m     @     0x564bf68ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17369)[0m     @     0x564bf6976baf _PyEval_EvalCodeWithName
[2m[36m(pid=17369)[0m     @     0x564bf6977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17369)[0m     @     0x564bf68ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17369)[0m     @     0x564bf6976baf _PyEval_EvalCodeWithName
[2m[36m(pid=17369)[0m     @     0x564bf6977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17369)[0m     @     0x564bf68ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17369)[0m     @     0x564bf6976baf _PyEval_EvalCodeWithName
[2m[36m(pid=17369)[0m     @     0x564bf6977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17369)[0m     @     0x564bf68ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17369)[0m     @     0x564bf6976baf _PyEval_EvalCodeWithName
[2m[36m(pid=17338)[0m     @     0x7fb44634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17338)[0m     @     0x55c0f6db3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17338)[0m     @     0x55c0f6d0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17338)[0m     @     0x55c0f6d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17338)[0m     @     0x55c0f6d9aa20 method_vectorcall
[2m[36m(pid=17338)[0m     @     0x55c0f6d0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17338)[0m     @     0x55c0f6d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17338)[0m     @     0x55c0f6d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17338)[0m     @     0x55c0f6d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17338)[0m     @     0x55c0f6d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17338)[0m     @     0x55c0f6d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17338)[0m     @     0x55c0f6d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17338)[0m     @     0x55c0f6d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17338)[0m     @     0x55c0f6d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17338)[0m     @     0x55c0f6d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17338)[0m     @     0x55c0f6d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x7f00afd95148 at::Tensor::copy_()
[2m[36m(pid=17404)[0m     @     0x7f00b198c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17404)[0m     @     0x7f00afc8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17382)[0m     @     0x7fa4ed0f1148 at::Tensor::copy_()
[2m[36m(pid=17382)[0m     @     0x7fa4eece8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17382)[0m     @     0x7fa4ecfe95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17371)[0m     @     0x7eebaca81148 at::Tensor::copy_()
[2m[36m(pid=17371)[0m     @     0x7eebb2d37bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17371)[0m     @     0x55f2b9d66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17371)[0m     @     0x55f2b9cc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17371)[0m     @     0x55f2b9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17371)[0m     @     0x55f2b9d4da20 method_vectorcall
[2m[36m(pid=17371)[0m     @     0x55f2b9cc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17371)[0m     @     0x55f2b9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17371)[0m     @     0x55f2b9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17371)[0m     @     0x55f2b9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17371)[0m     @     0x55f2b9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17371)[0m     @     0x55f2b9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17371)[0m     @     0x55f2b9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17371)[0m     @     0x55f2b9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17371)[0m     @     0x55f2b9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17371)[0m     @     0x55f2b9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17371)[0m     @     0x55f2b9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17300)[0m     @     0x7ece5f7da148 at::Tensor::copy_()
[2m[36m(pid=17300)[0m     @     0x7ece65a90bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17300)[0m     @     0x562a3218afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17300)[0m     @     0x562a320e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17300)[0m     @     0x562a32170baf _PyEval_EvalCodeWithName
[2m[36m(pid=17300)[0m     @     0x562a32171a20 method_vectorcall
[2m[36m(pid=17300)[0m     @     0x562a320e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17300)[0m     @     0x562a32170baf _PyEval_EvalCodeWithName
[2m[36m(pid=17300)[0m     @     0x562a32171643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17300)[0m     @     0x562a320e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17300)[0m     @     0x562a32170baf _PyEval_EvalCodeWithName
[2m[36m(pid=17300)[0m     @     0x562a32171643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17300)[0m     @     0x562a320e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17300)[0m     @     0x562a32170baf _PyEval_EvalCodeWithName
[2m[36m(pid=17300)[0m     @     0x562a32171643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17300)[0m     @     0x562a320e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17300)[0m     @     0x562a32170baf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x7f04fc2bb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17291)[0m     @     0x7f04fc3c3148 at::Tensor::copy_()
[2m[36m(pid=17291)[0m     @     0x7f050225dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17291)[0m     @     0x55d468a85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17291)[0m     @     0x55d4689e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17291)[0m     @     0x55d468a6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x55d468a6ca20 method_vectorcall
[2m[36m(pid=17291)[0m     @     0x55d4689e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17291)[0m     @     0x55d468a6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x55d468a6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17291)[0m     @     0x55d4689e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17291)[0m     @     0x55d468a6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x55d468a6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17291)[0m     @     0x55d4689e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17291)[0m     @     0x55d468a6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x55d468a6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17361)[0m     @     0x7ecec8f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17361)[0m     @     0x7ecec9015148 at::Tensor::copy_()
[2m[36m(pid=17361)[0m     @     0x7ececac0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17286)[0m     @     0x7f4c512235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17286)[0m     @     0x7f4c5132b148 at::Tensor::copy_()
[2m[36m(pid=17286)[0m     @     0x7f4c575e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17286)[0m     @     0x563416d8dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17286)[0m     @     0x563416ce8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17286)[0m     @     0x563416d73baf _PyEval_EvalCodeWithName
[2m[36m(pid=17286)[0m     @     0x563416d74a20 method_vectorcall
[2m[36m(pid=17286)[0m     @     0x563416ce8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17286)[0m     @     0x563416d73baf _PyEval_EvalCodeWithName
[2m[36m(pid=17286)[0m     @     0x563416d74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17286)[0m     @     0x563416ce9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17286)[0m     @     0x563416d73baf _PyEval_EvalCodeWithName
[2m[36m(pid=17286)[0m     @     0x563416d74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17286)[0m     @     0x563416ce9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17286)[0m     @     0x563416d73baf _PyEval_EvalCodeWithName
[2m[36m(pid=17286)[0m     @     0x563416d74643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17286)[0m     @     0x563416ce9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17286)[0m     @     0x563416d73baf _PyEval_EvalCodeWithName
[2m[36m(pid=17315)[0m     @     0x7f7cb4de9148 at::Tensor::copy_()
[2m[36m(pid=17315)[0m     @     0x7f7cbb09fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17315)[0m     @     0x5639771d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17315)[0m     @     0x563977130b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17315)[0m     @     0x5639771bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17315)[0m     @     0x5639771bca20 method_vectorcall
[2m[36m(pid=17315)[0m     @     0x563977130bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17315)[0m     @     0x5639771bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17315)[0m     @     0x5639771bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17315)[0m     @     0x563977131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17315)[0m     @     0x5639771bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17315)[0m     @     0x5639771bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17315)[0m     @     0x563977131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17315)[0m     @     0x5639771bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17315)[0m     @     0x5639771bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17315)[0m     @     0x563977131689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17315)[0m     @     0x5639771bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x7f162a82e148 at::Tensor::copy_()
[2m[36m(pid=17299)[0m     @     0x7f162c425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17299)[0m     @     0x7f162a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17301)[0m     @     0x7fb20c487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17301)[0m     @     0x7fb20a7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17301)[0m     @     0x7fb20a890148 at::Tensor::copy_()
[2m[36m(pid=17301)[0m     @     0x7fb210b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17301)[0m     @     0x55c129de1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17301)[0m     @     0x55c129d3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x7fb8d5539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17325)[0m     @     0x55751b9f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17325)[0m     @     0x55751b94db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x55751b9d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17325)[0m     @     0x55751b9d9a20 method_vectorcall
[2m[36m(pid=17325)[0m     @     0x55751b94dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x55751b9d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17325)[0m     @     0x55751b9d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17325)[0m     @     0x55751b94e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x55751b9d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17325)[0m     @     0x55751b9d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17325)[0m     @     0x55751b94e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x55751b9d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17325)[0m     @     0x55751b9d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17325)[0m     @     0x55751b94e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17325)[0m     @     0x55751b9d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17418)[0m     @     0x7f38b9f99148 at::Tensor::copy_()
[2m[36m(pid=17418)[0m     @     0x7f38c024fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17418)[0m     @     0x556ca770cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17418)[0m     @     0x556ca7667b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17418)[0m     @     0x556ca76f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17418)[0m     @     0x556ca76f3a20 method_vectorcall
[2m[36m(pid=17418)[0m     @     0x556ca7667bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17418)[0m     @     0x556ca76f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17418)[0m     @     0x556ca76f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17418)[0m     @     0x556ca7668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17418)[0m     @     0x556ca76f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17418)[0m     @     0x556ca76f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17418)[0m     @     0x556ca7668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17418)[0m     @     0x556ca76f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17418)[0m     @     0x556ca76f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17418)[0m     @     0x556ca7668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17418)[0m     @     0x556ca76f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x7f36787a6148 at::Tensor::copy_()
[2m[36m(pid=17336)[0m     @     0x7f367a39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17336)[0m     @     0x7f367869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17336)[0m     @     0x7f36787a6148 at::Tensor::copy_()
[2m[36m(pid=17336)[0m     @     0x7f367ea5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17336)[0m     @     0x559929724fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17336)[0m     @     0x55992967fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17336)[0m     @     0x55992970abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x55992970ba20 method_vectorcall
[2m[36m(pid=17336)[0m     @     0x55992967fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17336)[0m     @     0x55992970abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x55992970b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17336)[0m     @     0x559929680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x7f055c2a6148 at::Tensor::copy_()
[2m[36m(pid=17353)[0m     @     0x7f056255cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17353)[0m     @     0x55babab5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17353)[0m     @     0x55babaab6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x55babab41baf _PyEval_EvalCodeWithName
[2m[36m(pid=17353)[0m     @     0x55babab42a20 method_vectorcall
[2m[36m(pid=17353)[0m     @     0x55babaab6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x55babab41baf _PyEval_EvalCodeWithName
[2m[36m(pid=17353)[0m     @     0x55babab42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17353)[0m     @     0x55babaab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x55babab41baf _PyEval_EvalCodeWithName
[2m[36m(pid=17353)[0m     @     0x55babab42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17353)[0m     @     0x55babaab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x55babab41baf _PyEval_EvalCodeWithName
[2m[36m(pid=17353)[0m     @     0x55babab42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17353)[0m     @     0x55babaab7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17353)[0m     @     0x55babab41baf _PyEval_EvalCodeWithName
[2m[36m(pid=17292)[0m     @     0x7f6d1f627148 at::Tensor::copy_()
[2m[36m(pid=17292)[0m     @     0x7f6d258ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17292)[0m     @     0x55d5c9e5ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17292)[0m     @     0x55d5c9dbab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17292)[0m     @     0x55d5c9e45baf _PyEval_EvalCodeWithName
[2m[36m(pid=17292)[0m     @     0x55d5c9e46a20 method_vectorcall
[2m[36m(pid=17292)[0m     @     0x55d5c9dbabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17292)[0m     @     0x55d5c9e45baf _PyEval_EvalCodeWithName
[2m[36m(pid=17292)[0m     @     0x55d5c9e46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17292)[0m     @     0x55d5c9dbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17292)[0m     @     0x55d5c9e45baf _PyEval_EvalCodeWithName
[2m[36m(pid=17292)[0m     @     0x55d5c9e46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17292)[0m     @     0x55d5c9dbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17292)[0m     @     0x55d5c9e45baf _PyEval_EvalCodeWithName
[2m[36m(pid=17292)[0m     @     0x55d5c9e46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17292)[0m     @     0x55d5c9dbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17292)[0m     @     0x55d5c9e45baf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x7f953a933148 at::Tensor::copy_()
[2m[36m(pid=17335)[0m     @     0x7f953c52a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17335)[0m     @     0x7f953a82b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17335)[0m     @     0x7f953a933148 at::Tensor::copy_()
[2m[36m(pid=17350)[0m     @     0x7fb52c133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17350)[0m     @     0x565286dbefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17350)[0m     @     0x565286d19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17350)[0m     @     0x565286da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17350)[0m     @     0x565286da5a20 method_vectorcall
[2m[36m(pid=17350)[0m     @     0x565286d19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17350)[0m     @     0x565286da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17350)[0m     @     0x565286da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17350)[0m     @     0x565286d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17350)[0m     @     0x565286da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17350)[0m     @     0x565286da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17350)[0m     @     0x565286d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17350)[0m     @     0x565286da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17350)[0m     @     0x565286da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17350)[0m     @     0x565286d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17350)[0m     @     0x565286da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17424)[0m     @     0x7f18410b1148 at::Tensor::copy_()
[2m[36m(pid=17424)[0m     @     0x7f1847367bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17424)[0m     @     0x55d148911fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17424)[0m     @     0x55d14886cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17424)[0m     @     0x55d1488f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17424)[0m     @     0x55d1488f8a20 method_vectorcall
[2m[36m(pid=17424)[0m     @     0x55d14886cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17424)[0m     @     0x55d1488f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17424)[0m     @     0x55d1488f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17424)[0m     @     0x55d14886d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17424)[0m     @     0x55d1488f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17424)[0m     @     0x55d1488f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17424)[0m     @     0x55d14886d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17424)[0m     @     0x55d1488f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17424)[0m     @     0x55d1488f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17424)[0m     @     0x55d14886d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17424)[0m     @     0x55d1488f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17326)[0m     @     0x7f6eb1e7d148 at::Tensor::copy_()
[2m[36m(pid=17326)[0m     @     0x7f6eb8133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17326)[0m     @     0x55e0092e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17326)[0m     @     0x55e009241b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17326)[0m     @     0x55e0092ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17326)[0m     @     0x55e0092cda20 method_vectorcall
[2m[36m(pid=17326)[0m     @     0x55e009241bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17326)[0m     @     0x55e0092ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17326)[0m     @     0x55e0092cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17326)[0m     @     0x55e009242689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17326)[0m     @     0x55e0092ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17326)[0m     @     0x55e0092cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17326)[0m     @     0x55e009242689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17326)[0m     @     0x55e0092ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17326)[0m     @     0x55e0092cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17326)[0m     @     0x55e009242689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17326)[0m     @     0x55e0092ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17340)[0m     @     0x7fb19a958148 at::Tensor::copy_()
[2m[36m(pid=17340)[0m     @     0x7fb1a0c0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17340)[0m     @     0x560db6091fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17340)[0m     @     0x560db5fecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17340)[0m     @     0x560db6077baf _PyEval_EvalCodeWithName
[2m[36m(pid=17340)[0m     @     0x560db6078a20 method_vectorcall
[2m[36m(pid=17340)[0m     @     0x560db5fecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17340)[0m     @     0x560db6077baf _PyEval_EvalCodeWithName
[2m[36m(pid=17340)[0m     @     0x560db6078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17340)[0m     @     0x560db5fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17340)[0m     @     0x560db6077baf _PyEval_EvalCodeWithName
[2m[36m(pid=17340)[0m     @     0x560db6078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17340)[0m     @     0x560db5fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17340)[0m     @     0x560db6077baf _PyEval_EvalCodeWithName
[2m[36m(pid=17340)[0m     @     0x560db6078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17340)[0m     @     0x560db5fed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17340)[0m     @     0x560db6077baf _PyEval_EvalCodeWithName
[2m[36m(pid=17395)[0m     @     0x7eec35e7d148 at::Tensor::copy_()
[2m[36m(pid=17395)[0m     @     0x7eec3c133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17395)[0m     @     0x55c6454c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17395)[0m     @     0x55c64541cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17395)[0m     @     0x55c6454a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17395)[0m     @     0x55c6454a8a20 method_vectorcall
[2m[36m(pid=17395)[0m     @     0x55c64541cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17395)[0m     @     0x55c6454a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17395)[0m     @     0x55c6454a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17395)[0m     @     0x55c64541d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17395)[0m     @     0x55c6454a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17395)[0m     @     0x55c6454a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17395)[0m     @     0x55c64541d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17395)[0m     @     0x55c6454a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17395)[0m     @     0x55c6454a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17395)[0m     @     0x55c64541d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17395)[0m     @     0x55c6454a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17419)[0m     @     0x7ede7a02b148 at::Tensor::copy_()
[2m[36m(pid=17419)[0m     @     0x7ede802e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17419)[0m     @     0x5594490c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17419)[0m     @     0x559449024b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17419)[0m     @     0x5594490afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17419)[0m     @     0x5594490b0a20 method_vectorcall
[2m[36m(pid=17419)[0m     @     0x559449024bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17419)[0m     @     0x5594490afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17419)[0m     @     0x5594490b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17419)[0m     @     0x559449025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17419)[0m     @     0x5594490afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17419)[0m     @     0x5594490b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17419)[0m     @     0x559449025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17419)[0m     @     0x5594490afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17419)[0m     @     0x5594490b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17419)[0m     @     0x559449025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17419)[0m     @     0x5594490afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17306)[0m     @     0x7ed611d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17306)[0m     @     0x7ed611e7d148 at::Tensor::copy_()
[2m[36m(pid=17306)[0m     @     0x7ed618133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17306)[0m     @     0x5564fafb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17306)[0m     @     0x5564faf0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17306)[0m     @     0x5564faf96baf _PyEval_EvalCodeWithName
[2m[36m(pid=17306)[0m     @     0x5564faf97a20 method_vectorcall
[2m[36m(pid=17306)[0m     @     0x5564faf0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17306)[0m     @     0x5564faf96baf _PyEval_EvalCodeWithName
[2m[36m(pid=17306)[0m     @     0x5564faf97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17306)[0m     @     0x5564faf0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17306)[0m     @     0x5564faf96baf _PyEval_EvalCodeWithName
[2m[36m(pid=17306)[0m     @     0x5564faf97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17306)[0m     @     0x5564faf0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17306)[0m     @     0x5564faf96baf _PyEval_EvalCodeWithName
[2m[36m(pid=17306)[0m     @     0x5564faf97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17306)[0m     @     0x5564faf0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17306)[0m     @     0x5564faf96baf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x7f0a7e00bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17303)[0m     @     0x56089cd77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17303)[0m     @     0x56089ccd2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17303)[0m     @     0x56089cd5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x56089cd5ea20 method_vectorcall
[2m[36m(pid=17303)[0m     @     0x56089ccd2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17303)[0m     @     0x56089cd5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x56089cd5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17303)[0m     @     0x56089ccd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17303)[0m     @     0x56089cd5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x56089cd5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17303)[0m     @     0x56089ccd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17303)[0m     @     0x56089cd5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17303)[0m     @     0x56089cd5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17303)[0m     @     0x56089ccd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17303)[0m     @     0x56089cd5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x7f195bf035cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17346)[0m     @     0x7f195c00b148 at::Tensor::copy_()
[2m[36m(pid=17346)[0m     @     0x7f19622c1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17346)[0m     @     0x5628a4cadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17346)[0m     @     0x5628a4c08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x7ed03f410148 at::Tensor::copy_()
[2m[36m(pid=17320)[0m     @     0x7ed041007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17327)[0m     @     0x7ecd708ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17327)[0m     @     0x7ecd709d6148 at::Tensor::copy_()
[2m[36m(pid=17327)[0m     @     0x7ecd76c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17327)[0m     @     0x562364c5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17378)[0m     @     0x7f5a4e553148 at::Tensor::copy_()
[2m[36m(pid=17378)[0m     @     0x7f5a54809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17378)[0m     @     0x56448971efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17378)[0m     @     0x564489679b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17378)[0m     @     0x564489704baf _PyEval_EvalCodeWithName
[2m[36m(pid=17378)[0m     @     0x564489705a20 method_vectorcall
[2m[36m(pid=17378)[0m     @     0x564489679bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17378)[0m     @     0x564489704baf _PyEval_EvalCodeWithName
[2m[36m(pid=17378)[0m     @     0x564489705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17378)[0m     @     0x56448967a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17378)[0m     @     0x564489704baf _PyEval_EvalCodeWithName
[2m[36m(pid=17378)[0m     @     0x564489705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17378)[0m     @     0x56448967a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17378)[0m     @     0x564489704baf _PyEval_EvalCodeWithName
[2m[36m(pid=17378)[0m     @     0x564489705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17378)[0m     @     0x56448967a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17378)[0m     @     0x564489704baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x7f317d335009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17334)[0m     @     0x7f317d333c3f at::native::copy_impl()
[2m[36m(pid=17287)[0m     @     0x7f78ae43d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17287)[0m     @     0x7f78ae545148 at::Tensor::copy_()
[2m[36m(pid=17287)[0m     @     0x7f78b013c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17401)[0m     @     0x7f0708140148 at::Tensor::copy_()
[2m[36m(pid=17401)[0m     @     0x7f070e3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17401)[0m     @     0x558f692effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17401)[0m     @     0x558f6924ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17401)[0m     @     0x558f692d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17401)[0m     @     0x558f692d6a20 method_vectorcall
[2m[36m(pid=17401)[0m     @     0x558f6924abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17401)[0m     @     0x558f692d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17401)[0m     @     0x558f692d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17401)[0m     @     0x558f6924b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17401)[0m     @     0x558f692d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17401)[0m     @     0x558f692d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17401)[0m     @     0x558f6924b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17401)[0m     @     0x558f692d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17401)[0m     @     0x558f692d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17401)[0m     @     0x558f6924b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17401)[0m     @     0x558f692d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17362)[0m     @     0x7f21fd11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17362)[0m     @     0x7f21fd226148 at::Tensor::copy_()
[2m[36m(pid=17362)[0m     @     0x7f22034dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17362)[0m     @     0x55dd2758cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17362)[0m     @     0x55dd274e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd27572baf _PyEval_EvalCodeWithName
[2m[36m(pid=17362)[0m     @     0x55dd27573a20 method_vectorcall
[2m[36m(pid=17362)[0m     @     0x55dd274e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd27572baf _PyEval_EvalCodeWithName
[2m[36m(pid=17362)[0m     @     0x55dd27573643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17409)[0m     @     0x7f4eb900e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17409)[0m     @     0x7f4eb9116148 at::Tensor::copy_()
[2m[36m(pid=17409)[0m     @     0x7f4ebf3ccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17409)[0m     @     0x55711d7ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17409)[0m     @     0x55711d727b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17409)[0m     @     0x55711d7b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17409)[0m     @     0x55711d7b3a20 method_vectorcall
[2m[36m(pid=17409)[0m     @     0x55711d727bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17409)[0m     @     0x55711d7b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17409)[0m     @     0x55711d7b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17409)[0m     @     0x55711d728689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17409)[0m     @     0x55711d7b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17409)[0m     @     0x55711d7b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17409)[0m     @     0x55711d728689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17409)[0m     @     0x55711d7b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17409)[0m     @     0x55711d7b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17409)[0m     @     0x55711d728689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17409)[0m     @     0x55711d7b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17344)[0m     @     0x55fe26244baf _PyEval_EvalCodeWithName
[2m[36m(pid=17344)[0m     @     0x55fe26245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17344)[0m     @     0x55fe261ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17344)[0m     @     0x55fe26244baf _PyEval_EvalCodeWithName
[2m[36m(pid=17344)[0m     @     0x55fe26245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17344)[0m     @     0x55fe261ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17344)[0m     @     0x55fe26244baf _PyEval_EvalCodeWithName
[2m[36m(pid=17344)[0m     @     0x55fe26245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17344)[0m     @     0x55fe261ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17344)[0m     @     0x55fe26244baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x7f00afd95148 at::Tensor::copy_()
[2m[36m(pid=17404)[0m     @     0x7f00b604bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17404)[0m     @     0x55b243e2ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17404)[0m     @     0x55b243d8ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17404)[0m     @     0x55b243e15baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x55b243e16a20 method_vectorcall
[2m[36m(pid=17404)[0m     @     0x55b243d8abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17404)[0m     @     0x55b243e15baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x55b243e16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17404)[0m     @     0x55b243d8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17404)[0m     @     0x55b243e15baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x55b243e16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17404)[0m     @     0x55b243d8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17404)[0m     @     0x55b243e15baf _PyEval_EvalCodeWithName
[2m[36m(pid=17404)[0m     @     0x55b243e16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17404)[0m     @     0x55b243d8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17404)[0m     @     0x55b243e15baf _PyEval_EvalCodeWithName
[2m[36m(pid=17382)[0m     @     0x7fa4ed0f1148 at::Tensor::copy_()
[2m[36m(pid=17382)[0m     @     0x7fa4f33a7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17382)[0m     @     0x55d0767d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17382)[0m     @     0x55d076730b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17382)[0m     @     0x55d0767bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17382)[0m     @     0x55d0767bca20 method_vectorcall
[2m[36m(pid=17382)[0m     @     0x55d076730bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17382)[0m     @     0x55d0767bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17382)[0m     @     0x55d0767bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17382)[0m     @     0x55d076731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17382)[0m     @     0x55d0767bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17382)[0m     @     0x55d0767bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17382)[0m     @     0x55d076731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17382)[0m     @     0x55d0767bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17382)[0m     @     0x55d0767bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17382)[0m     @     0x55d076731689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17382)[0m     @     0x55d0767bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17291)[0m     @     0x55d4689e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17291)[0m     @     0x55d468a6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17361)[0m     @     0x7ecec8f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17361)[0m     @     0x7ecec9015148 at::Tensor::copy_()
[2m[36m(pid=17361)[0m     @     0x7ececf2cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17361)[0m     @     0x55892ea36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17361)[0m     @     0x55892e991b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17361)[0m     @     0x55892ea1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17361)[0m     @     0x55892ea1da20 method_vectorcall
[2m[36m(pid=17361)[0m     @     0x55892e991bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17361)[0m     @     0x55892ea1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17361)[0m     @     0x55892ea1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17361)[0m     @     0x55892e992689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17361)[0m     @     0x55892ea1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17361)[0m     @     0x55892ea1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17361)[0m     @     0x55892e992689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17361)[0m     @     0x55892ea1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17361)[0m     @     0x55892ea1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17361)[0m     @     0x55892e992689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17361)[0m     @     0x55892ea1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x7f162a82e148 at::Tensor::copy_()
[2m[36m(pid=17299)[0m     @     0x7f1630ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17299)[0m     @     0x5643c8e10fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17299)[0m     @     0x5643c8d6bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17299)[0m     @     0x5643c8df6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x5643c8df7a20 method_vectorcall
[2m[36m(pid=17299)[0m     @     0x5643c8d6bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17299)[0m     @     0x5643c8df6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x5643c8df7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17299)[0m     @     0x5643c8d6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17299)[0m     @     0x5643c8df6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x5643c8df7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17299)[0m     @     0x5643c8d6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17299)[0m     @     0x5643c8df6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17299)[0m     @     0x5643c8df7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17299)[0m     @     0x5643c8d6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17299)[0m     @     0x5643c8df6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17301)[0m     @     0x55c129dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17301)[0m     @     0x55c129dc8a20 method_vectorcall
[2m[36m(pid=17301)[0m     @     0x55c129d3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17301)[0m     @     0x55c129dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17301)[0m     @     0x55c129dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17301)[0m     @     0x55c129d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17301)[0m     @     0x55c129dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17301)[0m     @     0x55c129dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17301)[0m     @     0x55c129d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17301)[0m     @     0x55c129dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17301)[0m     @     0x55c129dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17301)[0m     @     0x55c129d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17301)[0m     @     0x55c129dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x55992970abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x55992970b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17336)[0m     @     0x559929680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17336)[0m     @     0x55992970abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17336)[0m     @     0x55992970b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17336)[0m     @     0x559929680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17336)[0m     @     0x55992970abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x7f9540be9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17335)[0m     @     0x5594e894afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17335)[0m     @     0x5594e88a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17335)[0m     @     0x5594e8930baf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x5594e8931a20 method_vectorcall
[2m[36m(pid=17335)[0m     @     0x5594e88a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17335)[0m     @     0x5594e8930baf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x5594e8931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17335)[0m     @     0x5594e88a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17335)[0m     @     0x5594e8930baf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x5594e8931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17335)[0m     @     0x5594e88a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17335)[0m     @     0x5594e8930baf _PyEval_EvalCodeWithName
[2m[36m(pid=17335)[0m     @     0x5594e8931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17335)[0m     @     0x5594e88a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17335)[0m     @     0x5594e8930baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x5628a4c93baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x5628a4c94a20 method_vectorcall
[2m[36m(pid=17346)[0m     @     0x5628a4c08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17346)[0m     @     0x5628a4c93baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x5628a4c94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17346)[0m     @     0x5628a4c09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17346)[0m     @     0x5628a4c93baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x5628a4c94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17346)[0m     @     0x5628a4c09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17346)[0m     @     0x5628a4c93baf _PyEval_EvalCodeWithName
[2m[36m(pid=17346)[0m     @     0x5628a4c94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17346)[0m     @     0x5628a4c09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17346)[0m     @     0x5628a4c93baf _PyEval_EvalCodeWithName
[2m[36m(pid=17320)[0m     @     0x7ed03f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17320)[0m     @     0x7ed03f410148 at::Tensor::copy_()
[2m[36m(pid=17320)[0m     @     0x7ed0456c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17320)[0m     @     0x55efa0571fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17320)[0m     @     0x55efa04ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x55efa0557baf _PyEval_EvalCodeWithName
[2m[36m(pid=17320)[0m     @     0x55efa0558a20 method_vectorcall
[2m[36m(pid=17320)[0m     @     0x55efa04ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x55efa0557baf _PyEval_EvalCodeWithName
[2m[36m(pid=17320)[0m     @     0x55efa0558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17320)[0m     @     0x55efa04cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x55efa0557baf _PyEval_EvalCodeWithName
[2m[36m(pid=17320)[0m     @     0x55efa0558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17320)[0m     @     0x55efa04cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x55efa0557baf _PyEval_EvalCodeWithName
[2m[36m(pid=17320)[0m     @     0x55efa0558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17320)[0m     @     0x55efa04cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17320)[0m     @     0x55efa0557baf _PyEval_EvalCodeWithName
[2m[36m(pid=17327)[0m     @     0x562364bb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17327)[0m     @     0x562364c43baf _PyEval_EvalCodeWithName
[2m[36m(pid=17327)[0m     @     0x562364c44a20 method_vectorcall
[2m[36m(pid=17327)[0m     @     0x562364bb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17327)[0m     @     0x562364c43baf _PyEval_EvalCodeWithName
[2m[36m(pid=17327)[0m     @     0x562364c44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17327)[0m     @     0x562364bb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17327)[0m     @     0x562364c43baf _PyEval_EvalCodeWithName
[2m[36m(pid=17327)[0m     @     0x562364c44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17327)[0m     @     0x562364bb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17327)[0m     @     0x562364c43baf _PyEval_EvalCodeWithName
[2m[36m(pid=17327)[0m     @     0x562364c44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17327)[0m     @     0x562364bb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17327)[0m     @     0x562364c43baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x7f317d334ed4 at::native::copy_()
[2m[36m(pid=17334)[0m     @     0x7f317da775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17334)[0m     @     0x7f317db7f148 at::Tensor::copy_()
[2m[36m(pid=17287)[0m     @     0x7f78ae43d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17287)[0m     @     0x7f78ae545148 at::Tensor::copy_()
[2m[36m(pid=17287)[0m     @     0x7f78b45f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17287)[0m     @     0x556a05f18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17287)[0m     @     0x556a05e73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17287)[0m     @     0x556a05efebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17287)[0m     @     0x556a05effa20 method_vectorcall
[2m[36m(pid=17287)[0m     @     0x556a05e73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17287)[0m     @     0x556a05efebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17287)[0m     @     0x556a05eff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17287)[0m     @     0x556a05e74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17287)[0m     @     0x556a05efebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17287)[0m     @     0x556a05eff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17287)[0m     @     0x556a05e74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17287)[0m     @     0x556a05efebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17287)[0m     @     0x556a05eff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17287)[0m     @     0x556a05e74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd274e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd27572baf _PyEval_EvalCodeWithName
[2m[36m(pid=17362)[0m     @     0x55dd27573643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17362)[0m     @     0x55dd274e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd27572baf _PyEval_EvalCodeWithName
[2m[36m(pid=17362)[0m     @     0x55dd27573643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17362)[0m     @     0x55dd274e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17362)[0m     @     0x55dd27572baf _PyEval_EvalCodeWithName
2020-11-05 11:01:42,057	ERROR trial_runner.py:567 -- Trial PPO_jss_env_44a89_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=17410, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_44a89_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_44a89_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_44a89_00000_0_2020-11-05_11-01-34/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_44a89_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_44a89_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_44a89_00000_0_2020-11-05_11-01-34/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:01:42,059	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 11:01:42,059	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 11:01:42,059	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
[2m[36m(pid=17334)[0m     @     0x7f317f776989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17334)[0m     @     0x7f317da775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=17334)[0m     @     0x7f317db7f148 at::Tensor::copy_()
[2m[36m(pid=17334)[0m     @     0x7f3183e35bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=17334)[0m     @     0x559f2b18ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17334)[0m     @     0x559f2b0eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17334)[0m     @     0x559f2b175baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x559f2b176a20 method_vectorcall
[2m[36m(pid=17334)[0m     @     0x559f2b0eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17334)[0m     @     0x559f2b175baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x559f2b176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17334)[0m     @     0x559f2b0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17334)[0m     @     0x559f2b175baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x559f2b176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17334)[0m     @     0x559f2b0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17334)[0m     @     0x559f2b175baf _PyEval_EvalCodeWithName
[2m[36m(pid=17334)[0m     @     0x559f2b176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17334)[0m     @     0x559f2b0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17334)[0m     @     0x559f2b175baf _PyEval_EvalCodeWithName
[2m[36m(pid=17287)[0m     @     0x556a05efebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17410)[0m E1105 11:01:42.051525 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=17410)[0m E1105 11:01:42.051681 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=17410)[0m E1105 11:01:42.053941 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=17410)[0m E1105 11:01:42.054049 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=17410)[0m E1105 11:01:42.059087 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=17410)[0m E1105 11:01:42.059233 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=17410)[0m E1105 11:01:42.063769 17410 18518 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=37f711ca0d66f5bd4100f4fd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=17410)[0m E1105 11:01:42.064347 17410 18518 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d7b1ed864d13e17f31c3fed901000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=17410)[0m E1105 11:01:42.067392 17410 18518 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=38e2d2d27b716bfb821ddf4301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=17410)[0m E1105 11:01:42.068706 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=efaf5dbfabc208739f3cc57a01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=17410)[0m E1105 11:01:42.068807 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=b3b45bae970c41729f3cc57a01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=17410)[0m E1105 11:01:42.068928 17410 18518 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=4f22c19b5f703db99f3cc57a01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=17410)[0m E1105 11:01:42.069013 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=17410)[0m E1105 11:01:42.069087 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=17410)[0m E1105 11:01:42.069145 17410 18518 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=575b3faf45c7d0bd8168b55d01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 11:01:42,072	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 11:01:42,073	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 11:01:42,073	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 11:01:42,073	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_44a89_00000])
2020-11-05 11:01:42,083	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
