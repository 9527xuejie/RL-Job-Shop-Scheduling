2020-11-05 10:39:30,343	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_30323_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=33380)[0m 2020-11-05 10:39:33,065	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=33380)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=33380)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=33380)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=33380)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=33380)[0m 
[2m[36m(pid=33380)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=33290)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33290)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33290)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33366)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33366)[0m *** SIGSEGV (@0x0) received by PID 33366 (TID 0x7f3bd6471700) from PID 0; stack trace: ***
[2m[36m(pid=33324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33324)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33324)[0m *** SIGSEGV (@0x0) received by PID 33324 (TID 0x7f068cd4b700) from PID 0; stack trace: ***
[2m[36m(pid=33311)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33311)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33311)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33311)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33311)[0m *** SIGSEGV (@0x0) received by PID 33311 (TID 0x7f9f5afee700) from PID 0; stack trace: ***
[2m[36m(pid=33338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33338)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33340)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33340)[0m *** SIGSEGV (@0x0) received by PID 33340 (TID 0x7f3700c0c700) from PID 0; stack trace: ***
[2m[36m(pid=33336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33336)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33336)[0m *** SIGSEGV (@0x0) received by PID 33336 (TID 0x7f1f29262700) from PID 0; stack trace: ***
[2m[36m(pid=33336)[0m     @     0x7f1f28e3b390 (unknown)
[2m[36m(pid=33358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33358)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33358)[0m *** SIGSEGV (@0x0) received by PID 33358 (TID 0x7f5d3ac83700) from PID 0; stack trace: ***
[2m[36m(pid=33341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33341)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33322)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33322)[0m *** SIGSEGV (@0x0) received by PID 33322 (TID 0x7f6e19fe4700) from PID 0; stack trace: ***
[2m[36m(pid=33342)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33342)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33342)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33342)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33342)[0m *** SIGSEGV (@0x0) received by PID 33342 (TID 0x7fe91c3d2700) from PID 0; stack trace: ***
[2m[36m(pid=33342)[0m     @     0x7fe91bfab390 (unknown)
[2m[36m(pid=33342)[0m     @     0x7fba1bd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33342)[0m     @     0x7fba1b4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33339)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33339)[0m *** SIGSEGV (@0x0) received by PID 33339 (TID 0x7f6f493e0700) from PID 0; stack trace: ***
[2m[36m(pid=33339)[0m     @     0x7f6f48fb9390 (unknown)
[2m[36m(pid=33339)[0m     @     0x7f4048ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33339)[0m     @     0x7f40485cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33339)[0m     @     0x7f40485d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33370)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33370)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33370)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33370)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33370)[0m *** SIGSEGV (@0x0) received by PID 33370 (TID 0x7f4cb9bdc700) from PID 0; stack trace: ***
[2m[36m(pid=33370)[0m     @     0x7f4cb97b5390 (unknown)
[2m[36m(pid=33370)[0m     @     0x7f1db96f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33370)[0m     @     0x7f1db8e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33385)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33385)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33385)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33385)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33385)[0m *** SIGSEGV (@0x0) received by PID 33385 (TID 0x7f0b4fd2f700) from PID 0; stack trace: ***
[2m[36m(pid=33385)[0m     @     0x7f0b4f908390 (unknown)
[2m[36m(pid=33385)[0m     @     0x7edc4f89ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33385)[0m     @     0x7edc4efc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33385)[0m     @     0x7edc4efcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33352)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33352)[0m *** SIGSEGV (@0x0) received by PID 33352 (TID 0x7fd9635b0700) from PID 0; stack trace: ***
[2m[36m(pid=33352)[0m     @     0x7fd963189390 (unknown)
[2m[36m(pid=33352)[0m     @     0x7faa63124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33352)[0m     @     0x7faa6284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33352)[0m     @     0x7faa628528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33350)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33350)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33350)[0m *** SIGSEGV (@0x0) received by PID 33350 (TID 0x7ffa1fbdf700) from PID 0; stack trace: ***
[2m[36m(pid=33350)[0m     @     0x7ffa1f7b8390 (unknown)
[2m[36m(pid=33350)[0m     @     0x7fcb1f61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33350)[0m     @     0x7fcb1ed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33260)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33260)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33260)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33260)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33260)[0m *** SIGSEGV (@0x0) received by PID 33260 (TID 0x7ff56f1a7700) from PID 0; stack trace: ***
[2m[36m(pid=33260)[0m     @     0x7ff56ed80390 (unknown)
[2m[36m(pid=33260)[0m     @     0x7fc66ecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33260)[0m     @     0x7fc66e4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33321)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33321)[0m *** SIGSEGV (@0x0) received by PID 33321 (TID 0x7f4450b10700) from PID 0; stack trace: ***
[2m[36m(pid=33321)[0m     @     0x7f44506e9390 (unknown)
[2m[36m(pid=33321)[0m     @     0x7f1550339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33321)[0m     @     0x7f154fa647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33326)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33326)[0m *** SIGSEGV (@0x0) received by PID 33326 (TID 0x7f55743c2700) from PID 0; stack trace: ***
[2m[36m(pid=33326)[0m     @     0x7f5573f9b390 (unknown)
[2m[36m(pid=33326)[0m     @     0x7f2673e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33326)[0m     @     0x7f26735367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33290)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33290)[0m *** SIGSEGV (@0x0) received by PID 33290 (TID 0x7fb5e8cf1700) from PID 0; stack trace: ***
[2m[36m(pid=33290)[0m     @     0x7fb5e88ca390 (unknown)
[2m[36m(pid=33290)[0m     @     0x7f86e8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33290)[0m     @     0x7f86e7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33290)[0m     @     0x7f86e7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33366)[0m     @     0x7f3bd604a390 (unknown)
[2m[36m(pid=33366)[0m     @     0x7f0cd5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33366)[0m     @     0x7f0cd554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33366)[0m     @     0x7f0cd55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33366)[0m     @     0x7f0cd5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=33324)[0m     @     0x7f068c924390 (unknown)
[2m[36m(pid=33324)[0m     @     0x7ed78c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33324)[0m     @     0x7ed78bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33324)[0m     @     0x7ed78bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33311)[0m     @     0x7f9f5abc7390 (unknown)
[2m[36m(pid=33311)[0m     @     0x7f705aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33311)[0m     @     0x7f705a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33311)[0m     @     0x7f705a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33338)[0m *** SIGSEGV (@0x0) received by PID 33338 (TID 0x7fdd6e425700) from PID 0; stack trace: ***
[2m[36m(pid=33338)[0m     @     0x7fdd6dffe390 (unknown)
[2m[36m(pid=33338)[0m     @     0x7fae6de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33338)[0m     @     0x7fae6d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33340)[0m     @     0x7f37007e5390 (unknown)
[2m[36m(pid=33340)[0m     @     0x7f080060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33340)[0m     @     0x7f07ffd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33340)[0m     @     0x7f07ffd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33340)[0m     @     0x7f07ffd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=33336)[0m     @     0x7ef028dc9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33336)[0m     @     0x7ef0284f47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33336)[0m     @     0x7ef0284f78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33336)[0m     @     0x7ef0284f7ad3 at::TensorIterator::for_each()
[2m[36m(pid=33358)[0m     @     0x7f5d3a85c390 (unknown)
[2m[36m(pid=33358)[0m     @     0x7f2e3a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33358)[0m     @     0x7f2e39ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33358)[0m     @     0x7f2e39ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33341)[0m *** SIGSEGV (@0x0) received by PID 33341 (TID 0x7f1e0714d700) from PID 0; stack trace: ***
[2m[36m(pid=33341)[0m     @     0x7f1e06d26390 (unknown)
[2m[36m(pid=33341)[0m     @     0x7eef06ccff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33341)[0m     @     0x7eef063fa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33341)[0m     @     0x7eef063fd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33322)[0m     @     0x7f6e19bbd390 (unknown)
[2m[36m(pid=33322)[0m     @     0x7f3f19b5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33322)[0m     @     0x7f3f1928a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33322)[0m     @     0x7f3f1928d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33322)[0m     @     0x7f3f1928dad3 at::TensorIterator::for_each()
[2m[36m(pid=33342)[0m     @     0x7fba1b45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33342)[0m     @     0x7fba1b45aad3 at::TensorIterator::for_each()
[2m[36m(pid=33339)[0m     @     0x7f40485d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=33370)[0m     @     0x7f1db8e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33370)[0m     @     0x7f1db8e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=33385)[0m     @     0x7edc4efccad3 at::TensorIterator::for_each()
[2m[36m(pid=33352)[0m     @     0x7faa62852ad3 at::TensorIterator::for_each()
[2m[36m(pid=33352)[0m     @     0x7faa62852d91 at::TensorIterator::for_each()
[2m[36m(pid=33350)[0m     @     0x7fcb1ed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33260)[0m     @     0x7fc66e42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33260)[0m     @     0x7fc66e42aad3 at::TensorIterator::for_each()
[2m[36m(pid=33321)[0m     @     0x7f154fa678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33321)[0m     @     0x7f154fa67ad3 at::TensorIterator::for_each()
[2m[36m(pid=33326)[0m     @     0x7f26735398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33290)[0m     @     0x7f86e7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=33290)[0m     @     0x7f86e7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=33290)[0m     @     0x7f86e8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33366)[0m     @     0x7f0cd5552d91 at::TensorIterator::for_each()
[2m[36m(pid=33366)[0m     @     0x7f0cd5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33366)[0m     @     0x7f0cd5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33366)[0m     @     0x7f0cd52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33366)[0m     @     0x7f0cd52f8388 at::native::copy_impl()
[2m[36m(pid=33324)[0m     @     0x7ed78bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=33324)[0m     @     0x7ed78bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=33324)[0m     @     0x7ed78c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33324)[0m     @     0x7ed78c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33324)[0m     @     0x7ed78bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33275)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33311)[0m     @     0x7f705a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=33311)[0m     @     0x7f705a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=33311)[0m     @     0x7f705aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33311)[0m     @     0x7f705aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33311)[0m     @     0x7f7059ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33338)[0m     @     0x7fae6d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33338)[0m     @     0x7fae6d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=33340)[0m     @     0x7f07ffd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=33340)[0m     @     0x7f080061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33340)[0m     @     0x7f0800642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33340)[0m     @     0x7f07ffae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33340)[0m     @     0x7f07ffae2388 at::native::copy_impl()
[2m[36m(pid=33336)[0m     @     0x7ef0284f7d91 at::TensorIterator::for_each()
[2m[36m(pid=33336)[0m     @     0x7ef028ddab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33336)[0m     @     0x7ef028dfdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33336)[0m     @     0x7ef02829fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33336)[0m     @     0x7ef02829d388 at::native::copy_impl()
[2m[36m(pid=33336)[0m     @     0x7ef02829f5a4 at::native::copy_()
[2m[36m(pid=33358)[0m     @     0x7f2e39ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=33358)[0m     @     0x7f2e39ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=33341)[0m     @     0x7eef063fdad3 at::TensorIterator::for_each()
[2m[36m(pid=33341)[0m     @     0x7eef063fdd91 at::TensorIterator::for_each()
[2m[36m(pid=33341)[0m     @     0x7eef06ce0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33341)[0m     @     0x7eef06d03c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33322)[0m     @     0x7f3f1928dd91 at::TensorIterator::for_each()
[2m[36m(pid=33322)[0m     @     0x7f3f19b70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33322)[0m     @     0x7f3f19b93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33245)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33245)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33245)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33376)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33376)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33376)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33349)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33342)[0m     @     0x7fba1b45ad91 at::TensorIterator::for_each()
[2m[36m(pid=33342)[0m     @     0x7fba1bd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33342)[0m     @     0x7fba1bd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33342)[0m     @     0x7fba1b202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33342)[0m     @     0x7fba1b200388 at::native::copy_impl()
[2m[36m(pid=33345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33345)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33345)[0m *** SIGSEGV (@0x0) received by PID 33345 (TID 0x7fcfabfef700) from PID 0; stack trace: ***
[2m[36m(pid=33339)[0m     @     0x7f40485d2d91 at::TensorIterator::for_each()
[2m[36m(pid=33339)[0m     @     0x7f4048eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33339)[0m     @     0x7f4048ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33339)[0m     @     0x7f404837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33339)[0m     @     0x7f4048378388 at::native::copy_impl()
[2m[36m(pid=33354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33354)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33370)[0m     @     0x7f1db8e22d91 at::TensorIterator::for_each()
[2m[36m(pid=33370)[0m     @     0x7f1db9705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33370)[0m     @     0x7f1db9728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33370)[0m     @     0x7f1db8bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33370)[0m     @     0x7f1db8bc8388 at::native::copy_impl()
[2m[36m(pid=33385)[0m     @     0x7edc4efccd91 at::TensorIterator::for_each()
[2m[36m(pid=33385)[0m     @     0x7edc4f8afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33385)[0m     @     0x7edc4f8d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33385)[0m     @     0x7edc4ed74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33385)[0m     @     0x7edc4ed72388 at::native::copy_impl()
[2m[36m(pid=33255)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33255)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33255)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33352)[0m     @     0x7faa63135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33352)[0m     @     0x7faa63158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33352)[0m     @     0x7faa625faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33352)[0m     @     0x7faa625f8388 at::native::copy_impl()
[2m[36m(pid=33352)[0m     @     0x7faa625fa5a4 at::native::copy_()
[2m[36m(pid=33382)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33382)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33382)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33382)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33382)[0m *** SIGSEGV (@0x0) received by PID 33382 (TID 0x7fac184cf700) from PID 0; stack trace: ***
[2m[36m(pid=33276)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33276)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33276)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33320)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33259)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33367)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33325)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33325)[0m *** SIGSEGV (@0x0) received by PID 33325 (TID 0x7f9238b4d700) from PID 0; stack trace: ***
[2m[36m(pid=33318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33318)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33350)[0m     @     0x7fcb1ed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=33350)[0m     @     0x7fcb1ed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=33350)[0m     @     0x7fcb1f630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33350)[0m     @     0x7fcb1f653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33350)[0m     @     0x7fcb1eaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33350)[0m     @     0x7fcb1eaf3388 at::native::copy_impl()
[2m[36m(pid=33254)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33254)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33254)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33254)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33254)[0m *** SIGSEGV (@0x0) received by PID 33254 (TID 0x7f1405fbb700) from PID 0; stack trace: ***
[2m[36m(pid=33335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33335)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33272)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33272)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33272)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33272)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33272)[0m *** SIGSEGV (@0x0) received by PID 33272 (TID 0x7fa8e0f28700) from PID 0; stack trace: ***
[2m[36m(pid=33253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33253)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33267)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33267)[0m *** SIGSEGV (@0x0) received by PID 33267 (TID 0x7f43a8349700) from PID 0; stack trace: ***
[2m[36m(pid=33263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33263)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33263)[0m *** SIGSEGV (@0x0) received by PID 33263 (TID 0x7f07f2937700) from PID 0; stack trace: ***
[2m[36m(pid=33269)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33269)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33269)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33269)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33269)[0m *** SIGSEGV (@0x0) received by PID 33269 (TID 0x7f6fb952c700) from PID 0; stack trace: ***
[2m[36m(pid=33260)[0m     @     0x7fc66e42ad91 at::TensorIterator::for_each()
[2m[36m(pid=33260)[0m     @     0x7fc66ed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33260)[0m     @     0x7fc66ed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33260)[0m     @     0x7fc66e1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33260)[0m     @     0x7fc66e1d0388 at::native::copy_impl()
[2m[36m(pid=33363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33363)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33321)[0m     @     0x7f154fa67d91 at::TensorIterator::for_each()
[2m[36m(pid=33321)[0m     @     0x7f155034ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33321)[0m     @     0x7f155036dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33321)[0m     @     0x7f154f80fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33321)[0m     @     0x7f154f80d388 at::native::copy_impl()
[2m[36m(pid=33326)[0m     @     0x7f2673539ad3 at::TensorIterator::for_each()
[2m[36m(pid=33326)[0m     @     0x7f2673539d91 at::TensorIterator::for_each()
[2m[36m(pid=33326)[0m     @     0x7f2673e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33326)[0m     @     0x7f2673e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33326)[0m     @     0x7f26732e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33326)[0m     @     0x7f26732df388 at::native::copy_impl()
[2m[36m(pid=33316)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33316)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33316)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33316)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33316)[0m *** SIGSEGV (@0x0) received by PID 33316 (TID 0x7fe43dcc6700) from PID 0; stack trace: ***
[2m[36m(pid=33287)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33287)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33287)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33249)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33246)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33246)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33246)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33280)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33280)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33280)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33280)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33280)[0m *** SIGSEGV (@0x0) received by PID 33280 (TID 0x7fcd5d939700) from PID 0; stack trace: ***
[2m[36m(pid=33337)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33337)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33337)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33337)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33337)[0m *** SIGSEGV (@0x0) received by PID 33337 (TID 0x7fbd7964f700) from PID 0; stack trace: ***
[2m[36m(pid=33290)[0m     @     0x7f86e87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33290)[0m     @     0x7f86e7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33290)[0m     @     0x7f86e7c48388 at::native::copy_impl()
[2m[36m(pid=33290)[0m     @     0x7f86e7c4a5a4 at::native::copy_()
[2m[36m(pid=33290)[0m     @     0x7f86e83354f5 at::Tensor::copy_()
[2m[36m(pid=33314)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33314)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33314)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33314)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33389)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33389)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33389)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33389)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33389)[0m *** SIGSEGV (@0x0) received by PID 33389 (TID 0x7f34cb4b5700) from PID 0; stack trace: ***
[2m[36m(pid=33265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33265)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33251)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33251)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33251)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33251)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33251)[0m *** SIGSEGV (@0x0) received by PID 33251 (TID 0x7faf9ddab700) from PID 0; stack trace: ***
[2m[36m(pid=33251)[0m     @     0x7faf9d984390 (unknown)
[2m[36m(pid=33366)[0m     @     0x7f0cd52fa5a4 at::native::copy_()
[2m[36m(pid=33366)[0m     @     0x7f0cd59e54f5 at::Tensor::copy_()
[2m[36m(pid=33366)[0m     @     0x7f0cd7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33324)[0m     @     0x7ed78bcf9388 at::native::copy_impl()
[2m[36m(pid=33324)[0m     @     0x7ed78bcfb5a4 at::native::copy_()
[2m[36m(pid=33324)[0m     @     0x7ed78c3e64f5 at::Tensor::copy_()
[2m[36m(pid=33275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33275)[0m *** SIGSEGV (@0x0) received by PID 33275 (TID 0x7fb2cde63700) from PID 0; stack trace: ***
[2m[36m(pid=33275)[0m     @     0x7fb2cda3c390 (unknown)
[2m[36m(pid=33275)[0m     @     0x7f83cd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33275)[0m     @     0x7f83ccf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33311)[0m     @     0x7f7059ef5388 at::native::copy_impl()
[2m[36m(pid=33311)[0m     @     0x7f7059ef75a4 at::native::copy_()
[2m[36m(pid=33311)[0m     @     0x7f705a5e24f5 at::Tensor::copy_()
[2m[36m(pid=33338)[0m     @     0x7fae6d552d91 at::TensorIterator::for_each()
[2m[36m(pid=33338)[0m     @     0x7fae6de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33338)[0m     @     0x7fae6de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33338)[0m     @     0x7fae6d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33338)[0m     @     0x7fae6d2f8388 at::native::copy_impl()
[2m[36m(pid=33340)[0m     @     0x7f07ffae45a4 at::native::copy_()
[2m[36m(pid=33340)[0m     @     0x7f08001cf4f5 at::Tensor::copy_()
[2m[36m(pid=33340)[0m     @     0x7f08026a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33336)[0m     @     0x7ef02898a4f5 at::Tensor::copy_()
[2m[36m(pid=33336)[0m     @     0x7ef02ae5d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33336)[0m     @     0x7ef02898a4f5 at::Tensor::copy_()
[2m[36m(pid=33336)[0m     @     0x7ef02ea3579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33336)[0m     @     0x55eff1d18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33336)[0m     @     0x55eff1c73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33336)[0m     @     0x55eff1cffa20 method_vectorcall
[2m[36m(pid=33336)[0m     @     0x55eff1c73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x7f2e3a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33358)[0m     @     0x7f2e3a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33358)[0m     @     0x7f2e39c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33358)[0m     @     0x7f2e39c8f388 at::native::copy_impl()
[2m[36m(pid=33341)[0m     @     0x7eef061a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33341)[0m     @     0x7eef061a3388 at::native::copy_impl()
[2m[36m(pid=33341)[0m     @     0x7eef061a55a4 at::native::copy_()
[2m[36m(pid=33332)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33332)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33332)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33332)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33332)[0m *** SIGSEGV (@0x0) received by PID 33332 (TID 0x7f7f2e624700) from PID 0; stack trace: ***
[2m[36m(pid=33256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33256)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33256)[0m *** SIGSEGV (@0x0) received by PID 33256 (TID 0x7fc96a22f700) from PID 0; stack trace: ***
[2m[36m(pid=33256)[0m     @     0x7fc969e08390 (unknown)
[2m[36m(pid=33250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33250)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33250)[0m *** SIGSEGV (@0x0) received by PID 33250 (TID 0x7f8b7764a700) from PID 0; stack trace: ***
[2m[36m(pid=33250)[0m     @     0x7f8b77223390 (unknown)
[2m[36m(pid=33309)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33309)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33309)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33309)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33309)[0m *** SIGSEGV (@0x0) received by PID 33309 (TID 0x7fc655174700) from PID 0; stack trace: ***
[2m[36m(pid=33309)[0m     @     0x7fc654d4d390 (unknown)
[2m[36m(pid=33248)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33248)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33248)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33248)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33248)[0m *** SIGSEGV (@0x0) received by PID 33248 (TID 0x7f998901b700) from PID 0; stack trace: ***
[2m[36m(pid=33248)[0m     @     0x7f9988bf4390 (unknown)
[2m[36m(pid=33330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33330)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33330)[0m *** SIGSEGV (@0x0) received by PID 33330 (TID 0x7fd3b3230700) from PID 0; stack trace: ***
[2m[36m(pid=33284)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33284)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33284)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33284)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33284)[0m *** SIGSEGV (@0x0) received by PID 33284 (TID 0x7f1f38882700) from PID 0; stack trace: ***
[2m[36m(pid=33284)[0m     @     0x7f1f3845b390 (unknown)
[2m[36m(pid=33284)[0m     @     0x7ef0382def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33284)[0m     @     0x7ef037a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33322)[0m     @     0x7f3f19035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33322)[0m     @     0x7f3f19033388 at::native::copy_impl()
[2m[36m(pid=33322)[0m     @     0x7f3f190355a4 at::native::copy_()
[2m[36m(pid=33322)[0m     @     0x7f3f197204f5 at::Tensor::copy_()
[2m[36m(pid=33245)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33245)[0m *** SIGSEGV (@0x0) received by PID 33245 (TID 0x7f255abf5700) from PID 0; stack trace: ***
[2m[36m(pid=33245)[0m     @     0x7f255a7ce390 (unknown)
[2m[36m(pid=33245)[0m     @     0x7ef659940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33245)[0m     @     0x7ef65906b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33376)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33376)[0m *** SIGSEGV (@0x0) received by PID 33376 (TID 0x7fe1f19db700) from PID 0; stack trace: ***
[2m[36m(pid=33376)[0m     @     0x7fe1f15b4390 (unknown)
[2m[36m(pid=33376)[0m     @     0x7fb2f14e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33376)[0m     @     0x7fb2f0c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33369)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33369)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33369)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33357)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33357)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33357)[0m *** SIGSEGV (@0x0) received by PID 33357 (TID 0x7fd92d6fc700) from PID 0; stack trace: ***
[2m[36m(pid=33357)[0m     @     0x7fd92d2d5390 (unknown)
[2m[36m(pid=33357)[0m     @     0x7faa2d24af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33349)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33349)[0m *** SIGSEGV (@0x0) received by PID 33349 (TID 0x7f57dbf69700) from PID 0; stack trace: ***
[2m[36m(pid=33349)[0m     @     0x7f57dbb42390 (unknown)
[2m[36m(pid=33349)[0m     @     0x7f28dbac8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33349)[0m     @     0x7f28db1f37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33278)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33278)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33278)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33278)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33278)[0m *** SIGSEGV (@0x0) received by PID 33278 (TID 0x7f596f065700) from PID 0; stack trace: ***
[2m[36m(pid=33278)[0m     @     0x7f596ec3e390 (unknown)
[2m[36m(pid=33247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33247)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33247)[0m *** SIGSEGV (@0x0) received by PID 33247 (TID 0x7f3ac9f53700) from PID 0; stack trace: ***
[2m[36m(pid=33247)[0m     @     0x7f3ac9b2c390 (unknown)
[2m[36m(pid=33342)[0m     @     0x7fba1b2025a4 at::native::copy_()
[2m[36m(pid=33342)[0m     @     0x7fba1b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=33342)[0m     @     0x7fba1ddc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33345)[0m     @     0x7fcfabbc8390 (unknown)
[2m[36m(pid=33345)[0m     @     0x7fa0abaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33345)[0m     @     0x7fa0ab2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33345)[0m     @     0x7fa0ab2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33339)[0m     @     0x7f404837a5a4 at::native::copy_()
[2m[36m(pid=33339)[0m     @     0x7f4048a654f5 at::Tensor::copy_()
[2m[36m(pid=33339)[0m     @     0x7f404af388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33354)[0m *** SIGSEGV (@0x0) received by PID 33354 (TID 0x7fa28a6bd700) from PID 0; stack trace: ***
[2m[36m(pid=33354)[0m     @     0x7fa28a296390 (unknown)
[2m[36m(pid=33354)[0m     @     0x7f738a239f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33354)[0m     @     0x7f73899647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33354)[0m     @     0x7f73899678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33370)[0m     @     0x7f1db8bca5a4 at::native::copy_()
[2m[36m(pid=33370)[0m     @     0x7f1db92b54f5 at::Tensor::copy_()
[2m[36m(pid=33370)[0m     @     0x7f1dbb7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33385)[0m     @     0x7edc4ed745a4 at::native::copy_()
[2m[36m(pid=33385)[0m     @     0x7edc4f45f4f5 at::Tensor::copy_()
[2m[36m(pid=33385)[0m     @     0x7edc519328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33255)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33255)[0m *** SIGSEGV (@0x0) received by PID 33255 (TID 0x7f8841cd3700) from PID 0; stack trace: ***
[2m[36m(pid=33255)[0m     @     0x7f88418ac390 (unknown)
[2m[36m(pid=33255)[0m     @     0x7f59417f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33255)[0m     @     0x7f5940f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33255)[0m     @     0x7f5940f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33352)[0m     @     0x7faa62ce54f5 at::Tensor::copy_()
[2m[36m(pid=33352)[0m     @     0x7faa651b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33352)[0m     @     0x7faa62ce54f5 at::Tensor::copy_()
[2m[36m(pid=33352)[0m     @     0x7faa68d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33352)[0m     @     0x5646c9b6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33352)[0m     @     0x5646c9ac6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33352)[0m     @     0x5646c9b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=33352)[0m     @     0x5646c9b52a20 method_vectorcall
[2m[36m(pid=33382)[0m     @     0x7fac180a8390 (unknown)
[2m[36m(pid=33382)[0m     @     0x7f7d17eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33382)[0m     @     0x7f7d175e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33382)[0m     @     0x7f7d175e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33333)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33333)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33333)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33333)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33315)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33310)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33319)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33319)[0m *** SIGSEGV (@0x0) received by PID 33319 (TID 0x7f9e76dc5700) from PID 0; stack trace: ***
[2m[36m(pid=33282)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33282)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33282)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33282)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33282)[0m *** SIGSEGV (@0x0) received by PID 33282 (TID 0x7f717ff45700) from PID 0; stack trace: ***
[2m[36m(pid=33282)[0m     @     0x7f717fb1e390 (unknown)
[2m[36m(pid=33282)[0m     @     0x7f427fac8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33282)[0m     @     0x7f427f1f37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33276)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33276)[0m *** SIGSEGV (@0x0) received by PID 33276 (TID 0x7fbf78123700) from PID 0; stack trace: ***
[2m[36m(pid=33276)[0m     @     0x7fbf77cfc390 (unknown)
[2m[36m(pid=33276)[0m     @     0x7f9077bf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33276)[0m     @     0x7f90773227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33276)[0m     @     0x7f90773258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33320)[0m *** SIGSEGV (@0x0) received by PID 33320 (TID 0x7ff81b2b0700) from PID 0; stack trace: ***
[2m[36m(pid=33320)[0m     @     0x7ff81ae89390 (unknown)
[2m[36m(pid=33320)[0m     @     0x7fc91ae01f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33320)[0m     @     0x7fc91a52c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33320)[0m     @     0x7fc91a52f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33259)[0m *** SIGSEGV (@0x0) received by PID 33259 (TID 0x7f78fe427700) from PID 0; stack trace: ***
[2m[36m(pid=33259)[0m     @     0x7f78fe000390 (unknown)
[2m[36m(pid=33259)[0m     @     0x7f49fde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33259)[0m     @     0x7f49fd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33259)[0m     @     0x7f49fd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33259)[0m     @     0x7f49fd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=33367)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33367)[0m *** SIGSEGV (@0x0) received by PID 33367 (TID 0x7f45d8940700) from PID 0; stack trace: ***
[2m[36m(pid=33367)[0m     @     0x7f45d8519390 (unknown)
[2m[36m(pid=33367)[0m     @     0x7f16d83e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33367)[0m     @     0x7f16d7b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33367)[0m     @     0x7f16d7b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33325)[0m     @     0x7f9238726390 (unknown)
[2m[36m(pid=33325)[0m     @     0x7f633860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33325)[0m     @     0x7f6337d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33325)[0m     @     0x7f6337d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33325)[0m     @     0x7f6337d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=33318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33318)[0m *** SIGSEGV (@0x0) received by PID 33318 (TID 0x7f69a88eb700) from PID 0; stack trace: ***
[2m[36m(pid=33318)[0m     @     0x7f69a84c4390 (unknown)
[2m[36m(pid=33318)[0m     @     0x7f3aa83e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33318)[0m     @     0x7f3aa7b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33318)[0m     @     0x7f3aa7b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33350)[0m     @     0x7fcb1eaf55a4 at::native::copy_()
[2m[36m(pid=33350)[0m     @     0x7fcb1f1e04f5 at::Tensor::copy_()
[2m[36m(pid=33350)[0m     @     0x7fcb216b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33350)[0m     @     0x7fcb1f1e04f5 at::Tensor::copy_()
[2m[36m(pid=33350)[0m     @     0x7fcb2528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33350)[0m     @     0x561e78a03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33350)[0m     @     0x561e7895eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x7f1405b94390 (unknown)
[2m[36m(pid=33254)[0m     @     0x7ee505b3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33254)[0m     @     0x7ee5052657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33254)[0m     @     0x7ee5052688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33254)[0m     @     0x7ee505268ad3 at::TensorIterator::for_each()
[2m[36m(pid=33335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33335)[0m *** SIGSEGV (@0x0) received by PID 33335 (TID 0x7fb5d1712700) from PID 0; stack trace: ***
[2m[36m(pid=33335)[0m     @     0x7fb5d12eb390 (unknown)
[2m[36m(pid=33335)[0m     @     0x7f86d1166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33335)[0m     @     0x7f86d08917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33335)[0m     @     0x7f86d08948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33334)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33334)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33334)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33334)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33334)[0m *** SIGSEGV (@0x0) received by PID 33334 (TID 0x7f52c7db3700) from PID 0; stack trace: ***
[2m[36m(pid=33334)[0m     @     0x7f52c798c390 (unknown)
[2m[36m(pid=33334)[0m     @     0x7f23c78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33334)[0m     @     0x7f23c70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33343)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33343)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33343)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33343)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33343)[0m *** SIGSEGV (@0x0) received by PID 33343 (TID 0x7f5dab412700) from PID 0; stack trace: ***
[2m[36m(pid=33343)[0m     @     0x7f5daafeb390 (unknown)
[2m[36m(pid=33343)[0m     @     0x7f2eaaf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33312)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33312)[0m *** SIGSEGV (@0x0) received by PID 33312 (TID 0x7f1ed974c700) from PID 0; stack trace: ***
[2m[36m(pid=33312)[0m     @     0x7f1ed9325390 (unknown)
[2m[36m(pid=33312)[0m     @     0x7eefd928af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33312)[0m     @     0x7eefd89b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33312)[0m     @     0x7eefd89b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33272)[0m     @     0x7fa8e0b01390 (unknown)
[2m[36m(pid=33272)[0m     @     0x7f79e0a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33272)[0m     @     0x7f79e01617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33272)[0m     @     0x7f79e01648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33272)[0m     @     0x7f79e0164ad3 at::TensorIterator::for_each()
[2m[36m(pid=33253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33253)[0m *** SIGSEGV (@0x0) received by PID 33253 (TID 0x7f9beba0b700) from PID 0; stack trace: ***
[2m[36m(pid=33253)[0m     @     0x7f9beb5e4390 (unknown)
[2m[36m(pid=33253)[0m     @     0x7f6ceb58ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33253)[0m     @     0x7f6ceacba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33253)[0m     @     0x7f6ceacbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33267)[0m     @     0x7f43a7f22390 (unknown)
[2m[36m(pid=33267)[0m     @     0x7f14a7e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33267)[0m     @     0x7f14a75367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33267)[0m     @     0x7f14a75398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33267)[0m     @     0x7f14a7539ad3 at::TensorIterator::for_each()
[2m[36m(pid=33263)[0m     @     0x7f07f2510390 (unknown)
[2m[36m(pid=33263)[0m     @     0x7ed8f2365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33263)[0m     @     0x7ed8f1a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33263)[0m     @     0x7ed8f1a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33263)[0m     @     0x7ed8f1a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=33269)[0m     @     0x7f6fb9105390 (unknown)
[2m[36m(pid=33269)[0m     @     0x7f40b9096f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33269)[0m     @     0x7f40b87c17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33269)[0m     @     0x7f40b87c48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33269)[0m     @     0x7f40b87c4ad3 at::TensorIterator::for_each()
[2m[36m(pid=33260)[0m     @     0x7fc66e1d25a4 at::native::copy_()
[2m[36m(pid=33260)[0m     @     0x7fc66e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=33260)[0m     @     0x7fc670d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33260)[0m     @     0x7fc66e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=33260)[0m     @     0x7fc67496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33260)[0m     @     0x556951364fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33260)[0m     @     0x5569512bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33260)[0m     @     0x55695134abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33363)[0m *** SIGSEGV (@0x0) received by PID 33363 (TID 0x7f7b2d65e700) from PID 0; stack trace: ***
[2m[36m(pid=33363)[0m     @     0x7f7b2d237390 (unknown)
[2m[36m(pid=33363)[0m     @     0x7f4c2d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33363)[0m     @     0x7f4c2c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33363)[0m     @     0x7f4c2c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33321)[0m     @     0x7f154f80f5a4 at::native::copy_()
[2m[36m(pid=33321)[0m     @     0x7f154fefa4f5 at::Tensor::copy_()
[2m[36m(pid=33321)[0m     @     0x7f15523cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33321)[0m     @     0x7f154fefa4f5 at::Tensor::copy_()
[2m[36m(pid=33321)[0m     @     0x7f1555fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33321)[0m     @     0x559d1c945fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33321)[0m     @     0x559d1c8a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33321)[0m     @     0x559d1c92bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33321)[0m     @     0x559d1c92ca20 method_vectorcall
[2m[36m(pid=33321)[0m     @     0x559d1c8a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33321)[0m     @     0x559d1c92bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33321)[0m     @     0x559d1c92c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33321)[0m     @     0x559d1c8a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33321)[0m     @     0x559d1c92bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33321)[0m     @     0x559d1c92c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33321)[0m     @     0x559d1c8a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33321)[0m     @     0x559d1c92bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33321)[0m     @     0x559d1c92c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33321)[0m     @     0x559d1c8a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33321)[0m     @     0x559d1c92bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33321)[0m     @     0x559d1c92c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33321)[0m     @     0x559d1c8a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33279)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33279)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33279)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33279)[0m *** SIGSEGV (@0x0) received by PID 33279 (TID 0x7f7ee12be700) from PID 0; stack trace: ***
[2m[36m(pid=33279)[0m     @     0x7f7ee0e97390 (unknown)
[2m[36m(pid=33279)[0m     @     0x7f4fe0e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33279)[0m     @     0x7f4fe05627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33326)[0m     @     0x7f26732e15a4 at::native::copy_()
[2m[36m(pid=33326)[0m     @     0x7f26739cc4f5 at::Tensor::copy_()
[2m[36m(pid=33326)[0m     @     0x7f2675e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33326)[0m     @     0x7f26739cc4f5 at::Tensor::copy_()
[2m[36m(pid=33326)[0m     @     0x7f2679a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33326)[0m     @     0x55ee83ec7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33326)[0m     @     0x55ee83e22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33326)[0m     @     0x55ee83eadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33326)[0m     @     0x55ee83eaea20 method_vectorcall
[2m[36m(pid=33326)[0m     @     0x55ee83e22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33326)[0m     @     0x55ee83eadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33326)[0m     @     0x55ee83eae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33326)[0m     @     0x55ee83e23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33326)[0m     @     0x55ee83eadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33326)[0m     @     0x55ee83eae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33326)[0m     @     0x55ee83e23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33326)[0m     @     0x55ee83eadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33326)[0m     @     0x55ee83eae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33326)[0m     @     0x55ee83e23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33326)[0m     @     0x55ee83eadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33326)[0m     @     0x55ee83eae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33326)[0m     @     0x55ee83e23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33252)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33252)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33252)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33252)[0m *** SIGSEGV (@0x0) received by PID 33252 (TID 0x7fc95b35e700) from PID 0; stack trace: ***
[2m[36m(pid=33252)[0m     @     0x7fc95af37390 (unknown)
[2m[36m(pid=33252)[0m     @     0x7f9a5aea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33252)[0m     @     0x7f9a5a5d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33252)[0m     @     0x7f9a5a5d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33262)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33262)[0m *** SIGSEGV (@0x0) received by PID 33262 (TID 0x7fb79a3ea700) from PID 0; stack trace: ***
[2m[36m(pid=33262)[0m     @     0x7fb799fc3390 (unknown)
[2m[36m(pid=33262)[0m     @     0x7f8899e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33262)[0m     @     0x7f889954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33316)[0m     @     0x7fe43d89f390 (unknown)
[2m[36m(pid=33316)[0m     @     0x7fb53d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33316)[0m     @     0x7fb53cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33316)[0m     @     0x7fb53cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33316)[0m     @     0x7fb53cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=33287)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33287)[0m *** SIGSEGV (@0x0) received by PID 33287 (TID 0x7f4290b64700) from PID 0; stack trace: ***
[2m[36m(pid=33287)[0m     @     0x7f429073d390 (unknown)
[2m[36m(pid=33287)[0m     @     0x7f1390507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33287)[0m     @     0x7f138fc327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33287)[0m     @     0x7f138fc358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33249)[0m *** SIGSEGV (@0x0) received by PID 33249 (TID 0x7f6cfd209700) from PID 0; stack trace: ***
[2m[36m(pid=33249)[0m     @     0x7f6cfcde2390 (unknown)
[2m[36m(pid=33249)[0m     @     0x7f3dfcd90f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33249)[0m     @     0x7f3dfc4bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33249)[0m     @     0x7f3dfc4be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33249)[0m     @     0x7f3dfc4bead3 at::TensorIterator::for_each()
[2m[36m(pid=33313)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33313)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33313)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33313)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33313)[0m *** SIGSEGV (@0x0) received by PID 33313 (TID 0x7f8e62a4c700) from PID 0; stack trace: ***
[2m[36m(pid=33313)[0m     @     0x7f8e62625390 (unknown)
[2m[36m(pid=33313)[0m     @     0x7f5f625a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33313)[0m     @     0x7f5f61ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33261)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33261)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33261)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33261)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33261)[0m *** SIGSEGV (@0x0) received by PID 33261 (TID 0x7f245f180700) from PID 0; stack trace: ***
[2m[36m(pid=33378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33378)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33378)[0m *** SIGSEGV (@0x0) received by PID 33378 (TID 0x7fcfb193a700) from PID 0; stack trace: ***
[2m[36m(pid=33378)[0m     @     0x7fcfb1513390 (unknown)
[2m[36m(pid=33378)[0m     @     0x7fa0b14a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33378)[0m     @     0x7fa0b0bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33378)[0m     @     0x7fa0b0bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33348)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33348)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33348)[0m *** SIGSEGV (@0x0) received by PID 33348 (TID 0x7f49687da700) from PID 0; stack trace: ***
[2m[36m(pid=33348)[0m     @     0x7f49683b3390 (unknown)
[2m[36m(pid=33348)[0m     @     0x7f1a68333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33348)[0m     @     0x7f1a67a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33348)[0m     @     0x7f1a67a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33372)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33372)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33372)[0m *** SIGSEGV (@0x0) received by PID 33372 (TID 0x7fe37b0bd700) from PID 0; stack trace: ***
[2m[36m(pid=33372)[0m     @     0x7fe37ac96390 (unknown)
[2m[36m(pid=33372)[0m     @     0x7fb47aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33372)[0m     @     0x7fb47a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33246)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33246)[0m *** SIGSEGV (@0x0) received by PID 33246 (TID 0x7fc3f1f80700) from PID 0; stack trace: ***
[2m[36m(pid=33246)[0m     @     0x7fc3f1b59390 (unknown)
[2m[36m(pid=33280)[0m     @     0x7fcd5d512390 (unknown)
[2m[36m(pid=33280)[0m     @     0x7f9e5d4a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33280)[0m     @     0x7f9e5cbce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=33317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=33317)[0m *** Aborted at 1604572778 (unix time) try "date -d @1604572778" if you are using GNU date ***
[2m[36m(pid=33317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33317)[0m *** SIGSEGV (@0x0) received by PID 33317 (TID 0x7f1aa4b82700) from PID 0; stack trace: ***
[2m[36m(pid=33317)[0m     @     0x7f1aa475b390 (unknown)
[2m[36m(pid=33317)[0m     @     0x7eeba4563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33317)[0m     @     0x7eeba3c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33337)[0m     @     0x7fbd79228390 (unknown)
[2m[36m(pid=33337)[0m     @     0x7f8e79166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33337)[0m     @     0x7f8e788917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33337)[0m     @     0x7f8e788948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33290)[0m     @     0x7f86ea8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33290)[0m     @     0x7f86e83354f5 at::Tensor::copy_()
[2m[36m(pid=33290)[0m     @     0x7f86ee3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33290)[0m     @     0x563e1eba0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33290)[0m     @     0x563e1eafbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33290)[0m     @     0x563e1eb86baf _PyEval_EvalCodeWithName
[2m[36m(pid=33290)[0m     @     0x563e1eb87a20 method_vectorcall
[2m[36m(pid=33290)[0m     @     0x563e1eafbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33290)[0m     @     0x563e1eb86baf _PyEval_EvalCodeWithName
[2m[36m(pid=33290)[0m     @     0x563e1eb87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33290)[0m     @     0x563e1eafc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33290)[0m     @     0x563e1eb86baf _PyEval_EvalCodeWithName
[2m[36m(pid=33290)[0m     @     0x563e1eb87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33290)[0m     @     0x563e1eafc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33290)[0m     @     0x563e1eb86baf _PyEval_EvalCodeWithName
[2m[36m(pid=33290)[0m     @     0x563e1eb87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33290)[0m     @     0x563e1eafc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33290)[0m     @     0x563e1eb86baf _PyEval_EvalCodeWithName
[2m[36m(pid=33290)[0m     @     0x563e1eb87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33290)[0m     @     0x563e1eafc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m *** SIGSEGV (@0x0) received by PID 33314 (TID 0x7f321662f700) from PID 0; stack trace: ***
[2m[36m(pid=33314)[0m     @     0x7f3216208390 (unknown)
[2m[36m(pid=33314)[0m     @     0x7f031613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33314)[0m     @     0x7f03158657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33389)[0m     @     0x7f34cb08e390 (unknown)
[2m[36m(pid=33389)[0m     @     0x7f05cb041f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33389)[0m     @     0x7f05ca76c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33389)[0m     @     0x7f05ca76f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33389)[0m     @     0x7f05ca76fad3 at::TensorIterator::for_each()
[2m[36m(pid=33265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33265)[0m *** SIGSEGV (@0x0) received by PID 33265 (TID 0x7fb691e3e700) from PID 0; stack trace: ***
[2m[36m(pid=33265)[0m     @     0x7fb691a17390 (unknown)
[2m[36m(pid=33265)[0m     @     0x7f87917f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33251)[0m     @     0x7f809d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33251)[0m     @     0x7f809cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33251)[0m     @     0x7f809cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33251)[0m     @     0x7f809cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=33366)[0m     @     0x7f0cd59e54f5 at::Tensor::copy_()
[2m[36m(pid=33366)[0m     @     0x7f0cdba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33366)[0m     @     0x55cdce984fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33366)[0m     @     0x55cdce8dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33366)[0m     @     0x55cdce96abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33366)[0m     @     0x55cdce96ba20 method_vectorcall
[2m[36m(pid=33366)[0m     @     0x55cdce8dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33366)[0m     @     0x55cdce96abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33366)[0m     @     0x55cdce96b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33366)[0m     @     0x55cdce8e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33366)[0m     @     0x55cdce96abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33366)[0m     @     0x55cdce96b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33366)[0m     @     0x55cdce8e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33366)[0m     @     0x55cdce96abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33366)[0m     @     0x55cdce96b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33366)[0m     @     0x55cdce8e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33366)[0m     @     0x55cdce96abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33366)[0m     @     0x55cdce96b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33366)[0m     @     0x55cdce8e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x7ed78e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33324)[0m     @     0x7ed78c3e64f5 at::Tensor::copy_()
[2m[36m(pid=33324)[0m     @     0x7ed79249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33324)[0m     @     0x558ad993efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33324)[0m     @     0x558ad9899b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x558ad9924baf _PyEval_EvalCodeWithName
[2m[36m(pid=33324)[0m     @     0x558ad9925a20 method_vectorcall
[2m[36m(pid=33324)[0m     @     0x558ad9899bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x558ad9924baf _PyEval_EvalCodeWithName
[2m[36m(pid=33324)[0m     @     0x558ad9925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33324)[0m     @     0x558ad989a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x558ad9924baf _PyEval_EvalCodeWithName
[2m[36m(pid=33324)[0m     @     0x558ad9925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33324)[0m     @     0x558ad989a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x558ad9924baf _PyEval_EvalCodeWithName
[2m[36m(pid=33324)[0m     @     0x558ad9925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33324)[0m     @     0x558ad989a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33324)[0m     @     0x558ad9924baf _PyEval_EvalCodeWithName
[2m[36m(pid=33324)[0m     @     0x558ad9925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33324)[0m     @     0x558ad989a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x7f83ccf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33275)[0m     @     0x7f83ccf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=33275)[0m     @     0x7f83ccf27d91 at::TensorIterator::for_each()
[2m[36m(pid=33275)[0m     @     0x7f83cd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33275)[0m     @     0x7f83cd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33311)[0m     @     0x7f705cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33311)[0m     @     0x7f705a5e24f5 at::Tensor::copy_()
[2m[36m(pid=33311)[0m     @     0x7f706068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33311)[0m     @     0x5559a27a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33311)[0m     @     0x5559a2701b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33311)[0m     @     0x5559a278cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33311)[0m     @     0x5559a278da20 method_vectorcall
[2m[36m(pid=33311)[0m     @     0x5559a2701bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33311)[0m     @     0x5559a278cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33311)[0m     @     0x5559a278d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33311)[0m     @     0x5559a2702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33311)[0m     @     0x5559a278cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33311)[0m     @     0x5559a278d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33311)[0m     @     0x5559a2702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33311)[0m     @     0x5559a278cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33311)[0m     @     0x5559a278d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33311)[0m     @     0x5559a2702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33311)[0m     @     0x5559a278cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33311)[0m     @     0x5559a278d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33311)[0m     @     0x5559a2702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x7fae6d2fa5a4 at::native::copy_()
[2m[36m(pid=33338)[0m     @     0x7fae6d9e54f5 at::Tensor::copy_()
[2m[36m(pid=33338)[0m     @     0x7fae6feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33338)[0m     @     0x7fae6d9e54f5 at::Tensor::copy_()
[2m[36m(pid=33340)[0m     @     0x7f08001cf4f5 at::Tensor::copy_()
[2m[36m(pid=33340)[0m     @     0x7f080627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33340)[0m     @     0x560127b43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33340)[0m     @     0x560127a9eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33340)[0m     @     0x560127b29baf _PyEval_EvalCodeWithName
[2m[36m(pid=33340)[0m     @     0x560127b2aa20 method_vectorcall
[2m[36m(pid=33340)[0m     @     0x560127a9ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33340)[0m     @     0x560127b29baf _PyEval_EvalCodeWithName
[2m[36m(pid=33340)[0m     @     0x560127b2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33340)[0m     @     0x560127a9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33340)[0m     @     0x560127b29baf _PyEval_EvalCodeWithName
[2m[36m(pid=33340)[0m     @     0x560127b2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33340)[0m     @     0x560127a9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33340)[0m     @     0x560127b29baf _PyEval_EvalCodeWithName
[2m[36m(pid=33340)[0m     @     0x560127b2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33340)[0m     @     0x560127a9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33340)[0m     @     0x560127b29baf _PyEval_EvalCodeWithName
[2m[36m(pid=33340)[0m     @     0x560127b2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33340)[0m     @     0x560127a9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33336)[0m     @     0x55eff1c74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33336)[0m     @     0x55eff1cff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33336)[0m     @     0x55eff1c74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33336)[0m     @     0x55eff1cff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33336)[0m     @     0x55eff1c74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33336)[0m     @     0x55eff1cfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33336)[0m     @     0x55eff1cff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33336)[0m     @     0x55eff1c74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x7f2e39c915a4 at::native::copy_()
[2m[36m(pid=33358)[0m     @     0x7f2e3a37c4f5 at::Tensor::copy_()
[2m[36m(pid=33358)[0m     @     0x7f2e3c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33358)[0m     @     0x7f2e3a37c4f5 at::Tensor::copy_()
[2m[36m(pid=33341)[0m     @     0x7eef068904f5 at::Tensor::copy_()
[2m[36m(pid=33341)[0m     @     0x7eef08d638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33341)[0m     @     0x7eef068904f5 at::Tensor::copy_()
[2m[36m(pid=33341)[0m     @     0x7eef0c93b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33341)[0m     @     0x563496ecefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33341)[0m     @     0x563496e29b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33341)[0m     @     0x563496eb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=33341)[0m     @     0x563496eb5a20 method_vectorcall
[2m[36m(pid=33341)[0m     @     0x563496e29bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33341)[0m     @     0x563496eb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=33341)[0m     @     0x563496eb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33341)[0m     @     0x563496e2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33341)[0m     @     0x563496eb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=33341)[0m     @     0x563496eb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33341)[0m     @     0x563496e2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33341)[0m     @     0x563496eb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=33341)[0m     @     0x563496eb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33341)[0m     @     0x563496e2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33341)[0m     @     0x563496eb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=33341)[0m     @     0x563496eb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33341)[0m     @     0x563496e2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x7f7f2e1fd390 (unknown)
[2m[36m(pid=33332)[0m     @     0x7f502e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33332)[0m     @     0x7f502d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33332)[0m     @     0x7f502d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33256)[0m     @     0x7f9a69da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33256)[0m     @     0x7f9a694cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33256)[0m     @     0x7f9a694d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33256)[0m     @     0x7f9a694d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=33250)[0m     @     0x7f5c77124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33250)[0m     @     0x7f5c7684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33250)[0m     @     0x7f5c768528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33309)[0m     @     0x7f9754c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33309)[0m     @     0x7f975439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33309)[0m     @     0x7f97543a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33309)[0m     @     0x7f97543a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=33248)[0m     @     0x7f6a88b64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33248)[0m     @     0x7f6a8828f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33248)[0m     @     0x7f6a882928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33248)[0m     @     0x7f6a88292ad3 at::TensorIterator::for_each()
[2m[36m(pid=33330)[0m     @     0x7fd3b2e09390 (unknown)
[2m[36m(pid=33330)[0m     @     0x7fa4b2cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33330)[0m     @     0x7fa4b24277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33330)[0m     @     0x7fa4b242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33330)[0m     @     0x7fa4b242aad3 at::TensorIterator::for_each()
[2m[36m(pid=33284)[0m     @     0x7ef037a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33284)[0m     @     0x7ef037a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=33284)[0m     @     0x7ef037a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=33284)[0m     @     0x7ef0382efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33322)[0m     @     0x7f3f1bbf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33322)[0m     @     0x7f3f197204f5 at::Tensor::copy_()
[2m[36m(pid=33322)[0m     @     0x7f3f1f7cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33322)[0m     @     0x55b0d7822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33322)[0m     @     0x55b0d777db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33322)[0m     @     0x55b0d7808baf _PyEval_EvalCodeWithName
[2m[36m(pid=33322)[0m     @     0x55b0d7809a20 method_vectorcall
[2m[36m(pid=33322)[0m     @     0x55b0d777dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33322)[0m     @     0x55b0d7808baf _PyEval_EvalCodeWithName
[2m[36m(pid=33322)[0m     @     0x55b0d7809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33322)[0m     @     0x55b0d777e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33322)[0m     @     0x55b0d7808baf _PyEval_EvalCodeWithName
[2m[36m(pid=33322)[0m     @     0x55b0d7809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33322)[0m     @     0x55b0d777e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33322)[0m     @     0x55b0d7808baf _PyEval_EvalCodeWithName
[2m[36m(pid=33322)[0m     @     0x55b0d7809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33322)[0m     @     0x55b0d777e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33322)[0m     @     0x55b0d7808baf _PyEval_EvalCodeWithName
[2m[36m(pid=33322)[0m     @     0x55b0d7809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33322)[0m     @     0x55b0d777e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x7ef65906e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33245)[0m     @     0x7ef65906ead3 at::TensorIterator::for_each()
[2m[36m(pid=33245)[0m     @     0x7ef65906ed91 at::TensorIterator::for_each()
[2m[36m(pid=33245)[0m     @     0x7ef659951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33245)[0m     @     0x7ef659974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33376)[0m     @     0x7fb2f0c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33376)[0m     @     0x7fb2f0c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=33376)[0m     @     0x7fb2f0c11d91 at::TensorIterator::for_each()
[2m[36m(pid=33376)[0m     @     0x7fb2f14f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33376)[0m     @     0x7fb2f1517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33369)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33369)[0m *** SIGSEGV (@0x0) received by PID 33369 (TID 0x7f8410774700) from PID 0; stack trace: ***
[2m[36m(pid=33369)[0m     @     0x7f841034d390 (unknown)
[2m[36m(pid=33369)[0m     @     0x7f5510290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33369)[0m     @     0x7f550f9bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33357)[0m     @     0x7faa2c9757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33357)[0m     @     0x7faa2c9788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33357)[0m     @     0x7faa2c978ad3 at::TensorIterator::for_each()
[2m[36m(pid=33357)[0m     @     0x7faa2c978d91 at::TensorIterator::for_each()
[2m[36m(pid=33357)[0m     @     0x7faa2d25bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33349)[0m     @     0x7f28db1f68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33349)[0m     @     0x7f28db1f6ad3 at::TensorIterator::for_each()
[2m[36m(pid=33349)[0m     @     0x7f28db1f6d91 at::TensorIterator::for_each()
[2m[36m(pid=33349)[0m     @     0x7f28dbad9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33349)[0m     @     0x7f28dbafcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33278)[0m     @     0x7f2a6ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33278)[0m     @     0x7f2a6e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33278)[0m     @     0x7f2a6e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33278)[0m     @     0x7f2a6e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=33247)[0m     @     0x7f0bc9a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33247)[0m     @     0x7f0bc91357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33247)[0m     @     0x7f0bc91388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33247)[0m     @     0x7f0bc9138ad3 at::TensorIterator::for_each()
[2m[36m(pid=33342)[0m     @     0x7fba1b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=33342)[0m     @     0x7fba2199879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33342)[0m     @     0x55c488441fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33342)[0m     @     0x55c48839cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33342)[0m     @     0x55c488427baf _PyEval_EvalCodeWithName
[2m[36m(pid=33342)[0m     @     0x55c488428a20 method_vectorcall
[2m[36m(pid=33342)[0m     @     0x55c48839cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33342)[0m     @     0x55c488427baf _PyEval_EvalCodeWithName
[2m[36m(pid=33342)[0m     @     0x55c488428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33342)[0m     @     0x55c48839d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33342)[0m     @     0x55c488427baf _PyEval_EvalCodeWithName
[2m[36m(pid=33342)[0m     @     0x55c488428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33342)[0m     @     0x55c48839d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33342)[0m     @     0x55c488427baf _PyEval_EvalCodeWithName
[2m[36m(pid=33342)[0m     @     0x55c488428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33342)[0m     @     0x55c48839d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33342)[0m     @     0x55c488427baf _PyEval_EvalCodeWithName
[2m[36m(pid=33342)[0m     @     0x55c488428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33342)[0m     @     0x55c48839d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x7fa0ab223ad3 at::TensorIterator::for_each()
[2m[36m(pid=33345)[0m     @     0x7fa0ab223d91 at::TensorIterator::for_each()
[2m[36m(pid=33345)[0m     @     0x7fa0abb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33345)[0m     @     0x7fa0abb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33339)[0m     @     0x7f4048a654f5 at::Tensor::copy_()
[2m[36m(pid=33339)[0m     @     0x7f404eb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33339)[0m     @     0x557a49036fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33339)[0m     @     0x557a48f91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33339)[0m     @     0x557a4901cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33339)[0m     @     0x557a4901da20 method_vectorcall
[2m[36m(pid=33339)[0m     @     0x557a48f91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33339)[0m     @     0x557a4901cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33339)[0m     @     0x557a4901d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33339)[0m     @     0x557a48f92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33339)[0m     @     0x557a4901cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33339)[0m     @     0x557a4901d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33339)[0m     @     0x557a48f92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33339)[0m     @     0x557a4901cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33339)[0m     @     0x557a4901d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33339)[0m     @     0x557a48f92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33339)[0m     @     0x557a4901cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33339)[0m     @     0x557a4901d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33339)[0m     @     0x557a48f92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x7f7389967ad3 at::TensorIterator::for_each()
[2m[36m(pid=33354)[0m     @     0x7f7389967d91 at::TensorIterator::for_each()
[2m[36m(pid=33354)[0m     @     0x7f738a24ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33354)[0m     @     0x7f738a26dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33370)[0m     @     0x7f1db92b54f5 at::Tensor::copy_()
[2m[36m(pid=33370)[0m     @     0x7f1dbf36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33370)[0m     @     0x557d07f01fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33370)[0m     @     0x557d07e5cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33370)[0m     @     0x557d07ee7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33370)[0m     @     0x557d07ee8a20 method_vectorcall
[2m[36m(pid=33370)[0m     @     0x557d07e5cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33370)[0m     @     0x557d07ee7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33370)[0m     @     0x557d07ee8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33370)[0m     @     0x557d07e5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33370)[0m     @     0x557d07ee7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33370)[0m     @     0x557d07ee8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33370)[0m     @     0x557d07e5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33370)[0m     @     0x557d07ee7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33370)[0m     @     0x557d07ee8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33370)[0m     @     0x557d07e5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33370)[0m     @     0x557d07ee7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33370)[0m     @     0x557d07ee8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33370)[0m     @     0x557d07e5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x7edc4f45f4f5 at::Tensor::copy_()
[2m[36m(pid=33385)[0m     @     0x7edc5550a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33385)[0m     @     0x558bc88b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33385)[0m     @     0x558bc8810b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x558bc889bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33385)[0m     @     0x558bc889ca20 method_vectorcall
[2m[36m(pid=33385)[0m     @     0x558bc8810bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x558bc889bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33385)[0m     @     0x558bc889c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33385)[0m     @     0x558bc8811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x558bc889bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33385)[0m     @     0x558bc889c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33385)[0m     @     0x558bc8811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x558bc889bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33385)[0m     @     0x558bc889c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33385)[0m     @     0x558bc8811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33385)[0m     @     0x558bc889bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33385)[0m     @     0x558bc889c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33385)[0m     @     0x558bc8811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x7f5940f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=33255)[0m     @     0x7f5940f27d91 at::TensorIterator::for_each()
[2m[36m(pid=33255)[0m     @     0x7f594180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33255)[0m     @     0x7f594182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33352)[0m     @     0x5646c9ac6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33352)[0m     @     0x5646c9b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=33352)[0m     @     0x5646c9b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33352)[0m     @     0x5646c9ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33352)[0m     @     0x5646c9b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=33352)[0m     @     0x5646c9b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33352)[0m     @     0x5646c9ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33352)[0m     @     0x5646c9b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=33352)[0m     @     0x5646c9b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33352)[0m     @     0x5646c9ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33352)[0m     @     0x5646c9b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=33352)[0m     @     0x5646c9b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33352)[0m     @     0x5646c9ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x7f7d175e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=33382)[0m     @     0x7f7d175e4d91 at::TensorIterator::for_each()
[2m[36m(pid=33382)[0m     @     0x7f7d17ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33382)[0m     @     0x7f7d17eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33382)[0m     @     0x7f7d1738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33333)[0m *** SIGSEGV (@0x0) received by PID 33333 (TID 0x7efef86f3700) from PID 0; stack trace: ***
[2m[36m(pid=33333)[0m     @     0x7efef82cc390 (unknown)
[2m[36m(pid=33333)[0m     @     0x7ecff8263f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33333)[0m     @     0x7ecff798e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33315)[0m *** SIGSEGV (@0x0) received by PID 33315 (TID 0x7fc34bcf6700) from PID 0; stack trace: ***
[2m[36m(pid=33315)[0m     @     0x7fc34b8cf390 (unknown)
[2m[36m(pid=33315)[0m     @     0x7f944b871f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33315)[0m     @     0x7f944af9c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=33310)[0m *** SIGSEGV (@0x0) received by PID 33310 (TID 0x7f4a11988700) from PID 0; stack trace: ***
[2m[36m(pid=33310)[0m     @     0x7f4a11561390 (unknown)
[2m[36m(pid=33310)[0m     @     0x7f1b114e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33310)[0m     @     0x7f1b10c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33319)[0m     @     0x7f9e7699e390 (unknown)
[2m[36m(pid=33319)[0m     @     0x7f6f7693af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33319)[0m     @     0x7f6f760657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33319)[0m     @     0x7f6f760688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33319)[0m     @     0x7f6f76068ad3 at::TensorIterator::for_each()
[2m[36m(pid=33282)[0m     @     0x7f427f1f68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33282)[0m     @     0x7f427f1f6ad3 at::TensorIterator::for_each()
[2m[36m(pid=33282)[0m     @     0x7f427f1f6d91 at::TensorIterator::for_each()
[2m[36m(pid=33276)[0m     @     0x7f9077325ad3 at::TensorIterator::for_each()
[2m[36m(pid=33276)[0m     @     0x7f9077325d91 at::TensorIterator::for_each()
[2m[36m(pid=33276)[0m     @     0x7f9077c08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33320)[0m     @     0x7fc91a52fad3 at::TensorIterator::for_each()
[2m[36m(pid=33320)[0m     @     0x7fc91a52fd91 at::TensorIterator::for_each()
[2m[36m(pid=33320)[0m     @     0x7fc91ae12b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33320)[0m     @     0x7fc91ae35c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33259)[0m     @     0x7f49fd552d91 at::TensorIterator::for_each()
[2m[36m(pid=33259)[0m     @     0x7f49fde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33259)[0m     @     0x7f49fde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33367)[0m     @     0x7f16d7b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=33367)[0m     @     0x7f16d7b11d91 at::TensorIterator::for_each()
[2m[36m(pid=33367)[0m     @     0x7f16d83f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33367)[0m     @     0x7f16d8417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33367)[0m     @     0x7f16d78b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33367)[0m     @     0x7f16d78b7388 at::native::copy_impl()
[2m[36m(pid=33325)[0m     @     0x7f6337d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=33325)[0m     @     0x7f633861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33325)[0m     @     0x7f6338642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33325)[0m     @     0x7f6337ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33318)[0m     @     0x7f3aa7b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=33318)[0m     @     0x7f3aa7b11d91 at::TensorIterator::for_each()
[2m[36m(pid=33318)[0m     @     0x7f3aa83f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33350)[0m     @     0x561e789e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33350)[0m     @     0x561e789eaa20 method_vectorcall
[2m[36m(pid=33350)[0m     @     0x561e7895ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33350)[0m     @     0x561e789e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33350)[0m     @     0x561e789ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33350)[0m     @     0x561e7895f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33350)[0m     @     0x561e789e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33350)[0m     @     0x561e789ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33350)[0m     @     0x561e7895f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33350)[0m     @     0x561e789e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33350)[0m     @     0x561e789ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33350)[0m     @     0x561e7895f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33350)[0m     @     0x561e789e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33350)[0m     @     0x561e789ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33350)[0m     @     0x561e7895f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x7ee505268d91 at::TensorIterator::for_each()
[2m[36m(pid=33254)[0m     @     0x7ee505b4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33254)[0m     @     0x7ee505b6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33254)[0m     @     0x7ee505010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33254)[0m     @     0x7ee50500e388 at::native::copy_impl()
[2m[36m(pid=33335)[0m     @     0x7f86d0894ad3 at::TensorIterator::for_each()
[2m[36m(pid=33335)[0m     @     0x7f86d0894d91 at::TensorIterator::for_each()
[2m[36m(pid=33335)[0m     @     0x7f86d1177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33335)[0m     @     0x7f86d119ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33334)[0m     @     0x7f23c700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33334)[0m     @     0x7f23c700cad3 at::TensorIterator::for_each()
[2m[36m(pid=33343)[0m     @     0x7f2eaa63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33343)[0m     @     0x7f2eaa6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33312)[0m     @     0x7eefd89b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=33312)[0m     @     0x7eefd89b8d91 at::TensorIterator::for_each()
[2m[36m(pid=33312)[0m     @     0x7eefd929bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33272)[0m     @     0x7f79e0164d91 at::TensorIterator::for_each()
[2m[36m(pid=33272)[0m     @     0x7f79e0a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33272)[0m     @     0x7f79e0a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33272)[0m     @     0x7f79dff0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33272)[0m     @     0x7f79dff0a388 at::native::copy_impl()
[2m[36m(pid=33253)[0m     @     0x7f6ceacbdad3 at::TensorIterator::for_each()
[2m[36m(pid=33253)[0m     @     0x7f6ceacbdd91 at::TensorIterator::for_each()
[2m[36m(pid=33253)[0m     @     0x7f6ceb5a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33253)[0m     @     0x7f6ceb5c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33267)[0m     @     0x7f14a7539d91 at::TensorIterator::for_each()
[2m[36m(pid=33267)[0m     @     0x7f14a7e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33267)[0m     @     0x7f14a7e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33267)[0m     @     0x7f14a72e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33267)[0m     @     0x7f14a72df388 at::native::copy_impl()
[2m[36m(pid=33263)[0m     @     0x7ed8f1a93d91 at::TensorIterator::for_each()
[2m[36m(pid=33263)[0m     @     0x7ed8f2376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33263)[0m     @     0x7ed8f2399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33263)[0m     @     0x7ed8f183ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33269)[0m     @     0x7f40b87c4d91 at::TensorIterator::for_each()
[2m[36m(pid=33269)[0m     @     0x7f40b90a7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33269)[0m     @     0x7f40b90cac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33269)[0m     @     0x7f40b856ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33269)[0m     @     0x7f40b856a388 at::native::copy_impl()
[2m[36m(pid=33260)[0m     @     0x55695134ba20 method_vectorcall
[2m[36m(pid=33260)[0m     @     0x5569512bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33260)[0m     @     0x55695134abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33260)[0m     @     0x55695134b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33260)[0m     @     0x5569512c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33260)[0m     @     0x55695134abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33260)[0m     @     0x55695134b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33260)[0m     @     0x5569512c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33260)[0m     @     0x55695134abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33260)[0m     @     0x55695134b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33260)[0m     @     0x5569512c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33260)[0m     @     0x55695134abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33260)[0m     @     0x55695134b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33260)[0m     @     0x5569512c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x7f4c2c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=33363)[0m     @     0x7f4c2c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=33363)[0m     @     0x7f4c2d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33363)[0m     @     0x7f4c2d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33279)[0m     @     0x7f4fe05658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33279)[0m     @     0x7f4fe0565ad3 at::TensorIterator::for_each()
[2m[36m(pid=33279)[0m     @     0x7f4fe0565d91 at::TensorIterator::for_each()
[2m[36m(pid=33252)[0m     @     0x7f9a5a5d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=33252)[0m     @     0x7f9a5a5d4d91 at::TensorIterator::for_each()
[2m[36m(pid=33252)[0m     @     0x7f9a5aeb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33252)[0m     @     0x7f9a5aedac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33262)[0m     @     0x7f88995528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33316)[0m     @     0x7fb53cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=33316)[0m     @     0x7fb53d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33316)[0m     @     0x7fb53d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33316)[0m     @     0x7fb53cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33316)[0m     @     0x7fb53cccd388 at::native::copy_impl()
[2m[36m(pid=33287)[0m     @     0x7f138fc35ad3 at::TensorIterator::for_each()
[2m[36m(pid=33287)[0m     @     0x7f138fc35d91 at::TensorIterator::for_each()
[2m[36m(pid=33287)[0m     @     0x7f1390518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33287)[0m     @     0x7f139053bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33249)[0m     @     0x7f3dfc4bed91 at::TensorIterator::for_each()
[2m[36m(pid=33249)[0m     @     0x7f3dfcda1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33249)[0m     @     0x7f3dfcdc4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33249)[0m     @     0x7f3dfc266a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33313)[0m     @     0x7f5f61cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33313)[0m     @     0x7f5f61cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=33313)[0m     @     0x7f5f61cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=33313)[0m     @     0x7f5f625b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33313)[0m     @     0x7f5f625d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33261)[0m     @     0x7f245ed59390 (unknown)
[2m[36m(pid=33261)[0m     @     0x7ef55ecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33261)[0m     @     0x7ef55e4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33378)[0m     @     0x7fa0b0bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=33378)[0m     @     0x7fa0b0bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=33378)[0m     @     0x7fa0b14b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33378)[0m     @     0x7fa0b14d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33348)[0m     @     0x7f1a67a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=33348)[0m     @     0x7f1a67a61d91 at::TensorIterator::for_each()
[2m[36m(pid=33348)[0m     @     0x7f1a68344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33348)[0m     @     0x7f1a68367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33372)[0m     @     0x7fb47a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33372)[0m     @     0x7fb47a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=33372)[0m     @     0x7fb47a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=33372)[0m     @     0x7fb47aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33372)[0m     @     0x7fb47aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33246)[0m     @     0x7f94f1a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=33246)[0m     @     0x7f94f11357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33246)[0m     @     0x7f94f11388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33280)[0m     @     0x7f9e5cbd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33280)[0m     @     0x7f9e5cbd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=33280)[0m     @     0x7f9e5cbd1d91 at::TensorIterator::for_each()
[2m[36m(pid=33280)[0m     @     0x7f9e5d4b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33280)[0m     @     0x7f9e5d4d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33317)[0m     @     0x7eeba3c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33317)[0m     @     0x7eeba3c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=33317)[0m     @     0x7eeba3c91d91 at::TensorIterator::for_each()
[2m[36m(pid=33337)[0m     @     0x7f8e78894ad3 at::TensorIterator::for_each()
[2m[36m(pid=33337)[0m     @     0x7f8e78894d91 at::TensorIterator::for_each()
[2m[36m(pid=33337)[0m     @     0x7f8e79177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33337)[0m     @     0x7f8e7919ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33314)[0m     @     0x7f03158688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33389)[0m     @     0x7f05ca76fd91 at::TensorIterator::for_each()
[2m[36m(pid=33389)[0m     @     0x7f05cb052b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33389)[0m     @     0x7f05cb075c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33265)[0m     @     0x7f8790f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=33265)[0m     @     0x7f8790f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33251)[0m     @     0x7f809cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=33251)[0m     @     0x7f809d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33251)[0m     @     0x7f809d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33251)[0m     @     0x7f809cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33251)[0m     @     0x7f809cccd388 at::native::copy_impl()
[2m[36m(pid=33275)[0m     @     0x7f83ccccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33275)[0m     @     0x7f83ccccd388 at::native::copy_impl()
[2m[36m(pid=33275)[0m     @     0x7f83ccccf5a4 at::native::copy_()
[2m[36m(pid=33338)[0m     @     0x7fae73a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33338)[0m     @     0x55fdec9e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33338)[0m     @     0x55fdec93eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x55fdec9c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33338)[0m     @     0x55fdec9caa20 method_vectorcall
[2m[36m(pid=33338)[0m     @     0x55fdec93ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x55fdec9c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33338)[0m     @     0x55fdec9ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33338)[0m     @     0x55fdec93f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x55fdec9c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33338)[0m     @     0x55fdec9ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33338)[0m     @     0x55fdec93f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x55fdec9c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33338)[0m     @     0x55fdec9ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33338)[0m     @     0x55fdec93f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33338)[0m     @     0x55fdec9c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33338)[0m     @     0x55fdec9ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33338)[0m     @     0x55fdec93f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x7f2e4042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33358)[0m     @     0x56493c506fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33358)[0m     @     0x56493c461b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x56493c4ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x56493c4eda20 method_vectorcall
[2m[36m(pid=33358)[0m     @     0x56493c461bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x56493c4ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x56493c4ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33358)[0m     @     0x56493c462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x56493c4ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x56493c4ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33358)[0m     @     0x56493c462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x56493c4ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x56493c4ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33358)[0m     @     0x56493c462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33358)[0m     @     0x56493c4ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33358)[0m     @     0x56493c4ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33358)[0m     @     0x56493c462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x7f502d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=33332)[0m     @     0x7f502d868d91 at::TensorIterator::for_each()
[2m[36m(pid=33332)[0m     @     0x7f502e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33256)[0m     @     0x7f9a694d2d91 at::TensorIterator::for_each()
[2m[36m(pid=33256)[0m     @     0x7f9a69db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33256)[0m     @     0x7f9a69dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33256)[0m     @     0x7f9a6927aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33256)[0m     @     0x7f9a69278388 at::native::copy_impl()
[2m[36m(pid=33250)[0m     @     0x7f5c76852ad3 at::TensorIterator::for_each()
[2m[36m(pid=33309)[0m     @     0x7f97543a2d91 at::TensorIterator::for_each()
[2m[36m(pid=33309)[0m     @     0x7f9754c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33309)[0m     @     0x7f9754ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33309)[0m     @     0x7f975414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33309)[0m     @     0x7f9754148388 at::native::copy_impl()
[2m[36m(pid=33248)[0m     @     0x7f6a88292d91 at::TensorIterator::for_each()
[2m[36m(pid=33248)[0m     @     0x7f6a88b75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33248)[0m     @     0x7f6a88b98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33248)[0m     @     0x7f6a8803aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33248)[0m     @     0x7f6a88038388 at::native::copy_impl()
[2m[36m(pid=33330)[0m     @     0x7fa4b242ad91 at::TensorIterator::for_each()
[2m[36m(pid=33330)[0m     @     0x7fa4b2d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33330)[0m     @     0x7fa4b2d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33330)[0m     @     0x7fa4b21d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33284)[0m     @     0x7ef038312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33284)[0m     @     0x7ef0377b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33284)[0m     @     0x7ef0377b2388 at::native::copy_impl()
[2m[36m(pid=33284)[0m     @     0x7ef0377b45a4 at::native::copy_()
[2m[36m(pid=33245)[0m     @     0x7ef658e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33245)[0m     @     0x7ef658e14388 at::native::copy_impl()
[2m[36m(pid=33245)[0m     @     0x7ef658e165a4 at::native::copy_()
[2m[36m(pid=33376)[0m     @     0x7fb2f09b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33376)[0m     @     0x7fb2f09b7388 at::native::copy_impl()
[2m[36m(pid=33376)[0m     @     0x7fb2f09b95a4 at::native::copy_()
[2m[36m(pid=33376)[0m     @     0x7fb2f10a44f5 at::Tensor::copy_()
[2m[36m(pid=33369)[0m     @     0x7f550f9be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33369)[0m     @     0x7f550f9bead3 at::TensorIterator::for_each()
[2m[36m(pid=33369)[0m     @     0x7f550f9bed91 at::TensorIterator::for_each()
[2m[36m(pid=33369)[0m     @     0x7f55102a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33369)[0m     @     0x7f55102c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33357)[0m     @     0x7faa2d27ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33357)[0m     @     0x7faa2c720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33357)[0m     @     0x7faa2c71e388 at::native::copy_impl()
[2m[36m(pid=33357)[0m     @     0x7faa2c7205a4 at::native::copy_()
[2m[36m(pid=33357)[0m     @     0x7faa2ce0b4f5 at::Tensor::copy_()
[2m[36m(pid=33349)[0m     @     0x7f28daf9ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33349)[0m     @     0x7f28daf9c388 at::native::copy_impl()
[2m[36m(pid=33349)[0m     @     0x7f28daf9e5a4 at::native::copy_()
[2m[36m(pid=33349)[0m     @     0x7f28db6894f5 at::Tensor::copy_()
[2m[36m(pid=33349)[0m     @     0x7f28ddb5c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33278)[0m     @     0x7f2a6e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=33278)[0m     @     0x7f2a6ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33278)[0m     @     0x7f2a6ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33278)[0m     @     0x7f2a6def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33278)[0m     @     0x7f2a6def5388 at::native::copy_impl()
[2m[36m(pid=33278)[0m     @     0x7f2a6def75a4 at::native::copy_()
[2m[36m(pid=33247)[0m     @     0x7f0bc9138d91 at::TensorIterator::for_each()
[2m[36m(pid=33247)[0m     @     0x7f0bc9a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33247)[0m     @     0x7f0bc9a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33247)[0m     @     0x7f0bc8ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33247)[0m     @     0x7f0bc8ede388 at::native::copy_impl()
[2m[36m(pid=33247)[0m     @     0x7f0bc8ee05a4 at::native::copy_()
[2m[36m(pid=33345)[0m     @     0x7fa0aafcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33345)[0m     @     0x7fa0aafc9388 at::native::copy_impl()
[2m[36m(pid=33345)[0m     @     0x7fa0aafcb5a4 at::native::copy_()
[2m[36m(pid=33345)[0m     @     0x7fa0ab6b64f5 at::Tensor::copy_()
[2m[36m(pid=33345)[0m     @     0x7fa0adb898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33354)[0m     @     0x7f738970fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33354)[0m     @     0x7f738970d388 at::native::copy_impl()
[2m[36m(pid=33354)[0m     @     0x7f738970f5a4 at::native::copy_()
[2m[36m(pid=33354)[0m     @     0x7f7389dfa4f5 at::Tensor::copy_()
[2m[36m(pid=33354)[0m     @     0x7f738c2cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33255)[0m     @     0x7f5940ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33255)[0m     @     0x7f5940ccd388 at::native::copy_impl()
[2m[36m(pid=33255)[0m     @     0x7f5940ccf5a4 at::native::copy_()
[2m[36m(pid=33255)[0m     @     0x7f59413ba4f5 at::Tensor::copy_()
[2m[36m(pid=33255)[0m     @     0x7f594388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33382)[0m     @     0x7f7d1738a388 at::native::copy_impl()
[2m[36m(pid=33382)[0m     @     0x7f7d1738c5a4 at::native::copy_()
[2m[36m(pid=33382)[0m     @     0x7f7d17a774f5 at::Tensor::copy_()
[2m[36m(pid=33382)[0m     @     0x7f7d19f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33382)[0m     @     0x7f7d17a774f5 at::Tensor::copy_()
[2m[36m(pid=33333)[0m     @     0x7ecff79918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33333)[0m     @     0x7ecff7991ad3 at::TensorIterator::for_each()
[2m[36m(pid=33333)[0m     @     0x7ecff7991d91 at::TensorIterator::for_each()
[2m[36m(pid=33333)[0m     @     0x7ecff8274b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33315)[0m     @     0x7f944af9f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33315)[0m     @     0x7f944af9fad3 at::TensorIterator::for_each()
[2m[36m(pid=33310)[0m     @     0x7f1b10c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33319)[0m     @     0x7f6f76068d91 at::TensorIterator::for_each()
[2m[36m(pid=33319)[0m     @     0x7f6f7694bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33319)[0m     @     0x7f6f7696ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33319)[0m     @     0x7f6f75e10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33319)[0m     @     0x7f6f75e0e388 at::native::copy_impl()
[2m[36m(pid=33282)[0m     @     0x7f427fad9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33282)[0m     @     0x7f427fafcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33282)[0m     @     0x7f427ef9ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33282)[0m     @     0x7f427ef9c388 at::native::copy_impl()
[2m[36m(pid=33282)[0m     @     0x7f427ef9e5a4 at::native::copy_()
[2m[36m(pid=33276)[0m     @     0x7f9077c2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33276)[0m     @     0x7f90770cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33276)[0m     @     0x7f90770cb388 at::native::copy_impl()
[2m[36m(pid=33276)[0m     @     0x7f90770cd5a4 at::native::copy_()
[2m[36m(pid=33276)[0m     @     0x7f90777b84f5 at::Tensor::copy_()
[2m[36m(pid=33320)[0m     @     0x7fc91a2d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33320)[0m     @     0x7fc91a2d5388 at::native::copy_impl()
[2m[36m(pid=33320)[0m     @     0x7fc91a2d75a4 at::native::copy_()
[2m[36m(pid=33320)[0m     @     0x7fc91a9c24f5 at::Tensor::copy_()
[2m[36m(pid=33259)[0m     @     0x7f49fd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33259)[0m     @     0x7f49fd2f8388 at::native::copy_impl()
[2m[36m(pid=33259)[0m     @     0x7f49fd2fa5a4 at::native::copy_()
[2m[36m(pid=33259)[0m     @     0x7f49fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=33259)[0m     @     0x7f49ffeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33367)[0m     @     0x7f16d78b95a4 at::native::copy_()
[2m[36m(pid=33367)[0m     @     0x7f16d7fa44f5 at::Tensor::copy_()
[2m[36m(pid=33367)[0m     @     0x7f16da4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33367)[0m     @     0x7f16d7fa44f5 at::Tensor::copy_()
[2m[36m(pid=33367)[0m     @     0x7f16de04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33367)[0m     @     0x55f6b7af9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33367)[0m     @     0x55f6b7a54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7adfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33367)[0m     @     0x55f6b7ae0a20 method_vectorcall
[2m[36m(pid=33367)[0m     @     0x55f6b7a54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7adfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33367)[0m     @     0x55f6b7ae0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33367)[0m     @     0x55f6b7a55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7adfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33367)[0m     @     0x55f6b7ae0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33367)[0m     @     0x55f6b7a55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7adfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33367)[0m     @     0x55f6b7ae0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33367)[0m     @     0x55f6b7a55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7adfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x7f6337ae2388 at::native::copy_impl()
[2m[36m(pid=33325)[0m     @     0x7f6337ae45a4 at::native::copy_()
[2m[36m(pid=33325)[0m     @     0x7f63381cf4f5 at::Tensor::copy_()
[2m[36m(pid=33325)[0m     @     0x7f633a6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33318)[0m     @     0x7f3aa8417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33318)[0m     @     0x7f3aa78b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33318)[0m     @     0x7f3aa78b7388 at::native::copy_impl()
[2m[36m(pid=33318)[0m     @     0x7f3aa78b95a4 at::native::copy_()
[2m[36m(pid=33254)[0m     @     0x7ee5050105a4 at::native::copy_()
[2m[36m(pid=33254)[0m     @     0x7ee5056fb4f5 at::Tensor::copy_()
[2m[36m(pid=33254)[0m     @     0x7ee507bce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33335)[0m     @     0x7f86d063ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33335)[0m     @     0x7f86d063a388 at::native::copy_impl()
[2m[36m(pid=33335)[0m     @     0x7f86d063c5a4 at::native::copy_()
[2m[36m(pid=33335)[0m     @     0x7f86d0d274f5 at::Tensor::copy_()
[2m[36m(pid=33335)[0m     @     0x7f86d31fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33334)[0m     @     0x7f23c700cd91 at::TensorIterator::for_each()
[2m[36m(pid=33334)[0m     @     0x7f23c78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33334)[0m     @     0x7f23c7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33334)[0m     @     0x7f23c6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33334)[0m     @     0x7f23c6db2388 at::native::copy_impl()
[2m[36m(pid=33334)[0m     @     0x7f23c6db45a4 at::native::copy_()
[2m[36m(pid=33343)[0m     @     0x7f2eaa641ad3 at::TensorIterator::for_each()
[2m[36m(pid=33312)[0m     @     0x7eefd92bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33312)[0m     @     0x7eefd8760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33312)[0m     @     0x7eefd875e388 at::native::copy_impl()
[2m[36m(pid=33312)[0m     @     0x7eefd87605a4 at::native::copy_()
[2m[36m(pid=33312)[0m     @     0x7eefd8e4b4f5 at::Tensor::copy_()
[2m[36m(pid=33272)[0m     @     0x7f79dff0c5a4 at::native::copy_()
[2m[36m(pid=33272)[0m     @     0x7f79e05f74f5 at::Tensor::copy_()
[2m[36m(pid=33272)[0m     @     0x7f79e2aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33272)[0m     @     0x7f79e05f74f5 at::Tensor::copy_()
[2m[36m(pid=33253)[0m     @     0x7f6ceaa65a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33253)[0m     @     0x7f6ceaa63388 at::native::copy_impl()
[2m[36m(pid=33253)[0m     @     0x7f6ceaa655a4 at::native::copy_()
[2m[36m(pid=33253)[0m     @     0x7f6ceb1504f5 at::Tensor::copy_()
[2m[36m(pid=33267)[0m     @     0x7f14a72e15a4 at::native::copy_()
[2m[36m(pid=33267)[0m     @     0x7f14a79cc4f5 at::Tensor::copy_()
[2m[36m(pid=33267)[0m     @     0x7f14a9e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33263)[0m     @     0x7ed8f1839388 at::native::copy_impl()
[2m[36m(pid=33263)[0m     @     0x7ed8f183b5a4 at::native::copy_()
[2m[36m(pid=33263)[0m     @     0x7ed8f1f264f5 at::Tensor::copy_()
[2m[36m(pid=33263)[0m     @     0x7ed8f43f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33269)[0m     @     0x7f40b856c5a4 at::native::copy_()
[2m[36m(pid=33269)[0m     @     0x7f40b8c574f5 at::Tensor::copy_()
[2m[36m(pid=33269)[0m     @     0x7f40bb12a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33363)[0m     @     0x7f4c2c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33363)[0m     @     0x7f4c2c589388 at::native::copy_impl()
[2m[36m(pid=33363)[0m     @     0x7f4c2c58b5a4 at::native::copy_()
[2m[36m(pid=33363)[0m     @     0x7f4c2cc764f5 at::Tensor::copy_()
[2m[36m(pid=33279)[0m     @     0x7f4fe0e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33279)[0m     @     0x7f4fe0e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33279)[0m     @     0x7f4fe030da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33279)[0m     @     0x7f4fe030b388 at::native::copy_impl()
[2m[36m(pid=33279)[0m     @     0x7f4fe030d5a4 at::native::copy_()
[2m[36m(pid=33252)[0m     @     0x7f9a5a37ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33252)[0m     @     0x7f9a5a37a388 at::native::copy_impl()
[2m[36m(pid=33252)[0m     @     0x7f9a5a37c5a4 at::native::copy_()
[2m[36m(pid=33252)[0m     @     0x7f9a5aa674f5 at::Tensor::copy_()
[2m[36m(pid=33262)[0m     @     0x7f8899552ad3 at::TensorIterator::for_each()
[2m[36m(pid=33316)[0m     @     0x7fb53cccf5a4 at::native::copy_()
[2m[36m(pid=33316)[0m     @     0x7fb53d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33316)[0m     @     0x7fb53f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33287)[0m     @     0x7f138f9dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33287)[0m     @     0x7f138f9db388 at::native::copy_impl()
[2m[36m(pid=33287)[0m     @     0x7f138f9dd5a4 at::native::copy_()
[2m[36m(pid=33287)[0m     @     0x7f13900c84f5 at::Tensor::copy_()
[2m[36m(pid=33249)[0m     @     0x7f3dfc264388 at::native::copy_impl()
[2m[36m(pid=33249)[0m     @     0x7f3dfc2665a4 at::native::copy_()
[2m[36m(pid=33249)[0m     @     0x7f3dfc9514f5 at::Tensor::copy_()
[2m[36m(pid=33249)[0m     @     0x7f3dfee248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33313)[0m     @     0x7f5f61a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33313)[0m     @     0x7f5f61a78388 at::native::copy_impl()
[2m[36m(pid=33313)[0m     @     0x7f5f61a7a5a4 at::native::copy_()
[2m[36m(pid=33261)[0m     @     0x7ef55e42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=33261)[0m     @     0x7ef55e42aad3 at::TensorIterator::for_each()
[2m[36m(pid=33378)[0m     @     0x7fa0b0979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33378)[0m     @     0x7fa0b0977388 at::native::copy_impl()
[2m[36m(pid=33378)[0m     @     0x7fa0b09795a4 at::native::copy_()
[2m[36m(pid=33348)[0m     @     0x7f1a67809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33348)[0m     @     0x7f1a67807388 at::native::copy_impl()
[2m[36m(pid=33348)[0m     @     0x7f1a678095a4 at::native::copy_()
[2m[36m(pid=33372)[0m     @     0x7fb479ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33372)[0m     @     0x7fb479ef5388 at::native::copy_impl()
[2m[36m(pid=33372)[0m     @     0x7fb479ef75a4 at::native::copy_()
[2m[36m(pid=33246)[0m     @     0x7f94f1138ad3 at::TensorIterator::for_each()
[2m[36m(pid=33280)[0m     @     0x7f9e5c979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33280)[0m     @     0x7f9e5c977388 at::native::copy_impl()
[2m[36m(pid=33280)[0m     @     0x7f9e5c9795a4 at::native::copy_()
[2m[36m(pid=33280)[0m     @     0x7f9e5d0644f5 at::Tensor::copy_()
[2m[36m(pid=33317)[0m     @     0x7eeba4574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33317)[0m     @     0x7eeba4597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33317)[0m     @     0x7eeba3a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33317)[0m     @     0x7eeba3a37388 at::native::copy_impl()
[2m[36m(pid=33317)[0m     @     0x7eeba3a395a4 at::native::copy_()
[2m[36m(pid=33337)[0m     @     0x7f8e7863ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33337)[0m     @     0x7f8e7863a388 at::native::copy_impl()
[2m[36m(pid=33337)[0m     @     0x7f8e7863c5a4 at::native::copy_()
[2m[36m(pid=33337)[0m     @     0x7f8e78d274f5 at::Tensor::copy_()
[2m[36m(pid=33314)[0m     @     0x7f0315868ad3 at::TensorIterator::for_each()
[2m[36m(pid=33389)[0m     @     0x7f05ca517a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33389)[0m     @     0x7f05ca515388 at::native::copy_impl()
[2m[36m(pid=33389)[0m     @     0x7f05ca5175a4 at::native::copy_()
[2m[36m(pid=33389)[0m     @     0x7f05cac024f5 at::Tensor::copy_()
[2m[36m(pid=33389)[0m     @     0x7f05cd0d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33265)[0m     @     0x7f8790f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=33251)[0m     @     0x7f809cccf5a4 at::native::copy_()
[2m[36m(pid=33251)[0m     @     0x7f809d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33251)[0m     @     0x7f809f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33275)[0m     @     0x7f83cd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33275)[0m     @     0x7f83cf88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33275)[0m     @     0x7f83cd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33275)[0m     @     0x7f83d346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33275)[0m     @     0x55f71700afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33275)[0m     @     0x55f716f65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x55f716ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33275)[0m     @     0x55f716ff1a20 method_vectorcall
[2m[36m(pid=33275)[0m     @     0x55f716f65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x55f716ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33275)[0m     @     0x55f716ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33275)[0m     @     0x55f716f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x55f716ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33275)[0m     @     0x55f716ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33275)[0m     @     0x55f716f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x55f716ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33275)[0m     @     0x55f716ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33275)[0m     @     0x55f716f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33275)[0m     @     0x55f716ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33275)[0m     @     0x55f716ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33275)[0m     @     0x55f716f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x7f502e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33332)[0m     @     0x7f502d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33332)[0m     @     0x7f502d60e388 at::native::copy_impl()
[2m[36m(pid=33332)[0m     @     0x7f502d6105a4 at::native::copy_()
[2m[36m(pid=33256)[0m     @     0x7f9a6927a5a4 at::native::copy_()
[2m[36m(pid=33256)[0m     @     0x7f9a699654f5 at::Tensor::copy_()
[2m[36m(pid=33256)[0m     @     0x7f9a6be388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33309)[0m     @     0x7f975414a5a4 at::native::copy_()
[2m[36m(pid=33309)[0m     @     0x7f97548354f5 at::Tensor::copy_()
[2m[36m(pid=33309)[0m     @     0x7f9756d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33248)[0m     @     0x7f6a8803a5a4 at::native::copy_()
[2m[36m(pid=33248)[0m     @     0x7f6a887254f5 at::Tensor::copy_()
[2m[36m(pid=33248)[0m     @     0x7f6a8abf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33330)[0m     @     0x7fa4b21d0388 at::native::copy_impl()
[2m[36m(pid=33330)[0m     @     0x7fa4b21d25a4 at::native::copy_()
[2m[36m(pid=33330)[0m     @     0x7fa4b28bd4f5 at::Tensor::copy_()
[2m[36m(pid=33330)[0m     @     0x7fa4b4d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33284)[0m     @     0x7ef037e9f4f5 at::Tensor::copy_()
[2m[36m(pid=33284)[0m     @     0x7ef03a3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33284)[0m     @     0x7ef037e9f4f5 at::Tensor::copy_()
[2m[36m(pid=33284)[0m     @     0x7ef03df4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33284)[0m     @     0x5648e252afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33284)[0m     @     0x5648e2485b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2510baf _PyEval_EvalCodeWithName
[2m[36m(pid=33284)[0m     @     0x5648e2511a20 method_vectorcall
[2m[36m(pid=33284)[0m     @     0x5648e2485bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2510baf _PyEval_EvalCodeWithName
[2m[36m(pid=33284)[0m     @     0x5648e2511643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33284)[0m     @     0x5648e2486689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2510baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x7ef6595014f5 at::Tensor::copy_()
[2m[36m(pid=33245)[0m     @     0x7ef65b9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33245)[0m     @     0x7ef6595014f5 at::Tensor::copy_()
[2m[36m(pid=33245)[0m     @     0x7ef67d25979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33245)[0m     @     0x558a5f2edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33245)[0m     @     0x558a5f248b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x558a5f2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x558a5f2d4a20 method_vectorcall
[2m[36m(pid=33245)[0m     @     0x558a5f248bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x558a5f2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x558a5f2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33245)[0m     @     0x558a5f249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x558a5f2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x558a5f2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33245)[0m     @     0x558a5f249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x558a5f2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x558a5f2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33245)[0m     @     0x558a5f249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33245)[0m     @     0x558a5f2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33245)[0m     @     0x558a5f2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33245)[0m     @     0x558a5f249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x7fb2f35778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33376)[0m     @     0x7fb2f10a44f5 at::Tensor::copy_()
[2m[36m(pid=33369)[0m     @     0x7f550f766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33369)[0m     @     0x7f550f764388 at::native::copy_impl()
[2m[36m(pid=33357)[0m     @     0x7faa2f2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33357)[0m     @     0x7faa2ce0b4f5 at::Tensor::copy_()
[2m[36m(pid=33357)[0m     @     0x7faa32eb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33357)[0m     @     0x55717e21cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33357)[0m     @     0x55717e177b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33357)[0m     @     0x55717e203a20 method_vectorcall
[2m[36m(pid=33357)[0m     @     0x55717e177bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33357)[0m     @     0x55717e203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33357)[0m     @     0x55717e178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x7f28db6894f5 at::Tensor::copy_()
[2m[36m(pid=33349)[0m     @     0x7f28e173479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33349)[0m     @     0x55ef4c00ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33349)[0m     @     0x55ef4bf6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33349)[0m     @     0x55ef4bff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x55ef4bff6a20 method_vectorcall
[2m[36m(pid=33349)[0m     @     0x55ef4bf6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33349)[0m     @     0x55ef4bff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x55ef4bff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33349)[0m     @     0x55ef4bf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33349)[0m     @     0x55ef4bff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x55ef4bff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33349)[0m     @     0x55ef4bf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33349)[0m     @     0x55ef4bff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x55ef4bff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33349)[0m     @     0x55ef4bf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33349)[0m     @     0x55ef4bff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=33349)[0m     @     0x55ef4bff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33349)[0m     @     0x55ef4bf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x7f2a6e5e24f5 at::Tensor::copy_()
[2m[36m(pid=33278)[0m     @     0x7f2a70ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33247)[0m     @     0x7f0bc95cb4f5 at::Tensor::copy_()
[2m[36m(pid=33247)[0m     @     0x7f0bcba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33345)[0m     @     0x7fa0ab6b64f5 at::Tensor::copy_()
[2m[36m(pid=33345)[0m     @     0x7fa0b176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33345)[0m     @     0x5648e8855fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33345)[0m     @     0x5648e87b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x5648e883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33345)[0m     @     0x5648e883ca20 method_vectorcall
[2m[36m(pid=33345)[0m     @     0x5648e87b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x5648e883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33345)[0m     @     0x5648e883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33345)[0m     @     0x5648e87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x5648e883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33345)[0m     @     0x5648e883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33345)[0m     @     0x5648e87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x5648e883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33345)[0m     @     0x5648e883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33345)[0m     @     0x5648e87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33345)[0m     @     0x5648e883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33345)[0m     @     0x5648e883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33345)[0m     @     0x5648e87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x7f7389dfa4f5 at::Tensor::copy_()
[2m[36m(pid=33354)[0m     @     0x7f738fea579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33354)[0m     @     0x55dbf0f0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33354)[0m     @     0x55dbf0e65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x55dbf0ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33354)[0m     @     0x55dbf0ef1a20 method_vectorcall
[2m[36m(pid=33354)[0m     @     0x55dbf0e65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x55dbf0ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33354)[0m     @     0x55dbf0ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33354)[0m     @     0x55dbf0e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x55dbf0ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33354)[0m     @     0x55dbf0ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33354)[0m     @     0x55dbf0e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x55dbf0ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33354)[0m     @     0x55dbf0ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33354)[0m     @     0x55dbf0e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33354)[0m     @     0x55dbf0ef0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33354)[0m     @     0x55dbf0ef1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33354)[0m     @     0x55dbf0e66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x7f59413ba4f5 at::Tensor::copy_()
[2m[36m(pid=33255)[0m     @     0x7f594746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33255)[0m     @     0x5653f8dc0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33255)[0m     @     0x5653f8d1bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x5653f8da6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33255)[0m     @     0x5653f8da7a20 method_vectorcall
[2m[36m(pid=33255)[0m     @     0x5653f8d1bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x5653f8da6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33255)[0m     @     0x5653f8da7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33255)[0m     @     0x5653f8d1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x5653f8da6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33255)[0m     @     0x5653f8da7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33255)[0m     @     0x5653f8d1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x5653f8da6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33255)[0m     @     0x5653f8da7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33255)[0m     @     0x5653f8d1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33255)[0m     @     0x5653f8da6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33255)[0m     @     0x5653f8da7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33255)[0m     @     0x5653f8d1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x7f7d1db2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33382)[0m     @     0x56378521cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33382)[0m     @     0x563785177b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x563785202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33382)[0m     @     0x563785203a20 method_vectorcall
[2m[36m(pid=33382)[0m     @     0x563785177bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x563785202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33382)[0m     @     0x563785203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33382)[0m     @     0x563785178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x563785202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33382)[0m     @     0x563785203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33382)[0m     @     0x563785178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x563785202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33382)[0m     @     0x563785203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33382)[0m     @     0x563785178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33382)[0m     @     0x563785202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33382)[0m     @     0x563785203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33382)[0m     @     0x563785178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x7ecff8297c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33333)[0m     @     0x7ecff7739a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33333)[0m     @     0x7ecff7737388 at::native::copy_impl()
[2m[36m(pid=33315)[0m     @     0x7f944af9fd91 at::TensorIterator::for_each()
[2m[36m(pid=33315)[0m     @     0x7f944b882b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33315)[0m     @     0x7f944b8a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33310)[0m     @     0x7f1b10c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=33319)[0m     @     0x7f6f75e105a4 at::native::copy_()
[2m[36m(pid=33319)[0m     @     0x7f6f764fb4f5 at::Tensor::copy_()
[2m[36m(pid=33282)[0m     @     0x7f427f6894f5 at::Tensor::copy_()
[2m[36m(pid=33282)[0m     @     0x7f4281b5c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33276)[0m     @     0x7f9079c8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33276)[0m     @     0x7f90777b84f5 at::Tensor::copy_()
[2m[36m(pid=33276)[0m     @     0x7f907d86379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33320)[0m     @     0x7fc91ce958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33320)[0m     @     0x7fc91a9c24f5 at::Tensor::copy_()
[2m[36m(pid=33320)[0m     @     0x7fc920a6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33320)[0m     @     0x55c873f5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33320)[0m     @     0x55c873eb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=33320)[0m     @     0x55c873f44a20 method_vectorcall
[2m[36m(pid=33320)[0m     @     0x55c873eb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=33320)[0m     @     0x55c873f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33320)[0m     @     0x55c873eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=33320)[0m     @     0x55c873f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33259)[0m     @     0x7f49fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=33259)[0m     @     0x7f4a03a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33259)[0m     @     0x5594673c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33259)[0m     @     0x55946731db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33259)[0m     @     0x5594673a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33259)[0m     @     0x5594673a9a20 method_vectorcall
[2m[36m(pid=33259)[0m     @     0x55946731dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33259)[0m     @     0x5594673a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33259)[0m     @     0x5594673a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33259)[0m     @     0x55946731e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33259)[0m     @     0x5594673a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33259)[0m     @     0x5594673a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33259)[0m     @     0x55946731e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33259)[0m     @     0x5594673a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33259)[0m     @     0x5594673a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33259)[0m     @     0x55946731e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33259)[0m     @     0x5594673a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33259)[0m     @     0x5594673a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33259)[0m     @     0x55946731e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33367)[0m     @     0x55f6b7ae0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33367)[0m     @     0x55f6b7a55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x7f63381cf4f5 at::Tensor::copy_()
[2m[36m(pid=33325)[0m     @     0x7f633e27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33325)[0m     @     0x564cda9a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33325)[0m     @     0x564cda8fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x564cda986baf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x564cda987a20 method_vectorcall
[2m[36m(pid=33325)[0m     @     0x564cda8fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x564cda986baf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x564cda987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33325)[0m     @     0x564cda8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x564cda986baf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x564cda987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33325)[0m     @     0x564cda8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x564cda986baf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x564cda987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33325)[0m     @     0x564cda8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33325)[0m     @     0x564cda986baf _PyEval_EvalCodeWithName
[2m[36m(pid=33325)[0m     @     0x564cda987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33325)[0m     @     0x564cda8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x7f3aa7fa44f5 at::Tensor::copy_()
[2m[36m(pid=33318)[0m     @     0x7f3aaa4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33254)[0m     @     0x7ee5056fb4f5 at::Tensor::copy_()
[2m[36m(pid=33254)[0m     @     0x7ee50b7a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33254)[0m     @     0x56224b8e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33254)[0m     @     0x56224b843b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x56224b8cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33254)[0m     @     0x56224b8cfa20 method_vectorcall
[2m[36m(pid=33254)[0m     @     0x56224b843bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x56224b8cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33254)[0m     @     0x56224b8cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33254)[0m     @     0x56224b844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x56224b8cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33254)[0m     @     0x56224b8cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33254)[0m     @     0x56224b844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x56224b8cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33254)[0m     @     0x56224b8cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33254)[0m     @     0x56224b844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33254)[0m     @     0x56224b8cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33254)[0m     @     0x56224b8cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33254)[0m     @     0x56224b844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x7f86d0d274f5 at::Tensor::copy_()
[2m[36m(pid=33335)[0m     @     0x7f86d6dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33335)[0m     @     0x55cc81304fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33335)[0m     @     0x55cc8125fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x55cc812eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33335)[0m     @     0x55cc812eba20 method_vectorcall
[2m[36m(pid=33335)[0m     @     0x55cc8125fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x55cc812eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33335)[0m     @     0x55cc812eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33335)[0m     @     0x55cc81260689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x55cc812eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33335)[0m     @     0x55cc812eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33335)[0m     @     0x55cc81260689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x55cc812eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33335)[0m     @     0x55cc812eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33335)[0m     @     0x55cc81260689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33335)[0m     @     0x55cc812eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33335)[0m     @     0x55cc812eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33335)[0m     @     0x55cc81260689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x7f23c749f4f5 at::Tensor::copy_()
[2m[36m(pid=33334)[0m     @     0x7f23c99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33343)[0m     @     0x7f2eaa641d91 at::TensorIterator::for_each()
[2m[36m(pid=33343)[0m     @     0x7f2eaaf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33343)[0m     @     0x7f2eaaf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33312)[0m     @     0x7eefdb31e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33312)[0m     @     0x7eefd8e4b4f5 at::Tensor::copy_()
[2m[36m(pid=33312)[0m     @     0x7eefdeef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33312)[0m     @     0x56188edf4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33312)[0m     @     0x56188ed4fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33312)[0m     @     0x56188eddabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33312)[0m     @     0x56188eddba20 method_vectorcall
[2m[36m(pid=33272)[0m     @     0x7f79e66a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33272)[0m     @     0x561f00960fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33272)[0m     @     0x561f008bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33272)[0m     @     0x561f00946baf _PyEval_EvalCodeWithName
[2m[36m(pid=33272)[0m     @     0x561f00947a20 method_vectorcall
[2m[36m(pid=33272)[0m     @     0x561f008bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33272)[0m     @     0x561f00946baf _PyEval_EvalCodeWithName
[2m[36m(pid=33272)[0m     @     0x561f00947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33272)[0m     @     0x561f008bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33272)[0m     @     0x561f00946baf _PyEval_EvalCodeWithName
[2m[36m(pid=33272)[0m     @     0x561f00947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33272)[0m     @     0x561f008bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33272)[0m     @     0x561f00946baf _PyEval_EvalCodeWithName
[2m[36m(pid=33272)[0m     @     0x561f00947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33272)[0m     @     0x561f008bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33272)[0m     @     0x561f00946baf _PyEval_EvalCodeWithName
[2m[36m(pid=33272)[0m     @     0x561f00947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33272)[0m     @     0x561f008bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x7f6ced6238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33253)[0m     @     0x7f6ceb1504f5 at::Tensor::copy_()
[2m[36m(pid=33253)[0m     @     0x7f6cf11fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33253)[0m     @     0x5556fad56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33253)[0m     @     0x5556facb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x7f14a79cc4f5 at::Tensor::copy_()
[2m[36m(pid=33267)[0m     @     0x7f14ada7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33267)[0m     @     0x5602c228bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33267)[0m     @     0x5602c21e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x5602c2271baf _PyEval_EvalCodeWithName
[2m[36m(pid=33267)[0m     @     0x5602c2272a20 method_vectorcall
[2m[36m(pid=33267)[0m     @     0x5602c21e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x5602c2271baf _PyEval_EvalCodeWithName
[2m[36m(pid=33267)[0m     @     0x5602c2272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33267)[0m     @     0x5602c21e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x5602c2271baf _PyEval_EvalCodeWithName
[2m[36m(pid=33267)[0m     @     0x5602c2272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33267)[0m     @     0x5602c21e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x5602c2271baf _PyEval_EvalCodeWithName
[2m[36m(pid=33267)[0m     @     0x5602c2272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33267)[0m     @     0x5602c21e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33267)[0m     @     0x5602c2271baf _PyEval_EvalCodeWithName
[2m[36m(pid=33267)[0m     @     0x5602c2272643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33267)[0m     @     0x5602c21e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x7ed8f1f264f5 at::Tensor::copy_()
[2m[36m(pid=33263)[0m     @     0x7ed8f7fd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33263)[0m     @     0x5574b65d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33263)[0m     @     0x5574b652db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x5574b65b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33263)[0m     @     0x5574b65b9a20 method_vectorcall
[2m[36m(pid=33263)[0m     @     0x5574b652dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x5574b65b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33263)[0m     @     0x5574b65b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33263)[0m     @     0x5574b652e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x5574b65b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33263)[0m     @     0x5574b65b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33263)[0m     @     0x5574b652e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x5574b65b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33263)[0m     @     0x5574b65b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33263)[0m     @     0x5574b652e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33263)[0m     @     0x5574b65b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=33263)[0m     @     0x5574b65b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33263)[0m     @     0x5574b652e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x7f40b8c574f5 at::Tensor::copy_()
[2m[36m(pid=33269)[0m     @     0x7f40bed0279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33269)[0m     @     0x5595d79ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33269)[0m     @     0x5595d7938b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x5595d79c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33269)[0m     @     0x5595d79c4a20 method_vectorcall
[2m[36m(pid=33269)[0m     @     0x5595d7938bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x5595d79c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33269)[0m     @     0x5595d79c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33269)[0m     @     0x5595d7939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x5595d79c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33269)[0m     @     0x5595d79c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33269)[0m     @     0x5595d7939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x5595d79c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33269)[0m     @     0x5595d79c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33269)[0m     @     0x5595d7939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33269)[0m     @     0x5595d79c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33269)[0m     @     0x5595d79c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33269)[0m     @     0x5595d7939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x7f4c2f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33363)[0m     @     0x7f4c2cc764f5 at::Tensor::copy_()
[2m[36m(pid=33363)[0m     @     0x7f4c32d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33363)[0m     @     0x557753c6efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33363)[0m     @     0x557753bc9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x557753c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m     @     0x557753c55a20 method_vectorcall
[2m[36m(pid=33363)[0m     @     0x557753bc9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x557753c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m     @     0x557753c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33363)[0m     @     0x557753bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x557753c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m     @     0x557753c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33363)[0m     @     0x557753bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x557753c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m     @     0x557753c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33363)[0m     @     0x557753bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33363)[0m     @     0x557753c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=33363)[0m     @     0x557753c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33363)[0m     @     0x557753bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x7f4fe09f84f5 at::Tensor::copy_()
[2m[36m(pid=33279)[0m     @     0x7f4fe2ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33279)[0m     @     0x7f4fe09f84f5 at::Tensor::copy_()
[2m[36m(pid=33279)[0m     @     0x7f4fe6aa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33279)[0m     @     0x559b0a5e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33279)[0m     @     0x559b0a53bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x7f9a5cf3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33252)[0m     @     0x7f9a5aa674f5 at::Tensor::copy_()
[2m[36m(pid=33252)[0m     @     0x7f9a60b1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33252)[0m     @     0x5588d4090fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33252)[0m     @     0x5588d3febb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x5588d4076baf _PyEval_EvalCodeWithName
[2m[36m(pid=33252)[0m     @     0x5588d4077a20 method_vectorcall
[2m[36m(pid=33252)[0m     @     0x5588d3febbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x5588d4076baf _PyEval_EvalCodeWithName
[2m[36m(pid=33252)[0m     @     0x5588d4077643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33252)[0m     @     0x5588d3fec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x5588d4076baf _PyEval_EvalCodeWithName
[2m[36m(pid=33252)[0m     @     0x5588d4077643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33252)[0m     @     0x5588d3fec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x5588d4076baf _PyEval_EvalCodeWithName
[2m[36m(pid=33252)[0m     @     0x5588d4077643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33252)[0m     @     0x5588d3fec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33252)[0m     @     0x5588d4076baf _PyEval_EvalCodeWithName
[2m[36m(pid=33252)[0m     @     0x5588d4077643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33252)[0m     @     0x5588d3fec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x7f8899552d91 at::TensorIterator::for_each()
[2m[36m(pid=33262)[0m     @     0x7f8899e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33262)[0m     @     0x7f8899e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33262)[0m     @     0x7f88992faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33262)[0m     @     0x7f88992f8388 at::native::copy_impl()
[2m[36m(pid=33316)[0m     @     0x7fb53d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33316)[0m     @     0x7fb54346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33316)[0m     @     0x55ec8b30cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33316)[0m     @     0x55ec8b267b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33316)[0m     @     0x55ec8b2f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=33316)[0m     @     0x55ec8b2f3a20 method_vectorcall
[2m[36m(pid=33316)[0m     @     0x55ec8b267bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33316)[0m     @     0x55ec8b2f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=33316)[0m     @     0x55ec8b2f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33316)[0m     @     0x55ec8b268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33316)[0m     @     0x55ec8b2f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=33316)[0m     @     0x55ec8b2f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33316)[0m     @     0x55ec8b268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33316)[0m     @     0x55ec8b2f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=33316)[0m     @     0x55ec8b2f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33316)[0m     @     0x55ec8b268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33316)[0m     @     0x55ec8b2f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=33316)[0m     @     0x55ec8b2f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33316)[0m     @     0x55ec8b268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x7f139259b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33287)[0m     @     0x7f13900c84f5 at::Tensor::copy_()
[2m[36m(pid=33287)[0m     @     0x7f139617379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33287)[0m     @     0x558035debfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33287)[0m     @     0x558035d46b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x558035dd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=33287)[0m     @     0x558035dd2a20 method_vectorcall
[2m[36m(pid=33287)[0m     @     0x558035d46bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x558035dd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=33287)[0m     @     0x558035dd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33287)[0m     @     0x558035d47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x558035dd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=33287)[0m     @     0x558035dd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33287)[0m     @     0x558035d47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x558035dd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=33287)[0m     @     0x558035dd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33287)[0m     @     0x558035d47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33287)[0m     @     0x558035dd1baf _PyEval_EvalCodeWithName
[2m[36m(pid=33287)[0m     @     0x558035dd2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33287)[0m     @     0x558035d47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x7f3dfc9514f5 at::Tensor::copy_()
[2m[36m(pid=33249)[0m     @     0x7f3e029fc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33249)[0m     @     0x56133d6fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33249)[0m     @     0x56133d658b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x56133d6e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33249)[0m     @     0x56133d6e4a20 method_vectorcall
[2m[36m(pid=33249)[0m     @     0x56133d658bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x56133d6e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33249)[0m     @     0x56133d6e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33249)[0m     @     0x56133d659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x56133d6e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33249)[0m     @     0x56133d6e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33249)[0m     @     0x56133d659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x56133d6e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33249)[0m     @     0x56133d6e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33249)[0m     @     0x56133d659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33249)[0m     @     0x56133d6e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=33249)[0m     @     0x56133d6e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33249)[0m     @     0x56133d659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x7f5f621654f5 at::Tensor::copy_()
[2m[36m(pid=33313)[0m     @     0x7f5f646388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33313)[0m     @     0x7f5f621654f5 at::Tensor::copy_()
[2m[36m(pid=33313)[0m     @     0x7f5f6821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33313)[0m     @     0x559d5a62cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33313)[0m     @     0x559d5a587b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x559d5a612baf _PyEval_EvalCodeWithName
[2m[36m(pid=33313)[0m     @     0x559d5a613a20 method_vectorcall
[2m[36m(pid=33313)[0m     @     0x559d5a587bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x559d5a612baf _PyEval_EvalCodeWithName
[2m[36m(pid=33313)[0m     @     0x559d5a613643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33313)[0m     @     0x559d5a588689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x559d5a612baf _PyEval_EvalCodeWithName
[2m[36m(pid=33313)[0m     @     0x559d5a613643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33313)[0m     @     0x559d5a588689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x559d5a612baf _PyEval_EvalCodeWithName
[2m[36m(pid=33313)[0m     @     0x559d5a613643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33313)[0m     @     0x559d5a588689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33313)[0m     @     0x559d5a612baf _PyEval_EvalCodeWithName
[2m[36m(pid=33313)[0m     @     0x559d5a613643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33313)[0m     @     0x559d5a588689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x7ef55e42ad91 at::TensorIterator::for_each()
[2m[36m(pid=33261)[0m     @     0x7ef55ed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33261)[0m     @     0x7ef55ed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33261)[0m     @     0x7ef55e1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33378)[0m     @     0x7fa0b10644f5 at::Tensor::copy_()
[2m[36m(pid=33378)[0m     @     0x7fa0b35378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33378)[0m     @     0x7fa0b10644f5 at::Tensor::copy_()
[2m[36m(pid=33378)[0m     @     0x7fa0b710f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33378)[0m     @     0x557377668fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33378)[0m     @     0x5573775c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33378)[0m     @     0x55737764ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33378)[0m     @     0x55737764fa20 method_vectorcall
[2m[36m(pid=33378)[0m     @     0x5573775c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33378)[0m     @     0x55737764ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33378)[0m     @     0x55737764f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33378)[0m     @     0x5573775c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33378)[0m     @     0x55737764ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33378)[0m     @     0x55737764f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33378)[0m     @     0x5573775c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33378)[0m     @     0x55737764ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33378)[0m     @     0x55737764f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33378)[0m     @     0x5573775c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33378)[0m     @     0x55737764ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33378)[0m     @     0x55737764f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33378)[0m     @     0x5573775c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x7f1a67ef44f5 at::Tensor::copy_()
[2m[36m(pid=33348)[0m     @     0x7f1a6a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33348)[0m     @     0x7f1a67ef44f5 at::Tensor::copy_()
[2m[36m(pid=33348)[0m     @     0x7f1a6df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33348)[0m     @     0x55c2be198fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33348)[0m     @     0x55c2be0f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x55c2be17ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33348)[0m     @     0x55c2be17fa20 method_vectorcall
[2m[36m(pid=33348)[0m     @     0x55c2be0f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x55c2be17ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33348)[0m     @     0x55c2be17f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33348)[0m     @     0x55c2be0f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x55c2be17ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33348)[0m     @     0x55c2be17f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33348)[0m     @     0x55c2be0f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x55c2be17ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33348)[0m     @     0x55c2be17f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33348)[0m     @     0x55c2be0f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33348)[0m     @     0x55c2be17ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33348)[0m     @     0x55c2be17f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33348)[0m     @     0x55c2be0f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x7fb47a5e24f5 at::Tensor::copy_()
[2m[36m(pid=33372)[0m     @     0x7fb47cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33372)[0m     @     0x7fb47a5e24f5 at::Tensor::copy_()
[2m[36m(pid=33372)[0m     @     0x7fb48068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33372)[0m     @     0x55e6951affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33372)[0m     @     0x55e69510ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x55e695195baf _PyEval_EvalCodeWithName
[2m[36m(pid=33372)[0m     @     0x55e695196a20 method_vectorcall
[2m[36m(pid=33372)[0m     @     0x55e69510abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x55e695195baf _PyEval_EvalCodeWithName
[2m[36m(pid=33372)[0m     @     0x55e695196643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33372)[0m     @     0x55e69510b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x55e695195baf _PyEval_EvalCodeWithName
[2m[36m(pid=33372)[0m     @     0x55e695196643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33372)[0m     @     0x55e69510b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x55e695195baf _PyEval_EvalCodeWithName
[2m[36m(pid=33372)[0m     @     0x55e695196643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33372)[0m     @     0x55e69510b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33372)[0m     @     0x55e695195baf _PyEval_EvalCodeWithName
[2m[36m(pid=33372)[0m     @     0x55e695196643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33372)[0m     @     0x55e69510b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x7f94f1138d91 at::TensorIterator::for_each()
[2m[36m(pid=33246)[0m     @     0x7f94f1a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33246)[0m     @     0x7f94f1a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33246)[0m     @     0x7f94f0ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33280)[0m     @     0x7f9e5f5378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33280)[0m     @     0x7f9e5d0644f5 at::Tensor::copy_()
[2m[36m(pid=33280)[0m     @     0x7f9e6310f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33280)[0m     @     0x556e7a23bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33280)[0m     @     0x556e7a196b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33280)[0m     @     0x556e7a221baf _PyEval_EvalCodeWithName
[2m[36m(pid=33280)[0m     @     0x556e7a222a20 method_vectorcall
[2m[36m(pid=33280)[0m     @     0x556e7a196bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33280)[0m     @     0x556e7a221baf _PyEval_EvalCodeWithName
[2m[36m(pid=33280)[0m     @     0x556e7a222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33280)[0m     @     0x556e7a197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33280)[0m     @     0x556e7a221baf _PyEval_EvalCodeWithName
[2m[36m(pid=33280)[0m     @     0x556e7a222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33280)[0m     @     0x556e7a197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33280)[0m     @     0x556e7a221baf _PyEval_EvalCodeWithName
[2m[36m(pid=33280)[0m     @     0x556e7a222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33280)[0m     @     0x556e7a197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33280)[0m     @     0x556e7a221baf _PyEval_EvalCodeWithName
[2m[36m(pid=33280)[0m     @     0x556e7a222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33280)[0m     @     0x556e7a197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33317)[0m     @     0x7eeba41244f5 at::Tensor::copy_()
[2m[36m(pid=33317)[0m     @     0x7eeba65f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33317)[0m     @     0x7eeba41244f5 at::Tensor::copy_()
[2m[36m(pid=33317)[0m     @     0x7eebaa1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33317)[0m     @     0x55da74c4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33317)[0m     @     0x55da74ba8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x7f8e7b1fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33337)[0m     @     0x7f8e78d274f5 at::Tensor::copy_()
[2m[36m(pid=33337)[0m     @     0x7f8e7edd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33337)[0m     @     0x56008a8b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33337)[0m     @     0x56008a810b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x56008a89bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33337)[0m     @     0x56008a89ca20 method_vectorcall
[2m[36m(pid=33337)[0m     @     0x56008a810bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x56008a89bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33337)[0m     @     0x56008a89c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33337)[0m     @     0x56008a811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x56008a89bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33337)[0m     @     0x56008a89c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33337)[0m     @     0x56008a811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x56008a89bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33337)[0m     @     0x56008a89c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33337)[0m     @     0x56008a811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33337)[0m     @     0x56008a89bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33337)[0m     @     0x56008a89c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33337)[0m     @     0x56008a811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x7f0315868d91 at::TensorIterator::for_each()
[2m[36m(pid=33314)[0m     @     0x7f031614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33314)[0m     @     0x7f031616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33314)[0m     @     0x7f0315610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33314)[0m     @     0x7f031560e388 at::native::copy_impl()
[2m[36m(pid=33389)[0m     @     0x7f05cac024f5 at::Tensor::copy_()
[2m[36m(pid=33389)[0m     @     0x7f05d0cad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33389)[0m     @     0x5590f1401fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33389)[0m     @     0x5590f135cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33389)[0m     @     0x5590f13e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33389)[0m     @     0x5590f13e8a20 method_vectorcall
[2m[36m(pid=33389)[0m     @     0x5590f135cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33389)[0m     @     0x5590f13e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33389)[0m     @     0x5590f13e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33389)[0m     @     0x5590f135d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33389)[0m     @     0x5590f13e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33389)[0m     @     0x5590f13e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33389)[0m     @     0x5590f135d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33389)[0m     @     0x5590f13e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33389)[0m     @     0x5590f13e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33389)[0m     @     0x5590f135d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33389)[0m     @     0x5590f13e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33389)[0m     @     0x5590f13e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33389)[0m     @     0x5590f135d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x7f8790f27d91 at::TensorIterator::for_each()
[2m[36m(pid=33265)[0m     @     0x7f879180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33265)[0m     @     0x7f879182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33251)[0m     @     0x7f809d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=33251)[0m     @     0x7f80a346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33251)[0m     @     0x5609bf520fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33251)[0m     @     0x5609bf47bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33251)[0m     @     0x5609bf506baf _PyEval_EvalCodeWithName
[2m[36m(pid=33251)[0m     @     0x5609bf507a20 method_vectorcall
[2m[36m(pid=33251)[0m     @     0x5609bf47bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33251)[0m     @     0x5609bf506baf _PyEval_EvalCodeWithName
[2m[36m(pid=33251)[0m     @     0x5609bf507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33251)[0m     @     0x5609bf47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33251)[0m     @     0x5609bf506baf _PyEval_EvalCodeWithName
[2m[36m(pid=33251)[0m     @     0x5609bf507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33251)[0m     @     0x5609bf47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33251)[0m     @     0x5609bf506baf _PyEval_EvalCodeWithName
[2m[36m(pid=33251)[0m     @     0x5609bf507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33251)[0m     @     0x5609bf47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33251)[0m     @     0x5609bf506baf _PyEval_EvalCodeWithName
[2m[36m(pid=33251)[0m     @     0x5609bf507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33251)[0m     @     0x5609bf47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x7f502dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=33332)[0m     @     0x7f50301ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33332)[0m     @     0x7f502dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=33332)[0m     @     0x7f5033da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33332)[0m     @     0x55b2d87d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33332)[0m     @     0x55b2d8732b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x55b2d87bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33332)[0m     @     0x55b2d87bea20 method_vectorcall
[2m[36m(pid=33332)[0m     @     0x55b2d8732bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x55b2d87bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33332)[0m     @     0x55b2d87be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33332)[0m     @     0x55b2d8733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x55b2d87bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33332)[0m     @     0x55b2d87be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33332)[0m     @     0x55b2d8733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x55b2d87bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33332)[0m     @     0x55b2d87be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33332)[0m     @     0x55b2d8733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33332)[0m     @     0x55b2d87bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33332)[0m     @     0x55b2d87be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33332)[0m     @     0x55b2d8733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x7f9a699654f5 at::Tensor::copy_()
[2m[36m(pid=33256)[0m     @     0x7f9a6fa1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33256)[0m     @     0x562670533fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33256)[0m     @     0x56267048eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x562670519baf _PyEval_EvalCodeWithName
[2m[36m(pid=33256)[0m     @     0x56267051aa20 method_vectorcall
[2m[36m(pid=33256)[0m     @     0x56267048ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x562670519baf _PyEval_EvalCodeWithName
[2m[36m(pid=33256)[0m     @     0x56267051a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33256)[0m     @     0x56267048f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x562670519baf _PyEval_EvalCodeWithName
[2m[36m(pid=33256)[0m     @     0x56267051a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33256)[0m     @     0x56267048f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x562670519baf _PyEval_EvalCodeWithName
[2m[36m(pid=33256)[0m     @     0x56267051a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33256)[0m     @     0x56267048f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33256)[0m     @     0x562670519baf _PyEval_EvalCodeWithName
[2m[36m(pid=33256)[0m     @     0x56267051a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33256)[0m     @     0x56267048f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x7f5c76852d91 at::TensorIterator::for_each()
[2m[36m(pid=33250)[0m     @     0x7f5c77135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33250)[0m     @     0x7f5c77158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33250)[0m     @     0x7f5c765faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33250)[0m     @     0x7f5c765f8388 at::native::copy_impl()
[2m[36m(pid=33309)[0m     @     0x7f97548354f5 at::Tensor::copy_()
[2m[36m(pid=33309)[0m     @     0x7f975a8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33309)[0m     @     0x55a4320c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33309)[0m     @     0x55a43201eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33309)[0m     @     0x55a4320a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33309)[0m     @     0x55a4320aaa20 method_vectorcall
[2m[36m(pid=33309)[0m     @     0x55a43201ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33309)[0m     @     0x55a4320a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33309)[0m     @     0x55a4320aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33309)[0m     @     0x55a43201f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33309)[0m     @     0x55a4320a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33309)[0m     @     0x55a4320aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33309)[0m     @     0x55a43201f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33309)[0m     @     0x55a4320a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33309)[0m     @     0x55a4320aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33309)[0m     @     0x55a43201f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33309)[0m     @     0x55a4320a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33309)[0m     @     0x55a4320aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33309)[0m     @     0x55a43201f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x7f6a887254f5 at::Tensor::copy_()
[2m[36m(pid=33248)[0m     @     0x7f6a8e7d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33248)[0m     @     0x5566fda97fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33248)[0m     @     0x5566fd9f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x5566fda7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33248)[0m     @     0x5566fda7ea20 method_vectorcall
[2m[36m(pid=33248)[0m     @     0x5566fd9f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x5566fda7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33248)[0m     @     0x5566fda7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33248)[0m     @     0x5566fd9f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x5566fda7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33248)[0m     @     0x5566fda7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33248)[0m     @     0x5566fd9f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x5566fda7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33248)[0m     @     0x5566fda7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33248)[0m     @     0x5566fd9f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33248)[0m     @     0x5566fda7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33248)[0m     @     0x5566fda7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33248)[0m     @     0x5566fd9f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x7fa4b28bd4f5 at::Tensor::copy_()
[2m[36m(pid=33330)[0m     @     0x7fa4b896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33330)[0m     @     0x5648172acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33330)[0m     @     0x564817207b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x564817292baf _PyEval_EvalCodeWithName
[2m[36m(pid=33330)[0m     @     0x564817293a20 method_vectorcall
[2m[36m(pid=33330)[0m     @     0x564817207bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x564817292baf _PyEval_EvalCodeWithName
[2m[36m(pid=33330)[0m     @     0x564817293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33330)[0m     @     0x564817208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x564817292baf _PyEval_EvalCodeWithName
[2m[36m(pid=33330)[0m     @     0x564817293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33330)[0m     @     0x564817208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x564817292baf _PyEval_EvalCodeWithName
[2m[36m(pid=33330)[0m     @     0x564817293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33330)[0m     @     0x564817208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33330)[0m     @     0x564817292baf _PyEval_EvalCodeWithName
[2m[36m(pid=33330)[0m     @     0x564817293643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33330)[0m     @     0x564817208689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2511643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33284)[0m     @     0x5648e2486689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2510baf _PyEval_EvalCodeWithName
[2m[36m(pid=33284)[0m     @     0x5648e2511643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33284)[0m     @     0x5648e2486689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33284)[0m     @     0x5648e2510baf _PyEval_EvalCodeWithName
[2m[36m(pid=33284)[0m     @     0x5648e2511643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33284)[0m     @     0x5648e2486689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x7fb2f714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33376)[0m     @     0x55f3c9944fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33376)[0m     @     0x55f3c989fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x55f3c992abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33376)[0m     @     0x55f3c992ba20 method_vectorcall
[2m[36m(pid=33376)[0m     @     0x55f3c989fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x55f3c992abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33376)[0m     @     0x55f3c992b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33376)[0m     @     0x55f3c98a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x55f3c992abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33376)[0m     @     0x55f3c992b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33376)[0m     @     0x55f3c98a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x55f3c992abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33376)[0m     @     0x55f3c992b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33376)[0m     @     0x55f3c98a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33376)[0m     @     0x55f3c992abaf _PyEval_EvalCodeWithName
[2m[36m(pid=33376)[0m     @     0x55f3c992b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33376)[0m     @     0x55f3c98a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33369)[0m     @     0x7f550f7665a4 at::native::copy_()
[2m[36m(pid=33369)[0m     @     0x7f550fe514f5 at::Tensor::copy_()
[2m[36m(pid=33369)[0m     @     0x7f55123248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33369)[0m     @     0x7f550fe514f5 at::Tensor::copy_()
[2m[36m(pid=33369)[0m     @     0x7f5515efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33369)[0m     @     0x55968ab23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33369)[0m     @     0x55968aa7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33369)[0m     @     0x55968ab09baf _PyEval_EvalCodeWithName
[2m[36m(pid=33369)[0m     @     0x55968ab0aa20 method_vectorcall
[2m[36m(pid=33369)[0m     @     0x55968aa7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33357)[0m     @     0x55717e178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33357)[0m     @     0x55717e203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33357)[0m     @     0x55717e178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33357)[0m     @     0x55717e202baf _PyEval_EvalCodeWithName
[2m[36m(pid=33357)[0m     @     0x55717e203643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33357)[0m     @     0x55717e178689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x7f2a6e5e24f5 at::Tensor::copy_()
[2m[36m(pid=33278)[0m     @     0x7f2a7468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33278)[0m     @     0x55b953bfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33278)[0m     @     0x55b953b55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x55b953be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33278)[0m     @     0x55b953be1a20 method_vectorcall
[2m[36m(pid=33278)[0m     @     0x55b953b55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x55b953be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33278)[0m     @     0x55b953be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33278)[0m     @     0x55b953b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x55b953be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33278)[0m     @     0x55b953be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33278)[0m     @     0x55b953b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x55b953be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33278)[0m     @     0x55b953be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33278)[0m     @     0x55b953b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33278)[0m     @     0x55b953be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=33278)[0m     @     0x55b953be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33278)[0m     @     0x55b953b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x7f0bc95cb4f5 at::Tensor::copy_()
[2m[36m(pid=33247)[0m     @     0x7f0bcf67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33247)[0m     @     0x55ecff7e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33247)[0m     @     0x55ecff73cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x55ecff7c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33247)[0m     @     0x55ecff7c8a20 method_vectorcall
[2m[36m(pid=33247)[0m     @     0x55ecff73cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x55ecff7c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33247)[0m     @     0x55ecff7c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33247)[0m     @     0x55ecff73d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x55ecff7c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33247)[0m     @     0x55ecff7c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33247)[0m     @     0x55ecff73d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x55ecff7c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33247)[0m     @     0x55ecff7c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33247)[0m     @     0x55ecff73d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33247)[0m     @     0x55ecff7c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=33247)[0m     @     0x55ecff7c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33247)[0m     @     0x55ecff73d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x7ecff77395a4 at::native::copy_()
[2m[36m(pid=33333)[0m     @     0x7ecff7e244f5 at::Tensor::copy_()
[2m[36m(pid=33333)[0m     @     0x7ecffa2f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33333)[0m     @     0x7ecff7e244f5 at::Tensor::copy_()
[2m[36m(pid=33333)[0m     @     0x7ecffdecf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33333)[0m     @     0x55973ec31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33333)[0m     @     0x55973eb8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x55973ec17baf _PyEval_EvalCodeWithName
[2m[36m(pid=33333)[0m     @     0x55973ec18a20 method_vectorcall
[2m[36m(pid=33333)[0m     @     0x55973eb8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x55973ec17baf _PyEval_EvalCodeWithName
[2m[36m(pid=33333)[0m     @     0x55973ec18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33333)[0m     @     0x55973eb8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x55973ec17baf _PyEval_EvalCodeWithName
[2m[36m(pid=33333)[0m     @     0x55973ec18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33333)[0m     @     0x55973eb8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x55973ec17baf _PyEval_EvalCodeWithName
[2m[36m(pid=33333)[0m     @     0x55973ec18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33333)[0m     @     0x55973eb8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33333)[0m     @     0x55973ec17baf _PyEval_EvalCodeWithName
[2m[36m(pid=33333)[0m     @     0x55973ec18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33333)[0m     @     0x55973eb8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x7f944ad47a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33315)[0m     @     0x7f944ad45388 at::native::copy_impl()
[2m[36m(pid=33315)[0m     @     0x7f944ad475a4 at::native::copy_()
[2m[36m(pid=33315)[0m     @     0x7f944b4324f5 at::Tensor::copy_()
[2m[36m(pid=33310)[0m     @     0x7f1b10c11d91 at::TensorIterator::for_each()
[2m[36m(pid=33310)[0m     @     0x7f1b114f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=33310)[0m     @     0x7f1b11517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=33319)[0m     @     0x7f6f789ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33319)[0m     @     0x7f6f764fb4f5 at::Tensor::copy_()
[2m[36m(pid=33319)[0m     @     0x7f6f7c5a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33319)[0m     @     0x55ba82240fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33319)[0m     @     0x55ba8219bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33319)[0m     @     0x55ba82226baf _PyEval_EvalCodeWithName
[2m[36m(pid=33319)[0m     @     0x55ba82227a20 method_vectorcall
[2m[36m(pid=33319)[0m     @     0x55ba8219bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33319)[0m     @     0x55ba82226baf _PyEval_EvalCodeWithName
[2m[36m(pid=33319)[0m     @     0x55ba82227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33319)[0m     @     0x55ba8219c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33319)[0m     @     0x55ba82226baf _PyEval_EvalCodeWithName
[2m[36m(pid=33319)[0m     @     0x55ba82227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33319)[0m     @     0x55ba8219c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33319)[0m     @     0x55ba82226baf _PyEval_EvalCodeWithName
[2m[36m(pid=33319)[0m     @     0x55ba82227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33319)[0m     @     0x55ba8219c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33319)[0m     @     0x55ba82226baf _PyEval_EvalCodeWithName
[2m[36m(pid=33319)[0m     @     0x55ba82227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33319)[0m     @     0x55ba8219c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x7f427f6894f5 at::Tensor::copy_()
[2m[36m(pid=33282)[0m     @     0x7f428573479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33282)[0m     @     0x5566f5110fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33282)[0m     @     0x5566f506bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x5566f50f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33282)[0m     @     0x5566f50f7a20 method_vectorcall
[2m[36m(pid=33282)[0m     @     0x5566f506bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x5566f50f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33282)[0m     @     0x5566f50f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33282)[0m     @     0x5566f506c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x5566f50f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33282)[0m     @     0x5566f50f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33282)[0m     @     0x5566f506c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x5566f50f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33282)[0m     @     0x5566f50f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33282)[0m     @     0x5566f506c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33282)[0m     @     0x5566f50f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33282)[0m     @     0x5566f50f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33282)[0m     @     0x5566f506c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c1447fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33276)[0m     @     0x5584c13a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c142dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33276)[0m     @     0x5584c142ea20 method_vectorcall
[2m[36m(pid=33276)[0m     @     0x5584c13a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c142dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33276)[0m     @     0x5584c142e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33276)[0m     @     0x5584c13a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c142dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33276)[0m     @     0x5584c142e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33276)[0m     @     0x5584c13a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c142dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33276)[0m     @     0x5584c142e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33276)[0m     @     0x5584c13a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33276)[0m     @     0x5584c142dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33276)[0m     @     0x5584c142e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33276)[0m     @     0x5584c13a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=33320)[0m     @     0x55c873f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33320)[0m     @     0x55c873eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33320)[0m     @     0x55c873f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=33320)[0m     @     0x55c873f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33320)[0m     @     0x55c873eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x7f3aa7fa44f5 at::Tensor::copy_()
[2m[36m(pid=33318)[0m     @     0x7f3aae04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33318)[0m     @     0x5631b4df7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33318)[0m     @     0x5631b4d52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x5631b4dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33318)[0m     @     0x5631b4ddea20 method_vectorcall
[2m[36m(pid=33318)[0m     @     0x5631b4d52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x5631b4dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33318)[0m     @     0x5631b4dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33318)[0m     @     0x5631b4d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x5631b4dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33318)[0m     @     0x5631b4dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33318)[0m     @     0x5631b4d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x5631b4dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33318)[0m     @     0x5631b4dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33318)[0m     @     0x5631b4d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33318)[0m     @     0x5631b4dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33318)[0m     @     0x5631b4dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33318)[0m     @     0x5631b4d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x7f23c749f4f5 at::Tensor::copy_()
[2m[36m(pid=33334)[0m     @     0x7f23cd54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33334)[0m     @     0x556d9b760fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33334)[0m     @     0x556d9b6bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x556d9b746baf _PyEval_EvalCodeWithName
[2m[36m(pid=33334)[0m     @     0x556d9b747a20 method_vectorcall
[2m[36m(pid=33334)[0m     @     0x556d9b6bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x556d9b746baf _PyEval_EvalCodeWithName
[2m[36m(pid=33334)[0m     @     0x556d9b747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33334)[0m     @     0x556d9b6bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x556d9b746baf _PyEval_EvalCodeWithName
[2m[36m(pid=33334)[0m     @     0x556d9b747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33334)[0m     @     0x556d9b6bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x556d9b746baf _PyEval_EvalCodeWithName
[2m[36m(pid=33334)[0m     @     0x556d9b747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33334)[0m     @     0x556d9b6bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33334)[0m     @     0x556d9b746baf _PyEval_EvalCodeWithName
[2m[36m(pid=33334)[0m     @     0x556d9b747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33334)[0m     @     0x556d9b6bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x7f2eaa3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33343)[0m     @     0x7f2eaa3e7388 at::native::copy_impl()
[2m[36m(pid=33343)[0m     @     0x7f2eaa3e95a4 at::native::copy_()
[2m[36m(pid=33343)[0m     @     0x7f2eaaad44f5 at::Tensor::copy_()
[2m[36m(pid=33312)[0m     @     0x56188ed4fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33312)[0m     @     0x56188eddabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33312)[0m     @     0x56188eddb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33312)[0m     @     0x56188ed50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33312)[0m     @     0x56188eddabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33312)[0m     @     0x56188eddb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33312)[0m     @     0x56188ed50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33312)[0m     @     0x56188eddabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33312)[0m     @     0x56188eddb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33312)[0m     @     0x56188ed50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33312)[0m     @     0x56188eddabaf _PyEval_EvalCodeWithName
[2m[36m(pid=33312)[0m     @     0x56188eddb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33312)[0m     @     0x56188ed50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x5556fad3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33253)[0m     @     0x5556fad3da20 method_vectorcall
[2m[36m(pid=33253)[0m     @     0x5556facb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x5556fad3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33253)[0m     @     0x5556fad3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33253)[0m     @     0x5556facb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x5556fad3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33253)[0m     @     0x5556fad3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33253)[0m     @     0x5556facb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x5556fad3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33253)[0m     @     0x5556fad3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33253)[0m     @     0x5556facb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33253)[0m     @     0x5556fad3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33253)[0m     @     0x5556fad3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33253)[0m     @     0x5556facb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x559b0a5c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33279)[0m     @     0x559b0a5c7a20 method_vectorcall
[2m[36m(pid=33279)[0m     @     0x559b0a53bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x559b0a5c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33279)[0m     @     0x559b0a5c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33279)[0m     @     0x559b0a53c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x559b0a5c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33279)[0m     @     0x559b0a5c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33279)[0m     @     0x559b0a53c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x559b0a5c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33279)[0m     @     0x559b0a5c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33279)[0m     @     0x559b0a53c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33279)[0m     @     0x559b0a5c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=33279)[0m     @     0x559b0a5c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33279)[0m     @     0x559b0a53c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x7f88992fa5a4 at::native::copy_()
[2m[36m(pid=33262)[0m     @     0x7f88999e54f5 at::Tensor::copy_()
[2m[36m(pid=33261)[0m     @     0x7ef55e1d0388 at::native::copy_impl()
[2m[36m(pid=33261)[0m     @     0x7ef55e1d25a4 at::native::copy_()
[2m[36m(pid=33246)[0m     @     0x7f94f0ede388 at::native::copy_impl()
[2m[36m(pid=33246)[0m     @     0x7f94f0ee05a4 at::native::copy_()
[2m[36m(pid=33246)[0m     @     0x7f94f15cb4f5 at::Tensor::copy_()
[2m[36m(pid=33317)[0m     @     0x55da74c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=33317)[0m     @     0x55da74c34a20 method_vectorcall
[2m[36m(pid=33317)[0m     @     0x55da74ba8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33317)[0m     @     0x55da74c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=33317)[0m     @     0x55da74c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33317)[0m     @     0x55da74ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33317)[0m     @     0x55da74c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=33317)[0m     @     0x55da74c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33317)[0m     @     0x55da74ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33317)[0m     @     0x55da74c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=33317)[0m     @     0x55da74c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33317)[0m     @     0x55da74ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33317)[0m     @     0x55da74c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=33317)[0m     @     0x55da74c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33317)[0m     @     0x55da74ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x7f03156105a4 at::native::copy_()
[2m[36m(pid=33314)[0m     @     0x7f0315cfb4f5 at::Tensor::copy_()
[2m[36m(pid=33265)[0m     @     0x7f8790ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33265)[0m     @     0x7f8790ccd388 at::native::copy_impl()
[2m[36m(pid=33250)[0m     @     0x7f5c765fa5a4 at::native::copy_()
[2m[36m(pid=33250)[0m     @     0x7f5c76ce54f5 at::Tensor::copy_()
[2m[36m(pid=33369)[0m     @     0x55968ab09baf _PyEval_EvalCodeWithName
[2m[36m(pid=33369)[0m     @     0x55968ab0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33369)[0m     @     0x55968aa7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33369)[0m     @     0x55968ab09baf _PyEval_EvalCodeWithName
[2m[36m(pid=33369)[0m     @     0x55968ab0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33369)[0m     @     0x55968aa7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33369)[0m     @     0x55968ab09baf _PyEval_EvalCodeWithName
[2m[36m(pid=33369)[0m     @     0x55968ab0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33369)[0m     @     0x55968aa7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33369)[0m     @     0x55968ab09baf _PyEval_EvalCodeWithName
[2m[36m(pid=33369)[0m     @     0x55968ab0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33369)[0m     @     0x55968aa7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x7f944d9058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33315)[0m     @     0x7f944b4324f5 at::Tensor::copy_()
[2m[36m(pid=33315)[0m     @     0x7f94514dd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33310)[0m     @     0x7f1b109b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=33310)[0m     @     0x7f1b109b7388 at::native::copy_impl()
[2m[36m(pid=33343)[0m     @     0x7f2eacfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33343)[0m     @     0x7f2eaaad44f5 at::Tensor::copy_()
[2m[36m(pid=33343)[0m     @     0x7f2eb0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33343)[0m     @     0x5577e6329fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33343)[0m     @     0x5577e6284b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x5577e630fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33343)[0m     @     0x5577e6310a20 method_vectorcall
[2m[36m(pid=33343)[0m     @     0x5577e6284bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x5577e630fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33343)[0m     @     0x5577e6310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33343)[0m     @     0x5577e6285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x5577e630fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33343)[0m     @     0x5577e6310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33343)[0m     @     0x5577e6285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x5577e630fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33343)[0m     @     0x5577e6310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33343)[0m     @     0x5577e6285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33343)[0m     @     0x5577e630fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33343)[0m     @     0x5577e6310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33343)[0m     @     0x5577e6285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x7f889beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33262)[0m     @     0x7f88999e54f5 at::Tensor::copy_()
[2m[36m(pid=33262)[0m     @     0x7f889fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33262)[0m     @     0x56063cdf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33262)[0m     @     0x56063cd51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x56063cddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33262)[0m     @     0x56063cddda20 method_vectorcall
[2m[36m(pid=33262)[0m     @     0x56063cd51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x56063cddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33262)[0m     @     0x56063cddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33262)[0m     @     0x56063cd52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x56063cddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33262)[0m     @     0x56063cddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33262)[0m     @     0x56063cd52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x56063cddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33262)[0m     @     0x56063cddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33262)[0m     @     0x56063cd52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33262)[0m     @     0x56063cddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=33262)[0m     @     0x56063cddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33262)[0m     @     0x56063cd52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x7ef55e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=33261)[0m     @     0x7ef560d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33261)[0m     @     0x7ef55e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=33246)[0m     @     0x7f94f3a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33314)[0m     @     0x7f03181ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33314)[0m     @     0x7f0315cfb4f5 at::Tensor::copy_()
[2m[36m(pid=33314)[0m     @     0x7f031bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33314)[0m     @     0x55c6ecf8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33314)[0m     @     0x55c6eceeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x55c6ecf75baf _PyEval_EvalCodeWithName
[2m[36m(pid=33314)[0m     @     0x55c6ecf76a20 method_vectorcall
[2m[36m(pid=33314)[0m     @     0x55c6eceeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x55c6ecf75baf _PyEval_EvalCodeWithName
[2m[36m(pid=33314)[0m     @     0x55c6ecf76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33314)[0m     @     0x55c6eceeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x55c6ecf75baf _PyEval_EvalCodeWithName
[2m[36m(pid=33314)[0m     @     0x55c6ecf76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33314)[0m     @     0x55c6eceeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x55c6ecf75baf _PyEval_EvalCodeWithName
[2m[36m(pid=33314)[0m     @     0x55c6ecf76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33314)[0m     @     0x55c6eceeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33314)[0m     @     0x55c6ecf75baf _PyEval_EvalCodeWithName
[2m[36m(pid=33314)[0m     @     0x55c6ecf76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33314)[0m     @     0x55c6eceeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x7f8790ccf5a4 at::native::copy_()
[2m[36m(pid=33265)[0m     @     0x7f87913ba4f5 at::Tensor::copy_()
[2m[36m(pid=33265)[0m     @     0x7f879388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33250)[0m     @     0x7f5c791b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=33250)[0m     @     0x7f5c76ce54f5 at::Tensor::copy_()
[2m[36m(pid=33250)[0m     @     0x7f5c7cd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33250)[0m     @     0x55b443c93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33250)[0m     @     0x55b443beeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x55b443c79baf _PyEval_EvalCodeWithName
[2m[36m(pid=33250)[0m     @     0x55b443c7aa20 method_vectorcall
[2m[36m(pid=33250)[0m     @     0x55b443beebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x55b443c79baf _PyEval_EvalCodeWithName
[2m[36m(pid=33250)[0m     @     0x55b443c7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33250)[0m     @     0x55b443bef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x55b443c79baf _PyEval_EvalCodeWithName
[2m[36m(pid=33250)[0m     @     0x55b443c7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33250)[0m     @     0x55b443bef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x55b443c79baf _PyEval_EvalCodeWithName
[2m[36m(pid=33250)[0m     @     0x55b443c7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33250)[0m     @     0x55b443bef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33250)[0m     @     0x55b443c79baf _PyEval_EvalCodeWithName
[2m[36m(pid=33250)[0m     @     0x55b443c7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33250)[0m     @     0x55b443bef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x55b2b5fc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33315)[0m     @     0x55b2b5f1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x7f1b109b95a4 at::native::copy_()
[2m[36m(pid=33310)[0m     @     0x7f1b110a44f5 at::Tensor::copy_()
[2m[36m(pid=33310)[0m     @     0x7f1b135778de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:39:39,086	ERROR trial_runner.py:567 -- Trial PPO_jss_env_30323_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=33380, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:39:39,089	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
[2m[36m(pid=33261)[0m     @     0x7ef56496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33261)[0m     @     0x56525c868fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33261)[0m     @     0x56525c7c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x56525c84ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33261)[0m     @     0x56525c84fa20 method_vectorcall
[2m[36m(pid=33261)[0m     @     0x56525c7c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x56525c84ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33261)[0m     @     0x56525c84f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33261)[0m     @     0x56525c7c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x56525c84ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33261)[0m     @     0x56525c84f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33261)[0m     @     0x56525c7c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x56525c84ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33261)[0m     @     0x56525c84f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33261)[0m     @     0x56525c7c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33261)[0m     @     0x56525c84ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=33261)[0m     @     0x56525c84f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33261)[0m     @     0x56525c7c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x7f94f15cb4f5 at::Tensor::copy_()
[2m[36m(pid=33246)[0m     @     0x7f94f767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33246)[0m     @     0x5587d639dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33246)[0m     @     0x5587d62f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x5587d6383baf _PyEval_EvalCodeWithName
[2m[36m(pid=33246)[0m     @     0x5587d6384a20 method_vectorcall
[2m[36m(pid=33246)[0m     @     0x5587d62f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x5587d6383baf _PyEval_EvalCodeWithName
[2m[36m(pid=33246)[0m     @     0x5587d6384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33246)[0m     @     0x5587d62f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x5587d6383baf _PyEval_EvalCodeWithName
[2m[36m(pid=33246)[0m     @     0x5587d6384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33246)[0m     @     0x5587d62f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x5587d6383baf _PyEval_EvalCodeWithName
[2m[36m(pid=33246)[0m     @     0x5587d6384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33246)[0m     @     0x5587d62f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33246)[0m     @     0x5587d6383baf _PyEval_EvalCodeWithName
[2m[36m(pid=33246)[0m     @     0x5587d6384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33246)[0m     @     0x5587d62f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x7f87913ba4f5 at::Tensor::copy_()
[2m[36m(pid=33265)[0m     @     0x7f879746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33265)[0m     @     0x562413313fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33380)[0m E1105 10:39:39.079685 33380 34566 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=33380)[0m E1105 10:39:39.079824 33380 34566 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=33315)[0m     @     0x55b2b5fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33315)[0m     @     0x55b2b5faaa20 method_vectorcall
[2m[36m(pid=33315)[0m     @     0x55b2b5f1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x55b2b5fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33315)[0m     @     0x55b2b5faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33315)[0m     @     0x55b2b5f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x55b2b5fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33315)[0m     @     0x55b2b5faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33315)[0m     @     0x55b2b5f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x55b2b5fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33315)[0m     @     0x55b2b5faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33315)[0m     @     0x55b2b5f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33315)[0m     @     0x55b2b5fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33315)[0m     @     0x55b2b5faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33315)[0m     @     0x55b2b5f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x7f1b110a44f5 at::Tensor::copy_()
[2m[36m(pid=33310)[0m     @     0x7f1b1714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=33310)[0m     @     0x5646a064cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=33310)[0m     @     0x5646a05a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x5646a0632baf _PyEval_EvalCodeWithName
[2m[36m(pid=33310)[0m     @     0x5646a0633a20 method_vectorcall
[2m[36m(pid=33310)[0m     @     0x5646a05a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x5646a0632baf _PyEval_EvalCodeWithName
[2m[36m(pid=33310)[0m     @     0x5646a0633643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33310)[0m     @     0x5646a05a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x5646a0632baf _PyEval_EvalCodeWithName
[2m[36m(pid=33310)[0m     @     0x5646a0633643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33310)[0m     @     0x5646a05a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x5646a0632baf _PyEval_EvalCodeWithName
[2m[36m(pid=33310)[0m     @     0x5646a0633643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33310)[0m     @     0x5646a05a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33310)[0m     @     0x5646a0632baf _PyEval_EvalCodeWithName
[2m[36m(pid=33310)[0m     @     0x5646a0633643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33310)[0m     @     0x5646a05a8689 _PyEval_EvalFrameDefault.cold.2792
== Status ==
Memory usage on this node: 25.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_30323_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_30323_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_30323_00000_0_2020-11-05_10-39-31/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:39:39,113	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 25.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_30323_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_30323_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_30323_00000_0_2020-11-05_10-39-31/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_30323_00000])
[2m[36m(pid=33265)[0m     @     0x56241326eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x5624132f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33265)[0m     @     0x5624132faa20 method_vectorcall
[2m[36m(pid=33265)[0m     @     0x56241326ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x5624132f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33265)[0m     @     0x5624132fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33265)[0m     @     0x56241326f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x5624132f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33265)[0m     @     0x5624132fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33265)[0m     @     0x56241326f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x5624132f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33265)[0m     @     0x5624132fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33265)[0m     @     0x56241326f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33265)[0m     @     0x5624132f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=33265)[0m     @     0x5624132fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=33265)[0m     @     0x56241326f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=33380)[0m E1105 10:39:39.098839 33380 34566 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=33380)[0m E1105 10:39:39.104701 33380 34566 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=33380)[0m E1105 10:39:39.104836 33380 34566 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=33380)[0m E1105 10:39:39.104899 33380 34566 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
