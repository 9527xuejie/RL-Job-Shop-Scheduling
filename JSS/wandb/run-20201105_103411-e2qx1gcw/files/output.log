2020-11-05 10:34:15,528	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_74913_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=19323)[0m 2020-11-05 10:34:18,268	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=19323)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=19323)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=19323)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=19323)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=19323)[0m 
[2m[36m(pid=19323)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=19312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19312)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19312)[0m *** SIGSEGV (@0x0) received by PID 19312 (TID 0x7f395653b700) from PID 0; stack trace: ***
[2m[36m(pid=19243)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19243)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19243)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19243)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19243)[0m *** SIGSEGV (@0x0) received by PID 19243 (TID 0x7fc2301e8700) from PID 0; stack trace: ***
[2m[36m(pid=19243)[0m     @     0x7fc22fdc1390 (unknown)
[2m[36m(pid=19243)[0m     @     0x7f932fd79f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19243)[0m     @     0x7f932f4a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19291)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19291)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19291)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19291)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19291)[0m *** SIGSEGV (@0x0) received by PID 19291 (TID 0x7fea6df9f700) from PID 0; stack trace: ***
[2m[36m(pid=19275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19275)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19275)[0m *** SIGSEGV (@0x0) received by PID 19275 (TID 0x7f46a3a31700) from PID 0; stack trace: ***
[2m[36m(pid=19275)[0m     @     0x7f46a360a390 (unknown)
[2m[36m(pid=19275)[0m     @     0x7f17a35b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19319)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19319)[0m *** SIGSEGV (@0x0) received by PID 19319 (TID 0x7f80e3754700) from PID 0; stack trace: ***
[2m[36m(pid=19319)[0m     @     0x7f80e332d390 (unknown)
[2m[36m(pid=19319)[0m     @     0x7f51e32abf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19319)[0m     @     0x7f51e29d67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19274)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19274)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19274)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19274)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19274)[0m *** SIGSEGV (@0x0) received by PID 19274 (TID 0x7fd7d63b3700) from PID 0; stack trace: ***
[2m[36m(pid=19274)[0m     @     0x7fd7d5f8c390 (unknown)
[2m[36m(pid=19284)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19284)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19284)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19284)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19284)[0m *** SIGSEGV (@0x0) received by PID 19284 (TID 0x7f0fa5752700) from PID 0; stack trace: ***
[2m[36m(pid=19284)[0m     @     0x7f0fa532b390 (unknown)
[2m[36m(pid=19284)[0m     @     0x7ee0a528af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19284)[0m     @     0x7ee0a49b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19265)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19265)[0m *** SIGSEGV (@0x0) received by PID 19265 (TID 0x7fd8ceaf3700) from PID 0; stack trace: ***
[2m[36m(pid=19265)[0m     @     0x7fd8ce6cc390 (unknown)
[2m[36m(pid=19265)[0m     @     0x7fa9ce66bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19265)[0m     @     0x7fa9cdd967db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19272)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19272)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19272)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19272)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19272)[0m *** SIGSEGV (@0x0) received by PID 19272 (TID 0x7fca15aed700) from PID 0; stack trace: ***
[2m[36m(pid=19272)[0m     @     0x7fca156c6390 (unknown)
[2m[36m(pid=19272)[0m     @     0x7f9b15674f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19193)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19193)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19193)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19193)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19193)[0m *** SIGSEGV (@0x0) received by PID 19193 (TID 0x7fc7be55e700) from PID 0; stack trace: ***
[2m[36m(pid=19321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19321)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19321)[0m *** SIGSEGV (@0x0) received by PID 19321 (TID 0x7f2ac4649700) from PID 0; stack trace: ***
[2m[36m(pid=19294)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19294)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19294)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19294)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19294)[0m *** SIGSEGV (@0x0) received by PID 19294 (TID 0x7f45f6e94700) from PID 0; stack trace: ***
[2m[36m(pid=19259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19259)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19215)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19215)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19215)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19215)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19215)[0m *** SIGSEGV (@0x0) received by PID 19215 (TID 0x7facefb5e700) from PID 0; stack trace: ***
[2m[36m(pid=19303)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19303)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19303)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19303)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19303)[0m *** SIGSEGV (@0x0) received by PID 19303 (TID 0x7fd6bad95700) from PID 0; stack trace: ***
[2m[36m(pid=19303)[0m     @     0x7fd6ba96e390 (unknown)
[2m[36m(pid=19299)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19299)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19299)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19299)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19299)[0m *** SIGSEGV (@0x0) received by PID 19299 (TID 0x7fdfce2b6700) from PID 0; stack trace: ***
[2m[36m(pid=19278)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19278)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19278)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19278)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19278)[0m *** SIGSEGV (@0x0) received by PID 19278 (TID 0x7f571df10700) from PID 0; stack trace: ***
[2m[36m(pid=19278)[0m     @     0x7f571dae9390 (unknown)
[2m[36m(pid=19271)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19271)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19271)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19271)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19271)[0m *** SIGSEGV (@0x0) received by PID 19271 (TID 0x7fb47de68700) from PID 0; stack trace: ***
[2m[36m(pid=19271)[0m     @     0x7fb47da41390 (unknown)
[2m[36m(pid=19271)[0m     @     0x7f857d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19271)[0m     @     0x7f857cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19269)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19269)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19269)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19269)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19269)[0m *** SIGSEGV (@0x0) received by PID 19269 (TID 0x7f2408b2e700) from PID 0; stack trace: ***
[2m[36m(pid=19289)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19289)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19289)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19289)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19289)[0m *** SIGSEGV (@0x0) received by PID 19289 (TID 0x7f5bd5d2c700) from PID 0; stack trace: ***
[2m[36m(pid=19289)[0m     @     0x7f5bd5905390 (unknown)
[2m[36m(pid=19289)[0m     @     0x7f2cd57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19289)[0m     @     0x7f2cd4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19250)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19250)[0m *** SIGSEGV (@0x0) received by PID 19250 (TID 0x7f29983e7700) from PID 0; stack trace: ***
[2m[36m(pid=19250)[0m     @     0x7f2997fc0390 (unknown)
[2m[36m(pid=19205)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19205)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19205)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19205)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19205)[0m *** SIGSEGV (@0x0) received by PID 19205 (TID 0x7f89f2d6d700) from PID 0; stack trace: ***
[2m[36m(pid=19304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19304)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19304)[0m *** SIGSEGV (@0x0) received by PID 19304 (TID 0x7f091970f700) from PID 0; stack trace: ***
[2m[36m(pid=19304)[0m     @     0x7f09192e8390 (unknown)
[2m[36m(pid=19197)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19197)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19197)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19197)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19197)[0m *** SIGSEGV (@0x0) received by PID 19197 (TID 0x7f9d0cadc700) from PID 0; stack trace: ***
[2m[36m(pid=19201)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19201)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19201)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19201)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19201)[0m *** SIGSEGV (@0x0) received by PID 19201 (TID 0x7efc91d22700) from PID 0; stack trace: ***
[2m[36m(pid=19210)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19210)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19210)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19210)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19210)[0m *** SIGSEGV (@0x0) received by PID 19210 (TID 0x7ff9b4b19700) from PID 0; stack trace: ***
[2m[36m(pid=19270)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19270)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19270)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19270)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19270)[0m *** SIGSEGV (@0x0) received by PID 19270 (TID 0x7fb30ee75700) from PID 0; stack trace: ***
[2m[36m(pid=19270)[0m     @     0x7fb30ea4e390 (unknown)
[2m[36m(pid=19266)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19266)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19266)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19266)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19266)[0m *** SIGSEGV (@0x0) received by PID 19266 (TID 0x7f3a24827700) from PID 0; stack trace: ***
[2m[36m(pid=19266)[0m     @     0x7f3a24400390 (unknown)
[2m[36m(pid=19266)[0m     @     0x7f0b243a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19266)[0m     @     0x7f0b23ace7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19314)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19314)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19314)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19314)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19314)[0m *** SIGSEGV (@0x0) received by PID 19314 (TID 0x7f6b57349700) from PID 0; stack trace: ***
[2m[36m(pid=19314)[0m     @     0x7f6b56f22390 (unknown)
[2m[36m(pid=19314)[0m     @     0x7f3c56c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19314)[0m     @     0x7f3c563407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19290)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19290)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19290)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19290)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19290)[0m *** SIGSEGV (@0x0) received by PID 19290 (TID 0x7fa05334b700) from PID 0; stack trace: ***
[2m[36m(pid=19290)[0m     @     0x7fa052f24390 (unknown)
[2m[36m(pid=19290)[0m     @     0x7f7152ea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19290)[0m     @     0x7f71525d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19194)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19194)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19194)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19194)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19194)[0m *** SIGSEGV (@0x0) received by PID 19194 (TID 0x7fe58fd23700) from PID 0; stack trace: ***
[2m[36m(pid=19194)[0m     @     0x7fe58f8fc390 (unknown)
[2m[36m(pid=19310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19310)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19310)[0m *** SIGSEGV (@0x0) received by PID 19310 (TID 0x7fbc6c689700) from PID 0; stack trace: ***
[2m[36m(pid=19310)[0m     @     0x7fbc6c262390 (unknown)
[2m[36m(pid=19310)[0m     @     0x7f8d6c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19257)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19257)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19257)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19257)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19257)[0m *** SIGSEGV (@0x0) received by PID 19257 (TID 0x7ff7e2b32700) from PID 0; stack trace: ***
[2m[36m(pid=19219)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19219)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19219)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19219)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19219)[0m *** SIGSEGV (@0x0) received by PID 19219 (TID 0x7f13dd8a8700) from PID 0; stack trace: ***
[2m[36m(pid=19219)[0m     @     0x7f13dd481390 (unknown)
[2m[36m(pid=19199)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19199)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19199)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19199)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19199)[0m *** SIGSEGV (@0x0) received by PID 19199 (TID 0x7fd7e0a31700) from PID 0; stack trace: ***
[2m[36m(pid=19199)[0m     @     0x7fd7e060a390 (unknown)
[2m[36m(pid=19199)[0m     @     0x7fa8e05a1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19199)[0m     @     0x7fa8dfccc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19312)[0m     @     0x7f3956114390 (unknown)
[2m[36m(pid=19312)[0m     @     0x7f0a560cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19312)[0m     @     0x7f0a557f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19312)[0m     @     0x7f0a557fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19243)[0m     @     0x7f932f4a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19243)[0m     @     0x7f932f4a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=19291)[0m     @     0x7fea6db78390 (unknown)
[2m[36m(pid=19291)[0m     @     0x7fbb6da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19291)[0m     @     0x7fbb6d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19291)[0m     @     0x7fbb6d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19275)[0m     @     0x7f17a2cdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19275)[0m     @     0x7f17a2ce08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19275)[0m     @     0x7f17a2ce0ad3 at::TensorIterator::for_each()
[2m[36m(pid=19319)[0m     @     0x7f51e29d98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19319)[0m     @     0x7f51e29d9ad3 at::TensorIterator::for_each()
[2m[36m(pid=19319)[0m     @     0x7f51e29d9d91 at::TensorIterator::for_each()
[2m[36m(pid=19319)[0m     @     0x7f51e32bcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19319)[0m     @     0x7f51e32dfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19274)[0m     @     0x7fa8d5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19274)[0m     @     0x7fa8d554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19274)[0m     @     0x7fa8d55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19274)[0m     @     0x7fa8d5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=19274)[0m     @     0x7fa8d5552d91 at::TensorIterator::for_each()
[2m[36m(pid=19284)[0m     @     0x7ee0a49b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19284)[0m     @     0x7ee0a49b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=19284)[0m     @     0x7ee0a49b8d91 at::TensorIterator::for_each()
[2m[36m(pid=19284)[0m     @     0x7ee0a529bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19284)[0m     @     0x7ee0a52bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19265)[0m     @     0x7fa9cdd998f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19265)[0m     @     0x7fa9cdd99ad3 at::TensorIterator::for_each()
[2m[36m(pid=19265)[0m     @     0x7fa9cdd99d91 at::TensorIterator::for_each()
[2m[36m(pid=19265)[0m     @     0x7fa9ce67cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19265)[0m     @     0x7fa9ce69fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19272)[0m     @     0x7f9b14d9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19272)[0m     @     0x7f9b14da28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19272)[0m     @     0x7f9b14da2ad3 at::TensorIterator::for_each()
[2m[36m(pid=19272)[0m     @     0x7f9b14da2d91 at::TensorIterator::for_each()
[2m[36m(pid=19272)[0m     @     0x7f9b15685b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19193)[0m     @     0x7fc7be137390 (unknown)
[2m[36m(pid=19193)[0m     @     0x7f98be0f5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19193)[0m     @     0x7f98bd8207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19193)[0m     @     0x7f98bd8238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19193)[0m     @     0x7f98bd823ad3 at::TensorIterator::for_each()
[2m[36m(pid=19321)[0m     @     0x7f2ac4222390 (unknown)
[2m[36m(pid=19321)[0m     @     0x7efbc401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19321)[0m     @     0x7efbc37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19321)[0m     @     0x7efbc374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19321)[0m     @     0x7efbc374aad3 at::TensorIterator::for_each()
[2m[36m(pid=19294)[0m     @     0x7f45f6a6d390 (unknown)
[2m[36m(pid=19294)[0m     @     0x7f16f69f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19294)[0m     @     0x7f16f611f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19294)[0m     @     0x7f16f61228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19294)[0m     @     0x7f16f6122ad3 at::TensorIterator::for_each()
[2m[36m(pid=19259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19259)[0m *** SIGSEGV (@0x0) received by PID 19259 (TID 0x7fa36cca4700) from PID 0; stack trace: ***
[2m[36m(pid=19259)[0m     @     0x7fa36c87d390 (unknown)
[2m[36m(pid=19259)[0m     @     0x7f746c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19259)[0m     @     0x7f746bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19259)[0m     @     0x7f746bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19215)[0m     @     0x7facef737390 (unknown)
[2m[36m(pid=19215)[0m     @     0x7f7deec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19215)[0m     @     0x7f7dee3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19215)[0m     @     0x7f7dee3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19215)[0m     @     0x7f7dee343ad3 at::TensorIterator::for_each()
[2m[36m(pid=19303)[0m     @     0x7fa7ba70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19303)[0m     @     0x7fa7b9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19303)[0m     @     0x7fa7b9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19303)[0m     @     0x7fa7b9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=19303)[0m     @     0x7fa7b9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=19299)[0m     @     0x7fdfcde8f390 (unknown)
[2m[36m(pid=19299)[0m     @     0x7fb0cddf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19299)[0m     @     0x7fb0cd5227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19299)[0m     @     0x7fb0cd5258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19278)[0m     @     0x7f281da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19278)[0m     @     0x7f281d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19278)[0m     @     0x7f281d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19278)[0m     @     0x7f281d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=19278)[0m     @     0x7f281d138d91 at::TensorIterator::for_each()
[2m[36m(pid=19271)[0m     @     0x7f857cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19271)[0m     @     0x7f857cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=19271)[0m     @     0x7f857cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=19271)[0m     @     0x7f857d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19271)[0m     @     0x7f857d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19269)[0m     @     0x7f2408707390 (unknown)
[2m[36m(pid=19269)[0m     @     0x7ef508563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19269)[0m     @     0x7ef507c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19269)[0m     @     0x7ef507c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19269)[0m     @     0x7ef507c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=19289)[0m     @     0x7f2cd4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19289)[0m     @     0x7f2cd4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=19289)[0m     @     0x7f2cd4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=19289)[0m     @     0x7f2cd580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19250)[0m     @     0x7efa97e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19250)[0m     @     0x7efa975367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19250)[0m     @     0x7efa975398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19250)[0m     @     0x7efa97539ad3 at::TensorIterator::for_each()
[2m[36m(pid=19205)[0m     @     0x7f89f2946390 (unknown)
[2m[36m(pid=19205)[0m     @     0x7f5af270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19205)[0m     @     0x7f5af1e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19205)[0m     @     0x7f5af1e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19205)[0m     @     0x7f5af1e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=19304)[0m     @     0x7eda1924af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19304)[0m     @     0x7eda189757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19304)[0m     @     0x7eda189788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19304)[0m     @     0x7eda18978ad3 at::TensorIterator::for_each()
[2m[36m(pid=19197)[0m     @     0x7f9d0c6b5390 (unknown)
[2m[36m(pid=19197)[0m     @     0x7f6e0c67af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19197)[0m     @     0x7f6e0bda57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19197)[0m     @     0x7f6e0bda88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19197)[0m     @     0x7f6e0bda8ad3 at::TensorIterator::for_each()
[2m[36m(pid=19201)[0m     @     0x7efc918fb390 (unknown)
[2m[36m(pid=19201)[0m     @     0x7ecd917f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19201)[0m     @     0x7ecd90f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19201)[0m     @     0x7ecd90f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19201)[0m     @     0x7ecd90f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=19202)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19202)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19202)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19202)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19202)[0m *** SIGSEGV (@0x0) received by PID 19202 (TID 0x7f1854bad700) from PID 0; stack trace: ***
[2m[36m(pid=19210)[0m     @     0x7ff9b46f2390 (unknown)
[2m[36m(pid=19210)[0m     @     0x7fcab460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19210)[0m     @     0x7fcab3d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19210)[0m     @     0x7fcab3d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19210)[0m     @     0x7fcab3d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=19270)[0m     @     0x7f840e9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19270)[0m     @     0x7f840e0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19270)[0m     @     0x7f840e0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19270)[0m     @     0x7f840e0faad3 at::TensorIterator::for_each()
[2m[36m(pid=19266)[0m     @     0x7f0b23ad18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19266)[0m     @     0x7f0b23ad1ad3 at::TensorIterator::for_each()
[2m[36m(pid=19266)[0m     @     0x7f0b23ad1d91 at::TensorIterator::for_each()
[2m[36m(pid=19266)[0m     @     0x7f0b243b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19266)[0m     @     0x7f0b243d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19314)[0m     @     0x7f3c563438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19314)[0m     @     0x7f3c56343ad3 at::TensorIterator::for_each()
[2m[36m(pid=19314)[0m     @     0x7f3c56343d91 at::TensorIterator::for_each()
[2m[36m(pid=19314)[0m     @     0x7f3c56c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19290)[0m     @     0x7f71525d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19290)[0m     @     0x7f71525d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=19290)[0m     @     0x7f71525d4d91 at::TensorIterator::for_each()
[2m[36m(pid=19290)[0m     @     0x7f7152eb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19194)[0m     @     0x7fb68f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19194)[0m     @     0x7fb68ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19194)[0m     @     0x7fb68ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19194)[0m     @     0x7fb68ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=19310)[0m     @     0x7f8d6b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19310)[0m     @     0x7f8d6b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19310)[0m     @     0x7f8d6b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=19257)[0m     @     0x7ff7e270b390 (unknown)
[2m[36m(pid=19257)[0m     @     0x7fc8e257cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19257)[0m     @     0x7fc8e1ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19257)[0m     @     0x7fc8e1caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19257)[0m     @     0x7fc8e1caaad3 at::TensorIterator::for_each()
[2m[36m(pid=19219)[0m     @     0x7ee4dd3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19219)[0m     @     0x7ee4dcaf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19219)[0m     @     0x7ee4dcafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19219)[0m     @     0x7ee4dcafaad3 at::TensorIterator::for_each()
[2m[36m(pid=19255)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19255)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19255)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19297)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19297)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19297)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19199)[0m     @     0x7fa8dfccf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19199)[0m     @     0x7fa8dfccfad3 at::TensorIterator::for_each()
[2m[36m(pid=19199)[0m     @     0x7fa8dfccfd91 at::TensorIterator::for_each()
[2m[36m(pid=19199)[0m     @     0x7fa8e05b2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19199)[0m     @     0x7fa8e05d5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19188)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19188)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19188)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19188)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19188)[0m *** SIGSEGV (@0x0) received by PID 19188 (TID 0x7fef16ccc700) from PID 0; stack trace: ***
[2m[36m(pid=19188)[0m     @     0x7fef168a5390 (unknown)
[2m[36m(pid=19188)[0m     @     0x7fc015940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19188)[0m     @     0x7fc01506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19249)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19249)[0m *** SIGSEGV (@0x0) received by PID 19249 (TID 0x7f2f28b85700) from PID 0; stack trace: ***
[2m[36m(pid=19203)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19203)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19203)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19203)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19203)[0m *** SIGSEGV (@0x0) received by PID 19203 (TID 0x7fee2e10d700) from PID 0; stack trace: ***
[2m[36m(pid=19239)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19239)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19239)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19239)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19239)[0m *** SIGSEGV (@0x0) received by PID 19239 (TID 0x7f8fe0dcb700) from PID 0; stack trace: ***
[2m[36m(pid=19239)[0m     @     0x7f8fe09a4390 (unknown)
[2m[36m(pid=19308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19308)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19189)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19189)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19189)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19189)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19189)[0m *** SIGSEGV (@0x0) received by PID 19189 (TID 0x7fc9eab84700) from PID 0; stack trace: ***
[2m[36m(pid=19189)[0m     @     0x7fc9ea75d390 (unknown)
[2m[36m(pid=19189)[0m     @     0x7f9aea5a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19189)[0m     @     0x7f9ae9ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19231)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19231)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19231)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19231)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19231)[0m *** SIGSEGV (@0x0) received by PID 19231 (TID 0x7f504164a700) from PID 0; stack trace: ***
[2m[36m(pid=19231)[0m     @     0x7f5041223390 (unknown)
[2m[36m(pid=19247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19247)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19247)[0m *** SIGSEGV (@0x0) received by PID 19247 (TID 0x7f6712c02700) from PID 0; stack trace: ***
[2m[36m(pid=19264)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19264)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19264)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19216)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19216)[0m *** SIGSEGV (@0x0) received by PID 19216 (TID 0x7fd4e7432700) from PID 0; stack trace: ***
[2m[36m(pid=19216)[0m     @     0x7fd4e700b390 (unknown)
[2m[36m(pid=19261)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19261)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19261)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19261)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19261)[0m *** SIGSEGV (@0x0) received by PID 19261 (TID 0x7f7f379b7700) from PID 0; stack trace: ***
[2m[36m(pid=19187)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19187)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19187)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19187)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19187)[0m *** SIGSEGV (@0x0) received by PID 19187 (TID 0x7f03baa4b700) from PID 0; stack trace: ***
[2m[36m(pid=19187)[0m     @     0x7f03ba624390 (unknown)
[2m[36m(pid=19187)[0m     @     0x7ed4ba57cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19187)[0m     @     0x7ed4b9ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19312)[0m     @     0x7f0a557fbad3 at::TensorIterator::for_each()
[2m[36m(pid=19312)[0m     @     0x7f0a557fbd91 at::TensorIterator::for_each()
[2m[36m(pid=19312)[0m     @     0x7f0a560deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19312)[0m     @     0x7f0a56101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19243)[0m     @     0x7f932f4a7d91 at::TensorIterator::for_each()
[2m[36m(pid=19243)[0m     @     0x7f932fd8ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19243)[0m     @     0x7f932fdadc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19243)[0m     @     0x7f932f24fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19243)[0m     @     0x7f932f24d388 at::native::copy_impl()
[2m[36m(pid=19243)[0m     @     0x7f932f24f5a4 at::native::copy_()
[2m[36m(pid=19291)[0m     @     0x7fbb6d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=19291)[0m     @     0x7fbb6d138d91 at::TensorIterator::for_each()
[2m[36m(pid=19291)[0m     @     0x7fbb6da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19291)[0m     @     0x7fbb6da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19291)[0m     @     0x7fbb6cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19291)[0m     @     0x7fbb6cede388 at::native::copy_impl()
[2m[36m(pid=19275)[0m     @     0x7f17a2ce0d91 at::TensorIterator::for_each()
[2m[36m(pid=19275)[0m     @     0x7f17a35c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19275)[0m     @     0x7f17a35e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19275)[0m     @     0x7f17a2a88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19275)[0m     @     0x7f17a2a86388 at::native::copy_impl()
[2m[36m(pid=19275)[0m     @     0x7f17a2a885a4 at::native::copy_()
[2m[36m(pid=19319)[0m     @     0x7f51e2781a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19319)[0m     @     0x7f51e277f388 at::native::copy_impl()
[2m[36m(pid=19319)[0m     @     0x7f51e27815a4 at::native::copy_()
[2m[36m(pid=19274)[0m     @     0x7fa8d5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19274)[0m     @     0x7fa8d5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19274)[0m     @     0x7fa8d52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19274)[0m     @     0x7fa8d52f8388 at::native::copy_impl()
[2m[36m(pid=19284)[0m     @     0x7ee0a4760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19284)[0m     @     0x7ee0a475e388 at::native::copy_impl()
[2m[36m(pid=19284)[0m     @     0x7ee0a47605a4 at::native::copy_()
[2m[36m(pid=19284)[0m     @     0x7ee0a4e4b4f5 at::Tensor::copy_()
[2m[36m(pid=19265)[0m     @     0x7fa9cdb41a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19265)[0m     @     0x7fa9cdb3f388 at::native::copy_impl()
[2m[36m(pid=19265)[0m     @     0x7fa9cdb415a4 at::native::copy_()
[2m[36m(pid=19272)[0m     @     0x7f9b156a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19272)[0m     @     0x7f9b14b4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19272)[0m     @     0x7f9b14b48388 at::native::copy_impl()
[2m[36m(pid=19272)[0m     @     0x7f9b14b4a5a4 at::native::copy_()
[2m[36m(pid=19193)[0m     @     0x7f98bd823d91 at::TensorIterator::for_each()
[2m[36m(pid=19193)[0m     @     0x7f98be106b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19193)[0m     @     0x7f98be129c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19193)[0m     @     0x7f98bd5cba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19193)[0m     @     0x7f98bd5c9388 at::native::copy_impl()
[2m[36m(pid=19321)[0m     @     0x7efbc374ad91 at::TensorIterator::for_each()
[2m[36m(pid=19321)[0m     @     0x7efbc402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19321)[0m     @     0x7efbc4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19321)[0m     @     0x7efbc34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19321)[0m     @     0x7efbc34f0388 at::native::copy_impl()
[2m[36m(pid=19204)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19204)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19204)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19204)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19204)[0m *** SIGSEGV (@0x0) received by PID 19204 (TID 0x7f41f0faa700) from PID 0; stack trace: ***
[2m[36m(pid=19204)[0m     @     0x7f41f0b83390 (unknown)
[2m[36m(pid=19204)[0m     @     0x7f12f09e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19192)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19192)[0m *** SIGSEGV (@0x0) received by PID 19192 (TID 0x7f9f52568700) from PID 0; stack trace: ***
[2m[36m(pid=19192)[0m     @     0x7f9f52141390 (unknown)
[2m[36m(pid=19192)[0m     @     0x7f70520faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19192)[0m     @     0x7f70518257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19294)[0m     @     0x7f16f6122d91 at::TensorIterator::for_each()
[2m[36m(pid=19294)[0m     @     0x7f16f6a05b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19294)[0m     @     0x7f16f6a28c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19294)[0m     @     0x7f16f5ecaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19294)[0m     @     0x7f16f5ec8388 at::native::copy_impl()
[2m[36m(pid=19200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19200)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19200)[0m *** SIGSEGV (@0x0) received by PID 19200 (TID 0x7f51d74c4700) from PID 0; stack trace: ***
[2m[36m(pid=19200)[0m     @     0x7f51d709d390 (unknown)
[2m[36m(pid=19200)[0m     @     0x7f22d7037f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19259)[0m     @     0x7f746bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=19259)[0m     @     0x7f746bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=19259)[0m     @     0x7f746c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19259)[0m     @     0x7f746c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19259)[0m     @     0x7f746bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19190)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19190)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19190)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19190)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19190)[0m *** SIGSEGV (@0x0) received by PID 19190 (TID 0x7f27a3f5a700) from PID 0; stack trace: ***
[2m[36m(pid=19190)[0m     @     0x7f27a3b33390 (unknown)
[2m[36m(pid=19190)[0m     @     0x7ef8a3ac8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19215)[0m     @     0x7f7dee343d91 at::TensorIterator::for_each()
[2m[36m(pid=19215)[0m     @     0x7f7deec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19215)[0m     @     0x7f7deec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19215)[0m     @     0x7f7dee0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19215)[0m     @     0x7f7dee0e9388 at::native::copy_impl()
[2m[36m(pid=19303)[0m     @     0x7fa7ba71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19303)[0m     @     0x7fa7ba73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19303)[0m     @     0x7fa7b9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19303)[0m     @     0x7fa7b9bde388 at::native::copy_impl()
[2m[36m(pid=19299)[0m     @     0x7fb0cd525ad3 at::TensorIterator::for_each()
[2m[36m(pid=19299)[0m     @     0x7fb0cd525d91 at::TensorIterator::for_each()
[2m[36m(pid=19299)[0m     @     0x7fb0cde08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19299)[0m     @     0x7fb0cde2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19278)[0m     @     0x7f281da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19278)[0m     @     0x7f281da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19278)[0m     @     0x7f281cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19278)[0m     @     0x7f281cede388 at::native::copy_impl()
[2m[36m(pid=19271)[0m     @     0x7f857cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19271)[0m     @     0x7f857cccd388 at::native::copy_impl()
[2m[36m(pid=19271)[0m     @     0x7f857cccf5a4 at::native::copy_()
[2m[36m(pid=19269)[0m     @     0x7ef507c91d91 at::TensorIterator::for_each()
[2m[36m(pid=19269)[0m     @     0x7ef508574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19269)[0m     @     0x7ef508597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19269)[0m     @     0x7ef507a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19269)[0m     @     0x7ef507a37388 at::native::copy_impl()
[2m[36m(pid=19289)[0m     @     0x7f2cd582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19289)[0m     @     0x7f2cd4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19289)[0m     @     0x7f2cd4ccd388 at::native::copy_impl()
[2m[36m(pid=19289)[0m     @     0x7f2cd4ccf5a4 at::native::copy_()
[2m[36m(pid=19250)[0m     @     0x7efa97539d91 at::TensorIterator::for_each()
[2m[36m(pid=19250)[0m     @     0x7efa97e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19250)[0m     @     0x7efa97e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19250)[0m     @     0x7efa972e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19250)[0m     @     0x7efa972df388 at::native::copy_impl()
[2m[36m(pid=19205)[0m     @     0x7f5af1e38d91 at::TensorIterator::for_each()
[2m[36m(pid=19205)[0m     @     0x7f5af271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19205)[0m     @     0x7f5af273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19205)[0m     @     0x7f5af1be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19205)[0m     @     0x7f5af1bde388 at::native::copy_impl()
[2m[36m(pid=19304)[0m     @     0x7eda18978d91 at::TensorIterator::for_each()
[2m[36m(pid=19304)[0m     @     0x7eda1925bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19304)[0m     @     0x7eda1927ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19304)[0m     @     0x7eda18720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19304)[0m     @     0x7eda1871e388 at::native::copy_impl()
[2m[36m(pid=19197)[0m     @     0x7f6e0bda8d91 at::TensorIterator::for_each()
[2m[36m(pid=19197)[0m     @     0x7f6e0c68bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19197)[0m     @     0x7f6e0c6aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19197)[0m     @     0x7f6e0bb50a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19197)[0m     @     0x7f6e0bb4e388 at::native::copy_impl()
[2m[36m(pid=19213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19213)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19213)[0m *** SIGSEGV (@0x0) received by PID 19213 (TID 0x7f14081ae700) from PID 0; stack trace: ***
[2m[36m(pid=19213)[0m     @     0x7f1407d87390 (unknown)
[2m[36m(pid=19213)[0m     @     0x7ee507cfff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19201)[0m     @     0x7ecd90f27d91 at::TensorIterator::for_each()
[2m[36m(pid=19201)[0m     @     0x7ecd9180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19201)[0m     @     0x7ecd9182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19201)[0m     @     0x7ecd90ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19201)[0m     @     0x7ecd90ccd388 at::native::copy_impl()
[2m[36m(pid=19225)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19225)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19225)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19225)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19225)[0m *** SIGSEGV (@0x0) received by PID 19225 (TID 0x7fa8ea8cb700) from PID 0; stack trace: ***
[2m[36m(pid=19225)[0m     @     0x7fa8ea4a4390 (unknown)
[2m[36m(pid=19202)[0m     @     0x7f1854786390 (unknown)
[2m[36m(pid=19202)[0m     @     0x7ee95460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19202)[0m     @     0x7ee953d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19202)[0m     @     0x7ee953d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19210)[0m     @     0x7fcab3d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=19210)[0m     @     0x7fcab461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19210)[0m     @     0x7fcab4642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19210)[0m     @     0x7fcab3ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19210)[0m     @     0x7fcab3ae2388 at::native::copy_impl()
[2m[36m(pid=19288)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19288)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19288)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19288)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19288)[0m *** SIGSEGV (@0x0) received by PID 19288 (TID 0x7f20dfd71700) from PID 0; stack trace: ***
[2m[36m(pid=19286)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19286)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19286)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19286)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19286)[0m *** SIGSEGV (@0x0) received by PID 19286 (TID 0x7f85ee8f8700) from PID 0; stack trace: ***
[2m[36m(pid=19224)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19224)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19224)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19224)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19224)[0m *** SIGSEGV (@0x0) received by PID 19224 (TID 0x7fdb8b531700) from PID 0; stack trace: ***
[2m[36m(pid=19224)[0m     @     0x7fdb8b10a390 (unknown)
[2m[36m(pid=19224)[0m     @     0x7fac8b0b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19224)[0m     @     0x7fac8a7e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19208)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19208)[0m *** SIGSEGV (@0x0) received by PID 19208 (TID 0x7f6f72064700) from PID 0; stack trace: ***
[2m[36m(pid=19208)[0m     @     0x7f6f71c3d390 (unknown)
[2m[36m(pid=19208)[0m     @     0x7f4071becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19256)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19256)[0m *** SIGSEGV (@0x0) received by PID 19256 (TID 0x7f6c1f6fa700) from PID 0; stack trace: ***
[2m[36m(pid=19256)[0m     @     0x7f6c1f2d3390 (unknown)
[2m[36m(pid=19262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19262)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19262)[0m *** SIGSEGV (@0x0) received by PID 19262 (TID 0x7faf4bd54700) from PID 0; stack trace: ***
[2m[36m(pid=19262)[0m     @     0x7faf4b92d390 (unknown)
[2m[36m(pid=19196)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19196)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19196)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19196)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19196)[0m *** SIGSEGV (@0x0) received by PID 19196 (TID 0x7f514c4b3700) from PID 0; stack trace: ***
[2m[36m(pid=19196)[0m     @     0x7f514c08c390 (unknown)
[2m[36m(pid=19206)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19206)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19206)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19206)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19206)[0m *** SIGSEGV (@0x0) received by PID 19206 (TID 0x7f942a936700) from PID 0; stack trace: ***
[2m[36m(pid=19268)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19268)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19268)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19268)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19268)[0m *** SIGSEGV (@0x0) received by PID 19268 (TID 0x7f7bf4a54700) from PID 0; stack trace: ***
[2m[36m(pid=19268)[0m     @     0x7f7bf462d390 (unknown)
[2m[36m(pid=19223)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19223)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19223)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19223)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19223)[0m *** SIGSEGV (@0x0) received by PID 19223 (TID 0x7f470ad28700) from PID 0; stack trace: ***
[2m[36m(pid=19223)[0m     @     0x7f470a901390 (unknown)
[2m[36m(pid=19223)[0m     @     0x7f180a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19191)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19191)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19191)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19191)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19191)[0m *** SIGSEGV (@0x0) received by PID 19191 (TID 0x7f963579a700) from PID 0; stack trace: ***
[2m[36m(pid=19191)[0m     @     0x7f9635373390 (unknown)
[2m[36m(pid=19191)[0m     @     0x7f67352fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19309)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19309)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19309)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19309)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19309)[0m *** SIGSEGV (@0x0) received by PID 19309 (TID 0x7f12e6447700) from PID 0; stack trace: ***
[2m[36m(pid=19309)[0m     @     0x7f12e6020390 (unknown)
[2m[36m(pid=19309)[0m     @     0x7ee3e5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19270)[0m     @     0x7f840e0fad91 at::TensorIterator::for_each()
[2m[36m(pid=19270)[0m     @     0x7f840e9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19270)[0m     @     0x7f840ea00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19270)[0m     @     0x7f840dea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19270)[0m     @     0x7f840dea0388 at::native::copy_impl()
[2m[36m(pid=19270)[0m     @     0x7f840dea25a4 at::native::copy_()
[2m[36m(pid=19266)[0m     @     0x7f0b23879a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19266)[0m     @     0x7f0b23877388 at::native::copy_impl()
[2m[36m(pid=19266)[0m     @     0x7f0b238795a4 at::native::copy_()
[2m[36m(pid=19266)[0m     @     0x7f0b23f644f5 at::Tensor::copy_()
[2m[36m(pid=19266)[0m     @     0x7f0b264378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19314)[0m     @     0x7f3c56c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19314)[0m     @     0x7f3c560eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19314)[0m     @     0x7f3c560e9388 at::native::copy_impl()
[2m[36m(pid=19314)[0m     @     0x7f3c560eb5a4 at::native::copy_()
[2m[36m(pid=19314)[0m     @     0x7f3c567d64f5 at::Tensor::copy_()
[2m[36m(pid=19290)[0m     @     0x7f7152edac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19290)[0m     @     0x7f715237ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19290)[0m     @     0x7f715237a388 at::native::copy_impl()
[2m[36m(pid=19290)[0m     @     0x7f715237c5a4 at::native::copy_()
[2m[36m(pid=19290)[0m     @     0x7f7152a674f5 at::Tensor::copy_()
[2m[36m(pid=19194)[0m     @     0x7fb68ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=19194)[0m     @     0x7fb68f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19194)[0m     @     0x7fb68f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19194)[0m     @     0x7fb68ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19194)[0m     @     0x7fb68ec25388 at::native::copy_impl()
[2m[36m(pid=19194)[0m     @     0x7fb68ec275a4 at::native::copy_()
[2m[36m(pid=19194)[0m     @     0x7fb68f3124f5 at::Tensor::copy_()
[2m[36m(pid=19310)[0m     @     0x7f8d6b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=19310)[0m     @     0x7f8d6c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19310)[0m     @     0x7f8d6c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19310)[0m     @     0x7f8d6b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19310)[0m     @     0x7f8d6b4f0388 at::native::copy_impl()
[2m[36m(pid=19310)[0m     @     0x7f8d6b4f25a4 at::native::copy_()
[2m[36m(pid=19257)[0m     @     0x7fc8e1caad91 at::TensorIterator::for_each()
[2m[36m(pid=19257)[0m     @     0x7fc8e258db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19257)[0m     @     0x7fc8e25b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19257)[0m     @     0x7fc8e1a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19257)[0m     @     0x7fc8e1a50388 at::native::copy_impl()
[2m[36m(pid=19257)[0m     @     0x7fc8e1a525a4 at::native::copy_()
[2m[36m(pid=19219)[0m     @     0x7ee4dcafad91 at::TensorIterator::for_each()
[2m[36m(pid=19219)[0m     @     0x7ee4dd3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19219)[0m     @     0x7ee4dd400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19219)[0m     @     0x7ee4dc8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19219)[0m     @     0x7ee4dc8a0388 at::native::copy_impl()
[2m[36m(pid=19219)[0m     @     0x7ee4dc8a25a4 at::native::copy_()
[2m[36m(pid=19219)[0m     @     0x7ee4dcf8d4f5 at::Tensor::copy_()
[2m[36m(pid=19255)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19255)[0m *** SIGSEGV (@0x0) received by PID 19255 (TID 0x7f98cd87c700) from PID 0; stack trace: ***
[2m[36m(pid=19255)[0m     @     0x7f98cd455390 (unknown)
[2m[36m(pid=19255)[0m     @     0x7f69cd3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19255)[0m     @     0x7f69ccaf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19255)[0m     @     0x7f69ccafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19263)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19263)[0m *** SIGSEGV (@0x0) received by PID 19263 (TID 0x7f555cef7700) from PID 0; stack trace: ***
[2m[36m(pid=19263)[0m     @     0x7f555cad0390 (unknown)
[2m[36m(pid=19263)[0m     @     0x7f265c95df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19263)[0m     @     0x7f265c0887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19263)[0m     @     0x7f265c08b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19297)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19297)[0m *** SIGSEGV (@0x0) received by PID 19297 (TID 0x7f67f33f3700) from PID 0; stack trace: ***
[2m[36m(pid=19297)[0m     @     0x7f67f2fcc390 (unknown)
[2m[36m(pid=19297)[0m     @     0x7f38f2f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19297)[0m     @     0x7f38f263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19297)[0m     @     0x7f38f26418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19222)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19222)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19222)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19222)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19222)[0m *** SIGSEGV (@0x0) received by PID 19222 (TID 0x7fb18c3d1700) from PID 0; stack trace: ***
[2m[36m(pid=19222)[0m     @     0x7fb18bfaa390 (unknown)
[2m[36m(pid=19222)[0m     @     0x7f828be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19222)[0m     @     0x7f828b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19318)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19318)[0m *** SIGSEGV (@0x0) received by PID 19318 (TID 0x7f3cc7c81700) from PID 0; stack trace: ***
[2m[36m(pid=19318)[0m     @     0x7f3cc785a390 (unknown)
[2m[36m(pid=19318)[0m     @     0x7f0dc77fbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19318)[0m     @     0x7f0dc6f267db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19229)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19229)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19229)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19229)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19229)[0m *** SIGSEGV (@0x0) received by PID 19229 (TID 0x7fe2025b8700) from PID 0; stack trace: ***
[2m[36m(pid=19229)[0m     @     0x7fe202191390 (unknown)
[2m[36m(pid=19229)[0m     @     0x7fb30213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19229)[0m     @     0x7fb3018657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19229)[0m     @     0x7fb3018688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19287)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19287)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19287)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19287)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19287)[0m *** SIGSEGV (@0x0) received by PID 19287 (TID 0x7f6f8de5c700) from PID 0; stack trace: ***
[2m[36m(pid=19287)[0m     @     0x7f6f8da35390 (unknown)
[2m[36m(pid=19329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19329)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19329)[0m *** SIGSEGV (@0x0) received by PID 19329 (TID 0x7f4807976700) from PID 0; stack trace: ***
[2m[36m(pid=19329)[0m     @     0x7f480754f390 (unknown)
[2m[36m(pid=19329)[0m     @     0x7f19073edf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19329)[0m     @     0x7f1906b187db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19316)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19316)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19316)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19316)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19316)[0m *** SIGSEGV (@0x0) received by PID 19316 (TID 0x7fe71415b700) from PID 0; stack trace: ***
[2m[36m(pid=19267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19267)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19267)[0m *** SIGSEGV (@0x0) received by PID 19267 (TID 0x7f25066fb700) from PID 0; stack trace: ***
[2m[36m(pid=19267)[0m     @     0x7f25062d4390 (unknown)
[2m[36m(pid=19267)[0m     @     0x7ef606279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19267)[0m     @     0x7ef6059a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19267)[0m     @     0x7ef6059a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19253)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19253)[0m *** SIGSEGV (@0x0) received by PID 19253 (TID 0x7f1dadeed700) from PID 0; stack trace: ***
[2m[36m(pid=19253)[0m     @     0x7f1dadac6390 (unknown)
[2m[36m(pid=19253)[0m     @     0x7eeeada0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19253)[0m     @     0x7eeead1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19199)[0m     @     0x7fa8dfa77a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19199)[0m     @     0x7fa8dfa75388 at::native::copy_impl()
[2m[36m(pid=19199)[0m     @     0x7fa8dfa775a4 at::native::copy_()
[2m[36m(pid=19188)[0m     @     0x7fc01506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19188)[0m     @     0x7fc01506ead3 at::TensorIterator::for_each()
[2m[36m(pid=19249)[0m     @     0x7f2f2875e390 (unknown)
[2m[36m(pid=19249)[0m     @     0x7f0028563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19249)[0m     @     0x7f0027c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19249)[0m     @     0x7f0027c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19203)[0m     @     0x7fee2dce6390 (unknown)
[2m[36m(pid=19203)[0m     @     0x7fbf2dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19203)[0m     @     0x7fbf2d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19203)[0m     @     0x7fbf2d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19239)[0m     @     0x7f60e077cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19239)[0m     @     0x7f60dfea77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19239)[0m     @     0x7f60dfeaa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19239)[0m     @     0x7f60dfeaaad3 at::TensorIterator::for_each()
[2m[36m(pid=19308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19308)[0m *** SIGSEGV (@0x0) received by PID 19308 (TID 0x7f038e672700) from PID 0; stack trace: ***
[2m[36m(pid=19308)[0m     @     0x7f038e24b390 (unknown)
[2m[36m(pid=19308)[0m     @     0x7ed48e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19308)[0m     @     0x7ed48d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19189)[0m     @     0x7f9ae9cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19189)[0m     @     0x7f9ae9cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=19189)[0m     @     0x7f9ae9cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=19231)[0m     @     0x7f21410b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19231)[0m     @     0x7f21407e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19231)[0m     @     0x7f21407e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19231)[0m     @     0x7f21407e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=19301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19301)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19301)[0m *** SIGSEGV (@0x0) received by PID 19301 (TID 0x7f1dbc703700) from PID 0; stack trace: ***
[2m[36m(pid=19301)[0m     @     0x7f1dbc2dc390 (unknown)
[2m[36m(pid=19247)[0m     @     0x7f67127db390 (unknown)
[2m[36m(pid=19247)[0m     @     0x7f38125a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19247)[0m     @     0x7f3811ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19247)[0m     @     0x7f3811cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19247)[0m     @     0x7f3811cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=19264)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19264)[0m *** SIGSEGV (@0x0) received by PID 19264 (TID 0x7f7e84126700) from PID 0; stack trace: ***
[2m[36m(pid=19264)[0m     @     0x7f7e83cff390 (unknown)
[2m[36m(pid=19216)[0m     @     0x7fa5e6f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19216)[0m     @     0x7fa5e663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19216)[0m     @     0x7fa5e66418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19216)[0m     @     0x7fa5e6641ad3 at::TensorIterator::for_each()
[2m[36m(pid=19261)[0m     @     0x7f7f37590390 (unknown)
[2m[36m(pid=19261)[0m     @     0x7f503743af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19261)[0m     @     0x7f5036b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19261)[0m     @     0x7f5036b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19187)[0m     @     0x7ed4b9caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19187)[0m     @     0x7ed4b9caaad3 at::TensorIterator::for_each()
[2m[36m(pid=19187)[0m     @     0x7ed4b9caad91 at::TensorIterator::for_each()
[2m[36m(pid=19187)[0m     @     0x7ed4ba58db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19312)[0m     @     0x7f0a555a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19312)[0m     @     0x7f0a555a1388 at::native::copy_impl()
[2m[36m(pid=19312)[0m     @     0x7f0a555a35a4 at::native::copy_()
[2m[36m(pid=19312)[0m     @     0x7f0a55c8e4f5 at::Tensor::copy_()
[2m[36m(pid=19243)[0m     @     0x7f932f93a4f5 at::Tensor::copy_()
[2m[36m(pid=19243)[0m     @     0x7f9331e0d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19243)[0m     @     0x7f932f93a4f5 at::Tensor::copy_()
[2m[36m(pid=19243)[0m     @     0x7f93359e579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19243)[0m     @     0x562068d2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19243)[0m     @     0x562068c89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19243)[0m     @     0x562068d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=19243)[0m     @     0x562068d15a20 method_vectorcall
[2m[36m(pid=19243)[0m     @     0x562068c89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19243)[0m     @     0x562068d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=19243)[0m     @     0x562068d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19243)[0m     @     0x562068c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19243)[0m     @     0x562068d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=19243)[0m     @     0x562068d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19243)[0m     @     0x562068c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19243)[0m     @     0x562068d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=19243)[0m     @     0x562068d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19243)[0m     @     0x562068c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19243)[0m     @     0x562068d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=19243)[0m     @     0x562068d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19243)[0m     @     0x562068c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x7fbb6cee05a4 at::native::copy_()
[2m[36m(pid=19291)[0m     @     0x7fbb6d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19291)[0m     @     0x7fbb6fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19291)[0m     @     0x7fbb6d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19275)[0m     @     0x7f17a31734f5 at::Tensor::copy_()
[2m[36m(pid=19275)[0m     @     0x7f17a56468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19275)[0m     @     0x7f17a31734f5 at::Tensor::copy_()
[2m[36m(pid=19275)[0m     @     0x7f17a921e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19275)[0m     @     0x55560ad21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19275)[0m     @     0x55560ac7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19275)[0m     @     0x55560ad07baf _PyEval_EvalCodeWithName
[2m[36m(pid=19275)[0m     @     0x55560ad08a20 method_vectorcall
[2m[36m(pid=19275)[0m     @     0x55560ac7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19275)[0m     @     0x55560ad07baf _PyEval_EvalCodeWithName
[2m[36m(pid=19275)[0m     @     0x55560ad08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19275)[0m     @     0x55560ac7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19275)[0m     @     0x55560ad07baf _PyEval_EvalCodeWithName
[2m[36m(pid=19275)[0m     @     0x55560ad08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19275)[0m     @     0x55560ac7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19275)[0m     @     0x55560ad07baf _PyEval_EvalCodeWithName
[2m[36m(pid=19275)[0m     @     0x55560ad08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19275)[0m     @     0x55560ac7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19275)[0m     @     0x55560ad07baf _PyEval_EvalCodeWithName
[2m[36m(pid=19275)[0m     @     0x55560ad08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19275)[0m     @     0x55560ac7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x7f51e2e6c4f5 at::Tensor::copy_()
[2m[36m(pid=19319)[0m     @     0x7f51e533f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19319)[0m     @     0x7f51e2e6c4f5 at::Tensor::copy_()
[2m[36m(pid=19319)[0m     @     0x7f51e8f1779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19319)[0m     @     0x55f1a40dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19319)[0m     @     0x55f1a403ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x55f1a40c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19319)[0m     @     0x55f1a40c6a20 method_vectorcall
[2m[36m(pid=19319)[0m     @     0x55f1a403abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x55f1a40c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19319)[0m     @     0x55f1a40c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19319)[0m     @     0x55f1a403b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x55f1a40c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19319)[0m     @     0x55f1a40c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19319)[0m     @     0x55f1a403b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x55f1a40c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19319)[0m     @     0x55f1a40c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19319)[0m     @     0x55f1a403b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19319)[0m     @     0x55f1a40c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19319)[0m     @     0x55f1a40c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19319)[0m     @     0x55f1a403b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x7fa8d52fa5a4 at::native::copy_()
[2m[36m(pid=19274)[0m     @     0x7fa8d59e54f5 at::Tensor::copy_()
[2m[36m(pid=19274)[0m     @     0x7fa8d7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19274)[0m     @     0x7fa8d59e54f5 at::Tensor::copy_()
[2m[36m(pid=19274)[0m     @     0x7fa8dba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19274)[0m     @     0x5639bf7a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19274)[0m     @     0x5639bf701b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19274)[0m     @     0x5639bf78da20 method_vectorcall
[2m[36m(pid=19274)[0m     @     0x5639bf701bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19274)[0m     @     0x5639bf78d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19274)[0m     @     0x5639bf702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19274)[0m     @     0x5639bf78d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19274)[0m     @     0x5639bf702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19274)[0m     @     0x5639bf78d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19274)[0m     @     0x5639bf702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x7ee0a731e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19284)[0m     @     0x7ee0a4e4b4f5 at::Tensor::copy_()
[2m[36m(pid=19284)[0m     @     0x7ee0aaef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19284)[0m     @     0x558b1d684fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19284)[0m     @     0x558b1d5dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19284)[0m     @     0x558b1d66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x558b1d66ba20 method_vectorcall
[2m[36m(pid=19284)[0m     @     0x558b1d5dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19284)[0m     @     0x558b1d66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x558b1d66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19284)[0m     @     0x558b1d5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19284)[0m     @     0x558b1d66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x558b1d66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19284)[0m     @     0x558b1d5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19284)[0m     @     0x558b1d66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x558b1d66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19284)[0m     @     0x558b1d5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19284)[0m     @     0x558b1d66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19284)[0m     @     0x558b1d66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19284)[0m     @     0x558b1d5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x7fa9ce22c4f5 at::Tensor::copy_()
[2m[36m(pid=19265)[0m     @     0x7fa9d06ff8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19265)[0m     @     0x7fa9ce22c4f5 at::Tensor::copy_()
[2m[36m(pid=19265)[0m     @     0x7fa9d42d779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19265)[0m     @     0x55c347d09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19265)[0m     @     0x55c347c64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x55c347cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19265)[0m     @     0x55c347cf0a20 method_vectorcall
[2m[36m(pid=19265)[0m     @     0x55c347c64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x55c347cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19265)[0m     @     0x55c347cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19265)[0m     @     0x55c347c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x55c347cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19265)[0m     @     0x55c347cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19265)[0m     @     0x55c347c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x55c347cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19265)[0m     @     0x55c347cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19265)[0m     @     0x55c347c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19265)[0m     @     0x55c347cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19265)[0m     @     0x55c347cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19265)[0m     @     0x55c347c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x7f9b152354f5 at::Tensor::copy_()
[2m[36m(pid=19272)[0m     @     0x7f9b177088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19272)[0m     @     0x7f9b152354f5 at::Tensor::copy_()
[2m[36m(pid=19272)[0m     @     0x7f9b1b2e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19272)[0m     @     0x55ed152eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19272)[0m     @     0x55ed15249b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x55ed152d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=19272)[0m     @     0x55ed152d5a20 method_vectorcall
[2m[36m(pid=19272)[0m     @     0x55ed15249bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x55ed152d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=19272)[0m     @     0x55ed152d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19272)[0m     @     0x55ed1524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x55ed152d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=19272)[0m     @     0x55ed152d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19272)[0m     @     0x55ed1524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x55ed152d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=19272)[0m     @     0x55ed152d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19272)[0m     @     0x55ed1524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19272)[0m     @     0x55ed152d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=19272)[0m     @     0x55ed152d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19272)[0m     @     0x55ed1524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x7f98bd5cb5a4 at::native::copy_()
[2m[36m(pid=19193)[0m     @     0x7f98bdcb64f5 at::Tensor::copy_()
[2m[36m(pid=19193)[0m     @     0x7f98c01898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19193)[0m     @     0x7f98bdcb64f5 at::Tensor::copy_()
[2m[36m(pid=19193)[0m     @     0x7f98c3d6179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19193)[0m     @     0x55a358a32fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19193)[0m     @     0x55a35898db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x55a358a18baf _PyEval_EvalCodeWithName
[2m[36m(pid=19193)[0m     @     0x55a358a19a20 method_vectorcall
[2m[36m(pid=19193)[0m     @     0x55a35898dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x55a358a18baf _PyEval_EvalCodeWithName
[2m[36m(pid=19193)[0m     @     0x55a358a19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19193)[0m     @     0x55a35898e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x55a358a18baf _PyEval_EvalCodeWithName
[2m[36m(pid=19193)[0m     @     0x55a358a19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19193)[0m     @     0x55a35898e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x55a358a18baf _PyEval_EvalCodeWithName
[2m[36m(pid=19193)[0m     @     0x55a358a19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19193)[0m     @     0x55a35898e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x7efbc34f25a4 at::native::copy_()
[2m[36m(pid=19321)[0m     @     0x7efbc3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=19321)[0m     @     0x7efbc60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19321)[0m     @     0x7efbc3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=19321)[0m     @     0x7efbc9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19321)[0m     @     0x560f2bfe5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19321)[0m     @     0x560f2bf40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bfcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19321)[0m     @     0x560f2bfcca20 method_vectorcall
[2m[36m(pid=19204)[0m     @     0x7f12f01137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19204)[0m     @     0x7f12f01168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19204)[0m     @     0x7f12f0116ad3 at::TensorIterator::for_each()
[2m[36m(pid=19204)[0m     @     0x7f12f0116d91 at::TensorIterator::for_each()
[2m[36m(pid=19192)[0m     @     0x7f70518288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19192)[0m     @     0x7f7051828ad3 at::TensorIterator::for_each()
[2m[36m(pid=19192)[0m     @     0x7f7051828d91 at::TensorIterator::for_each()
[2m[36m(pid=19294)[0m     @     0x7f16f5eca5a4 at::native::copy_()
[2m[36m(pid=19294)[0m     @     0x7f16f65b54f5 at::Tensor::copy_()
[2m[36m(pid=19294)[0m     @     0x7f16f8a888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19200)[0m     @     0x7f22d67627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19200)[0m     @     0x7f22d67658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19200)[0m     @     0x7f22d6765ad3 at::TensorIterator::for_each()
[2m[36m(pid=19200)[0m     @     0x7f22d6765d91 at::TensorIterator::for_each()
[2m[36m(pid=19259)[0m     @     0x7f746bcf9388 at::native::copy_impl()
[2m[36m(pid=19259)[0m     @     0x7f746bcfb5a4 at::native::copy_()
[2m[36m(pid=19259)[0m     @     0x7f746c3e64f5 at::Tensor::copy_()
[2m[36m(pid=19259)[0m     @     0x7f746e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19190)[0m     @     0x7ef8a31f37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19190)[0m     @     0x7ef8a31f68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19190)[0m     @     0x7ef8a31f6ad3 at::TensorIterator::for_each()
[2m[36m(pid=19190)[0m     @     0x7ef8a31f6d91 at::TensorIterator::for_each()
[2m[36m(pid=19215)[0m     @     0x7f7dee0eb5a4 at::native::copy_()
[2m[36m(pid=19215)[0m     @     0x7f7dee7d64f5 at::Tensor::copy_()
[2m[36m(pid=19215)[0m     @     0x7f7df0ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19215)[0m     @     0x7f7dee7d64f5 at::Tensor::copy_()
[2m[36m(pid=19215)[0m     @     0x7f7df447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19215)[0m     @     0x55e5d0607fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19215)[0m     @     0x55e5d0562b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19215)[0m     @     0x55e5d05edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19215)[0m     @     0x55e5d05eea20 method_vectorcall
[2m[36m(pid=19215)[0m     @     0x55e5d0562bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19215)[0m     @     0x55e5d05edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19215)[0m     @     0x55e5d05ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19215)[0m     @     0x55e5d0563689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19215)[0m     @     0x55e5d05edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x7fa7b9be05a4 at::native::copy_()
[2m[36m(pid=19303)[0m     @     0x7fa7ba2cb4f5 at::Tensor::copy_()
[2m[36m(pid=19303)[0m     @     0x7fa7bc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19303)[0m     @     0x7fa7ba2cb4f5 at::Tensor::copy_()
[2m[36m(pid=19303)[0m     @     0x7fa7c037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19303)[0m     @     0x555a213b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19303)[0m     @     0x555a21312b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19303)[0m     @     0x555a2139dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x555a2139ea20 method_vectorcall
[2m[36m(pid=19303)[0m     @     0x555a21312bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x7fb0cd2cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19299)[0m     @     0x7fb0cd2cb388 at::native::copy_impl()
[2m[36m(pid=19299)[0m     @     0x7fb0cd2cd5a4 at::native::copy_()
[2m[36m(pid=19299)[0m     @     0x7fb0cd9b84f5 at::Tensor::copy_()
[2m[36m(pid=19278)[0m     @     0x7f281cee05a4 at::native::copy_()
[2m[36m(pid=19278)[0m     @     0x7f281d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19278)[0m     @     0x7f281fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19278)[0m     @     0x7f281d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19278)[0m     @     0x7f282367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19278)[0m     @     0x55b58821bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19278)[0m     @     0x55b588176b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19278)[0m     @     0x55b588201baf _PyEval_EvalCodeWithName
[2m[36m(pid=19278)[0m     @     0x55b588202a20 method_vectorcall
[2m[36m(pid=19278)[0m     @     0x55b588176bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x7f857d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=19271)[0m     @     0x7f857f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19271)[0m     @     0x7f857d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=19271)[0m     @     0x7f858346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19271)[0m     @     0x55b8e42b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19271)[0m     @     0x55b8e4210b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x55b8e429bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19271)[0m     @     0x55b8e429ca20 method_vectorcall
[2m[36m(pid=19271)[0m     @     0x55b8e4210bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x55b8e429bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19271)[0m     @     0x55b8e429c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19271)[0m     @     0x55b8e4211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x55b8e429bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19271)[0m     @     0x55b8e429c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19271)[0m     @     0x55b8e4211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x55b8e429bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19271)[0m     @     0x55b8e429c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19271)[0m     @     0x55b8e4211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19271)[0m     @     0x55b8e429bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19271)[0m     @     0x55b8e429c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19271)[0m     @     0x55b8e4211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x7ef507a395a4 at::native::copy_()
[2m[36m(pid=19269)[0m     @     0x7ef5081244f5 at::Tensor::copy_()
[2m[36m(pid=19269)[0m     @     0x7ef50a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19269)[0m     @     0x7ef5081244f5 at::Tensor::copy_()
[2m[36m(pid=19269)[0m     @     0x7ef50e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19269)[0m     @     0x5579ac7aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19269)[0m     @     0x5579ac705b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x5579ac790baf _PyEval_EvalCodeWithName
[2m[36m(pid=19269)[0m     @     0x5579ac791a20 method_vectorcall
[2m[36m(pid=19269)[0m     @     0x5579ac705bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x5579ac790baf _PyEval_EvalCodeWithName
[2m[36m(pid=19269)[0m     @     0x5579ac791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19269)[0m     @     0x5579ac706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x5579ac790baf _PyEval_EvalCodeWithName
[2m[36m(pid=19269)[0m     @     0x5579ac791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19269)[0m     @     0x5579ac706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x5579ac790baf _PyEval_EvalCodeWithName
[2m[36m(pid=19269)[0m     @     0x5579ac791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19269)[0m     @     0x5579ac706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19269)[0m     @     0x5579ac790baf _PyEval_EvalCodeWithName
[2m[36m(pid=19269)[0m     @     0x5579ac791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19269)[0m     @     0x5579ac706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x7f2cd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=19289)[0m     @     0x7f2cd788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19289)[0m     @     0x7f2cd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=19289)[0m     @     0x7f2cdb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19289)[0m     @     0x55c3646c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19289)[0m     @     0x55c364624b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x55c3646afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19289)[0m     @     0x55c3646b0a20 method_vectorcall
[2m[36m(pid=19289)[0m     @     0x55c364624bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x55c3646afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19289)[0m     @     0x55c3646b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19289)[0m     @     0x55c364625689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x55c3646afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19289)[0m     @     0x55c3646b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19289)[0m     @     0x55c364625689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x55c3646afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19289)[0m     @     0x55c3646b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19289)[0m     @     0x55c364625689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19289)[0m     @     0x55c3646afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19289)[0m     @     0x55c3646b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19289)[0m     @     0x55c364625689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x7efa972e15a4 at::native::copy_()
[2m[36m(pid=19250)[0m     @     0x7efa979cc4f5 at::Tensor::copy_()
[2m[36m(pid=19250)[0m     @     0x7efa99e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19250)[0m     @     0x7efa979cc4f5 at::Tensor::copy_()
[2m[36m(pid=19205)[0m     @     0x7f5af1be05a4 at::native::copy_()
[2m[36m(pid=19205)[0m     @     0x7f5af22cb4f5 at::Tensor::copy_()
[2m[36m(pid=19205)[0m     @     0x7f5af479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19205)[0m     @     0x7f5af22cb4f5 at::Tensor::copy_()
[2m[36m(pid=19205)[0m     @     0x7f5af837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19304)[0m     @     0x7eda187205a4 at::native::copy_()
[2m[36m(pid=19304)[0m     @     0x7eda18e0b4f5 at::Tensor::copy_()
[2m[36m(pid=19304)[0m     @     0x7eda1b2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19304)[0m     @     0x7eda18e0b4f5 at::Tensor::copy_()
[2m[36m(pid=19197)[0m     @     0x7f6e0bb505a4 at::native::copy_()
[2m[36m(pid=19197)[0m     @     0x7f6e0c23b4f5 at::Tensor::copy_()
[2m[36m(pid=19197)[0m     @     0x7f6e0e70e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19213)[0m     @     0x7ee50742a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19213)[0m     @     0x7ee50742d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19213)[0m     @     0x7ee50742dad3 at::TensorIterator::for_each()
[2m[36m(pid=19213)[0m     @     0x7ee50742dd91 at::TensorIterator::for_each()
[2m[36m(pid=19213)[0m     @     0x7ee507d10b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19201)[0m     @     0x7ecd90ccf5a4 at::native::copy_()
[2m[36m(pid=19201)[0m     @     0x7ecd913ba4f5 at::Tensor::copy_()
[2m[36m(pid=19201)[0m     @     0x7ecd9388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19225)[0m     @     0x7f79ea2baf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19225)[0m     @     0x7f79e99e57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19225)[0m     @     0x7f79e99e88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19225)[0m     @     0x7f79e99e8ad3 at::TensorIterator::for_each()
[2m[36m(pid=19202)[0m     @     0x7ee953d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=19202)[0m     @     0x7ee953d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=19202)[0m     @     0x7ee95461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19202)[0m     @     0x7ee954642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19202)[0m     @     0x7ee953ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19202)[0m     @     0x7ee953ae2388 at::native::copy_impl()
[2m[36m(pid=19210)[0m     @     0x7fcab3ae45a4 at::native::copy_()
[2m[36m(pid=19210)[0m     @     0x7fcab41cf4f5 at::Tensor::copy_()
[2m[36m(pid=19210)[0m     @     0x7fcab66a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19288)[0m     @     0x7f20df94a390 (unknown)
[2m[36m(pid=19288)[0m     @     0x7ef1df751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19288)[0m     @     0x7ef1dee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19288)[0m     @     0x7ef1dee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19288)[0m     @     0x7ef1dee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=19286)[0m     @     0x7f85ee4d1390 (unknown)
[2m[36m(pid=19286)[0m     @     0x7f56ee365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19286)[0m     @     0x7f56eda907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19286)[0m     @     0x7f56eda938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19286)[0m     @     0x7f56eda93ad3 at::TensorIterator::for_each()
[2m[36m(pid=19224)[0m     @     0x7fac8a7e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19224)[0m     @     0x7fac8a7e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=19224)[0m     @     0x7fac8a7e5d91 at::TensorIterator::for_each()
[2m[36m(pid=19224)[0m     @     0x7fac8b0c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19208)[0m     @     0x7f40713177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19208)[0m     @     0x7f407131a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19208)[0m     @     0x7f407131aad3 at::TensorIterator::for_each()
[2m[36m(pid=19256)[0m     @     0x7f3d1f279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19256)[0m     @     0x7f3d1e9a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19256)[0m     @     0x7f3d1e9a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19256)[0m     @     0x7f3d1e9a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=19262)[0m     @     0x7f804b5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19262)[0m     @     0x7f804ad1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19262)[0m     @     0x7f804ad1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19262)[0m     @     0x7f804ad1dad3 at::TensorIterator::for_each()
[2m[36m(pid=19276)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=19276)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=19276)[0m *** Aborted at 1604572463 (unix time) try "date -d @1604572463" if you are using GNU date ***
[2m[36m(pid=19276)[0m PC: @                0x0 (unknown)
[2m[36m(pid=19276)[0m *** SIGSEGV (@0x0) received by PID 19276 (TID 0x7f9337827700) from PID 0; stack trace: ***
[2m[36m(pid=19276)[0m     @     0x7f9337400390 (unknown)
[2m[36m(pid=19196)[0m     @     0x7f224c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19196)[0m     @     0x7f224b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19196)[0m     @     0x7f224b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19196)[0m     @     0x7f224b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=19206)[0m     @     0x7f942a50f390 (unknown)
[2m[36m(pid=19206)[0m     @     0x7f652a494f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19206)[0m     @     0x7f6529bbf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19268)[0m     @     0x7f4cf4563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19268)[0m     @     0x7f4cf3c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19268)[0m     @     0x7f4cf3c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19268)[0m     @     0x7f4cf3c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=19268)[0m     @     0x7f4cf3c91d91 at::TensorIterator::for_each()
[2m[36m(pid=19223)[0m     @     0x7f1809ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19223)[0m     @     0x7f1809ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19223)[0m     @     0x7f1809ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=19223)[0m     @     0x7f1809ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=19191)[0m     @     0x7f6734a277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19191)[0m     @     0x7f6734a2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19191)[0m     @     0x7f6734a2aad3 at::TensorIterator::for_each()
[2m[36m(pid=19191)[0m     @     0x7f6734a2ad91 at::TensorIterator::for_each()
[2m[36m(pid=19191)[0m     @     0x7f673530db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19191)[0m     @     0x7f6735330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19309)[0m     @     0x7ee3e554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19309)[0m     @     0x7ee3e55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19309)[0m     @     0x7ee3e5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=19309)[0m     @     0x7ee3e5552d91 at::TensorIterator::for_each()
[2m[36m(pid=19270)[0m     @     0x7f840e58d4f5 at::Tensor::copy_()
[2m[36m(pid=19270)[0m     @     0x7f8410a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19270)[0m     @     0x7f840e58d4f5 at::Tensor::copy_()
[2m[36m(pid=19270)[0m     @     0x7f841463879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19270)[0m     @     0x55884bbb5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19270)[0m     @     0x55884bb10b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19270)[0m     @     0x55884bb9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19270)[0m     @     0x55884bb9ca20 method_vectorcall
[2m[36m(pid=19270)[0m     @     0x55884bb10bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19270)[0m     @     0x55884bb9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19270)[0m     @     0x55884bb9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19270)[0m     @     0x55884bb11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19270)[0m     @     0x55884bb9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19270)[0m     @     0x55884bb9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19270)[0m     @     0x55884bb11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19270)[0m     @     0x55884bb9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19270)[0m     @     0x55884bb9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19270)[0m     @     0x55884bb11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19270)[0m     @     0x55884bb9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19270)[0m     @     0x55884bb9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19270)[0m     @     0x55884bb11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x7f0b23f644f5 at::Tensor::copy_()
[2m[36m(pid=19266)[0m     @     0x7f0b2a00f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19266)[0m     @     0x558349c18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19266)[0m     @     0x558349b73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x558349bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19266)[0m     @     0x558349bffa20 method_vectorcall
[2m[36m(pid=19266)[0m     @     0x558349b73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x558349bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19266)[0m     @     0x558349bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19266)[0m     @     0x558349b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x558349bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19266)[0m     @     0x558349bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19266)[0m     @     0x558349b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x558349bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19266)[0m     @     0x558349bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19266)[0m     @     0x558349b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19266)[0m     @     0x558349bfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19266)[0m     @     0x558349bff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19266)[0m     @     0x558349b74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x7f3c58ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19314)[0m     @     0x7f3c567d64f5 at::Tensor::copy_()
[2m[36m(pid=19314)[0m     @     0x7f3c5c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19314)[0m     @     0x55efbdc12fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19314)[0m     @     0x55efbdb6db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x55efbdbf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19314)[0m     @     0x55efbdbf9a20 method_vectorcall
[2m[36m(pid=19314)[0m     @     0x55efbdb6dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x55efbdbf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19314)[0m     @     0x55efbdbf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19314)[0m     @     0x55efbdb6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x55efbdbf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19314)[0m     @     0x55efbdbf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19314)[0m     @     0x55efbdb6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x55efbdbf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19314)[0m     @     0x55efbdbf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19314)[0m     @     0x55efbdb6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19314)[0m     @     0x55efbdbf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19314)[0m     @     0x55efbdbf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19314)[0m     @     0x55efbdb6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x7f7154f3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19290)[0m     @     0x7f7152a674f5 at::Tensor::copy_()
[2m[36m(pid=19290)[0m     @     0x7f7158b1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19290)[0m     @     0x5610c8629fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19290)[0m     @     0x5610c8584b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x5610c860fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19290)[0m     @     0x5610c8610a20 method_vectorcall
[2m[36m(pid=19290)[0m     @     0x5610c8584bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x5610c860fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19290)[0m     @     0x5610c8610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19290)[0m     @     0x5610c8585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x5610c860fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19290)[0m     @     0x5610c8610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19290)[0m     @     0x5610c8585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x5610c860fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19290)[0m     @     0x5610c8610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19290)[0m     @     0x5610c8585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19290)[0m     @     0x5610c860fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19290)[0m     @     0x5610c8610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19290)[0m     @     0x5610c8585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x7fb6917e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19194)[0m     @     0x7fb68f3124f5 at::Tensor::copy_()
[2m[36m(pid=19194)[0m     @     0x7fb6953bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19194)[0m     @     0x555dc1b2afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19194)[0m     @     0x555dc1a85b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x555dc1b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=19194)[0m     @     0x555dc1b11a20 method_vectorcall
[2m[36m(pid=19194)[0m     @     0x555dc1a85bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x555dc1b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=19194)[0m     @     0x555dc1b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19194)[0m     @     0x555dc1a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x555dc1b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=19194)[0m     @     0x555dc1b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19194)[0m     @     0x555dc1a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x555dc1b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=19194)[0m     @     0x555dc1b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19194)[0m     @     0x555dc1a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19194)[0m     @     0x555dc1b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=19194)[0m     @     0x555dc1b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19194)[0m     @     0x555dc1a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x7f8d6bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=19310)[0m     @     0x7f8d6e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19310)[0m     @     0x7f8d6bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=19310)[0m     @     0x7f8d71c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19310)[0m     @     0x557d9cd27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19310)[0m     @     0x557d9cc82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x557d9cd0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19310)[0m     @     0x557d9cd0ea20 method_vectorcall
[2m[36m(pid=19310)[0m     @     0x557d9cc82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x557d9cd0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19310)[0m     @     0x557d9cd0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19310)[0m     @     0x557d9cc83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x557d9cd0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19310)[0m     @     0x557d9cd0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19310)[0m     @     0x557d9cc83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x557d9cd0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19310)[0m     @     0x557d9cd0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19310)[0m     @     0x557d9cc83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19310)[0m     @     0x557d9cd0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19310)[0m     @     0x557d9cd0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19310)[0m     @     0x557d9cc83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x7fc8e213d4f5 at::Tensor::copy_()
[2m[36m(pid=19257)[0m     @     0x7fc8e46108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19257)[0m     @     0x7fc8e213d4f5 at::Tensor::copy_()
[2m[36m(pid=19257)[0m     @     0x7fc8e81e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19257)[0m     @     0x556bfe982fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19257)[0m     @     0x556bfe8ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x556bfe968baf _PyEval_EvalCodeWithName
[2m[36m(pid=19257)[0m     @     0x556bfe969a20 method_vectorcall
[2m[36m(pid=19257)[0m     @     0x556bfe8ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x556bfe968baf _PyEval_EvalCodeWithName
[2m[36m(pid=19257)[0m     @     0x556bfe969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19257)[0m     @     0x556bfe8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x556bfe968baf _PyEval_EvalCodeWithName
[2m[36m(pid=19257)[0m     @     0x556bfe969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19257)[0m     @     0x556bfe8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x556bfe968baf _PyEval_EvalCodeWithName
[2m[36m(pid=19257)[0m     @     0x556bfe969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19257)[0m     @     0x556bfe8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19257)[0m     @     0x556bfe968baf _PyEval_EvalCodeWithName
[2m[36m(pid=19257)[0m     @     0x556bfe969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19257)[0m     @     0x556bfe8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x7ee4df4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19219)[0m     @     0x7ee4dcf8d4f5 at::Tensor::copy_()
[2m[36m(pid=19219)[0m     @     0x7ee4e303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19219)[0m     @     0x5586bd467fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19219)[0m     @     0x5586bd3c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x5586bd44dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19219)[0m     @     0x5586bd44ea20 method_vectorcall
[2m[36m(pid=19219)[0m     @     0x5586bd3c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x5586bd44dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19219)[0m     @     0x5586bd44e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19219)[0m     @     0x5586bd3c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x5586bd44dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19219)[0m     @     0x5586bd44e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19219)[0m     @     0x5586bd3c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x5586bd44dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19219)[0m     @     0x5586bd44e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19219)[0m     @     0x5586bd3c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19219)[0m     @     0x5586bd44dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19219)[0m     @     0x5586bd44e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19219)[0m     @     0x5586bd3c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x7f69ccafaad3 at::TensorIterator::for_each()
[2m[36m(pid=19255)[0m     @     0x7f69ccafad91 at::TensorIterator::for_each()
[2m[36m(pid=19255)[0m     @     0x7f69cd3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19255)[0m     @     0x7f69cd400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19263)[0m     @     0x7f265c08bad3 at::TensorIterator::for_each()
[2m[36m(pid=19263)[0m     @     0x7f265c08bd91 at::TensorIterator::for_each()
[2m[36m(pid=19263)[0m     @     0x7f265c96eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19263)[0m     @     0x7f265c991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19297)[0m     @     0x7f38f2641ad3 at::TensorIterator::for_each()
[2m[36m(pid=19297)[0m     @     0x7f38f2641d91 at::TensorIterator::for_each()
[2m[36m(pid=19297)[0m     @     0x7f38f2f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19297)[0m     @     0x7f38f2f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19222)[0m     @     0x7f828b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19222)[0m     @     0x7f828b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=19222)[0m     @     0x7f828b539d91 at::TensorIterator::for_each()
[2m[36m(pid=19222)[0m     @     0x7f828be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19222)[0m     @     0x7f828be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19318)[0m     @     0x7f0dc6f298f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19318)[0m     @     0x7f0dc6f29ad3 at::TensorIterator::for_each()
[2m[36m(pid=19318)[0m     @     0x7f0dc6f29d91 at::TensorIterator::for_each()
[2m[36m(pid=19318)[0m     @     0x7f0dc780cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19229)[0m     @     0x7fb301868ad3 at::TensorIterator::for_each()
[2m[36m(pid=19229)[0m     @     0x7fb301868d91 at::TensorIterator::for_each()
[2m[36m(pid=19229)[0m     @     0x7fb30214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19287)[0m     @     0x7f408d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19287)[0m     @     0x7f408cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19287)[0m     @     0x7f408cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19287)[0m     @     0x7f408cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=19287)[0m     @     0x7f408cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=19329)[0m     @     0x7f1906b1b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19329)[0m     @     0x7f1906b1bad3 at::TensorIterator::for_each()
[2m[36m(pid=19316)[0m     @     0x7fe713d34390 (unknown)
[2m[36m(pid=19316)[0m     @     0x7fb813cbbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19316)[0m     @     0x7fb8133e67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19316)[0m     @     0x7fb8133e98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19267)[0m     @     0x7ef6059a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=19267)[0m     @     0x7ef6059a7d91 at::TensorIterator::for_each()
[2m[36m(pid=19267)[0m     @     0x7ef60628ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19267)[0m     @     0x7ef6062adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19267)[0m     @     0x7ef60574fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19267)[0m     @     0x7ef60574d388 at::native::copy_impl()
[2m[36m(pid=19253)[0m     @     0x7eeead1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19253)[0m     @     0x7eeead138ad3 at::TensorIterator::for_each()
[2m[36m(pid=19253)[0m     @     0x7eeead138d91 at::TensorIterator::for_each()
[2m[36m(pid=19253)[0m     @     0x7eeeada1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19253)[0m     @     0x7eeeada3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19199)[0m     @     0x7fa8e01624f5 at::Tensor::copy_()
[2m[36m(pid=19199)[0m     @     0x7fa8e26358de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19199)[0m     @     0x7fa8e01624f5 at::Tensor::copy_()
[2m[36m(pid=19199)[0m     @     0x7fa8e620d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19199)[0m     @     0x558755858fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19199)[0m     @     0x5587557b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19199)[0m     @     0x55875583ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19199)[0m     @     0x55875583fa20 method_vectorcall
[2m[36m(pid=19199)[0m     @     0x5587557b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19199)[0m     @     0x55875583ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19199)[0m     @     0x55875583f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19199)[0m     @     0x5587557b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19199)[0m     @     0x55875583ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19199)[0m     @     0x55875583f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19199)[0m     @     0x5587557b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19199)[0m     @     0x55875583ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19199)[0m     @     0x55875583f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19199)[0m     @     0x5587557b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19199)[0m     @     0x55875583ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19199)[0m     @     0x55875583f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19199)[0m     @     0x5587557b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x7fc01506ed91 at::TensorIterator::for_each()
[2m[36m(pid=19188)[0m     @     0x7fc015951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19188)[0m     @     0x7fc015974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19188)[0m     @     0x7fc014e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19188)[0m     @     0x7fc014e14388 at::native::copy_impl()
[2m[36m(pid=19188)[0m     @     0x7fc014e165a4 at::native::copy_()
[2m[36m(pid=19249)[0m     @     0x7f0027c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=19249)[0m     @     0x7f0027c91d91 at::TensorIterator::for_each()
[2m[36m(pid=19249)[0m     @     0x7f0028574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19249)[0m     @     0x7f0028597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19249)[0m     @     0x7f0027a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19249)[0m     @     0x7f0027a37388 at::native::copy_impl()
[2m[36m(pid=19203)[0m     @     0x7fbf2d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=19203)[0m     @     0x7fbf2d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=19203)[0m     @     0x7fbf2dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19203)[0m     @     0x7fbf2dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19203)[0m     @     0x7fbf2d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19239)[0m     @     0x7f60dfeaad91 at::TensorIterator::for_each()
[2m[36m(pid=19239)[0m     @     0x7f60e078db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19239)[0m     @     0x7f60e07b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19239)[0m     @     0x7f60dfc52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19239)[0m     @     0x7f60dfc50388 at::native::copy_impl()
[2m[36m(pid=19308)[0m     @     0x7ed48d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19308)[0m     @     0x7ed48d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=19308)[0m     @     0x7ed48d868d91 at::TensorIterator::for_each()
[2m[36m(pid=19308)[0m     @     0x7ed48e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19189)[0m     @     0x7f9aea5b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19189)[0m     @     0x7f9aea5d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19189)[0m     @     0x7f9ae9a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19189)[0m     @     0x7f9ae9a78388 at::native::copy_impl()
[2m[36m(pid=19231)[0m     @     0x7f21407e3d91 at::TensorIterator::for_each()
[2m[36m(pid=19231)[0m     @     0x7f21410c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19231)[0m     @     0x7f21410e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19231)[0m     @     0x7f214058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19231)[0m     @     0x7f2140589388 at::native::copy_impl()
[2m[36m(pid=19301)[0m     @     0x7eeebc297f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19301)[0m     @     0x7eeebb9c27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19247)[0m     @     0x7f3811cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=19247)[0m     @     0x7f38125b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19247)[0m     @     0x7f38125d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19247)[0m     @     0x7f3811a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19247)[0m     @     0x7f3811a78388 at::native::copy_impl()
[2m[36m(pid=19264)[0m     @     0x7f4f83bf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19264)[0m     @     0x7f4f833227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19216)[0m     @     0x7fa5e6641d91 at::TensorIterator::for_each()
[2m[36m(pid=19216)[0m     @     0x7fa5e6f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19216)[0m     @     0x7fa5e6f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19216)[0m     @     0x7fa5e63e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19216)[0m     @     0x7fa5e63e7388 at::native::copy_impl()
[2m[36m(pid=19261)[0m     @     0x7f5036b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=19261)[0m     @     0x7f5036b68d91 at::TensorIterator::for_each()
[2m[36m(pid=19261)[0m     @     0x7f503744bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19261)[0m     @     0x7f503746ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19187)[0m     @     0x7ed4ba5b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19187)[0m     @     0x7ed4b9a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19187)[0m     @     0x7ed4b9a50388 at::native::copy_impl()
[2m[36m(pid=19187)[0m     @     0x7ed4b9a525a4 at::native::copy_()
[2m[36m(pid=19312)[0m     @     0x7f0a581618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19312)[0m     @     0x7f0a55c8e4f5 at::Tensor::copy_()
[2m[36m(pid=19312)[0m     @     0x7f0a5bd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19312)[0m     @     0x557f63ea7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19312)[0m     @     0x557f63e02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19312)[0m     @     0x557f63e8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19312)[0m     @     0x557f63e8ea20 method_vectorcall
[2m[36m(pid=19312)[0m     @     0x557f63e02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19312)[0m     @     0x557f63e8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19312)[0m     @     0x557f63e8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19312)[0m     @     0x557f63e03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19312)[0m     @     0x557f63e8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19312)[0m     @     0x557f63e8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19312)[0m     @     0x557f63e03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19312)[0m     @     0x557f63e8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19312)[0m     @     0x557f63e8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19312)[0m     @     0x557f63e03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19312)[0m     @     0x557f63e8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19312)[0m     @     0x557f63e8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19312)[0m     @     0x557f63e03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x7fbb7367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19291)[0m     @     0x55bbfe78dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19291)[0m     @     0x55bbfe6e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x55bbfe773baf _PyEval_EvalCodeWithName
[2m[36m(pid=19291)[0m     @     0x55bbfe774a20 method_vectorcall
[2m[36m(pid=19291)[0m     @     0x55bbfe6e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x55bbfe773baf _PyEval_EvalCodeWithName
[2m[36m(pid=19291)[0m     @     0x55bbfe774643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19291)[0m     @     0x55bbfe6e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x55bbfe773baf _PyEval_EvalCodeWithName
[2m[36m(pid=19291)[0m     @     0x55bbfe774643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19291)[0m     @     0x55bbfe6e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x55bbfe773baf _PyEval_EvalCodeWithName
[2m[36m(pid=19291)[0m     @     0x55bbfe774643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19291)[0m     @     0x55bbfe6e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19291)[0m     @     0x55bbfe773baf _PyEval_EvalCodeWithName
[2m[36m(pid=19291)[0m     @     0x55bbfe774643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19291)[0m     @     0x55bbfe6e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19274)[0m     @     0x5639bf78d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19274)[0m     @     0x5639bf702689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19193)[0m     @     0x55a358a18baf _PyEval_EvalCodeWithName
[2m[36m(pid=19193)[0m     @     0x55a358a19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19193)[0m     @     0x55a35898e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bf40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bfcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19321)[0m     @     0x560f2bfcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19321)[0m     @     0x560f2bf41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bfcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19321)[0m     @     0x560f2bfcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19321)[0m     @     0x560f2bf41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bfcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19321)[0m     @     0x560f2bfcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19321)[0m     @     0x560f2bf41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19321)[0m     @     0x560f2bfcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19321)[0m     @     0x560f2bfcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19321)[0m     @     0x560f2bf41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x7f12f09f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19204)[0m     @     0x7f12f0a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19204)[0m     @     0x7f12efebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19204)[0m     @     0x7f12efebc388 at::native::copy_impl()
[2m[36m(pid=19192)[0m     @     0x7f705210bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19192)[0m     @     0x7f705212ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19192)[0m     @     0x7f70515d0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19192)[0m     @     0x7f70515ce388 at::native::copy_impl()
[2m[36m(pid=19294)[0m     @     0x7f16f65b54f5 at::Tensor::copy_()
[2m[36m(pid=19294)[0m     @     0x7f16fc66079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19294)[0m     @     0x55dc0e196fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19294)[0m     @     0x55dc0e0f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19294)[0m     @     0x55dc0e17cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19294)[0m     @     0x55dc0e17da20 method_vectorcall
[2m[36m(pid=19294)[0m     @     0x55dc0e0f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19294)[0m     @     0x55dc0e17cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19294)[0m     @     0x55dc0e17d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19294)[0m     @     0x55dc0e0f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19294)[0m     @     0x55dc0e17cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19294)[0m     @     0x55dc0e17d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19294)[0m     @     0x55dc0e0f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19294)[0m     @     0x55dc0e17cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19294)[0m     @     0x55dc0e17d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19294)[0m     @     0x55dc0e0f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19294)[0m     @     0x55dc0e17cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19294)[0m     @     0x55dc0e17d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19294)[0m     @     0x55dc0e0f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x7f22d7048b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19200)[0m     @     0x7f22d706bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19200)[0m     @     0x7f22d650da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19200)[0m     @     0x7f22d650b388 at::native::copy_impl()
[2m[36m(pid=19259)[0m     @     0x7f746c3e64f5 at::Tensor::copy_()
[2m[36m(pid=19259)[0m     @     0x7f747249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19259)[0m     @     0x559d0805cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19259)[0m     @     0x559d07fb7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19259)[0m     @     0x559d08042baf _PyEval_EvalCodeWithName
[2m[36m(pid=19259)[0m     @     0x559d08043a20 method_vectorcall
[2m[36m(pid=19259)[0m     @     0x559d07fb7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19259)[0m     @     0x559d08042baf _PyEval_EvalCodeWithName
[2m[36m(pid=19259)[0m     @     0x559d08043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19259)[0m     @     0x559d07fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19259)[0m     @     0x559d08042baf _PyEval_EvalCodeWithName
[2m[36m(pid=19259)[0m     @     0x559d08043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19259)[0m     @     0x559d07fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19259)[0m     @     0x559d08042baf _PyEval_EvalCodeWithName
[2m[36m(pid=19259)[0m     @     0x559d08043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19259)[0m     @     0x559d07fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19259)[0m     @     0x559d08042baf _PyEval_EvalCodeWithName
[2m[36m(pid=19259)[0m     @     0x559d08043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19259)[0m     @     0x559d07fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x7ef8a3ad9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19190)[0m     @     0x7ef8a3afcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19190)[0m     @     0x7ef8a2f9ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19190)[0m     @     0x7ef8a2f9c388 at::native::copy_impl()
[2m[36m(pid=19215)[0m     @     0x55e5d05ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19215)[0m     @     0x55e5d0563689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19215)[0m     @     0x55e5d05edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19215)[0m     @     0x55e5d05ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19215)[0m     @     0x55e5d0563689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19215)[0m     @     0x55e5d05edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19215)[0m     @     0x55e5d05ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19215)[0m     @     0x55e5d0563689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19303)[0m     @     0x555a2139dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x555a2139e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19303)[0m     @     0x555a21313689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19303)[0m     @     0x555a2139dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x555a2139e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19303)[0m     @     0x555a21313689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19303)[0m     @     0x555a2139dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x555a2139e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19303)[0m     @     0x555a21313689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19303)[0m     @     0x555a2139dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19303)[0m     @     0x555a2139e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19303)[0m     @     0x555a21313689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x7fb0cfe8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19299)[0m     @     0x7fb0cd9b84f5 at::Tensor::copy_()
[2m[36m(pid=19299)[0m     @     0x7fb0d3a6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19299)[0m     @     0x561beed09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19299)[0m     @     0x561beec64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x561beecefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19299)[0m     @     0x561beecf0a20 method_vectorcall
[2m[36m(pid=19299)[0m     @     0x561beec64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x561beecefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19299)[0m     @     0x561beecf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19299)[0m     @     0x561beec65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x561beecefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19299)[0m     @     0x561beecf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19299)[0m     @     0x561beec65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x561beecefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19299)[0m     @     0x561beecf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19299)[0m     @     0x561beec65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19299)[0m     @     0x561beecefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19299)[0m     @     0x561beecf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19299)[0m     @     0x561beec65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19278)[0m     @     0x55b588201baf _PyEval_EvalCodeWithName
[2m[36m(pid=19278)[0m     @     0x55b588202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19278)[0m     @     0x55b588177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19278)[0m     @     0x55b588201baf _PyEval_EvalCodeWithName
[2m[36m(pid=19278)[0m     @     0x55b588202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19278)[0m     @     0x55b588177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19278)[0m     @     0x55b588201baf _PyEval_EvalCodeWithName
[2m[36m(pid=19278)[0m     @     0x55b588202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19278)[0m     @     0x55b588177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19278)[0m     @     0x55b588201baf _PyEval_EvalCodeWithName
[2m[36m(pid=19278)[0m     @     0x55b588202643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19278)[0m     @     0x55b588177689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x7efa9da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19250)[0m     @     0x5561d2adbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19250)[0m     @     0x5561d2a36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x5561d2ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=19250)[0m     @     0x5561d2ac2a20 method_vectorcall
[2m[36m(pid=19250)[0m     @     0x5561d2a36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x5561d2ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=19250)[0m     @     0x5561d2ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19250)[0m     @     0x5561d2a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x5561d2ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=19250)[0m     @     0x5561d2ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19250)[0m     @     0x5561d2a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x5561d2ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=19250)[0m     @     0x5561d2ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19250)[0m     @     0x5561d2a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19250)[0m     @     0x5561d2ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=19250)[0m     @     0x5561d2ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19250)[0m     @     0x5561d2a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd2819fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19205)[0m     @     0x562dd2774b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd27ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19205)[0m     @     0x562dd2800a20 method_vectorcall
[2m[36m(pid=19205)[0m     @     0x562dd2774bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd27ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19205)[0m     @     0x562dd2800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19205)[0m     @     0x562dd2775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd27ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19205)[0m     @     0x562dd2800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19205)[0m     @     0x562dd2775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd27ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19205)[0m     @     0x562dd2800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19205)[0m     @     0x562dd2775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19205)[0m     @     0x562dd27ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19205)[0m     @     0x562dd2800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19205)[0m     @     0x562dd2775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x7eda1eeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19304)[0m     @     0x5617b84e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19304)[0m     @     0x5617b843eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x5617b84c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=19304)[0m     @     0x5617b84caa20 method_vectorcall
[2m[36m(pid=19304)[0m     @     0x5617b843ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x5617b84c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=19304)[0m     @     0x5617b84ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19304)[0m     @     0x5617b843f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x5617b84c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=19304)[0m     @     0x5617b84ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19304)[0m     @     0x5617b843f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x5617b84c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=19304)[0m     @     0x5617b84ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19304)[0m     @     0x5617b843f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19304)[0m     @     0x5617b84c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=19304)[0m     @     0x5617b84ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19304)[0m     @     0x5617b843f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x7f6e0c23b4f5 at::Tensor::copy_()
[2m[36m(pid=19197)[0m     @     0x7f6e122e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19197)[0m     @     0x5647e894dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19197)[0m     @     0x5647e88a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x5647e8933baf _PyEval_EvalCodeWithName
[2m[36m(pid=19197)[0m     @     0x5647e8934a20 method_vectorcall
[2m[36m(pid=19197)[0m     @     0x5647e88a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x5647e8933baf _PyEval_EvalCodeWithName
[2m[36m(pid=19197)[0m     @     0x5647e8934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19197)[0m     @     0x5647e88a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x5647e8933baf _PyEval_EvalCodeWithName
[2m[36m(pid=19197)[0m     @     0x5647e8934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19197)[0m     @     0x5647e88a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x5647e8933baf _PyEval_EvalCodeWithName
[2m[36m(pid=19197)[0m     @     0x5647e8934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19197)[0m     @     0x5647e88a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19197)[0m     @     0x5647e8933baf _PyEval_EvalCodeWithName
[2m[36m(pid=19197)[0m     @     0x5647e8934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19197)[0m     @     0x5647e88a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x7ee507d33c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19213)[0m     @     0x7ee5071d5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19213)[0m     @     0x7ee5071d3388 at::native::copy_impl()
[2m[36m(pid=19213)[0m     @     0x7ee5071d55a4 at::native::copy_()
[2m[36m(pid=19213)[0m     @     0x7ee5078c04f5 at::Tensor::copy_()
[2m[36m(pid=19201)[0m     @     0x7ecd913ba4f5 at::Tensor::copy_()
[2m[36m(pid=19201)[0m     @     0x7ecd9746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19201)[0m     @     0x55fcfd954fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19201)[0m     @     0x55fcfd8afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19201)[0m     @     0x55fcfd93abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19201)[0m     @     0x55fcfd93ba20 method_vectorcall
[2m[36m(pid=19201)[0m     @     0x55fcfd8afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19201)[0m     @     0x55fcfd93abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19201)[0m     @     0x55fcfd93b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19201)[0m     @     0x55fcfd8b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19201)[0m     @     0x55fcfd93abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19201)[0m     @     0x55fcfd93b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19201)[0m     @     0x55fcfd8b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19201)[0m     @     0x55fcfd93abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19201)[0m     @     0x55fcfd93b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19201)[0m     @     0x55fcfd8b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19201)[0m     @     0x55fcfd93abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19201)[0m     @     0x55fcfd93b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19201)[0m     @     0x55fcfd8b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x7f79e99e8d91 at::TensorIterator::for_each()
[2m[36m(pid=19225)[0m     @     0x7f79ea2cbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19225)[0m     @     0x7f79ea2eec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19225)[0m     @     0x7f79e9790a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19225)[0m     @     0x7f79e978e388 at::native::copy_impl()
[2m[36m(pid=19225)[0m     @     0x7f79e97905a4 at::native::copy_()
[2m[36m(pid=19202)[0m     @     0x7ee953ae45a4 at::native::copy_()
[2m[36m(pid=19202)[0m     @     0x7ee9541cf4f5 at::Tensor::copy_()
[2m[36m(pid=19202)[0m     @     0x7ee9566a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19210)[0m     @     0x7fcab41cf4f5 at::Tensor::copy_()
[2m[36m(pid=19210)[0m     @     0x7fcaba27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19210)[0m     @     0x5574bc3fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19210)[0m     @     0x5574bc35ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19210)[0m     @     0x5574bc3e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19210)[0m     @     0x5574bc3e6a20 method_vectorcall
[2m[36m(pid=19210)[0m     @     0x5574bc35abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19210)[0m     @     0x5574bc3e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19210)[0m     @     0x5574bc3e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19210)[0m     @     0x5574bc35b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19210)[0m     @     0x5574bc3e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19210)[0m     @     0x5574bc3e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19210)[0m     @     0x5574bc35b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19210)[0m     @     0x5574bc3e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19210)[0m     @     0x5574bc3e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19210)[0m     @     0x5574bc35b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19210)[0m     @     0x5574bc3e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19210)[0m     @     0x5574bc3e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19210)[0m     @     0x5574bc35b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x7ef1dee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=19288)[0m     @     0x7ef1df762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19288)[0m     @     0x7ef1df785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19288)[0m     @     0x7ef1dec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19288)[0m     @     0x7ef1dec25388 at::native::copy_impl()
[2m[36m(pid=19288)[0m     @     0x7ef1dec275a4 at::native::copy_()
[2m[36m(pid=19286)[0m     @     0x7f56eda93d91 at::TensorIterator::for_each()
[2m[36m(pid=19286)[0m     @     0x7f56ee376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19286)[0m     @     0x7f56ee399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19286)[0m     @     0x7f56ed83ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19286)[0m     @     0x7f56ed839388 at::native::copy_impl()
[2m[36m(pid=19286)[0m     @     0x7f56ed83b5a4 at::native::copy_()
[2m[36m(pid=19224)[0m     @     0x7fac8b0ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19224)[0m     @     0x7fac8a58da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19224)[0m     @     0x7fac8a58b388 at::native::copy_impl()
[2m[36m(pid=19224)[0m     @     0x7fac8a58d5a4 at::native::copy_()
[2m[36m(pid=19208)[0m     @     0x7f407131ad91 at::TensorIterator::for_each()
[2m[36m(pid=19208)[0m     @     0x7f4071bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19208)[0m     @     0x7f4071c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19208)[0m     @     0x7f40710c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19208)[0m     @     0x7f40710c0388 at::native::copy_impl()
[2m[36m(pid=19208)[0m     @     0x7f40710c25a4 at::native::copy_()
[2m[36m(pid=19256)[0m     @     0x7f3d1e9a7d91 at::TensorIterator::for_each()
[2m[36m(pid=19256)[0m     @     0x7f3d1f28ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19256)[0m     @     0x7f3d1f2adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19256)[0m     @     0x7f3d1e74fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19256)[0m     @     0x7f3d1e74d388 at::native::copy_impl()
[2m[36m(pid=19256)[0m     @     0x7f3d1e74f5a4 at::native::copy_()
[2m[36m(pid=19262)[0m     @     0x7f804ad1dd91 at::TensorIterator::for_each()
[2m[36m(pid=19262)[0m     @     0x7f804b600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19262)[0m     @     0x7f804b623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19262)[0m     @     0x7f804aac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19262)[0m     @     0x7f804aac3388 at::native::copy_impl()
[2m[36m(pid=19262)[0m     @     0x7f804aac55a4 at::native::copy_()
[2m[36m(pid=19276)[0m     @     0x7f643738df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=19276)[0m     @     0x7f6436ab87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=19276)[0m     @     0x7f6436abb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19276)[0m     @     0x7f6436abbad3 at::TensorIterator::for_each()
[2m[36m(pid=19196)[0m     @     0x7f224b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=19196)[0m     @     0x7f224c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19196)[0m     @     0x7f224c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19196)[0m     @     0x7f224b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19196)[0m     @     0x7f224b4f0388 at::native::copy_impl()
[2m[36m(pid=19206)[0m     @     0x7f6529bc28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19206)[0m     @     0x7f6529bc2ad3 at::TensorIterator::for_each()
[2m[36m(pid=19206)[0m     @     0x7f6529bc2d91 at::TensorIterator::for_each()
[2m[36m(pid=19206)[0m     @     0x7f652a4a5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19268)[0m     @     0x7f4cf4574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19268)[0m     @     0x7f4cf4597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19268)[0m     @     0x7f4cf3a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19268)[0m     @     0x7f4cf3a37388 at::native::copy_impl()
[2m[36m(pid=19268)[0m     @     0x7f4cf3a395a4 at::native::copy_()
[2m[36m(pid=19223)[0m     @     0x7f180a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19223)[0m     @     0x7f180a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19223)[0m     @     0x7f1809c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19223)[0m     @     0x7f1809c8f388 at::native::copy_impl()
[2m[36m(pid=19223)[0m     @     0x7f1809c915a4 at::native::copy_()
[2m[36m(pid=19191)[0m     @     0x7f67347d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19191)[0m     @     0x7f67347d0388 at::native::copy_impl()
[2m[36m(pid=19191)[0m     @     0x7f67347d25a4 at::native::copy_()
[2m[36m(pid=19191)[0m     @     0x7f6734ebd4f5 at::Tensor::copy_()
[2m[36m(pid=19309)[0m     @     0x7ee3e5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19309)[0m     @     0x7ee3e5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19309)[0m     @     0x7ee3e52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19309)[0m     @     0x7ee3e52f8388 at::native::copy_impl()
[2m[36m(pid=19309)[0m     @     0x7ee3e52fa5a4 at::native::copy_()
[2m[36m(pid=19255)[0m     @     0x7f69cc8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19255)[0m     @     0x7f69cc8a0388 at::native::copy_impl()
[2m[36m(pid=19255)[0m     @     0x7f69cc8a25a4 at::native::copy_()
[2m[36m(pid=19255)[0m     @     0x7f69ccf8d4f5 at::Tensor::copy_()
[2m[36m(pid=19255)[0m     @     0x7f69cf4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19263)[0m     @     0x7f265be33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19263)[0m     @     0x7f265be31388 at::native::copy_impl()
[2m[36m(pid=19263)[0m     @     0x7f265be335a4 at::native::copy_()
[2m[36m(pid=19263)[0m     @     0x7f265c51e4f5 at::Tensor::copy_()
[2m[36m(pid=19297)[0m     @     0x7f38f23e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19297)[0m     @     0x7f38f23e7388 at::native::copy_impl()
[2m[36m(pid=19297)[0m     @     0x7f38f23e95a4 at::native::copy_()
[2m[36m(pid=19297)[0m     @     0x7f38f2ad44f5 at::Tensor::copy_()
[2m[36m(pid=19297)[0m     @     0x7f38f4fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19222)[0m     @     0x7f828b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19222)[0m     @     0x7f828b2df388 at::native::copy_impl()
[2m[36m(pid=19222)[0m     @     0x7f828b2e15a4 at::native::copy_()
[2m[36m(pid=19222)[0m     @     0x7f828b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=19318)[0m     @     0x7f0dc782fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19318)[0m     @     0x7f0dc6cd1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19318)[0m     @     0x7f0dc6ccf388 at::native::copy_impl()
[2m[36m(pid=19318)[0m     @     0x7f0dc6cd15a4 at::native::copy_()
[2m[36m(pid=19229)[0m     @     0x7fb30216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19229)[0m     @     0x7fb301610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19229)[0m     @     0x7fb30160e388 at::native::copy_impl()
[2m[36m(pid=19229)[0m     @     0x7fb3016105a4 at::native::copy_()
[2m[36m(pid=19287)[0m     @     0x7f408d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19287)[0m     @     0x7f408d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19287)[0m     @     0x7f408cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19287)[0m     @     0x7f408cccd388 at::native::copy_impl()
[2m[36m(pid=19329)[0m     @     0x7f1906b1bd91 at::TensorIterator::for_each()
[2m[36m(pid=19329)[0m     @     0x7f19073feb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19329)[0m     @     0x7f1907421c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19316)[0m     @     0x7fb8133e9ad3 at::TensorIterator::for_each()
[2m[36m(pid=19267)[0m     @     0x7ef60574f5a4 at::native::copy_()
[2m[36m(pid=19267)[0m     @     0x7ef605e3a4f5 at::Tensor::copy_()
[2m[36m(pid=19267)[0m     @     0x7ef60830d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19253)[0m     @     0x7eeeacee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19253)[0m     @     0x7eeeacede388 at::native::copy_impl()
[2m[36m(pid=19188)[0m     @     0x7fc0155014f5 at::Tensor::copy_()
[2m[36m(pid=19188)[0m     @     0x7fc0179d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19249)[0m     @     0x7f0027a395a4 at::native::copy_()
[2m[36m(pid=19249)[0m     @     0x7f00281244f5 at::Tensor::copy_()
[2m[36m(pid=19203)[0m     @     0x7fbf2d0e1388 at::native::copy_impl()
[2m[36m(pid=19203)[0m     @     0x7fbf2d0e35a4 at::native::copy_()
[2m[36m(pid=19203)[0m     @     0x7fbf2d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=19203)[0m     @     0x7fbf2fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19239)[0m     @     0x7f60dfc525a4 at::native::copy_()
[2m[36m(pid=19239)[0m     @     0x7f60e033d4f5 at::Tensor::copy_()
[2m[36m(pid=19239)[0m     @     0x7f60e28108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19308)[0m     @     0x7ed48e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19308)[0m     @     0x7ed48d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19308)[0m     @     0x7ed48d60e388 at::native::copy_impl()
[2m[36m(pid=19308)[0m     @     0x7ed48d6105a4 at::native::copy_()
[2m[36m(pid=19308)[0m     @     0x7ed48dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=19189)[0m     @     0x7f9ae9a7a5a4 at::native::copy_()
[2m[36m(pid=19189)[0m     @     0x7f9aea1654f5 at::Tensor::copy_()
[2m[36m(pid=19189)[0m     @     0x7f9aec6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19189)[0m     @     0x7f9aea1654f5 at::Tensor::copy_()
[2m[36m(pid=19189)[0m     @     0x7f9af021079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19189)[0m     @     0x5624bedc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19189)[0m     @     0x5624bed1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624beda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=19189)[0m     @     0x5624beda8a20 method_vectorcall
[2m[36m(pid=19189)[0m     @     0x5624bed1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624beda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=19189)[0m     @     0x5624beda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19231)[0m     @     0x7f214058b5a4 at::native::copy_()
[2m[36m(pid=19231)[0m     @     0x7f2140c764f5 at::Tensor::copy_()
[2m[36m(pid=19231)[0m     @     0x7f21431498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19231)[0m     @     0x7f2140c764f5 at::Tensor::copy_()
[2m[36m(pid=19231)[0m     @     0x7f2146d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19231)[0m     @     0x56301bacdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19231)[0m     @     0x56301ba28b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x7eeebb9c58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19301)[0m     @     0x7eeebb9c5ad3 at::TensorIterator::for_each()
[2m[36m(pid=19301)[0m     @     0x7eeebb9c5d91 at::TensorIterator::for_each()
[2m[36m(pid=19301)[0m     @     0x7eeebc2a8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19301)[0m     @     0x7eeebc2cbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19247)[0m     @     0x7f3811a7a5a4 at::native::copy_()
[2m[36m(pid=19247)[0m     @     0x7f38121654f5 at::Tensor::copy_()
[2m[36m(pid=19247)[0m     @     0x7f38146388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19264)[0m     @     0x7f4f833258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=19264)[0m     @     0x7f4f83325ad3 at::TensorIterator::for_each()
[2m[36m(pid=19216)[0m     @     0x7fa5e63e95a4 at::native::copy_()
[2m[36m(pid=19216)[0m     @     0x7fa5e6ad44f5 at::Tensor::copy_()
[2m[36m(pid=19216)[0m     @     0x7fa5e8fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19216)[0m     @     0x7fa5e6ad44f5 at::Tensor::copy_()
2020-11-05 10:34:23,915	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=19261)[0m     @     0x7f5036910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19261)[0m     @     0x7f503690e388 at::native::copy_impl()
[2m[36m(pid=19261)[0m     @     0x7f50369105a4 at::native::copy_()
[2m[36m(pid=19187)[0m     @     0x7ed4ba13d4f5 at::Tensor::copy_()
[2m[36m(pid=19187)[0m     @     0x7ed4bc6108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19187)[0m     @     0x7ed4ba13d4f5 at::Tensor::copy_()
[2m[36m(pid=19187)[0m     @     0x7ed4c01e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19187)[0m     @     0x55e3b9e54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19187)[0m     @     0x55e3b9dafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19187)[0m     @     0x55e3b9e3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19187)[0m     @     0x55e3b9e3ba20 method_vectorcall
[2m[36m(pid=19187)[0m     @     0x55e3b9dafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19187)[0m     @     0x55e3b9e3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19187)[0m     @     0x55e3b9e3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19187)[0m     @     0x55e3b9db0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19187)[0m     @     0x55e3b9e3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19187)[0m     @     0x55e3b9e3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19187)[0m     @     0x55e3b9db0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19187)[0m     @     0x55e3b9e3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19187)[0m     @     0x55e3b9e3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19187)[0m     @     0x55e3b9db0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19187)[0m     @     0x55e3b9e3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19187)[0m     @     0x55e3b9e3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19187)[0m     @     0x55e3b9db0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x7f12efebe5a4 at::native::copy_()
[2m[36m(pid=19204)[0m     @     0x7f12f05a94f5 at::Tensor::copy_()
[2m[36m(pid=19204)[0m     @     0x7f12f2a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19204)[0m     @     0x7f12f05a94f5 at::Tensor::copy_()
[2m[36m(pid=19204)[0m     @     0x7f12f665479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19204)[0m     @     0x561f9bea7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19192)[0m     @     0x7f70515d05a4 at::native::copy_()
[2m[36m(pid=19192)[0m     @     0x7f7051cbb4f5 at::Tensor::copy_()
[2m[36m(pid=19192)[0m     @     0x7f705418e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19192)[0m     @     0x7f7051cbb4f5 at::Tensor::copy_()
[2m[36m(pid=19192)[0m     @     0x7f7057d6679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19192)[0m     @     0x556841e71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19200)[0m     @     0x7f22d650d5a4 at::native::copy_()
[2m[36m(pid=19200)[0m     @     0x7f22d6bf84f5 at::Tensor::copy_()
[2m[36m(pid=19200)[0m     @     0x7f22d90cb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19200)[0m     @     0x7f22d6bf84f5 at::Tensor::copy_()
[2m[36m(pid=19200)[0m     @     0x7f22dcca379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19200)[0m     @     0x559dcbcf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19200)[0m     @     0x559dcbc51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x7ef8a2f9e5a4 at::native::copy_()
[2m[36m(pid=19190)[0m     @     0x7ef8a36894f5 at::Tensor::copy_()
[2m[36m(pid=19190)[0m     @     0x7ef8a5b5c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19190)[0m     @     0x7ef8a36894f5 at::Tensor::copy_()
[2m[36m(pid=19213)[0m     @     0x7ee509d938de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19213)[0m     @     0x7ee5078c04f5 at::Tensor::copy_()
[2m[36m(pid=19213)[0m     @     0x7ee50d96b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19225)[0m     @     0x7f79e9e7b4f5 at::Tensor::copy_()
[2m[36m(pid=19225)[0m     @     0x7f79ec34e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19202)[0m     @     0x7ee9541cf4f5 at::Tensor::copy_()
[2m[36m(pid=19202)[0m     @     0x7ee95a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19202)[0m     @     0x563b6d164fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19202)[0m     @     0x563b6d0bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19202)[0m     @     0x563b6d14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19202)[0m     @     0x563b6d14ba20 method_vectorcall
[2m[36m(pid=19202)[0m     @     0x563b6d0bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19202)[0m     @     0x563b6d14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19202)[0m     @     0x563b6d14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19202)[0m     @     0x563b6d0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19202)[0m     @     0x563b6d14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19202)[0m     @     0x563b6d14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19202)[0m     @     0x563b6d0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19202)[0m     @     0x563b6d14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19202)[0m     @     0x563b6d14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19202)[0m     @     0x563b6d0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19202)[0m     @     0x563b6d14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=19202)[0m     @     0x563b6d14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19202)[0m     @     0x563b6d0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x7ef1df3124f5 at::Tensor::copy_()
[2m[36m(pid=19288)[0m     @     0x7ef1e17e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19286)[0m     @     0x7f56edf264f5 at::Tensor::copy_()
[2m[36m(pid=19286)[0m     @     0x7f56f03f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19224)[0m     @     0x7fac8ac784f5 at::Tensor::copy_()
[2m[36m(pid=19224)[0m     @     0x7fac8d14b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19224)[0m     @     0x7fac8ac784f5 at::Tensor::copy_()
[2m[36m(pid=19208)[0m     @     0x7f40717ad4f5 at::Tensor::copy_()
[2m[36m(pid=19208)[0m     @     0x7f4073c808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19256)[0m     @     0x7f3d1ee3a4f5 at::Tensor::copy_()
[2m[36m(pid=19256)[0m     @     0x7f3d2130d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19262)[0m     @     0x7f804b1b04f5 at::Tensor::copy_()
[2m[36m(pid=19262)[0m     @     0x7f804d6838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19262)[0m     @     0x7f804b1b04f5 at::Tensor::copy_()
[2m[36m(pid=19276)[0m     @     0x7f6436abbd91 at::TensorIterator::for_each()
[2m[36m(pid=19276)[0m     @     0x7f643739eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19276)[0m     @     0x7f64373c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19276)[0m     @     0x7f6436863a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19196)[0m     @     0x7f224b4f25a4 at::native::copy_()
[2m[36m(pid=19196)[0m     @     0x7f224bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=19196)[0m     @     0x7f224e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19206)[0m     @     0x7f652a4c8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19206)[0m     @     0x7f652996aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19206)[0m     @     0x7f6529968388 at::native::copy_impl()
[2m[36m(pid=19268)[0m     @     0x7f4cf41244f5 at::Tensor::copy_()
[2m[36m(pid=19268)[0m     @     0x7f4cf65f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19223)[0m     @     0x7f180a37c4f5 at::Tensor::copy_()
[2m[36m(pid=19223)[0m     @     0x7f180c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19223)[0m     @     0x7f180a37c4f5 at::Tensor::copy_()
[2m[36m(pid=19191)[0m     @     0x7f67373908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19191)[0m     @     0x7f6734ebd4f5 at::Tensor::copy_()
[2m[36m(pid=19191)[0m     @     0x7f673af6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19191)[0m     @     0x55801095ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19191)[0m     @     0x5580108bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010945baf _PyEval_EvalCodeWithName
[2m[36m(pid=19191)[0m     @     0x558010946a20 method_vectorcall
[2m[36m(pid=19191)[0m     @     0x5580108babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010945baf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x7ee3e59e54f5 at::Tensor::copy_()
[2m[36m(pid=19309)[0m     @     0x7ee3e7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19255)[0m     @     0x7f69ccf8d4f5 at::Tensor::copy_()
[2m[36m(pid=19255)[0m     @     0x7f69d303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19255)[0m     @     0x55c52f73cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19255)[0m     @     0x55c52f697b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x55c52f722baf _PyEval_EvalCodeWithName
[2m[36m(pid=19255)[0m     @     0x55c52f723a20 method_vectorcall
[2m[36m(pid=19255)[0m     @     0x55c52f697bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x55c52f722baf _PyEval_EvalCodeWithName
[2m[36m(pid=19255)[0m     @     0x55c52f723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19255)[0m     @     0x55c52f698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x55c52f722baf _PyEval_EvalCodeWithName
[2m[36m(pid=19255)[0m     @     0x55c52f723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19255)[0m     @     0x55c52f698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x55c52f722baf _PyEval_EvalCodeWithName
[2m[36m(pid=19255)[0m     @     0x55c52f723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19255)[0m     @     0x55c52f698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19255)[0m     @     0x55c52f722baf _PyEval_EvalCodeWithName
[2m[36m(pid=19255)[0m     @     0x55c52f723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19255)[0m     @     0x55c52f698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x7f265e9f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19263)[0m     @     0x7f265c51e4f5 at::Tensor::copy_()
[2m[36m(pid=19263)[0m     @     0x7f26625c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19263)[0m     @     0x55f6d9771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19263)[0m     @     0x55f6d96ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x55f6d9757baf _PyEval_EvalCodeWithName
[2m[36m(pid=19263)[0m     @     0x55f6d9758a20 method_vectorcall
[2m[36m(pid=19263)[0m     @     0x55f6d96ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x55f6d9757baf _PyEval_EvalCodeWithName
[2m[36m(pid=19263)[0m     @     0x55f6d9758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19263)[0m     @     0x55f6d96cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x55f6d9757baf _PyEval_EvalCodeWithName
[2m[36m(pid=19263)[0m     @     0x55f6d9758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19263)[0m     @     0x55f6d96cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x55f6d9757baf _PyEval_EvalCodeWithName
[2m[36m(pid=19263)[0m     @     0x55f6d9758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19263)[0m     @     0x55f6d96cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19263)[0m     @     0x55f6d9757baf _PyEval_EvalCodeWithName
[2m[36m(pid=19263)[0m     @     0x55f6d9758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19263)[0m     @     0x55f6d96cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x7f38f2ad44f5 at::Tensor::copy_()
[2m[36m(pid=19297)[0m     @     0x7f38f8b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19297)[0m     @     0x562162878fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19297)[0m     @     0x5621627d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x56216285ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19297)[0m     @     0x56216285fa20 method_vectorcall
[2m[36m(pid=19297)[0m     @     0x5621627d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x56216285ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19297)[0m     @     0x56216285f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19297)[0m     @     0x5621627d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x56216285ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19297)[0m     @     0x56216285f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19297)[0m     @     0x5621627d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x56216285ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19297)[0m     @     0x56216285f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19297)[0m     @     0x5621627d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19297)[0m     @     0x56216285ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19297)[0m     @     0x56216285f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19297)[0m     @     0x5621627d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x7f828de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19222)[0m     @     0x7f828b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=19222)[0m     @     0x7f8291a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19222)[0m     @     0x555dca91cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19222)[0m     @     0x555dca877b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x555dca902baf _PyEval_EvalCodeWithName
[2m[36m(pid=19222)[0m     @     0x555dca903a20 method_vectorcall
[2m[36m(pid=19222)[0m     @     0x555dca877bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x555dca902baf _PyEval_EvalCodeWithName
[2m[36m(pid=19222)[0m     @     0x555dca903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19222)[0m     @     0x555dca878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x555dca902baf _PyEval_EvalCodeWithName
[2m[36m(pid=19222)[0m     @     0x555dca903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19222)[0m     @     0x555dca878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x555dca902baf _PyEval_EvalCodeWithName
[2m[36m(pid=19222)[0m     @     0x555dca903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19222)[0m     @     0x555dca878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19222)[0m     @     0x555dca902baf _PyEval_EvalCodeWithName
[2m[36m(pid=19222)[0m     @     0x555dca903643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19222)[0m     @     0x555dca878689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x7f0dc73bc4f5 at::Tensor::copy_()
[2m[36m(pid=19318)[0m     @     0x7f0dc988f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19318)[0m     @     0x7f0dc73bc4f5 at::Tensor::copy_()
[2m[36m(pid=19318)[0m     @     0x7f0dcd46779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19318)[0m     @     0x5624f9d66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19318)[0m     @     0x5624f9cc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19318)[0m     @     0x5624f9d4da20 method_vectorcall
[2m[36m(pid=19318)[0m     @     0x5624f9cc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x7fb301cfb4f5 at::Tensor::copy_()
[2m[36m(pid=19229)[0m     @     0x7fb3041ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19229)[0m     @     0x7fb301cfb4f5 at::Tensor::copy_()
[2m[36m(pid=19229)[0m     @     0x7fb307da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19229)[0m     @     0x55e81f243fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19229)[0m     @     0x55e81f19eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19229)[0m     @     0x55e81f229baf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x55e81f22aa20 method_vectorcall
[2m[36m(pid=19229)[0m     @     0x55e81f19ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19229)[0m     @     0x55e81f229baf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x55e81f22a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19229)[0m     @     0x55e81f19f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19229)[0m     @     0x55e81f229baf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x55e81f22a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19229)[0m     @     0x55e81f19f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19229)[0m     @     0x55e81f229baf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x55e81f22a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19229)[0m     @     0x55e81f19f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19229)[0m     @     0x55e81f229baf _PyEval_EvalCodeWithName
[2m[36m(pid=19229)[0m     @     0x55e81f22a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19229)[0m     @     0x55e81f19f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x7f408cccf5a4 at::native::copy_()
[2m[36m(pid=19287)[0m     @     0x7f408d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=19287)[0m     @     0x7f408f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19329)[0m     @     0x7f19068c3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19329)[0m     @     0x7f19068c1388 at::native::copy_impl()
[2m[36m(pid=19329)[0m     @     0x7f19068c35a4 at::native::copy_()
[2m[36m(pid=19329)[0m     @     0x7f1906fae4f5 at::Tensor::copy_()
[2m[36m(pid=19316)[0m     @     0x7fb8133e9d91 at::TensorIterator::for_each()
[2m[36m(pid=19316)[0m     @     0x7fb813cccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19316)[0m     @     0x7fb813cefc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19267)[0m     @     0x7ef605e3a4f5 at::Tensor::copy_()
[2m[36m(pid=19267)[0m     @     0x7ef60bee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19267)[0m     @     0x55a19cff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19267)[0m     @     0x55a19cf53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19267)[0m     @     0x55a19cfdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19267)[0m     @     0x55a19cfdfa20 method_vectorcall
[2m[36m(pid=19267)[0m     @     0x55a19cf53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19267)[0m     @     0x55a19cfdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19267)[0m     @     0x55a19cfdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19267)[0m     @     0x55a19cf54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19267)[0m     @     0x55a19cfdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19267)[0m     @     0x55a19cfdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19267)[0m     @     0x55a19cf54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19267)[0m     @     0x55a19cfdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19267)[0m     @     0x55a19cfdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19267)[0m     @     0x55a19cf54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19267)[0m     @     0x55a19cfdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19267)[0m     @     0x55a19cfdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19267)[0m     @     0x55a19cf54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x7eeeacee05a4 at::native::copy_()
[2m[36m(pid=19253)[0m     @     0x7eeead5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19253)[0m     @     0x7eeeafa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19253)[0m     @     0x7eeead5cb4f5 at::Tensor::copy_()
[2m[36m(pid=19188)[0m     @     0x7fc0155014f5 at::Tensor::copy_()
[2m[36m(pid=19188)[0m     @     0x7fc04058379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19188)[0m     @     0x557812602fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19188)[0m     @     0x55781255db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x5578125e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19188)[0m     @     0x5578125e9a20 method_vectorcall
[2m[36m(pid=19188)[0m     @     0x55781255dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x5578125e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19188)[0m     @     0x5578125e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19188)[0m     @     0x55781255e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x5578125e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19188)[0m     @     0x5578125e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19188)[0m     @     0x55781255e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x5578125e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19188)[0m     @     0x5578125e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19188)[0m     @     0x55781255e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19188)[0m     @     0x5578125e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=19188)[0m     @     0x5578125e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19188)[0m     @     0x55781255e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x7f002a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19249)[0m     @     0x7f00281244f5 at::Tensor::copy_()
[2m[36m(pid=19249)[0m     @     0x7f002e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19249)[0m     @     0x55b3d135bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19249)[0m     @     0x55b3d12b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x55b3d1341baf _PyEval_EvalCodeWithName
[2m[36m(pid=19249)[0m     @     0x55b3d1342a20 method_vectorcall
[2m[36m(pid=19249)[0m     @     0x55b3d12b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x55b3d1341baf _PyEval_EvalCodeWithName
[2m[36m(pid=19249)[0m     @     0x55b3d1342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19249)[0m     @     0x55b3d12b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x55b3d1341baf _PyEval_EvalCodeWithName
[2m[36m(pid=19249)[0m     @     0x55b3d1342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19249)[0m     @     0x55b3d12b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x55b3d1341baf _PyEval_EvalCodeWithName
[2m[36m(pid=19249)[0m     @     0x55b3d1342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19249)[0m     @     0x55b3d12b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19249)[0m     @     0x55b3d1341baf _PyEval_EvalCodeWithName
[2m[36m(pid=19249)[0m     @     0x55b3d1342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19249)[0m     @     0x55b3d12b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x7fbf2d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=1920== Status ==
Memory usage on this node: 25.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_74913_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_74913_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_74913_00000_0_2020-11-05_10-34-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
3)[0m     @     0x7fbf3387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19203)[0m     @     0x55587fe96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19203)[0m     @     0x55587fdf1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x55587fe7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19203)[0m     @     0x55587fe7da20 method_vectorcall
[2m[36m(pid=19203)[0m     @     0x55587fdf1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x55587fe7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19203)[0m     @     0x55587fe7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19203)[0m     @     0x55587fdf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x55587fe7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19203)[0m     @     0x55587fe7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19203)[0m     @     0x55587fdf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x55587fe7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19203)[0m     @     0x55587fe7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19203)[0m     @     0x55587fdf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19203)[0m     @     0x55587fe7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19203)[0m     @     0x55587fe7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19203)[0m     @     0x55587fdf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x7f60e033d4f5 at::Tensor::copy_()
[2m[36m(pid=19239)[0m     @     0x7f60e63e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19239)[0m     @     0x5644ea216fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19239)[0m     @     0x5644ea171b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x5644ea1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19239)[0m     @     0x5644ea1fda20 method_vectorcall
[2m[36m(pid=19239)[0m     @     0x5644ea171bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x5644ea1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19239)[0m     @     0x5644ea1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19239)[0m     @     0x5644ea172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x5644ea1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19239)[0m     @     0x5644ea1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19239)[0m     @     0x5644ea172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x5644ea1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19239)[0m     @     0x5644ea1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19239)[0m     @     0x5644ea172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19239)[0m     @     0x5644ea1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19239)[0m     @     0x5644ea1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19239)[0m     @     0x5644ea172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x7ed4901ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19308)[0m     @     0x7ed48dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=19308)[0m     @     0x7ed493da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19308)[0m     @     0x55fdf45bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19308)[0m     @     0x55fdf4518b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624bed1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624beda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=19189)[0m     @     0x5624beda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19189)[0m     @     0x5624bed1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624beda7baf _PyEval_EvalCodeWithName
[2m[36m(pid=19189)[0m     @     0x5624beda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19189)[0m     @     0x5624bed1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19189)[0m     @     0x5624beda7baf _PyEval_EvalCodeWith
== Status ==
Memory usage on this node: 25.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_74913_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_74913_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_74913_00000_0_2020-11-05_10-34-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Name
[2m[36m(pid=19189)[0m     @     0x5624beda8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19189)[0m     @     0x5624bed1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19231)[0m     @     0x56301bab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19231)[0m     @     0x56301bab4a20 method_vectorcall
[2m[36m(pid=19231)[0m     @     0x56301ba28bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19231)[0m     @     0x56301bab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19231)[0m     @     0x56301bab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19231)[0m     @     0x56301ba29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19231)[0m     @     0x56301bab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19231)[0m     @     0x56301bab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19231)[0m     @     0x56301ba29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19231)[0m     @     0x56301bab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19231)[0m     @     0x56301bab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19231)[0m     @     0x56301ba29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19231)[0m     @     0x56301bab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19231)[0m     @     0x56301bab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19231)[0m     @     0x56301ba29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x7eeebb76da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19301)[0m     @     0x7eeebb76b388 at::native::copy_impl()
[2m[36m(pid=19247)[0m     @     0x7f38121654f5 at::Tensor::copy_()
[2m[36m(pid=19247)[0m     @     0x7f381821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19247)[0m     @     0x55646c729fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19247)[0m     @     0x55646c684b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19247)[0m     @     0x55646c70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19247)[0m     @     0x55646c710a20 method_vectorcall
[2m[36m(pid=19247)[0m     @     0x55646c684bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19247)[0m     @     0x55646c70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19247)[0m     @     0x55646c710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19247)[0m     @     0x55646c685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19247)[0m     @     0x55646c70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19247)[0m     @     0x55646c710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19247)[0m     @     0x55646c685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19247)[0m     @     0x55646c70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19247)[0m     @     0x55646c710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19247)[0m     @     0x55646c685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19247)[0m     @     0x55646c70fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19247)[0m     @     0x55646c710643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19247)[0m     @     0x55646c685689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19264)[0m     @     0x7f4f83325d91 at::TensorIterator::for_each()
[2m[36m(pid=19216)[0m     @     0x7fa5ecb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19216)[0m     @     0x559dd6f47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19216)[0m     @     0x559dd6ea2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19216)[0m     @     0x559dd6f2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19216)[0m     @     0x559dd6f2ea20 method_vectorcall
[2m[36m(pid=19216)[0m     @     0x559dd6ea2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19216)[0m     @     0x559dd6f2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19216)[0m     @     0x559dd6f2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19216)[0m     @     0x559dd6ea3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19216)[0m     @     0x559dd6f2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19216)[0m     @     0x559dd6f2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19216)[0m     @     0x559dd6ea3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19216)[0m     @     0x559dd6f2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19216)[0m     @     0x559dd6f2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19216)[0m     @     0x559dd6ea3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19216)[0m     @     0x559dd6f2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19216)[0m     @     0x559dd6f2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19216)[0m     @     0x559dd6ea3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x7f5036ffb4f5 at::Tensor::copy_()
[2m[36m(pid=19261)[0m     @     0x7f50394ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19261)[0m     @     0x7f5036ffb4f5 at::Tensor::copy_()
[2m[36m(pid=19261)[0m     @     0x7f503d0a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19204)[0m     @     0x561f9be02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x561f9be8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19204)[0m     @     0x561f9be8ea20 method_vectorcall
[2m[36m(pid=19204)[0m     @     0x561f9be02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x561f9be8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19204)[0m     @     0x561f9be8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19204)[0m     @     0x561f9be03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x561f9be8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19204)[0m     @     0x561f9be8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19204)[0m     @     0x561f9be03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x561f9be8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19204)[0m     @     0x561f9be8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19204)[0m     @     0x561f9be03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19204)[0m     @     0x561f9be8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19204)[0m     @     0x561f9be8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19204)[0m     @     0x561f9be03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841dccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841e57baf _PyEval_EvalCodeWithName
[2m[36m(pid=19192)[0m     @     0x556841e58a20 method_vectorcall
[2m[36m(pid=19192)[0m     @     0x556841dccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841e57baf _PyEval_EvalCodeWithName
[2m[36m(pid=19192)[0m     @     0x556841e58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19192)[0m     @     0x556841dcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841e57baf _PyEval_EvalCodeWithName
[2m[36m(pid=19192)[0m     @     0x556841e58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19192)[0m     @     0x556841dcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841e57baf _PyEval_EvalCodeWithName
[2m[36m(pid=19192)[0m     @     0x556841e58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19192)[0m     @     0x556841dcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19192)[0m     @     0x556841e57baf _PyEval_EvalCodeWithName
[2m[36m(pid=19192)[0m     @     0x556841e58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19192)[0m     @     0x556841dcd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x559dcbcdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19200)[0m     @     0x559dcbcdda20 method_vectorcall
[2m[36m(pid=19200)[0m     @     0x559dcbc51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x559dcbcdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19200)[0m     @     0x559dcbcdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19200)[0m     @     0x559dcbc52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x559dcbcdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19200)[0m     @     0x559dcbcdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19200)[0m     @     0x559dcbc52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x559dcbcdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19200)[0m     @     0x559dcbcdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19200)[0m     @     0x559dcbc52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19200)[0m     @     0x559dcbcdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19200)[0m     @     0x559dcbcdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19200)[0m     @     0x559dcbc52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x7ef8a973479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19190)[0m     @     0x55d97bd3efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19190)[0m     @     0x55d97bc99b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x55d97bd24baf _PyEval_EvalCodeWithName
[2m[36m(pid=19190)[0m     @     0x55d97bd25a20 method_vectorcall
[2m[36m(pid=19190)[0m     @     0x55d97bc99bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x55d97bd24baf _PyEval_EvalCodeWithName
[2m[36m(pid=19190)[0m     @     0x55d97bd25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19190)[0m     @     0x55d97bc9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x55d97bd24baf _PyEval_EvalCodeWithName
[2m[36m(pid=19190)[0m     @     0x55d97bd25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19190)[0m     @     0x55d97bc9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x55d97bd24baf _PyEval_EvalCodeWithName
[2m[36m(pid=19190)[0m     @     0x55d97bd25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19190)[0m     @     0x55d97bc9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19190)[0m     @     0x55d97bd24baf _PyEval_EvalCodeWithName
[2m[36m(pid=19190)[0m     @     0x55d97bd25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19190)[0m     @     0x55d97bc9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd5426cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19213)[0m     @     0x55cd541c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd54252baf _PyEval_EvalCodeWithName
[2m[36m(pid=19213)[0m     @     0x55cd54253a20 method_vectorcall
[2m[36m(pid=19213)[0m     @     0x55cd541c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd54252baf _PyEval_EvalCodeWithName
[2m[36m(pid=19213)[0m     @     0x55cd54253643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19213)[0m     @     0x55cd541c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd54252baf _PyEval_EvalCodeWithName
[2m[36m(pid=19213)[0m     @     0x55cd54253643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19213)[0m     @     0x55cd541c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd54252baf _PyEval_EvalCodeWithName
[2m[36m(pid=19213)[0m     @     0x55cd54253643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19213)[0m     @     0x55cd541c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19213)[0m     @     0x55cd54252baf _PyEval_EvalCodeWithName
[2m[36m(pid=19213)[0m     @     0x55cd54253643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19213)[0m     @     0x55cd541c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x7f79e9e7b4f5 at::Tensor::copy_()
[2m[36m(pid=19225)[0m     @     0x7f79eff2679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19225)[0m     @     0x55a72f89efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19225)[0m     @     0x55a72f7f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x55a72f884baf _PyEval_EvalCodeWithName
[2m[36m(pid=19225)[0m     @     0x55a72f885a20 method_vectorcall
[2m[36m(pid=19225)[0m     @     0x55a72f7f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x55a72f884baf _PyEval_EvalCodeWithName
[2m[36m(pid=19225)[0m     @     0x55a72f885643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19225)[0m     @     0x55a72f7fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x55a72f884baf _PyEval_EvalCodeWithName
[2m[36m(pid=19225)[0m     @     0x55a72f885643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19225)[0m     @     0x55a72f7fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x55a72f884baf _PyEval_EvalCodeWithName
[2m[36m(pid=19225)[0m     @     0x55a72f885643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19225)[0m     @     0x55a72f7fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19225)[0m     @     0x55a72f884baf _PyEval_EvalCodeWithName
[2m[36m(pid=19225)[0m     @     0x55a72f885643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19225)[0m     @     0x55a72f7fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x7ef1df3124f5 at::Tensor::copy_()
[2m[36m(pid=19288)[0m     @     0x7ef1e53bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19288)[0m     @     0x560b69e92fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19288)[0m     @     0x560b69dedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x560b69e78baf _PyEval_EvalCodeWithName
[2m[36m(pid=19288)[0m     @     0x560b69e79a20 method_vectorcall
[2m[36m(pid=19288)[0m     @     0x560b69dedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x560b69e78baf _PyEval_EvalCodeWithName
[2m[36m(pid=19288)[0m     @     0x560b69e79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19288)[0m     @     0x560b69dee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x560b69e78baf _PyEval_EvalCodeWithName
[2m[36m(pid=19288)[0m     @     0x560b69e79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19288)[0m     @     0x560b69dee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x560b69e78baf _PyEval_EvalCodeWithName
[2m[36m(pid=19288)[0m     @     0x560b69e79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19288)[0m     @     0x560b69dee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19288)[0m     @     0x560b69e78baf _PyEval_EvalCodeWithName
[2m[36m(pid=19288)[0m     @     0x560b69e79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19288)[0m     @     0x560b69dee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x7f56edf264f5 at::Tensor::copy_()
[2m[36m(pid=19286)[0m     @     0x7f56f3fd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19286)[0m     @     0x55e5f67effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19286)[0m     @     0x55e5f674ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x55e5f67d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19286)[0m     @     0x55e5f67d6a20 method_vectorcall
[2m[36m(pid=19286)[0m     @     0x55e5f674abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x55e5f67d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19286)[0m     @     0x55e5f67d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19286)[0m     @     0x55e5f674b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x55e5f67d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19286)[0m     @     0x55e5f67d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19286)[0m     @     0x55e5f674b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x55e5f67d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19286)[0m     @     0x55e5f67d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19286)[0m     @     0x55e5f674b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19286)[0m     @     0x55e5f67d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19286)[0m     @     0x55e5f67d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19286)[0m     @     0x55e5f674b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x7fac90d2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19224)[0m     @     0x5642d9feffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19224)[0m     @     0x5642d9f4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x5642d9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19224)[0m     @     0x5642d9fd6a20 method_vectorcall
[2m[36m(pid=19224)[0m     @     0x5642d9f4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x5642d9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19224)[0m     @     0x5642d9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19224)[0m     @     0x5642d9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x5642d9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19224)[0m     @     0x5642d9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19224)[0m     @     0x5642d9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x5642d9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19224)[0m     @     0x5642d9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19224)[0m     @     0x5642d9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19224)[0m     @     0x5642d9fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=19224)[0m     @     0x5642d9fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19224)[0m     @     0x5642d9f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x7f40717ad4f5 at::Tensor::copy_()
[2m[36m(pid=19208)[0m     @     0x7f407785879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19208)[0m     @     0x555a8eb4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19208)[0m     @     0x555a8eaa7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x555a8eb32baf _PyEval_EvalCodeWithName
[2m[36m(pid=19208)[0m     @     0x555a8eb33a20 method_vectorcall
[2m[36m(pid=19208)[0m     @     0x555a8eaa7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x555a8eb32baf _PyEval_EvalCodeWithName
[2m[36m(pid=19208)[0m     @     0x555a8eb33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19208)[0m     @     0x555a8eaa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x555a8eb32baf _PyEval_EvalCodeWithName
[2m[36m(pid=19208)[0m     @     0x555a8eb33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19208)[0m     @     0x555a8eaa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x555a8eb32baf _PyEval_EvalCodeWithName
[2m[36m(pid=19208)[0m     @     0x555a8eb33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19208)[0m     @     0x555a8eaa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19208)[0m     @     0x555a8eb32baf _PyEval_EvalCodeWithName
[2m[36m(pid=19208)[0m     @     0x555a8eb33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19208)[0m     @     0x555a8eaa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x7f3d1ee3a4f5 at::Tensor::copy_()
[2m[36m(pid=19256)[0m     @     0x7f3d24ee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19256)[0m     @     0x56445fc83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19256)[0m     @     0x56445fbdeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x56445fc69baf _PyEval_EvalCodeWithName
[2m[36m(pid=19256)[0m     @     0x56445fc6aa20 method_vectorcall
[2m[36m(pid=19256)[0m     @     0x56445fbdebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x56445fc69baf _PyEval_EvalCodeWithName
[2m[36m(pid=19256)[0m     @     0x56445fc6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19256)[0m     @     0x56445fbdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x56445fc69baf _PyEval_EvalCodeWithName
[2m[36m(pid=19256)[0m     @     0x56445fc6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19256)[0m     @     0x56445fbdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x56445fc69baf _PyEval_EvalCodeWithName
[2m[36m(pid=19256)[0m     @     0x56445fc6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19256)[0m     @     0x56445fbdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19256)[0m     @     0x56445fc69baf _PyEval_EvalCodeWithName
[2m[36m(pid=19256)[0m     @     0x56445fc6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19256)[0m     @     0x56445fbdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x7f805125b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19262)[0m     @     0x556280db8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19262)[0m     @     0x556280d13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x556280d9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19262)[0m     @     0x556280d9fa20 method_vectorcall
[2m[36m(pid=19262)[0m     @     0x556280d13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x556280d9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19262)[0m     @     0x556280d9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19262)[0m     @     0x556280d14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x556280d9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19262)[0m     @     0x556280d9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19262)[0m     @     0x556280d14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x556280d9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19262)[0m     @     0x556280d9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19262)[0m     @     0x556280d14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19262)[0m     @     0x556280d9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=19262)[0m     @     0x556280d9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19262)[0m     @     0x556280d14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x7f6436861388 at::native::copy_impl()
[2m[36m(pid=19276)[0m     @     0x7f64368635a4 at::native::copy_()
[2m[36m(pid=19276)[0m     @     0x7f6436f4e4f5 at::Tensor::copy_()
[2m[36m(pid=19276)[0m     @     0x7f64394218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19196)[0m     @     0x7f224bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=19196)[0m     @     0x7f2251c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19196)[0m     @     0x55d4ea93afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19196)[0m     @     0x55d4ea895b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19196)[0m     @     0x55d4ea920baf _PyEval_EvalCodeWithName
[2m[36m(pid=19196)[0m     @     0x55d4ea921a20 method_vectorcall
[2m[36m(pid=19196)[0m     @     0x55d4ea895bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19196)[0m     @     0x55d4ea920baf _PyEval_EvalCodeWithName
[2m[36m(pid=19196)[0m     @     0x55d4ea921643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19196)[0m     @     0x55d4ea896689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19196)[0m     @     0x55d4ea920baf _PyEval_EvalCodeWithName
[2m[36m(pid=19196)[0m     @     0x55d4ea921643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19196)[0m     @     0x55d4ea896689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19196)[0m     @     0x55d4ea920baf _PyEval_EvalCodeWithName
[2m[36m(pid=19196)[0m     @     0x55d4ea921643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19196)[0m     @     0x55d4ea896689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19196)[0m     @     0x55d4ea920baf _PyEval_EvalCodeWithName
[2m[36m(pid=19196)[0m     @     0x55d4ea921643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19196)[0m     @     0x55d4ea896689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x7f652996a5a4 at::native::copy_()
[2m[36m(pid=19206)[0m     @     0x7f652a0554f5 at::Tensor::copy_()
[2m[36m(pid=19206)[0m     @     0x7f652c5288de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19268)[0m     @     0x7f4cf41244f5 at::Tensor::copy_()
[2m[36m(pid=19268)[0m     @     0x7f4cfa1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19268)[0m     @     0x55637b800fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19268)[0m     @     0x55637b75bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19268)[0m     @     0x55637b7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=19268)[0m     @     0x55637b7e7a20 method_vectorcall
[2m[36m(pid=19268)[0m     @     0x55637b75bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19268)[0m     @     0x55637b7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=19268)[0m     @     0x55637b7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19268)[0m     @     0x55637b75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19268)[0m     @     0x55637b7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=19268)[0m     @     0x55637b7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19268)[0m     @     0x55637b75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19268)[0m     @     0x55637b7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=19268)[0m     @     0x55637b7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19268)[0m     @     0x55637b75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19268)[0m     @     0x55637b7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=19268)[0m     @     0x55637b7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19268)[0m     @     0x55637b75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x7f181042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19223)[0m     @     0x55f59e4edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19223)[0m     @     0x55f59e448b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x55f59e4d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19223)[0m     @     0x55f59e4d4a20 method_vectorcall
[2m[36m(pid=19223)[0m     @     0x55f59e448bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x55f59e4d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19223)[0m     @     0x55f59e4d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19223)[0m     @     0x55f59e449689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x55f59e4d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19223)[0m     @     0x55f59e4d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19223)[0m     @     0x55f59e449689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x55f59e4d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19223)[0m     @     0x55f59e4d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19223)[0m     @     0x55f59e449689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19223)[0m     @     0x55f59e4d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19223)[0m     @     0x55f59e4d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19223)[0m     @     0x55f59e449689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19191)[0m     @     0x5580108bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010945baf _PyEval_EvalCodeWithName
[2m[36m(pid=19191)[0m     @     0x558010946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19191)[0m     @     0x5580108bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010945baf _PyEval_EvalCodeWithName
[2m[36m(pid=19191)[0m     @     0x558010946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19191)[0m     @     0x5580108bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19191)[0m     @     0x558010945baf _PyEval_EvalCodeWithName
[2m[36m(pid=19191)[0m     @     0x558010946643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19191)[0m     @     0x5580108bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x7ee3e59e54f5 at::Tensor::copy_()
[2m[36m(pid=19309)[0m     @     0x7ee3eba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19309)[0m     @     0x559cf0586fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19309)[0m     @     0x559cf04e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x559cf056cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x559cf056da20 method_vectorcall
[2m[36m(pid=19309)[0m     @     0x559cf04e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x559cf056cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x559cf056d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19309)[0m     @     0x559cf04e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x559cf056cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x559cf056d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19309)[0m     @     0x559cf04e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x559cf056cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x559cf056d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19309)[0m     @     0x559cf04e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19309)[0m     @     0x559cf056cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19309)[0m     @     0x559cf056d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19309)[0m     @     0x559cf04e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19318)[0m     @     0x5624f9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19318)[0m     @     0x5624f9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19318)[0m     @     0x5624f9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19318)[0m     @     0x5624f9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19318)[0m     @     0x5624f9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19318)[0m     @     0x5624f9d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19318)[0m     @     0x5624f9d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19318)[0m     @     0x5624f9cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x7f408d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=19287)[0m     @     0x7f409346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19287)[0m     @     0x561f6e66bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19287)[0m     @     0x561f6e5c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x561f6e651baf _PyEval_EvalCodeWithName
[2m[36m(pid=19287)[0m     @     0x561f6e652a20 method_vectorcall
[2m[36m(pid=19287)[0m     @     0x561f6e5c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x561f6e651baf _PyEval_EvalCodeWithName
[2m[36m(pid=19287)[0m     @     0x561f6e652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19287)[0m     @     0x561f6e5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x561f6e651baf _PyEval_EvalCodeWithName
[2m[36m(pid=19287)[0m     @     0x561f6e652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19287)[0m     @     0x561f6e5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x561f6e651baf _PyEval_EvalCodeWithName
[2m[36m(pid=19287)[0m     @     0x561f6e652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19287)[0m     @     0x561f6e5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19287)[0m     @     0x561f6e651baf _PyEval_EvalCodeWithName
[2m[36m(pid=19287)[0m     @     0x561f6e652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19287)[0m     @     0x561f6e5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x7f19094818de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19329)[0m     @     0x7f1906fae4f5 at::Tensor::copy_()
[2m[36m(pid=19329)[0m     @     0x7f190d05979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19329)[0m     @     0x55c5c40e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19329)[0m     @     0x55c5c4040b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x55c5c40cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19329)[0m     @     0x55c5c40cca20 method_vectorcall
[2m[36m(pid=19329)[0m     @     0x55c5c4040bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x55c5c40cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19329)[0m     @     0x55c5c40cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19329)[0m     @     0x55c5c4041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x55c5c40cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19329)[0m     @     0x55c5c40cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19329)[0m     @     0x55c5c4041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x55c5c40cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19329)[0m     @     0x55c5c40cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19329)[0m     @     0x55c5c4041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19329)[0m     @     0x55c5c40cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=19329)[0m     @     0x55c5c40cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19329)[0m     @     0x55c5c4041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19316)[0m     @     0x7fb813191a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19253)[0m     @     0x7eeeb367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19253)[0m     @     0x55eae9460fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19253)[0m     @     0x55eae93bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x55eae9446baf _PyEval_EvalCodeWithName
[2m[36m(pid=19253)[0m     @     0x55eae9447a20 method_vectorcall
[2m[36m(pid=19253)[0m     @     0x55eae93bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x55eae9446baf _PyEval_EvalCodeWithName
[2m[36m(pid=19253)[0m     @     0x55eae9447643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19253)[0m     @     0x55eae93bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x55eae9446baf _PyEval_EvalCodeWithName
[2m[36m(pid=19253)[0m     @     0x55eae9447643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19253)[0m     @     0x55eae93bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x55eae9446baf _PyEval_EvalCodeWithName
[2m[36m(pid=19253)[0m     @     0x55eae9447643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19253)[0m     @     0x55eae93bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19253)[0m     @     0x55eae9446baf _PyEval_EvalCodeWithName
[2m[36m(pid=19253)[0m     @     0x55eae9447643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19253)[0m     @     0x55eae93bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x55fdf45a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19308)[0m     @     0x55fdf45a4a20 method_vectorcall
[2m[36m(pid=19308)[0m     @     0x55fdf4518bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x55fdf45a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19308)[0m     @     0x55fdf45a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19308)[0m     @     0x55fdf4519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x55fdf45a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19308)[0m     @     0x55fdf45a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19308)[0m     @     0x55fdf4519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x55fdf45a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19308)[0m     @     0x55fdf45a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19308)[0m     @     0x55fdf4519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19308)[0m     @     0x55fdf45a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19308)[0m     @     0x55fdf45a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19308)[0m     @     0x55fdf4519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x7eeebb76d5a4 at::native::copy_()
[2m[36m(pid=19301)[0m     @     0x7eeebbe584f5 at::Tensor::copy_()
[2m[36m(pid=19301)[0m     @     0x7eeebe32b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=19264)[0m     @     0x7f4f83c08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=19264)[0m     @     0x7f4f83c2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=19264)[0m     @     0x7f4f830cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=19264)[0m     @     0x7f4f830cb388 at::native::copy_impl()
[2m[36m(pid=19261)[0m     @     0x556438a6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19261)[0m     @     0x5564389c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x556438a51baf _PyEval_EvalCodeWithName
[2m[36m(pid=19261)[0m     @     0x556438a52a20 method_vectorcall
[2m[36m(pid=19261)[0m     @     0x5564389c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x556438a51baf _PyEval_EvalCodeWithName
[2m[36m(pid=19261)[0m     @     0x556438a52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19261)[0m     @     0x5564389c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x556438a51baf _PyEval_EvalCodeWithName
[2m[36m(pid=19261)[0m     @     0x556438a52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19261)[0m     @     0x5564389c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x556438a51baf _PyEval_EvalCodeWithName
[2m[36m(pid=19261)[0m     @     0x556438a52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19261)[0m     @     0x5564389c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19261)[0m     @     0x556438a51baf _PyEval_EvalCodeWithName
[2m[36m(pid=19261)[0m     @     0x556438a52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19261)[0m     @     0x5564389c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x7f6436f4e4f5 at::Tensor::copy_()
[2m[36m(pid=19276)[0m     @     0x7f643cff979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19276)[0m     @     0x55e66d970fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19276)[0m     @     0x55e66d8cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x55e66d956baf _PyEval_EvalCodeWithName
[2m[36m(pid=19276)[0m     @     0x55e66d957a20 method_vectorcall
[2m[36m(pid=19276)[0m     @     0x55e66d8cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x55e66d956baf _PyEval_EvalCodeWithName
[2m[36m(pid=19276)[0m     @     0x55e66d957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19276)[0m     @     0x55e66d8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x55e66d956baf _PyEval_EvalCodeWithName
[2m[36m(pid=19276)[0m     @     0x55e66d957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19276)[0m     @     0x55e66d8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x55e66d956baf _PyEval_EvalCodeWithName
[2m[36m(pid=19276)[0m     @     0x55e66d957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19276)[0m     @     0x55e66d8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19276)[0m     @     0x55e66d956baf _PyEval_EvalCodeWithName
[2m[36m(pid=19276)[0m     @     0x55e66d957643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19276)[0m     @     0x55e66d8cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x7f652a0554f5 at::Tensor::copy_()
[2m[36m(pid=19206)[0m     @     0x7f653010079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19206)[0m     @     0x555c123ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19206)[0m     @     0x555c12338b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x555c123c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19206)[0m     @     0x555c123c4a20 method_vectorcall
[2m[36m(pid=19206)[0m     @     0x555c12338bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x555c123c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19206)[0m     @     0x555c123c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19206)[0m     @     0x555c12339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x555c123c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19206)[0m     @     0x555c123c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19206)[0m     @     0x555c12339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x555c123c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19206)[0m     @     0x555c123c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19206)[0m     @     0x555c12339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19206)[0m     @     0x555c123c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=19206)[0m     @     0x555c123c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19316)[0m     @     0x7fb81318f388 at::native::copy_impl()
[2m[36m(pid=19316)[0m     @     0x7fb8131915a4 at::native::copy_()
[2m[36m(pid=19301)[0m     @     0x7eeebbe584f5 at::Tensor::copy_()
[2m[36m(pid=19301)[0m     @     0x7eeec1f0379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=19301)[0m     @     0x55ff4515dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=19301)[0m     @     0x55ff450b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x55ff45143baf _PyEval_EvalCodeWithName
[2m[36m(pid=19301)[0m     @     0x55ff45144a20 method_vectorcall
[2m[36m(pid=19301)[0m     @     0x55ff450b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x55ff45143baf _PyEval_EvalCodeWithName
[2m[36m(pid=19301)[0m     @     0x55ff45144643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19301)[0m     @     0x55ff450b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x55ff45143baf _PyEval_EvalCodeWithName
[2m[36m(pid=19301)[0m     @     0x55ff45144643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19301)[0m     @     0x55ff450b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x55ff45143baf _PyEval_EvalCodeWithName
[2m[36m(pid=19301)[0m     @     0x55ff45144643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19301)[0m     @     0x55ff450b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19301)[0m     @     0x55ff45143baf _PyEval_EvalCodeWithName
[2m[36m(pid=19301)[0m     @     0x55ff45144643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=19301)[0m     @     0x55ff450b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19264)[0m     @     0x7f4f830cd5a4 at::native::copy_()
[2m[36m(pid=19206)[0m     @     0x555c12339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=19316)[0m     @     0x7fb81387c4f5 at::Tensor::copy_()
[2m[36m(pid=19316)[0m     @     0x7fb815d4f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:34:24,028	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:34:24,028	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
2020-11-05 10:34:24,028	ERROR trial_runner.py:567 -- Trial PPO_jss_env_74913_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::P