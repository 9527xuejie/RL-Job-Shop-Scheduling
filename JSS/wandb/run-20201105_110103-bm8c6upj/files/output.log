2020-11-05 11:01:06,918	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_35142_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=15863)[0m 2020-11-05 11:01:09,811	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=15848)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15848)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15848)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15813)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15813)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15813)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15831)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15831)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15831)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15867)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15807)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15807)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15807)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15757)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15757)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15757)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15812)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15812)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15812)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15798)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15798)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15798)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15849)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15755)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15755)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15755)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15771)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15771)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15851)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15820)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15820)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15820)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15868)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15814)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15814)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15814)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15817)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15817)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15817)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15761)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15761)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15810)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15752)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15752)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15752)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15811)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15845)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15845)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15845)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15845)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15845)[0m *** SIGSEGV (@0x0) received by PID 15845 (TID 0x7f526a490700) from PID 0; stack trace: ***
[2m[36m(pid=15759)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15759)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15841)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15841)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15841)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15762)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15762)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15762)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15748)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15827)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15827)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15827)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15821)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15821)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15821)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15821)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15821)[0m *** SIGSEGV (@0x0) received by PID 15821 (TID 0x7f26dbf20700) from PID 0; stack trace: ***
[2m[36m(pid=15746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15746)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15746)[0m *** SIGSEGV (@0x0) received by PID 15746 (TID 0x7fd8d73f6700) from PID 0; stack trace: ***
[2m[36m(pid=15803)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15803)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15803)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15803)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15803)[0m *** SIGSEGV (@0x0) received by PID 15803 (TID 0x7fd391ceb700) from PID 0; stack trace: ***
[2m[36m(pid=15797)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15797)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15797)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15797)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15797)[0m *** SIGSEGV (@0x0) received by PID 15797 (TID 0x7ffacd0f9700) from PID 0; stack trace: ***
[2m[36m(pid=15797)[0m     @     0x7ffacccd2390 (unknown)
[2m[36m(pid=15816)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15816)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15816)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15816)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15816)[0m *** SIGSEGV (@0x0) received by PID 15816 (TID 0x7f4f6a0d0700) from PID 0; stack trace: ***
[2m[36m(pid=15816)[0m     @     0x7f4f69ca9390 (unknown)
[2m[36m(pid=15816)[0m     @     0x7f206bec8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15848)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15848)[0m *** SIGSEGV (@0x0) received by PID 15848 (TID 0x7f7646395700) from PID 0; stack trace: ***
[2m[36m(pid=15848)[0m     @     0x7f7645f6e390 (unknown)
[2m[36m(pid=15848)[0m     @     0x7f474809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15813)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15813)[0m *** SIGSEGV (@0x0) received by PID 15813 (TID 0x7f018a6fb700) from PID 0; stack trace: ***
[2m[36m(pid=15813)[0m     @     0x7f018a2d4390 (unknown)
[2m[36m(pid=15813)[0m     @     0x7ed28c4f0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15831)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15831)[0m *** SIGSEGV (@0x0) received by PID 15831 (TID 0x7f982782a700) from PID 0; stack trace: ***
[2m[36m(pid=15831)[0m     @     0x7f9827403390 (unknown)
[2m[36m(pid=15831)[0m     @     0x7f69294a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15831)[0m     @     0x7f692679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15867)[0m *** SIGSEGV (@0x0) received by PID 15867 (TID 0x7efed892f700) from PID 0; stack trace: ***
[2m[36m(pid=15867)[0m     @     0x7efed8508390 (unknown)
[2m[36m(pid=15867)[0m     @     0x7ecfda5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15867)[0m     @     0x7ecfd789e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15737)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15737)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15737)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15737)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15737)[0m *** SIGSEGV (@0x0) received by PID 15737 (TID 0x7f64bb4f8700) from PID 0; stack trace: ***
[2m[36m(pid=15737)[0m     @     0x7f64bb0d1390 (unknown)
[2m[36m(pid=15760)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15760)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15760)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15760)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15760)[0m *** SIGSEGV (@0x0) received by PID 15760 (TID 0x7ff0d69c5700) from PID 0; stack trace: ***
[2m[36m(pid=15760)[0m     @     0x7ff0d659e390 (unknown)
[2m[36m(pid=15738)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15738)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15738)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15738)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15738)[0m *** SIGSEGV (@0x0) received by PID 15738 (TID 0x7f3e05520700) from PID 0; stack trace: ***
[2m[36m(pid=15738)[0m     @     0x7f3e050f9390 (unknown)
[2m[36m(pid=15857)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15857)[0m *** SIGSEGV (@0x0) received by PID 15857 (TID 0x7f0ce5b18700) from PID 0; stack trace: ***
[2m[36m(pid=15857)[0m     @     0x7f0ce56f1390 (unknown)
[2m[36m(pid=15807)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15807)[0m *** SIGSEGV (@0x0) received by PID 15807 (TID 0x7f46209fd700) from PID 0; stack trace: ***
[2m[36m(pid=15807)[0m     @     0x7f46205d6390 (unknown)
[2m[36m(pid=15757)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15757)[0m *** SIGSEGV (@0x0) received by PID 15757 (TID 0x7fa0eec7e700) from PID 0; stack trace: ***
[2m[36m(pid=15757)[0m     @     0x7fa0ee857390 (unknown)
[2m[36m(pid=15757)[0m     @     0x7f71f0878fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15812)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15812)[0m *** SIGSEGV (@0x0) received by PID 15812 (TID 0x7ffaac1d8700) from PID 0; stack trace: ***
[2m[36m(pid=15812)[0m     @     0x7ffaabdb1390 (unknown)
[2m[36m(pid=15798)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15798)[0m *** SIGSEGV (@0x0) received by PID 15798 (TID 0x7f49c0a7b700) from PID 0; stack trace: ***
[2m[36m(pid=15798)[0m     @     0x7f49c0654390 (unknown)
[2m[36m(pid=15741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15741)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15741)[0m *** SIGSEGV (@0x0) received by PID 15741 (TID 0x7f39f9295700) from PID 0; stack trace: ***
[2m[36m(pid=15849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15849)[0m *** SIGSEGV (@0x0) received by PID 15849 (TID 0x7f7f963fe700) from PID 0; stack trace: ***
[2m[36m(pid=15849)[0m     @     0x7f7f95fd7390 (unknown)
[2m[36m(pid=15809)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15809)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15809)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15809)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15809)[0m *** SIGSEGV (@0x0) received by PID 15809 (TID 0x7f64f8024700) from PID 0; stack trace: ***
[2m[36m(pid=15809)[0m     @     0x7f64f7bfd390 (unknown)
[2m[36m(pid=15755)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15755)[0m *** SIGSEGV (@0x0) received by PID 15755 (TID 0x7febca7d4700) from PID 0; stack trace: ***
[2m[36m(pid=15755)[0m     @     0x7febca3ad390 (unknown)
[2m[36m(pid=15755)[0m     @     0x7fbccc5c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15771)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15771)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15771)[0m *** SIGSEGV (@0x0) received by PID 15771 (TID 0x7f8bcd0b6700) from PID 0; stack trace: ***
[2m[36m(pid=15771)[0m     @     0x7f8bccc8f390 (unknown)
[2m[36m(pid=15851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15851)[0m *** SIGSEGV (@0x0) received by PID 15851 (TID 0x7f416f4eb700) from PID 0; stack trace: ***
[2m[36m(pid=15851)[0m     @     0x7f416f0c4390 (unknown)
[2m[36m(pid=15851)[0m     @     0x7f127118afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15851)[0m     @     0x7f126e47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15820)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15820)[0m *** SIGSEGV (@0x0) received by PID 15820 (TID 0x7f68396cc700) from PID 0; stack trace: ***
[2m[36m(pid=15820)[0m     @     0x7f68392a5390 (unknown)
[2m[36m(pid=15820)[0m     @     0x7f393b49cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15820)[0m     @     0x7f393879064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15868)[0m *** SIGSEGV (@0x0) received by PID 15868 (TID 0x7fcb37121700) from PID 0; stack trace: ***
[2m[36m(pid=15868)[0m     @     0x7fcb36cfa390 (unknown)
[2m[36m(pid=15868)[0m     @     0x7f9c38f06fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15814)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15814)[0m *** SIGSEGV (@0x0) received by PID 15814 (TID 0x7fe7dfb0c700) from PID 0; stack trace: ***
[2m[36m(pid=15814)[0m     @     0x7fe7df6e5390 (unknown)
[2m[36m(pid=15814)[0m     @     0x7fb8e1896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15814)[0m     @     0x7fb8deb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15817)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15817)[0m *** SIGSEGV (@0x0) received by PID 15817 (TID 0x7f8b172ad700) from PID 0; stack trace: ***
[2m[36m(pid=15817)[0m     @     0x7f8b16e86390 (unknown)
[2m[36m(pid=15817)[0m     @     0x7f5c1909dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15817)[0m     @     0x7f5c1639164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15855)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15855)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15855)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15855)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15855)[0m *** SIGSEGV (@0x0) received by PID 15855 (TID 0x7f0f25add700) from PID 0; stack trace: ***
[2m[36m(pid=15761)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15761)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15761)[0m *** SIGSEGV (@0x0) received by PID 15761 (TID 0x7fd92da02700) from PID 0; stack trace: ***
[2m[36m(pid=15761)[0m     @     0x7fd92d5db390 (unknown)
[2m[36m(pid=15761)[0m     @     0x7faa2f7f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15761)[0m     @     0x7faa2caea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15810)[0m *** SIGSEGV (@0x0) received by PID 15810 (TID 0x7fc8e7fee700) from PID 0; stack trace: ***
[2m[36m(pid=15810)[0m     @     0x7fc8e7bc7390 (unknown)
[2m[36m(pid=15810)[0m     @     0x7f99e9d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15810)[0m     @     0x7f99e706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15752)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15752)[0m *** SIGSEGV (@0x0) received by PID 15752 (TID 0x7f2223d58700) from PID 0; stack trace: ***
[2m[36m(pid=15752)[0m     @     0x7f2223931390 (unknown)
[2m[36m(pid=15752)[0m     @     0x7ef325b28fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15752)[0m     @     0x7ef322e1c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15811)[0m *** SIGSEGV (@0x0) received by PID 15811 (TID 0x7f560a770700) from PID 0; stack trace: ***
[2m[36m(pid=15811)[0m     @     0x7f560a349390 (unknown)
[2m[36m(pid=15811)[0m     @     0x7f270c555fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15811)[0m     @     0x7f270984964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15845)[0m     @     0x7f526a069390 (unknown)
[2m[36m(pid=15845)[0m     @     0x7f236c27cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15845)[0m     @     0x7f236957064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15759)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15759)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15759)[0m *** SIGSEGV (@0x0) received by PID 15759 (TID 0x7f1f16f06700) from PID 0; stack trace: ***
[2m[36m(pid=15759)[0m     @     0x7f1f16adf390 (unknown)
[2m[36m(pid=15759)[0m     @     0x7ef018d1bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15759)[0m     @     0x7ef01600f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15841)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15841)[0m *** SIGSEGV (@0x0) received by PID 15841 (TID 0x7fdd36033700) from PID 0; stack trace: ***
[2m[36m(pid=15841)[0m     @     0x7fdd35c0c390 (unknown)
[2m[36m(pid=15841)[0m     @     0x7fae37e16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15841)[0m     @     0x7fae3510a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15762)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15762)[0m *** SIGSEGV (@0x0) received by PID 15762 (TID 0x7f3723df8700) from PID 0; stack trace: ***
[2m[36m(pid=15762)[0m     @     0x7f37239d1390 (unknown)
[2m[36m(pid=15762)[0m     @     0x7f0825b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15762)[0m     @     0x7f0822e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15748)[0m *** SIGSEGV (@0x0) received by PID 15748 (TID 0x7f901da1b700) from PID 0; stack trace: ***
[2m[36m(pid=15748)[0m     @     0x7f901d5f4390 (unknown)
[2m[36m(pid=15748)[0m     @     0x7f611f7f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15748)[0m     @     0x7f611caea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15748)[0m     @     0x7f611caed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15827)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15827)[0m *** SIGSEGV (@0x0) received by PID 15827 (TID 0x7fe88f38e700) from PID 0; stack trace: ***
[2m[36m(pid=15827)[0m     @     0x7fe88ef67390 (unknown)
[2m[36m(pid=15827)[0m     @     0x7fb99118afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15827)[0m     @     0x7fb98e47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15821)[0m     @     0x7f26dbaf9390 (unknown)
[2m[36m(pid=15821)[0m     @     0x7ef7ddc3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15821)[0m     @     0x7ef7daf3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15746)[0m     @     0x7fd8d6fcf390 (unknown)
[2m[36m(pid=15746)[0m     @     0x7fa9d918afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15746)[0m     @     0x7fa9d647e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15746)[0m     @     0x7fa9d6481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15803)[0m     @     0x7fd3918c4390 (unknown)
[2m[36m(pid=15803)[0m     @     0x7fa49396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15797)[0m     @     0x7fcbcee48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15797)[0m     @     0x7fcbcc13c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15816)[0m     @     0x7f20691bc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15816)[0m     @     0x7f20691bf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15848)[0m     @     0x7f474538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15848)[0m     @     0x7f4745392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15813)[0m     @     0x7ed2897e464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15813)[0m     @     0x7ed2897e7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15831)[0m     @     0x7f6926797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15867)[0m     @     0x7ecfd78a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15737)[0m     @     0x7f35bd2dbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15737)[0m     @     0x7f35ba5cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15737)[0m     @     0x7f35ba5d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15760)[0m     @     0x7fc1d8770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15760)[0m     @     0x7fc1d5a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15738)[0m     @     0x7f0f072fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15738)[0m     @     0x7f0f045f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15738)[0m     @     0x7f0f045f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15857)[0m     @     0x7edde78fefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15857)[0m     @     0x7edde4bf264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15857)[0m     @     0x7edde4bf5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15807)[0m     @     0x7f17227d8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15807)[0m     @     0x7f171facc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15757)[0m     @     0x7f71edb6c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15757)[0m     @     0x7f71edb6f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15812)[0m     @     0x7fcbadfb0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15812)[0m     @     0x7fcbab2a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15798)[0m     @     0x7f1ac27dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15798)[0m     @     0x7f1abface64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15741)[0m     @     0x7f39f8e6e390 (unknown)
[2m[36m(pid=15741)[0m     @     0x7f0afb089fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15741)[0m     @     0x7f0af837d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15849)[0m     @     0x7f509809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15849)[0m     @     0x7f509538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15849)[0m     @     0x7f5095392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15809)[0m     @     0x7f35f9d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15809)[0m     @     0x7f35f706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15809)[0m     @     0x7f35f7063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15755)[0m     @     0x7fbcc98b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15755)[0m     @     0x7fbcc98b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15771)[0m     @     0x7f5cced02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15771)[0m     @     0x7f5ccbff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15771)[0m     @     0x7f5ccbff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15851)[0m     @     0x7f126e481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15851)[0m     @     0x7f126e481b53 at::TensorIterator::for_each()
[2m[36m(pid=15820)[0m     @     0x7f3938793977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15820)[0m     @     0x7f3938793b53 at::TensorIterator::for_each()
[2m[36m(pid=15868)[0m     @     0x7f9c361fa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15868)[0m     @     0x7f9c361fd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15814)[0m     @     0x7fb8deb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15814)[0m     @     0x7fb8deb8db53 at::TensorIterator::for_each()
[2m[36m(pid=15817)[0m     @     0x7f5c16394977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15855)[0m     @     0x7f0f256b6390 (unknown)
[2m[36m(pid=15855)[0m     @     0x7ee0278befb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15855)[0m     @     0x7ee024bb264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15761)[0m     @     0x7faa2caed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15810)[0m     @     0x7f99e7063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15752)[0m     @     0x7ef322e1f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15845)[0m     @     0x7f2369573977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15759)[0m     @     0x7ef016012977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15841)[0m     @     0x7fae3510d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15762)[0m     @     0x7f0822e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15748)[0m     @     0x7f611caedb53 at::TensorIterator::for_each()
[2m[36m(pid=15827)[0m     @     0x7fb98e481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15821)[0m     @     0x7ef7daf33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15746)[0m     @     0x7fa9d6481b53 at::TensorIterator::for_each()
[2m[36m(pid=15794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15794)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15750)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15750)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15750)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15756)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15756)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15756)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15756)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15756)[0m *** SIGSEGV (@0x0) received by PID 15756 (TID 0x7fd61a6bf700) from PID 0; stack trace: ***
[2m[36m(pid=15803)[0m     @     0x7fa490c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15803)[0m     @     0x7fa490c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15803)[0m     @     0x7fa490c62b53 at::TensorIterator::for_each()
[2m[36m(pid=15823)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15823)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15823)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15797)[0m     @     0x7fcbcc13f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15797)[0m     @     0x7fcbcc13fb53 at::TensorIterator::for_each()
[2m[36m(pid=15818)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15818)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15818)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15816)[0m     @     0x7f20691bfb53 at::TensorIterator::for_each()
[2m[36m(pid=15816)[0m     @     0x7f20691bfe11 at::TensorIterator::for_each()
[2m[36m(pid=15848)[0m     @     0x7f4745392b53 at::TensorIterator::for_each()
[2m[36m(pid=15848)[0m     @     0x7f4745392e11 at::TensorIterator::for_each()
[2m[36m(pid=15813)[0m     @     0x7ed2897e7b53 at::TensorIterator::for_each()
[2m[36m(pid=15813)[0m     @     0x7ed2897e7e11 at::TensorIterator::for_each()
[2m[36m(pid=15831)[0m     @     0x7f6926797b53 at::TensorIterator::for_each()
[2m[36m(pid=15831)[0m     @     0x7f6926797e11 at::TensorIterator::for_each()
[2m[36m(pid=15831)[0m     @     0x7f69294b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15867)[0m     @     0x7ecfd78a1b53 at::TensorIterator::for_each()
[2m[36m(pid=15867)[0m     @     0x7ecfd78a1e11 at::TensorIterator::for_each()
[2m[36m(pid=15867)[0m     @     0x7ecfda5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15740)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15740)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15740)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15737)[0m     @     0x7f35ba5d2b53 at::TensorIterator::for_each()
[2m[36m(pid=15737)[0m     @     0x7f35ba5d2e11 at::TensorIterator::for_each()
[2m[36m(pid=15737)[0m     @     0x7f35bd2ebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15737)[0m     @     0x7f35bd30ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15815)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15815)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15815)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15815)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15815)[0m *** SIGSEGV (@0x0) received by PID 15815 (TID 0x7f70acd87700) from PID 0; stack trace: ***
[2m[36m(pid=15760)[0m     @     0x7fc1d5a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15760)[0m     @     0x7fc1d5a67b53 at::TensorIterator::for_each()
[2m[36m(pid=15805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15805)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15862)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15738)[0m     @     0x7f0f045f6b53 at::TensorIterator::for_each()
[2m[36m(pid=15738)[0m     @     0x7f0f045f6e11 at::TensorIterator::for_each()
[2m[36m(pid=15830)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15830)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15830)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15822)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15822)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15822)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15835)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15835)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15835)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15843)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15843)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15843)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15857)[0m     @     0x7edde4bf5b53 at::TensorIterator::for_each()
[2m[36m(pid=15857)[0m     @     0x7edde4bf5e11 at::TensorIterator::for_each()
[2m[36m(pid=15807)[0m     @     0x7f171facf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15807)[0m     @     0x7f171facfb53 at::TensorIterator::for_each()
[2m[36m(pid=15807)[0m     @     0x7f171facfe11 at::TensorIterator::for_each()
[2m[36m(pid=15757)[0m     @     0x7f71edb6fb53 at::TensorIterator::for_each()
[2m[36m(pid=15757)[0m     @     0x7f71edb6fe11 at::TensorIterator::for_each()
[2m[36m(pid=15757)[0m     @     0x7f71f0888c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15757)[0m     @     0x7f71f08abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15812)[0m     @     0x7fcbab2a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15812)[0m     @     0x7fcbab2a7b53 at::TensorIterator::for_each()
[2m[36m(pid=15812)[0m     @     0x7fcbab2a7e11 at::TensorIterator::for_each()
[2m[36m(pid=15812)[0m     @     0x7fcbadfc0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15812)[0m     @     0x7fcbadfe3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15798)[0m     @     0x7f1abfad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15798)[0m     @     0x7f1abfad1b53 at::TensorIterator::for_each()
[2m[36m(pid=15798)[0m     @     0x7f1abfad1e11 at::TensorIterator::for_each()
[2m[36m(pid=15798)[0m     @     0x7f1ac27eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15798)[0m     @     0x7f1ac280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15741)[0m     @     0x7f0af8380977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15741)[0m     @     0x7f0af8380b53 at::TensorIterator::for_each()
[2m[36m(pid=15741)[0m     @     0x7f0af8380e11 at::TensorIterator::for_each()
[2m[36m(pid=15741)[0m     @     0x7f0afb099c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15741)[0m     @     0x7f0afb0bccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15849)[0m     @     0x7f5095392b53 at::TensorIterator::for_each()
[2m[36m(pid=15849)[0m     @     0x7f5095392e11 at::TensorIterator::for_each()
[2m[36m(pid=15849)[0m     @     0x7f50980abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15849)[0m     @     0x7f50980cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15809)[0m     @     0x7f35f7063b53 at::TensorIterator::for_each()
[2m[36m(pid=15809)[0m     @     0x7f35f7063e11 at::TensorIterator::for_each()
[2m[36m(pid=15809)[0m     @     0x7f35f9d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15809)[0m     @     0x7f35f9d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15755)[0m     @     0x7fbcc98b9b53 at::TensorIterator::for_each()
[2m[36m(pid=15755)[0m     @     0x7fbcc98b9e11 at::TensorIterator::for_each()
[2m[36m(pid=15755)[0m     @     0x7fbccc5d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15755)[0m     @     0x7fbccc5f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15755)[0m     @     0x7fbcc9633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15771)[0m     @     0x7f5ccbff9b53 at::TensorIterator::for_each()
[2m[36m(pid=15771)[0m     @     0x7f5ccbff9e11 at::TensorIterator::for_each()
[2m[36m(pid=15771)[0m     @     0x7f5cced12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15771)[0m     @     0x7f5cced35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15851)[0m     @     0x7f126e481e11 at::TensorIterator::for_each()
[2m[36m(pid=15851)[0m     @     0x7f127119ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15851)[0m     @     0x7f12711bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15851)[0m     @     0x7f126e1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15851)[0m     @     0x7f126e1f9c3f at::native::copy_impl()
[2m[36m(pid=15851)[0m     @     0x7f126e1faed4 at::native::copy_()
[2m[36m(pid=15851)[0m     @     0x7f126e93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15820)[0m     @     0x7f3938793e11 at::TensorIterator::for_each()
[2m[36m(pid=15820)[0m     @     0x7f393b4acc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15820)[0m     @     0x7f393b4cfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15820)[0m     @     0x7f393850d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15820)[0m     @     0x7f393850bc3f at::native::copy_impl()
[2m[36m(pid=15820)[0m     @     0x7f393850ced4 at::native::copy_()
[2m[36m(pid=15868)[0m     @     0x7f9c361fdb53 at::TensorIterator::for_each()
[2m[36m(pid=15868)[0m     @     0x7f9c361fde11 at::TensorIterator::for_each()
[2m[36m(pid=15868)[0m     @     0x7f9c38f16c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15868)[0m     @     0x7f9c38f39cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15868)[0m     @     0x7f9c35f77009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15814)[0m     @     0x7fb8deb8de11 at::TensorIterator::for_each()
[2m[36m(pid=15814)[0m     @     0x7fb8e18a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15814)[0m     @     0x7fb8e18c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15814)[0m     @     0x7fb8de907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15814)[0m     @     0x7fb8de905c3f at::native::copy_impl()
[2m[36m(pid=15814)[0m     @     0x7fb8de906ed4 at::native::copy_()
[2m[36m(pid=15758)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15758)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15758)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15758)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15758)[0m *** SIGSEGV (@0x0) received by PID 15758 (TID 0x7f4802b6a700) from PID 0; stack trace: ***
[2m[36m(pid=15758)[0m     @     0x7f4802743390 (unknown)
[2m[36m(pid=15758)[0m     @     0x7f1904770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15758)[0m     @     0x7f1901a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15758)[0m     @     0x7f1901a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15744)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15744)[0m *** SIGSEGV (@0x0) received by PID 15744 (TID 0x7f48f7d3b700) from PID 0; stack trace: ***
[2m[36m(pid=15744)[0m     @     0x7f48f7914390 (unknown)
[2m[36m(pid=15744)[0m     @     0x7f19f9b28fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15744)[0m     @     0x7f19f6e1c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15742)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15742)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15742)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15742)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15742)[0m *** SIGSEGV (@0x0) received by PID 15742 (TID 0x7f3623067700) from PID 0; stack trace: ***
[2m[36m(pid=15742)[0m     @     0x7f3622c40390 (unknown)
[2m[36m(pid=15742)[0m     @     0x7f0724d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15742)[0m     @     0x7f072203c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15826)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15826)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15826)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15826)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15826)[0m *** SIGSEGV (@0x0) received by PID 15826 (TID 0x7f5124596700) from PID 0; stack trace: ***
[2m[36m(pid=15826)[0m     @     0x7f512416f390 (unknown)
[2m[36m(pid=15826)[0m     @     0x7f2225fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15826)[0m     @     0x7f222329764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15770)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15770)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15770)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15770)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15770)[0m *** SIGSEGV (@0x0) received by PID 15770 (TID 0x7f55c51b5700) from PID 0; stack trace: ***
[2m[36m(pid=15770)[0m     @     0x7f55c4d8e390 (unknown)
[2m[36m(pid=15770)[0m     @     0x7f26c6eebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15817)[0m     @     0x7f5c16394b53 at::TensorIterator::for_each()
[2m[36m(pid=15817)[0m     @     0x7f5c16394e11 at::TensorIterator::for_each()
[2m[36m(pid=15817)[0m     @     0x7f5c190adc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15817)[0m     @     0x7f5c190d0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15817)[0m     @     0x7f5c1610e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15817)[0m     @     0x7f5c1610cc3f at::native::copy_impl()
[2m[36m(pid=15855)[0m     @     0x7ee024bb5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15855)[0m     @     0x7ee024bb5b53 at::TensorIterator::for_each()
[2m[36m(pid=15855)[0m     @     0x7ee024bb5e11 at::TensorIterator::for_each()
[2m[36m(pid=15855)[0m     @     0x7ee0278cec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15855)[0m     @     0x7ee0278f1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15769)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15769)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15769)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15769)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15769)[0m *** SIGSEGV (@0x0) received by PID 15769 (TID 0x7fcf545e4700) from PID 0; stack trace: ***
[2m[36m(pid=15769)[0m     @     0x7fcf541bd390 (unknown)
[2m[36m(pid=15769)[0m     @     0x7fa056378fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15873)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15873)[0m *** SIGSEGV (@0x0) received by PID 15873 (TID 0x7fe512a5e700) from PID 0; stack trace: ***
[2m[36m(pid=15873)[0m     @     0x7fe512637390 (unknown)
[2m[36m(pid=15873)[0m     @     0x7fb61481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15761)[0m     @     0x7faa2caedb53 at::TensorIterator::for_each()
[2m[36m(pid=15761)[0m     @     0x7faa2caede11 at::TensorIterator::for_each()
[2m[36m(pid=15761)[0m     @     0x7faa2f806c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15761)[0m     @     0x7faa2f829cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15761)[0m     @     0x7faa2c867009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15761)[0m     @     0x7faa2c865c3f at::native::copy_impl()
[2m[36m(pid=15860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15860)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15860)[0m *** SIGSEGV (@0x0) received by PID 15860 (TID 0x7fc7d9506700) from PID 0; stack trace: ***
[2m[36m(pid=15860)[0m     @     0x7fc7d90df390 (unknown)
[2m[36m(pid=15860)[0m     @     0x7f98db2fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15860)[0m     @     0x7f98d85f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15860)[0m     @     0x7f98d85f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15810)[0m     @     0x7f99e7063b53 at::TensorIterator::for_each()
[2m[36m(pid=15810)[0m     @     0x7f99e7063e11 at::TensorIterator::for_each()
[2m[36m(pid=15810)[0m     @     0x7f99e9d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15810)[0m     @     0x7f99e9d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15810)[0m     @     0x7f99e6ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15810)[0m     @     0x7f99e6ddbc3f at::native::copy_impl()
[2m[36m(pid=15752)[0m     @     0x7ef322e1fb53 at::TensorIterator::for_each()
[2m[36m(pid=15752)[0m     @     0x7ef322e1fe11 at::TensorIterator::for_each()
[2m[36m(pid=15752)[0m     @     0x7ef325b38c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15752)[0m     @     0x7ef325b5bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15811)[0m     @     0x7f270984c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15811)[0m     @     0x7f270984cb53 at::TensorIterator::for_each()
[2m[36m(pid=15811)[0m     @     0x7f270984ce11 at::TensorIterator::for_each()
[2m[36m(pid=15811)[0m     @     0x7f270c565c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15811)[0m     @     0x7f270c588cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15845)[0m     @     0x7f2369573b53 at::TensorIterator::for_each()
[2m[36m(pid=15845)[0m     @     0x7f2369573e11 at::TensorIterator::for_each()
[2m[36m(pid=15845)[0m     @     0x7f236c28cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15845)[0m     @     0x7f236c2afcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15845)[0m     @     0x7f23692ed009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15845)[0m     @     0x7f23692ebc3f at::native::copy_impl()
[2m[36m(pid=15759)[0m     @     0x7ef016012b53 at::TensorIterator::for_each()
[2m[36m(pid=15759)[0m     @     0x7ef016012e11 at::TensorIterator::for_each()
[2m[36m(pid=15759)[0m     @     0x7ef018d2bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15759)[0m     @     0x7ef018d4ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15841)[0m     @     0x7fae3510db53 at::TensorIterator::for_each()
[2m[36m(pid=15841)[0m     @     0x7fae3510de11 at::TensorIterator::for_each()
[2m[36m(pid=15841)[0m     @     0x7fae37e26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15841)[0m     @     0x7fae37e49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15841)[0m     @     0x7fae34e87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15762)[0m     @     0x7f0822e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=15762)[0m     @     0x7f0822e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=15762)[0m     @     0x7f0825b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15762)[0m     @     0x7f0825b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15762)[0m     @     0x7f0822bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15748)[0m     @     0x7f611caede11 at::TensorIterator::for_each()
[2m[36m(pid=15748)[0m     @     0x7f611f806c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15748)[0m     @     0x7f611f829cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15748)[0m     @     0x7f611c867009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15748)[0m     @     0x7f611c865c3f at::native::copy_impl()
[2m[36m(pid=15827)[0m     @     0x7fb98e481b53 at::TensorIterator::for_each()
[2m[36m(pid=15827)[0m     @     0x7fb98e481e11 at::TensorIterator::for_each()
[2m[36m(pid=15827)[0m     @     0x7fb99119ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15827)[0m     @     0x7fb9911bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15827)[0m     @     0x7fb98e1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15821)[0m     @     0x7ef7daf33b53 at::TensorIterator::for_each()
[2m[36m(pid=15821)[0m     @     0x7ef7daf33e11 at::TensorIterator::for_each()
[2m[36m(pid=15821)[0m     @     0x7ef7ddc4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15821)[0m     @     0x7ef7ddc6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15821)[0m     @     0x7ef7dacad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15821)[0m     @     0x7ef7dacabc3f at::native::copy_impl()
[2m[36m(pid=15746)[0m     @     0x7fa9d6481e11 at::TensorIterator::for_each()
[2m[36m(pid=15746)[0m     @     0x7fa9d919ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15746)[0m     @     0x7fa9d91bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15746)[0m     @     0x7fa9d61fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15746)[0m     @     0x7fa9d61f9c3f at::native::copy_impl()
[2m[36m(pid=15739)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15739)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15739)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15739)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15739)[0m *** SIGSEGV (@0x0) received by PID 15739 (TID 0x7f21a2c3a700) from PID 0; stack trace: ***
[2m[36m(pid=15739)[0m     @     0x7f21a2813390 (unknown)
[2m[36m(pid=15739)[0m     @     0x7ef2a4981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15739)[0m     @     0x7ef2a1c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15766)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15766)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15766)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15834)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15834)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15834)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15834)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15753)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15753)[0m *** SIGSEGV (@0x0) received by PID 15753 (TID 0x7f1dcf296700) from PID 0; stack trace: ***
[2m[36m(pid=15763)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15763)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15763)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15763)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15763)[0m *** SIGSEGV (@0x0) received by PID 15763 (TID 0x7f55ab8b0700) from PID 0; stack trace: ***
[2m[36m(pid=15763)[0m     @     0x7f55ab489390 (unknown)
[2m[36m(pid=15763)[0m     @     0x7f26ad4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15763)[0m     @     0x7f26aa79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15763)[0m     @     0x7f26aa797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15764)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15764)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15764)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15764)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15764)[0m *** SIGSEGV (@0x0) received by PID 15764 (TID 0x7fcaddf09700) from PID 0; stack trace: ***
[2m[36m(pid=15764)[0m     @     0x7fcaddae2390 (unknown)
[2m[36m(pid=15764)[0m     @     0x7f9bdfc81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15764)[0m     @     0x7f9bdcf7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15852)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15852)[0m *** SIGSEGV (@0x0) received by PID 15852 (TID 0x7f9792956700) from PID 0; stack trace: ***
[2m[36m(pid=15852)[0m     @     0x7f979252f390 (unknown)
[2m[36m(pid=15852)[0m     @     0x7f68945dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15852)[0m     @     0x7f68918d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15833)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15833)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15833)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15833)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15833)[0m *** SIGSEGV (@0x0) received by PID 15833 (TID 0x7f27573b1700) from PID 0; stack trace: ***
[2m[36m(pid=15833)[0m     @     0x7f2756f8a390 (unknown)
[2m[36m(pid=15833)[0m     @     0x7ef85918afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15833)[0m     @     0x7ef85647e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15799)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15799)[0m *** SIGSEGV (@0x0) received by PID 15799 (TID 0x7f098a831700) from PID 0; stack trace: ***
[2m[36m(pid=15747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15747)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15747)[0m *** SIGSEGV (@0x0) received by PID 15747 (TID 0x7f2e91bee700) from PID 0; stack trace: ***
[2m[36m(pid=15747)[0m     @     0x7f2e917c7390 (unknown)
[2m[36m(pid=15747)[0m     @     0x7eff9396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15747)[0m     @     0x7eff90c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15749)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15749)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15749)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15749)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15749)[0m *** SIGSEGV (@0x0) received by PID 15749 (TID 0x7f4d41cbc700) from PID 0; stack trace: ***
[2m[36m(pid=15749)[0m     @     0x7f4d41895390 (unknown)
[2m[36m(pid=15749)[0m     @     0x7f1e43a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15824)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15824)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15824)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15824)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15824)[0m *** SIGSEGV (@0x0) received by PID 15824 (TID 0x7f336227e700) from PID 0; stack trace: ***
[2m[36m(pid=15794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15794)[0m *** SIGSEGV (@0x0) received by PID 15794 (TID 0x7fd8095b8700) from PID 0; stack trace: ***
[2m[36m(pid=15794)[0m     @     0x7fd809191390 (unknown)
[2m[36m(pid=15794)[0m     @     0x7fa90b32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15794)[0m     @     0x7fa90862064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15750)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15750)[0m *** SIGSEGV (@0x0) received by PID 15750 (TID 0x7fada7ff9700) from PID 0; stack trace: ***
[2m[36m(pid=15750)[0m     @     0x7fada7bd2390 (unknown)
[2m[36m(pid=15750)[0m     @     0x7f7ea9d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15750)[0m     @     0x7f7ea706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15756)[0m     @     0x7fd61a298390 (unknown)
[2m[36m(pid=15756)[0m     @     0x7fa71c4b0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15756)[0m     @     0x7fa7197a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15756)[0m     @     0x7fa7197a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15804)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15804)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15804)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15825)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15825)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15825)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15825)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15825)[0m *** SIGSEGV (@0x0) received by PID 15825 (TID 0x7fed2843c700) from PID 0; stack trace: ***
[2m[36m(pid=15825)[0m     @     0x7fed28015390 (unknown)
[2m[36m(pid=15803)[0m     @     0x7fa490c62e11 at::TensorIterator::for_each()
[2m[36m(pid=15803)[0m     @     0x7fa49397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15803)[0m     @     0x7fa49399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15823)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15823)[0m *** SIGSEGV (@0x0) received by PID 15823 (TID 0x7f5c9d023700) from PID 0; stack trace: ***
[2m[36m(pid=15823)[0m     @     0x7f5c9cbfc390 (unknown)
[2m[36m(pid=15823)[0m     @     0x7f2d9edb2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15823)[0m     @     0x7f2d9c0a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15797)[0m     @     0x7fcbcc13fe11 at::TensorIterator::for_each()
[2m[36m(pid=15797)[0m     @     0x7fcbcee58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15797)[0m     @     0x7fcbcee7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15797)[0m     @     0x7fcbcbeb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15797)[0m     @     0x7fcbcbeb7c3f at::native::copy_impl()
[2m[36m(pid=15818)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15818)[0m *** SIGSEGV (@0x0) received by PID 15818 (TID 0x7f82d8bb2700) from PID 0; stack trace: ***
[2m[36m(pid=15818)[0m     @     0x7f82d878b390 (unknown)
[2m[36m(pid=15818)[0m     @     0x7f53da885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15818)[0m     @     0x7f53d7b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15754)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15754)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15754)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15754)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15754)[0m *** SIGSEGV (@0x0) received by PID 15754 (TID 0x7f64d940e700) from PID 0; stack trace: ***
[2m[36m(pid=15754)[0m     @     0x7f64d8fe7390 (unknown)
[2m[36m(pid=15743)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15743)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15743)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15743)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15743)[0m *** SIGSEGV (@0x0) received by PID 15743 (TID 0x7f3d392d9700) from PID 0; stack trace: ***
[2m[36m(pid=15819)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15819)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15819)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15819)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15819)[0m *** SIGSEGV (@0x0) received by PID 15819 (TID 0x7fe96999f700) from PID 0; stack trace: ***
[2m[36m(pid=15819)[0m     @     0x7fe969578390 (unknown)
[2m[36m(pid=15819)[0m     @     0x7fba6b75afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15819)[0m     @     0x7fba68a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15816)[0m     @     0x7f206bed8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15816)[0m     @     0x7f206befbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15816)[0m     @     0x7f2068f39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15816)[0m     @     0x7f2068f37c3f at::native::copy_impl()
[2m[36m(pid=15816)[0m     @     0x7f2068f38ed4 at::native::copy_()
[2m[36m(pid=15848)[0m     @     0x7f47480abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15848)[0m     @     0x7f47480cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15848)[0m     @     0x7f474510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15848)[0m     @     0x7f474510ac3f at::native::copy_impl()
[2m[36m(pid=15848)[0m     @     0x7f474510bed4 at::native::copy_()
[2m[36m(pid=15813)[0m     @     0x7ed28c500c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15813)[0m     @     0x7ed28c523cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15813)[0m     @     0x7ed289561009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15813)[0m     @     0x7ed28955fc3f at::native::copy_impl()
[2m[36m(pid=15813)[0m     @     0x7ed289560ed4 at::native::copy_()
[2m[36m(pid=15831)[0m     @     0x7f69294d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15831)[0m     @     0x7f6926511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15831)[0m     @     0x7f692650fc3f at::native::copy_impl()
[2m[36m(pid=15831)[0m     @     0x7f6926510ed4 at::native::copy_()
[2m[36m(pid=15831)[0m     @     0x7f6926c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15867)[0m     @     0x7ecfda5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15867)[0m     @     0x7ecfd761b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15867)[0m     @     0x7ecfd7619c3f at::native::copy_impl()
[2m[36m(pid=15867)[0m     @     0x7ecfd761aed4 at::native::copy_()
[2m[36m(pid=15867)[0m     @     0x7ecfd7d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15740)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15740)[0m *** SIGSEGV (@0x0) received by PID 15740 (TID 0x7fd4f9450700) from PID 0; stack trace: ***
[2m[36m(pid=15740)[0m     @     0x7fd4f9029390 (unknown)
[2m[36m(pid=15740)[0m     @     0x7fa5fb11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15740)[0m     @     0x7fa5f840f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15740)[0m     @     0x7fa5f8412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15737)[0m     @     0x7f35ba34c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15737)[0m     @     0x7f35ba34ac3f at::native::copy_impl()
[2m[36m(pid=15737)[0m     @     0x7f35ba34bed4 at::native::copy_()
[2m[36m(pid=15737)[0m     @     0x7f35baa8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15815)[0m     @     0x7f70ac960390 (unknown)
[2m[36m(pid=15815)[0m     @     0x7f41ae885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15815)[0m     @     0x7f41abb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15815)[0m     @     0x7f41abb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15815)[0m     @     0x7f41abb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=15760)[0m     @     0x7fc1d5a67e11 at::TensorIterator::for_each()
[2m[36m(pid=15760)[0m     @     0x7fc1d8780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15760)[0m     @     0x7fc1d87a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15760)[0m     @     0x7fc1d57e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15760)[0m     @     0x7fc1d57dfc3f at::native::copy_impl()
[2m[36m(pid=15760)[0m     @     0x7fc1d57e0ed4 at::native::copy_()
[2m[36m(pid=15805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15805)[0m *** SIGSEGV (@0x0) received by PID 15805 (TID 0x7f66019e8700) from PID 0; stack trace: ***
[2m[36m(pid=15805)[0m     @     0x7f66015c1390 (unknown)
[2m[36m(pid=15805)[0m     @     0x7f37037dbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15805)[0m     @     0x7f3700acf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15805)[0m     @     0x7f3700ad2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15805)[0m     @     0x7f3700ad2b53 at::TensorIterator::for_each()
[2m[36m(pid=15862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15862)[0m *** SIGSEGV (@0x0) received by PID 15862 (TID 0x7fc74c5ca700) from PID 0; stack trace: ***
[2m[36m(pid=15862)[0m     @     0x7fc74c1a3390 (unknown)
[2m[36m(pid=15862)[0m     @     0x7f984e293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15862)[0m     @     0x7f984b58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15862)[0m     @     0x7f984b58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15862)[0m     @     0x7f984b58ab53 at::TensorIterator::for_each()
[2m[36m(pid=15738)[0m     @     0x7f0f0730fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15738)[0m     @     0x7f0f07332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15738)[0m     @     0x7f0f04370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15738)[0m     @     0x7f0f0436ec3f at::native::copy_impl()
[2m[36m(pid=15738)[0m     @     0x7f0f0436fed4 at::native::copy_()
[2m[36m(pid=15840)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15840)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15840)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15840)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15840)[0m *** SIGSEGV (@0x0) received by PID 15840 (TID 0x7f42846a8700) from PID 0; stack trace: ***
[2m[36m(pid=15840)[0m     @     0x7f4284281390 (unknown)
[2m[36m(pid=15840)[0m     @     0x7f1386344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15840)[0m     @     0x7f138363864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15840)[0m     @     0x7f138363b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15830)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15830)[0m *** SIGSEGV (@0x0) received by PID 15830 (TID 0x7fb41b1a9700) from PID 0; stack trace: ***
[2m[36m(pid=15830)[0m     @     0x7fb41ad82390 (unknown)
[2m[36m(pid=15830)[0m     @     0x7f851cf73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15830)[0m     @     0x7f851a26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15830)[0m     @     0x7f851a26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15822)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15822)[0m *** SIGSEGV (@0x0) received by PID 15822 (TID 0x7ffb57b2a700) from PID 0; stack trace: ***
[2m[36m(pid=15822)[0m     @     0x7ffb57703390 (unknown)
[2m[36m(pid=15822)[0m     @     0x7fcc59925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15822)[0m     @     0x7fcc56c1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15822)[0m     @     0x7fcc56c1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15822)[0m     @     0x7fcc56c1cb53 at::TensorIterator::for_each()
[2m[36m(pid=15835)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15835)[0m *** SIGSEGV (@0x0) received by PID 15835 (TID 0x7f9e84788700) from PID 0; stack trace: ***
[2m[36m(pid=15835)[0m     @     0x7f9e84361390 (unknown)
[2m[36m(pid=15835)[0m     @     0x7f6f86344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15835)[0m     @     0x7f6f8363864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15835)[0m     @     0x7f6f8363b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15858)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15858)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15858)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15858)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15858)[0m *** SIGSEGV (@0x0) received by PID 15858 (TID 0x7f3774240700) from PID 0; stack trace: ***
[2m[36m(pid=15858)[0m     @     0x7f3773e19390 (unknown)
[2m[36m(pid=15858)[0m     @     0x7f0875e6efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15858)[0m     @     0x7f087316264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15843)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15843)[0m *** SIGSEGV (@0x0) received by PID 15843 (TID 0x7f9bb51eb700) from PID 0; stack trace: ***
[2m[36m(pid=15843)[0m     @     0x7f9bb4dc4390 (unknown)
[2m[36m(pid=15843)[0m     @     0x7f6cb6eebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15843)[0m     @     0x7f6cb41df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15866)[0m *** Aborted at 1604574075 (unix time) try "date -d @1604574075" if you are using GNU date ***
[2m[36m(pid=15866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15866)[0m *** SIGSEGV (@0x0) received by PID 15866 (TID 0x7fbb53236700) from PID 0; stack trace: ***
[2m[36m(pid=15866)[0m     @     0x7fbb52e0f390 (unknown)
[2m[36m(pid=15866)[0m     @     0x7f8c55027fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15866)[0m     @     0x7f8c5231b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15857)[0m     @     0x7edde790ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15857)[0m     @     0x7edde7931cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15857)[0m     @     0x7edde496f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15857)[0m     @     0x7edde496dc3f at::native::copy_impl()
[2m[36m(pid=15857)[0m     @     0x7edde496eed4 at::native::copy_()
[2m[36m(pid=15807)[0m     @     0x7f17227e8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15807)[0m     @     0x7f172280bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15807)[0m     @     0x7f171f849009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15807)[0m     @     0x7f171f847c3f at::native::copy_impl()
[2m[36m(pid=15807)[0m     @     0x7f171f848ed4 at::native::copy_()
[2m[36m(pid=15757)[0m     @     0x7f71ed8e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15757)[0m     @     0x7f71ed8e7c3f at::native::copy_impl()
[2m[36m(pid=15757)[0m     @     0x7f71ed8e8ed4 at::native::copy_()
[2m[36m(pid=15757)[0m     @     0x7f71ee02b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15812)[0m     @     0x7fcbab021009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15812)[0m     @     0x7fcbab01fc3f at::native::copy_impl()
[2m[36m(pid=15812)[0m     @     0x7fcbab020ed4 at::native::copy_()
[2m[36m(pid=15812)[0m     @     0x7fcbab7635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15798)[0m     @     0x7f1abf84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15798)[0m     @     0x7f1abf849c3f at::native::copy_impl()
[2m[36m(pid=15798)[0m     @     0x7f1abf84aed4 at::native::copy_()
[2m[36m(pid=15798)[0m     @     0x7f1abff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15741)[0m     @     0x7f0af80fa009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15741)[0m     @     0x7f0af80f8c3f at::native::copy_impl()
[2m[36m(pid=15741)[0m     @     0x7f0af80f9ed4 at::native::copy_()
[2m[36m(pid=15849)[0m     @     0x7f509510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15849)[0m     @     0x7f509510ac3f at::native::copy_impl()
[2m[36m(pid=15849)[0m     @     0x7f509510bed4 at::native::copy_()
[2m[36m(pid=15849)[0m     @     0x7f509584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15809)[0m     @     0x7f35f6ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15809)[0m     @     0x7f35f6ddbc3f at::native::copy_impl()
[2m[36m(pid=15809)[0m     @     0x7f35f6ddced4 at::native::copy_()
[2m[36m(pid=15809)[0m     @     0x7f35f751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15755)[0m     @     0x7fbcc9631c3f at::native::copy_impl()
[2m[36m(pid=15755)[0m     @     0x7fbcc9632ed4 at::native::copy_()
[2m[36m(pid=15755)[0m     @     0x7fbcc9d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15771)[0m     @     0x7f5ccbd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15771)[0m     @     0x7f5ccbd71c3f at::native::copy_impl()
[2m[36m(pid=15771)[0m     @     0x7f5ccbd72ed4 at::native::copy_()
[2m[36m(pid=15771)[0m     @     0x7f5ccc4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15851)[0m     @     0x7f126ea45148 at::Tensor::copy_()
[2m[36m(pid=15851)[0m     @     0x7f127063c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15851)[0m     @     0x7f126e93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15820)[0m     @     0x7f3938c4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15820)[0m     @     0x7f3938d57148 at::Tensor::copy_()
[2m[36m(pid=15820)[0m     @     0x7f393a94e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15820)[0m     @     0x7f3938c4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15868)[0m     @     0x7f9c35f75c3f at::native::copy_impl()
[2m[36m(pid=15868)[0m     @     0x7f9c35f76ed4 at::native::copy_()
[2m[36m(pid=15868)[0m     @     0x7f9c366b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15814)[0m     @     0x7fb8df0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15814)[0m     @     0x7fb8df151148 at::Tensor::copy_()
[2m[36m(pid=15814)[0m     @     0x7fb8e0d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15814)[0m     @     0x7fb8df0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15758)[0m     @     0x7f1901a67b53 at::TensorIterator::for_each()
[2m[36m(pid=15758)[0m     @     0x7f1901a67e11 at::TensorIterator::for_each()
[2m[36m(pid=15758)[0m     @     0x7f1904780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15758)[0m     @     0x7f19047a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15744)[0m     @     0x7f19f6e1f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15744)[0m     @     0x7f19f6e1fb53 at::TensorIterator::for_each()
[2m[36m(pid=15744)[0m     @     0x7f19f6e1fe11 at::TensorIterator::for_each()
[2m[36m(pid=15744)[0m     @     0x7f19f9b38c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15742)[0m     @     0x7f072203f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15742)[0m     @     0x7f072203fb53 at::TensorIterator::for_each()
[2m[36m(pid=15742)[0m     @     0x7f072203fe11 at::TensorIterator::for_each()
[2m[36m(pid=15742)[0m     @     0x7f0724d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15826)[0m     @     0x7f222329a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15826)[0m     @     0x7f222329ab53 at::TensorIterator::for_each()
[2m[36m(pid=15826)[0m     @     0x7f222329ae11 at::TensorIterator::for_each()
[2m[36m(pid=15770)[0m     @     0x7f26c41df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15770)[0m     @     0x7f26c41e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15770)[0m     @     0x7f26c41e2b53 at::TensorIterator::for_each()
[2m[36m(pid=15817)[0m     @     0x7f5c1610ded4 at::native::copy_()
[2m[36m(pid=15817)[0m     @     0x7f5c168505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15855)[0m     @     0x7ee02492f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15855)[0m     @     0x7ee02492dc3f at::native::copy_impl()
[2m[36m(pid=15855)[0m     @     0x7ee02492eed4 at::native::copy_()
[2m[36m(pid=15769)[0m     @     0x7fa05366c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15769)[0m     @     0x7fa05366f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15769)[0m     @     0x7fa05366fb53 at::TensorIterator::for_each()
[2m[36m(pid=15873)[0m     @     0x7fb611b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15873)[0m     @     0x7fb611b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15873)[0m     @     0x7fb611b12b53 at::TensorIterator::for_each()
[2m[36m(pid=15761)[0m     @     0x7faa2c866ed4 at::native::copy_()
[2m[36m(pid=15761)[0m     @     0x7faa2cfa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15761)[0m     @     0x7faa2d0b1148 at::Tensor::copy_()
[2m[36m(pid=15761)[0m     @     0x7faa2eca8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15860)[0m     @     0x7f98d85f6b53 at::TensorIterator::for_each()
[2m[36m(pid=15860)[0m     @     0x7f98d85f6e11 at::TensorIterator::for_each()
[2m[36m(pid=15860)[0m     @     0x7f98db30fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15860)[0m     @     0x7f98db332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15810)[0m     @     0x7f99e6ddced4 at::native::copy_()
[2m[36m(pid=15810)[0m     @     0x7f99e751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15810)[0m     @     0x7f99e7627148 at::Tensor::copy_()
[2m[36m(pid=15810)[0m     @     0x7f99e921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15752)[0m     @     0x7ef322b99009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15752)[0m     @     0x7ef322b97c3f at::native::copy_impl()
[2m[36m(pid=15752)[0m     @     0x7ef322b98ed4 at::native::copy_()
[2m[36m(pid=15752)[0m     @     0x7ef3232db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15811)[0m     @     0x7f27095c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15811)[0m     @     0x7f27095c4c3f at::native::copy_impl()
[2m[36m(pid=15811)[0m     @     0x7f27095c5ed4 at::native::copy_()
[2m[36m(pid=15811)[0m     @     0x7f2709d085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15845)[0m     @     0x7f23692eced4 at::native::copy_()
[2m[36m(pid=15845)[0m     @     0x7f2369a2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15845)[0m     @     0x7f2369b37148 at::Tensor::copy_()
[2m[36m(pid=15759)[0m     @     0x7ef015d8c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15759)[0m     @     0x7ef015d8ac3f at::native::copy_impl()
[2m[36m(pid=15759)[0m     @     0x7ef015d8bed4 at::native::copy_()
[2m[36m(pid=15759)[0m     @     0x7ef0164ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15841)[0m     @     0x7fae34e85c3f at::native::copy_impl()
[2m[36m(pid=15841)[0m     @     0x7fae34e86ed4 at::native::copy_()
[2m[36m(pid=15841)[0m     @     0x7fae355c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15762)[0m     @     0x7f0822bc4c3f at::native::copy_impl()
[2m[36m(pid=15762)[0m     @     0x7f0822bc5ed4 at::native::copy_()
[2m[36m(pid=15762)[0m     @     0x7f08233085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15748)[0m     @     0x7f611c866ed4 at::native::copy_()
[2m[36m(pid=15748)[0m     @     0x7f611cfa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15748)[0m     @     0x7f611d0b1148 at::Tensor::copy_()
[2m[36m(pid=15827)[0m     @     0x7fb98e1f9c3f at::native::copy_impl()
[2m[36m(pid=15827)[0m     @     0x7fb98e1faed4 at::native::copy_()
[2m[36m(pid=15827)[0m     @     0x7fb98e93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15821)[0m     @     0x7ef7dacaced4 at::native::copy_()
[2m[36m(pid=15821)[0m     @     0x7ef7db3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15821)[0m     @     0x7ef7db4f7148 at::Tensor::copy_()
[2m[36m(pid=15746)[0m     @     0x7fa9d61faed4 at::native::copy_()
[2m[36m(pid=15746)[0m     @     0x7fa9d693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15746)[0m     @     0x7fa9d6a45148 at::Tensor::copy_()
[2m[36m(pid=15739)[0m     @     0x7ef2a1c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15739)[0m     @     0x7ef2a1c78b53 at::TensorIterator::for_each()
[2m[36m(pid=15739)[0m     @     0x7ef2a1c78e11 at::TensorIterator::for_each()
[2m[36m(pid=15739)[0m     @     0x7ef2a4991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15739)[0m     @     0x7ef2a49b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15766)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15766)[0m *** SIGSEGV (@0x0) received by PID 15766 (TID 0x7f54b127b700) from PID 0; stack trace: ***
[2m[36m(pid=15766)[0m     @     0x7f54b0e54390 (unknown)
[2m[36m(pid=15766)[0m     @     0x7f25b3049fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15766)[0m     @     0x7f25b033d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15766)[0m     @     0x7f25b0340977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15766)[0m     @     0x7f25b0340b53 at::TensorIterator::for_each()
[2m[36m(pid=15834)[0m *** SIGSEGV (@0x0) received by PID 15834 (TID 0x7f15cc569700) from PID 0; stack trace: ***
[2m[36m(pid=15834)[0m     @     0x7f15cc142390 (unknown)
[2m[36m(pid=15834)[0m     @     0x7ee6ce293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15834)[0m     @     0x7ee6cb58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15834)[0m     @     0x7ee6cb58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15753)[0m     @     0x7f1dcee6f390 (unknown)
[2m[36m(pid=15753)[0m     @     0x7eeed107afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15753)[0m     @     0x7eeece36e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15753)[0m     @     0x7eeece371977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15753)[0m     @     0x7eeece371b53 at::TensorIterator::for_each()
[2m[36m(pid=15753)[0m     @     0x7eeece371e11 at::TensorIterator::for_each()
[2m[36m(pid=15763)[0m     @     0x7f26aa797b53 at::TensorIterator::for_each()
[2m[36m(pid=15763)[0m     @     0x7f26aa797e11 at::TensorIterator::for_each()
[2m[36m(pid=15763)[0m     @     0x7f26ad4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15763)[0m     @     0x7f26ad4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15763)[0m     @     0x7f26aa511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15763)[0m     @     0x7f26aa50fc3f at::native::copy_impl()
[2m[36m(pid=15764)[0m     @     0x7f9bdcf78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15764)[0m     @     0x7f9bdcf78b53 at::TensorIterator::for_each()
[2m[36m(pid=15764)[0m     @     0x7f9bdcf78e11 at::TensorIterator::for_each()
[2m[36m(pid=15764)[0m     @     0x7f9bdfc91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15764)[0m     @     0x7f9bdfcb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15852)[0m     @     0x7f68918d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15852)[0m     @     0x7f68918d3b53 at::TensorIterator::for_each()
[2m[36m(pid=15852)[0m     @     0x7f68918d3e11 at::TensorIterator::for_each()
[2m[36m(pid=15852)[0m     @     0x7f68945ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15852)[0m     @     0x7f689460fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15833)[0m     @     0x7ef856481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15833)[0m     @     0x7ef856481b53 at::TensorIterator::for_each()
[2m[36m(pid=15833)[0m     @     0x7ef856481e11 at::TensorIterator::for_each()
[2m[36m(pid=15833)[0m     @     0x7ef85919ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15833)[0m     @     0x7ef8591bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15799)[0m     @     0x7f098a40a390 (unknown)
[2m[36m(pid=15799)[0m     @     0x7eda8c5c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15799)[0m     @     0x7eda898b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15747)[0m     @     0x7eff90c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15747)[0m     @     0x7eff90c62b53 at::TensorIterator::for_each()
[2m[36m(pid=15747)[0m     @     0x7eff90c62e11 at::TensorIterator::for_each()
[2m[36m(pid=15747)[0m     @     0x7eff9397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15747)[0m     @     0x7eff9399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15747)[0m     @     0x7eff909dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15747)[0m     @     0x7eff909dac3f at::native::copy_impl()
[2m[36m(pid=15749)[0m     @     0x7f1e40d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15749)[0m     @     0x7f1e40d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15749)[0m     @     0x7f1e40d67b53 at::TensorIterator::for_each()
[2m[36m(pid=15749)[0m     @     0x7f1e40d67e11 at::TensorIterator::for_each()
[2m[36m(pid=15749)[0m     @     0x7f1e43a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15749)[0m     @     0x7f1e43aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15824)[0m     @     0x7f3361e57390 (unknown)
[2m[36m(pid=15824)[0m     @     0x7f046406efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15824)[0m     @     0x7f046136264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15824)[0m     @     0x7f0461365977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15824)[0m     @     0x7f0461365b53 at::TensorIterator::for_each()
[2m[36m(pid=15794)[0m     @     0x7fa908623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15794)[0m     @     0x7fa908623b53 at::TensorIterator::for_each()
[2m[36m(pid=15794)[0m     @     0x7fa908623e11 at::TensorIterator::for_each()
[2m[36m(pid=15794)[0m     @     0x7fa90b33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15794)[0m     @     0x7fa90b35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15750)[0m     @     0x7f7ea7063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15750)[0m     @     0x7f7ea7063b53 at::TensorIterator::for_each()
[2m[36m(pid=15750)[0m     @     0x7f7ea7063e11 at::TensorIterator::for_each()
[2m[36m(pid=15750)[0m     @     0x7f7ea9d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15750)[0m     @     0x7f7ea9d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15750)[0m     @     0x7f7ea6ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15756)[0m     @     0x7fa7197a7b53 at::TensorIterator::for_each()
[2m[36m(pid=15756)[0m     @     0x7fa7197a7e11 at::TensorIterator::for_each()
[2m[36m(pid=15756)[0m     @     0x7fa71c4c0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15756)[0m     @     0x7fa71c4e3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15756)[0m     @     0x7fa719521009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15756)[0m     @     0x7fa71951fc3f at::native::copy_impl()
[2m[36m(pid=15804)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15804)[0m *** SIGSEGV (@0x0) received by PID 15804 (TID 0x7f402bd72700) from PID 0; stack trace: ***
[2m[36m(pid=15804)[0m     @     0x7f402b94b390 (unknown)
[2m[36m(pid=15804)[0m     @     0x7f112db55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15804)[0m     @     0x7f112ae4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15804)[0m     @     0x7f112ae4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15804)[0m     @     0x7f112ae4cb53 at::TensorIterator::for_each()
[2m[36m(pid=15825)[0m     @     0x7fbe2a082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15825)[0m     @     0x7fbe2737664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15825)[0m     @     0x7fbe27379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15825)[0m     @     0x7fbe27379b53 at::TensorIterator::for_each()
[2m[36m(pid=15825)[0m     @     0x7fbe27379e11 at::TensorIterator::for_each()
[2m[36m(pid=15825)[0m     @     0x7fbe2a092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15803)[0m     @     0x7fa4909dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15803)[0m     @     0x7fa4909dac3f at::native::copy_impl()
[2m[36m(pid=15803)[0m     @     0x7fa4909dbed4 at::native::copy_()
[2m[36m(pid=15803)[0m     @     0x7fa49111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15803)[0m     @     0x7fa491226148 at::Tensor::copy_()
[2m[36m(pid=15803)[0m     @     0x7fa492e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15823)[0m     @     0x7f2d9c0a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15823)[0m     @     0x7f2d9c0a9b53 at::TensorIterator::for_each()
[2m[36m(pid=15823)[0m     @     0x7f2d9c0a9e11 at::TensorIterator::for_each()
[2m[36m(pid=15823)[0m     @     0x7f2d9edc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15823)[0m     @     0x7f2d9ede5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15797)[0m     @     0x7fcbcbeb8ed4 at::native::copy_()
[2m[36m(pid=15797)[0m     @     0x7fcbcc5fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15797)[0m     @     0x7fcbcc703148 at::Tensor::copy_()
[2m[36m(pid=15797)[0m     @     0x7fcbce2fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53d7b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15818)[0m     @     0x7f53d7b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=15818)[0m     @     0x7f53d7b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=15818)[0m     @     0x7f53da895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15818)[0m     @     0x7f53da8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15754)[0m     @     0x7f35db182fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15754)[0m     @     0x7f35d847664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15754)[0m     @     0x7f35d8479977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15754)[0m     @     0x7f35d8479b53 at::TensorIterator::for_each()
[2m[36m(pid=15754)[0m     @     0x7f35d8479e11 at::TensorIterator::for_each()
[2m[36m(pid=15754)[0m     @     0x7f35db192c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15743)[0m     @     0x7f3d38eb2390 (unknown)
[2m[36m(pid=15743)[0m     @     0x7f0e3affefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15743)[0m     @     0x7f0e382f264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15819)[0m     @     0x7fba68a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15819)[0m     @     0x7fba68a51b53 at::TensorIterator::for_each()
[2m[36m(pid=15819)[0m     @     0x7fba68a51e11 at::TensorIterator::for_each()
[2m[36m(pid=15819)[0m     @     0x7fba6b76ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15816)[0m     @     0x7f206967b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15816)[0m     @     0x7f2069783148 at::Tensor::copy_()
[2m[36m(pid=15816)[0m     @     0x7f206b37a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15816)[0m     @     0x7f206967b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15848)[0m     @     0x7f474584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15848)[0m     @     0x7f4745956148 at::Tensor::copy_()
[2m[36m(pid=15848)[0m     @     0x7f474754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15848)[0m     @     0x7f474584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15848)[0m     @     0x7f4745956148 at::Tensor::copy_()
[2m[36m(pid=15848)[0m     @     0x7f474bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15848)[0m     @     0x5566c91e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15848)[0m     @     0x5566c913cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15848)[0m     @     0x5566c91c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15848)[0m     @     0x5566c91c8a20 method_vectorcall
[2m[36m(pid=15848)[0m     @     0x5566c913cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15848)[0m     @     0x5566c91c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15848)[0m     @     0x5566c91c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15848)[0m     @     0x5566c913d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15813)[0m     @     0x7ed289ca35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15813)[0m     @     0x7ed289dab148 at::Tensor::copy_()
[2m[36m(pid=15813)[0m     @     0x7ed28b9a2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15813)[0m     @     0x7ed289ca35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15813)[0m     @     0x7ed289dab148 at::Tensor::copy_()
[2m[36m(pid=15813)[0m     @     0x7ed290061bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15813)[0m     @     0x559a995dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15813)[0m     @     0x559a9953ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15813)[0m     @     0x559a995c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15813)[0m     @     0x559a995c6a20 method_vectorcall
[2m[36m(pid=15813)[0m     @     0x559a9953abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15813)[0m     @     0x559a995c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15813)[0m     @     0x559a995c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15813)[0m     @     0x559a9953b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x7f6926d5b148 at::Tensor::copy_()
[2m[36m(pid=15831)[0m     @     0x7f6928952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15831)[0m     @     0x7f6926c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15831)[0m     @     0x7f6926d5b148 at::Tensor::copy_()
[2m[36m(pid=15831)[0m     @     0x7f692d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15831)[0m     @     0x55ec4b05bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15831)[0m     @     0x55ec4afb6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x55ec4b041baf _PyEval_EvalCodeWithName
[2m[36m(pid=15831)[0m     @     0x55ec4b042a20 method_vectorcall
[2m[36m(pid=15831)[0m     @     0x55ec4afb6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x55ec4b041baf _PyEval_EvalCodeWithName
[2m[36m(pid=15831)[0m     @     0x55ec4b042643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15831)[0m     @     0x55ec4afb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x55ec4b041baf _PyEval_EvalCodeWithName
[2m[36m(pid=15831)[0m     @     0x55ec4b042643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15831)[0m     @     0x55ec4afb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x55ec4b041baf _PyEval_EvalCodeWithName
[2m[36m(pid=15831)[0m     @     0x55ec4b042643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15831)[0m     @     0x55ec4afb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15831)[0m     @     0x55ec4b041baf _PyEval_EvalCodeWithName
[2m[36m(pid=15867)[0m     @     0x7ecfd7e65148 at::Tensor::copy_()
[2m[36m(pid=15867)[0m     @     0x7ecfd9a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15867)[0m     @     0x7ecfd7d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15867)[0m     @     0x7ecfd7e65148 at::Tensor::copy_()
[2m[36m(pid=15867)[0m     @     0x7ecfde11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15867)[0m     @     0x559595437fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15867)[0m     @     0x559595392b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15867)[0m     @     0x55959541dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15867)[0m     @     0x55959541ea20 method_vectorcall
[2m[36m(pid=15867)[0m     @     0x559595392bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15867)[0m     @     0x55959541dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15867)[0m     @     0x55959541e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15867)[0m     @     0x559595393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15867)[0m     @     0x55959541dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15867)[0m     @     0x55959541e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15867)[0m     @     0x559595393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15867)[0m     @     0x55959541dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15867)[0m     @     0x55959541e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15867)[0m     @     0x559595393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15867)[0m     @     0x55959541dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x7fa5f8412b53 at::TensorIterator::for_each()
[2m[36m(pid=15740)[0m     @     0x7fa5f8412e11 at::TensorIterator::for_each()
[2m[36m(pid=15740)[0m     @     0x7fa5fb12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15740)[0m     @     0x7fa5fb14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15740)[0m     @     0x7fa5f818c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15740)[0m     @     0x7fa5f818ac3f at::native::copy_impl()
[2m[36m(pid=15737)[0m     @     0x7f35bab96148 at::Tensor::copy_()
[2m[36m(pid=15737)[0m     @     0x7f35bc78d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15737)[0m     @     0x7f35baa8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15737)[0m     @     0x7f35bab96148 at::Tensor::copy_()
[2m[36m(pid=15737)[0m     @     0x7f35c0e4cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15737)[0m     @     0x55a7e384cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15737)[0m     @     0x55a7e37a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15737)[0m     @     0x55a7e3832baf _PyEval_EvalCodeWithName
[2m[36m(pid=15737)[0m     @     0x55a7e3833a20 method_vectorcall
[2m[36m(pid=15737)[0m     @     0x55a7e37a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15737)[0m     @     0x55a7e3832baf _PyEval_EvalCodeWithName
[2m[36m(pid=15737)[0m     @     0x55a7e3833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15737)[0m     @     0x55a7e37a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15737)[0m     @     0x55a7e3832baf _PyEval_EvalCodeWithName
[2m[36m(pid=15737)[0m     @     0x55a7e3833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15737)[0m     @     0x55a7e37a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15737)[0m     @     0x55a7e3832baf _PyEval_EvalCodeWithName
[2m[36m(pid=15737)[0m     @     0x55a7e3833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15737)[0m     @     0x55a7e37a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15737)[0m     @     0x55a7e3832baf _PyEval_EvalCodeWithName
[2m[36m(pid=15815)[0m     @     0x7f41abb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=15815)[0m     @     0x7f41ae895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15815)[0m     @     0x7f41ae8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15815)[0m     @     0x7f41ab8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15815)[0m     @     0x7f41ab8f4c3f at::native::copy_impl()
[2m[36m(pid=15815)[0m     @     0x7f41ab8f5ed4 at::native::copy_()
[2m[36m(pid=15815)[0m     @     0x7f41ac0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15760)[0m     @     0x7fc1d5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15760)[0m     @     0x7fc1d602b148 at::Tensor::copy_()
[2m[36m(pid=15760)[0m     @     0x7fc1d7c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15760)[0m     @     0x7fc1d5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15805)[0m     @     0x7f3700ad2e11 at::TensorIterator::for_each()
[2m[36m(pid=15805)[0m     @     0x7f37037ebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15805)[0m     @     0x7f370380ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15805)[0m     @     0x7f370084c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15805)[0m     @     0x7f370084ac3f at::native::copy_impl()
[2m[36m(pid=15862)[0m     @     0x7f984b58ae11 at::TensorIterator::for_each()
[2m[36m(pid=15862)[0m     @     0x7f984e2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15862)[0m     @     0x7f984e2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15862)[0m     @     0x7f984b304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15862)[0m     @     0x7f984b302c3f at::native::copy_impl()
[2m[36m(pid=15862)[0m     @     0x7f984b303ed4 at::native::copy_()
[2m[36m(pid=15738)[0m     @     0x7f0f04ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15738)[0m     @     0x7f0f04bba148 at::Tensor::copy_()
[2m[36m(pid=15738)[0m     @     0x7f0f067b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15738)[0m     @     0x7f0f04ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15738)[0m     @     0x7f0f04bba148 at::Tensor::copy_()
[2m[36m(pid=15738)[0m     @     0x7f0f0ae70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15738)[0m     @     0x5635fe44dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15840)[0m     @     0x7f138363bb53 at::TensorIterator::for_each()
[2m[36m(pid=15840)[0m     @     0x7f138363be11 at::TensorIterator::for_each()
[2m[36m(pid=15840)[0m     @     0x7f1386354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15840)[0m     @     0x7f1386377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15840)[0m     @     0x7f13833b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15840)[0m     @     0x7f13833b3c3f at::native::copy_impl()
[2m[36m(pid=15830)[0m     @     0x7f851a26ab53 at::TensorIterator::for_each()
[2m[36m(pid=15830)[0m     @     0x7f851a26ae11 at::TensorIterator::for_each()
[2m[36m(pid=15830)[0m     @     0x7f851cf83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15830)[0m     @     0x7f851cfa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15830)[0m     @     0x7f8519fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15830)[0m     @     0x7f8519fe2c3f at::native::copy_impl()
[2m[36m(pid=15822)[0m     @     0x7fcc56c1ce11 at::TensorIterator::for_each()
[2m[36m(pid=15822)[0m     @     0x7fcc59935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15822)[0m     @     0x7fcc59958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15822)[0m     @     0x7fcc56996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15822)[0m     @     0x7fcc56994c3f at::native::copy_impl()
[2m[36m(pid=15822)[0m     @     0x7fcc56995ed4 at::native::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f8363bb53 at::TensorIterator::for_each()
[2m[36m(pid=15835)[0m     @     0x7f6f8363be11 at::TensorIterator::for_each()
[2m[36m(pid=15835)[0m     @     0x7f6f86354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15835)[0m     @     0x7f6f86377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15835)[0m     @     0x7f6f833b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15835)[0m     @     0x7f6f833b3c3f at::native::copy_impl()
[2m[36m(pid=15858)[0m     @     0x7f0873165977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15858)[0m     @     0x7f0873165b53 at::TensorIterator::for_each()
[2m[36m(pid=15843)[0m     @     0x7f6cb41e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15843)[0m     @     0x7f6cb41e2b53 at::TensorIterator::for_each()
[2m[36m(pid=15866)[0m     @     0x7f8c5231e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15866)[0m     @     0x7f8c5231eb53 at::TensorIterator::for_each()
[2m[36m(pid=15866)[0m     @     0x7f8c5231ee11 at::TensorIterator::for_each()
[2m[36m(pid=15866)[0m     @     0x7f8c55037c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15866)[0m     @     0x7f8c5505acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15866)[0m     @     0x7f8c52098009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15866)[0m     @     0x7f8c52096c3f at::native::copy_impl()
[2m[36m(pid=15857)[0m     @     0x7edde50b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15857)[0m     @     0x7edde51b9148 at::Tensor::copy_()
[2m[36m(pid=15857)[0m     @     0x7edde6db0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15857)[0m     @     0x7edde50b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15857)[0m     @     0x7edde51b9148 at::Tensor::copy_()
[2m[36m(pid=15857)[0m     @     0x7eddeb46fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15857)[0m     @     0x55d2d7ab6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15857)[0m     @     0x55d2d7a11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15857)[0m     @     0x55d2d7a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15857)[0m     @     0x55d2d7a9da20 method_vectorcall
[2m[36m(pid=15857)[0m     @     0x55d2d7a11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15857)[0m     @     0x55d2d7a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15857)[0m     @     0x55d2d7a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15857)[0m     @     0x55d2d7a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15857)[0m     @     0x55d2d7a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15857)[0m     @     0x55d2d7a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15857)[0m     @     0x55d2d7a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x7f171ff8b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15807)[0m     @     0x7f1720093148 at::Tensor::copy_()
[2m[36m(pid=15807)[0m     @     0x7f1721c8a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15807)[0m     @     0x7f171ff8b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15807)[0m     @     0x7f1720093148 at::Tensor::copy_()
[2m[36m(pid=15807)[0m     @     0x7f1726349bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15807)[0m     @     0x55ad2f84bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15757)[0m     @     0x7f71ee133148 at::Tensor::copy_()
[2m[36m(pid=15757)[0m     @     0x7f71efd2a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15757)[0m     @     0x7f71ee02b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15757)[0m     @     0x7f71ee133148 at::Tensor::copy_()
[2m[36m(pid=15757)[0m     @     0x7f71f43e9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15757)[0m     @     0x559e3d9edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15757)[0m     @     0x559e3d948b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15757)[0m     @     0x559e3d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15757)[0m     @     0x559e3d9d4a20 method_vectorcall
[2m[36m(pid=15757)[0m     @     0x559e3d948bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15757)[0m     @     0x559e3d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15757)[0m     @     0x559e3d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15757)[0m     @     0x559e3d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15757)[0m     @     0x559e3d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15757)[0m     @     0x559e3d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15757)[0m     @     0x559e3d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x7fcbab86b148 at::Tensor::copy_()
[2m[36m(pid=15812)[0m     @     0x7fcbad462989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15812)[0m     @     0x7fcbab7635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15812)[0m     @     0x7fcbab86b148 at::Tensor::copy_()
[2m[36m(pid=15798)[0m     @     0x7f1ac0095148 at::Tensor::copy_()
[2m[36m(pid=15798)[0m     @     0x7f1ac1c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15798)[0m     @     0x7f1abff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15798)[0m     @     0x7f1ac0095148 at::Tensor::copy_()
[2m[36m(pid=15798)[0m     @     0x7f1ac634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15798)[0m     @     0x55dc86aa9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15741)[0m     @     0x7f0af883c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15741)[0m     @     0x7f0af8944148 at::Tensor::copy_()
[2m[36m(pid=15741)[0m     @     0x7f0afa53b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15741)[0m     @     0x7f0af883c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15849)[0m     @     0x7f5095956148 at::Tensor::copy_()
[2m[36m(pid=15849)[0m     @     0x7f509754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15849)[0m     @     0x7f509584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15849)[0m     @     0x7f5095956148 at::Tensor::copy_()
[2m[36m(pid=15849)[0m     @     0x7f509bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15849)[0m     @     0x563d9e986fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15849)[0m     @     0x563d9e8e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15849)[0m     @     0x563d9e96cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15849)[0m     @     0x563d9e96da20 method_vectorcall
[2m[36m(pid=15849)[0m     @     0x563d9e8e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15849)[0m     @     0x563d9e96cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15849)[0m     @     0x563d9e96d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15849)[0m     @     0x563d9e8e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15849)[0m     @     0x563d9e96cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15849)[0m     @     0x563d9e96d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15849)[0m     @     0x563d9e8e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15849)[0m     @     0x563d9e96cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15849)[0m     @     0x563d9e96d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15849)[0m     @     0x563d9e8e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15849)[0m     @     0x563d9e96cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x7f35f7627148 at::Tensor::copy_()
[2m[36m(pid=15809)[0m     @     0x7f35f921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15809)[0m     @     0x7f35f751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15809)[0m     @     0x7f35f7627148 at::Tensor::copy_()
[2m[36m(pid=15809)[0m     @     0x7f35fd8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15809)[0m     @     0x560a258bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15809)[0m     @     0x560a25817b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15809)[0m     @     0x560a258a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x560a258a3a20 method_vectorcall
[2m[36m(pid=15809)[0m     @     0x560a25817bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15809)[0m     @     0x560a258a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x560a258a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15755)[0m     @     0x7fbcc9e7d148 at::Tensor::copy_()
[2m[36m(pid=15755)[0m     @     0x7fbccba74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15755)[0m     @     0x7fbcc9d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15755)[0m     @     0x7fbcc9e7d148 at::Tensor::copy_()
[2m[36m(pid=15755)[0m     @     0x7fbcd0133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15755)[0m     @     0x560761104fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15755)[0m     @     0x56076105fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15755)[0m     @     0x5607610eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15755)[0m     @     0x5607610eba20 method_vectorcall
[2m[36m(pid=15755)[0m     @     0x56076105fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15755)[0m     @     0x5607610eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15755)[0m     @     0x5607610eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15755)[0m     @     0x560761060689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15755)[0m     @     0x5607610eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15755)[0m     @     0x5607610eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15755)[0m     @     0x560761060689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15755)[0m     @     0x5607610eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15755)[0m     @     0x5607610eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15755)[0m     @     0x560761060689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15755)[0m     @     0x5607610eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x7f5ccc5bd148 at::Tensor::copy_()
[2m[36m(pid=15771)[0m     @     0x7f5cce1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15771)[0m     @     0x7f5ccc4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15771)[0m     @     0x7f5ccc5bd148 at::Tensor::copy_()
[2m[36m(pid=15771)[0m     @     0x7f5cd2873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15771)[0m     @     0x56430d934fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15771)[0m     @     0x56430d88fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15771)[0m     @     0x56430d91abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x56430d91ba20 method_vectorcall
[2m[36m(pid=15771)[0m     @     0x56430d88fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15771)[0m     @     0x56430d91abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x56430d91b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15771)[0m     @     0x56430d890689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15771)[0m     @     0x56430d91abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x56430d91b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15851)[0m     @     0x7f126ea45148 at::Tensor::copy_()
[2m[36m(pid=15851)[0m     @     0x7f1274cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15851)[0m     @     0x55d687bccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15851)[0m     @     0x55d687b27b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15851)[0m     @     0x55d687bb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15851)[0m     @     0x55d687bb3a20 method_vectorcall
[2m[36m(pid=15851)[0m     @     0x55d687b27bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15851)[0m     @     0x55d687bb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15851)[0m     @     0x55d687bb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15851)[0m     @     0x55d687b28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15851)[0m     @     0x55d687bb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15851)[0m     @     0x55d687bb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15851)[0m     @     0x55d687b28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15851)[0m     @     0x55d687bb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15851)[0m     @     0x55d687bb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15851)[0m     @     0x55d687b28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15851)[0m     @     0x55d687bb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15820)[0m     @     0x7f3938d57148 at::Tensor::copy_()
[2m[36m(pid=15820)[0m     @     0x7f393f00dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15820)[0m     @     0x55c260ef8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15820)[0m     @     0x55c260e53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15820)[0m     @     0x55c260edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15820)[0m     @     0x55c260edfa20 method_vectorcall
[2m[36m(pid=15820)[0m     @     0x55c260e53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15820)[0m     @     0x55c260edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15820)[0m     @     0x55c260edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15820)[0m     @     0x55c260e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15820)[0m     @     0x55c260edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15820)[0m     @     0x55c260edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15820)[0m     @     0x55c260e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15820)[0m     @     0x55c260edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15820)[0m     @     0x55c260edf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15820)[0m     @     0x55c260e54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15820)[0m     @     0x55c260edebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x7f9c367c1148 at::Tensor::copy_()
[2m[36m(pid=15868)[0m     @     0x7f9c383b8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15868)[0m     @     0x7f9c366b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15868)[0m     @     0x7f9c367c1148 at::Tensor::copy_()
[2m[36m(pid=15868)[0m     @     0x7f9c3ca77bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15868)[0m     @     0x56275f2b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15868)[0m     @     0x56275f212b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x56275f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x56275f29ea20 method_vectorcall
[2m[36m(pid=15868)[0m     @     0x56275f212bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x56275f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x56275f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x56275f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x56275f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x56275f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x56275f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x56275f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x56275f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x56275f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x56275f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15814)[0m     @     0x7fb8df151148 at::Tensor::copy_()
[2m[36m(pid=15814)[0m     @     0x7fb8e5407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15814)[0m     @     0x559696522fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15814)[0m     @     0x55969647db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15814)[0m     @     0x559696508baf _PyEval_EvalCodeWithName
[2m[36m(pid=15814)[0m     @     0x559696509a20 method_vectorcall
[2m[36m(pid=15814)[0m     @     0x55969647dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15814)[0m     @     0x559696508baf _PyEval_EvalCodeWithName
[2m[36m(pid=15814)[0m     @     0x559696509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15814)[0m     @     0x55969647e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15814)[0m     @     0x559696508baf _PyEval_EvalCodeWithName
[2m[36m(pid=15814)[0m     @     0x559696509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15814)[0m     @     0x55969647e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15814)[0m     @     0x559696508baf _PyEval_EvalCodeWithName
[2m[36m(pid=15814)[0m     @     0x559696509643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15814)[0m     @     0x55969647e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15814)[0m     @     0x559696508baf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x7f19017e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15758)[0m     @     0x7f19017dfc3f at::native::copy_impl()
[2m[36m(pid=15758)[0m     @     0x7f19017e0ed4 at::native::copy_()
[2m[36m(pid=15758)[0m     @     0x7f1901f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15744)[0m     @     0x7f19f9b5bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15744)[0m     @     0x7f19f6b99009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15744)[0m     @     0x7f19f6b97c3f at::native::copy_impl()
[2m[36m(pid=15744)[0m     @     0x7f19f6b98ed4 at::native::copy_()
[2m[36m(pid=15744)[0m     @     0x7f19f72db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15742)[0m     @     0x7f0724d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15742)[0m     @     0x7f0721db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15742)[0m     @     0x7f0721db7c3f at::native::copy_impl()
[2m[36m(pid=15742)[0m     @     0x7f0721db8ed4 at::native::copy_()
[2m[36m(pid=15742)[0m     @     0x7f07224fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15826)[0m     @     0x7f2225fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15826)[0m     @     0x7f2225fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15826)[0m     @     0x7f2223014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15826)[0m     @     0x7f2223012c3f at::native::copy_impl()
[2m[36m(pid=15826)[0m     @     0x7f2223013ed4 at::native::copy_()
[2m[36m(pid=15826)[0m     @     0x7f22237565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15770)[0m     @     0x7f26c41e2e11 at::TensorIterator::for_each()
[2m[36m(pid=15770)[0m     @     0x7f26c6efbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15770)[0m     @     0x7f26c6f1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15770)[0m     @     0x7f26c3f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15770)[0m     @     0x7f26c3f5ac3f at::native::copy_impl()
[2m[36m(pid=15770)[0m     @     0x7f26c3f5bed4 at::native::copy_()
[2m[36m(pid=15817)[0m     @     0x7f5c16958148 at::Tensor::copy_()
[2m[36m(pid=15817)[0m     @     0x7f5c1854f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15817)[0m     @     0x7f5c168505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15817)[0m     @     0x7f5c16958148 at::Tensor::copy_()
[2m[36m(pid=15817)[0m     @     0x7f5c1cc0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15817)[0m     @     0x565241103fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15817)[0m     @     0x56524105eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15817)[0m     @     0x5652410e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15817)[0m     @     0x5652410eaa20 method_vectorcall
[2m[36m(pid=15817)[0m     @     0x56524105ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15817)[0m     @     0x5652410e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15817)[0m     @     0x5652410ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15817)[0m     @     0x56524105f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15817)[0m     @     0x5652410e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15817)[0m     @     0x5652410ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15817)[0m     @     0x56524105f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15817)[0m     @     0x5652410e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15817)[0m     @     0x5652410ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15817)[0m     @     0x56524105f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15817)[0m     @     0x5652410e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15855)[0m     @     0x7ee0250715cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15855)[0m     @     0x7ee025179148 at::Tensor::copy_()
[2m[36m(pid=15855)[0m     @     0x7ee026d70989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15855)[0m     @     0x7ee0250715cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15855)[0m     @     0x7ee025179148 at::Tensor::copy_()
[2m[36m(pid=15769)[0m     @     0x7fa05366fe11 at::TensorIterator::for_each()
[2m[36m(pid=15769)[0m     @     0x7fa056388c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15769)[0m     @     0x7fa0563abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15769)[0m     @     0x7fa0533e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15769)[0m     @     0x7fa0533e7c3f at::native::copy_impl()
[2m[36m(pid=15769)[0m     @     0x7fa0533e8ed4 at::native::copy_()
[2m[36m(pid=15873)[0m     @     0x7fb611b12e11 at::TensorIterator::for_each()
[2m[36m(pid=15873)[0m     @     0x7fb61482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15873)[0m     @     0x7fb61484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15873)[0m     @     0x7fb61188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15873)[0m     @     0x7fb61188ac3f at::native::copy_impl()
[2m[36m(pid=15873)[0m     @     0x7fb61188bed4 at::native::copy_()
[2m[36m(pid=15761)[0m     @     0x7faa2cfa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15761)[0m     @     0x7faa2d0b1148 at::Tensor::copy_()
[2m[36m(pid=15761)[0m     @     0x7faa33367bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15761)[0m     @     0x55c210192fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15761)[0m     @     0x55c2100edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15761)[0m     @     0x55c210178baf _PyEval_EvalCodeWithName
[2m[36m(pid=15761)[0m     @     0x55c210179a20 method_vectorcall
[2m[36m(pid=15761)[0m     @     0x55c2100edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15761)[0m     @     0x55c210178baf _PyEval_EvalCodeWithName
[2m[36m(pid=15761)[0m     @     0x55c210179643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15761)[0m     @     0x55c2100ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15761)[0m     @     0x55c210178baf _PyEval_EvalCodeWithName
[2m[36m(pid=15761)[0m     @     0x55c210179643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15761)[0m     @     0x55c2100ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15761)[0m     @     0x55c210178baf _PyEval_EvalCodeWithName
[2m[36m(pid=15761)[0m     @     0x55c210179643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15761)[0m     @     0x55c2100ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15761)[0m     @     0x55c210178baf _PyEval_EvalCodeWithName
[2m[36m(pid=15860)[0m     @     0x7f98d8370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15860)[0m     @     0x7f98d836ec3f at::native::copy_impl()
[2m[36m(pid=15860)[0m     @     0x7f98d836fed4 at::native::copy_()
[2m[36m(pid=15860)[0m     @     0x7f98d8ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15860)[0m     @     0x7f98d8bba148 at::Tensor::copy_()
[2m[36m(pid=15810)[0m     @     0x7f99e751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15810)[0m     @     0x7f99e7627148 at::Tensor::copy_()
[2m[36m(pid=15810)[0m     @     0x7f99ed8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15810)[0m     @     0x55b75c1c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15810)[0m     @     0x55b75c120b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15810)[0m     @     0x55b75c1abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15810)[0m     @     0x55b75c1aca20 method_vectorcall
[2m[36m(pid=15810)[0m     @     0x55b75c120bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15810)[0m     @     0x55b75c1abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15810)[0m     @     0x55b75c1ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15810)[0m     @     0x55b75c121689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15810)[0m     @     0x55b75c1abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15810)[0m     @     0x55b75c1ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15810)[0m     @     0x55b75c121689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15810)[0m     @     0x55b75c1abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15810)[0m     @     0x55b75c1ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15810)[0m     @     0x55b75c121689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15810)[0m     @     0x55b75c1abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15752)[0m     @     0x7ef3233e3148 at::Tensor::copy_()
[2m[36m(pid=15752)[0m     @     0x7ef324fda989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15752)[0m     @     0x7ef3232db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15752)[0m     @     0x7ef3233e3148 at::Tensor::copy_()
[2m[36m(pid=15752)[0m     @     0x7ef329699bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15752)[0m     @     0x5649862dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15752)[0m     @     0x56498623ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15752)[0m     @     0x5649862c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15752)[0m     @     0x5649862c6a20 method_vectorcall
[2m[36m(pid=15752)[0m     @     0x56498623abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15752)[0m     @     0x5649862c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15752)[0m     @     0x5649862c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15752)[0m     @     0x56498623b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15752)[0m     @     0x5649862c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15752)[0m     @     0x5649862c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15752)[0m     @     0x56498623b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15752)[0m     @     0x5649862c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15752)[0m     @     0x5649862c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15752)[0m     @     0x56498623b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15752)[0m     @     0x5649862c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x7f2709e10148 at::Tensor::copy_()
[2m[36m(pid=15811)[0m     @     0x7f270ba07989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15811)[0m     @     0x7f2709d085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15811)[0m     @     0x7f2709e10148 at::Tensor::copy_()
[2m[36m(pid=15811)[0m     @     0x7f27100c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15811)[0m     @     0x55959d8a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15811)[0m     @     0x55959d804b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15811)[0m     @     0x55959d88fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x55959d890a20 method_vectorcall
[2m[36m(pid=15811)[0m     @     0x55959d804bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x7f236b72e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15845)[0m     @     0x7f2369a2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15845)[0m     @     0x7f2369b37148 at::Tensor::copy_()
[2m[36m(pid=15845)[0m     @     0x7f236fdedbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15845)[0m     @     0x5618e7ce1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15845)[0m     @     0x5618e7c3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x5618e7cc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15845)[0m     @     0x5618e7cc8a20 method_vectorcall
[2m[36m(pid=15845)[0m     @     0x5618e7c3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x5618e7cc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15845)[0m     @     0x5618e7cc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15845)[0m     @     0x5618e7c3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x5618e7cc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15845)[0m     @     0x5618e7cc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15845)[0m     @     0x5618e7c3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x5618e7cc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15845)[0m     @     0x5618e7cc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15845)[0m     @     0x5618e7c3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15845)[0m     @     0x5618e7cc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x7ef0165d6148 at::Tensor::copy_()
[2m[36m(pid=15759)[0m     @     0x7ef0181cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15759)[0m     @     0x7ef0164ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15759)[0m     @     0x7ef0165d6148 at::Tensor::copy_()
[2m[36m(pid=15759)[0m     @     0x7ef01c88cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15759)[0m     @     0x562b95034fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15759)[0m     @     0x562b94f8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15759)[0m     @     0x562b9501abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x562b9501ba20 method_vectorcall
[2m[36m(pid=15759)[0m     @     0x562b94f8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15759)[0m     @     0x562b9501abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x562b9501b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15759)[0m     @     0x562b94f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15759)[0m     @     0x562b9501abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x562b9501b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15841)[0m     @     0x7fae356d1148 at::Tensor::copy_()
[2m[36m(pid=15841)[0m     @     0x7fae372c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15841)[0m     @     0x7fae355c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15841)[0m     @     0x7fae356d1148 at::Tensor::copy_()
[2m[36m(pid=15841)[0m     @     0x7fae3b987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15841)[0m     @     0x55d98486dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15841)[0m     @     0x55d9847c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15841)[0m     @     0x55d984853baf _PyEval_EvalCodeWithName
[2m[36m(pid=15841)[0m     @     0x55d984854a20 method_vectorcall
[2m[36m(pid=15841)[0m     @     0x55d9847c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15841)[0m     @     0x55d984853baf _PyEval_EvalCodeWithName
[2m[36m(pid=15841)[0m     @     0x55d984854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15841)[0m     @     0x55d9847c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15841)[0m     @     0x55d984853baf _PyEval_EvalCodeWithName
[2m[36m(pid=15841)[0m     @     0x55d984854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15841)[0m     @     0x55d9847c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15841)[0m     @     0x55d984853baf _PyEval_EvalCodeWithName
[2m[36m(pid=15841)[0m     @     0x55d984854643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15841)[0m     @     0x55d9847c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15841)[0m     @     0x55d984853baf _PyEval_EvalCodeWithName
[2m[36m(pid=15762)[0m     @     0x7f0823410148 at::Tensor::copy_()
[2m[36m(pid=15762)[0m     @     0x7f0825007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15762)[0m     @     0x7f08233085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15762)[0m     @     0x7f0823410148 at::Tensor::copy_()
[2m[36m(pid=15762)[0m     @     0x7f08296c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15762)[0m     @     0x55bae14c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15762)[0m     @     0x55bae141cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15762)[0m     @     0x55bae14a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15762)[0m     @     0x55bae14a8a20 method_vectorcall
[2m[36m(pid=15762)[0m     @     0x55bae141cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15762)[0m     @     0x55bae14a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15762)[0m     @     0x55bae14a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15762)[0m     @     0x55bae141d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15762)[0m     @     0x55bae14a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15762)[0m     @     0x55bae14a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15762)[0m     @     0x55bae141d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15762)[0m     @     0x55bae14a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15762)[0m     @     0x55bae14a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15762)[0m     @     0x55bae141d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15762)[0m     @     0x55bae14a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15748)[0m     @     0x7f611eca8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15748)[0m     @     0x7f611cfa95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15748)[0m     @     0x7f611d0b1148 at::Tensor::copy_()
[2m[36m(pid=15748)[0m     @     0x7f6123367bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15748)[0m     @     0x5578d7182fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15748)[0m     @     0x5578d70ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15748)[0m     @     0x5578d7168baf _PyEval_EvalCodeWithName
[2m[36m(pid=15748)[0m     @     0x5578d7169a20 method_vectorcall
[2m[36m(pid=15748)[0m     @     0x5578d70ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15748)[0m     @     0x5578d7168baf _PyEval_EvalCodeWithName
[2m[36m(pid=15748)[0m     @     0x5578d7169643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15748)[0m     @     0x5578d70de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15748)[0m     @     0x5578d7168baf _PyEval_EvalCodeWithName
[2m[36m(pid=15748)[0m     @     0x5578d7169643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15748)[0m     @     0x5578d70de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15748)[0m     @     0x5578d7168baf _PyEval_EvalCodeWithName
[2m[36m(pid=15748)[0m     @     0x5578d7169643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15748)[0m     @     0x5578d70de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15748)[0m     @     0x5578d7168baf _PyEval_EvalCodeWithName
[2m[36m(pid=15827)[0m     @     0x7fb98ea45148 at::Tensor::copy_()
[2m[36m(pid=15827)[0m     @     0x7fb99063c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15827)[0m     @     0x7fb98e93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15827)[0m     @     0x7fb98ea45148 at::Tensor::copy_()
[2m[36m(pid=15827)[0m     @     0x7fb994cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15827)[0m     @     0x55f5396b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15827)[0m     @     0x55f53960db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15827)[0m     @     0x55f539698baf _PyEval_EvalCodeWithName
[2m[36m(pid=15827)[0m     @     0x55f539699a20 method_vectorcall
[2m[36m(pid=15827)[0m     @     0x55f53960dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15827)[0m     @     0x55f539698baf _PyEval_EvalCodeWithName
[2m[36m(pid=15827)[0m     @     0x55f539699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15827)[0m     @     0x55f53960e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15827)[0m     @     0x55f539698baf _PyEval_EvalCodeWithName
[2m[36m(pid=15827)[0m     @     0x55f539699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15827)[0m     @     0x55f53960e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15827)[0m     @     0x55f539698baf _PyEval_EvalCodeWithName
[2m[36m(pid=15827)[0m     @     0x55f539699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15827)[0m     @     0x55f53960e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15827)[0m     @     0x55f539698baf _PyEval_EvalCodeWithName
[2m[36m(pid=15821)[0m     @     0x7ef7dd0ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15821)[0m     @     0x7ef7db3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15821)[0m     @     0x7ef7db4f7148 at::Tensor::copy_()
[2m[36m(pid=15821)[0m     @     0x7ef7e17adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15821)[0m     @     0x56432a787fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15821)[0m     @     0x56432a6e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15821)[0m     @     0x56432a76dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15821)[0m     @     0x56432a76ea20 method_vectorcall
[2m[36m(pid=15821)[0m     @     0x56432a6e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15821)[0m     @     0x56432a76dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15821)[0m     @     0x56432a76e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15821)[0m     @     0x56432a6e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15821)[0m     @     0x56432a76dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15821)[0m     @     0x56432a76e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15821)[0m     @     0x56432a6e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15821)[0m     @     0x56432a76dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15821)[0m     @     0x56432a76e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15821)[0m     @     0x56432a6e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15821)[0m     @     0x56432a76dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15746)[0m     @     0x7fa9d863c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15746)[0m     @     0x7fa9d693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15746)[0m     @     0x7fa9d6a45148 at::Tensor::copy_()
[2m[36m(pid=15746)[0m     @     0x7fa9dccfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15746)[0m     @     0x556ca58dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15746)[0m     @     0x556ca583ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15746)[0m     @     0x556ca58c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15746)[0m     @     0x556ca58c6a20 method_vectorcall
[2m[36m(pid=15746)[0m     @     0x556ca583abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15746)[0m     @     0x556ca58c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15746)[0m     @     0x556ca58c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15746)[0m     @     0x556ca583b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15746)[0m     @     0x556ca58c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15746)[0m     @     0x556ca58c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15746)[0m     @     0x556ca583b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15746)[0m     @     0x556ca58c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15746)[0m     @     0x556ca58c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15746)[0m     @     0x556ca583b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15746)[0m     @     0x556ca58c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x7ef2a19f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15739)[0m     @     0x7ef2a19f0c3f at::native::copy_impl()
[2m[36m(pid=15739)[0m     @     0x7ef2a19f1ed4 at::native::copy_()
[2m[36m(pid=15739)[0m     @     0x7ef2a21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15766)[0m     @     0x7f25b0340e11 at::TensorIterator::for_each()
[2m[36m(pid=15766)[0m     @     0x7f25b3059c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15766)[0m     @     0x7f25b307ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15766)[0m     @     0x7f25b00ba009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15766)[0m     @     0x7f25b00b8c3f at::native::copy_impl()
[2m[36m(pid=15834)[0m     @     0x7ee6cb58ab53 at::TensorIterator::for_each()
[2m[36m(pid=15834)[0m     @     0x7ee6cb58ae11 at::TensorIterator::for_each()
[2m[36m(pid=15834)[0m     @     0x7ee6ce2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15834)[0m     @     0x7ee6ce2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15753)[0m     @     0x7eeed108ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15753)[0m     @     0x7eeed10adcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15753)[0m     @     0x7eeece0eb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15753)[0m     @     0x7eeece0e9c3f at::native::copy_impl()
[2m[36m(pid=15763)[0m     @     0x7f26aa510ed4 at::native::copy_()
[2m[36m(pid=15763)[0m     @     0x7f26aac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15764)[0m     @     0x7f9bdccf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15764)[0m     @     0x7f9bdccf0c3f at::native::copy_impl()
[2m[36m(pid=15764)[0m     @     0x7f9bdccf1ed4 at::native::copy_()
[2m[36m(pid=15764)[0m     @     0x7f9bdd4345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15852)[0m     @     0x7f689164d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15852)[0m     @     0x7f689164bc3f at::native::copy_impl()
[2m[36m(pid=15852)[0m     @     0x7f689164ced4 at::native::copy_()
[2m[36m(pid=15833)[0m     @     0x7ef8561fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15833)[0m     @     0x7ef8561f9c3f at::native::copy_impl()
[2m[36m(pid=15833)[0m     @     0x7ef8561faed4 at::native::copy_()
[2m[36m(pid=15799)[0m     @     0x7eda898b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15799)[0m     @     0x7eda898b9b53 at::TensorIterator::for_each()
[2m[36m(pid=15747)[0m     @     0x7eff909dbed4 at::native::copy_()
[2m[36m(pid=15747)[0m     @     0x7eff9111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15747)[0m     @     0x7eff91226148 at::Tensor::copy_()
[2m[36m(pid=15749)[0m     @     0x7f1e40ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15749)[0m     @     0x7f1e40adfc3f at::native::copy_impl()
[2m[36m(pid=15749)[0m     @     0x7f1e40ae0ed4 at::native::copy_()
[2m[36m(pid=15824)[0m     @     0x7f0461365e11 at::TensorIterator::for_each()
[2m[36m(pid=15824)[0m     @     0x7f046407ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15824)[0m     @     0x7f04640a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15824)[0m     @     0x7f04610df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15824)[0m     @     0x7f04610ddc3f at::native::copy_impl()
[2m[36m(pid=15824)[0m     @     0x7f04610deed4 at::native::copy_()
[2m[36m(pid=15794)[0m     @     0x7fa90839d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15794)[0m     @     0x7fa90839bc3f at::native::copy_impl()
[2m[36m(pid=15794)[0m     @     0x7fa90839ced4 at::native::copy_()
[2m[36m(pid=15794)[0m     @     0x7fa908adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15750)[0m     @     0x7f7ea6ddbc3f at::native::copy_impl()
[2m[36m(pid=15750)[0m     @     0x7f7ea6ddced4 at::native::copy_()
[2m[36m(pid=15750)[0m     @     0x7f7ea751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15756)[0m     @     0x7fa719520ed4 at::native::copy_()
[2m[36m(pid=15756)[0m     @     0x7fa719c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15804)[0m     @     0x7f112ae4ce11 at::TensorIterator::for_each()
[2m[36m(pid=15804)[0m     @     0x7f112db65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15804)[0m     @     0x7f112db88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15804)[0m     @     0x7f112abc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15804)[0m     @     0x7f112abc4c3f at::native::copy_impl()
[2m[36m(pid=15825)[0m     @     0x7fbe2a0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15825)[0m     @     0x7fbe270f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15825)[0m     @     0x7fbe270f1c3f at::native::copy_impl()
[2m[36m(pid=15825)[0m     @     0x7fbe270f2ed4 at::native::copy_()
[2m[36m(pid=15803)[0m     @     0x7fa49111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15803)[0m     @     0x7fa491226148 at::Tensor::copy_()
[2m[36m(pid=15803)[0m     @     0x7fa4974dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15803)[0m     @     0x556404c4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15803)[0m     @     0x556404ba9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15803)[0m     @     0x556404c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=15803)[0m     @     0x556404c35a20 method_vectorcall
[2m[36m(pid=15803)[0m     @     0x556404ba9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15803)[0m     @     0x556404c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=15803)[0m     @     0x556404c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15803)[0m     @     0x556404baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15803)[0m     @     0x556404c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=15803)[0m     @     0x556404c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15803)[0m     @     0x556404baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15803)[0m     @     0x556404c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=15803)[0m     @     0x556404c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15803)[0m     @     0x556404baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15803)[0m     @     0x556404c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x7f2d9be23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15823)[0m     @     0x7f2d9be21c3f at::native::copy_impl()
[2m[36m(pid=15823)[0m     @     0x7f2d9be22ed4 at::native::copy_()
[2m[36m(pid=15797)[0m     @     0x7fcbcc5fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15797)[0m     @     0x7fcbcc703148 at::Tensor::copy_()
[2m[36m(pid=15797)[0m     @     0x7fcbd29b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15797)[0m     @     0x55ef8ce31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15797)[0m     @     0x55ef8cd8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15797)[0m     @     0x55ef8ce17baf _PyEval_EvalCodeWithName
[2m[36m(pid=15797)[0m     @     0x55ef8ce18a20 method_vectorcall
[2m[36m(pid=15797)[0m     @     0x55ef8cd8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15797)[0m     @     0x55ef8ce17baf _PyEval_EvalCodeWithName
[2m[36m(pid=15797)[0m     @     0x55ef8ce18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15797)[0m     @     0x55ef8cd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15797)[0m     @     0x55ef8ce17baf _PyEval_EvalCodeWithName
[2m[36m(pid=15797)[0m     @     0x55ef8ce18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15797)[0m     @     0x55ef8cd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15797)[0m     @     0x55ef8ce17baf _PyEval_EvalCodeWithName
[2m[36m(pid=15797)[0m     @     0x55ef8ce18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15797)[0m     @     0x55ef8cd8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15797)[0m     @     0x55ef8ce17baf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x7f53d78f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15818)[0m     @     0x7f53d78f4c3f at::native::copy_impl()
[2m[36m(pid=15818)[0m     @     0x7f53d78f5ed4 at::native::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53d80385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15754)[0m     @     0x7f35db1b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15754)[0m     @     0x7f35d81f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15754)[0m     @     0x7f35d81f1c3f at::native::copy_impl()
[2m[36m(pid=15754)[0m     @     0x7f35d81f2ed4 at::native::copy_()
[2m[36m(pid=15754)[0m     @     0x7f35d89355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15743)[0m     @     0x7f0e382f5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=15743)[0m     @     0x7f0e382f5b53 at::TensorIterator::for_each()
[2m[36m(pid=15819)[0m     @     0x7fba6b78dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15819)[0m     @     0x7fba687cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15819)[0m     @     0x7fba687c9c3f at::native::copy_impl()
[2m[36m(pid=15819)[0m     @     0x7fba687caed4 at::native::copy_()
[2m[36m(pid=15819)[0m     @     0x7fba68f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15816)[0m     @     0x7f2069783148 at::Tensor::copy_()
[2m[36m(pid=15816)[0m     @     0x7f206fa39bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15816)[0m     @     0x55ab90fdffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15816)[0m     @     0x55ab90f3ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15816)[0m     @     0x55ab90fc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15816)[0m     @     0x55ab90fc6a20 method_vectorcall
[2m[36m(pid=15816)[0m     @     0x55ab90f3abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15816)[0m     @     0x55ab90fc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15816)[0m     @     0x55ab90fc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15816)[0m     @     0x55ab90f3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15816)[0m     @     0x55ab90fc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15816)[0m     @     0x55ab90fc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15816)[0m     @     0x55ab90f3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15816)[0m     @     0x55ab90fc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15816)[0m     @     0x55ab90fc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15816)[0m     @     0x55ab90f3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15816)[0m     @     0x55ab90fc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15848)[0m     @     0x5566c91c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15848)[0m     @     0x5566c91c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15848)[0m     @     0x5566c913d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15848)[0m     @     0x5566c91c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15848)[0m     @     0x5566c91c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15848)[0m     @     0x5566c913d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15848)[0m     @     0x5566c91c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15813)[0m     @     0x559a995c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15813)[0m     @     0x559a995c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15813)[0m     @     0x559a9953b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15813)[0m     @     0x559a995c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15813)[0m     @     0x559a995c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15813)[0m     @     0x559a9953b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15813)[0m     @     0x559a995c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x7fa5f818bed4 at::native::copy_()
[2m[36m(pid=15815)[0m     @     0x7f41ac140148 at::Tensor::copy_()
[2m[36m(pid=15815)[0m     @     0x7f41add37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15815)[0m     @     0x7f41ac0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15760)[0m     @     0x7fc1d602b148 at::Tensor::copy_()
[2m[36m(pid=15760)[0m     @     0x7fc1dc2e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15760)[0m     @     0x5572173e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15760)[0m     @     0x557217343b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15760)[0m     @     0x5572173cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15760)[0m     @     0x5572173cfa20 method_vectorcall
[2m[36m(pid=15760)[0m     @     0x557217343bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15760)[0m     @     0x5572173cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15760)[0m     @     0x5572173cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15760)[0m     @     0x557217344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15760)[0m     @     0x5572173cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15760)[0m     @     0x5572173cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15760)[0m     @     0x557217344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15760)[0m     @     0x5572173cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15760)[0m     @     0x5572173cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15760)[0m     @     0x557217344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15760)[0m     @     0x5572173cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x7f370084bed4 at::native::copy_()
[2m[36m(pid=15805)[0m     @     0x7f3700f8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15805)[0m     @     0x7f3701096148 at::Tensor::copy_()
[2m[36m(pid=15862)[0m     @     0x7f984ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15862)[0m     @     0x7f984bb4e148 at::Tensor::copy_()
[2m[36m(pid=15738)[0m     @     0x5635fe3a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15738)[0m     @     0x5635fe433baf _PyEval_EvalCodeWithName
[2m[36m(pid=15738)[0m     @     0x5635fe434a20 method_vectorcall
[2m[36m(pid=15738)[0m     @     0x5635fe3a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15738)[0m     @     0x5635fe433baf _PyEval_EvalCodeWithName
[2m[36m(pid=15738)[0m     @     0x5635fe434643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15738)[0m     @     0x5635fe3a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15738)[0m     @     0x5635fe433baf _PyEval_EvalCodeWithName
[2m[36m(pid=15738)[0m     @     0x5635fe434643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15738)[0m     @     0x5635fe3a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15738)[0m     @     0x5635fe433baf _PyEval_EvalCodeWithName
[2m[36m(pid=15738)[0m     @     0x5635fe434643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15738)[0m     @     0x5635fe3a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15738)[0m     @     0x5635fe433baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x7f13833b4ed4 at::native::copy_()
[2m[36m(pid=15840)[0m     @     0x7f1383af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15840)[0m     @     0x7f1383bff148 at::Tensor::copy_()
[2m[36m(pid=15830)[0m     @     0x7f8519fe3ed4 at::native::copy_()
[2m[36m(pid=15830)[0m     @     0x7f851a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15830)[0m     @     0x7f851a82e148 at::Tensor::copy_()
[2m[36m(pid=15822)[0m     @     0x7fcc570d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15822)[0m     @     0x7fcc571e0148 at::Tensor::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f833b4ed4 at::native::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f83af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15858)[0m     @     0x7f0873165e11 at::TensorIterator::for_each()
[2m[36m(pid=15858)[0m     @     0x7f0875e7ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15858)[0m     @     0x7f0875ea1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15858)[0m     @     0x7f0872edf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15858)[0m     @     0x7f0872eddc3f at::native::copy_impl()
[2m[36m(pid=15843)[0m     @     0x7f6cb41e2e11 at::TensorIterator::for_each()
[2m[36m(pid=15843)[0m     @     0x7f6cb6efbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15843)[0m     @     0x7f6cb6f1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15866)[0m     @     0x7f8c52097ed4 at::native::copy_()
[2m[36m(pid=15866)[0m     @     0x7f8c527da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15857)[0m     @     0x55d2d7a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15857)[0m     @     0x55d2d7a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15857)[0m     @     0x55d2d7a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15857)[0m     @     0x55d2d7a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15807)[0m     @     0x55ad2f7a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x55ad2f831baf _PyEval_EvalCodeWithName
[2m[36m(pid=15807)[0m     @     0x55ad2f832a20 method_vectorcall
[2m[36m(pid=15807)[0m     @     0x55ad2f7a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x55ad2f831baf _PyEval_EvalCodeWithName
[2m[36m(pid=15807)[0m     @     0x55ad2f832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15807)[0m     @     0x55ad2f7a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x55ad2f831baf _PyEval_EvalCodeWithName
[2m[36m(pid=15807)[0m     @     0x55ad2f832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15807)[0m     @     0x55ad2f7a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x55ad2f831baf _PyEval_EvalCodeWithName
[2m[36m(pid=15807)[0m     @     0x55ad2f832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15807)[0m     @     0x55ad2f7a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15807)[0m     @     0x55ad2f831baf _PyEval_EvalCodeWithName
[2m[36m(pid=15757)[0m     @     0x559e3d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15757)[0m     @     0x559e3d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15757)[0m     @     0x559e3d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15757)[0m     @     0x559e3d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15812)[0m     @     0x7fcbb1b21bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15812)[0m     @     0x56106bf55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15812)[0m     @     0x56106beb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x56106bf3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15812)[0m     @     0x56106bf3ca20 method_vectorcall
[2m[36m(pid=15812)[0m     @     0x56106beb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x56106bf3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15812)[0m     @     0x56106bf3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15812)[0m     @     0x56106beb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x56106bf3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15812)[0m     @     0x56106bf3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15812)[0m     @     0x56106beb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x56106bf3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15812)[0m     @     0x56106bf3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15812)[0m     @     0x56106beb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15812)[0m     @     0x56106bf3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15798)[0m     @     0x55dc86a04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15798)[0m     @     0x55dc86a8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15798)[0m     @     0x55dc86a90a20 method_vectorcall
[2m[36m(pid=15798)[0m     @     0x55dc86a04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15798)[0m     @     0x55dc86a8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15798)[0m     @     0x55dc86a90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15798)[0m     @     0x55dc86a05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15798)[0m     @     0x55dc86a8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15798)[0m     @     0x55dc86a90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15798)[0m     @     0x55dc86a05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15798)[0m     @     0x55dc86a8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15798)[0m     @     0x55dc86a90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15798)[0m     @     0x55dc86a05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15798)[0m     @     0x55dc86a8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15741)[0m     @     0x7f0af8944148 at::Tensor::copy_()
[2m[36m(pid=15741)[0m     @     0x7f0afebfabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15741)[0m     @     0x5570d9850fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15741)[0m     @     0x5570d97abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15741)[0m     @     0x5570d9836baf _PyEval_EvalCodeWithName
[2m[36m(pid=15741)[0m     @     0x5570d9837a20 method_vectorcall
[2m[36m(pid=15741)[0m     @     0x5570d97abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15741)[0m     @     0x5570d9836baf _PyEval_EvalCodeWithName
[2m[36m(pid=15741)[0m     @     0x5570d9837643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15741)[0m     @     0x5570d97ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15741)[0m     @     0x5570d9836baf _PyEval_EvalCodeWithName
[2m[36m(pid=15741)[0m     @     0x5570d9837643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15741)[0m     @     0x5570d97ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15741)[0m     @     0x5570d9836baf _PyEval_EvalCodeWithName
[2m[36m(pid=15741)[0m     @     0x5570d9837643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15741)[0m     @     0x5570d97ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15741)[0m     @     0x5570d9836baf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x560a25818689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15809)[0m     @     0x560a258a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x560a258a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15809)[0m     @     0x560a25818689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15809)[0m     @     0x560a258a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15809)[0m     @     0x560a258a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15809)[0m     @     0x560a25818689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15809)[0m     @     0x560a258a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x56430d890689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15771)[0m     @     0x56430d91abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15771)[0m     @     0x56430d91b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15771)[0m     @     0x56430d890689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15771)[0m     @     0x56430d91abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x7f190202b148 at::Tensor::copy_()
[2m[36m(pid=15758)[0m     @     0x7f1903c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15758)[0m     @     0x7f1901f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15744)[0m     @     0x7f19f73e3148 at::Tensor::copy_()
[2m[36m(pid=15744)[0m     @     0x7f19f8fda989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15742)[0m     @     0x7f0722603148 at::Tensor::copy_()
[2m[36m(pid=15742)[0m     @     0x7f07241fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15742)[0m     @     0x7f07224fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15826)[0m     @     0x7f222385e148 at::Tensor::copy_()
[2m[36m(pid=15826)[0m     @     0x7f2225455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15770)[0m     @     0x7f26c469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15770)[0m     @     0x7f26c47a6148 at::Tensor::copy_()
[2m[36m(pid=15770)[0m     @     0x7f26c639d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15855)[0m     @     0x7ee02b42fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15855)[0m     @     0x55a1fad06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15855)[0m     @     0x55a1fac61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15855)[0m     @     0x55a1facecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15855)[0m     @     0x55a1faceda20 method_vectorcall
[2m[36m(pid=15855)[0m     @     0x55a1fac61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15855)[0m     @     0x55a1facecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15855)[0m     @     0x55a1faced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15855)[0m     @     0x55a1fac62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15855)[0m     @     0x55a1facecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15855)[0m     @     0x55a1faced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15855)[0m     @     0x55a1fac62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15855)[0m     @     0x55a1facecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15855)[0m     @     0x55a1faced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15855)[0m     @     0x55a1fac62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15855)[0m     @     0x55a1facecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x7fa053b2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15769)[0m     @     0x7fa053c33148 at::Tensor::copy_()
[2m[36m(pid=15769)[0m     @     0x7fa05582a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15873)[0m     @     0x7fb611fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15873)[0m     @     0x7fb6120d6148 at::Tensor::copy_()
[2m[36m(pid=15873)[0m     @     0x7fb613ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15873)[0m     @     0x7fb611fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15860)[0m     @     0x7f98da7b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15860)[0m     @     0x7f98d8ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15860)[0m     @     0x7f98d8bba148 at::Tensor::copy_()
[2m[36m(pid=15860)[0m     @     0x7f98dee70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15860)[0m     @     0x5622e11befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15860)[0m     @     0x5622e1119b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15860)[0m     @     0x5622e11a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15860)[0m     @     0x5622e11a5a20 method_vectorcall
[2m[36m(pid=15860)[0m     @     0x5622e1119bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15860)[0m     @     0x5622e11a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15860)[0m     @     0x5622e11a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15860)[0m     @     0x5622e111a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15860)[0m     @     0x5622e11a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15860)[0m     @     0x5622e11a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15860)[0m     @     0x5622e111a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15860)[0m     @     0x5622e11a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15860)[0m     @     0x5622e11a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15860)[0m     @     0x5622e111a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15860)[0m     @     0x5622e11a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x55959d88fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x55959d890643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15811)[0m     @     0x55959d805689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15811)[0m     @     0x55959d88fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x55959d890643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15811)[0m     @     0x55959d805689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15811)[0m     @     0x55959d88fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15811)[0m     @     0x55959d890643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15811)[0m     @     0x55959d805689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15811)[0m     @     0x55959d88fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x562b94f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15759)[0m     @     0x562b9501abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15759)[0m     @     0x562b9501b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15759)[0m     @     0x562b94f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15759)[0m     @     0x562b9501abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x7ef2a223c148 at::Tensor::copy_()
[2m[36m(pid=15739)[0m     @     0x7ef2a3e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15739)[0m     @     0x7ef2a21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15766)[0m     @     0x7f25b00b9ed4 at::native::copy_()
[2m[36m(pid=15766)[0m     @     0x7f25b07fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15834)[0m     @     0x7ee6cb304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15834)[0m     @     0x7ee6cb302c3f at::native::copy_impl()
[2m[36m(pid=15834)[0m     @     0x7ee6cb303ed4 at::native::copy_()
[2m[36m(pid=15834)[0m     @     0x7ee6cba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15753)[0m     @     0x7eeece0eaed4 at::native::copy_()
[2m[36m(pid=15753)[0m     @     0x7eeece82d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15753)[0m     @     0x7eeece935148 at::Tensor::copy_()
[2m[36m(pid=15753)[0m     @     0x7eeed052c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15763)[0m     @     0x7f26aad5b148 at::Tensor::copy_()
[2m[36m(pid=15763)[0m     @     0x7f26ac952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15763)[0m     @     0x7f26aac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15763)[0m     @     0x7f26aad5b148 at::Tensor::copy_()
[2m[36m(pid=15763)[0m     @     0x7f26b1011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15763)[0m     @     0x55d9221c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15763)[0m     @     0x55d92211eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x7f9bdd53c148 at::Tensor::copy_()
[2m[36m(pid=15764)[0m     @     0x7f9bdf133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15764)[0m     @     0x7f9bdd4345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15764)[0m     @     0x7f9bdd53c148 at::Tensor::copy_()
[2m[36m(pid=15764)[0m     @     0x7f9be37f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15764)[0m     @     0x55dc456b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15764)[0m     @     0x55dc4560bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x55dc45696baf _PyEval_EvalCodeWithName
[2m[36m(pid=15764)[0m     @     0x55dc45697a20 method_vectorcall
[2m[36m(pid=15764)[0m     @     0x55dc4560bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x55dc45696baf _PyEval_EvalCodeWithName
[2m[36m(pid=15764)[0m     @     0x55dc45697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15764)[0m     @     0x55dc4560c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x55dc45696baf _PyEval_EvalCodeWithName
[2m[36m(pid=15764)[0m     @     0x55dc45697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15764)[0m     @     0x55dc4560c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x55dc45696baf _PyEval_EvalCodeWithName
[2m[36m(pid=15764)[0m     @     0x55dc45697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15764)[0m     @     0x55dc4560c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15764)[0m     @     0x55dc45696baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x7f6891d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15852)[0m     @     0x7f6891e97148 at::Tensor::copy_()
[2m[36m(pid=15852)[0m     @     0x7f6893a8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15852)[0m     @     0x7f6891d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15833)[0m     @     0x7ef85693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15833)[0m     @     0x7ef856a45148 at::Tensor::copy_()
[2m[36m(pid=15833)[0m     @     0x7ef85863c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15833)[0m     @     0x7ef85693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15747)[0m     @     0x7eff92e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15747)[0m     @     0x7eff9111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15747)[0m     @     0x7eff91226148 at::Tensor::copy_()
[2m[36m(pid=15747)[0m     @     0x7eff974dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15747)[0m     @     0x55ce17c0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15747)[0m     @     0x55ce17b65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15747)[0m     @     0x55ce17bf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15747)[0m     @     0x55ce17bf1a20 method_vectorcall
[2m[36m(pid=15747)[0m     @     0x55ce17b65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15747)[0m     @     0x55ce17bf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15747)[0m     @     0x55ce17bf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15747)[0m     @     0x55ce17b66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15747)[0m     @     0x55ce17bf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15747)[0m     @     0x55ce17bf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15747)[0m     @     0x55ce17b66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15747)[0m     @     0x55ce17bf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15747)[0m     @     0x55ce17bf1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15747)[0m     @     0x55ce17b66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15747)[0m     @     0x55ce17bf0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x7f1e412235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15749)[0m     @     0x7f1e4132b148 at::Tensor::copy_()
[2m[36m(pid=15749)[0m     @     0x7f1e42f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15749)[0m     @     0x7f1e412235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15824)[0m     @     0x7f04618215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15824)[0m     @     0x7f0461929148 at::Tensor::copy_()
[2m[36m(pid=15794)[0m     @     0x7fa908be7148 at::Tensor::copy_()
[2m[36m(pid=15794)[0m     @     0x7fa90a7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15750)[0m     @     0x7f7ea7627148 at::Tensor::copy_()
[2m[36m(pid=15750)[0m     @     0x7f7ea921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15750)[0m     @     0x7f7ea751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15756)[0m     @     0x7fa719d6b148 at::Tensor::copy_()
[2m[36m(pid=15756)[0m     @     0x7fa71b962989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15804)[0m     @     0x7f112abc5ed4 at::native::copy_()
[2m[36m(pid=15804)[0m     @     0x7f112b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15825)[0m     @     0x7fbe278355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15825)[0m     @     0x7fbe2793d148 at::Tensor::copy_()
[2m[36m(pid=15825)[0m     @     0x7fbe29534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15823)[0m     @     0x7f2d9c5655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15823)[0m     @     0x7f2d9c66d148 at::Tensor::copy_()
[2m[36m(pid=15823)[0m     @     0x7f2d9e264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53d8140148 at::Tensor::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53d9d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53d80385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15754)[0m     @     0x7f35d8a3d148 at::Tensor::copy_()
[2m[36m(pid=15754)[0m     @     0x7f35da634989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15743)[0m     @     0x7f0e382f5e11 at::TensorIterator::for_each()
[2m[36m(pid=15743)[0m     @     0x7f0e3b00ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15743)[0m     @     0x7f0e3b031cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15819)[0m     @     0x7fba69015148 at::Tensor::copy_()
[2m[36m(pid=15819)[0m     @     0x7fba6ac0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15819)[0m     @     0x7fba68f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15815)[0m     @     0x7f41ac140148 at::Tensor::copy_()
[2m[36m(pid=15815)[0m     @     0x7f41b23f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15815)[0m     @     0x55d5d68ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15815)[0m     @     0x55d5d6846b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15815)[0m     @     0x55d5d68d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=15815)[0m     @     0x55d5d68d2a20 method_vectorcall
[2m[36m(pid=15815)[0m     @     0x55d5d6846bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15815)[0m     @     0x55d5d68d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=15815)[0m     @     0x55d5d68d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15815)[0m     @     0x55d5d6847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15815)[0m     @     0x55d5d68d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=15815)[0m     @     0x55d5d68d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15815)[0m     @     0x55d5d6847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15815)[0m     @     0x55d5d68d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=15815)[0m     @     0x55d5d68d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15815)[0m     @     0x55d5d6847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15815)[0m     @     0x55d5d68d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x7f3702c8d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15805)[0m     @     0x7f3700f8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15805)[0m     @     0x7f3701096148 at::Tensor::copy_()
[2m[36m(pid=15805)[0m     @     0x7f370734cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15805)[0m     @     0x55f86804ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15805)[0m     @     0x55f867faab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15805)[0m     @     0x55f868035baf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x55f868036a20 method_vectorcall
[2m[36m(pid=15805)[0m     @     0x55f867faabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15805)[0m     @     0x55f868035baf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x55f868036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15805)[0m     @     0x55f867fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15805)[0m     @     0x55f868035baf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x55f868036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15805)[0m     @     0x55f867fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15805)[0m     @     0x55f868035baf _PyEval_EvalCodeWithName
[2m[36m(pid=15805)[0m     @     0x55f868036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15805)[0m     @     0x55f867fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15805)[0m     @     0x55f868035baf _PyEval_EvalCodeWithName
[2m[36m(pid=15862)[0m     @     0x7f984d745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15862)[0m     @     0x7f984ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15862)[0m     @     0x7f984bb4e148 at::Tensor::copy_()
[2m[36m(pid=15862)[0m     @     0x7f9851e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15862)[0m     @     0x560eddd60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15862)[0m     @     0x560eddcbbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15862)[0m     @     0x560eddd46baf _PyEval_EvalCodeWithName
[2m[36m(pid=15862)[0m     @     0x560eddd47a20 method_vectorcall
[2m[36m(pid=15862)[0m     @     0x560eddcbbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15862)[0m     @     0x560eddd46baf _PyEval_EvalCodeWithName
[2m[36m(pid=15862)[0m     @     0x560eddd47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15862)[0m     @     0x560eddcbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15862)[0m     @     0x560eddd46baf _PyEval_EvalCodeWithName
[2m[36m(pid=15862)[0m     @     0x560eddd47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15862)[0m     @     0x560eddcbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15862)[0m     @     0x560eddd46baf _PyEval_EvalCodeWithName
[2m[36m(pid=15862)[0m     @     0x560eddd47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15862)[0m     @     0x560eddcbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15862)[0m     @     0x560eddd46baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x7f13857f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15840)[0m     @     0x7f1383af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15840)[0m     @     0x7f1383bff148 at::Tensor::copy_()
[2m[36m(pid=15840)[0m     @     0x7f1389eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15840)[0m     @     0x56272b36cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15840)[0m     @     0x56272b2c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15840)[0m     @     0x56272b352baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x56272b353a20 method_vectorcall
[2m[36m(pid=15840)[0m     @     0x56272b2c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15840)[0m     @     0x56272b352baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x56272b353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15840)[0m     @     0x56272b2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15840)[0m     @     0x56272b352baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x56272b353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15840)[0m     @     0x56272b2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15840)[0m     @     0x56272b352baf _PyEval_EvalCodeWithName
[2m[36m(pid=15840)[0m     @     0x56272b353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15840)[0m     @     0x56272b2c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15840)[0m     @     0x56272b352baf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x7f851c425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15830)[0m     @     0x7f851a7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15830)[0m     @     0x7f851a82e148 at::Tensor::copy_()
[2m[36m(pid=15830)[0m     @     0x7f8520ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15830)[0m     @     0x55a783e1cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15830)[0m     @     0x55a783d77b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15830)[0m     @     0x55a783e02baf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x55a783e03a20 method_vectorcall
[2m[36m(pid=15830)[0m     @     0x55a783d77bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15830)[0m     @     0x55a783e02baf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x55a783e03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15830)[0m     @     0x55a783d78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15830)[0m     @     0x55a783e02baf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x55a783e03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15822)[0m     @     0x7fcc58dd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15822)[0m     @     0x7fcc570d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15822)[0m     @     0x7fcc571e0148 at::Tensor::copy_()
[2m[36m(pid=15822)[0m     @     0x7fcc5d496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15822)[0m     @     0x557aa854afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15822)[0m     @     0x557aa84a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15822)[0m     @     0x557aa8530baf _PyEval_EvalCodeWithName
[2m[36m(pid=15822)[0m     @     0x557aa8531a20 method_vectorcall
[2m[36m(pid=15822)[0m     @     0x557aa84a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15822)[0m     @     0x557aa8530baf _PyEval_EvalCodeWithName
[2m[36m(pid=15822)[0m     @     0x557aa8531643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15822)[0m     @     0x557aa84a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15822)[0m     @     0x557aa8530baf _PyEval_EvalCodeWithName
[2m[36m(pid=15822)[0m     @     0x557aa8531643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15822)[0m     @     0x557aa84a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15822)[0m     @     0x557aa8530baf _PyEval_EvalCodeWithName
[2m[36m(pid=15822)[0m     @     0x557aa8531643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15822)[0m     @     0x557aa84a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15822)[0m     @     0x557aa8530baf _PyEval_EvalCodeWithName
[2m[36m(pid=15835)[0m     @     0x7f6f83bff148 at::Tensor::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f857f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f83af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15835)[0m     @     0x7f6f83bff148 at::Tensor::copy_()
[2m[36m(pid=15835)[0m     @     0x7f6f89eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15835)[0m     @     0x55de08c22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15835)[0m     @     0x55de08b7db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15835)[0m     @     0x55de08c08baf _PyEval_EvalCodeWithName
[2m[36m(pid=15835)[0m     @     0x55de08c09a20 method_vectorcall
[2m[36m(pid=15835)[0m     @     0x55de08b7dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15835)[0m     @     0x55de08c08baf _PyEval_EvalCodeWithName
[2m[36m(pid=15835)[0m     @     0x55de08c09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15835)[0m     @     0x55de08b7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15835)[0m     @     0x55de08c08baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x7f0872edeed4 at::native::copy_()
[2m[36m(pid=15858)[0m     @     0x7f08736215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15858)[0m     @     0x7f0873729148 at::Tensor::copy_()
[2m[36m(pid=15843)[0m     @     0x7f6cb3f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15843)[0m     @     0x7f6cb3f5ac3f at::native::copy_impl()
[2m[36m(pid=15843)[0m     @     0x7f6cb3f5bed4 at::native::copy_()
[2m[36m(pid=15843)[0m     @     0x7f6cb469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15866)[0m     @     0x7f8c528e2148 at::Tensor::copy_()
[2m[36m(pid=15866)[0m     @     0x7f8c544d9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15866)[0m     @     0x7f8c527da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15866)[0m     @     0x7f8c528e2148 at::Tensor::copy_()
[2m[36m(pid=15866)[0m     @     0x7f8c58b98bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15866)[0m     @     0x559ea41b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15866)[0m     @     0x559ea4114b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15866)[0m     @     0x559ea419fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x7f190202b148 at::Tensor::copy_()
[2m[36m(pid=15758)[0m     @     0x7f19082e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15758)[0m     @     0x5624a5191fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15758)[0m     @     0x5624a50ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15758)[0m     @     0x5624a5177baf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x5624a5178a20 method_vectorcall
[2m[36m(pid=15758)[0m     @     0x5624a50ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15758)[0m     @     0x5624a5177baf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x5624a5178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15758)[0m     @     0x5624a50ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15758)[0m     @     0x5624a5177baf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x5624a5178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15758)[0m     @     0x5624a50ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15758)[0m     @     0x5624a5177baf _PyEval_EvalCodeWithName
[2m[36m(pid=15758)[0m     @     0x5624a5178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15758)[0m     @     0x5624a50ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15758)[0m     @     0x5624a5177baf _PyEval_EvalCodeWithName
[2m[36m(pid=15744)[0m     @     0x7f19f72db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15744)[0m     @     0x7f19f73e3148 at::Tensor::copy_()
[2m[36m(pid=15744)[0m     @     0x7f19fd699bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15744)[0m     @     0x55fb6f792fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15744)[0m     @     0x55fb6f6edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15744)[0m     @     0x55fb6f778baf _PyEval_EvalCodeWithName
[2m[36m(pid=15744)[0m     @     0x55fb6f779a20 method_vectorcall
[2m[36m(pid=15744)[0m     @     0x55fb6f6edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15744)[0m     @     0x55fb6f778baf _PyEval_EvalCodeWithName
[2m[36m(pid=15744)[0m     @     0x55fb6f779643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15744)[0m     @     0x55fb6f6ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15744)[0m     @     0x55fb6f778baf _PyEval_EvalCodeWithName
[2m[36m(pid=15744)[0m     @     0x55fb6f779643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15744)[0m     @     0x55fb6f6ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15744)[0m     @     0x55fb6f778baf _PyEval_EvalCodeWithName
[2m[36m(pid=15744)[0m     @     0x55fb6f779643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15744)[0m     @     0x55fb6f6ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15744)[0m     @     0x55fb6f778baf _PyEval_EvalCodeWithName
[2m[36m(pid=15742)[0m     @     0x7f0722603148 at::Tensor::copy_()
[2m[36m(pid=15742)[0m     @     0x7f07288b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15742)[0m     @     0x55eb31838fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15742)[0m     @     0x55eb31793b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15742)[0m     @     0x55eb3181ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15742)[0m     @     0x55eb3181fa20 method_vectorcall
[2m[36m(pid=15742)[0m     @     0x55eb31793bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15742)[0m     @     0x55eb3181ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15742)[0m     @     0x55eb3181f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15742)[0m     @     0x55eb31794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15742)[0m     @     0x55eb3181ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15742)[0m     @     0x55eb3181f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15742)[0m     @     0x55eb31794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15742)[0m     @     0x55eb3181ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15742)[0m     @     0x55eb3181f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15742)[0m     @     0x55eb31794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15742)[0m     @     0x55eb3181ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15826)[0m     @     0x7f22237565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15826)[0m     @     0x7f222385e148 at::Tensor::copy_()
[2m[36m(pid=15826)[0m     @     0x7f2229b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15826)[0m     @     0x5633398e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15826)[0m     @     0x56333983eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15826)[0m     @     0x5633398c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15826)[0m     @     0x5633398caa20 method_vectorcall
[2m[36m(pid=15826)[0m     @     0x56333983ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15826)[0m     @     0x5633398c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15826)[0m     @     0x5633398ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15826)[0m     @     0x56333983f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15826)[0m     @     0x5633398c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15826)[0m     @     0x5633398ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15826)[0m     @     0x56333983f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15826)[0m     @     0x5633398c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15826)[0m     @     0x5633398ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15826)[0m     @     0x56333983f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15826)[0m     @     0x5633398c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15770)[0m     @     0x7f26c469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15770)[0m     @     0x7f26c47a6148 at::Tensor::copy_()
[2m[36m(pid=15770)[0m     @     0x7f26caa5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15770)[0m     @     0x558c4da5afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15770)[0m     @     0x558c4d9b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15770)[0m     @     0x558c4da40baf _PyEval_EvalCodeWithName
[2m[36m(pid=15770)[0m     @     0x558c4da41a20 method_vectorcall
[2m[36m(pid=15770)[0m     @     0x558c4d9b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15770)[0m     @     0x558c4da40baf _PyEval_EvalCodeWithName
[2m[36m(pid=15770)[0m     @     0x558c4da41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15770)[0m     @     0x558c4d9b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15770)[0m     @     0x558c4da40baf _PyEval_EvalCodeWithName
[2m[36m(pid=15770)[0m     @     0x558c4da41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15770)[0m     @     0x558c4d9b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15770)[0m     @     0x558c4da40baf _PyEval_EvalCodeWithName
[2m[36m(pid=15770)[0m     @     0x558c4da41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15770)[0m     @     0x558c4d9b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15770)[0m     @     0x558c4da40baf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x7fa053b2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15769)[0m     @     0x7fa053c33148 at::Tensor::copy_()
[2m[36m(pid=15769)[0m     @     0x7fa059ee9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15769)[0m     @     0x56305e710fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15769)[0m     @     0x56305e66bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15769)[0m     @     0x56305e6f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x56305e6f7a20 method_vectorcall
[2m[36m(pid=15769)[0m     @     0x56305e66bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15769)[0m     @     0x56305e6f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x56305e6f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15769)[0m     @     0x56305e66c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15769)[0m     @     0x56305e6f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x56305e6f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15769)[0m     @     0x56305e66c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15769)[0m     @     0x56305e6f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15769)[0m     @     0x56305e6f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15769)[0m     @     0x56305e66c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15769)[0m     @     0x56305e6f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x7fb6120d6148 at::Tensor::copy_()
[2m[36m(pid=15873)[0m     @     0x7fb61838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15873)[0m     @     0x55c66dc14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15873)[0m     @     0x55c66db6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x55c66dbfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x55c66dbfba20 method_vectorcall
[2m[36m(pid=15873)[0m     @     0x55c66db6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x55c66dbfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x55c66dbfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x55c66db70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x55c66dbfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x55c66dbfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x55c66db70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x55c66dbfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x55c66dbfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x55c66db70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x55c66dbfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x7ef2a223c148 at::Tensor::copy_()
[2m[36m(pid=15739)[0m     @     0x7ef2a84f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15739)[0m     @     0x562afab87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15739)[0m     @     0x562afaae2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15739)[0m     @     0x562afab6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x562afab6ea20 method_vectorcall
[2m[36m(pid=15739)[0m     @     0x562afaae2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15739)[0m     @     0x562afab6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x562afab6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15739)[0m     @     0x562afaae3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15739)[0m     @     0x562afab6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x562afab6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15739)[0m     @     0x562afaae3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15739)[0m     @     0x562afab6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15739)[0m     @     0x562afab6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15739)[0m     @     0x562afaae3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15739)[0m     @     0x562afab6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x7f25b0904148 at::Tensor::copy_()
[2m[36m(pid=15766)[0m     @     0x7f25b24fb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15766)[0m     @     0x7f25b07fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15834)[0m     @     0x7ee6cbb4e148 at::Tensor::copy_()
[2m[36m(pid=15834)[0m     @     0x7ee6cd745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15753)[0m     @     0x7eeece82d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15753)[0m     @     0x7eeece935148 at::Tensor::copy_()
[2m[36m(pid=15763)[0m     @     0x55d9221a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15763)[0m     @     0x55d9221aaa20 method_vectorcall
[2m[36m(pid=15763)[0m     @     0x55d92211ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15763)[0m     @     0x55d9221a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15763)[0m     @     0x55d9221aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15763)[0m     @     0x55d92211f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15763)[0m     @     0x55d9221a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15763)[0m     @     0x55d9221aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15763)[0m     @     0x55d92211f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15763)[0m     @     0x55d9221a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15763)[0m     @     0x55d9221aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15763)[0m     @     0x55d92211f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15763)[0m     @     0x55d9221a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x7f6891e97148 at::Tensor::copy_()
[2m[36m(pid=15852)[0m     @     0x7f689814dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15852)[0m     @     0x55920701bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15852)[0m     @     0x559206f76b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15852)[0m     @     0x559207001baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x559207002a20 method_vectorcall
[2m[36m(pid=15852)[0m     @     0x559206f76bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15852)[0m     @     0x559207001baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x559207002643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15852)[0m     @     0x559206f77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15852)[0m     @     0x559207001baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x559207002643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15852)[0m     @     0x559206f77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15852)[0m     @     0x559207001baf _PyEval_EvalCodeWithName
[2m[36m(pid=15852)[0m     @     0x559207002643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15852)[0m     @     0x559206f77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15852)[0m     @     0x559207001baf _PyEval_EvalCodeWithName
[2m[36m(pid=15833)[0m     @     0x7ef856a45148 at::Tensor::copy_()
[2m[36m(pid=15833)[0m     @     0x7ef85ccfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15833)[0m     @     0x560289163fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15833)[0m     @     0x5602890beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15833)[0m     @     0x560289149baf _PyEval_EvalCodeWithName
[2m[36m(pid=15833)[0m     @     0x56028914aa20 method_vectorcall
[2m[36m(pid=15833)[0m     @     0x5602890bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15833)[0m     @     0x560289149baf _PyEval_EvalCodeWithName
[2m[36m(pid=15833)[0m     @     0x56028914a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15833)[0m     @     0x5602890bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15833)[0m     @     0x560289149baf _PyEval_EvalCodeWithName
[2m[36m(pid=15833)[0m     @     0x56028914a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15833)[0m     @     0x5602890bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15833)[0m     @     0x560289149baf _PyEval_EvalCodeWithName
[2m[36m(pid=15833)[0m     @     0x56028914a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15833)[0m     @     0x5602890bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15833)[0m     @     0x560289149baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x7f1e4132b148 at::Tensor::copy_()
[2m[36m(pid=15749)[0m     @     0x7f1e475e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15749)[0m     @     0x559323482fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15749)[0m     @     0x5593233ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15749)[0m     @     0x559323468baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x559323469a20 method_vectorcall
[2m[36m(pid=15749)[0m     @     0x5593233ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15749)[0m     @     0x559323468baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x559323469643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15749)[0m     @     0x5593233de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15749)[0m     @     0x559323468baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x559323469643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15749)[0m     @     0x5593233de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15749)[0m     @     0x559323468baf _PyEval_EvalCodeWithName
[2m[36m(pid=15749)[0m     @     0x559323469643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15749)[0m     @     0x5593233de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15749)[0m     @     0x559323468baf _PyEval_EvalCodeWithName
[2m[36m(pid=15824)[0m     @     0x7f0463520989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15824)[0m     @     0x7f04618215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15824)[0m     @     0x7f0461929148 at::Tensor::copy_()
[2m[36m(pid=15824)[0m     @     0x7f0467bdfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15824)[0m     @     0x558771116fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15824)[0m     @     0x558771071b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15824)[0m     @     0x5587710fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15824)[0m     @     0x5587710fda20 method_vectorcall
[2m[36m(pid=15824)[0m     @     0x558771071bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15824)[0m     @     0x5587710fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15824)[0m     @     0x5587710fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15824)[0m     @     0x558771072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15824)[0m     @     0x5587710fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15794)[0m     @     0x7fa908adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15794)[0m     @     0x7fa908be7148 at::Tensor::copy_()
[2m[36m(pid=15794)[0m     @     0x7fa90ee9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15794)[0m     @     0x555fe424bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15794)[0m     @     0x555fe41a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15794)[0m     @     0x555fe4231baf _PyEval_EvalCodeWithName
[2m[36m(pid=15794)[0m     @     0x555fe4232a20 method_vectorcall
[2m[36m(pid=15794)[0m     @     0x555fe41a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15794)[0m     @     0x555fe4231baf _PyEval_EvalCodeWithName
[2m[36m(pid=15794)[0m     @     0x555fe4232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15794)[0m     @     0x555fe41a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15794)[0m     @     0x555fe4231baf _PyEval_EvalCodeWithName
[2m[36m(pid=15794)[0m     @     0x555fe4232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15794)[0m     @     0x555fe41a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15794)[0m     @     0x555fe4231baf _PyEval_EvalCodeWithName
[2m[36m(pid=15794)[0m     @     0x555fe4232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15794)[0m     @     0x555fe41a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15794)[0m     @     0x555fe4231baf _PyEval_EvalCodeWithName
[2m[36m(pid=15750)[0m     @     0x7f7ea7627148 at::Tensor::copy_()
[2m[36m(pid=15750)[0m     @     0x7f7ead8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15750)[0m     @     0x560f5491afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15750)[0m     @     0x560f54875b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15750)[0m     @     0x560f54900baf _PyEval_EvalCodeWithName
[2m[36m(pid=15750)[0m     @     0x560f54901a20 method_vectorcall
[2m[36m(pid=15750)[0m     @     0x560f54875bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15750)[0m     @     0x560f54900baf _PyEval_EvalCodeWithName
[2m[36m(pid=15750)[0m     @     0x560f54901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15750)[0m     @     0x560f54876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15750)[0m     @     0x560f54900baf _PyEval_EvalCodeWithName
[2m[36m(pid=15750)[0m     @     0x560f54901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15750)[0m     @     0x560f54876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15750)[0m     @     0x560f54900baf _PyEval_EvalCodeWithName
[2m[36m(pid=15750)[0m     @     0x560f54901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15750)[0m     @     0x560f54876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15750)[0m     @     0x560f54900baf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x7fa719c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15804)[0m     @     0x7f112b410148 at::Tensor::copy_()
[2m[36m(pid=15804)[0m     @     0x7f112d007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15804)[0m     @     0x7f112b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15804)[0m     @     0x7f112b410148 at::Tensor::copy_()
[2m[36m(pid=15804)[0m     @     0x7f11316c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15825)[0m     @     0x7fbe278355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15825)[0m     @     0x7fbe2793d148 at::Tensor::copy_()
[2m[36m(pid=15825)[0m     @     0x7fbe2dbf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15825)[0m     @     0x55cd03180fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15825)[0m     @     0x55cd030dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15825)[0m     @     0x55cd03166baf _PyEval_EvalCodeWithName
[2m[36m(pid=15825)[0m     @     0x55cd03167a20 method_vectorcall
[2m[36m(pid=15825)[0m     @     0x55cd030dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15825)[0m     @     0x55cd03166baf _PyEval_EvalCodeWithName
[2m[36m(pid=15825)[0m     @     0x55cd03167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15825)[0m     @     0x55cd030dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15825)[0m     @     0x55cd03166baf _PyEval_EvalCodeWithName
[2m[36m(pid=15825)[0m     @     0x55cd03167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15825)[0m     @     0x55cd030dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15825)[0m     @     0x55cd03166baf _PyEval_EvalCodeWithName
[2m[36m(pid=15825)[0m     @     0x55cd03167643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15825)[0m     @     0x55cd030dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15825)[0m     @     0x55cd03166baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x7f2d9c5655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15823)[0m     @     0x7f2d9c66d148 at::Tensor::copy_()
[2m[36m(pid=15823)[0m     @     0x7f2da2923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15823)[0m     @     0x560e370a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15823)[0m     @     0x560e36ffbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15823)[0m     @     0x560e37086baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x560e37087a20 method_vectorcall
[2m[36m(pid=15823)[0m     @     0x560e36ffbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15823)[0m     @     0x560e37086baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x560e37087643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15823)[0m     @     0x560e36ffc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15823)[0m     @     0x560e37086baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x560e37087643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15823)[0m     @     0x560e36ffc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15823)[0m     @     0x560e37086baf _PyEval_EvalCodeWithName
[2m[36m(pid=15823)[0m     @     0x560e37087643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15823)[0m     @     0x560e36ffc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15823)[0m     @     0x560e37086baf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x7f53d8140148 at::Tensor::copy_()
[2m[36m(pid=15818)[0m     @     0x7f53de3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15818)[0m     @     0x56051cae6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15818)[0m     @     0x56051ca41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15818)[0m     @     0x56051caccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x56051cacda20 method_vectorcall
[2m[36m(pid=15818)[0m     @     0x56051ca41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15818)[0m     @     0x56051caccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x56051cacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15818)[0m     @     0x56051ca42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15818)[0m     @     0x56051caccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x56051cacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15818)[0m     @     0x56051ca42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15818)[0m     @     0x56051caccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15818)[0m     @     0x56051cacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15818)[0m     @     0x56051ca42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15818)[0m     @     0x56051caccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15754)[0m     @     0x7f35d89355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15754)[0m     @     0x7f35d8a3d148 at::Tensor::copy_()
[2m[36m(pid=15754)[0m     @     0x7f35decf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15754)[0m     @     0x55c448360fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15754)[0m     @     0x55c4482bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15754)[0m     @     0x55c448346baf _PyEval_EvalCodeWithName
[2m[36m(pid=15754)[0m     @     0x55c448347a20 method_vectorcall
[2m[36m(pid=15754)[0m     @     0x55c4482bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15754)[0m     @     0x55c448346baf _PyEval_EvalCodeWithName
[2m[36m(pid=15754)[0m     @     0x55c448347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15754)[0m     @     0x55c4482bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15754)[0m     @     0x55c448346baf _PyEval_EvalCodeWithName
[2m[36m(pid=15754)[0m     @     0x55c448347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15754)[0m     @     0x55c4482bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15754)[0m     @     0x55c448346baf _PyEval_EvalCodeWithName
[2m[36m(pid=15754)[0m     @     0x55c448347643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15754)[0m     @     0x55c4482bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15754)[0m     @     0x55c448346baf _PyEval_EvalCodeWithName
[2m[36m(pid=15743)[0m     @     0x7f0e3806f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15743)[0m     @     0x7f0e3806dc3f at::native::copy_impl()
[2m[36m(pid=15819)[0m     @     0x7fba69015148 at::Tensor::copy_()
[2m[36m(pid=15819)[0m     @     0x7fba6f2cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15819)[0m     @     0x5638b2cd6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15819)[0m     @     0x5638b2c31b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15819)[0m     @     0x5638b2cbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15819)[0m     @     0x5638b2cbda20 method_vectorcall
[2m[36m(pid=15819)[0m     @     0x5638b2c31bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15819)[0m     @     0x5638b2cbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15819)[0m     @     0x5638b2cbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15819)[0m     @     0x5638b2c32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15819)[0m     @     0x5638b2cbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15819)[0m     @     0x5638b2cbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15819)[0m     @     0x5638b2c32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15819)[0m     @     0x5638b2cbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15819)[0m     @     0x5638b2cbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15819)[0m     @     0x5638b2c32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15819)[0m     @     0x5638b2cbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x55a783d78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15830)[0m     @     0x55a783e02baf _PyEval_EvalCodeWithName
[2m[36m(pid=15830)[0m     @     0x55a783e03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15830)[0m     @     0x55a783d78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15830)[0m     @     0x55a783e02baf _PyEval_EvalCodeWithName
[2m[36m(pid=15835)[0m     @     0x55de08c09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15835)[0m     @     0x55de08b7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15835)[0m     @     0x55de08c08baf _PyEval_EvalCodeWithName
[2m[36m(pid=15835)[0m     @     0x55de08c09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15835)[0m     @     0x55de08b7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15835)[0m     @     0x55de08c08baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x7f0875320989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15858)[0m     @     0x7f08736215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15843)[0m     @     0x7f6cb47a6148 at::Tensor::copy_()
[2m[36m(pid=15843)[0m     @     0x7f6cb639d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15866)[0m     @     0x559ea41a0a20 method_vectorcall
[2m[36m(pid=15866)[0m     @     0x559ea4114bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15866)[0m     @     0x559ea419fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15866)[0m     @     0x559ea41a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15866)[0m     @     0x559ea4115689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15866)[0m     @     0x559ea419fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15866)[0m     @     0x559ea41a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15866)[0m     @     0x559ea4115689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15866)[0m     @     0x559ea419fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15866)[0m     @     0x559ea41a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15866)[0m     @     0x559ea4115689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15866)[0m     @     0x559ea419fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x7f25b0904148 at::Tensor::copy_()
[2m[36m(pid=15766)[0m     @     0x7f25b6bbabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15766)[0m     @     0x5560cc08bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15766)[0m     @     0x5560cbfe6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15766)[0m     @     0x5560cc071baf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x5560cc072a20 method_vectorcall
[2m[36m(pid=15766)[0m     @     0x5560cbfe6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15766)[0m     @     0x5560cc071baf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x5560cc072643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15766)[0m     @     0x5560cbfe7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15766)[0m     @     0x5560cc071baf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x5560cc072643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15766)[0m     @     0x5560cbfe7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15766)[0m     @     0x5560cc071baf _PyEval_EvalCodeWithName
[2m[36m(pid=15766)[0m     @     0x5560cc072643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15766)[0m     @     0x5560cbfe7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15766)[0m     @     0x5560cc071baf _PyEval_EvalCodeWithName
[2m[36m(pid=15834)[0m     @     0x7ee6cba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15834)[0m     @     0x7ee6cbb4e148 at::Tensor::copy_()
[2m[36m(pid=15834)[0m     @     0x7ee6d1e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15834)[0m     @     0x5641d82a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15834)[0m     @     0x5641d81fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15834)[0m     @     0x5641d8286baf _PyEval_EvalCodeWithName
[2m[36m(pid=15834)[0m     @     0x5641d8287a20 method_vectorcall
[2m[36m(pid=15834)[0m     @     0x5641d81fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15834)[0m     @     0x5641d8286baf _PyEval_EvalCodeWithName
[2m[36m(pid=15834)[0m     @     0x5641d8287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15834)[0m     @     0x5641d81fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15834)[0m     @     0x5641d8286baf _PyEval_EvalCodeWithName
[2m[36m(pid=15834)[0m     @     0x5641d8287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15834)[0m     @     0x5641d81fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15834)[0m     @     0x5641d8286baf _PyEval_EvalCodeWithName
[2m[36m(pid=15834)[0m     @     0x5641d8287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15834)[0m     @     0x5641d81fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15834)[0m     @     0x5641d8286baf _PyEval_EvalCodeWithName
[2m[36m(pid=15753)[0m     @     0x7eeed4bebbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15753)[0m     @     0x55c7ffa45fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15753)[0m     @     0x55c7ff9a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15753)[0m     @     0x55c7ffa2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15753)[0m     @     0x55c7ffa2ca20 method_vectorcall
[2m[36m(pid=15753)[0m     @     0x55c7ff9a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15753)[0m     @     0x55c7ffa2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15753)[0m     @     0x55c7ffa2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15753)[0m     @     0x55c7ff9a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15753)[0m     @     0x55c7ffa2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15753)[0m     @     0x55c7ffa2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15753)[0m     @     0x55c7ff9a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15753)[0m     @     0x55c7ffa2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15753)[0m     @     0x55c7ffa2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15753)[0m     @     0x55c7ff9a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15753)[0m     @     0x55c7ffa2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15799)[0m     @     0x7eda898b9e11 at::TensorIterator::for_each()
[2m[36m(pid=15824)[0m     @     0x5587710fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15824)[0m     @     0x558771072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15824)[0m     @     0x5587710fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15824)[0m     @     0x5587710fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15824)[0m     @     0x558771072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15824)[0m     @     0x5587710fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x7fa719d6b148 at::Tensor::copy_()
[2m[36m(pid=15756)[0m     @     0x7fa720021bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15756)[0m     @     0x55ae061a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15756)[0m     @     0x55ae06101b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15756)[0m     @     0x55ae0618cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x55ae0618da20 method_vectorcall
[2m[36m(pid=15756)[0m     @     0x55ae06101bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15756)[0m     @     0x55ae0618cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x55ae0618d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15756)[0m     @     0x55ae06102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15756)[0m     @     0x55ae0618cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x55ae0618d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15756)[0m     @     0x55ae06102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15756)[0m     @     0x55ae0618cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15756)[0m     @     0x55ae0618d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15756)[0m     @     0x55ae06102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15756)[0m     @     0x55ae0618cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15804)[0m     @     0x559d3a822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15804)[0m     @     0x559d3a77db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15804)[0m     @     0x559d3a808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15804)[0m     @     0x559d3a809a20 method_vectorcall
[2m[36m(pid=15804)[0m     @     0x559d3a77dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15804)[0m     @     0x559d3a808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15804)[0m     @     0x559d3a809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15804)[0m     @     0x559d3a77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15804)[0m     @     0x559d3a808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15804)[0m     @     0x559d3a809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15804)[0m     @     0x559d3a77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15804)[0m     @     0x559d3a808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15804)[0m     @     0x559d3a809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15804)[0m     @     0x559d3a77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15804)[0m     @     0x559d3a808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x7fa5f88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15858)[0m     @     0x7f0873729148 at::Tensor::copy_()
[2m[36m(pid=15858)[0m     @     0x7f08799dfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15858)[0m     @     0x563883a3dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15858)[0m     @     0x563883998b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15858)[0m     @     0x563883a23baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x563883a24a20 method_vectorcall
[2m[36m(pid=15858)[0m     @     0x563883998bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15858)[0m     @     0x563883a23baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x563883a24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15858)[0m     @     0x563883999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15858)[0m     @     0x563883a23baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x563883a24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15858)[0m     @     0x563883999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15858)[0m     @     0x563883a23baf _PyEval_EvalCodeWithName
[2m[36m(pid=15858)[0m     @     0x563883a24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15858)[0m     @     0x563883999689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15858)[0m     @     0x563883a23baf _PyEval_EvalCodeWithName
[2m[36m(pid=15843)[0m     @     0x7f6cb469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15843)[0m     @     0x7f6cb47a6148 at::Tensor::copy_()
[2m[36m(pid=15799)[0m     @     0x7eda8c5d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15799)[0m     @     0x7eda8c5f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15743)[0m     @     0x7f0e3806eed4 at::native::copy_()
[2m[36m(pid=15743)[0m     @     0x7f0e387b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15740)[0m     @     0x7fa5f89d6148 at::Tensor::copy_()
[2m[36m(pid=15843)[0m     @     0x7f6cbaa5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15843)[0m     @     0x56518f0b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15843)[0m     @     0x56518f011b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15843)[0m     @     0x56518f09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15843)[0m     @     0x56518f09da20 method_vectorcall
[2m[36m(pid=15843)[0m     @     0x56518f011bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15843)[0m     @     0x56518f09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15843)[0m     @     0x56518f09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15843)[0m     @     0x56518f012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15843)[0m     @     0x56518f09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15843)[0m     @     0x56518f09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15843)[0m     @     0x56518f012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15843)[0m     @     0x56518f09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15843)[0m     @     0x56518f09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15843)[0m     @     0x56518f012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15843)[0m     @     0x56518f09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15799)[0m     @     0x7eda89633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15799)[0m     @     0x7eda89631c3f at::native::copy_impl()
[2m[36m(pid=15743)[0m     @     0x7f0e388b9148 at::Tensor::copy_()
[2m[36m(pid=15743)[0m     @     0x7f0e3a4b0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15740)[0m     @     0x7fa5fa5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15799)[0m     @     0x7eda89632ed4 at::native::copy_()
[2m[36m(pid=15743)[0m     @     0x7f0e387b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15743)[0m     @     0x7f0e388b9148 at::Tensor::copy_()
[2m[36m(pid=15743)[0m     @     0x7f0e3eb6fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15743)[0m     @     0x55a6d3ef7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15743)[0m     @     0x55a6d3e52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15743)[0m     @     0x55a6d3eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15743)[0m     @     0x55a6d3edea20 method_vectorcall
2020-11-05 11:01:15,911	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff1e7ae67b01000000.
2020-11-05 11:01:15,915	ERROR trial_runner.py:567 -- Trial PPO_jss_env_35142_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=15863, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=15863)[0m E1105 11:01:15.908840 15863 16821 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7401512aaa7b6e5d1e7ae67b01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=1e7ae67b01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=15863)[0m E1105 11:01:15.909026 15863 16821 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=71fdc8bab2e5c4d51e7ae67b01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=1e7ae67b01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=15740)[0m     @     0x7fa5f88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=15740)[0m     @     0x7fa5f89d6148 at::Tensor::copy_()
[2m[36m(pid=15740)[0m     @     0x7fa5fec8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=15740)[0m     @     0x56544bce9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15740)[0m     @     0x56544bc44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15740)[0m     @     0x56544bccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x56544bcd0a20 method_vectorcall
[2m[36m(pid=15740)[0m     @     0x56544bc44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15740)[0m     @     0x56544bccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x56544bcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15740)[0m     @     0x56544bc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15740)[0m     @     0x56544bccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x56544bcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15740)[0m     @     0x56544bc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15740)[0m     @     0x56544bccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15740)[0m     @     0x56544bcd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15740)[0m     @     0x56544bc45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15740)[0m     @     0x56544bccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15799)[0m     @     0x7eda89d755cc c10::Dispatcher::callWithDispatchKey<>()
2020-11-05 11:01:15,926	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.
== Status ==
Memory usage on this node: 25.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_35142_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_35142_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_35142_00000_0_2020-11-05_11-01-08/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 25.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_35142_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_35142_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_35142_00000_0_2020-11-05_11-01-08/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=15743)[0m     @     0x55a6d3e52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15743)[0m     @     0x55a6d3eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15743)[0m     @     0x55a6d3ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15743)[0m     @     0x55a6d3e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15743)[0m     @     0x55a6d3eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15743)[0m     @     0x55a6d3ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15743)[0m     @     0x55a6d3e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15743)[0m     @     0x55a6d3eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15743)[0m     @     0x55a6d3ede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15743)[0m     @     0x55a6d3e53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15743)[0m     @     0x55a6d3eddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15863)[0m E1105 11:01:15.923022 15863 16821 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=e0a4e1197307fa860fae11b201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0fae11b201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=15863)[0m E1105 11:01:15.923154 15863 16821 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f6c24b3589e6e9eb0fae11b201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0fae11b201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=15863)[0m E1105 11:01:15.928153 15863 16821 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=dbbcebddc63212b91e7ae67b01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=1e7ae67b01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=15863)[0m E1105 11:01:15.928570 15863 16821 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=97433d09a0cb4d6a0fae11b201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0fae11b201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_35142_00000])
2020-11-05 11:01:15,947	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
