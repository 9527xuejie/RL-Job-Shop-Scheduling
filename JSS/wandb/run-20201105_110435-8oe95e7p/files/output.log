2020-11-05 11:04:39,688	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b3d67_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=28243)[0m 2020-11-05 11:04:42,522	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=28221)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28221)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28221)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28221)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28221)[0m *** SIGSEGV (@0x0) received by PID 28221 (TID 0x7fca7d75e700) from PID 0; stack trace: ***
[2m[36m(pid=28221)[0m     @     0x7fca7d337390 (unknown)
[2m[36m(pid=28221)[0m     @     0x7f9b7f501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28228)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28228)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28228)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28228)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28228)[0m *** SIGSEGV (@0x0) received by PID 28228 (TID 0x7feb09fff700) from PID 0; stack trace: ***
[2m[36m(pid=28248)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28248)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28248)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28248)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28248)[0m *** SIGSEGV (@0x0) received by PID 28248 (TID 0x7fc0dde72700) from PID 0; stack trace: ***
[2m[36m(pid=28248)[0m     @     0x7fc0dda4b390 (unknown)
[2m[36m(pid=28248)[0m     @     0x7f91dfa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28225)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28225)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28225)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28225)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28225)[0m *** SIGSEGV (@0x0) received by PID 28225 (TID 0x7f18e32c1700) from PID 0; stack trace: ***
[2m[36m(pid=28225)[0m     @     0x7f18e2e9a390 (unknown)
[2m[36m(pid=28225)[0m     @     0x7ee9e50cafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28241)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28241)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28241)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28241)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28241)[0m *** SIGSEGV (@0x0) received by PID 28241 (TID 0x7f63864d4700) from PID 0; stack trace: ***
[2m[36m(pid=28241)[0m     @     0x7f63860ad390 (unknown)
[2m[36m(pid=28241)[0m     @     0x7f34882c4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28218)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28218)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28218)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28218)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28218)[0m *** SIGSEGV (@0x0) received by PID 28218 (TID 0x7fa4eb42f700) from PID 0; stack trace: ***
[2m[36m(pid=28218)[0m     @     0x7fa4eb008390 (unknown)
[2m[36m(pid=28218)[0m     @     0x7f75ed18afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28218)[0m     @     0x7f75ea47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28219)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28219)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28219)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28219)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28219)[0m *** SIGSEGV (@0x0) received by PID 28219 (TID 0x7f0b06125700) from PID 0; stack trace: ***
[2m[36m(pid=28219)[0m     @     0x7f0b05cfe390 (unknown)
[2m[36m(pid=28219)[0m     @     0x7edc07e84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28272)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28272)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28272)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28272)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28272)[0m *** SIGSEGV (@0x0) received by PID 28272 (TID 0x7f761b742700) from PID 0; stack trace: ***
[2m[36m(pid=28272)[0m     @     0x7f761b31b390 (unknown)
[2m[36m(pid=28272)[0m     @     0x7f471d39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28272)[0m     @     0x7f471a68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28242)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28242)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28242)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28242)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28242)[0m *** SIGSEGV (@0x0) received by PID 28242 (TID 0x7fde66a29700) from PID 0; stack trace: ***
[2m[36m(pid=28242)[0m     @     0x7fde66602390 (unknown)
[2m[36m(pid=28210)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28210)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28210)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28210)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28210)[0m *** SIGSEGV (@0x0) received by PID 28210 (TID 0x7fbd658d5700) from PID 0; stack trace: ***
[2m[36m(pid=28210)[0m     @     0x7fbd654ae390 (unknown)
[2m[36m(pid=28259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28259)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28259)[0m *** SIGSEGV (@0x0) received by PID 28259 (TID 0x7f4ea25b1700) from PID 0; stack trace: ***
[2m[36m(pid=28259)[0m     @     0x7f4ea218a390 (unknown)
[2m[36m(pid=28259)[0m     @     0x7f1fa43b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28259)[0m     @     0x7f1fa16a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28235)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28235)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28235)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28235)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28235)[0m *** SIGSEGV (@0x0) received by PID 28235 (TID 0x7f15aaa8c700) from PID 0; stack trace: ***
[2m[36m(pid=28232)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28232)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28232)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28232)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28232)[0m *** SIGSEGV (@0x0) received by PID 28232 (TID 0x7f32bd91e700) from PID 0; stack trace: ***
[2m[36m(pid=28232)[0m     @     0x7f32bd4f7390 (unknown)
[2m[36m(pid=28232)[0m     @     0x7f03bf71afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28232)[0m     @     0x7f03bca0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28238)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28238)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28238)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28238)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28238)[0m *** SIGSEGV (@0x0) received by PID 28238 (TID 0x7f3c57614700) from PID 0; stack trace: ***
[2m[36m(pid=28238)[0m     @     0x7f3c571ed390 (unknown)
[2m[36m(pid=28238)[0m     @     0x7f0d5939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28238)[0m     @     0x7f0d5668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28238)[0m     @     0x7f0d56692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28213)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28213)[0m *** SIGSEGV (@0x0) received by PID 28213 (TID 0x7fb5d1858700) from PID 0; stack trace: ***
[2m[36m(pid=28213)[0m     @     0x7fb5d1431390 (unknown)
[2m[36m(pid=28213)[0m     @     0x7f86d3643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28213)[0m     @     0x7f86d093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28213)[0m     @     0x7f86d093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28247)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28247)[0m *** SIGSEGV (@0x0) received by PID 28247 (TID 0x7f210432e700) from PID 0; stack trace: ***
[2m[36m(pid=28247)[0m     @     0x7f2103f07390 (unknown)
[2m[36m(pid=28247)[0m     @     0x7ef205fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28247)[0m     @     0x7ef20329764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28247)[0m     @     0x7ef20329a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28249)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28249)[0m *** SIGSEGV (@0x0) received by PID 28249 (TID 0x7f1806d0e700) from PID 0; stack trace: ***
[2m[36m(pid=28249)[0m     @     0x7f18068e7390 (unknown)
[2m[36m(pid=28249)[0m     @     0x7ee908981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28249)[0m     @     0x7ee905c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28255)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28255)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28255)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28255)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28255)[0m *** SIGSEGV (@0x0) received by PID 28255 (TID 0x7f91fa0da700) from PID 0; stack trace: ***
[2m[36m(pid=28255)[0m     @     0x7f91f9cb3390 (unknown)
[2m[36m(pid=28255)[0m     @     0x7f62fbec8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28255)[0m     @     0x7f62f91bc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28255)[0m     @     0x7f62f91bf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28237)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28237)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28237)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28237)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28237)[0m *** SIGSEGV (@0x0) received by PID 28237 (TID 0x7fb213088700) from PID 0; stack trace: ***
[2m[36m(pid=28237)[0m     @     0x7fb212c61390 (unknown)
[2m[36m(pid=28237)[0m     @     0x7f8314c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28237)[0m     @     0x7f8311f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28216)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28216)[0m *** SIGSEGV (@0x0) received by PID 28216 (TID 0x7f8023884700) from PID 0; stack trace: ***
[2m[36m(pid=28216)[0m     @     0x7f802345d390 (unknown)
[2m[36m(pid=28216)[0m     @     0x7f51254a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28216)[0m     @     0x7f512279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28216)[0m     @     0x7f5122797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28221)[0m     @     0x7f9b7c7f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28221)[0m     @     0x7f9b7c7f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28221)[0m     @     0x7f9b7c7f8b53 at::TensorIterator::for_each()
[2m[36m(pid=28221)[0m     @     0x7f9b7c7f8e11 at::TensorIterator::for_each()
[2m[36m(pid=28228)[0m     @     0x7feb09bd8390 (unknown)
[2m[36m(pid=28228)[0m     @     0x7fbc0bc81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28228)[0m     @     0x7fbc08f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28228)[0m     @     0x7fbc08f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28248)[0m     @     0x7f91dcd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28248)[0m     @     0x7f91dcd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28248)[0m     @     0x7f91dcd67b53 at::TensorIterator::for_each()
[2m[36m(pid=28248)[0m     @     0x7f91dcd67e11 at::TensorIterator::for_each()
[2m[36m(pid=28225)[0m     @     0x7ee9e23be64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28225)[0m     @     0x7ee9e23c1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28225)[0m     @     0x7ee9e23c1b53 at::TensorIterator::for_each()
[2m[36m(pid=28241)[0m     @     0x7f34855b864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28241)[0m     @     0x7f34855bb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28241)[0m     @     0x7f34855bbb53 at::TensorIterator::for_each()
[2m[36m(pid=28241)[0m     @     0x7f34855bbe11 at::TensorIterator::for_each()
[2m[36m(pid=28218)[0m     @     0x7f75ea481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28218)[0m     @     0x7f75ea481b53 at::TensorIterator::for_each()
[2m[36m(pid=28218)[0m     @     0x7f75ea481e11 at::TensorIterator::for_each()
[2m[36m(pid=28253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28219)[0m     @     0x7edc0517864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28219)[0m     @     0x7edc0517b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28219)[0m     @     0x7edc0517bb53 at::TensorIterator::for_each()
[2m[36m(pid=28219)[0m     @     0x7edc0517be11 at::TensorIterator::for_each()
[2m[36m(pid=28272)[0m     @     0x7f471a692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28272)[0m     @     0x7f471a692b53 at::TensorIterator::for_each()
[2m[36m(pid=28272)[0m     @     0x7f471a692e11 at::TensorIterator::for_each()
[2m[36m(pid=28242)[0m     @     0x7faf6881bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28242)[0m     @     0x7faf65b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28242)[0m     @     0x7faf65b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28242)[0m     @     0x7faf65b12b53 at::TensorIterator::for_each()
[2m[36m(pid=28210)[0m     @     0x7f8e67643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28210)[0m     @     0x7f8e6493764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28210)[0m     @     0x7f8e6493a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28210)[0m     @     0x7f8e6493ab53 at::TensorIterator::for_each()
[2m[36m(pid=28170)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28170)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28170)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28259)[0m     @     0x7f1fa16a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28259)[0m     @     0x7f1fa16a8b53 at::TensorIterator::for_each()
[2m[36m(pid=28259)[0m     @     0x7f1fa16a8e11 at::TensorIterator::for_each()
[2m[36m(pid=28235)[0m     @     0x7f15aa665390 (unknown)
[2m[36m(pid=28235)[0m     @     0x7ee6ac81bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28235)[0m     @     0x7ee6a9b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28235)[0m     @     0x7ee6a9b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28235)[0m     @     0x7ee6a9b12b53 at::TensorIterator::for_each()
[2m[36m(pid=28232)[0m     @     0x7f03bca11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28232)[0m     @     0x7f03bca11b53 at::TensorIterator::for_each()
[2m[36m(pid=28232)[0m     @     0x7f03bca11e11 at::TensorIterator::for_each()
[2m[36m(pid=28232)[0m     @     0x7f03bf72ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28232)[0m     @     0x7f03bf74dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28258)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28258)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28258)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28197)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28197)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28197)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28238)[0m     @     0x7f0d56692b53 at::TensorIterator::for_each()
[2m[36m(pid=28238)[0m     @     0x7f0d56692e11 at::TensorIterator::for_each()
[2m[36m(pid=28152)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28152)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28213)[0m     @     0x7f86d093ab53 at::TensorIterator::for_each()
[2m[36m(pid=28247)[0m     @     0x7ef20329ab53 at::TensorIterator::for_each()
[2m[36m(pid=28247)[0m     @     0x7ef20329ae11 at::TensorIterator::for_each()
[2m[36m(pid=28247)[0m     @     0x7ef205fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28249)[0m     @     0x7ee905c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28249)[0m     @     0x7ee905c78b53 at::TensorIterator::for_each()
[2m[36m(pid=28255)[0m     @     0x7f62f91bfb53 at::TensorIterator::for_each()
[2m[36m(pid=28255)[0m     @     0x7f62f91bfe11 at::TensorIterator::for_each()
[2m[36m(pid=28255)[0m     @     0x7f62fbed8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28212)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28212)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28212)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28237)[0m     @     0x7f8311f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28157)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28157)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28157)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28163)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28163)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28163)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28148)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28148)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28148)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28227)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28227)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28227)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28216)[0m     @     0x7f5122797b53 at::TensorIterator::for_each()
[2m[36m(pid=28216)[0m     @     0x7f5122797e11 at::TensorIterator::for_each()
[2m[36m(pid=28150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28150)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28142)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28142)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28142)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28229)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28229)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28173)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28173)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28173)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28173)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28173)[0m *** SIGSEGV (@0x0) received by PID 28173 (TID 0x7fd895412700) from PID 0; stack trace: ***
[2m[36m(pid=28154)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28154)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28154)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28199)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28199)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28199)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28222)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28222)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28222)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28222)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28222)[0m *** SIGSEGV (@0x0) received by PID 28222 (TID 0x7fc65b366700) from PID 0; stack trace: ***
[2m[36m(pid=28137)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28137)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28137)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28220)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28220)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28220)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28203)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28203)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28203)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28245)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28245)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28245)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28143)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28143)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28143)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28143)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28143)[0m *** SIGSEGV (@0x0) received by PID 28143 (TID 0x7fc1b8710700) from PID 0; stack trace: ***
[2m[36m(pid=28211)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28211)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28211)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28165)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28165)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28165)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28263)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28250)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28250)[0m *** SIGSEGV (@0x0) received by PID 28250 (TID 0x7fd2c08ff700) from PID 0; stack trace: ***
[2m[36m(pid=28250)[0m     @     0x7fd2c04d8390 (unknown)
[2m[36m(pid=28155)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28155)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28155)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28149)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28149)[0m *** SIGSEGV (@0x0) received by PID 28149 (TID 0x7ff5f8b48700) from PID 0; stack trace: ***
[2m[36m(pid=28169)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28169)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28169)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28169)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28169)[0m *** SIGSEGV (@0x0) received by PID 28169 (TID 0x7ff83188f700) from PID 0; stack trace: ***
[2m[36m(pid=28221)[0m     @     0x7f9b7f511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28221)[0m     @     0x7f9b7f534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28221)[0m     @     0x7f9b7c572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28221)[0m     @     0x7f9b7c570c3f at::native::copy_impl()
[2m[36m(pid=28228)[0m     @     0x7fbc08f78b53 at::TensorIterator::for_each()
[2m[36m(pid=28248)[0m     @     0x7f91dfa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28248)[0m     @     0x7f91dfaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28248)[0m     @     0x7f91dcae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28248)[0m     @     0x7f91dcadfc3f at::native::copy_impl()
[2m[36m(pid=28248)[0m     @     0x7f91dcae0ed4 at::native::copy_()
[2m[36m(pid=28225)[0m     @     0x7ee9e23c1e11 at::TensorIterator::for_each()
[2m[36m(pid=28225)[0m     @     0x7ee9e50dac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28225)[0m     @     0x7ee9e50fdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28225)[0m     @     0x7ee9e213b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28225)[0m     @     0x7ee9e2139c3f at::native::copy_impl()
[2m[36m(pid=28241)[0m     @     0x7f34882d4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28241)[0m     @     0x7f34882f7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28241)[0m     @     0x7f3485335009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28241)[0m     @     0x7f3485333c3f at::native::copy_impl()
[2m[36m(pid=28218)[0m     @     0x7f75ed19ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28218)[0m     @     0x7f75ed1bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28218)[0m     @     0x7f75ea1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28218)[0m     @     0x7f75ea1f9c3f at::native::copy_impl()
[2m[36m(pid=28253)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28253)[0m *** SIGSEGV (@0x0) received by PID 28253 (TID 0x7fdeeb638700) from PID 0; stack trace: ***
[2m[36m(pid=28253)[0m     @     0x7fdeeb211390 (unknown)
[2m[36m(pid=28253)[0m     @     0x7fafed39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28253)[0m     @     0x7fafea68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28219)[0m     @     0x7edc07e94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28219)[0m     @     0x7edc07eb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28219)[0m     @     0x7edc04ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28219)[0m     @     0x7edc04ef3c3f at::native::copy_impl()
[2m[36m(pid=28219)[0m     @     0x7edc04ef4ed4 at::native::copy_()
[2m[36m(pid=28272)[0m     @     0x7f471d3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28272)[0m     @     0x7f471d3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28272)[0m     @     0x7f471a40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28272)[0m     @     0x7f471a40ac3f at::native::copy_impl()
[2m[36m(pid=28272)[0m     @     0x7f471a40bed4 at::native::copy_()
[2m[36m(pid=28175)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28175)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28175)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28175)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28175)[0m *** SIGSEGV (@0x0) received by PID 28175 (TID 0x7f43464cb700) from PID 0; stack trace: ***
[2m[36m(pid=28175)[0m     @     0x7f43460a4390 (unknown)
[2m[36m(pid=28242)[0m     @     0x7faf65b12e11 at::TensorIterator::for_each()
[2m[36m(pid=28242)[0m     @     0x7faf6882bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28242)[0m     @     0x7faf6884ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28242)[0m     @     0x7faf6588c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28242)[0m     @     0x7faf6588ac3f at::native::copy_impl()
[2m[36m(pid=28210)[0m     @     0x7f8e6493ae11 at::TensorIterator::for_each()
[2m[36m(pid=28210)[0m     @     0x7f8e67653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28210)[0m     @     0x7f8e67676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28210)[0m     @     0x7f8e646b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28210)[0m     @     0x7f8e646b2c3f at::native::copy_impl()
[2m[36m(pid=28170)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28170)[0m *** SIGSEGV (@0x0) received by PID 28170 (TID 0x7fd91a231700) from PID 0; stack trace: ***
[2m[36m(pid=28170)[0m     @     0x7fd919e0a390 (unknown)
[2m[36m(pid=28170)[0m     @     0x7faa1be84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28170)[0m     @     0x7faa1917864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28158)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28158)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28158)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28158)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28158)[0m *** SIGSEGV (@0x0) received by PID 28158 (TID 0x7f24e8306700) from PID 0; stack trace: ***
[2m[36m(pid=28158)[0m     @     0x7f24e7edf390 (unknown)
[2m[36m(pid=28158)[0m     @     0x7ef5ea067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28158)[0m     @     0x7ef5e735b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28259)[0m     @     0x7f1fa43c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28259)[0m     @     0x7f1fa43e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28259)[0m     @     0x7f1fa1422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28259)[0m     @     0x7f1fa1420c3f at::native::copy_impl()
[2m[36m(pid=28259)[0m     @     0x7f1fa1421ed4 at::native::copy_()
[2m[36m(pid=28235)[0m     @     0x7ee6a9b12e11 at::TensorIterator::for_each()
[2m[36m(pid=28235)[0m     @     0x7ee6ac82bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28235)[0m     @     0x7ee6ac84ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28235)[0m     @     0x7ee6a988c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28235)[0m     @     0x7ee6a988ac3f at::native::copy_impl()
[2m[36m(pid=28232)[0m     @     0x7f03bc78b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28232)[0m     @     0x7f03bc789c3f at::native::copy_impl()
[2m[36m(pid=28232)[0m     @     0x7f03bc78aed4 at::native::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03bcecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28217)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28217)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28217)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28217)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28217)[0m *** SIGSEGV (@0x0) received by PID 28217 (TID 0x7f383869a700) from PID 0; stack trace: ***
[2m[36m(pid=28217)[0m     @     0x7f3838273390 (unknown)
[2m[36m(pid=28145)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28145)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28145)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28145)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28145)[0m *** SIGSEGV (@0x0) received by PID 28145 (TID 0x7fe1a48d4700) from PID 0; stack trace: ***
[2m[36m(pid=28145)[0m     @     0x7fe1a44ad390 (unknown)
[2m[36m(pid=28145)[0m     @     0x7fb2a65aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28145)[0m     @     0x7fb2a389e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28258)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28258)[0m *** SIGSEGV (@0x0) received by PID 28258 (TID 0x7ff8f31b5700) from PID 0; stack trace: ***
[2m[36m(pid=28258)[0m     @     0x7ff8f2d8e390 (unknown)
[2m[36m(pid=28258)[0m     @     0x7fc9f4f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28258)[0m     @     0x7fc9f226764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28153)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28153)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28153)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28153)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28153)[0m *** SIGSEGV (@0x0) received by PID 28153 (TID 0x7f4d3f189700) from PID 0; stack trace: ***
[2m[36m(pid=28153)[0m     @     0x7f4d3ed62390 (unknown)
[2m[36m(pid=28141)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28141)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28141)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28141)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28141)[0m *** SIGSEGV (@0x0) received by PID 28141 (TID 0x7f8595f13700) from PID 0; stack trace: ***
[2m[36m(pid=28141)[0m     @     0x7f8595aec390 (unknown)
[2m[36m(pid=28141)[0m     @     0x7f5697d07fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28266)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28266)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28266)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28266)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28266)[0m *** SIGSEGV (@0x0) received by PID 28266 (TID 0x7fe9b0fd8700) from PID 0; stack trace: ***
[2m[36m(pid=28266)[0m     @     0x7fe9b0bb1390 (unknown)
[2m[36m(pid=28266)[0m     @     0x7fbab2d02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28266)[0m     @     0x7fbaafff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28223)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28223)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28223)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28223)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28223)[0m *** SIGSEGV (@0x0) received by PID 28223 (TID 0x7f46963fa700) from PID 0; stack trace: ***
[2m[36m(pid=28223)[0m     @     0x7f4695fd3390 (unknown)
[2m[36m(pid=28223)[0m     @     0x7f179809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28223)[0m     @     0x7f179538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28197)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28197)[0m *** SIGSEGV (@0x0) received by PID 28197 (TID 0x7f04e3571700) from PID 0; stack trace: ***
[2m[36m(pid=28197)[0m     @     0x7f04e314a390 (unknown)
[2m[36m(pid=28197)[0m     @     0x7ed5e535bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28197)[0m     @     0x7ed5e264f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28234)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28234)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28234)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28144)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28144)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28144)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28144)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28144)[0m *** SIGSEGV (@0x0) received by PID 28144 (TID 0x7f56bb98c700) from PID 0; stack trace: ***
[2m[36m(pid=28144)[0m     @     0x7f56bb565390 (unknown)
[2m[36m(pid=28144)[0m     @     0x7f27bce9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28207)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28207)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28207)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28207)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28207)[0m *** SIGSEGV (@0x0) received by PID 28207 (TID 0x7f020914b700) from PID 0; stack trace: ***
[2m[36m(pid=28207)[0m     @     0x7f0208d24390 (unknown)
[2m[36m(pid=28207)[0m     @     0x7ed30ae96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28207)[0m     @     0x7ed30818a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28238)[0m     @     0x7f0d593abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28238)[0m     @     0x7f0d593cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28238)[0m     @     0x7f0d5640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28238)[0m     @     0x7f0d5640ac3f at::native::copy_impl()
[2m[36m(pid=28238)[0m     @     0x7f0d5640bed4 at::native::copy_()
[2m[36m(pid=28152)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28152)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28152)[0m *** SIGSEGV (@0x0) received by PID 28152 (TID 0x7f09a95f0700) from PID 0; stack trace: ***
[2m[36m(pid=28152)[0m     @     0x7f09a91c9390 (unknown)
[2m[36m(pid=28152)[0m     @     0x7edaaaffefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28152)[0m     @     0x7edaa82f264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28147)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28147)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28147)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28147)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28147)[0m *** SIGSEGV (@0x0) received by PID 28147 (TID 0x7f0455dee700) from PID 0; stack trace: ***
[2m[36m(pid=28147)[0m     @     0x7f04559c7390 (unknown)
[2m[36m(pid=28147)[0m     @     0x7ed557b29fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28147)[0m     @     0x7ed554e1d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28215)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28215)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28215)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28215)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28215)[0m *** SIGSEGV (@0x0) received by PID 28215 (TID 0x7fb2665ab700) from PID 0; stack trace: ***
[2m[36m(pid=28215)[0m     @     0x7fb266184390 (unknown)
[2m[36m(pid=28215)[0m     @     0x7f83683b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28213)[0m     @     0x7f86d093ae11 at::TensorIterator::for_each()
[2m[36m(pid=28213)[0m     @     0x7f86d3653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28213)[0m     @     0x7f86d3676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28213)[0m     @     0x7f86d06b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28213)[0m     @     0x7f86d06b2c3f at::native::copy_impl()
[2m[36m(pid=28214)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28214)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28214)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28214)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28214)[0m *** SIGSEGV (@0x0) received by PID 28214 (TID 0x7f3c5e3b6700) from PID 0; stack trace: ***
[2m[36m(pid=28214)[0m     @     0x7f3c5df8f390 (unknown)
[2m[36m(pid=28214)[0m     @     0x7f0d6009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28214)[0m     @     0x7f0d5d38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28247)[0m     @     0x7ef205fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28247)[0m     @     0x7ef203014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28247)[0m     @     0x7ef203012c3f at::native::copy_impl()
[2m[36m(pid=28247)[0m     @     0x7ef203013ed4 at::native::copy_()
[2m[36m(pid=28201)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28201)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28201)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28201)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28201)[0m *** SIGSEGV (@0x0) received by PID 28201 (TID 0x7f9faf673700) from PID 0; stack trace: ***
[2m[36m(pid=28201)[0m     @     0x7f9faf24c390 (unknown)
[2m[36m(pid=28236)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28236)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28236)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28236)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28236)[0m *** SIGSEGV (@0x0) received by PID 28236 (TID 0x7f7b2bf28700) from PID 0; stack trace: ***
[2m[36m(pid=28236)[0m     @     0x7f7b2bb01390 (unknown)
[2m[36m(pid=28236)[0m     @     0x7f4c2db77fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28236)[0m     @     0x7f4c2ae6b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28249)[0m     @     0x7ee905c78e11 at::TensorIterator::for_each()
[2m[36m(pid=28249)[0m     @     0x7ee908991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28249)[0m     @     0x7ee9089b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28249)[0m     @     0x7ee9059f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28249)[0m     @     0x7ee9059f0c3f at::native::copy_impl()
[2m[36m(pid=28270)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28270)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28270)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28270)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28270)[0m *** SIGSEGV (@0x0) received by PID 28270 (TID 0x7fa484581700) from PID 0; stack trace: ***
[2m[36m(pid=28270)[0m     @     0x7fa48415a390 (unknown)
[2m[36m(pid=28160)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28160)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28160)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28160)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28160)[0m *** SIGSEGV (@0x0) received by PID 28160 (TID 0x7f1824c0e700) from PID 0; stack trace: ***
[2m[36m(pid=28160)[0m     @     0x7f18247e7390 (unknown)
[2m[36m(pid=28160)[0m     @     0x7ee9267dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28171)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28171)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28171)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28171)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28171)[0m *** SIGSEGV (@0x0) received by PID 28171 (TID 0x7f00913de700) from PID 0; stack trace: ***
[2m[36m(pid=28171)[0m     @     0x7f0090fb7390 (unknown)
[2m[36m(pid=28171)[0m     @     0x7ed19311bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28171)[0m     @     0x7ed19040f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28255)[0m     @     0x7f62fbefbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28255)[0m     @     0x7f62f8f39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28255)[0m     @     0x7f62f8f37c3f at::native::copy_impl()
[2m[36m(pid=28255)[0m     @     0x7f62f8f38ed4 at::native::copy_()
[2m[36m(pid=28212)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28212)[0m *** SIGSEGV (@0x0) received by PID 28212 (TID 0x7fbf2d286700) from PID 0; stack trace: ***
[2m[36m(pid=28212)[0m     @     0x7fbf2ce5f390 (unknown)
[2m[36m(pid=28212)[0m     @     0x7f902f049fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28212)[0m     @     0x7f902c33d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28237)[0m     @     0x7f8311f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=28237)[0m     @     0x7f8311f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=28237)[0m     @     0x7f8314ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28237)[0m     @     0x7f8314ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28157)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28157)[0m *** SIGSEGV (@0x0) received by PID 28157 (TID 0x7f29bfd98700) from PID 0; stack trace: ***
[2m[36m(pid=28157)[0m     @     0x7f29bf971390 (unknown)
[2m[36m(pid=28157)[0m     @     0x7efac1b84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28157)[0m     @     0x7efabee7864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28163)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28163)[0m *** SIGSEGV (@0x0) received by PID 28163 (TID 0x7fc387b87700) from PID 0; stack trace: ***
[2m[36m(pid=28163)[0m     @     0x7fc387760390 (unknown)
[2m[36m(pid=28163)[0m     @     0x7f94898b3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28163)[0m     @     0x7f9486ba764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28148)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28148)[0m *** SIGSEGV (@0x0) received by PID 28148 (TID 0x7f730158d700) from PID 0; stack trace: ***
[2m[36m(pid=28148)[0m     @     0x7f7301166390 (unknown)
[2m[36m(pid=28148)[0m     @     0x7f440332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28148)[0m     @     0x7f440062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28227)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28227)[0m *** SIGSEGV (@0x0) received by PID 28227 (TID 0x7f7316d27700) from PID 0; stack trace: ***
[2m[36m(pid=28227)[0m     @     0x7f7316900390 (unknown)
[2m[36m(pid=28227)[0m     @     0x7f4418981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28227)[0m     @     0x7f4415c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28216)[0m     @     0x7f51254b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28216)[0m     @     0x7f51254d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28216)[0m     @     0x7f5122511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28216)[0m     @     0x7f512250fc3f at::native::copy_impl()
[2m[36m(pid=28216)[0m     @     0x7f5122510ed4 at::native::copy_()
[2m[36m(pid=28140)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28140)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28140)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28140)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28140)[0m *** SIGSEGV (@0x0) received by PID 28140 (TID 0x7f07ad0b3700) from PID 0; stack trace: ***
[2m[36m(pid=28138)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28138)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28138)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28138)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28138)[0m *** SIGSEGV (@0x0) received by PID 28138 (TID 0x7f7208dc8700) from PID 0; stack trace: ***
[2m[36m(pid=28209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28209)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28256)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28256)[0m *** SIGSEGV (@0x0) received by PID 28256 (TID 0x7f621e694700) from PID 0; stack trace: ***
[2m[36m(pid=28150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28150)[0m *** SIGSEGV (@0x0) received by PID 28150 (TID 0x7feb4b0ce700) from PID 0; stack trace: ***
[2m[36m(pid=28150)[0m     @     0x7feb4aca7390 (unknown)
[2m[36m(pid=28150)[0m     @     0x7fbc4ceacfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28150)[0m     @     0x7fbc4a1a064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28142)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28142)[0m *** SIGSEGV (@0x0) received by PID 28142 (TID 0x7f6467fbe700) from PID 0; stack trace: ***
[2m[36m(pid=28142)[0m     @     0x7f6467b97390 (unknown)
[2m[36m(pid=28142)[0m     @     0x7f3569c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28142)[0m     @     0x7f3566f3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28229)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28229)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28229)[0m *** SIGSEGV (@0x0) received by PID 28229 (TID 0x7f92b4c52700) from PID 0; stack trace: ***
[2m[36m(pid=28229)[0m     @     0x7f92b482b390 (unknown)
[2m[36m(pid=28229)[0m     @     0x7f63b67dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28229)[0m     @     0x7f63b3ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28173)[0m     @     0x7fd894feb390 (unknown)
[2m[36m(pid=28173)[0m     @     0x7fa99711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28173)[0m     @     0x7fa99440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28173)[0m     @     0x7fa994412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28154)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28154)[0m *** SIGSEGV (@0x0) received by PID 28154 (TID 0x7f2624695700) from PID 0; stack trace: ***
[2m[36m(pid=28154)[0m     @     0x7f262426e390 (unknown)
[2m[36m(pid=28154)[0m     @     0x7ef726498fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28154)[0m     @     0x7ef72378c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28154)[0m     @     0x7ef72378f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28200)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28167)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28167)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28167)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28167)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28167)[0m *** SIGSEGV (@0x0) received by PID 28167 (TID 0x7fc208a3b700) from PID 0; stack trace: ***
[2m[36m(pid=28167)[0m     @     0x7fc208614390 (unknown)
[2m[36m(pid=28167)[0m     @     0x7f930a7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28167)[0m     @     0x7f9307ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28199)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28199)[0m *** SIGSEGV (@0x0) received by PID 28199 (TID 0x7f26c5d84700) from PID 0; stack trace: ***
[2m[36m(pid=28199)[0m     @     0x7f26c595d390 (unknown)
[2m[36m(pid=28199)[0m     @     0x7ef7c7a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28199)[0m     @     0x7ef7c4d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28206)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28206)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28206)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28206)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28206)[0m *** SIGSEGV (@0x0) received by PID 28206 (TID 0x7f718ce3a700) from PID 0; stack trace: ***
[2m[36m(pid=28206)[0m     @     0x7f718ca13390 (unknown)
[2m[36m(pid=28206)[0m     @     0x7f428eb88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28206)[0m     @     0x7f428be7c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28222)[0m     @     0x7fc65af3f390 (unknown)
[2m[36m(pid=28222)[0m     @     0x7f975d14afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28222)[0m     @     0x7f975a43e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28222)[0m     @     0x7f975a441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28208)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28208)[0m *** SIGSEGV (@0x0) received by PID 28208 (TID 0x7f6a3a93c700) from PID 0; stack trace: ***
[2m[36m(pid=28208)[0m     @     0x7f6a3a515390 (unknown)
[2m[36m(pid=28208)[0m     @     0x7f3b3c5dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28208)[0m     @     0x7f3b398d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28137)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28137)[0m *** SIGSEGV (@0x0) received by PID 28137 (TID 0x7fdae946f700) from PID 0; stack trace: ***
[2m[36m(pid=28137)[0m     @     0x7fdae9048390 (unknown)
[2m[36m(pid=28137)[0m     @     0x7fabeadfcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28137)[0m     @     0x7fabe80f064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28159)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28159)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28159)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28159)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28159)[0m *** SIGSEGV (@0x0) received by PID 28159 (TID 0x7fbbe63eb700) from PID 0; stack trace: ***
[2m[36m(pid=28159)[0m     @     0x7fbbe5fc4390 (unknown)
[2m[36m(pid=28220)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28220)[0m *** SIGSEGV (@0x0) received by PID 28220 (TID 0x7fcbcfba3700) from PID 0; stack trace: ***
[2m[36m(pid=28220)[0m     @     0x7fcbcf77c390 (unknown)
[2m[36m(pid=28220)[0m     @     0x7f9cd1925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28220)[0m     @     0x7f9ccec1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28203)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28203)[0m *** SIGSEGV (@0x0) received by PID 28203 (TID 0x7fb0ae455700) from PID 0; stack trace: ***
[2m[36m(pid=28203)[0m     @     0x7fb0ae02e390 (unknown)
[2m[36m(pid=28203)[0m     @     0x7f81b009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28203)[0m     @     0x7f81ad38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28203)[0m     @     0x7f81ad392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28245)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28245)[0m *** SIGSEGV (@0x0) received by PID 28245 (TID 0x7fd0729c4700) from PID 0; stack trace: ***
[2m[36m(pid=28245)[0m     @     0x7fd07259d390 (unknown)
[2m[36m(pid=28245)[0m     @     0x7fa17460cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28245)[0m     @     0x7fa17190064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28245)[0m     @     0x7fa171903977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28143)[0m     @     0x7fc1b82e9390 (unknown)
[2m[36m(pid=28143)[0m     @     0x7f92ba378fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28143)[0m     @     0x7f92b766c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28143)[0m     @     0x7f92b766f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28211)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28211)[0m *** SIGSEGV (@0x0) received by PID 28211 (TID 0x7ff02f7fd700) from PID 0; stack trace: ***
[2m[36m(pid=28211)[0m     @     0x7ff02f3d6390 (unknown)
[2m[36m(pid=28211)[0m     @     0x7fc131604fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28211)[0m     @     0x7fc12e8f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28211)[0m     @     0x7fc12e8fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28165)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28165)[0m *** SIGSEGV (@0x0) received by PID 28165 (TID 0x7f6b3f29f700) from PID 0; stack trace: ***
[2m[36m(pid=28165)[0m     @     0x7f6b3ee78390 (unknown)
[2m[36m(pid=28165)[0m     @     0x7f3c4109dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28165)[0m     @     0x7f3c3e39164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28165)[0m     @     0x7f3c3e394977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28139)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28139)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28139)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28139)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28139)[0m *** SIGSEGV (@0x0) received by PID 28139 (TID 0x7fd4c63da700) from PID 0; stack trace: ***
[2m[36m(pid=28139)[0m     @     0x7fd4c5fb3390 (unknown)
[2m[36m(pid=28263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28263)[0m *** SIGSEGV (@0x0) received by PID 28263 (TID 0x7f3fb55d2700) from PID 0; stack trace: ***
[2m[36m(pid=28263)[0m     @     0x7f3fb51ab390 (unknown)
[2m[36m(pid=28263)[0m     @     0x7f10b732cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28263)[0m     @     0x7f10b462064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28250)[0m     @     0x7fa3c25aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28250)[0m     @     0x7fa3bf89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28250)[0m     @     0x7fa3bf8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28250)[0m     @     0x7fa3bf8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=28161)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=28161)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=28161)[0m *** Aborted at 1604574288 (unix time) try "date -d @1604574288" if you are using GNU date ***
[2m[36m(pid=28161)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28161)[0m *** SIGSEGV (@0x0) received by PID 28161 (TID 0x7fa89d635700) from PID 0; stack trace: ***
[2m[36m(pid=28161)[0m     @     0x7fa89d20e390 (unknown)
[2m[36m(pid=28155)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28155)[0m *** SIGSEGV (@0x0) received by PID 28155 (TID 0x7fa3a50ed700) from PID 0; stack trace: ***
[2m[36m(pid=28155)[0m     @     0x7fa3a4cc6390 (unknown)
[2m[36m(pid=28155)[0m     @     0x7f74a6e48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28155)[0m     @     0x7f74a413c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28155)[0m     @     0x7f74a413f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28149)[0m     @     0x7ff5f8721390 (unknown)
[2m[36m(pid=28149)[0m     @     0x7fc6fa918fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28149)[0m     @     0x7fc6f7c0c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28149)[0m     @     0x7fc6f7c0f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28149)[0m     @     0x7fc6f7c0fb53 at::TensorIterator::for_each()
[2m[36m(pid=28169)[0m     @     0x7ff831468390 (unknown)
[2m[36m(pid=28169)[0m     @     0x7fc933686fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28169)[0m     @     0x7fc93097a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28169)[0m     @     0x7fc93097d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28221)[0m     @     0x7f9b7c571ed4 at::native::copy_()
[2m[36m(pid=28221)[0m     @     0x7f9b7ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28228)[0m     @     0x7fbc08f78e11 at::TensorIterator::for_each()
[2m[36m(pid=28228)[0m     @     0x7fbc0bc91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28228)[0m     @     0x7fbc0bcb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28228)[0m     @     0x7fbc08cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28228)[0m     @     0x7fbc08cf0c3f at::native::copy_impl()
[2m[36m(pid=28248)[0m     @     0x7f91dd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28225)[0m     @     0x7ee9e213aed4 at::native::copy_()
[2m[36m(pid=28225)[0m     @     0x7ee9e287d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28241)[0m     @     0x7f3485334ed4 at::native::copy_()
[2m[36m(pid=28241)[0m     @     0x7f3485a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28218)[0m     @     0x7f75ea1faed4 at::native::copy_()
[2m[36m(pid=28218)[0m     @     0x7f75ea93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28253)[0m     @     0x7fafea692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28253)[0m     @     0x7fafea692b53 at::TensorIterator::for_each()
[2m[36m(pid=28219)[0m     @     0x7edc056375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28272)[0m     @     0x7f471ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28272)[0m     @     0x7f471ac56148 at::Tensor::copy_()
[2m[36m(pid=28175)[0m     @     0x7f14482c4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28175)[0m     @     0x7f14455b864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28175)[0m     @     0x7f14455bb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28242)[0m     @     0x7faf6588bed4 at::native::copy_()
[2m[36m(pid=28242)[0m     @     0x7faf65fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28210)[0m     @     0x7f8e646b3ed4 at::native::copy_()
[2m[36m(pid=28210)[0m     @     0x7f8e64df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28170)[0m     @     0x7faa1917b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28170)[0m     @     0x7faa1917bb53 at::TensorIterator::for_each()
[2m[36m(pid=28158)[0m     @     0x7ef5e735e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28158)[0m     @     0x7ef5e735eb53 at::TensorIterator::for_each()
[2m[36m(pid=28259)[0m     @     0x7f1fa1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28235)[0m     @     0x7ee6a988bed4 at::native::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03bcfd5148 at::Tensor::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03bebcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03bcecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28217)[0m     @     0x7f093a4a9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28217)[0m     @     0x7f093779d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28217)[0m     @     0x7f09377a0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28145)[0m     @     0x7fb2a38a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28258)[0m     @     0x7fc9f226a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28258)[0m     @     0x7fc9f226ab53 at::TensorIterator::for_each()
[2m[36m(pid=28153)[0m     @     0x7f1e40f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28153)[0m     @     0x7f1e3e26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28153)[0m     @     0x7f1e3e26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28141)[0m     @     0x7f5694ffb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28141)[0m     @     0x7f5694ffe977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28266)[0m     @     0x7fbaafff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28223)[0m     @     0x7f1795392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28223)[0m     @     0x7f1795392b53 at::TensorIterator::for_each()
[2m[36m(pid=28197)[0m     @     0x7ed5e2652977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28197)[0m     @     0x7ed5e2652b53 at::TensorIterator::for_each()
[2m[36m(pid=28234)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28234)[0m *** SIGSEGV (@0x0) received by PID 28234 (TID 0x7f3a68603700) from PID 0; stack trace: ***
[2m[36m(pid=28234)[0m     @     0x7f3a681dc390 (unknown)
[2m[36m(pid=28144)[0m     @     0x7f27ba19264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28144)[0m     @     0x7f27ba195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28207)[0m     @     0x7ed30818d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28207)[0m     @     0x7ed30818db53 at::TensorIterator::for_each()
[2m[36m(pid=28152)[0m     @     0x7edaa82f5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28152)[0m     @     0x7edaa82f5b53 at::TensorIterator::for_each()
[2m[36m(pid=28147)[0m     @     0x7ed554e20977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28147)[0m     @     0x7ed554e20b53 at::TensorIterator::for_each()
[2m[36m(pid=28215)[0m     @     0x7f83656a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28215)[0m     @     0x7f83656a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28213)[0m     @     0x7f86d06b3ed4 at::native::copy_()
[2m[36m(pid=28213)[0m     @     0x7f86d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28214)[0m     @     0x7f0d5d392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28247)[0m     @     0x7ef2037565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28247)[0m     @     0x7ef20385e148 at::Tensor::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70b139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28201)[0m     @     0x7f70ae68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28236)[0m     @     0x7f4c2ae6e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28236)[0m     @     0x7f4c2ae6eb53 at::TensorIterator::for_each()
[2m[36m(pid=28249)[0m     @     0x7ee9059f1ed4 at::native::copy_()
[2m[36m(pid=28249)[0m     @     0x7ee9061345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28270)[0m     @     0x7f7586293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28270)[0m     @     0x7f758358764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28160)[0m     @     0x7ee923ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28171)[0m     @     0x7ed190412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28171)[0m     @     0x7ed190412b53 at::TensorIterator::for_each()
[2m[36m(pid=28255)[0m     @     0x7f62f967b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28255)[0m     @     0x7f62f9783148 at::Tensor::copy_()
[2m[36m(pid=28255)[0m     @     0x7f62fb37a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28212)[0m     @     0x7f902c340977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28212)[0m     @     0x7f902c340b53 at::TensorIterator::for_each()
[2m[36m(pid=28237)[0m     @     0x7f8311d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28237)[0m     @     0x7f8311d07c3f at::native::copy_impl()
[2m[36m(pid=28237)[0m     @     0x7f8311d08ed4 at::native::copy_()
[2m[36m(pid=28157)[0m     @     0x7efabee7b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28157)[0m     @     0x7efabee7bb53 at::TensorIterator::for_each()
[2m[36m(pid=28163)[0m     @     0x7f9486baa977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28163)[0m     @     0x7f9486baab53 at::TensorIterator::for_each()
[2m[36m(pid=28148)[0m     @     0x7f4400623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28148)[0m     @     0x7f4400623b53 at::TensorIterator::for_each()
[2m[36m(pid=28148)[0m     @     0x7f4400623e11 at::TensorIterator::for_each()
[2m[36m(pid=28227)[0m     @     0x7f4415c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28227)[0m     @     0x7f4415c78b53 at::TensorIterator::for_each()
[2m[36m(pid=28227)[0m     @     0x7f4415c78e11 at::TensorIterator::for_each()
[2m[36m(pid=28216)[0m     @     0x7f5122c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28216)[0m     @     0x7f5122d5b148 at::Tensor::copy_()
[2m[36m(pid=28216)[0m     @     0x7f5124952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28140)[0m     @     0x7f07acc8c390 (unknown)
[2m[36m(pid=28140)[0m     @     0x7ed8aedb2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28140)[0m     @     0x7ed8ac0a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28140)[0m     @     0x7ed8ac0a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28138)[0m     @     0x7f72089a1390 (unknown)
[2m[36m(pid=28138)[0m     @     0x7f430ab88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28138)[0m     @     0x7f4307e7c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=28209)[0m *** SIGSEGV (@0x0) received by PID 28209 (TID 0x7fd3961fd700) from PID 0; stack trace: ***
[2m[36m(pid=28209)[0m     @     0x7fd395dd6390 (unknown)
[2m[36m(pid=28209)[0m     @     0x7fa497fc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28209)[0m     @     0x7fa4952bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28209)[0m     @     0x7fa4952c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28256)[0m     @     0x7f621e26d390 (unknown)
[2m[36m(pid=28256)[0m     @     0x7f33203b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28256)[0m     @     0x7f331d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28256)[0m     @     0x7f331d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28150)[0m     @     0x7fbc4a1a3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28150)[0m     @     0x7fbc4a1a3b53 at::TensorIterator::for_each()
[2m[36m(pid=28142)[0m     @     0x7f3566f33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28142)[0m     @     0x7f3566f33b53 at::TensorIterator::for_each()
[2m[36m(pid=28229)[0m     @     0x7f63b3ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28173)[0m     @     0x7fa994412b53 at::TensorIterator::for_each()
[2m[36m(pid=28173)[0m     @     0x7fa994412e11 at::TensorIterator::for_each()
[2m[36m(pid=28173)[0m     @     0x7fa99712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28154)[0m     @     0x7ef72378fb53 at::TensorIterator::for_each()
[2m[36m(pid=28200)[0m *** SIGSEGV (@0x0) received by PID 28200 (TID 0x7f0437183700) from PID 0; stack trace: ***
[2m[36m(pid=28200)[0m     @     0x7f0436d5c390 (unknown)
[2m[36m(pid=28200)[0m     @     0x7ed538f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28200)[0m     @     0x7ed53626764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28167)[0m     @     0x7f9307ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28199)[0m     @     0x7ef7c4d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28199)[0m     @     0x7ef7c4d67b53 at::TensorIterator::for_each()
[2m[36m(pid=28206)[0m     @     0x7f428be7f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28222)[0m     @     0x7f975a441b53 at::TensorIterator::for_each()
[2m[36m(pid=28222)[0m     @     0x7f975a441e11 at::TensorIterator::for_each()
[2m[36m(pid=28208)[0m     @     0x7f3b398d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28137)[0m     @     0x7fabe80f3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28137)[0m     @     0x7fabe80f3b53 at::TensorIterator::for_each()
[2m[36m(pid=28159)[0m     @     0x7f8ce809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28159)[0m     @     0x7f8ce538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28159)[0m     @     0x7f8ce5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28220)[0m     @     0x7f9ccec1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28220)[0m     @     0x7f9ccec1cb53 at::TensorIterator::for_each()
[2m[36m(pid=28203)[0m     @     0x7f81ad392b53 at::TensorIterator::for_each()
[2m[36m(pid=28245)[0m     @     0x7fa171903b53 at::TensorIterator::for_each()
[2m[36m(pid=28143)[0m     @     0x7f92b766fb53 at::TensorIterator::for_each()
[2m[36m(pid=28143)[0m     @     0x7f92b766fe11 at::TensorIterator::for_each()
[2m[36m(pid=28211)[0m     @     0x7fc12e8fbb53 at::TensorIterator::for_each()
[2m[36m(pid=28165)[0m     @     0x7f3c3e394b53 at::TensorIterator::for_each()
[2m[36m(pid=28165)[0m     @     0x7f3c3e394e11 at::TensorIterator::for_each()
[2m[36m(pid=28139)[0m     @     0x7fa5c7feafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28139)[0m     @     0x7fa5c52de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28139)[0m     @     0x7fa5c52e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28263)[0m     @     0x7f10b4623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28263)[0m     @     0x7f10b4623b53 at::TensorIterator::for_each()
[2m[36m(pid=28250)[0m     @     0x7fa3bf8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=28250)[0m     @     0x7fa3c25bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28250)[0m     @     0x7fa3c25ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28161)[0m     @     0x7f799f32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28161)[0m     @     0x7f799c62064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28161)[0m     @     0x7f799c623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28149)[0m     @     0x7fc6f7c0fe11 at::TensorIterator::for_each()
[2m[36m(pid=28149)[0m     @     0x7fc6fa928c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28149)[0m     @     0x7fc6fa94bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28169)[0m     @     0x7fc93097db53 at::TensorIterator::for_each()
[2m[36m(pid=28169)[0m     @     0x7fc93097de11 at::TensorIterator::for_each()
[2m[36m(pid=28169)[0m     @     0x7fc933696c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28221)[0m     @     0x7f9b7cdbc148 at::Tensor::copy_()
[2m[36m(pid=28221)[0m     @     0x7f9b7e9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28221)[0m     @     0x7f9b7ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28228)[0m     @     0x7fbc08cf1ed4 at::native::copy_()
[2m[36m(pid=28228)[0m     @     0x7fbc094345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28248)[0m     @     0x7f91dd32b148 at::Tensor::copy_()
[2m[36m(pid=28248)[0m     @     0x7f91def22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28248)[0m     @     0x7f91dd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28225)[0m     @     0x7ee9e2985148 at::Tensor::copy_()
[2m[36m(pid=28225)[0m     @     0x7ee9e457c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28241)[0m     @     0x7f3485b7f148 at::Tensor::copy_()
[2m[36m(pid=28241)[0m     @     0x7f3487776989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28241)[0m     @     0x7f3485a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28218)[0m     @     0x7f75eaa45148 at::Tensor::copy_()
[2m[36m(pid=28218)[0m     @     0x7f75ec63c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28218)[0m     @     0x7f75ea93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28253)[0m     @     0x7fafea692e11 at::TensorIterator::for_each()
[2m[36m(pid=28253)[0m     @     0x7fafed3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28253)[0m     @     0x7fafed3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28253)[0m     @     0x7fafea40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28219)[0m     @     0x7edc0573f148 at::Tensor::copy_()
[2m[36m(pid=28219)[0m     @     0x7edc07336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28219)[0m     @     0x7edc056375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28272)[0m     @     0x7f471c84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28272)[0m     @     0x7f471ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28175)[0m     @     0x7f14455bbb53 at::TensorIterator::for_each()
[2m[36m(pid=28175)[0m     @     0x7f14455bbe11 at::TensorIterator::for_each()
[2m[36m(pid=28175)[0m     @     0x7f14482d4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28242)[0m     @     0x7faf660d6148 at::Tensor::copy_()
[2m[36m(pid=28242)[0m     @     0x7faf67ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28210)[0m     @     0x7f8e64efe148 at::Tensor::copy_()
[2m[36m(pid=28210)[0m     @     0x7f8e66af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28170)[0m     @     0x7faa1917be11 at::TensorIterator::for_each()
[2m[36m(pid=28170)[0m     @     0x7faa1be94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28170)[0m     @     0x7faa1beb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28170)[0m     @     0x7faa18ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28158)[0m     @     0x7ef5e735ee11 at::TensorIterator::for_each()
[2m[36m(pid=28158)[0m     @     0x7ef5ea077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28158)[0m     @     0x7ef5ea09acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28259)[0m     @     0x7f1fa1c6c148 at::Tensor::copy_()
[2m[36m(pid=28259)[0m     @     0x7f1fa3863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28259)[0m     @     0x7f1fa1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28235)[0m     @     0x7ee6a9fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28235)[0m     @     0x7ee6aa0d6148 at::Tensor::copy_()
[2m[36m(pid=28235)[0m     @     0x7ee6abccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03bcfd5148 at::Tensor::copy_()
[2m[36m(pid=28232)[0m     @     0x7f03c328bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28232)[0m     @     0x55e45155afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28232)[0m     @     0x55e4514b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28232)[0m     @     0x55e451540baf _PyEval_EvalCodeWithName
[2m[36m(pid=28232)[0m     @     0x55e451541a20 method_vectorcall
[2m[36m(pid=28232)[0m     @     0x55e4514b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28232)[0m     @     0x55e451540baf _PyEval_EvalCodeWithName
[2m[36m(pid=28232)[0m     @     0x55e451541643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28232)[0m     @     0x55e4514b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28232)[0m     @     0x55e451540baf _PyEval_EvalCodeWithName
[2m[36m(pid=28232)[0m     @     0x55e451541643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28232)[0m     @     0x55e4514b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28232)[0m     @     0x55e451540baf _PyEval_EvalCodeWithName
[2m[36m(pid=28232)[0m     @     0x55e451541643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28232)[0m     @     0x55e4514b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28232)[0m     @     0x55e451540baf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x7f09377a0b53 at::TensorIterator::for_each()
[2m[36m(pid=28217)[0m     @     0x7f09377a0e11 at::TensorIterator::for_each()
[2m[36m(pid=28145)[0m     @     0x7fb2a38a1b53 at::TensorIterator::for_each()
[2m[36m(pid=28145)[0m     @     0x7fb2a38a1e11 at::TensorIterator::for_each()
[2m[36m(pid=28145)[0m     @     0x7fb2a65bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28145)[0m     @     0x7fb2a65ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28258)[0m     @     0x7fc9f226ae11 at::TensorIterator::for_each()
[2m[36m(pid=28258)[0m     @     0x7fc9f4f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28258)[0m     @     0x7fc9f4fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28258)[0m     @     0x7fc9f1fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28153)[0m     @     0x7f1e3e26ab53 at::TensorIterator::for_each()
[2m[36m(pid=28153)[0m     @     0x7f1e3e26ae11 at::TensorIterator::for_each()
[2m[36m(pid=28153)[0m     @     0x7f1e40f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28141)[0m     @     0x7f5694ffeb53 at::TensorIterator::for_each()
[2m[36m(pid=28141)[0m     @     0x7f5694ffee11 at::TensorIterator::for_each()
[2m[36m(pid=28141)[0m     @     0x7f5697d17c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28266)[0m     @     0x7fbaafff9b53 at::TensorIterator::for_each()
[2m[36m(pid=28266)[0m     @     0x7fbaafff9e11 at::TensorIterator::for_each()
[2m[36m(pid=28266)[0m     @     0x7fbab2d12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28266)[0m     @     0x7fbab2d35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28223)[0m     @     0x7f1795392e11 at::TensorIterator::for_each()
[2m[36m(pid=28223)[0m     @     0x7f17980abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28223)[0m     @     0x7f17980cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28197)[0m     @     0x7ed5e2652e11 at::TensorIterator::for_each()
[2m[36m(pid=28197)[0m     @     0x7ed5e536bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28197)[0m     @     0x7ed5e538ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28197)[0m     @     0x7ed5e23cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28234)[0m     @     0x7f0b6a293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=28234)[0m     @     0x7f0b6758764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=28234)[0m     @     0x7f0b6758a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28144)[0m     @     0x7f27ba195b53 at::TensorIterator::for_each()
[2m[36m(pid=28144)[0m     @     0x7f27ba195e11 at::TensorIterator::for_each()
[2m[36m(pid=28144)[0m     @     0x7f27bceaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28144)[0m     @     0x7f27bced1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28207)[0m     @     0x7ed30818de11 at::TensorIterator::for_each()
[2m[36m(pid=28207)[0m     @     0x7ed30aea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28207)[0m     @     0x7ed30aec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28238)[0m     @     0x7f0d56b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28238)[0m     @     0x7f0d56c56148 at::Tensor::copy_()
[2m[36m(pid=28152)[0m     @     0x7edaa82f5e11 at::TensorIterator::for_each()
[2m[36m(pid=28152)[0m     @     0x7edaab00ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28152)[0m     @     0x7edaab031cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28147)[0m     @     0x7ed554e20e11 at::TensorIterator::for_each()
[2m[36m(pid=28147)[0m     @     0x7ed557b39c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28147)[0m     @     0x7ed557b5ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28215)[0m     @     0x7f83656a8b53 at::TensorIterator::for_each()
[2m[36m(pid=28215)[0m     @     0x7f83656a8e11 at::TensorIterator::for_each()
[2m[36m(pid=28215)[0m     @     0x7f83683c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28213)[0m     @     0x7f86d0efe148 at::Tensor::copy_()
[2m[36m(pid=28213)[0m     @     0x7f86d2af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28214)[0m     @     0x7f0d5d392b53 at::TensorIterator::for_each()
[2m[36m(pid=28214)[0m     @     0x7f0d5d392e11 at::TensorIterator::for_each()
[2m[36m(pid=28214)[0m     @     0x7f0d600abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28214)[0m     @     0x7f0d600cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28247)[0m     @     0x7ef205455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28247)[0m     @     0x7ef2037565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28201)[0m     @     0x7f70ae692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28201)[0m     @     0x7f70ae692b53 at::TensorIterator::for_each()
[2m[36m(pid=28236)[0m     @     0x7f4c2ae6ee11 at::TensorIterator::for_each()
[2m[36m(pid=28236)[0m     @     0x7f4c2db87c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28236)[0m     @     0x7f4c2dbaacfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28249)[0m     @     0x7ee90623c148 at::Tensor::copy_()
[2m[36m(pid=28249)[0m     @     0x7ee907e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28270)[0m     @     0x7f758358a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28270)[0m     @     0x7f758358ab53 at::TensorIterator::for_each()
[2m[36m(pid=28160)[0m     @     0x7ee923ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28160)[0m     @     0x7ee923ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=28171)[0m     @     0x7ed190412e11 at::TensorIterator::for_each()
[2m[36m(pid=28171)[0m     @     0x7ed19312bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28171)[0m     @     0x7ed19314ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28255)[0m     @     0x7f62f967b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28255)[0m     @     0x7f62f9783148 at::Tensor::copy_()
[2m[36m(pid=28212)[0m     @     0x7f902c340e11 at::TensorIterator::for_each()
[2m[36m(pid=28212)[0m     @     0x7f902f059c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28212)[0m     @     0x7f902f07ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28237)[0m     @     0x7f831244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28237)[0m     @     0x7f8312553148 at::Tensor::copy_()
[2m[36m(pid=28157)[0m     @     0x7efabee7be11 at::TensorIterator::for_each()
[2m[36m(pid=28157)[0m     @     0x7efac1b94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28157)[0m     @     0x7efac1bb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28163)[0m     @     0x7f9486baae11 at::TensorIterator::for_each()
[2m[36m(pid=28163)[0m     @     0x7f94898c3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28163)[0m     @     0x7f94898e6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28148)[0m     @     0x7f440333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28148)[0m     @     0x7f440335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28227)[0m     @     0x7f4418991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28227)[0m     @     0x7f44189b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28216)[0m     @     0x7f5122c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28216)[0m     @     0x7f5122d5b148 at::Tensor::copy_()
[2m[36m(pid=28140)[0m     @     0x7ed8ac0a9b53 at::TensorIterator::for_each()
[2m[36m(pid=28138)[0m     @     0x7f4307e7f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28138)[0m     @     0x7f4307e7fb53 at::TensorIterator::for_each()
[2m[36m(pid=28209)[0m     @     0x7fa4952c0b53 at::TensorIterator::for_each()
[2m[36m(pid=28256)[0m     @     0x7f331d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=28150)[0m     @     0x7fbc4a1a3e11 at::TensorIterator::for_each()
[2m[36m(pid=28150)[0m     @     0x7fbc4cebcc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28150)[0m     @     0x7fbc4cedfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28142)[0m     @     0x7f3566f33e11 at::TensorIterator::for_each()
[2m[36m(pid=28142)[0m     @     0x7f3569c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28142)[0m     @     0x7f3569c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28229)[0m     @     0x7f63b3ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=28229)[0m     @     0x7f63b3ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=28229)[0m     @     0x7f63b67eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28229)[0m     @     0x7f63b680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28173)[0m     @     0x7fa99714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28173)[0m     @     0x7fa99418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28173)[0m     @     0x7fa99418ac3f at::native::copy_impl()
[2m[36m(pid=28154)[0m     @     0x7ef72378fe11 at::TensorIterator::for_each()
[2m[36m(pid=28154)[0m     @     0x7ef7264a8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28154)[0m     @     0x7ef7264cbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28154)[0m     @     0x7ef723509009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28200)[0m     @     0x7ed53626a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=28200)[0m     @     0x7ed53626ab53 at::TensorIterator::for_each()
[2m[36m(pid=28167)[0m     @     0x7f9307ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=28167)[0m     @     0x7f9307ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=28167)[0m     @     0x7f930a7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28167)[0m     @     0x7f930a80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28199)[0m     @     0x7ef7c4d67e11 at::TensorIterator::for_each()
[2m[36m(pid=28199)[0m     @     0x7ef7c7a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28199)[0m     @     0x7ef7c7aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28206)[0m     @     0x7f428be7fb53 at::TensorIterator::for_each()
[2m[36m(pid=28206)[0m     @     0x7f428be7fe11 at::TensorIterator::for_each()
[2m[36m(pid=28206)[0m     @     0x7f428eb98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28206)[0m     @     0x7f428ebbbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28222)[0m     @     0x7f975d15ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28222)[0m     @     0x7f975d17dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28222)[0m     @     0x7f975a1bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28222)[0m     @     0x7f975a1b9c3f at::native::copy_impl()
[2m[36m(pid=28208)[0m     @     0x7f3b398d3b53 at::TensorIterator::for_each()
[2m[36m(pid=28208)[0m     @     0x7f3b398d3e11 at::TensorIterator::for_each()
[2m[36m(pid=28208)[0m     @     0x7f3b3c5ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28137)[0m     @     0x7fabe80f3e11 at::TensorIterator::for_each()
[2m[36m(pid=28137)[0m     @     0x7fabeae0cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28137)[0m     @     0x7fabeae2fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28137)[0m     @     0x7fabe7e6d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28137)[0m     @     0x7fabe7e6bc3f at::native::copy_impl()
[2m[36m(pid=28159)[0m     @     0x7f8ce5392b53 at::TensorIterator::for_each()
[2m[36m(pid=28159)[0m     @     0x7f8ce5392e11 at::TensorIterator::for_each()
[2m[36m(pid=28159)[0m     @     0x7f8ce80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28220)[0m     @     0x7f9ccec1ce11 at::TensorIterator::for_each()
[2m[36m(pid=28220)[0m     @     0x7f9cd1935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28220)[0m     @     0x7f9cd1958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28203)[0m     @     0x7f81ad392e11 at::TensorIterator::for_each()
[2m[36m(pid=28203)[0m     @     0x7f81b00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28203)[0m     @     0x7f81b00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28203)[0m     @     0x7f81ad10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28203)[0m     @     0x7f81ad10ac3f at::native::copy_impl()
[2m[36m(pid=28245)[0m     @     0x7fa171903e11 at::TensorIterator::for_each()
[2m[36m(pid=28245)[0m     @     0x7fa17461cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28245)[0m     @     0x7fa17463fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28245)[0m     @     0x7fa17167d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28245)[0m     @     0x7fa17167bc3f at::native::copy_impl()
[2m[36m(pid=28143)[0m     @     0x7f92ba388c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28143)[0m     @     0x7f92ba3abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28143)[0m     @     0x7f92b73e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28143)[0m     @     0x7f92b73e7c3f at::native::copy_impl()
[2m[36m(pid=28211)[0m     @     0x7fc12e8fbe11 at::TensorIterator::for_each()
[2m[36m(pid=28211)[0m     @     0x7fc131614c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28211)[0m     @     0x7fc131637cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28211)[0m     @     0x7fc12e675009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28211)[0m     @     0x7fc12e673c3f at::native::copy_impl()
[2m[36m(pid=28165)[0m     @     0x7f3c410adc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28165)[0m     @     0x7f3c410d0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28165)[0m     @     0x7f3c3e10e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28165)[0m     @     0x7f3c3e10cc3f at::native::copy_impl()
[2m[36m(pid=28139)[0m     @     0x7fa5c52e1b53 at::TensorIterator::for_each()
[2m[36m(pid=28139)[0m     @     0x7fa5c52e1e11 at::TensorIterator::for_each()
[2m[36m(pid=28263)[0m     @     0x7f10b4623e11 at::TensorIterator::for_each()
[2m[36m(pid=28263)[0m     @     0x7f10b733cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28263)[0m     @     0x7f10b735fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28263)[0m     @     0x7f10b439d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28250)[0m     @     0x7fa3bf61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28250)[0m     @     0x7fa3bf619c3f at::native::copy_impl()
[2m[36m(pid=28250)[0m     @     0x7fa3bf61aed4 at::native::copy_()
[2m[36m(pid=28161)[0m     @     0x7f799c623b53 at::TensorIterator::for_each()
[2m[36m(pid=28155)[0m     @     0x7f74a413fb53 at::TensorIterator::for_each()
[2m[36m(pid=28149)[0m     @     0x7fc6f7989009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28149)[0m     @     0x7fc6f7987c3f at::native::copy_impl()
[2m[36m(pid=28149)[0m     @     0x7fc6f7988ed4 at::native::copy_()
[2m[36m(pid=28169)[0m     @     0x7fc9336b9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28169)[0m     @     0x7fc9306f7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28169)[0m     @     0x7fc9306f5c3f at::native::copy_impl()
[2m[36m(pid=28221)[0m     @     0x7f9b7cdbc148 at::Tensor::copy_()
[2m[36m(pid=28221)[0m     @     0x7f9b83072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28221)[0m     @     0x561e4b1f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28221)[0m     @     0x561e4b151b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28221)[0m     @     0x561e4b1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28221)[0m     @     0x561e4b1dda20 method_vectorcall
[2m[36m(pid=28221)[0m     @     0x561e4b151bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28221)[0m     @     0x561e4b1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28221)[0m     @     0x561e4b1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28221)[0m     @     0x561e4b152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28221)[0m     @     0x561e4b1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28221)[0m     @     0x561e4b1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28221)[0m     @     0x561e4b152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28221)[0m     @     0x561e4b1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28221)[0m     @     0x561e4b1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28221)[0m     @     0x561e4b152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28221)[0m     @     0x561e4b1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28228)[0m     @     0x7fbc0953c148 at::Tensor::copy_()
[2m[36m(pid=28228)[0m     @     0x7fbc0b133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28228)[0m     @     0x7fbc094345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28248)[0m     @     0x7f91dd32b148 at::Tensor::copy_()
[2m[36m(pid=28248)[0m     @     0x7f91e35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28248)[0m     @     0x55bdfc121fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28248)[0m     @     0x55bdfc07cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28248)[0m     @     0x55bdfc107baf _PyEval_EvalCodeWithName
[2m[36m(pid=28248)[0m     @     0x55bdfc108a20 method_vectorcall
[2m[36m(pid=28248)[0m     @     0x55bdfc07cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28248)[0m     @     0x55bdfc107baf _PyEval_EvalCodeWithName
[2m[36m(pid=28248)[0m     @     0x55bdfc108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28248)[0m     @     0x55bdfc07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28248)[0m     @     0x55bdfc107baf _PyEval_EvalCodeWithName
[2m[36m(pid=28248)[0m     @     0x55bdfc108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28248)[0m     @     0x55bdfc07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28248)[0m     @     0x55bdfc107baf _PyEval_EvalCodeWithName
[2m[36m(pid=28248)[0m     @     0x55bdfc108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28248)[0m     @     0x55bdfc07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28248)[0m     @     0x55bdfc107baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x7ee9e287d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28225)[0m     @     0x7ee9e2985148 at::Tensor::copy_()
[2m[36m(pid=28225)[0m     @     0x7ee9e8c3bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28225)[0m     @     0x55ffdbf50fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28225)[0m     @     0x55ffdbeabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28225)[0m     @     0x55ffdbf36baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x55ffdbf37a20 method_vectorcall
[2m[36m(pid=28225)[0m     @     0x55ffdbeabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28225)[0m     @     0x55ffdbf36baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x55ffdbf37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28225)[0m     @     0x55ffdbeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28225)[0m     @     0x55ffdbf36baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x55ffdbf37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28241)[0m     @     0x7f3485b7f148 at::Tensor::copy_()
[2m[36m(pid=28241)[0m     @     0x7f348be35bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28241)[0m     @     0x5560a1dd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28241)[0m     @     0x5560a1d2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28241)[0m     @     0x5560a1db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28241)[0m     @     0x5560a1db7a20 method_vectorcall
[2m[36m(pid=28241)[0m     @     0x5560a1d2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28241)[0m     @     0x5560a1db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28241)[0m     @     0x5560a1db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28241)[0m     @     0x5560a1d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28241)[0m     @     0x5560a1db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28241)[0m     @     0x5560a1db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28241)[0m     @     0x5560a1d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28241)[0m     @     0x5560a1db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28241)[0m     @     0x5560a1db7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28241)[0m     @     0x5560a1d2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28241)[0m     @     0x5560a1db6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28218)[0m     @     0x7f75eaa45148 at::Tensor::copy_()
[2m[36m(pid=28218)[0m     @     0x7f75f0cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28218)[0m     @     0x55a344ad4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28218)[0m     @     0x55a344a2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28218)[0m     @     0x55a344ababaf _PyEval_EvalCodeWithName
[2m[36m(pid=28218)[0m     @     0x55a344abba20 method_vectorcall
[2m[36m(pid=28218)[0m     @     0x55a344a2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28218)[0m     @     0x55a344ababaf _PyEval_EvalCodeWithName
[2m[36m(pid=28218)[0m     @     0x55a344abb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28218)[0m     @     0x55a344a30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28218)[0m     @     0x55a344ababaf _PyEval_EvalCodeWithName
[2m[36m(pid=28218)[0m     @     0x55a344abb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28218)[0m     @     0x55a344a30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28218)[0m     @     0x55a344ababaf _PyEval_EvalCodeWithName
[2m[36m(pid=28218)[0m     @     0x55a344abb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28218)[0m     @     0x55a344a30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28218)[0m     @     0x55a344ababaf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x7fafea40ac3f at::native::copy_impl()
[2m[36m(pid=28253)[0m     @     0x7fafea40bed4 at::native::copy_()
[2m[36m(pid=28219)[0m     @     0x7edc0573f148 at::Tensor::copy_()
[2m[36m(pid=28219)[0m     @     0x7edc0b9f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28219)[0m     @     0x562f17f82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28219)[0m     @     0x562f17eddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28219)[0m     @     0x562f17f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=28219)[0m     @     0x562f17f69a20 method_vectorcall
[2m[36m(pid=28219)[0m     @     0x562f17eddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28219)[0m     @     0x562f17f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=28219)[0m     @     0x562f17f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28219)[0m     @     0x562f17ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28219)[0m     @     0x562f17f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=28219)[0m     @     0x562f17f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28219)[0m     @     0x562f17ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28219)[0m     @     0x562f17f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=28219)[0m     @     0x562f17f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28219)[0m     @     0x562f17ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28219)[0m     @     0x562f17f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=28272)[0m     @     0x7f471ac56148 at::Tensor::copy_()
[2m[36m(pid=28272)[0m     @     0x7f4720f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28272)[0m     @     0x559db4820fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28272)[0m     @     0x559db477bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28272)[0m     @     0x559db4806baf _PyEval_EvalCodeWithName
[2m[36m(pid=28272)[0m     @     0x559db4807a20 method_vectorcall
[2m[36m(pid=28272)[0m     @     0x559db477bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28272)[0m     @     0x559db4806baf _PyEval_EvalCodeWithName
[2m[36m(pid=28272)[0m     @     0x559db4807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28272)[0m     @     0x559db477c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28272)[0m     @     0x559db4806baf _PyEval_EvalCodeWithName
[2m[36m(pid=28272)[0m     @     0x559db4807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28272)[0m     @     0x559db477c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28272)[0m     @     0x559db4806baf _PyEval_EvalCodeWithName
[2m[36m(pid=28272)[0m     @     0x559db4807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28272)[0m     @     0x559db477c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28272)[0m     @     0x559db4806baf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x7f14482f7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28175)[0m     @     0x7f1445335009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28175)[0m     @     0x7f1445333c3f at::native::copy_impl()
[2m[36m(pid=28242)[0m     @     0x7faf65fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28242)[0m     @     0x7faf660d6148 at::Tensor::copy_()
[2m[36m(pid=28242)[0m     @     0x7faf6c38cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28242)[0m     @     0x55733158efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28242)[0m     @     0x5573314e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28242)[0m     @     0x557331574baf _PyEval_EvalCodeWithName
[2m[36m(pid=28242)[0m     @     0x557331575a20 method_vectorcall
[2m[36m(pid=28242)[0m     @     0x5573314e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28242)[0m     @     0x557331574baf _PyEval_EvalCodeWithName
[2m[36m(pid=28242)[0m     @     0x557331575643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28242)[0m     @     0x5573314ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28242)[0m     @     0x557331574baf _PyEval_EvalCodeWithName
[2m[36m(pid=28242)[0m     @     0x557331575643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28242)[0m     @     0x5573314ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28242)[0m     @     0x557331574baf _PyEval_EvalCodeWithName
[2m[36m(pid=28242)[0m     @     0x557331575643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28242)[0m     @     0x5573314ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28242)[0m     @     0x557331574baf _PyEval_EvalCodeWithName
[2m[36m(pid=28210)[0m     @     0x7f8e64df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28210)[0m     @     0x7f8e64efe148 at::Tensor::copy_()
[2m[36m(pid=28210)[0m     @     0x7f8e6b1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28210)[0m     @     0x558e08d67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28210)[0m     @     0x558e08cc2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28210)[0m     @     0x558e08d4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28210)[0m     @     0x558e08d4ea20 method_vectorcall
[2m[36m(pid=28210)[0m     @     0x558e08cc2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28210)[0m     @     0x558e08d4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28210)[0m     @     0x558e08d4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28210)[0m     @     0x558e08cc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28210)[0m     @     0x558e08d4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28210)[0m     @     0x558e08d4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28210)[0m     @     0x558e08cc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28210)[0m     @     0x558e08d4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28210)[0m     @     0x558e08d4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28210)[0m     @     0x558e08cc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28210)[0m     @     0x558e08d4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x7faa18ef3c3f at::native::copy_impl()
[2m[36m(pid=28170)[0m     @     0x7faa18ef4ed4 at::native::copy_()
[2m[36m(pid=28158)[0m     @     0x7ef5e70d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28158)[0m     @     0x7ef5e70d6c3f at::native::copy_impl()
[2m[36m(pid=28158)[0m     @     0x7ef5e70d7ed4 at::native::copy_()
[2m[36m(pid=28259)[0m     @     0x7f1fa1c6c148 at::Tensor::copy_()
[2m[36m(pid=28259)[0m     @     0x7f1fa7f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28259)[0m     @     0x564529a6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28259)[0m     @     0x5645299c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28259)[0m     @     0x564529a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=28259)[0m     @     0x564529a53a20 method_vectorcall
[2m[36m(pid=28259)[0m     @     0x5645299c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28259)[0m     @     0x564529a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=28259)[0m     @     0x564529a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28259)[0m     @     0x5645299c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28259)[0m     @     0x564529a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=28259)[0m     @     0x564529a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28259)[0m     @     0x5645299c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28259)[0m     @     0x564529a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=28259)[0m     @     0x564529a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28259)[0m     @     0x5645299c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28259)[0m     @     0x564529a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=28235)[0m     @     0x7ee6a9fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28235)[0m     @     0x7ee6aa0d6148 at::Tensor::copy_()
[2m[36m(pid=28235)[0m     @     0x7ee6b038cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28235)[0m     @     0x5600edff1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28235)[0m     @     0x5600edf4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28235)[0m     @     0x5600edfd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28235)[0m     @     0x5600edfd8a20 method_vectorcall
[2m[36m(pid=28235)[0m     @     0x5600edf4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28235)[0m     @     0x5600edfd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28235)[0m     @     0x5600edfd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28217)[0m     @     0x7f093a4b9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28217)[0m     @     0x7f093a4dccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28145)[0m     @     0x7fb2a361b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28145)[0m     @     0x7fb2a3619c3f at::native::copy_impl()
[2m[36m(pid=28145)[0m     @     0x7fb2a361aed4 at::native::copy_()
[2m[36m(pid=28258)[0m     @     0x7fc9f1fe2c3f at::native::copy_impl()
[2m[36m(pid=28258)[0m     @     0x7fc9f1fe3ed4 at::native::copy_()
[2m[36m(pid=28258)[0m     @     0x7fc9f27265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28153)[0m     @     0x7f1e40fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28153)[0m     @     0x7f1e3dfe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28153)[0m     @     0x7f1e3dfe2c3f at::native::copy_impl()
[2m[36m(pid=28141)[0m     @     0x7f5697d3acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28141)[0m     @     0x7f5694d78009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28141)[0m     @     0x7f5694d76c3f at::native::copy_impl()
[2m[36m(pid=28266)[0m     @     0x7fbaafd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28266)[0m     @     0x7fbaafd71c3f at::native::copy_impl()
[2m[36m(pid=28266)[0m     @     0x7fbaafd72ed4 at::native::copy_()
[2m[36m(pid=28223)[0m     @     0x7f179510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28223)[0m     @     0x7f179510ac3f at::native::copy_impl()
[2m[36m(pid=28223)[0m     @     0x7f179510bed4 at::native::copy_()
[2m[36m(pid=28223)[0m     @     0x7f179584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28197)[0m     @     0x7ed5e23cac3f at::native::copy_impl()
[2m[36m(pid=28197)[0m     @     0x7ed5e23cbed4 at::native::copy_()
[2m[36m(pid=28197)[0m     @     0x7ed5e2b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28234)[0m     @     0x7f0b6758ab53 at::TensorIterator::for_each()
[2m[36m(pid=28234)[0m     @     0x7f0b6758ae11 at::TensorIterator::for_each()
[2m[36m(pid=28234)[0m     @     0x7f0b6a2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28234)[0m     @     0x7f0b6a2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28144)[0m     @     0x7f27b9f0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28144)[0m     @     0x7f27b9f0dc3f at::native::copy_impl()
[2m[36m(pid=28144)[0m     @     0x7f27b9f0eed4 at::native::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed307f07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28207)[0m     @     0x7ed307f05c3f at::native::copy_impl()
[2m[36m(pid=28207)[0m     @     0x7ed307f06ed4 at::native::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed3086495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28238)[0m     @     0x7f0d5884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28152)[0m     @     0x7edaa806f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28152)[0m     @     0x7edaa806dc3f at::native::copy_impl()
[2m[36m(pid=28152)[0m     @     0x7edaa806eed4 at::native::copy_()
[2m[36m(pid=28152)[0m     @     0x7edaa87b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28147)[0m     @     0x7ed554b9a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28147)[0m     @     0x7ed554b98c3f at::native::copy_impl()
[2m[36m(pid=28147)[0m     @     0x7ed554b99ed4 at::native::copy_()
[2m[36m(pid=28147)[0m     @     0x7ed5552dc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28215)[0m     @     0x7f83683e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28215)[0m     @     0x7f8365422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28215)[0m     @     0x7f8365420c3f at::native::copy_impl()
[2m[36m(pid=28215)[0m     @     0x7f8365421ed4 at::native::copy_()
[2m[36m(pid=28213)[0m     @     0x7f86d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28213)[0m     @     0x7f86d0efe148 at::Tensor::copy_()
[2m[36m(pid=28213)[0m     @     0x7f86d71b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28213)[0m     @     0x564dd2752fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28213)[0m     @     0x564dd26adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28213)[0m     @     0x564dd2738baf _PyEval_EvalCodeWithName
[2m[36m(pid=28213)[0m     @     0x564dd2739a20 method_vectorcall
[2m[36m(pid=28213)[0m     @     0x564dd26adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28213)[0m     @     0x564dd2738baf _PyEval_EvalCodeWithName
[2m[36m(pid=28213)[0m     @     0x564dd2739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28213)[0m     @     0x564dd26ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28213)[0m     @     0x564dd2738baf _PyEval_EvalCodeWithName
[2m[36m(pid=28213)[0m     @     0x564dd2739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28213)[0m     @     0x564dd26ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28213)[0m     @     0x564dd2738baf _PyEval_EvalCodeWithName
[2m[36m(pid=28213)[0m     @     0x564dd2739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28213)[0m     @     0x564dd26ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28213)[0m     @     0x564dd2738baf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x7f0d5d10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28214)[0m     @     0x7f0d5d10ac3f at::native::copy_impl()
[2m[36m(pid=28214)[0m     @     0x7f0d5d10bed4 at::native::copy_()
[2m[36m(pid=28214)[0m     @     0x7f0d5d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28247)[0m     @     0x7ef20385e148 at::Tensor::copy_()
[2m[36m(pid=28247)[0m     @     0x7ef209b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28247)[0m     @     0x5561756f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28247)[0m     @     0x556175652b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28247)[0m     @     0x5561756ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28247)[0m     @     0x5561756dea20 method_vectorcall
[2m[36m(pid=28247)[0m     @     0x556175652bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28247)[0m     @     0x5561756ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28247)[0m     @     0x5561756de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28247)[0m     @     0x556175653689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28247)[0m     @     0x5561756ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28247)[0m     @     0x5561756de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28247)[0m     @     0x556175653689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28247)[0m     @     0x5561756ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28247)[0m     @     0x5561756de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28247)[0m     @     0x556175653689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28247)[0m     @     0x5561756ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x7f70ae692e11 at::TensorIterator::for_each()
[2m[36m(pid=28201)[0m     @     0x7f70b13abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28201)[0m     @     0x7f70b13cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28201)[0m     @     0x7f70ae40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28201)[0m     @     0x7f70ae40ac3f at::native::copy_impl()
[2m[36m(pid=28236)[0m     @     0x7f4c2abe8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28236)[0m     @     0x7f4c2abe6c3f at::native::copy_impl()
[2m[36m(pid=28236)[0m     @     0x7f4c2abe7ed4 at::native::copy_()
[2m[36m(pid=28236)[0m     @     0x7f4c2b32a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28249)[0m     @     0x7ee9061345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28249)[0m     @     0x7ee90623c148 at::Tensor::copy_()
[2m[36m(pid=28249)[0m     @     0x7ee90c4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28249)[0m     @     0x55ce13cbdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28249)[0m     @     0x55ce13c18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28249)[0m     @     0x55ce13ca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28249)[0m     @     0x55ce13ca4a20 method_vectorcall
[2m[36m(pid=28249)[0m     @     0x55ce13c18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28249)[0m     @     0x55ce13ca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28249)[0m     @     0x55ce13ca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28249)[0m     @     0x55ce13c19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28249)[0m     @     0x55ce13ca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28249)[0m     @     0x55ce13ca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28249)[0m     @     0x55ce13c19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28249)[0m     @     0x55ce13ca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28249)[0m     @     0x55ce13ca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28249)[0m     @     0x55ce13c19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28249)[0m     @     0x55ce13ca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x7f758358ae11 at::TensorIterator::for_each()
[2m[36m(pid=28270)[0m     @     0x7f75862a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28270)[0m     @     0x7f75862c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28270)[0m     @     0x7f7583304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28160)[0m     @     0x7ee923ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=28160)[0m     @     0x7ee9267eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28160)[0m     @     0x7ee92680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28160)[0m     @     0x7ee92384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28160)[0m     @     0x7ee923849c3f at::native::copy_impl()
[2m[36m(pid=28160)[0m     @     0x7ee92384aed4 at::native::copy_()
[2m[36m(pid=28160)[0m     @     0x7ee923f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28171)[0m     @     0x7ed19018c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28171)[0m     @     0x7ed19018ac3f at::native::copy_impl()
[2m[36m(pid=28171)[0m     @     0x7ed19018bed4 at::native::copy_()
[2m[36m(pid=28171)[0m     @     0x7ed1908ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28255)[0m     @     0x7f62ffa39bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28255)[0m     @     0x5631102d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28255)[0m     @     0x56311022bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28255)[0m     @     0x5631102b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28255)[0m     @     0x5631102b7a20 method_vectorcall
[2m[36m(pid=28255)[0m     @     0x56311022bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28255)[0m     @     0x5631102b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28255)[0m     @     0x5631102b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28255)[0m     @     0x56311022c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28255)[0m     @     0x5631102b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28255)[0m     @     0x5631102b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28255)[0m     @     0x56311022c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28255)[0m     @     0x5631102b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28255)[0m     @     0x5631102b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28255)[0m     @     0x56311022c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28255)[0m     @     0x5631102b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x7f902c0ba009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28212)[0m     @     0x7f902c0b8c3f at::native::copy_impl()
[2m[36m(pid=28212)[0m     @     0x7f902c0b9ed4 at::native::copy_()
[2m[36m(pid=28212)[0m     @     0x7f902c7fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28237)[0m     @     0x7f831414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28237)[0m     @     0x7f831244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28237)[0m     @     0x7f8312553148 at::Tensor::copy_()
[2m[36m(pid=28237)[0m     @     0x7f8318809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28237)[0m     @     0x5579d14a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28237)[0m     @     0x5579d13fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28237)[0m     @     0x5579d1486baf _PyEval_EvalCodeWithName
[2m[36m(pid=28237)[0m     @     0x5579d1487a20 method_vectorcall
[2m[36m(pid=28237)[0m     @     0x5579d13fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28237)[0m     @     0x5579d1486baf _PyEval_EvalCodeWithName
[2m[36m(pid=28237)[0m     @     0x5579d1487643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28237)[0m     @     0x5579d13fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28237)[0m     @     0x5579d1486baf _PyEval_EvalCodeWithName
[2m[36m(pid=28237)[0m     @     0x5579d1487643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28237)[0m     @     0x5579d13fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28237)[0m     @     0x5579d1486baf _PyEval_EvalCodeWithName
[2m[36m(pid=28237)[0m     @     0x5579d1487643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28237)[0m     @     0x5579d13fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28237)[0m     @     0x5579d1486baf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x7efabebf5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28157)[0m     @     0x7efabebf3c3f at::native::copy_impl()
[2m[36m(pid=28157)[0m     @     0x7efabebf4ed4 at::native::copy_()
[2m[36m(pid=28157)[0m     @     0x7efabf3375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28163)[0m     @     0x7f9486924009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28163)[0m     @     0x7f9486922c3f at::native::copy_impl()
[2m[36m(pid=28163)[0m     @     0x7f9486923ed4 at::native::copy_()
[2m[36m(pid=28163)[0m     @     0x7f94870665cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28148)[0m     @     0x7f440039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28148)[0m     @     0x7f440039bc3f at::native::copy_impl()
[2m[36m(pid=28148)[0m     @     0x7f440039ced4 at::native::copy_()
[2m[36m(pid=28148)[0m     @     0x7f4400adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28227)[0m     @     0x7f44159f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28227)[0m     @     0x7f44159f0c3f at::native::copy_impl()
[2m[36m(pid=28227)[0m     @     0x7f44159f1ed4 at::native::copy_()
[2m[36m(pid=28227)[0m     @     0x7f44161345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28216)[0m     @     0x7f5129011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28216)[0m     @     0x55e741f84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28216)[0m     @     0x55e741edfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28216)[0m     @     0x55e741f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28216)[0m     @     0x55e741f6ba20 method_vectorcall
[2m[36m(pid=28216)[0m     @     0x55e741edfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28216)[0m     @     0x55e741f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28216)[0m     @     0x55e741f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28216)[0m     @     0x55e741ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28216)[0m     @     0x55e741f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28216)[0m     @     0x55e741f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28216)[0m     @     0x55e741ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28216)[0m     @     0x55e741f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28216)[0m     @     0x55e741f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28216)[0m     @     0x55e741ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28216)[0m     @     0x55e741f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x7ed8ac0a9e11 at::TensorIterator::for_each()
[2m[36m(pid=28140)[0m     @     0x7ed8aedc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28140)[0m     @     0x7ed8aede5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28140)[0m     @     0x7ed8abe23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28140)[0m     @     0x7ed8abe21c3f at::native::copy_impl()
[2m[36m(pid=28138)[0m     @     0x7f4307e7fe11 at::TensorIterator::for_each()
[2m[36m(pid=28138)[0m     @     0x7f430ab98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28138)[0m     @     0x7f430abbbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28138)[0m     @     0x7f4307bf9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28138)[0m     @     0x7f4307bf7c3f at::native::copy_impl()
[2m[36m(pid=28209)[0m     @     0x7fa4952c0e11 at::TensorIterator::for_each()
[2m[36m(pid=28209)[0m     @     0x7fa497fd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28209)[0m     @     0x7fa497ffccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28209)[0m     @     0x7fa49503a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28209)[0m     @     0x7fa495038c3f at::native::copy_impl()
[2m[36m(pid=28256)[0m     @     0x7f331d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=28256)[0m     @     0x7f33203c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28256)[0m     @     0x7f33203e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28256)[0m     @     0x7f331d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28256)[0m     @     0x7f331d420c3f at::native::copy_impl()
[2m[36m(pid=28150)[0m     @     0x7fbc49f1d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28150)[0m     @     0x7fbc49f1bc3f at::native::copy_impl()
[2m[36m(pid=28150)[0m     @     0x7fbc49f1ced4 at::native::copy_()
[2m[36m(pid=28150)[0m     @     0x7fbc4a65f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28142)[0m     @     0x7f3566cad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28142)[0m     @     0x7f3566cabc3f at::native::copy_impl()
[2m[36m(pid=28229)[0m     @     0x7f63b384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28229)[0m     @     0x7f63b3849c3f at::native::copy_impl()
[2m[36m(pid=28229)[0m     @     0x7f63b384aed4 at::native::copy_()
[2m[36m(pid=28173)[0m     @     0x7fa99418bed4 at::native::copy_()
[2m[36m(pid=28173)[0m     @     0x7fa9948ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28173)[0m     @     0x7fa9949d6148 at::Tensor::copy_()
[2m[36m(pid=28154)[0m     @     0x7ef723507c3f at::native::copy_impl()
[2m[36m(pid=28154)[0m     @     0x7ef723508ed4 at::native::copy_()
[2m[36m(pid=28154)[0m     @     0x7ef723c4b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28200)[0m     @     0x7ed53626ae11 at::TensorIterator::for_each()
[2m[36m(pid=28200)[0m     @     0x7ed538f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28200)[0m     @     0x7ed538fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28167)[0m     @     0x7f930784b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28167)[0m     @     0x7f9307849c3f at::native::copy_impl()
[2m[36m(pid=28167)[0m     @     0x7f930784aed4 at::native::copy_()
[2m[36m(pid=28199)[0m     @     0x7ef7c4ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28199)[0m     @     0x7ef7c4adfc3f at::native::copy_impl()
[2m[36m(pid=28199)[0m     @     0x7ef7c4ae0ed4 at::native::copy_()
[2m[36m(pid=28199)[0m     @     0x7ef7c52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28206)[0m     @     0x7f428bbf9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28206)[0m     @     0x7f428bbf7c3f at::native::copy_impl()
[2m[36m(pid=28206)[0m     @     0x7f428bbf8ed4 at::native::copy_()
[2m[36m(pid=28222)[0m     @     0x7f975a1baed4 at::native::copy_()
[2m[36m(pid=28222)[0m     @     0x7f975a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28222)[0m     @     0x7f975aa05148 at::Tensor::copy_()
[2m[36m(pid=28208)[0m     @     0x7f3b3c60fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28208)[0m     @     0x7f3b3964d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28208)[0m     @     0x7f3b3964bc3f at::native::copy_impl()
[2m[36m(pid=28137)[0m     @     0x7fabe7e6ced4 at::native::copy_()
[2m[36m(pid=28137)[0m     @     0x7fabe85af5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28159)[0m     @     0x7f8ce80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28159)[0m     @     0x7f8ce510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28159)[0m     @     0x7f8ce510ac3f at::native::copy_impl()
[2m[36m(pid=28159)[0m     @     0x7f8ce510bed4 at::native::copy_()
[2m[36m(pid=28220)[0m     @     0x7f9cce996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28220)[0m     @     0x7f9cce994c3f at::native::copy_impl()
[2m[36m(pid=28220)[0m     @     0x7f9cce995ed4 at::native::copy_()
[2m[36m(pid=28203)[0m     @     0x7f81ad10bed4 at::native::copy_()
[2m[36m(pid=28203)[0m     @     0x7f81ad84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28245)[0m     @     0x7fa17167ced4 at::native::copy_()
[2m[36m(pid=28245)[0m     @     0x7fa171dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28143)[0m     @     0x7f92b73e8ed4 at::native::copy_()
[2m[36m(pid=28143)[0m     @     0x7f92b7b2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28143)[0m     @     0x7f92b7c33148 at::Tensor::copy_()
[2m[36m(pid=28211)[0m     @     0x7fc12e674ed4 at::native::copy_()
[2m[36m(pid=28211)[0m     @     0x7fc12edb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28165)[0m     @     0x7f3c3e10ded4 at::native::copy_()
[2m[36m(pid=28165)[0m     @     0x7f3c3e8505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28165)[0m     @     0x7f3c3e958148 at::Tensor::copy_()
[2m[36m(pid=28139)[0m     @     0x7fa5c7ffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28139)[0m     @     0x7fa5c801dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28139)[0m     @     0x7fa5c505b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28139)[0m     @     0x7fa5c5059c3f at::native::copy_impl()
[2m[36m(pid=28139)[0m     @     0x7fa5c505aed4 at::native::copy_()
[2m[36m(pid=28139)[0m     @     0x7fa5c579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28263)[0m     @     0x7f10b439bc3f at::native::copy_impl()
[2m[36m(pid=28263)[0m     @     0x7f10b439ced4 at::native::copy_()
[2m[36m(pid=28263)[0m     @     0x7f10b4adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28250)[0m     @     0x7fa3bfd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28250)[0m     @     0x7fa3bfe65148 at::Tensor::copy_()
[2m[36m(pid=28250)[0m     @     0x7fa3c1a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28250)[0m     @     0x7fa3bfd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28161)[0m     @     0x7f799c623e11 at::TensorIterator::for_each()
[2m[36m(pid=28161)[0m     @     0x7f799f33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28161)[0m     @     0x7f799f35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28155)[0m     @     0x7f74a413fe11 at::TensorIterator::for_each()
[2m[36m(pid=28155)[0m     @     0x7f74a6e58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=28155)[0m     @     0x7f74a6e7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=28149)[0m     @     0x7fc6f80cb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28169)[0m     @     0x7fc9306f6ed4 at::native::copy_()
[2m[36m(pid=28169)[0m     @     0x7fc930e395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28169)[0m     @     0x7fc930f41148 at::Tensor::copy_()
[2m[36m(pid=28169)[0m     @     0x7fc932b38989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28228)[0m     @     0x7fbc0953c148 at::Tensor::copy_()
[2m[36m(pid=28228)[0m     @     0x7fbc0f7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28228)[0m     @     0x5622ec3aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28228)[0m     @     0x5622ec309b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28228)[0m     @     0x5622ec394baf _PyEval_EvalCodeWithName
[2m[36m(pid=28228)[0m     @     0x5622ec395a20 method_vectorcall
[2m[36m(pid=28228)[0m     @     0x5622ec309bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28228)[0m     @     0x5622ec394baf _PyEval_EvalCodeWithName
[2m[36m(pid=28228)[0m     @     0x5622ec395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28228)[0m     @     0x5622ec30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28228)[0m     @     0x5622ec394baf _PyEval_EvalCodeWithName
[2m[36m(pid=28228)[0m     @     0x5622ec395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28228)[0m     @     0x5622ec30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28228)[0m     @     0x5622ec394baf _PyEval_EvalCodeWithName
[2m[36m(pid=28228)[0m     @     0x5622ec395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28228)[0m     @     0x5622ec30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28228)[0m     @     0x5622ec394baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x55ffdbeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28225)[0m     @     0x55ffdbf36baf _PyEval_EvalCodeWithName
[2m[36m(pid=28225)[0m     @     0x55ffdbf37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28225)[0m     @     0x55ffdbeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28225)[0m     @     0x55ffdbf36baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x7fafeab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28253)[0m     @     0x7fafeac56148 at::Tensor::copy_()
[2m[36m(pid=28253)[0m     @     0x7fafec84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28253)[0m     @     0x7fafeab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28175)[0m     @     0x7f1445334ed4 at::native::copy_()
[2m[36m(pid=28175)[0m     @     0x7f1445a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28175)[0m     @     0x7f1445b7f148 at::Tensor::copy_()
[2m[36m(pid=28175)[0m     @     0x7f1447776989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28170)[0m     @     0x7faa196375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28170)[0m     @     0x7faa1973f148 at::Tensor::copy_()
[2m[36m(pid=28170)[0m     @     0x7faa1b336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28170)[0m     @     0x7faa196375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28158)[0m     @     0x7ef5e781a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28158)[0m     @     0x7ef5e7922148 at::Tensor::copy_()
[2m[36m(pid=28158)[0m     @     0x7ef5e9519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28235)[0m     @     0x5600edf4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28235)[0m     @     0x5600edfd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28235)[0m     @     0x5600edfd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28235)[0m     @     0x5600edf4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28235)[0m     @     0x5600edfd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28235)[0m     @     0x5600edfd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28235)[0m     @     0x5600edf4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28235)[0m     @     0x5600edfd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x7f093751a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28217)[0m     @     0x7f0937518c3f at::native::copy_impl()
[2m[36m(pid=28217)[0m     @     0x7f0937519ed4 at::native::copy_()
[2m[36m(pid=28217)[0m     @     0x7f0937c5c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28145)[0m     @     0x7fb2a3d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28145)[0m     @     0x7fb2a3e65148 at::Tensor::copy_()
[2m[36m(pid=28145)[0m     @     0x7fb2a5a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28145)[0m     @     0x7fb2a3d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28258)[0m     @     0x7fc9f282e148 at::Tensor::copy_()
[2m[36m(pid=28258)[0m     @     0x7fc9f4425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28258)[0m     @     0x7fc9f27265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28153)[0m     @     0x7f1e3dfe3ed4 at::native::copy_()
[2m[36m(pid=28153)[0m     @     0x7f1e3e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28153)[0m     @     0x7f1e3e82e148 at::Tensor::copy_()
[2m[36m(pid=28153)[0m     @     0x7f1e40425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28141)[0m     @     0x7f5694d77ed4 at::native::copy_()
[2m[36m(pid=28141)[0m     @     0x7f56954ba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28141)[0m     @     0x7f56955c2148 at::Tensor::copy_()
[2m[36m(pid=28141)[0m     @     0x7f56971b9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28266)[0m     @     0x7fbab04b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28266)[0m     @     0x7fbab05bd148 at::Tensor::copy_()
[2m[36m(pid=28266)[0m     @     0x7fbab21b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28223)[0m     @     0x7f1795956148 at::Tensor::copy_()
[2m[36m(pid=28223)[0m     @     0x7f179754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28197)[0m     @     0x7ed5e2c16148 at::Tensor::copy_()
[2m[36m(pid=28197)[0m     @     0x7ed5e480d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28197)[0m     @     0x7ed5e2b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28234)[0m     @     0x7f0b67304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28234)[0m     @     0x7f0b67302c3f at::native::copy_impl()
[2m[36m(pid=28234)[0m     @     0x7f0b67303ed4 at::native::copy_()
[2m[36m(pid=28144)[0m     @     0x7f27ba6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28144)[0m     @     0x7f27ba759148 at::Tensor::copy_()
[2m[36m(pid=28144)[0m     @     0x7f27bc350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed308751148 at::Tensor::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed30a348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed3086495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28238)[0m     @     0x7f0d56b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28238)[0m     @     0x7f0d56c56148 at::Tensor::copy_()
[2m[36m(pid=28238)[0m     @     0x7f0d5cf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28238)[0m     @     0x56006c328fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28238)[0m     @     0x56006c283b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28238)[0m     @     0x56006c30ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28238)[0m     @     0x56006c30fa20 method_vectorcall
[2m[36m(pid=28238)[0m     @     0x56006c283bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x7edaa88b9148 at::Tensor::copy_()
[2m[36m(pid=28152)[0m     @     0x7edaaa4b0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28147)[0m     @     0x7ed5553e4148 at::Tensor::copy_()
[2m[36m(pid=28147)[0m     @     0x7ed556fdb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28147)[0m     @     0x7ed5552dc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28147)[0m     @     0x7ed5553e4148 at::Tensor::copy_()
[2m[36m(pid=28147)[0m     @     0x7ed55b69abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28147)[0m     @     0x55c96c520fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28147)[0m     @     0x55c96c47bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28147)[0m     @     0x55c96c506baf _PyEval_EvalCodeWithName
[2m[36m(pid=28147)[0m     @     0x55c96c507a20 method_vectorcall
[2m[36m(pid=28147)[0m     @     0x55c96c47bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28147)[0m     @     0x55c96c506baf _PyEval_EvalCodeWithName
[2m[36m(pid=28147)[0m     @     0x55c96c507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28147)[0m     @     0x55c96c47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28147)[0m     @     0x55c96c506baf _PyEval_EvalCodeWithName
[2m[36m(pid=28147)[0m     @     0x55c96c507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28215)[0m     @     0x7f8365b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28215)[0m     @     0x7f8365c6c148 at::Tensor::copy_()
[2m[36m(pid=28215)[0m     @     0x7f8367863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28214)[0m     @     0x7f0d5d956148 at::Tensor::copy_()
[2m[36m(pid=28214)[0m     @     0x7f0d5f54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70ae40bed4 at::native::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70aeb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28236)[0m     @     0x7f4c2b432148 at::Tensor::copy_()
[2m[36m(pid=28236)[0m     @     0x7f4c2d029989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28236)[0m     @     0x7f4c2b32a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28270)[0m     @     0x7f7583302c3f at::native::copy_impl()
[2m[36m(pid=28160)[0m     @     0x7ee924095148 at::Tensor::copy_()
[2m[36m(pid=28160)[0m     @     0x7ee925c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28160)[0m     @     0x7ee923f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28171)[0m     @     0x7ed1909d6148 at::Tensor::copy_()
[2m[36m(pid=28171)[0m     @     0x7ed1925cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28171)[0m     @     0x7ed1908ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28212)[0m     @     0x7f902c904148 at::Tensor::copy_()
[2m[36m(pid=28212)[0m     @     0x7f902e4fb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28212)[0m     @     0x7f902c7fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28157)[0m     @     0x7efabf43f148 at::Tensor::copy_()
[2m[36m(pid=28157)[0m     @     0x7efac1036989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28157)[0m     @     0x7efabf3375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28163)[0m     @     0x7f948716e148 at::Tensor::copy_()
[2m[36m(pid=28163)[0m     @     0x7f9488d65989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28163)[0m     @     0x7f94870665cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28148)[0m     @     0x7f4400be7148 at::Tensor::copy_()
[2m[36m(pid=28148)[0m     @     0x7f44027de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28148)[0m     @     0x7f4400adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28227)[0m     @     0x7f441623c148 at::Tensor::copy_()
[2m[36m(pid=28227)[0m     @     0x7f4417e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28227)[0m     @     0x7f44161345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28140)[0m     @     0x7ed8abe22ed4 at::native::copy_()
[2m[36m(pid=28140)[0m     @     0x7ed8ac5655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28138)[0m     @     0x7f4307bf8ed4 at::native::copy_()
[2m[36m(pid=28138)[0m     @     0x7f430833b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28209)[0m     @     0x7fa495039ed4 at::native::copy_()
[2m[36m(pid=28209)[0m     @     0x7fa49577c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28209)[0m     @     0x7fa495884148 at::Tensor::copy_()
[2m[36m(pid=28256)[0m     @     0x7f331d421ed4 at::native::copy_()
[2m[36m(pid=28256)[0m     @     0x7f331db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28150)[0m     @     0x7fbc4a767148 at::Tensor::copy_()
[2m[36m(pid=28150)[0m     @     0x7fbc4c35e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28150)[0m     @     0x7fbc4a65f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28142)[0m     @     0x7f3566caced4 at::native::copy_()
[2m[36m(pid=28142)[0m     @     0x7f35673ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28142)[0m     @     0x7f35674f7148 at::Tensor::copy_()
[2m[36m(pid=28229)[0m     @     0x7f63b3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28229)[0m     @     0x7f63b4095148 at::Tensor::copy_()
[2m[36m(pid=28229)[0m     @     0x7f63b5c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28173)[0m     @     0x7fa9965cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28173)[0m     @     0x7fa9948ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28173)[0m     @     0x7fa9949d6148 at::Tensor::copy_()
[2m[36m(pid=28173)[0m     @     0x7fa99ac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28173)[0m     @     0x561cd34ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28173)[0m     @     0x561cd3438b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28173)[0m     @     0x561cd34c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28173)[0m     @     0x561cd34c4a20 method_vectorcall
[2m[36m(pid=28173)[0m     @     0x561cd3438bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28173)[0m     @     0x561cd34c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28173)[0m     @     0x561cd34c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28173)[0m     @     0x561cd3439689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28173)[0m     @     0x561cd34c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28173)[0m     @     0x561cd34c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28173)[0m     @     0x561cd3439689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28173)[0m     @     0x561cd34c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28173)[0m     @     0x561cd34c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28173)[0m     @     0x561cd3439689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28173)[0m     @     0x561cd34c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x7ef723d53148 at::Tensor::copy_()
[2m[36m(pid=28154)[0m     @     0x7ef72594a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28154)[0m     @     0x7ef723c4b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28154)[0m     @     0x7ef723d53148 at::Tensor::copy_()
[2m[36m(pid=28200)[0m     @     0x7ed535fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28200)[0m     @     0x7ed535fe2c3f at::native::copy_impl()
[2m[36m(pid=28200)[0m     @     0x7ed535fe3ed4 at::native::copy_()
[2m[36m(pid=28200)[0m     @     0x7ed5367265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28167)[0m     @     0x7f9307f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28167)[0m     @     0x7f9308095148 at::Tensor::copy_()
[2m[36m(pid=28167)[0m     @     0x7f9309c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28199)[0m     @     0x7ef7c532b148 at::Tensor::copy_()
[2m[36m(pid=28199)[0m     @     0x7ef7c6f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28199)[0m     @     0x7ef7c52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28199)[0m     @     0x7ef7c532b148 at::Tensor::copy_()
[2m[36m(pid=28206)[0m     @     0x7f428c33b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28206)[0m     @     0x7f428c443148 at::Tensor::copy_()
[2m[36m(pid=28206)[0m     @     0x7f428e03a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28222)[0m     @     0x7f975c5fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28222)[0m     @     0x7f975a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28222)[0m     @     0x7f975aa05148 at::Tensor::copy_()
[2m[36m(pid=28222)[0m     @     0x7f9760cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28222)[0m     @     0x55e9c8ed2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28222)[0m     @     0x55e9c8e2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28222)[0m     @     0x55e9c8eb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28222)[0m     @     0x55e9c8eb9a20 method_vectorcall
[2m[36m(pid=28222)[0m     @     0x55e9c8e2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28222)[0m     @     0x55e9c8eb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28222)[0m     @     0x55e9c8eb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28222)[0m     @     0x55e9c8e2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28222)[0m     @     0x55e9c8eb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28222)[0m     @     0x55e9c8eb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28222)[0m     @     0x55e9c8e2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28222)[0m     @     0x55e9c8eb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28222)[0m     @     0x55e9c8eb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28222)[0m     @     0x55e9c8e2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28222)[0m     @     0x55e9c8eb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x7f3b3964ced4 at::native::copy_()
[2m[36m(pid=28208)[0m     @     0x7f3b39d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28208)[0m     @     0x7f3b39e97148 at::Tensor::copy_()
[2m[36m(pid=28208)[0m     @     0x7f3b3ba8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28137)[0m     @     0x7fabe86b7148 at::Tensor::copy_()
[2m[36m(pid=28137)[0m     @     0x7fabea2ae989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28137)[0m     @     0x7fabe85af5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28159)[0m     @     0x7f8ce584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28159)[0m     @     0x7f8ce5956148 at::Tensor::copy_()
[2m[36m(pid=28159)[0m     @     0x7f8ce754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28220)[0m     @     0x7f9ccf0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28220)[0m     @     0x7f9ccf1e0148 at::Tensor::copy_()
[2m[36m(pid=28220)[0m     @     0x7f9cd0dd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28220)[0m     @     0x7f9ccf0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28203)[0m     @     0x7f81ad956148 at::Tensor::copy_()
[2m[36m(pid=28203)[0m     @     0x7f81af54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28203)[0m     @     0x7f81ad84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28245)[0m     @     0x7fa171ec7148 at::Tensor::copy_()
[2m[36m(pid=28245)[0m     @     0x7fa173abe989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28245)[0m     @     0x7fa171dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28143)[0m     @     0x7f92b982a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28143)[0m     @     0x7f92b7b2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28143)[0m     @     0x7f92b7c33148 at::Tensor::copy_()
[2m[36m(pid=28143)[0m     @     0x7f92bdee9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28143)[0m     @     0x558cf7becfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28143)[0m     @     0x558cf7b47b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28143)[0m     @     0x558cf7bd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28143)[0m     @     0x558cf7bd3a20 method_vectorcall
[2m[36m(pid=28143)[0m     @     0x558cf7b47bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28143)[0m     @     0x558cf7bd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28143)[0m     @     0x558cf7bd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28143)[0m     @     0x558cf7b48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28143)[0m     @     0x558cf7bd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28143)[0m     @     0x558cf7bd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28143)[0m     @     0x558cf7b48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28143)[0m     @     0x558cf7bd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28143)[0m     @     0x558cf7bd3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28143)[0m     @     0x558cf7b48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28143)[0m     @     0x558cf7bd2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x7fc12eebf148 at::Tensor::copy_()
[2m[36m(pid=28211)[0m     @     0x7fc130ab6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28211)[0m     @     0x7fc12edb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28165)[0m     @     0x7f3c4054f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28165)[0m     @     0x7f3c3e8505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28139)[0m     @     0x7fa5c58a5148 at::Tensor::copy_()
[2m[36m(pid=28139)[0m     @     0x7fa5c749c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28263)[0m     @     0x7f10b4be7148 at::Tensor::copy_()
[2m[36m(pid=28263)[0m     @     0x7f10b67de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28263)[0m     @     0x7f10b4adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28250)[0m     @     0x7fa3bfe65148 at::Tensor::copy_()
[2m[36m(pid=28250)[0m     @     0x7fa3c611bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28250)[0m     @     0x56505462bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28250)[0m     @     0x565054586b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28250)[0m     @     0x565054611baf _PyEval_EvalCodeWithName
[2m[36m(pid=28250)[0m     @     0x565054612a20 method_vectorcall
[2m[36m(pid=28250)[0m     @     0x565054586bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28250)[0m     @     0x565054611baf _PyEval_EvalCodeWithName
[2m[36m(pid=28250)[0m     @     0x565054612643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28250)[0m     @     0x565054587689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28250)[0m     @     0x565054611baf _PyEval_EvalCodeWithName
[2m[36m(pid=28250)[0m     @     0x565054612643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28250)[0m     @     0x565054587689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28250)[0m     @     0x565054611baf _PyEval_EvalCodeWithName
[2m[36m(pid=28250)[0m     @     0x565054612643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28250)[0m     @     0x565054587689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28250)[0m     @     0x565054611baf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x7f799c39d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28161)[0m     @     0x7f799c39bc3f at::native::copy_impl()
[2m[36m(pid=28155)[0m     @     0x7f74a3eb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=28155)[0m     @     0x7f74a3eb7c3f at::native::copy_impl()
[2m[36m(pid=28155)[0m     @     0x7f74a3eb8ed4 at::native::copy_()
[2m[36m(pid=28149)[0m     @     0x7fc6f81d3148 at::Tensor::copy_()
[2m[36m(pid=28149)[0m     @     0x7fc6f9dca989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28169)[0m     @     0x7fc930e395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28169)[0m     @     0x7fc930f41148 at::Tensor::copy_()
[2m[36m(pid=28169)[0m     @     0x7fc9371f7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28169)[0m     @     0x558928d23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28169)[0m     @     0x558928c7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28169)[0m     @     0x558928d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=28169)[0m     @     0x558928d0aa20 method_vectorcall
[2m[36m(pid=28169)[0m     @     0x558928c7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28169)[0m     @     0x558928d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x7fafeac56148 at::Tensor::copy_()
[2m[36m(pid=28253)[0m     @     0x7faff0f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28253)[0m     @     0x56249a231fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28253)[0m     @     0x56249a18cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28253)[0m     @     0x56249a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x56249a218a20 method_vectorcall
[2m[36m(pid=28253)[0m     @     0x56249a18cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28253)[0m     @     0x56249a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x56249a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28253)[0m     @     0x56249a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28253)[0m     @     0x56249a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x56249a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28253)[0m     @     0x56249a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28253)[0m     @     0x56249a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=28253)[0m     @     0x56249a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28253)[0m     @     0x56249a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28253)[0m     @     0x56249a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x7f1445a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28175)[0m     @     0x7f1445b7f148 at::Tensor::copy_()
[2m[36m(pid=28175)[0m     @     0x7f144be35bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28175)[0m     @     0x55b0db155fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28175)[0m     @     0x55b0db0b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28175)[0m     @     0x55b0db13bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x55b0db13ca20 method_vectorcall
[2m[36m(pid=28175)[0m     @     0x55b0db0b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28175)[0m     @     0x55b0db13bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x55b0db13c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28175)[0m     @     0x55b0db0b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28175)[0m     @     0x55b0db13bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x55b0db13c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28175)[0m     @     0x55b0db0b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28175)[0m     @     0x55b0db13bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28175)[0m     @     0x55b0db13c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28175)[0m     @     0x55b0db0b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28175)[0m     @     0x55b0db13bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x7faa1973f148 at::Tensor::copy_()
[2m[36m(pid=28170)[0m     @     0x7faa1f9f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28170)[0m     @     0x558eaf432fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28170)[0m     @     0x558eaf38db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28170)[0m     @     0x558eaf418baf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x558eaf419a20 method_vectorcall
[2m[36m(pid=28170)[0m     @     0x558eaf38dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28170)[0m     @     0x558eaf418baf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x558eaf419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28170)[0m     @     0x558eaf38e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28170)[0m     @     0x558eaf418baf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x558eaf419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28170)[0m     @     0x558eaf38e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28170)[0m     @     0x558eaf418baf _PyEval_EvalCodeWithName
[2m[36m(pid=28170)[0m     @     0x558eaf419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28170)[0m     @     0x558eaf38e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28170)[0m     @     0x558eaf418baf _PyEval_EvalCodeWithName
[2m[36m(pid=28158)[0m     @     0x7ef5e781a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28158)[0m     @     0x7ef5e7922148 at::Tensor::copy_()
[2m[36m(pid=28158)[0m     @     0x7ef5edbd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28158)[0m     @     0x55ec4818bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28158)[0m     @     0x55ec480e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28158)[0m     @     0x55ec48171baf _PyEval_EvalCodeWithName
[2m[36m(pid=28158)[0m     @     0x55ec48172a20 method_vectorcall
[2m[36m(pid=28158)[0m     @     0x55ec480e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28158)[0m     @     0x55ec48171baf _PyEval_EvalCodeWithName
[2m[36m(pid=28158)[0m     @     0x55ec48172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28158)[0m     @     0x55ec480e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28158)[0m     @     0x55ec48171baf _PyEval_EvalCodeWithName
[2m[36m(pid=28158)[0m     @     0x55ec48172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28158)[0m     @     0x55ec480e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28158)[0m     @     0x55ec48171baf _PyEval_EvalCodeWithName
[2m[36m(pid=28158)[0m     @     0x55ec48172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28158)[0m     @     0x55ec480e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28158)[0m     @     0x55ec48171baf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x7f0937d64148 at::Tensor::copy_()
[2m[36m(pid=28217)[0m     @     0x7f093995b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28217)[0m     @     0x7f0937c5c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28145)[0m     @     0x7fb2a3e65148 at::Tensor::copy_()
[2m[36m(pid=28145)[0m     @     0x7fb2aa11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28145)[0m     @     0x562af70b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28145)[0m     @     0x562af700db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28145)[0m     @     0x562af7098baf _PyEval_EvalCodeWithName
[2m[36m(pid=28145)[0m     @     0x562af7099a20 method_vectorcall
[2m[36m(pid=28145)[0m     @     0x562af700dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28145)[0m     @     0x562af7098baf _PyEval_EvalCodeWithName
[2m[36m(pid=28145)[0m     @     0x562af7099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28145)[0m     @     0x562af700e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28145)[0m     @     0x562af7098baf _PyEval_EvalCodeWithName
[2m[36m(pid=28145)[0m     @     0x562af7099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28145)[0m     @     0x562af700e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28145)[0m     @     0x562af7098baf _PyEval_EvalCodeWithName
[2m[36m(pid=28145)[0m     @     0x562af7099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28145)[0m     @     0x562af700e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28145)[0m     @     0x562af7098baf _PyEval_EvalCodeWithName
[2m[36m(pid=28258)[0m     @     0x7fc9f282e148 at::Tensor::copy_()
[2m[36m(pid=28258)[0m     @     0x7fc9f8ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28258)[0m     @     0x5605fd0a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28258)[0m     @     0x5605fd000b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28258)[0m     @     0x5605fd08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28258)[0m     @     0x5605fd08ca20 method_vectorcall
[2m[36m(pid=28258)[0m     @     0x5605fd000bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28258)[0m     @     0x5605fd08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28258)[0m     @     0x5605fd08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28258)[0m     @     0x5605fd001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28258)[0m     @     0x5605fd08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28258)[0m     @     0x5605fd08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28258)[0m     @     0x5605fd001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28258)[0m     @     0x5605fd08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28258)[0m     @     0x5605fd08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28258)[0m     @     0x5605fd001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28258)[0m     @     0x5605fd08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28153)[0m     @     0x7f1e3e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28153)[0m     @     0x7f1e3e82e148 at::Tensor::copy_()
[2m[36m(pid=28153)[0m     @     0x7f1e44ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28153)[0m     @     0x55ff6d60cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28153)[0m     @     0x55ff6d567b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28153)[0m     @     0x55ff6d5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28153)[0m     @     0x55ff6d5f3a20 method_vectorcall
[2m[36m(pid=28153)[0m     @     0x55ff6d567bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28153)[0m     @     0x55ff6d5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28153)[0m     @     0x55ff6d5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28153)[0m     @     0x55ff6d568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28153)[0m     @     0x55ff6d5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28153)[0m     @     0x55ff6d5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28153)[0m     @     0x55ff6d568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28153)[0m     @     0x55ff6d5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28153)[0m     @     0x55ff6d5f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28153)[0m     @     0x55ff6d568689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28153)[0m     @     0x55ff6d5f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28141)[0m     @     0x7f56954ba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28141)[0m     @     0x7f56955c2148 at::Tensor::copy_()
[2m[36m(pid=28141)[0m     @     0x7f569b878bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28141)[0m     @     0x55be79be1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28141)[0m     @     0x55be79b3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28141)[0m     @     0x55be79bc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28141)[0m     @     0x55be79bc8a20 method_vectorcall
[2m[36m(pid=28141)[0m     @     0x55be79b3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28141)[0m     @     0x55be79bc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28141)[0m     @     0x55be79bc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28141)[0m     @     0x55be79b3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28141)[0m     @     0x55be79bc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28141)[0m     @     0x55be79bc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28141)[0m     @     0x55be79b3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28141)[0m     @     0x55be79bc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28141)[0m     @     0x55be79bc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28141)[0m     @     0x55be79b3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28141)[0m     @     0x55be79bc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=28266)[0m     @     0x7fbab04b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28266)[0m     @     0x7fbab05bd148 at::Tensor::copy_()
[2m[36m(pid=28266)[0m     @     0x7fbab6873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28266)[0m     @     0x55a1f58b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28266)[0m     @     0x55a1f5810b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28266)[0m     @     0x55a1f589bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28266)[0m     @     0x55a1f589ca20 method_vectorcall
[2m[36m(pid=28266)[0m     @     0x55a1f5810bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28266)[0m     @     0x55a1f589bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28266)[0m     @     0x55a1f589c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28266)[0m     @     0x55a1f5811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28266)[0m     @     0x55a1f589bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28266)[0m     @     0x55a1f589c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28266)[0m     @     0x55a1f5811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28266)[0m     @     0x55a1f589bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28266)[0m     @     0x55a1f589c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28266)[0m     @     0x55a1f5811689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28266)[0m     @     0x55a1f589bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28223)[0m     @     0x7f179584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28223)[0m     @     0x7f1795956148 at::Tensor::copy_()
[2m[36m(pid=28223)[0m     @     0x7f179bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28223)[0m     @     0x55993fd46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28223)[0m     @     0x55993fca1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28223)[0m     @     0x55993fd2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28223)[0m     @     0x55993fd2da20 method_vectorcall
[2m[36m(pid=28223)[0m     @     0x55993fca1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28223)[0m     @     0x55993fd2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28223)[0m     @     0x55993fd2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28223)[0m     @     0x55993fca2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28223)[0m     @     0x55993fd2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28223)[0m     @     0x55993fd2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28223)[0m     @     0x55993fca2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28223)[0m     @     0x55993fd2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28223)[0m     @     0x55993fd2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28223)[0m     @     0x55993fca2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28223)[0m     @     0x55993fd2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28197)[0m     @     0x7ed5e2c16148 at::Tensor::copy_()
[2m[36m(pid=28197)[0m     @     0x7ed5e8eccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28197)[0m     @     0x557c50d6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28197)[0m     @     0x557c50cc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28197)[0m     @     0x557c50d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=28197)[0m     @     0x557c50d54a20 method_vectorcall
[2m[36m(pid=28197)[0m     @     0x557c50cc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28197)[0m     @     0x557c50d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=28197)[0m     @     0x557c50d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28197)[0m     @     0x557c50cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28197)[0m     @     0x557c50d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=28197)[0m     @     0x557c50d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28197)[0m     @     0x557c50cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28197)[0m     @     0x557c50d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=28197)[0m     @     0x557c50d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28197)[0m     @     0x557c50cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28197)[0m     @     0x557c50d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x7f0b67a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28234)[0m     @     0x7f0b67b4e148 at::Tensor::copy_()
[2m[36m(pid=28234)[0m     @     0x7f0b69745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28144)[0m     @     0x7f27ba6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28144)[0m     @     0x7f27ba759148 at::Tensor::copy_()
[2m[36m(pid=28144)[0m     @     0x7f27c05f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28144)[0m     @     0x55b9ad723fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28144)[0m     @     0x55b9ad67eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28144)[0m     @     0x55b9ad709baf _PyEval_EvalCodeWithName
[2m[36m(pid=28144)[0m     @     0x55b9ad70aa20 method_vectorcall
[2m[36m(pid=28144)[0m     @     0x55b9ad67ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28144)[0m     @     0x55b9ad709baf _PyEval_EvalCodeWithName
[2m[36m(pid=28144)[0m     @     0x55b9ad70a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28144)[0m     @     0x55b9ad67f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28144)[0m     @     0x55b9ad709baf _PyEval_EvalCodeWithName
[2m[36m(pid=28144)[0m     @     0x55b9ad70a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28144)[0m     @     0x55b9ad67f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28144)[0m     @     0x55b9ad709baf _PyEval_EvalCodeWithName
[2m[36m(pid=28144)[0m     @     0x55b9ad70a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28144)[0m     @     0x55b9ad67f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28144)[0m     @     0x55b9ad709baf _PyEval_EvalCodeWithName
[2m[36m(pid=28207)[0m     @     0x7ed308751148 at::Tensor::copy_()
[2m[36m(pid=28207)[0m     @     0x7ed30ea07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28207)[0m     @     0x5616ab987fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28207)[0m     @     0x5616ab8e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28207)[0m     @     0x5616ab96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28207)[0m     @     0x5616ab96ea20 method_vectorcall
[2m[36m(pid=28207)[0m     @     0x5616ab8e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28207)[0m     @     0x5616ab96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28207)[0m     @     0x5616ab96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28207)[0m     @     0x5616ab8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28207)[0m     @     0x5616ab96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28207)[0m     @     0x5616ab96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28207)[0m     @     0x5616ab8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28207)[0m     @     0x5616ab96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28207)[0m     @     0x5616ab96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28207)[0m     @     0x5616ab8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28207)[0m     @     0x5616ab96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28238)[0m     @     0x56006c30ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28238)[0m     @     0x56006c30f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28238)[0m     @     0x56006c284689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28238)[0m     @     0x56006c30ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28238)[0m     @     0x56006c30f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28238)[0m     @     0x56006c284689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28238)[0m     @     0x56006c30ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28238)[0m     @     0x56006c30f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28238)[0m     @     0x56006c284689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28238)[0m     @     0x56006c30ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28152)[0m     @     0x7edaa87b15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28152)[0m     @     0x7edaa88b9148 at::Tensor::copy_()
[2m[36m(pid=28152)[0m     @     0x7edaaeb6fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28152)[0m     @     0x55d08b88cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28152)[0m     @     0x55d08b7e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x55d08b872baf _PyEval_EvalCodeWithName
[2m[36m(pid=28152)[0m     @     0x55d08b873a20 method_vectorcall
[2m[36m(pid=28152)[0m     @     0x55d08b7e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x55d08b872baf _PyEval_EvalCodeWithName
[2m[36m(pid=28152)[0m     @     0x55d08b873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28152)[0m     @     0x55d08b7e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x55d08b872baf _PyEval_EvalCodeWithName
[2m[36m(pid=28152)[0m     @     0x55d08b873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28152)[0m     @     0x55d08b7e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x55d08b872baf _PyEval_EvalCodeWithName
[2m[36m(pid=28152)[0m     @     0x55d08b873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28152)[0m     @     0x55d08b7e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28152)[0m     @     0x55d08b872baf _PyEval_EvalCodeWithName
[2m[36m(pid=28147)[0m     @     0x55c96c47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28147)[0m     @     0x55c96c506baf _PyEval_EvalCodeWithName
[2m[36m(pid=28147)[0m     @     0x55c96c507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28147)[0m     @     0x55c96c47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28147)[0m     @     0x55c96c506baf _PyEval_EvalCodeWithName
[2m[36m(pid=28215)[0m     @     0x7f8365b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28215)[0m     @     0x7f8365c6c148 at::Tensor::copy_()
[2m[36m(pid=28215)[0m     @     0x7f836bf22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28215)[0m     @     0x562a594a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28215)[0m     @     0x562a59401b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28215)[0m     @     0x562a5948cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28215)[0m     @     0x562a5948da20 method_vectorcall
[2m[36m(pid=28215)[0m     @     0x562a59401bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28215)[0m     @     0x562a5948cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28215)[0m     @     0x562a5948d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28215)[0m     @     0x562a59402689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28215)[0m     @     0x562a5948cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28215)[0m     @     0x562a5948d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28215)[0m     @     0x562a59402689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28215)[0m     @     0x562a5948cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28215)[0m     @     0x562a5948d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28215)[0m     @     0x562a59402689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28215)[0m     @     0x562a5948cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x7f0d5d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28214)[0m     @     0x7f0d5d956148 at::Tensor::copy_()
[2m[36m(pid=28214)[0m     @     0x7f0d63c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28214)[0m     @     0x55fba5207fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28214)[0m     @     0x55fba5162b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28214)[0m     @     0x55fba51edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x55fba51eea20 method_vectorcall
[2m[36m(pid=28214)[0m     @     0x55fba5162bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28214)[0m     @     0x55fba51edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x55fba51ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28214)[0m     @     0x55fba5163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28214)[0m     @     0x55fba51edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x55fba51ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28214)[0m     @     0x55fba5163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28214)[0m     @     0x55fba51edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28214)[0m     @     0x55fba51ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28214)[0m     @     0x55fba5163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28214)[0m     @     0x55fba51edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x7f70aec56148 at::Tensor::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70b084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70aeb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28201)[0m     @     0x7f70aec56148 at::Tensor::copy_()
[2m[36m(pid=28201)[0m     @     0x7f70b4f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28201)[0m     @     0x557ec0676fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28201)[0m     @     0x557ec05d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28201)[0m     @     0x557ec065cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x557ec065da20 method_vectorcall
[2m[36m(pid=28201)[0m     @     0x557ec05d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x7f4c2b432148 at::Tensor::copy_()
[2m[36m(pid=28236)[0m     @     0x7f4c316e8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28236)[0m     @     0x561499e63fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28236)[0m     @     0x561499dbeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x561499e49baf _PyEval_EvalCodeWithName
[2m[36m(pid=28236)[0m     @     0x561499e4aa20 method_vectorcall
[2m[36m(pid=28236)[0m     @     0x561499dbebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x561499e49baf _PyEval_EvalCodeWithName
[2m[36m(pid=28236)[0m     @     0x561499e4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28236)[0m     @     0x561499dbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x561499e49baf _PyEval_EvalCodeWithName
[2m[36m(pid=28236)[0m     @     0x561499e4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28236)[0m     @     0x561499dbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x561499e49baf _PyEval_EvalCodeWithName
[2m[36m(pid=28236)[0m     @     0x561499e4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28236)[0m     @     0x561499dbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28236)[0m     @     0x561499e49baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x7f7583303ed4 at::native::copy_()
[2m[36m(pid=28270)[0m     @     0x7f7583a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28270)[0m     @     0x7f7583b4e148 at::Tensor::copy_()
[2m[36m(pid=28160)[0m     @     0x7ee924095148 at::Tensor::copy_()
[2m[36m(pid=28160)[0m     @     0x7ee92a34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28160)[0m     @     0x563e49298fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28160)[0m     @     0x563e491f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28160)[0m     @     0x563e4927ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28160)[0m     @     0x563e4927fa20 method_vectorcall
[2m[36m(pid=28160)[0m     @     0x563e491f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28160)[0m     @     0x563e4927ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28160)[0m     @     0x563e4927f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28160)[0m     @     0x563e491f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28160)[0m     @     0x563e4927ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28160)[0m     @     0x563e4927f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28160)[0m     @     0x563e491f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28160)[0m     @     0x563e4927ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28160)[0m     @     0x563e4927f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28160)[0m     @     0x563e491f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28160)[0m     @     0x563e4927ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28171)[0m     @     0x7ed1909d6148 at::Tensor::copy_()
[2m[36m(pid=28171)[0m     @     0x7ed196c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28171)[0m     @     0x560fa04a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28171)[0m     @     0x560fa03fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28171)[0m     @     0x560fa0488baf _PyEval_EvalCodeWithName
[2m[36m(pid=28171)[0m     @     0x560fa0489a20 method_vectorcall
[2m[36m(pid=28171)[0m     @     0x560fa03fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28171)[0m     @     0x560fa0488baf _PyEval_EvalCodeWithName
[2m[36m(pid=28171)[0m     @     0x560fa0489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28171)[0m     @     0x560fa03fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28171)[0m     @     0x560fa0488baf _PyEval_EvalCodeWithName
[2m[36m(pid=28171)[0m     @     0x560fa0489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28171)[0m     @     0x560fa03fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28171)[0m     @     0x560fa0488baf _PyEval_EvalCodeWithName
[2m[36m(pid=28171)[0m     @     0x560fa0489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28171)[0m     @     0x560fa03fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28171)[0m     @     0x560fa0488baf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x7f902c904148 at::Tensor::copy_()
[2m[36m(pid=28212)[0m     @     0x7f9032bbabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28212)[0m     @     0x561b98ee4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28212)[0m     @     0x561b98e3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28212)[0m     @     0x561b98ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x561b98ecba20 method_vectorcall
[2m[36m(pid=28212)[0m     @     0x561b98e3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28212)[0m     @     0x561b98ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x561b98ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28212)[0m     @     0x561b98e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28212)[0m     @     0x561b98ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x561b98ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28212)[0m     @     0x561b98e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28212)[0m     @     0x561b98ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28212)[0m     @     0x561b98ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28212)[0m     @     0x561b98e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28212)[0m     @     0x561b98ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x7efabf43f148 at::Tensor::copy_()
[2m[36m(pid=28157)[0m     @     0x7efac56f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28157)[0m     @     0x55c5afff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28157)[0m     @     0x55c5aff53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28157)[0m     @     0x55c5affdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x55c5affdfa20 method_vectorcall
[2m[36m(pid=28157)[0m     @     0x55c5aff53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28157)[0m     @     0x55c5affdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x55c5affdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28157)[0m     @     0x55c5aff54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28157)[0m     @     0x55c5affdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x55c5affdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28157)[0m     @     0x55c5aff54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28157)[0m     @     0x55c5affdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28157)[0m     @     0x55c5affdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28157)[0m     @     0x55c5aff54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28157)[0m     @     0x55c5affdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=28163)[0m     @     0x7f948716e148 at::Tensor::copy_()
[2m[36m(pid=28163)[0m     @     0x7f948d424bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28163)[0m     @     0x558a9715bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28163)[0m     @     0x558a970b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28163)[0m     @     0x558a97141baf _PyEval_EvalCodeWithName
[2m[36m(pid=28163)[0m     @     0x558a97142a20 method_vectorcall
[2m[36m(pid=28163)[0m     @     0x558a970b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28163)[0m     @     0x558a97141baf _PyEval_EvalCodeWithName
[2m[36m(pid=28163)[0m     @     0x558a97142643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28163)[0m     @     0x558a970b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28163)[0m     @     0x558a97141baf _PyEval_EvalCodeWithName
[2m[36m(pid=28163)[0m     @     0x558a97142643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28163)[0m     @     0x558a970b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28163)[0m     @     0x558a97141baf _PyEval_EvalCodeWithName
[2m[36m(pid=28163)[0m     @     0x558a97142643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28163)[0m     @     0x558a970b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28163)[0m     @     0x558a97141baf _PyEval_EvalCodeWithName
[2m[36m(pid=28148)[0m     @     0x7f4400be7148 at::Tensor::copy_()
[2m[36m(pid=28148)[0m     @     0x7f4406e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28148)[0m     @     0x55c628812fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28148)[0m     @     0x55c62876db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28148)[0m     @     0x55c6287f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28148)[0m     @     0x55c6287f9a20 method_vectorcall
[2m[36m(pid=28148)[0m     @     0x55c62876dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28148)[0m     @     0x55c6287f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28148)[0m     @     0x55c6287f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28148)[0m     @     0x55c62876e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28148)[0m     @     0x55c6287f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28148)[0m     @     0x55c6287f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28148)[0m     @     0x55c62876e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28148)[0m     @     0x55c6287f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28148)[0m     @     0x55c6287f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28148)[0m     @     0x55c62876e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28148)[0m     @     0x55c6287f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=28227)[0m     @     0x7f441623c148 at::Tensor::copy_()
[2m[36m(pid=28227)[0m     @     0x7f441c4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28227)[0m     @     0x557662a8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28227)[0m     @     0x5576629e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28227)[0m     @     0x557662a72baf _PyEval_EvalCodeWithName
[2m[36m(pid=28227)[0m     @     0x557662a73a20 method_vectorcall
[2m[36m(pid=28227)[0m     @     0x5576629e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28227)[0m     @     0x557662a72baf _PyEval_EvalCodeWithName
[2m[36m(pid=28227)[0m     @     0x557662a73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28227)[0m     @     0x5576629e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28227)[0m     @     0x557662a72baf _PyEval_EvalCodeWithName
[2m[36m(pid=28227)[0m     @     0x557662a73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28227)[0m     @     0x5576629e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28227)[0m     @     0x557662a72baf _PyEval_EvalCodeWithName
[2m[36m(pid=28227)[0m     @     0x557662a73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28227)[0m     @     0x5576629e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28227)[0m     @     0x557662a72baf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x7ed8ac66d148 at::Tensor::copy_()
[2m[36m(pid=28140)[0m     @     0x7ed8ae264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28140)[0m     @     0x7ed8ac5655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28138)[0m     @     0x7f4308443148 at::Tensor::copy_()
[2m[36m(pid=28138)[0m     @     0x7f430a03a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28138)[0m     @     0x7f430833b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28209)[0m     @     0x7fa49747b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28209)[0m     @     0x7fa49577c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28209)[0m     @     0x7fa495884148 at::Tensor::copy_()
[2m[36m(pid=28209)[0m     @     0x7fa49bb3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28209)[0m     @     0x563a92dfdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28209)[0m     @     0x563a92d58b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28209)[0m     @     0x563a92de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28209)[0m     @     0x563a92de4a20 method_vectorcall
[2m[36m(pid=28209)[0m     @     0x563a92d58bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28209)[0m     @     0x563a92de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28209)[0m     @     0x563a92de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28209)[0m     @     0x563a92d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28209)[0m     @     0x563a92de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28209)[0m     @     0x563a92de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28209)[0m     @     0x563a92d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28209)[0m     @     0x563a92de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28209)[0m     @     0x563a92de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28256)[0m     @     0x7f331dc6c148 at::Tensor::copy_()
[2m[36m(pid=28256)[0m     @     0x7f331f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28256)[0m     @     0x7f331db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28256)[0m     @     0x7f331dc6c148 at::Tensor::copy_()
[2m[36m(pid=28256)[0m     @     0x7f3323f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28256)[0m     @     0x5573fe072fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28256)[0m     @     0x5573fdfcdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28256)[0m     @     0x5573fe058baf _PyEval_EvalCodeWithName
[2m[36m(pid=28256)[0m     @     0x5573fe059a20 method_vectorcall
[2m[36m(pid=28150)[0m     @     0x7fbc4a767148 at::Tensor::copy_()
[2m[36m(pid=28150)[0m     @     0x7fbc50a1dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28150)[0m     @     0x563e5cfc0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28150)[0m     @     0x563e5cf1bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28150)[0m     @     0x563e5cfa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28150)[0m     @     0x563e5cfa7a20 method_vectorcall
[2m[36m(pid=28150)[0m     @     0x563e5cf1bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28150)[0m     @     0x563e5cfa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28150)[0m     @     0x563e5cfa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28150)[0m     @     0x563e5cf1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28150)[0m     @     0x563e5cfa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28150)[0m     @     0x563e5cfa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28150)[0m     @     0x563e5cf1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28150)[0m     @     0x563e5cfa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28150)[0m     @     0x563e5cfa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28150)[0m     @     0x563e5cf1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28150)[0m     @     0x563e5cfa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x7f35690ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28142)[0m     @     0x7f35673ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28229)[0m     @     0x7f63b3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28229)[0m     @     0x7f63b4095148 at::Tensor::copy_()
[2m[36m(pid=28229)[0m     @     0x7f63ba34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28229)[0m     @     0x55dd770adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28229)[0m     @     0x55dd77008b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28229)[0m     @     0x55dd77093baf _PyEval_EvalCodeWithName
[2m[36m(pid=28229)[0m     @     0x55dd77094a20 method_vectorcall
[2m[36m(pid=28229)[0m     @     0x55dd77008bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28229)[0m     @     0x55dd77093baf _PyEval_EvalCodeWithName
[2m[36m(pid=28229)[0m     @     0x55dd77094643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28229)[0m     @     0x55dd77009689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28229)[0m     @     0x55dd77093baf _PyEval_EvalCodeWithName
[2m[36m(pid=28229)[0m     @     0x55dd77094643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28229)[0m     @     0x55dd77009689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28229)[0m     @     0x55dd77093baf _PyEval_EvalCodeWithName
[2m[36m(pid=28229)[0m     @     0x55dd77094643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28229)[0m     @     0x55dd77009689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28229)[0m     @     0x55dd77093baf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x7ef72a009bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28154)[0m     @     0x5623eaa57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28154)[0m     @     0x5623ea9b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28154)[0m     @     0x5623eaa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x5623eaa3ea20 method_vectorcall
[2m[36m(pid=28154)[0m     @     0x5623ea9b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28154)[0m     @     0x5623eaa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x5623eaa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28154)[0m     @     0x5623ea9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28154)[0m     @     0x5623eaa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x5623eaa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28154)[0m     @     0x5623ea9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28154)[0m     @     0x5623eaa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28154)[0m     @     0x5623eaa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28154)[0m     @     0x5623ea9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28154)[0m     @     0x5623eaa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x7ed53682e148 at::Tensor::copy_()
[2m[36m(pid=28200)[0m     @     0x7ed538425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28200)[0m     @     0x7ed5367265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28167)[0m     @     0x7f9307f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28167)[0m     @     0x7f9308095148 at::Tensor::copy_()
[2m[36m(pid=28167)[0m     @     0x7f930e34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28167)[0m     @     0x55c25a495fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28167)[0m     @     0x55c25a3f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28167)[0m     @     0x55c25a47bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28167)[0m     @     0x55c25a47ca20 method_vectorcall
[2m[36m(pid=28167)[0m     @     0x55c25a3f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28167)[0m     @     0x55c25a47bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28167)[0m     @     0x55c25a47c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28167)[0m     @     0x55c25a3f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28167)[0m     @     0x55c25a47bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28167)[0m     @     0x55c25a47c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28167)[0m     @     0x55c25a3f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28167)[0m     @     0x55c25a47bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28167)[0m     @     0x55c25a47c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28167)[0m     @     0x55c25a3f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28167)[0m     @     0x55c25a47bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28199)[0m     @     0x7ef7cb5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28199)[0m     @     0x55f4fbb42fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28199)[0m     @     0x55f4fba9db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28199)[0m     @     0x55f4fbb28baf _PyEval_EvalCodeWithName
[2m[36m(pid=28199)[0m     @     0x55f4fbb29a20 method_vectorcall
[2m[36m(pid=28199)[0m     @     0x55f4fba9dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28199)[0m     @     0x55f4fbb28baf _PyEval_EvalCodeWithName
[2m[36m(pid=28199)[0m     @     0x55f4fbb29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28199)[0m     @     0x55f4fba9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28199)[0m     @     0x55f4fbb28baf _PyEval_EvalCodeWithName
[2m[36m(pid=28199)[0m     @     0x55f4fbb29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28199)[0m     @     0x55f4fba9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28199)[0m     @     0x55f4fbb28baf _PyEval_EvalCodeWithName
[2m[36m(pid=28199)[0m     @     0x55f4fbb29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28199)[0m     @     0x55f4fba9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28199)[0m     @     0x55f4fbb28baf _PyEval_EvalCodeWithName
[2m[36m(pid=28206)[0m     @     0x7f428c33b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28206)[0m     @     0x7f428c443148 at::Tensor::copy_()
[2m[36m(pid=28206)[0m     @     0x7f42926f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28206)[0m     @     0x55ac6078efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28206)[0m     @     0x55ac606e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28206)[0m     @     0x55ac60774baf _PyEval_EvalCodeWithName
[2m[36m(pid=28206)[0m     @     0x55ac60775a20 method_vectorcall
[2m[36m(pid=28206)[0m     @     0x55ac606e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28206)[0m     @     0x55ac60774baf _PyEval_EvalCodeWithName
[2m[36m(pid=28206)[0m     @     0x55ac60775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28206)[0m     @     0x55ac606ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28206)[0m     @     0x55ac60774baf _PyEval_EvalCodeWithName
[2m[36m(pid=28206)[0m     @     0x55ac60775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28206)[0m     @     0x55ac606ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28206)[0m     @     0x55ac60774baf _PyEval_EvalCodeWithName
[2m[36m(pid=28206)[0m     @     0x55ac60775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28206)[0m     @     0x55ac606ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28206)[0m     @     0x55ac60774baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x7f3b39d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28208)[0m     @     0x7f3b39e97148 at::Tensor::copy_()
[2m[36m(pid=28208)[0m     @     0x7f3b4014dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28208)[0m     @     0x5644c031afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28208)[0m     @     0x5644c0275b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28208)[0m     @     0x5644c0300baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x5644c0301a20 method_vectorcall
[2m[36m(pid=28208)[0m     @     0x5644c0275bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28208)[0m     @     0x5644c0300baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x5644c0301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28208)[0m     @     0x5644c0276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28208)[0m     @     0x5644c0300baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x5644c0301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28208)[0m     @     0x5644c0276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28208)[0m     @     0x5644c0300baf _PyEval_EvalCodeWithName
[2m[36m(pid=28208)[0m     @     0x5644c0301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28208)[0m     @     0x5644c0276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28208)[0m     @     0x5644c0300baf _PyEval_EvalCodeWithName
[2m[36m(pid=28137)[0m     @     0x7fabe86b7148 at::Tensor::copy_()
[2m[36m(pid=28137)[0m     @     0x7fabee96dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28137)[0m     @     0x563fd902ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28137)[0m     @     0x563fd8f8ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28137)[0m     @     0x563fd9015baf _PyEval_EvalCodeWithName
[2m[36m(pid=28137)[0m     @     0x563fd9016a20 method_vectorcall
[2m[36m(pid=28137)[0m     @     0x563fd8f8abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28137)[0m     @     0x563fd9015baf _PyEval_EvalCodeWithName
[2m[36m(pid=28137)[0m     @     0x563fd9016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28137)[0m     @     0x563fd8f8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28137)[0m     @     0x563fd9015baf _PyEval_EvalCodeWithName
[2m[36m(pid=28137)[0m     @     0x563fd9016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28137)[0m     @     0x563fd8f8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28137)[0m     @     0x563fd9015baf _PyEval_EvalCodeWithName
[2m[36m(pid=28137)[0m     @     0x563fd9016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28137)[0m     @     0x563fd8f8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28137)[0m     @     0x563fd9015baf _PyEval_EvalCodeWithName
[2m[36m(pid=28159)[0m     @     0x7f8ce584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28159)[0m     @     0x7f8ce5956148 at::Tensor::copy_()
[2m[36m(pid=28159)[0m     @     0x7f8cebc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28159)[0m     @     0x55af1191efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28159)[0m     @     0x55af11879b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28159)[0m     @     0x55af11904baf _PyEval_EvalCodeWithName
[2m[36m(pid=28159)[0m     @     0x55af11905a20 method_vectorcall
[2m[36m(pid=28159)[0m     @     0x55af11879bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28159)[0m     @     0x55af11904baf _PyEval_EvalCodeWithName
[2m[36m(pid=28159)[0m     @     0x55af11905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28159)[0m     @     0x55af1187a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28159)[0m     @     0x55af11904baf _PyEval_EvalCodeWithName
[2m[36m(pid=28159)[0m     @     0x55af11905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28159)[0m     @     0x55af1187a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28159)[0m     @     0x55af11904baf _PyEval_EvalCodeWithName
[2m[36m(pid=28159)[0m     @     0x55af11905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28159)[0m     @     0x55af1187a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28159)[0m     @     0x55af11904baf _PyEval_EvalCodeWithName
[2m[36m(pid=28220)[0m     @     0x7f9ccf1e0148 at::Tensor::copy_()
[2m[36m(pid=28220)[0m     @     0x7f9cd5496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28220)[0m     @     0x5638bb2bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28220)[0m     @     0x5638bb217b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28220)[0m     @     0x5638bb2a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28220)[0m     @     0x5638bb2a3a20 method_vectorcall
[2m[36m(pid=28220)[0m     @     0x5638bb217bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28220)[0m     @     0x5638bb2a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28220)[0m     @     0x5638bb2a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28220)[0m     @     0x5638bb218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28220)[0m     @     0x5638bb2a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28220)[0m     @     0x5638bb2a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28220)[0m     @     0x5638bb218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28220)[0m     @     0x5638bb2a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28220)[0m     @     0x5638bb2a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28220)[0m     @     0x5638bb218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28220)[0m     @     0x5638bb2a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=28203)[0m     @     0x7f81ad956148 at::Tensor::copy_()
[2m[36m(pid=28203)[0m     @     0x7f81b3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28203)[0m     @     0x55ed2cbe7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28203)[0m     @     0x55ed2cb42b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28203)[0m     @     0x55ed2cbcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28203)[0m     @     0x55ed2cbcea20 method_vectorcall
[2m[36m(pid=28203)[0m     @     0x55ed2cb42bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28203)[0m     @     0x55ed2cbcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28203)[0m     @     0x55ed2cbce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28203)[0m     @     0x55ed2cb43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28203)[0m     @     0x55ed2cbcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28203)[0m     @     0x55ed2cbce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28203)[0m     @     0x55ed2cb43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28203)[0m     @     0x55ed2cbcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28203)[0m     @     0x55ed2cbce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28203)[0m     @     0x55ed2cb43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28203)[0m     @     0x55ed2cbcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28245)[0m     @     0x7fa171ec7148 at::Tensor::copy_()
[2m[36m(pid=28245)[0m     @     0x7fa17817dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28245)[0m     @     0x563cfb05afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28245)[0m     @     0x563cfafb5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28245)[0m     @     0x563cfb040baf _PyEval_EvalCodeWithName
[2m[36m(pid=28245)[0m     @     0x563cfb041a20 method_vectorcall
[2m[36m(pid=28245)[0m     @     0x563cfafb5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28245)[0m     @     0x563cfb040baf _PyEval_EvalCodeWithName
[2m[36m(pid=28245)[0m     @     0x563cfb041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28245)[0m     @     0x563cfafb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28245)[0m     @     0x563cfb040baf _PyEval_EvalCodeWithName
[2m[36m(pid=28245)[0m     @     0x563cfb041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28245)[0m     @     0x563cfafb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28245)[0m     @     0x563cfb040baf _PyEval_EvalCodeWithName
[2m[36m(pid=28245)[0m     @     0x563cfb041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28245)[0m     @     0x563cfafb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28245)[0m     @     0x563cfb040baf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x7fc12eebf148 at::Tensor::copy_()
[2m[36m(pid=28211)[0m     @     0x7fc135175bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28211)[0m     @     0x56229dc45fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28211)[0m     @     0x56229dba0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28211)[0m     @     0x56229dc2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x56229dc2ca20 method_vectorcall
[2m[36m(pid=28211)[0m     @     0x56229dba0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28211)[0m     @     0x56229dc2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x56229dc2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28211)[0m     @     0x56229dba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28211)[0m     @     0x56229dc2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x56229dc2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28211)[0m     @     0x56229dba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28211)[0m     @     0x56229dc2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28211)[0m     @     0x56229dc2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28211)[0m     @     0x56229dba1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28211)[0m     @     0x56229dc2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28165)[0m     @     0x7f3c3e958148 at::Tensor::copy_()
[2m[36m(pid=28165)[0m     @     0x7f3c44c0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28165)[0m     @     0x5560b9173fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28165)[0m     @     0x5560b90ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28165)[0m     @     0x5560b9159baf _PyEval_EvalCodeWithName
[2m[36m(pid=28165)[0m     @     0x5560b915aa20 method_vectorcall
[2m[36m(pid=28165)[0m     @     0x5560b90cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28165)[0m     @     0x5560b9159baf _PyEval_EvalCodeWithName
[2m[36m(pid=28165)[0m     @     0x5560b915a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28165)[0m     @     0x5560b90cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28165)[0m     @     0x5560b9159baf _PyEval_EvalCodeWithName
[2m[36m(pid=28165)[0m     @     0x5560b915a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28165)[0m     @     0x5560b90cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28165)[0m     @     0x5560b9159baf _PyEval_EvalCodeWithName
[2m[36m(pid=28165)[0m     @     0x5560b915a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28165)[0m     @     0x5560b90cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28165)[0m     @     0x5560b9159baf _PyEval_EvalCodeWithName
[2m[36m(pid=28139)[0m     @     0x7fa5c579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28139)[0m     @     0x7fa5c58a5148 at::Tensor::copy_()
[2m[36m(pid=28139)[0m     @     0x7fa5cbb5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28139)[0m     @     0x561cbefaafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28139)[0m     @     0x561cbef05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28139)[0m     @     0x561cbef90baf _PyEval_EvalCodeWithName
[2m[36m(pid=28139)[0m     @     0x561cbef91a20 method_vectorcall
[2m[36m(pid=28139)[0m     @     0x561cbef05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28139)[0m     @     0x561cbef90baf _PyEval_EvalCodeWithName
[2m[36m(pid=28139)[0m     @     0x561cbef91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28139)[0m     @     0x561cbef06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28139)[0m     @     0x561cbef90baf _PyEval_EvalCodeWithName
[2m[36m(pid=28139)[0m     @     0x561cbef91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28139)[0m     @     0x561cbef06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28139)[0m     @     0x561cbef90baf _PyEval_EvalCodeWithName
[2m[36m(pid=28139)[0m     @     0x561cbef91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28139)[0m     @     0x561cbef06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28139)[0m     @     0x561cbef90baf _PyEval_EvalCodeWithName
[2m[36m(pid=28263)[0m     @     0x7f10b4be7148 at::Tensor::copy_()
[2m[36m(pid=28263)[0m     @     0x7f10bae9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28263)[0m     @     0x558085872fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28263)[0m     @     0x5580857cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28263)[0m     @     0x558085858baf _PyEval_EvalCodeWithName
[2m[36m(pid=28263)[0m     @     0x558085859a20 method_vectorcall
[2m[36m(pid=28263)[0m     @     0x5580857cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28263)[0m     @     0x558085858baf _PyEval_EvalCodeWithName
[2m[36m(pid=28263)[0m     @     0x558085859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28263)[0m     @     0x5580857ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28263)[0m     @     0x558085858baf _PyEval_EvalCodeWithName
[2m[36m(pid=28263)[0m     @     0x558085859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28263)[0m     @     0x5580857ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28263)[0m     @     0x558085858baf _PyEval_EvalCodeWithName
[2m[36m(pid=28263)[0m     @     0x558085859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28263)[0m     @     0x5580857ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28263)[0m     @     0x558085858baf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x7f799c39ced4 at::native::copy_()
[2m[36m(pid=28161)[0m     @     0x7f799cadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28161)[0m     @     0x7f799cbe7148 at::Tensor::copy_()
[2m[36m(pid=28161)[0m     @     0x7f799e7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28155)[0m     @     0x7f74a45fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28155)[0m     @     0x7f74a4703148 at::Tensor::copy_()
[2m[36m(pid=28155)[0m     @     0x7f74a62fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28149)[0m     @     0x7fc6f80cb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28149)[0m     @     0x7fc6f81d3148 at::Tensor::copy_()
[2m[36m(pid=28149)[0m     @     0x7fc6fe489bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28149)[0m     @     0x561ba16d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28149)[0m     @     0x561ba1631b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28149)[0m     @     0x561ba16bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28149)[0m     @     0x561ba16bda20 method_vectorcall
[2m[36m(pid=28149)[0m     @     0x561ba1631bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28149)[0m     @     0x561ba16bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28149)[0m     @     0x561ba16bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28149)[0m     @     0x561ba1632689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28149)[0m     @     0x561ba16bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28149)[0m     @     0x561ba16bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28149)[0m     @     0x561ba1632689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28149)[0m     @     0x561ba16bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28149)[0m     @     0x561ba16bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28149)[0m     @     0x561ba1632689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28149)[0m     @     0x561ba16bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28169)[0m     @     0x558928d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28169)[0m     @     0x558928c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28169)[0m     @     0x558928d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=28169)[0m     @     0x558928d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28169)[0m     @     0x558928c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28169)[0m     @     0x558928d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=28169)[0m     @     0x558928d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28169)[0m     @     0x558928c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28169)[0m     @     0x558928d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x7f0937d64148 at::Tensor::copy_()
[2m[36m(pid=28217)[0m     @     0x7f093e01abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28217)[0m     @     0x5617948c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28217)[0m     @     0x561794821b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28217)[0m     @     0x5617948acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x5617948ada20 method_vectorcall
[2m[36m(pid=28217)[0m     @     0x561794821bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28217)[0m     @     0x5617948acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x5617948ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28217)[0m     @     0x561794822689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28217)[0m     @     0x5617948acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x5617948ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28217)[0m     @     0x561794822689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28217)[0m     @     0x5617948acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28217)[0m     @     0x5617948ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28217)[0m     @     0x561794822689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28217)[0m     @     0x5617948acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x7f0b67a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28234)[0m     @     0x7f0b67b4e148 at::Tensor::copy_()
[2m[36m(pid=28234)[0m     @     0x7f0b6de04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28234)[0m     @     0x56156ca7dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28234)[0m     @     0x56156c9d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28234)[0m     @     0x56156ca63baf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x56156ca64a20 method_vectorcall
[2m[36m(pid=28234)[0m     @     0x56156c9d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28234)[0m     @     0x56156ca63baf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x56156ca64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28234)[0m     @     0x56156c9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28234)[0m     @     0x56156ca63baf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x56156ca64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28234)[0m     @     0x56156c9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28234)[0m     @     0x56156ca63baf _PyEval_EvalCodeWithName
[2m[36m(pid=28234)[0m     @     0x56156ca64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28234)[0m     @     0x56156c9d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28234)[0m     @     0x56156ca63baf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x557ec065cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x557ec065d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28201)[0m     @     0x557ec05d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28201)[0m     @     0x557ec065cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x557ec065d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28201)[0m     @     0x557ec05d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28201)[0m     @     0x557ec065cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28201)[0m     @     0x557ec065d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28201)[0m     @     0x557ec05d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28201)[0m     @     0x557ec065cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x7f7585745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=28270)[0m     @     0x7f7583a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28140)[0m     @     0x7ed8ac66d148 at::Tensor::copy_()
[2m[36m(pid=28140)[0m     @     0x7ed8b2923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28140)[0m     @     0x55841af45fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28140)[0m     @     0x55841aea0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28140)[0m     @     0x55841af2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x55841af2ca20 method_vectorcall
[2m[36m(pid=28140)[0m     @     0x55841aea0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28140)[0m     @     0x55841af2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x55841af2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28140)[0m     @     0x55841aea1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28140)[0m     @     0x55841af2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x55841af2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28140)[0m     @     0x55841aea1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28140)[0m     @     0x55841af2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28140)[0m     @     0x55841af2c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28140)[0m     @     0x55841aea1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28140)[0m     @     0x55841af2bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28138)[0m     @     0x7f4308443148 at::Tensor::copy_()
[2m[36m(pid=28138)[0m     @     0x7f430e6f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28138)[0m     @     0x5603e6f04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28138)[0m     @     0x5603e6e5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28138)[0m     @     0x5603e6eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28138)[0m     @     0x5603e6eeba20 method_vectorcall
[2m[36m(pid=28138)[0m     @     0x5603e6e5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28138)[0m     @     0x5603e6eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28138)[0m     @     0x5603e6eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28138)[0m     @     0x5603e6e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28138)[0m     @     0x5603e6eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28138)[0m     @     0x5603e6eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28138)[0m     @     0x5603e6e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28138)[0m     @     0x5603e6eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28138)[0m     @     0x5603e6eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28138)[0m     @     0x5603e6e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28138)[0m     @     0x5603e6eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=28209)[0m     @     0x563a92d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28209)[0m     @     0x563a92de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=28256)[0m     @     0x5573fdfcdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28256)[0m     @     0x5573fe058baf _PyEval_EvalCodeWithName
[2m[36m(pid=28256)[0m     @     0x5573fe059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28256)[0m     @     0x5573fdfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28256)[0m     @     0x5573fe058baf _PyEval_EvalCodeWithName
[2m[36m(pid=28256)[0m     @     0x5573fe059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28256)[0m     @     0x5573fdfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28256)[0m     @     0x5573fe058baf _PyEval_EvalCodeWithName
[2m[36m(pid=28256)[0m     @     0x5573fe059643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28256)[0m     @     0x5573fdfce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28256)[0m     @     0x5573fe058baf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x7f35674f7148 at::Tensor::copy_()
[2m[36m(pid=28142)[0m     @     0x7f356d7adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28142)[0m     @     0x55ccf59e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28142)[0m     @     0x55ccf5944b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28142)[0m     @     0x55ccf59cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x55ccf59d0a20 method_vectorcall
[2m[36m(pid=28142)[0m     @     0x55ccf5944bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28142)[0m     @     0x55ccf59cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x55ccf59d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28142)[0m     @     0x55ccf5945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28142)[0m     @     0x55ccf59cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x55ccf59d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28142)[0m     @     0x55ccf5945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28142)[0m     @     0x55ccf59cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28142)[0m     @     0x55ccf59d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28142)[0m     @     0x55ccf5945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28142)[0m     @     0x55ccf59cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x7ed53682e148 at::Tensor::copy_()
[2m[36m(pid=28200)[0m     @     0x7ed53cae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28200)[0m     @     0x55a410cb1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28200)[0m     @     0x55a410c0cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28200)[0m     @     0x55a410c97baf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x55a410c98a20 method_vectorcall
[2m[36m(pid=28200)[0m     @     0x55a410c0cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28200)[0m     @     0x55a410c97baf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x55a410c98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28200)[0m     @     0x55a410c0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28200)[0m     @     0x55a410c97baf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x55a410c98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28200)[0m     @     0x55a410c0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28200)[0m     @     0x55a410c97baf _PyEval_EvalCodeWithName
[2m[36m(pid=28200)[0m     @     0x55a410c98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28200)[0m     @     0x55a410c0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28200)[0m     @     0x55a410c97baf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x7f799cadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28161)[0m     @     0x7f799cbe7148 at::Tensor::copy_()
[2m[36m(pid=28161)[0m     @     0x7f79a2e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28161)[0m     @     0x5555dd024fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28161)[0m     @     0x5555dcf7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28161)[0m     @     0x5555dd00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x5555dd00ba20 method_vectorcall
[2m[36m(pid=28161)[0m     @     0x5555dcf7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28161)[0m     @     0x5555dd00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x5555dd00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28161)[0m     @     0x5555dcf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28161)[0m     @     0x5555dd00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x5555dd00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28161)[0m     @     0x5555dcf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28161)[0m     @     0x5555dd00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28161)[0m     @     0x5555dd00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28161)[0m     @     0x5555dcf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28161)[0m     @     0x5555dd00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=28155)[0m     @     0x7f74a45fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=28155)[0m     @     0x7f74a4703148 at::Tensor::copy_()
[2m[36m(pid=28155)[0m     @     0x7f74aa9b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28155)[0m     @     0x55610bb67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28155)[0m     @     0x55610bac2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28155)[0m     @     0x55610bb4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28155)[0m     @     0x55610bb4ea20 method_vectorcall
[2m[36m(pid=28155)[0m     @     0x55610bac2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28155)[0m     @     0x55610bb4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28155)[0m     @     0x55610bb4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28155)[0m     @     0x55610bac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28155)[0m     @     0x55610bb4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28155)[0m     @     0x55610bb4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28155)[0m     @     0x55610bac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28155)[0m     @     0x55610bb4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28155)[0m     @     0x55610bb4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28155)[0m     @     0x55610bac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28155)[0m     @     0x55610bb4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x7f7583b4e148 at::Tensor::copy_()
[2m[36m(pid=28270)[0m     @     0x7f7589e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=28270)[0m     @     0x558996260fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=28270)[0m     @     0x5589961bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28270)[0m     @     0x558996246baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x558996247a20 method_vectorcall
[2m[36m(pid=28270)[0m     @     0x5589961bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28270)[0m     @     0x558996246baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x558996247643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28270)[0m     @     0x5589961bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28270)[0m     @     0x558996246baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x558996247643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28270)[0m     @     0x5589961bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28270)[0m     @     0x558996246baf _PyEval_EvalCodeWithName
[2m[36m(pid=28270)[0m     @     0x558996247643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=28270)[0m     @     0x5589961bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=28270)[0m     @     0x558996246baf _PyEval_EvalCodeWithName
2020-11-05 11:04:48,781	ERROR trial_runner.py:567 -- Trial PPO_jss_env_b3d67_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=28243, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:04:48,782	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
== Status ==
Memory usage on this node: 25.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b3d67_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b3d67_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b3d67_00000_0_2020-11-05_11-04-40/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 25.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b3d67_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b3d67_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b3d67_00000_0_2020-11-05_11-04-40/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:04:48,806	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 11:04:48,817	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 11:04:48,817	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_b3d67_00000])
