2020-11-05 10:07:36,245	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_bb4dc_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=39242)[0m 2020-11-05 10:07:38,988	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=39219)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39219)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39219)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39214)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39214)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39214)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39215)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39215)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39215)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39216)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39212)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39212)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39212)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39190)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39190)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39190)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39184)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39184)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39184)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39172)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39172)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39172)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39207)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39207)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39207)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39221)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39221)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39221)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39187)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39187)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39179)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39179)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39196)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39196)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39196)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39223)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39223)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39223)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39194)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39194)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39194)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39219)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39219)[0m *** SIGSEGV (@0x0) received by PID 39219 (TID 0x7f4a5c71c700) from PID 0; stack trace: ***
[2m[36m(pid=39219)[0m     @     0x7f4a5c2f5390 (unknown)
[2m[36m(pid=39219)[0m     @     0x7f1b5c29ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39219)[0m     @     0x7f1b5b9c97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39214)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39214)[0m *** SIGSEGV (@0x0) received by PID 39214 (TID 0x7fb606831700) from PID 0; stack trace: ***
[2m[36m(pid=39214)[0m     @     0x7fb60640a390 (unknown)
[2m[36m(pid=39214)[0m     @     0x7f8706193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39214)[0m     @     0x7f87058be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39214)[0m     @     0x7f87058c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39215)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39215)[0m *** SIGSEGV (@0x0) received by PID 39215 (TID 0x7fadd7042700) from PID 0; stack trace: ***
[2m[36m(pid=39215)[0m     @     0x7fadd6c1b390 (unknown)
[2m[36m(pid=39215)[0m     @     0x7f7ed6badf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39128)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39128)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39128)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39128)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39128)[0m *** SIGSEGV (@0x0) received by PID 39128 (TID 0x7f09c7738700) from PID 0; stack trace: ***
[2m[36m(pid=39229)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39229)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39229)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39229)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39229)[0m *** SIGSEGV (@0x0) received by PID 39229 (TID 0x7f28946b6700) from PID 0; stack trace: ***
[2m[36m(pid=39229)[0m     @     0x7f289428f390 (unknown)
[2m[36m(pid=39216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39216)[0m *** SIGSEGV (@0x0) received by PID 39216 (TID 0x7f5dd07f7700) from PID 0; stack trace: ***
[2m[36m(pid=39216)[0m     @     0x7f5dd03d0390 (unknown)
[2m[36m(pid=39216)[0m     @     0x7f2ed0333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39216)[0m     @     0x7f2ecfa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39202)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39202)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39202)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39202)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39202)[0m *** SIGSEGV (@0x0) received by PID 39202 (TID 0x7f1aa7770700) from PID 0; stack trace: ***
[2m[36m(pid=39202)[0m     @     0x7f1aa7349390 (unknown)
[2m[36m(pid=39212)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39212)[0m *** SIGSEGV (@0x0) received by PID 39212 (TID 0x7f2ed5631700) from PID 0; stack trace: ***
[2m[36m(pid=39212)[0m     @     0x7f2ed520a390 (unknown)
[2m[36m(pid=39212)[0m     @     0x7effd5166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39212)[0m     @     0x7effd48917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39212)[0m     @     0x7effd48948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39129)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39129)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39129)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39129)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39129)[0m *** SIGSEGV (@0x0) received by PID 39129 (TID 0x7f70f660b700) from PID 0; stack trace: ***
[2m[36m(pid=39190)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39190)[0m *** SIGSEGV (@0x0) received by PID 39190 (TID 0x7f66912cc700) from PID 0; stack trace: ***
[2m[36m(pid=39190)[0m     @     0x7f6690ea5390 (unknown)
[2m[36m(pid=39190)[0m     @     0x7f3790e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39190)[0m     @     0x7f37905627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39097)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39097)[0m *** SIGSEGV (@0x0) received by PID 39097 (TID 0x7eff7b06c700) from PID 0; stack trace: ***
[2m[36m(pid=39097)[0m     @     0x7eff7ac45390 (unknown)
[2m[36m(pid=39209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39209)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39209)[0m *** SIGSEGV (@0x0) received by PID 39209 (TID 0x7f8248c8b700) from PID 0; stack trace: ***
[2m[36m(pid=39209)[0m     @     0x7f8248864390 (unknown)
[2m[36m(pid=39209)[0m     @     0x7f5348774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39209)[0m     @     0x7f5347e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39167)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39167)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39167)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39167)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39167)[0m *** SIGSEGV (@0x0) received by PID 39167 (TID 0x7ff7ace69700) from PID 0; stack trace: ***
[2m[36m(pid=39116)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39116)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39116)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39116)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39116)[0m *** SIGSEGV (@0x0) received by PID 39116 (TID 0x7fd40af00700) from PID 0; stack trace: ***
[2m[36m(pid=39116)[0m     @     0x7fd40aad9390 (unknown)
[2m[36m(pid=39184)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39184)[0m *** SIGSEGV (@0x0) received by PID 39184 (TID 0x7ff44a98f700) from PID 0; stack trace: ***
[2m[36m(pid=39184)[0m     @     0x7ff44a568390 (unknown)
[2m[36m(pid=39184)[0m     @     0x7fc54a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39184)[0m     @     0x7fc549c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39184)[0m     @     0x7fc549c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39126)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39126)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39126)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39126)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39126)[0m *** SIGSEGV (@0x0) received by PID 39126 (TID 0x7f29428e3700) from PID 0; stack trace: ***
[2m[36m(pid=39126)[0m     @     0x7f29424bc390 (unknown)
[2m[36m(pid=39172)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39172)[0m *** SIGSEGV (@0x0) received by PID 39172 (TID 0x7f739660b700) from PID 0; stack trace: ***
[2m[36m(pid=39172)[0m     @     0x7f73961e4390 (unknown)
[2m[36m(pid=39172)[0m     @     0x7f449613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39172)[0m     @     0x7f44958657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39207)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39207)[0m *** SIGSEGV (@0x0) received by PID 39207 (TID 0x7fa8bc31b700) from PID 0; stack trace: ***
[2m[36m(pid=39207)[0m     @     0x7fa8bbef4390 (unknown)
[2m[36m(pid=39207)[0m     @     0x7f79bbe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39207)[0m     @     0x7f79bb5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39171)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39171)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39171)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39171)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39171)[0m *** SIGSEGV (@0x0) received by PID 39171 (TID 0x7f5b5ebab700) from PID 0; stack trace: ***
[2m[36m(pid=39171)[0m     @     0x7f5b5e784390 (unknown)
[2m[36m(pid=39221)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39221)[0m *** SIGSEGV (@0x0) received by PID 39221 (TID 0x7fa4d1c3d700) from PID 0; stack trace: ***
[2m[36m(pid=39221)[0m     @     0x7fa4d1816390 (unknown)
[2m[36m(pid=39221)[0m     @     0x7f75d16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39221)[0m     @     0x7f75d0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39162)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39162)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39162)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39162)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39162)[0m *** SIGSEGV (@0x0) received by PID 39162 (TID 0x7f9f49ca3700) from PID 0; stack trace: ***
[2m[36m(pid=39162)[0m     @     0x7f9f4987c390 (unknown)
[2m[36m(pid=39162)[0m     @     0x7f70497f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39162)[0m     @     0x7f7048f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39224)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39224)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39224)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39224)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39224)[0m *** SIGSEGV (@0x0) received by PID 39224 (TID 0x7ffa37e60700) from PID 0; stack trace: ***
[2m[36m(pid=39224)[0m     @     0x7ffa37a39390 (unknown)
[2m[36m(pid=39187)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39187)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39187)[0m *** SIGSEGV (@0x0) received by PID 39187 (TID 0x7f6eb295e700) from PID 0; stack trace: ***
[2m[36m(pid=39187)[0m     @     0x7f6eb2537390 (unknown)
[2m[36m(pid=39187)[0m     @     0x7f3fb2193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39187)[0m     @     0x7f3fb18be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39179)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39179)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39179)[0m *** SIGSEGV (@0x0) received by PID 39179 (TID 0x7f7d37b5c700) from PID 0; stack trace: ***
[2m[36m(pid=39179)[0m     @     0x7f7d37735390 (unknown)
[2m[36m(pid=39179)[0m     @     0x7f4e376aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39112)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39112)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39112)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39112)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39112)[0m *** SIGSEGV (@0x0) received by PID 39112 (TID 0x7f99ff587700) from PID 0; stack trace: ***
[2m[36m(pid=39196)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39196)[0m *** SIGSEGV (@0x0) received by PID 39196 (TID 0x7f7dbbdfb700) from PID 0; stack trace: ***
[2m[36m(pid=39196)[0m     @     0x7f7dbb9d4390 (unknown)
[2m[36m(pid=39196)[0m     @     0x7f4ebb8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39196)[0m     @     0x7f4ebb0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39223)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39223)[0m *** SIGSEGV (@0x0) received by PID 39223 (TID 0x7f5ea9f30700) from PID 0; stack trace: ***
[2m[36m(pid=39223)[0m     @     0x7f5ea9b09390 (unknown)
[2m[36m(pid=39223)[0m     @     0x7f2fa9a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39223)[0m     @     0x7f2fa91357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39163)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39163)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39163)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39163)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39163)[0m *** SIGSEGV (@0x0) received by PID 39163 (TID 0x7fca45b20700) from PID 0; stack trace: ***
[2m[36m(pid=39163)[0m     @     0x7fca456f9390 (unknown)
[2m[36m(pid=39163)[0m     @     0x7f9b45687f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39191)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39191)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39191)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39191)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39191)[0m *** SIGSEGV (@0x0) received by PID 39191 (TID 0x7f95c4491700) from PID 0; stack trace: ***
[2m[36m(pid=39191)[0m     @     0x7f95c406a390 (unknown)
[2m[36m(pid=39194)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39194)[0m *** SIGSEGV (@0x0) received by PID 39194 (TID 0x7fd2f0d51700) from PID 0; stack trace: ***
[2m[36m(pid=39194)[0m     @     0x7fd2f092a390 (unknown)
[2m[36m(pid=39219)[0m     @     0x7f1b5b9cc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39219)[0m     @     0x7f1b5b9ccad3 at::TensorIterator::for_each()
[2m[36m(pid=39214)[0m     @     0x7f87058c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=39215)[0m     @     0x7f7ed62d87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39215)[0m     @     0x7f7ed62db8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39128)[0m     @     0x7f09c7311390 (unknown)
[2m[36m(pid=39128)[0m     @     0x7edac7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39128)[0m     @     0x7edac69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39229)[0m     @     0x7ef994223f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39229)[0m     @     0x7ef99394e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39216)[0m     @     0x7f2ecfa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39202)[0m     @     0x7eeba7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39202)[0m     @     0x7eeba69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39212)[0m     @     0x7effd4894ad3 at::TensorIterator::for_each()
[2m[36m(pid=39129)[0m     @     0x7f70f61e4390 (unknown)
[2m[36m(pid=39129)[0m     @     0x7f41f613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39129)[0m     @     0x7f41f58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39190)[0m     @     0x7f37905658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39190)[0m     @     0x7f3790565ad3 at::TensorIterator::for_each()
[2m[36m(pid=39097)[0m     @     0x7ed07aad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39097)[0m     @     0x7ed07a1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39097)[0m     @     0x7ed07a1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39209)[0m     @     0x7f5347ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39209)[0m     @     0x7f5347ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39167)[0m     @     0x7ff7aca42390 (unknown)
[2m[36m(pid=39167)[0m     @     0x7fc8ac911f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39167)[0m     @     0x7fc8ac03c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39116)[0m     @     0x7fa50aa9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39116)[0m     @     0x7fa50a1ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39116)[0m     @     0x7fa50a1cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39116)[0m     @     0x7fa50a1cdad3 at::TensorIterator::for_each()
[2m[36m(pid=39184)[0m     @     0x7fc549c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39184)[0m     @     0x7fc549c27d91 at::TensorIterator::for_each()
[2m[36m(pid=39184)[0m     @     0x7fc54a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39184)[0m     @     0x7fc54a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39126)[0m     @     0x7efa42467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39126)[0m     @     0x7efa41b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39126)[0m     @     0x7efa41b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39126)[0m     @     0x7efa41b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=39172)[0m     @     0x7f44958688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39172)[0m     @     0x7f4495868ad3 at::TensorIterator::for_each()
[2m[36m(pid=39172)[0m     @     0x7f4495868d91 at::TensorIterator::for_each()
[2m[36m(pid=39172)[0m     @     0x7f449614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39207)[0m     @     0x7f79bb5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39207)[0m     @     0x7f79bb539ad3 at::TensorIterator::for_each()
[2m[36m(pid=39207)[0m     @     0x7f79bb539d91 at::TensorIterator::for_each()
[2m[36m(pid=39207)[0m     @     0x7f79bbe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39171)[0m     @     0x7f2c5e729f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39171)[0m     @     0x7f2c5de547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39171)[0m     @     0x7f2c5de578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39171)[0m     @     0x7f2c5de57ad3 at::TensorIterator::for_each()
[2m[36m(pid=39221)[0m     @     0x7f75d0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39221)[0m     @     0x7f75d0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=39221)[0m     @     0x7f75d0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=39221)[0m     @     0x7f75d1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39105)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39162)[0m     @     0x7f7048f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39162)[0m     @     0x7f7048f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39224)[0m     @     0x7fcb378def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39224)[0m     @     0x7fcb370097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39224)[0m     @     0x7fcb3700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39203)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39203)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39203)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39176)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39176)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39176)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39183)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39183)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39183)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39183)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39183)[0m *** SIGSEGV (@0x0) received by PID 39183 (TID 0x7f5463c42700) from PID 0; stack trace: ***
[2m[36m(pid=39187)[0m     @     0x7f3fb18c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39187)[0m     @     0x7f3fb18c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=39187)[0m     @     0x7f3fb18c1d91 at::TensorIterator::for_each()
[2m[36m(pid=39187)[0m     @     0x7f3fb21a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39187)[0m     @     0x7f3fb21c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39179)[0m     @     0x7f4e36dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39179)[0m     @     0x7f4e36ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39179)[0m     @     0x7f4e36ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=39112)[0m     @     0x7f99ff160390 (unknown)
[2m[36m(pid=39112)[0m     @     0x7f6aff0f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39112)[0m     @     0x7f6afe8227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39112)[0m     @     0x7f6afe8258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39196)[0m     @     0x7f4ebb00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39196)[0m     @     0x7f4ebb00cad3 at::TensorIterator::for_each()
[2m[36m(pid=39196)[0m     @     0x7f4ebb00cd91 at::TensorIterator::for_each()
[2m[36m(pid=39196)[0m     @     0x7f4ebb8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39196)[0m     @     0x7f4ebb912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39223)[0m     @     0x7f2fa91388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39223)[0m     @     0x7f2fa9138ad3 at::TensorIterator::for_each()
[2m[36m(pid=39223)[0m     @     0x7f2fa9138d91 at::TensorIterator::for_each()
[2m[36m(pid=39223)[0m     @     0x7f2fa9a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39223)[0m     @     0x7f2fa9a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39163)[0m     @     0x7f9b44db27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39163)[0m     @     0x7f9b44db58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39163)[0m     @     0x7f9b44db5ad3 at::TensorIterator::for_each()
[2m[36m(pid=39191)[0m     @     0x7f66c401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39191)[0m     @     0x7f66c37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39191)[0m     @     0x7f66c374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39122)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39122)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39122)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39122)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39122)[0m *** SIGSEGV (@0x0) received by PID 39122 (TID 0x7fc5cf625700) from PID 0; stack trace: ***
[2m[36m(pid=39122)[0m     @     0x7fc5cf1fe390 (unknown)
[2m[36m(pid=39122)[0m     @     0x7f96cf124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39110)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39110)[0m *** SIGSEGV (@0x0) received by PID 39110 (TID 0x7f73d56b0700) from PID 0; stack trace: ***
[2m[36m(pid=39194)[0m     @     0x7fa3f0825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39194)[0m     @     0x7fa3eff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39194)[0m     @     0x7fa3eff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39194)[0m     @     0x7fa3eff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=39178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39178)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39234)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39234)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39234)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39175)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39175)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39175)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39186)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39186)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39186)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39198)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39198)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39198)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39099)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39099)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39099)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39099)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39102)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39200)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39200)[0m *** SIGSEGV (@0x0) received by PID 39200 (TID 0x7f6537b8a700) from PID 0; stack trace: ***
[2m[36m(pid=39200)[0m     @     0x7f6537763390 (unknown)
[2m[36m(pid=39174)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39174)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39174)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39161)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39161)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39161)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39101)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39233)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39233)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39233)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39233)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39233)[0m *** SIGSEGV (@0x0) received by PID 39233 (TID 0x7f5bf8a7b700) from PID 0; stack trace: ***
[2m[36m(pid=39233)[0m     @     0x7f5bf8654390 (unknown)
[2m[36m(pid=39233)[0m     @     0x7f2cf8563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39233)[0m     @     0x7f2cf7c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39108)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39108)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39108)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39108)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39108)[0m *** SIGSEGV (@0x0) received by PID 39108 (TID 0x7feeaa820700) from PID 0; stack trace: ***
[2m[36m(pid=39108)[0m     @     0x7feeaa3f9390 (unknown)
[2m[36m(pid=39108)[0m     @     0x7fbfaa34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39168)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39168)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39168)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39168)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39168)[0m *** SIGSEGV (@0x0) received by PID 39168 (TID 0x7f230026b700) from PID 0; stack trace: ***
[2m[36m(pid=39168)[0m     @     0x7f22ffe44390 (unknown)
[2m[36m(pid=39168)[0m     @     0x7ef3ffddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39168)[0m     @     0x7ef3ff5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39096)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39096)[0m *** SIGSEGV (@0x0) received by PID 39096 (TID 0x7f0cad7be700) from PID 0; stack trace: ***
[2m[36m(pid=39096)[0m     @     0x7f0cad397390 (unknown)
[2m[36m(pid=39169)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39169)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39169)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39169)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39127)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39127)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39127)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39127)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39127)[0m *** SIGSEGV (@0x0) received by PID 39127 (TID 0x7ff7d5328700) from PID 0; stack trace: ***
[2m[36m(pid=39127)[0m     @     0x7ff7d4f01390 (unknown)
[2m[36m(pid=39117)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39117)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39117)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39117)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39117)[0m *** SIGSEGV (@0x0) received by PID 39117 (TID 0x7f5e7decb700) from PID 0; stack trace: ***
[2m[36m(pid=39117)[0m     @     0x7f5e7daa4390 (unknown)
[2m[36m(pid=39111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39111)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39111)[0m *** SIGSEGV (@0x0) received by PID 39111 (TID 0x7f16302c1700) from PID 0; stack trace: ***
[2m[36m(pid=39111)[0m     @     0x7f162fe9a390 (unknown)
[2m[36m(pid=39111)[0m     @     0x7ee72fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39219)[0m     @     0x7f1b5b9ccd91 at::TensorIterator::for_each()
[2m[36m(pid=39219)[0m     @     0x7f1b5c2afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39219)[0m     @     0x7f1b5c2d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39219)[0m     @     0x7f1b5b774a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39219)[0m     @     0x7f1b5b772388 at::native::copy_impl()
[2m[36m(pid=39219)[0m     @     0x7f1b5b7745a4 at::native::copy_()
[2m[36m(pid=39214)[0m     @     0x7f87058c1d91 at::TensorIterator::for_each()
[2m[36m(pid=39214)[0m     @     0x7f87061a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39214)[0m     @     0x7f87061c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39214)[0m     @     0x7f8705669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39214)[0m     @     0x7f8705667388 at::native::copy_impl()
[2m[36m(pid=39214)[0m     @     0x7f87056695a4 at::native::copy_()
[2m[36m(pid=39215)[0m     @     0x7f7ed62dbad3 at::TensorIterator::for_each()
[2m[36m(pid=39215)[0m     @     0x7f7ed62dbd91 at::TensorIterator::for_each()
[2m[36m(pid=39215)[0m     @     0x7f7ed6bbeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39215)[0m     @     0x7f7ed6be1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39128)[0m     @     0x7edac69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39128)[0m     @     0x7edac6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=39128)[0m     @     0x7edac6957d91 at::TensorIterator::for_each()
[2m[36m(pid=39128)[0m     @     0x7edac723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39229)[0m     @     0x7ef9939518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39229)[0m     @     0x7ef993951ad3 at::TensorIterator::for_each()
[2m[36m(pid=39229)[0m     @     0x7ef993951d91 at::TensorIterator::for_each()
[2m[36m(pid=39229)[0m     @     0x7ef994234b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39229)[0m     @     0x7ef994257c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39216)[0m     @     0x7f2ecfa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=39216)[0m     @     0x7f2ecfa61d91 at::TensorIterator::for_each()
[2m[36m(pid=39216)[0m     @     0x7f2ed0344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39216)[0m     @     0x7f2ed0367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39216)[0m     @     0x7f2ecf809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39202)[0m     @     0x7eeba69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39202)[0m     @     0x7eeba6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=39202)[0m     @     0x7eeba6957d91 at::TensorIterator::for_each()
[2m[36m(pid=39202)[0m     @     0x7eeba723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39202)[0m     @     0x7eeba725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39212)[0m     @     0x7effd4894d91 at::TensorIterator::for_each()
[2m[36m(pid=39212)[0m     @     0x7effd5177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39212)[0m     @     0x7effd519ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39212)[0m     @     0x7effd463ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39212)[0m     @     0x7effd463a388 at::native::copy_impl()
[2m[36m(pid=39212)[0m     @     0x7effd463c5a4 at::native::copy_()
[2m[36m(pid=39129)[0m     @     0x7f41f58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39129)[0m     @     0x7f41f5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=39129)[0m     @     0x7f41f5868d91 at::TensorIterator::for_each()
[2m[36m(pid=39129)[0m     @     0x7f41f614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39129)[0m     @     0x7f41f616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39190)[0m     @     0x7f3790565d91 at::TensorIterator::for_each()
[2m[36m(pid=39190)[0m     @     0x7f3790e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39190)[0m     @     0x7f3790e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39190)[0m     @     0x7f379030da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39190)[0m     @     0x7f379030b388 at::native::copy_impl()
[2m[36m(pid=39190)[0m     @     0x7f379030d5a4 at::native::copy_()
[2m[36m(pid=39120)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39120)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39120)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39120)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39120)[0m *** SIGSEGV (@0x0) received by PID 39120 (TID 0x7fd5ff0f1700) from PID 0; stack trace: ***
[2m[36m(pid=39120)[0m     @     0x7fd5fecca390 (unknown)
[2m[36m(pid=39120)[0m     @     0x7fa6fec6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39120)[0m     @     0x7fa6fe3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39097)[0m     @     0x7ed07a1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=39097)[0m     @     0x7ed07a1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=39097)[0m     @     0x7ed07aae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39097)[0m     @     0x7ed07ab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39097)[0m     @     0x7ed079fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39097)[0m     @     0x7ed079fa5388 at::native::copy_impl()
[2m[36m(pid=39097)[0m     @     0x7ed079fa75a4 at::native::copy_()
[2m[36m(pid=39103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39103)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39103)[0m *** SIGSEGV (@0x0) received by PID 39103 (TID 0x7fcc99de1700) from PID 0; stack trace: ***
[2m[36m(pid=39103)[0m     @     0x7fcc999ba390 (unknown)
[2m[36m(pid=39103)[0m     @     0x7f9d995f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39103)[0m     @     0x7f9d98d227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39124)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39124)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39124)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39124)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39124)[0m *** SIGSEGV (@0x0) received by PID 39124 (TID 0x7ff3e68f4700) from PID 0; stack trace: ***
[2m[36m(pid=39124)[0m     @     0x7ff3e64cd390 (unknown)
[2m[36m(pid=39124)[0m     @     0x7fc4e6365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39124)[0m     @     0x7fc4e5a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39114)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39114)[0m *** SIGSEGV (@0x0) received by PID 39114 (TID 0x7fd055562700) from PID 0; stack trace: ***
[2m[36m(pid=39114)[0m     @     0x7fd05513b390 (unknown)
[2m[36m(pid=39114)[0m     @     0x7fa1550b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39114)[0m     @     0x7fa1547e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39192)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39192)[0m *** SIGSEGV (@0x0) received by PID 39192 (TID 0x7fb477405700) from PID 0; stack trace: ***
[2m[36m(pid=39192)[0m     @     0x7fb476fde390 (unknown)
[2m[36m(pid=39192)[0m     @     0x7f8576f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39113)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39113)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39113)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39113)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39113)[0m *** SIGSEGV (@0x0) received by PID 39113 (TID 0x7f7dd7fd8700) from PID 0; stack trace: ***
[2m[36m(pid=39164)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39164)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39164)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39164)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39164)[0m *** SIGSEGV (@0x0) received by PID 39164 (TID 0x7f7c1940c700) from PID 0; stack trace: ***
[2m[36m(pid=39177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39177)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39177)[0m *** SIGSEGV (@0x0) received by PID 39177 (TID 0x7f615bdef700) from PID 0; stack trace: ***
[2m[36m(pid=39173)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39173)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39173)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39173)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39173)[0m *** SIGSEGV (@0x0) received by PID 39173 (TID 0x7eff753d5700) from PID 0; stack trace: ***
[2m[36m(pid=39098)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39098)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39098)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39209)[0m     @     0x7f5347ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=39209)[0m     @     0x7f5348785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39209)[0m     @     0x7f53487a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39209)[0m     @     0x7f5347c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39209)[0m     @     0x7f5347c48388 at::native::copy_impl()
[2m[36m(pid=39209)[0m     @     0x7f5347c4a5a4 at::native::copy_()
[2m[36m(pid=39167)[0m     @     0x7fc8ac03f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39167)[0m     @     0x7fc8ac03fad3 at::TensorIterator::for_each()
[2m[36m(pid=39167)[0m     @     0x7fc8ac03fd91 at::TensorIterator::for_each()
[2m[36m(pid=39167)[0m     @     0x7fc8ac922b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39167)[0m     @     0x7fc8ac945c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39116)[0m     @     0x7fa50a1cdd91 at::TensorIterator::for_each()
[2m[36m(pid=39116)[0m     @     0x7fa50aab0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39116)[0m     @     0x7fa50aad3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39116)[0m     @     0x7fa509f75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39116)[0m     @     0x7fa509f73388 at::native::copy_impl()
[2m[36m(pid=39184)[0m     @     0x7fc5499cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39184)[0m     @     0x7fc5499cd388 at::native::copy_impl()
[2m[36m(pid=39184)[0m     @     0x7fc5499cf5a4 at::native::copy_()
[2m[36m(pid=39184)[0m     @     0x7fc54a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39126)[0m     @     0x7efa41b95d91 at::TensorIterator::for_each()
[2m[36m(pid=39126)[0m     @     0x7efa42478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39126)[0m     @     0x7efa4249bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39126)[0m     @     0x7efa4193da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39126)[0m     @     0x7efa4193b388 at::native::copy_impl()
[2m[36m(pid=39172)[0m     @     0x7f449616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39172)[0m     @     0x7f4495610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39172)[0m     @     0x7f449560e388 at::native::copy_impl()
[2m[36m(pid=39172)[0m     @     0x7f44956105a4 at::native::copy_()
[2m[36m(pid=39207)[0m     @     0x7f79bbe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39207)[0m     @     0x7f79bb2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39207)[0m     @     0x7f79bb2df388 at::native::copy_impl()
[2m[36m(pid=39207)[0m     @     0x7f79bb2e15a4 at::native::copy_()
[2m[36m(pid=39171)[0m     @     0x7f2c5de57d91 at::TensorIterator::for_each()
[2m[36m(pid=39171)[0m     @     0x7f2c5e73ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39171)[0m     @     0x7f2c5e75dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39171)[0m     @     0x7f2c5dbffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39171)[0m     @     0x7f2c5dbfd388 at::native::copy_impl()
[2m[36m(pid=39221)[0m     @     0x7f75d1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39221)[0m     @     0x7f75d0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39221)[0m     @     0x7f75d0bc8388 at::native::copy_impl()
[2m[36m(pid=39221)[0m     @     0x7f75d0bca5a4 at::native::copy_()
[2m[36m(pid=39105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39105)[0m *** SIGSEGV (@0x0) received by PID 39105 (TID 0x7f4f8250b700) from PID 0; stack trace: ***
[2m[36m(pid=39105)[0m     @     0x7f4f820e4390 (unknown)
[2m[36m(pid=39105)[0m     @     0x7f2081f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39105)[0m     @     0x7f20816b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39162)[0m     @     0x7f7048f27d91 at::TensorIterator::for_each()
[2m[36m(pid=39162)[0m     @     0x7f704980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39162)[0m     @     0x7f704982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39162)[0m     @     0x7f7048ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39162)[0m     @     0x7f7048ccd388 at::native::copy_impl()
[2m[36m(pid=39224)[0m     @     0x7fcb3700cad3 at::TensorIterator::for_each()
[2m[36m(pid=39224)[0m     @     0x7fcb3700cd91 at::TensorIterator::for_each()
[2m[36m(pid=39224)[0m     @     0x7fcb378efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39224)[0m     @     0x7fcb37912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39203)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39203)[0m *** SIGSEGV (@0x0) received by PID 39203 (TID 0x7f76d8bd7700) from PID 0; stack trace: ***
[2m[36m(pid=39203)[0m     @     0x7f76d87b0390 (unknown)
[2m[36m(pid=39203)[0m     @     0x7f47d8563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39203)[0m     @     0x7f47d7c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39203)[0m     @     0x7f47d7c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39176)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39176)[0m *** SIGSEGV (@0x0) received by PID 39176 (TID 0x7fb9153d5700) from PID 0; stack trace: ***
[2m[36m(pid=39176)[0m     @     0x7fb914fae390 (unknown)
[2m[36m(pid=39176)[0m     @     0x7f8a14ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39176)[0m     @     0x7f8a145cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39176)[0m     @     0x7f8a145d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39183)[0m     @     0x7f546381b390 (unknown)
[2m[36m(pid=39183)[0m     @     0x7f25637a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39183)[0m     @     0x7f2562ed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39183)[0m     @     0x7f2562ed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39187)[0m     @     0x7f3fb1669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39187)[0m     @     0x7f3fb1667388 at::native::copy_impl()
[2m[36m(pid=39187)[0m     @     0x7f3fb16695a4 at::native::copy_()
[2m[36m(pid=39179)[0m     @     0x7f4e36ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=39179)[0m     @     0x7f4e376bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39179)[0m     @     0x7f4e376e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39179)[0m     @     0x7f4e36b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39112)[0m     @     0x7f6afe825ad3 at::TensorIterator::for_each()
[2m[36m(pid=39112)[0m     @     0x7f6afe825d91 at::TensorIterator::for_each()
[2m[36m(pid=39112)[0m     @     0x7f6aff108b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39112)[0m     @     0x7f6aff12bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39196)[0m     @     0x7f4ebadb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39196)[0m     @     0x7f4ebadb2388 at::native::copy_impl()
[2m[36m(pid=39196)[0m     @     0x7f4ebadb45a4 at::native::copy_()
[2m[36m(pid=39223)[0m     @     0x7f2fa8ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39223)[0m     @     0x7f2fa8ede388 at::native::copy_impl()
[2m[36m(pid=39223)[0m     @     0x7f2fa8ee05a4 at::native::copy_()
[2m[36m(pid=39163)[0m     @     0x7f9b44db5d91 at::TensorIterator::for_each()
[2m[36m(pid=39163)[0m     @     0x7f9b45698b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39163)[0m     @     0x7f9b456bbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39163)[0m     @     0x7f9b44b5da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39163)[0m     @     0x7f9b44b5b388 at::native::copy_impl()
[2m[36m(pid=39191)[0m     @     0x7f66c374aad3 at::TensorIterator::for_each()
[2m[36m(pid=39191)[0m     @     0x7f66c374ad91 at::TensorIterator::for_each()
[2m[36m(pid=39191)[0m     @     0x7f66c402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39191)[0m     @     0x7f66c4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39122)[0m     @     0x7f96ce84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39122)[0m     @     0x7f96ce8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39122)[0m     @     0x7f96ce852ad3 at::TensorIterator::for_each()
[2m[36m(pid=39110)[0m     @     0x7f73d5289390 (unknown)
[2m[36m(pid=39110)[0m     @     0x7f44d5225f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39110)[0m     @     0x7f44d49507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39110)[0m     @     0x7f44d49538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39194)[0m     @     0x7fa3eff53d91 at::TensorIterator::for_each()
[2m[36m(pid=39194)[0m     @     0x7fa3f0836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39194)[0m     @     0x7fa3f0859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39194)[0m     @     0x7fa3efcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39194)[0m     @     0x7fa3efcf9388 at::native::copy_impl()
[2m[36m(pid=39166)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39166)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39166)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39166)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39166)[0m *** SIGSEGV (@0x0) received by PID 39166 (TID 0x7fa6f7770700) from PID 0; stack trace: ***
[2m[36m(pid=39166)[0m     @     0x7fa6f7349390 (unknown)
[2m[36m(pid=39166)[0m     @     0x7f77f72e6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39188)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39188)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39188)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39188)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39188)[0m *** SIGSEGV (@0x0) received by PID 39188 (TID 0x7fb33e49b700) from PID 0; stack trace: ***
[2m[36m(pid=39188)[0m     @     0x7fb33e074390 (unknown)
[2m[36m(pid=39188)[0m     @     0x7f843e005f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39188)[0m     @     0x7f843d7307db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39188)[0m     @     0x7f843d7338f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39178)[0m *** SIGSEGV (@0x0) received by PID 39178 (TID 0x7fd4269a9700) from PID 0; stack trace: ***
[2m[36m(pid=39178)[0m     @     0x7fd426582390 (unknown)
[2m[36m(pid=39178)[0m     @     0x7fa526537f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39178)[0m     @     0x7fa525c627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39178)[0m     @     0x7fa525c658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39119)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39119)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39119)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39119)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39119)[0m *** SIGSEGV (@0x0) received by PID 39119 (TID 0x7f4857e28700) from PID 0; stack trace: ***
[2m[36m(pid=39119)[0m     @     0x7f4857a01390 (unknown)
[2m[36m(pid=39119)[0m     @     0x7f1957751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39119)[0m     @     0x7f1956e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39226)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39226)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39226)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39226)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39226)[0m *** SIGSEGV (@0x0) received by PID 39226 (TID 0x7f4915848700) from PID 0; stack trace: ***
[2m[36m(pid=39226)[0m     @     0x7f4915421390 (unknown)
[2m[36m(pid=39226)[0m     @     0x7f1a1539ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39226)[0m     @     0x7f1a14aca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39107)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39107)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39107)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39107)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39107)[0m *** SIGSEGV (@0x0) received by PID 39107 (TID 0x7ff0b1006700) from PID 0; stack trace: ***
[2m[36m(pid=39107)[0m     @     0x7ff0b0bdf390 (unknown)
[2m[36m(pid=39107)[0m     @     0x7fc1b0b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39107)[0m     @     0x7fc1b02667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39107)[0m     @     0x7fc1b02698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39118)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39118)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39118)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39118)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39118)[0m *** SIGSEGV (@0x0) received by PID 39118 (TID 0x7f75e3f1e700) from PID 0; stack trace: ***
[2m[36m(pid=39118)[0m     @     0x7f75e3af7390 (unknown)
[2m[36m(pid=39118)[0m     @     0x7f46e3a88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39118)[0m     @     0x7f46e31b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39158)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39158)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39158)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39158)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39158)[0m *** SIGSEGV (@0x0) received by PID 39158 (TID 0x7f2bb39b1700) from PID 0; stack trace: ***
[2m[36m(pid=39158)[0m     @     0x7f2bb358a390 (unknown)
[2m[36m(pid=39158)[0m     @     0x7efcb2c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39234)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39234)[0m *** SIGSEGV (@0x0) received by PID 39234 (TID 0x7ff339790700) from PID 0; stack trace: ***
[2m[36m(pid=39234)[0m     @     0x7ff339369390 (unknown)
[2m[36m(pid=39234)[0m     @     0x7fc4392fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39234)[0m     @     0x7fc438a277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39234)[0m     @     0x7fc438a2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39234)[0m     @     0x7fc438a2aad3 at::TensorIterator::for_each()
[2m[36m(pid=39115)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39115)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39115)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39115)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39115)[0m *** SIGSEGV (@0x0) received by PID 39115 (TID 0x7fb3c956b700) from PID 0; stack trace: ***
[2m[36m(pid=39115)[0m     @     0x7fb3c9144390 (unknown)
[2m[36m(pid=39115)[0m     @     0x7f84c90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39115)[0m     @     0x7f84c87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39175)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39175)[0m *** SIGSEGV (@0x0) received by PID 39175 (TID 0x7fec3852c700) from PID 0; stack trace: ***
[2m[36m(pid=39175)[0m     @     0x7fec38105390 (unknown)
[2m[36m(pid=39175)[0m     @     0x7fbd3801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39175)[0m     @     0x7fbd377477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39175)[0m     @     0x7fbd3774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39186)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39186)[0m *** SIGSEGV (@0x0) received by PID 39186 (TID 0x7f5cb3865700) from PID 0; stack trace: ***
[2m[36m(pid=39186)[0m     @     0x7f5cb343e390 (unknown)
[2m[36m(pid=39186)[0m     @     0x7f2db3229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39186)[0m     @     0x7f2db29547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39186)[0m     @     0x7f2db29578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39186)[0m     @     0x7f2db2957ad3 at::TensorIterator::for_each()
[2m[36m(pid=39198)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39198)[0m *** SIGSEGV (@0x0) received by PID 39198 (TID 0x7fae56bdc700) from PID 0; stack trace: ***
[2m[36m(pid=39198)[0m     @     0x7fae567b5390 (unknown)
[2m[36m(pid=39198)[0m     @     0x7f7f564f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39198)[0m     @     0x7f7f55c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39104)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39104)[0m *** SIGSEGV (@0x0) received by PID 39104 (TID 0x7f6df58f0700) from PID 0; stack trace: ***
[2m[36m(pid=39104)[0m     @     0x7f6df54c9390 (unknown)
[2m[36m(pid=39104)[0m     @     0x7f3ef5476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39104)[0m     @     0x7f3ef4ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39099)[0m *** SIGSEGV (@0x0) received by PID 39099 (TID 0x7fe9fd5e0700) from PID 0; stack trace: ***
[2m[36m(pid=39099)[0m     @     0x7fe9fd1b9390 (unknown)
[2m[36m(pid=39099)[0m     @     0x7fbafd174f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39099)[0m     @     0x7fbafc89f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39099)[0m     @     0x7fbafc8a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39099)[0m     @     0x7fbafc8a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39181)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39181)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39181)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39181)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39181)[0m *** SIGSEGV (@0x0) received by PID 39181 (TID 0x7f5c8c6a6700) from PID 0; stack trace: ***
[2m[36m(pid=39181)[0m     @     0x7f5c8c27f390 (unknown)
[2m[36m(pid=39181)[0m     @     0x7f2d8c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39181)[0m     @     0x7f2d8b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39181)[0m     @     0x7f2d8b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39165)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39165)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39165)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39165)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39165)[0m *** SIGSEGV (@0x0) received by PID 39165 (TID 0x7f5513b65700) from PID 0; stack trace: ***
[2m[36m(pid=39165)[0m     @     0x7f551373e390 (unknown)
[2m[36m(pid=39165)[0m     @     0x7f26136aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39165)[0m     @     0x7f2612dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39165)[0m     @     0x7f2612ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39100)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39100)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39100)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39100)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39100)[0m *** SIGSEGV (@0x0) received by PID 39100 (TID 0x7f3e0e139700) from PID 0; stack trace: ***
[2m[36m(pid=39100)[0m     @     0x7f3e0dd12390 (unknown)
[2m[36m(pid=39100)[0m     @     0x7f0f0dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39100)[0m     @     0x7f0f0d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39100)[0m     @     0x7f0f0d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39130)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39130)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39130)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39130)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39130)[0m *** SIGSEGV (@0x0) received by PID 39130 (TID 0x7f2955c2d700) from PID 0; stack trace: ***
[2m[36m(pid=39130)[0m     @     0x7f2955806390 (unknown)
[2m[36m(pid=39130)[0m     @     0x7efa556f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39130)[0m     @     0x7efa54e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39130)[0m     @     0x7efa54e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39170)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39170)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39170)[0m *** Aborted at 1604570864 (unix time) try "date -d @1604570864" if you are using GNU date ***
[2m[36m(pid=39170)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39170)[0m *** SIGSEGV (@0x0) received by PID 39170 (TID 0x7fa4006fe700) from PID 0; stack trace: ***
[2m[36m(pid=39170)[0m     @     0x7fa4002d7390 (unknown)
[2m[36m(pid=39170)[0m     @     0x7f74fff2ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39170)[0m     @     0x7f74ff65a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39170)[0m     @     0x7f74ff65d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39102)[0m *** SIGSEGV (@0x0) received by PID 39102 (TID 0x7f01d5008700) from PID 0; stack trace: ***
[2m[36m(pid=39102)[0m     @     0x7f01d4be1390 (unknown)
[2m[36m(pid=39102)[0m     @     0x7ed2d4b64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39102)[0m     @     0x7ed2d428f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39102)[0m     @     0x7ed2d42928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39102)[0m     @     0x7ed2d4292ad3 at::TensorIterator::for_each()
[2m[36m(pid=39200)[0m     @     0x7f363761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39200)[0m     @     0x7f3636d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39200)[0m     @     0x7f3636d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39200)[0m     @     0x7f3636d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=39174)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39174)[0m *** SIGSEGV (@0x0) received by PID 39174 (TID 0x7f4aaf40d700) from PID 0; stack trace: ***
[2m[36m(pid=39174)[0m     @     0x7f4aaefe6390 (unknown)
[2m[36m(pid=39174)[0m     @     0x7f1baef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39174)[0m     @     0x7f1bae63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39161)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39161)[0m *** SIGSEGV (@0x0) received by PID 39161 (TID 0x7f3a5b2a4700) from PID 0; stack trace: ***
[2m[36m(pid=39161)[0m     @     0x7f3a5ae7d390 (unknown)
[2m[36m(pid=39161)[0m     @     0x7f0b5ae26f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39161)[0m     @     0x7f0b5a5517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39101)[0m *** SIGSEGV (@0x0) received by PID 39101 (TID 0x7f5f700b0700) from PID 0; stack trace: ***
[2m[36m(pid=39101)[0m     @     0x7f5f6fc89390 (unknown)
[2m[36m(pid=39101)[0m     @     0x7f306f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39101)[0m     @     0x7f306f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39233)[0m     @     0x7f2cf7c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39233)[0m     @     0x7f2cf7c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=39108)[0m     @     0x7fbfa9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39108)[0m     @     0x7fbfa9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39108)[0m     @     0x7fbfa9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=39168)[0m     @     0x7ef3ff50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39168)[0m     @     0x7ef3ff50cad3 at::TensorIterator::for_each()
[2m[36m(pid=39096)[0m     @     0x7eddad347f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39096)[0m     @     0x7eddaca727db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39096)[0m     @     0x7eddaca758f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39096)[0m     @     0x7eddaca75ad3 at::TensorIterator::for_each()
[2m[36m(pid=39169)[0m *** SIGSEGV (@0x0) received by PID 39169 (TID 0x7fa425ba1700) from PID 0; stack trace: ***
[2m[36m(pid=39169)[0m     @     0x7fa42577a390 (unknown)
[2m[36m(pid=39169)[0m     @     0x7f75256f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39169)[0m     @     0x7f7524e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39169)[0m     @     0x7f7524e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39127)[0m     @     0x7fc8d4e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39127)[0m     @     0x7fc8d45a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39127)[0m     @     0x7fc8d45a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39127)[0m     @     0x7fc8d45a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=39117)[0m     @     0x7f2f7da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39117)[0m     @     0x7f2f7d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39117)[0m     @     0x7f2f7d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39117)[0m     @     0x7f2f7d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=39111)[0m     @     0x7ee72f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39111)[0m     @     0x7ee72f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39111)[0m     @     0x7ee72f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=39219)[0m     @     0x7f1b5be5f4f5 at::Tensor::copy_()
[2m[36m(pid=39219)[0m     @     0x7f1b5e3328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39219)[0m     @     0x7f1b5be5f4f5 at::Tensor::copy_()
[2m[36m(pid=39214)[0m     @     0x7f8705d544f5 at::Tensor::copy_()
[2m[36m(pid=39214)[0m     @     0x7f87082278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39214)[0m     @     0x7f8705d544f5 at::Tensor::copy_()
[2m[36m(pid=39214)[0m     @     0x7f870bdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39214)[0m     @     0x55ade50cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39214)[0m     @     0x55ade5028b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39214)[0m     @     0x55ade50b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39214)[0m     @     0x55ade50b4a20 method_vectorcall
[2m[36m(pid=39214)[0m     @     0x55ade5028bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39214)[0m     @     0x55ade50b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39214)[0m     @     0x55ade50b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39214)[0m     @     0x55ade5029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39214)[0m     @     0x55ade50b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39214)[0m     @     0x55ade50b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39214)[0m     @     0x55ade5029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39214)[0m     @     0x55ade50b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39214)[0m     @     0x55ade50b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39214)[0m     @     0x55ade5029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39214)[0m     @     0x55ade50b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39214)[0m     @     0x55ade50b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39214)[0m     @     0x55ade5029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x7f7ed6083a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39215)[0m     @     0x7f7ed6081388 at::native::copy_impl()
[2m[36m(pid=39215)[0m     @     0x7f7ed60835a4 at::native::copy_()
[2m[36m(pid=39128)[0m     @     0x7edac725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39128)[0m     @     0x7edac66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39128)[0m     @     0x7edac66fd388 at::native::copy_impl()
[2m[36m(pid=39128)[0m     @     0x7edac66ff5a4 at::native::copy_()
[2m[36m(pid=39229)[0m     @     0x7ef9936f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39229)[0m     @     0x7ef9936f7388 at::native::copy_impl()
[2m[36m(pid=39229)[0m     @     0x7ef9936f95a4 at::native::copy_()
[2m[36m(pid=39229)[0m     @     0x7ef993de44f5 at::Tensor::copy_()
[2m[36m(pid=39229)[0m     @     0x7ef9962b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39216)[0m     @     0x7f2ecf807388 at::native::copy_impl()
[2m[36m(pid=39216)[0m     @     0x7f2ecf8095a4 at::native::copy_()
[2m[36m(pid=39216)[0m     @     0x7f2ecfef44f5 at::Tensor::copy_()
[2m[36m(pid=39216)[0m     @     0x7f2ed23c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39202)[0m     @     0x7eeba66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39202)[0m     @     0x7eeba66fd388 at::native::copy_impl()
[2m[36m(pid=39202)[0m     @     0x7eeba66ff5a4 at::native::copy_()
[2m[36m(pid=39202)[0m     @     0x7eeba6dea4f5 at::Tensor::copy_()
[2m[36m(pid=39212)[0m     @     0x7effd4d274f5 at::Tensor::copy_()
[2m[36m(pid=39212)[0m     @     0x7effd71fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39212)[0m     @     0x7effd4d274f5 at::Tensor::copy_()
[2m[36m(pid=39212)[0m     @     0x7effdadd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39212)[0m     @     0x55b3c4dbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39212)[0m     @     0x55b3c4d1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39212)[0m     @     0x55b3c4da5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39212)[0m     @     0x55b3c4da6a20 method_vectorcall
[2m[36m(pid=39212)[0m     @     0x55b3c4d1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39212)[0m     @     0x55b3c4da5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39212)[0m     @     0x55b3c4da6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39212)[0m     @     0x55b3c4d1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39212)[0m     @     0x55b3c4da5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39212)[0m     @     0x55b3c4da6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39212)[0m     @     0x55b3c4d1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39212)[0m     @     0x55b3c4da5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39212)[0m     @     0x55b3c4da6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39212)[0m     @     0x55b3c4d1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39212)[0m     @     0x55b3c4da5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39212)[0m     @     0x55b3c4da6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39212)[0m     @     0x55b3c4d1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x7f41f5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39129)[0m     @     0x7f41f560e388 at::native::copy_impl()
[2m[36m(pid=39129)[0m     @     0x7f41f56105a4 at::native::copy_()
[2m[36m(pid=39129)[0m     @     0x7f41f5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39190)[0m     @     0x7f37909f84f5 at::Tensor::copy_()
[2m[36m(pid=39190)[0m     @     0x7f3792ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39190)[0m     @     0x7f37909f84f5 at::Tensor::copy_()
[2m[36m(pid=39190)[0m     @     0x7f3796aa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39190)[0m     @     0x5622c0778fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39190)[0m     @     0x5622c06d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39190)[0m     @     0x5622c075ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39190)[0m     @     0x5622c075fa20 method_vectorcall
[2m[36m(pid=39190)[0m     @     0x5622c06d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39190)[0m     @     0x5622c075ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39190)[0m     @     0x5622c075f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39190)[0m     @     0x5622c06d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39190)[0m     @     0x5622c075ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39190)[0m     @     0x5622c075f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39190)[0m     @     0x5622c06d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39190)[0m     @     0x5622c075ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39190)[0m     @     0x5622c075f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39190)[0m     @     0x5622c06d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39190)[0m     @     0x5622c075ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39190)[0m     @     0x5622c075f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39190)[0m     @     0x5622c06d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x7fa6fe3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39120)[0m     @     0x7fa6fe398ad3 at::TensorIterator::for_each()
[2m[36m(pid=39120)[0m     @     0x7fa6fe398d91 at::TensorIterator::for_each()
[2m[36m(pid=39120)[0m     @     0x7fa6fec7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39120)[0m     @     0x7fa6fec9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39097)[0m     @     0x7ed07a6924f5 at::Tensor::copy_()
[2m[36m(pid=39097)[0m     @     0x7ed07cb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39097)[0m     @     0x7ed07a6924f5 at::Tensor::copy_()
[2m[36m(pid=39097)[0m     @     0x7ed08073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39097)[0m     @     0x559ca0c91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39097)[0m     @     0x559ca0becb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39097)[0m     @     0x559ca0c77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39097)[0m     @     0x559ca0c78a20 method_vectorcall
[2m[36m(pid=39097)[0m     @     0x559ca0becbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39097)[0m     @     0x559ca0c77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39097)[0m     @     0x559ca0c78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39097)[0m     @     0x559ca0bed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39097)[0m     @     0x559ca0c77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39097)[0m     @     0x559ca0c78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39097)[0m     @     0x559ca0bed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39097)[0m     @     0x559ca0c77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39097)[0m     @     0x559ca0c78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39097)[0m     @     0x559ca0bed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39097)[0m     @     0x559ca0c77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39097)[0m     @     0x559ca0c78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39097)[0m     @     0x559ca0bed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x7f9d98d258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39103)[0m     @     0x7f9d98d25ad3 at::TensorIterator::for_each()
[2m[36m(pid=39103)[0m     @     0x7f9d98d25d91 at::TensorIterator::for_each()
[2m[36m(pid=39103)[0m     @     0x7f9d99608b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39103)[0m     @     0x7f9d9962bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39124)[0m     @     0x7fc4e5a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39124)[0m     @     0x7fc4e5a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=39124)[0m     @     0x7fc4e5a93d91 at::TensorIterator::for_each()
[2m[36m(pid=39124)[0m     @     0x7fc4e6376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39124)[0m     @     0x7fc4e6399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39114)[0m     @     0x7fa1547e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39114)[0m     @     0x7fa1547e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39114)[0m     @     0x7fa1547e3d91 at::TensorIterator::for_each()
[2m[36m(pid=39114)[0m     @     0x7fa1550c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39192)[0m     @     0x7f857663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39192)[0m     @     0x7f85766418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39192)[0m     @     0x7f8576641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39192)[0m     @     0x7f8576641d91 at::TensorIterator::for_each()
[2m[36m(pid=39113)[0m     @     0x7f7dd7bb1390 (unknown)
[2m[36m(pid=39113)[0m     @     0x7f4ed79c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39113)[0m     @     0x7f4ed70f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39113)[0m     @     0x7f4ed70f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39113)[0m     @     0x7f4ed70f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39164)[0m     @     0x7f7c18fe5390 (unknown)
[2m[36m(pid=39164)[0m     @     0x7f4d18ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39164)[0m     @     0x7f4d185cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39164)[0m     @     0x7f4d185d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39177)[0m     @     0x7f615b9c8390 (unknown)
[2m[36m(pid=39177)[0m     @     0x7f325b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39177)[0m     @     0x7f325b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39177)[0m     @     0x7f325b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39173)[0m     @     0x7eff74fae390 (unknown)
[2m[36m(pid=39173)[0m     @     0x7ed074ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39173)[0m     @     0x7ed0745cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39173)[0m     @     0x7ed0745d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39098)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39098)[0m *** SIGSEGV (@0x0) received by PID 39098 (TID 0x7f564ff08700) from PID 0; stack trace: ***
[2m[36m(pid=39098)[0m     @     0x7f564fae1390 (unknown)
[2m[36m(pid=39098)[0m     @     0x7f274f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39098)[0m     @     0x7f274f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39209)[0m     @     0x7f53483354f5 at::Tensor::copy_()
[2m[36m(pid=39209)[0m     @     0x7f534a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39209)[0m     @     0x7f53483354f5 at::Tensor::copy_()
[2m[36m(pid=39209)[0m     @     0x7f534e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39209)[0m     @     0x561c5d46afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39209)[0m     @     0x561c5d3c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39209)[0m     @     0x561c5d450baf _PyEval_EvalCodeWithName
[2m[36m(pid=39209)[0m     @     0x561c5d451a20 method_vectorcall
[2m[36m(pid=39209)[0m     @     0x561c5d3c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39209)[0m     @     0x561c5d450baf _PyEval_EvalCodeWithName
[2m[36m(pid=39209)[0m     @     0x561c5d451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39209)[0m     @     0x561c5d3c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39209)[0m     @     0x561c5d450baf _PyEval_EvalCodeWithName
[2m[36m(pid=39209)[0m     @     0x561c5d451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39209)[0m     @     0x561c5d3c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39209)[0m     @     0x561c5d450baf _PyEval_EvalCodeWithName
[2m[36m(pid=39209)[0m     @     0x561c5d451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39209)[0m     @     0x561c5d3c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39209)[0m     @     0x561c5d450baf _PyEval_EvalCodeWithName
[2m[36m(pid=39209)[0m     @     0x561c5d451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39209)[0m     @     0x561c5d3c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x7fc8abde7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39167)[0m     @     0x7fc8abde5388 at::native::copy_impl()
[2m[36m(pid=39167)[0m     @     0x7fc8abde75a4 at::native::copy_()
[2m[36m(pid=39167)[0m     @     0x7fc8ac4d24f5 at::Tensor::copy_()
[2m[36m(pid=39116)[0m     @     0x7fa509f755a4 at::native::copy_()
[2m[36m(pid=39116)[0m     @     0x7fa50a6604f5 at::Tensor::copy_()
[2m[36m(pid=39116)[0m     @     0x7fa50cb338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39116)[0m     @     0x7fa50a6604f5 at::Tensor::copy_()
[2m[36m(pid=39184)[0m     @     0x7fc54c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39184)[0m     @     0x7fc54a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39184)[0m     @     0x7fc55016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39184)[0m     @     0x560fd6ee8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39184)[0m     @     0x560fd6e43b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39184)[0m     @     0x560fd6ecebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39184)[0m     @     0x560fd6ecfa20 method_vectorcall
[2m[36m(pid=39184)[0m     @     0x560fd6e43bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39184)[0m     @     0x560fd6ecebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39184)[0m     @     0x560fd6ecf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39184)[0m     @     0x560fd6e44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39184)[0m     @     0x560fd6ecebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39184)[0m     @     0x560fd6ecf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39184)[0m     @     0x560fd6e44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39184)[0m     @     0x560fd6ecebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39184)[0m     @     0x560fd6ecf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39184)[0m     @     0x560fd6e44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39184)[0m     @     0x560fd6ecebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39184)[0m     @     0x560fd6ecf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39184)[0m     @     0x560fd6e44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x7efa4193d5a4 at::native::copy_()
[2m[36m(pid=39126)[0m     @     0x7efa420284f5 at::Tensor::copy_()
[2m[36m(pid=39126)[0m     @     0x7efa444fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39126)[0m     @     0x7efa420284f5 at::Tensor::copy_()
[2m[36m(pid=39126)[0m     @     0x7efa480d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39126)[0m     @     0x56196778efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39126)[0m     @     0x5619676e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x561967774baf _PyEval_EvalCodeWithName
[2m[36m(pid=39126)[0m     @     0x561967775a20 method_vectorcall
[2m[36m(pid=39126)[0m     @     0x5619676e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x561967774baf _PyEval_EvalCodeWithName
[2m[36m(pid=39126)[0m     @     0x561967775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39172)[0m     @     0x7f4495cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39172)[0m     @     0x7f44981ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39172)[0m     @     0x7f4495cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39172)[0m     @     0x7f449bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39172)[0m     @     0x55d6bbb75fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39172)[0m     @     0x55d6bbad0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39172)[0m     @     0x55d6bbb5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39172)[0m     @     0x55d6bbb5ca20 method_vectorcall
[2m[36m(pid=39172)[0m     @     0x55d6bbad0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39172)[0m     @     0x55d6bbb5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39172)[0m     @     0x55d6bbb5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39172)[0m     @     0x55d6bbad1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39172)[0m     @     0x55d6bbb5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39172)[0m     @     0x55d6bbb5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39172)[0m     @     0x55d6bbad1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39172)[0m     @     0x55d6bbb5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39172)[0m     @     0x55d6bbb5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39172)[0m     @     0x55d6bbad1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39172)[0m     @     0x55d6bbb5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39172)[0m     @     0x55d6bbb5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39172)[0m     @     0x55d6bbad1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x7f79bb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=39207)[0m     @     0x7f79bde9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39207)[0m     @     0x7f79bb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=39207)[0m     @     0x7f79c1a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39207)[0m     @     0x564e4e1c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39207)[0m     @     0x564e4e11bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x564e4e1a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39207)[0m     @     0x564e4e1a7a20 method_vectorcall
[2m[36m(pid=39207)[0m     @     0x564e4e11bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x564e4e1a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39207)[0m     @     0x564e4e1a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39207)[0m     @     0x564e4e11c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x564e4e1a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39207)[0m     @     0x564e4e1a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39207)[0m     @     0x564e4e11c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x564e4e1a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39207)[0m     @     0x564e4e1a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39207)[0m     @     0x564e4e11c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39207)[0m     @     0x564e4e1a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39207)[0m     @     0x564e4e1a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39207)[0m     @     0x564e4e11c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x7f2c5dbff5a4 at::native::copy_()
[2m[36m(pid=39171)[0m     @     0x7f2c5e2ea4f5 at::Tensor::copy_()
[2m[36m(pid=39171)[0m     @     0x7f2c607bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39171)[0m     @     0x7f2c5e2ea4f5 at::Tensor::copy_()
[2m[36m(pid=39171)[0m     @     0x7f2c6439579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39171)[0m     @     0x55d68abc8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39171)[0m     @     0x55d68ab23b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39171)[0m     @     0x55d68abafa20 method_vectorcall
[2m[36m(pid=39171)[0m     @     0x55d68ab23bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39171)[0m     @     0x55d68abaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39171)[0m     @     0x55d68ab24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x7f75d12b54f5 at::Tensor::copy_()
[2m[36m(pid=39221)[0m     @     0x7f75d37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39221)[0m     @     0x7f75d12b54f5 at::Tensor::copy_()
[2m[36m(pid=39105)[0m     @     0x7f20816bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39105)[0m     @     0x7f20816bbad3 at::TensorIterator::for_each()
[2m[36m(pid=39105)[0m     @     0x7f20816bbd91 at::TensorIterator::for_each()
[2m[36m(pid=39105)[0m     @     0x7f2081f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39105)[0m     @     0x7f2081fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39162)[0m     @     0x7f7048ccf5a4 at::native::copy_()
[2m[36m(pid=39162)[0m     @     0x7f70493ba4f5 at::Tensor::copy_()
[2m[36m(pid=39162)[0m     @     0x7f704b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39162)[0m     @     0x7f70493ba4f5 at::Tensor::copy_()
[2m[36m(pid=39162)[0m     @     0x7f704f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39162)[0m     @     0x55d1442cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39224)[0m     @     0x7fcb36db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39224)[0m     @     0x7fcb36db2388 at::native::copy_impl()
[2m[36m(pid=39224)[0m     @     0x7fcb36db45a4 at::native::copy_()
[2m[36m(pid=39224)[0m     @     0x7fcb3749f4f5 at::Tensor::copy_()
[2m[36m(pid=39224)[0m     @     0x7fcb399728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39203)[0m     @     0x7f47d7c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=39203)[0m     @     0x7f47d7c91d91 at::TensorIterator::for_each()
[2m[36m(pid=39203)[0m     @     0x7f47d8574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39203)[0m     @     0x7f47d8597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39176)[0m     @     0x7f8a145d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39176)[0m     @     0x7f8a145d2d91 at::TensorIterator::for_each()
[2m[36m(pid=39176)[0m     @     0x7f8a14eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39176)[0m     @     0x7f8a14ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39183)[0m     @     0x7f2562ed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=39183)[0m     @     0x7f2562ed7d91 at::TensorIterator::for_each()
[2m[36m(pid=39183)[0m     @     0x7f25637bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39183)[0m     @     0x7f25637ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39183)[0m     @     0x7f2562c7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39187)[0m     @     0x7f3fb1d544f5 at::Tensor::copy_()
[2m[36m(pid=39187)[0m     @     0x7f3fb42278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39187)[0m     @     0x7f3fb1d544f5 at::Tensor::copy_()
[2m[36m(pid=39187)[0m     @     0x7f3fb7dff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39187)[0m     @     0x55fa0abc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39187)[0m     @     0x55fa0ab1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39187)[0m     @     0x55fa0aba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=39187)[0m     @     0x55fa0aba9a20 method_vectorcall
[2m[36m(pid=39187)[0m     @     0x55fa0ab1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39187)[0m     @     0x55fa0aba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=39187)[0m     @     0x55fa0aba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39187)[0m     @     0x55fa0ab1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39187)[0m     @     0x55fa0aba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=39187)[0m     @     0x55fa0aba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39187)[0m     @     0x55fa0ab1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39187)[0m     @     0x55fa0aba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=39187)[0m     @     0x55fa0aba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39187)[0m     @     0x55fa0ab1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39187)[0m     @     0x55fa0aba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=39187)[0m     @     0x55fa0aba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39187)[0m     @     0x55fa0ab1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x7f4e36b82388 at::native::copy_impl()
[2m[36m(pid=39179)[0m     @     0x7f4e36b845a4 at::native::copy_()
[2m[36m(pid=39179)[0m     @     0x7f4e3726f4f5 at::Tensor::copy_()
[2m[36m(pid=39179)[0m     @     0x7f4e397428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39112)[0m     @     0x7f6afe5cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39112)[0m     @     0x7f6afe5cb388 at::native::copy_impl()
[2m[36m(pid=39112)[0m     @     0x7f6afe5cd5a4 at::native::copy_()
[2m[36m(pid=39112)[0m     @     0x7f6afecb84f5 at::Tensor::copy_()
[2m[36m(pid=39196)[0m     @     0x7f4ebb49f4f5 at::Tensor::copy_()
[2m[36m(pid=39196)[0m     @     0x7f4ebd9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39196)[0m     @     0x7f4ebb49f4f5 at::Tensor::copy_()
[2m[36m(pid=39196)[0m     @     0x7f4ec154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39196)[0m     @     0x55ab503c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39196)[0m     @     0x55ab50322b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39196)[0m     @     0x55ab503adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39196)[0m     @     0x55ab503aea20 method_vectorcall
[2m[36m(pid=39196)[0m     @     0x55ab50322bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39196)[0m     @     0x55ab503adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39196)[0m     @     0x55ab503ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39196)[0m     @     0x55ab50323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39196)[0m     @     0x55ab503adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39196)[0m     @     0x55ab503ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39196)[0m     @     0x55ab50323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39196)[0m     @     0x55ab503adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39196)[0m     @     0x55ab503ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39196)[0m     @     0x55ab50323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39196)[0m     @     0x55ab503adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39196)[0m     @     0x55ab503ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39196)[0m     @     0x55ab50323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x7f2fa95cb4f5 at::Tensor::copy_()
[2m[36m(pid=39223)[0m     @     0x7f2faba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39223)[0m     @     0x7f2fa95cb4f5 at::Tensor::copy_()
[2m[36m(pid=39223)[0m     @     0x7f2faf67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39223)[0m     @     0x56547ab54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39223)[0m     @     0x56547aaafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x56547ab3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39223)[0m     @     0x56547ab3ba20 method_vectorcall
[2m[36m(pid=39223)[0m     @     0x56547aaafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x56547ab3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39223)[0m     @     0x56547ab3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39223)[0m     @     0x56547aab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x56547ab3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39223)[0m     @     0x56547ab3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39223)[0m     @     0x56547aab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x56547ab3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39223)[0m     @     0x56547ab3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39223)[0m     @     0x56547aab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39223)[0m     @     0x56547ab3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39223)[0m     @     0x56547ab3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39223)[0m     @     0x56547aab0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x7f9b44b5d5a4 at::native::copy_()
[2m[36m(pid=39163)[0m     @     0x7f9b452484f5 at::Tensor::copy_()
[2m[36m(pid=39163)[0m     @     0x7f9b4771b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39191)[0m     @     0x7f66c34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39191)[0m     @     0x7f66c34f0388 at::native::copy_impl()
[2m[36m(pid=39191)[0m     @     0x7f66c34f25a4 at::native::copy_()
[2m[36m(pid=39191)[0m     @     0x7f66c3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=39191)[0m     @     0x7f66c60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39122)[0m     @     0x7f96ce852d91 at::TensorIterator::for_each()
[2m[36m(pid=39122)[0m     @     0x7f96cf135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39122)[0m     @     0x7f96cf158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39122)[0m     @     0x7f96ce5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39122)[0m     @     0x7f96ce5f8388 at::native::copy_impl()
[2m[36m(pid=39122)[0m     @     0x7f96ce5fa5a4 at::native::copy_()
[2m[36m(pid=39110)[0m     @     0x7f44d4953ad3 at::TensorIterator::for_each()
[2m[36m(pid=39110)[0m     @     0x7f44d4953d91 at::TensorIterator::for_each()
[2m[36m(pid=39110)[0m     @     0x7f44d5236b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39110)[0m     @     0x7f44d5259c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39110)[0m     @     0x7f44d46fba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39194)[0m     @     0x7fa3efcfb5a4 at::native::copy_()
[2m[36m(pid=39194)[0m     @     0x7fa3f03e64f5 at::Tensor::copy_()
[2m[36m(pid=39194)[0m     @     0x7fa3f28b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39194)[0m     @     0x7fa3f03e64f5 at::Tensor::copy_()
[2m[36m(pid=39194)[0m     @     0x7fa3f649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39194)[0m     @     0x561d88483fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39194)[0m     @     0x561d883deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39194)[0m     @     0x561d88469baf _PyEval_EvalCodeWithName
[2m[36m(pid=39194)[0m     @     0x561d8846aa20 method_vectorcall
[2m[36m(pid=39194)[0m     @     0x561d883debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x7f77f6a117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39166)[0m     @     0x7f77f6a148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39166)[0m     @     0x7f77f6a14ad3 at::TensorIterator::for_each()
[2m[36m(pid=39188)[0m     @     0x7f843d733ad3 at::TensorIterator::for_each()
[2m[36m(pid=39188)[0m     @     0x7f843d733d91 at::TensorIterator::for_each()
[2m[36m(pid=39178)[0m     @     0x7fa525c65ad3 at::TensorIterator::for_each()
[2m[36m(pid=39178)[0m     @     0x7fa525c65d91 at::TensorIterator::for_each()
[2m[36m(pid=39178)[0m     @     0x7fa526548b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39178)[0m     @     0x7fa52656bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39119)[0m     @     0x7f1956e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39119)[0m     @     0x7f1956e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=39226)[0m     @     0x7f1a14acd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39226)[0m     @     0x7f1a14acdad3 at::TensorIterator::for_each()
[2m[36m(pid=39107)[0m     @     0x7fc1b0269ad3 at::TensorIterator::for_each()
[2m[36m(pid=39107)[0m     @     0x7fc1b0269d91 at::TensorIterator::for_each()
[2m[36m(pid=39107)[0m     @     0x7fc1b0b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39118)[0m     @     0x7f46e31b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39118)[0m     @     0x7f46e31b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=39158)[0m     @     0x7efcb23407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39158)[0m     @     0x7efcb23438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39234)[0m     @     0x7fc438a2ad91 at::TensorIterator::for_each()
[2m[36m(pid=39234)[0m     @     0x7fc43930db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39234)[0m     @     0x7fc439330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39115)[0m     @     0x7f84c87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39115)[0m     @     0x7f84c87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39175)[0m     @     0x7fbd3774aad3 at::TensorIterator::for_each()
[2m[36m(pid=39175)[0m     @     0x7fbd3774ad91 at::TensorIterator::for_each()
[2m[36m(pid=39175)[0m     @     0x7fbd3802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39175)[0m     @     0x7fbd38050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39186)[0m     @     0x7f2db2957d91 at::TensorIterator::for_each()
[2m[36m(pid=39186)[0m     @     0x7f2db323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39186)[0m     @     0x7f2db325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39186)[0m     @     0x7f2db26ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39186)[0m     @     0x7f2db26fd388 at::native::copy_impl()
[2m[36m(pid=39198)[0m     @     0x7f7f55c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39198)[0m     @     0x7f7f55c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39198)[0m     @     0x7f7f55c27d91 at::TensorIterator::for_each()
[2m[36m(pid=39198)[0m     @     0x7f7f5650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39104)[0m     @     0x7f3ef4ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39104)[0m     @     0x7f3ef4ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=39104)[0m     @     0x7f3ef4ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=39104)[0m     @     0x7f3ef5487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39104)[0m     @     0x7f3ef54aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39099)[0m     @     0x7fbafc8a2d91 at::TensorIterator::for_each()
[2m[36m(pid=39099)[0m     @     0x7fbafd185b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39099)[0m     @     0x7fbafd1a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39099)[0m     @     0x7fbafc64aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39099)[0m     @     0x7fbafc648388 at::native::copy_impl()
[2m[36m(pid=39181)[0m     @     0x7f2d8b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=39181)[0m     @     0x7f2d8b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=39181)[0m     @     0x7f2d8c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39181)[0m     @     0x7f2d8c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39165)[0m     @     0x7f2612ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=39165)[0m     @     0x7f2612ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=39165)[0m     @     0x7f26136bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39100)[0m     @     0x7f0f0d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=39100)[0m     @     0x7f0f0d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=39100)[0m     @     0x7f0f0dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39100)[0m     @     0x7f0f0dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39100)[0m     @     0x7f0f0d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39100)[0m     @     0x7f0f0d0e1388 at::native::copy_impl()
[2m[36m(pid=39130)[0m     @     0x7efa54e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=39130)[0m     @     0x7efa54e22d91 at::TensorIterator::for_each()
[2m[36m(pid=39130)[0m     @     0x7efa55705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39130)[0m     @     0x7efa55728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39130)[0m     @     0x7efa54bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39170)[0m     @     0x7f74ff65dad3 at::TensorIterator::for_each()
[2m[36m(pid=39170)[0m     @     0x7f74ff65dd91 at::TensorIterator::for_each()
[2m[36m(pid=39170)[0m     @     0x7f74fff40b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39170)[0m     @     0x7f74fff63c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39170)[0m     @     0x7f74ff405a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39102)[0m     @     0x7ed2d4292d91 at::TensorIterator::for_each()
[2m[36m(pid=39102)[0m     @     0x7ed2d4b75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39102)[0m     @     0x7ed2d4b98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39102)[0m     @     0x7ed2d403aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39102)[0m     @     0x7ed2d4038388 at::native::copy_impl()
[2m[36m(pid=39200)[0m     @     0x7f3636d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=39200)[0m     @     0x7f3637630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39200)[0m     @     0x7f3637653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39200)[0m     @     0x7f3636af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39200)[0m     @     0x7f3636af3388 at::native::copy_impl()
[2m[36m(pid=39200)[0m     @     0x7f3636af55a4 at::native::copy_()
[2m[36m(pid=39174)[0m     @     0x7f1bae6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39174)[0m     @     0x7f1bae641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39174)[0m     @     0x7f1bae641d91 at::TensorIterator::for_each()
[2m[36m(pid=39174)[0m     @     0x7f1baef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39174)[0m     @     0x7f1baef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39161)[0m     @     0x7f0b5a5548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39161)[0m     @     0x7f0b5a554ad3 at::TensorIterator::for_each()
[2m[36m(pid=39161)[0m     @     0x7f0b5a554d91 at::TensorIterator::for_each()
[2m[36m(pid=39161)[0m     @     0x7f0b5ae37b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39161)[0m     @     0x7f0b5ae5ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39101)[0m     @     0x7f306f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39101)[0m     @     0x7f306f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39101)[0m     @     0x7f306f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=39233)[0m     @     0x7f2cf7c91d91 at::TensorIterator::for_each()
[2m[36m(pid=39233)[0m     @     0x7f2cf8574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39233)[0m     @     0x7f2cf8597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39233)[0m     @     0x7f2cf7a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39233)[0m     @     0x7f2cf7a37388 at::native::copy_impl()
[2m[36m(pid=39233)[0m     @     0x7f2cf7a395a4 at::native::copy_()
[2m[36m(pid=39108)[0m     @     0x7fbfa9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=39108)[0m     @     0x7fbfaa35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39108)[0m     @     0x7fbfaa37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39108)[0m     @     0x7fbfa9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39108)[0m     @     0x7fbfa981f388 at::native::copy_impl()
[2m[36m(pid=39168)[0m     @     0x7ef3ff50cd91 at::TensorIterator::for_each()
[2m[36m(pid=39168)[0m     @     0x7ef3ffdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39168)[0m     @     0x7ef3ffe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39168)[0m     @     0x7ef3ff2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39168)[0m     @     0x7ef3ff2b2388 at::native::copy_impl()
[2m[36m(pid=39168)[0m     @     0x7ef3ff2b45a4 at::native::copy_()
[2m[36m(pid=39096)[0m     @     0x7eddaca75d91 at::TensorIterator::for_each()
[2m[36m(pid=39096)[0m     @     0x7eddad358b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39096)[0m     @     0x7eddad37bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39096)[0m     @     0x7eddac81da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39096)[0m     @     0x7eddac81b388 at::native::copy_impl()
[2m[36m(pid=39169)[0m     @     0x7f7524e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=39169)[0m     @     0x7f7524e22d91 at::TensorIterator::for_each()
[2m[36m(pid=39169)[0m     @     0x7f7525705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39169)[0m     @     0x7f7525728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39127)[0m     @     0x7fc8d45a5d91 at::TensorIterator::for_each()
[2m[36m(pid=39127)[0m     @     0x7fc8d4e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39127)[0m     @     0x7fc8d4eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39127)[0m     @     0x7fc8d434da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39127)[0m     @     0x7fc8d434b388 at::native::copy_impl()
[2m[36m(pid=39117)[0m     @     0x7f2f7d138d91 at::TensorIterator::for_each()
[2m[36m(pid=39117)[0m     @     0x7f2f7da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39117)[0m     @     0x7f2f7da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39117)[0m     @     0x7f2f7cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39117)[0m     @     0x7f2f7cede388 at::native::copy_impl()
[2m[36m(pid=39111)[0m     @     0x7ee72f539d91 at::TensorIterator::for_each()
[2m[36m(pid=39111)[0m     @     0x7ee72fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39111)[0m     @     0x7ee72fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39111)[0m     @     0x7ee72f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39111)[0m     @     0x7ee72f2df388 at::native::copy_impl()
[2m[36m(pid=39111)[0m     @     0x7ee72f2e15a4 at::native::copy_()
[2m[36m(pid=39219)[0m     @     0x7f1b61f0a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39219)[0m     @     0x5598ca474fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39219)[0m     @     0x5598ca3cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39219)[0m     @     0x5598ca45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39219)[0m     @     0x5598ca45ba20 method_vectorcall
[2m[36m(pid=39219)[0m     @     0x5598ca3cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39219)[0m     @     0x5598ca45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39219)[0m     @     0x5598ca45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39219)[0m     @     0x5598ca3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39219)[0m     @     0x5598ca45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39219)[0m     @     0x5598ca45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39219)[0m     @     0x5598ca3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39219)[0m     @     0x5598ca45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39219)[0m     @     0x5598ca45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39219)[0m     @     0x5598ca3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39219)[0m     @     0x5598ca45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39219)[0m     @     0x5598ca45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39219)[0m     @     0x5598ca3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x7f7ed676e4f5 at::Tensor::copy_()
[2m[36m(pid=39215)[0m     @     0x7f7ed8c418de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39215)[0m     @     0x7f7ed676e4f5 at::Tensor::copy_()
[2m[36m(pid=39215)[0m     @     0x7f7edc81979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39215)[0m     @     0x55bbf2fedfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39215)[0m     @     0x55bbf2f48b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x55bbf2fd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39215)[0m     @     0x55bbf2fd4a20 method_vectorcall
[2m[36m(pid=39215)[0m     @     0x55bbf2f48bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x55bbf2fd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39215)[0m     @     0x55bbf2fd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39215)[0m     @     0x55bbf2f49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x55bbf2fd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39215)[0m     @     0x55bbf2fd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39215)[0m     @     0x55bbf2f49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x55bbf2fd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39215)[0m     @     0x55bbf2fd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39215)[0m     @     0x55bbf2f49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39215)[0m     @     0x55bbf2fd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39215)[0m     @     0x55bbf2fd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39215)[0m     @     0x55bbf2f49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x7edac6dea4f5 at::Tensor::copy_()
[2m[36m(pid=39128)[0m     @     0x7edac92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39128)[0m     @     0x7edac6dea4f5 at::Tensor::copy_()
[2m[36m(pid=39128)[0m     @     0x7edacce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39128)[0m     @     0x55a0ed30afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39128)[0m     @     0x55a0ed265b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x55a0ed2f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39128)[0m     @     0x55a0ed2f1a20 method_vectorcall
[2m[36m(pid=39128)[0m     @     0x55a0ed265bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x55a0ed2f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39128)[0m     @     0x55a0ed2f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39128)[0m     @     0x55a0ed266689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x55a0ed2f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39128)[0m     @     0x55a0ed2f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39128)[0m     @     0x55a0ed266689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x55a0ed2f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39128)[0m     @     0x55a0ed2f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39128)[0m     @     0x55a0ed266689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39128)[0m     @     0x55a0ed2f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x7ef993de44f5 at::Tensor::copy_()
[2m[36m(pid=39229)[0m     @     0x7ef999e8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39229)[0m     @     0x5634907e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39229)[0m     @     0x56349073fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39229)[0m     @     0x5634907cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x5634907cba20 method_vectorcall
[2m[36m(pid=39229)[0m     @     0x56349073fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39229)[0m     @     0x5634907cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x5634907cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39229)[0m     @     0x563490740689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39229)[0m     @     0x5634907cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x5634907cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39229)[0m     @     0x563490740689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39229)[0m     @     0x5634907cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x5634907cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39229)[0m     @     0x563490740689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39229)[0m     @     0x5634907cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39229)[0m     @     0x5634907cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39229)[0m     @     0x563490740689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x7f2ecfef44f5 at::Tensor::copy_()
[2m[36m(pid=39216)[0m     @     0x7f2ed5f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39216)[0m     @     0x562a3de83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39216)[0m     @     0x562a3dddeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x562a3de69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39216)[0m     @     0x562a3de6aa20 method_vectorcall
[2m[36m(pid=39216)[0m     @     0x562a3dddebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x562a3de69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39216)[0m     @     0x562a3de6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39216)[0m     @     0x562a3dddf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x562a3de69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39216)[0m     @     0x562a3de6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39216)[0m     @     0x562a3dddf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x562a3de69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39216)[0m     @     0x562a3de6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39216)[0m     @     0x562a3dddf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39216)[0m     @     0x562a3de69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39216)[0m     @     0x562a3de6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39216)[0m     @     0x562a3dddf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x7eeba92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39202)[0m     @     0x7eeba6dea4f5 at::Tensor::copy_()
[2m[36m(pid=39202)[0m     @     0x7eebace9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39202)[0m     @     0x556ddc010fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39202)[0m     @     0x556ddbf6bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x556ddbff6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39202)[0m     @     0x556ddbff7a20 method_vectorcall
[2m[36m(pid=39202)[0m     @     0x556ddbf6bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x556ddbff6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39202)[0m     @     0x556ddbff7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39202)[0m     @     0x556ddbf6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x556ddbff6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39202)[0m     @     0x556ddbff7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39202)[0m     @     0x556ddbf6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x556ddbff6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39202)[0m     @     0x556ddbff7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39202)[0m     @     0x556ddbf6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39202)[0m     @     0x556ddbff6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39202)[0m     @     0x556ddbff7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39202)[0m     @     0x556ddbf6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x7f41f81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39129)[0m     @     0x7f41f5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39129)[0m     @     0x7f41fbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39129)[0m     @     0x55aa5ebe5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39129)[0m     @     0x55aa5eb40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x55aa5ebcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39129)[0m     @     0x55aa5ebcca20 method_vectorcall
[2m[36m(pid=39129)[0m     @     0x55aa5eb40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x55aa5ebcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39129)[0m     @     0x55aa5ebcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39129)[0m     @     0x55aa5eb41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x55aa5ebcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39129)[0m     @     0x55aa5ebcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39129)[0m     @     0x55aa5eb41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x55aa5ebcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39129)[0m     @     0x55aa5ebcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39129)[0m     @     0x55aa5eb41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39129)[0m     @     0x55aa5ebcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39129)[0m     @     0x55aa5ebcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39129)[0m     @     0x55aa5eb41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x7fa6fe140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39120)[0m     @     0x7fa6fe13e388 at::native::copy_impl()
[2m[36m(pid=39120)[0m     @     0x7fa6fe1405a4 at::native::copy_()
[2m[36m(pid=39103)[0m     @     0x7f9d98acda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39103)[0m     @     0x7f9d98acb388 at::native::copy_impl()
[2m[36m(pid=39103)[0m     @     0x7f9d98acd5a4 at::native::copy_()
[2m[36m(pid=39124)[0m     @     0x7fc4e583ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39124)[0m     @     0x7fc4e5839388 at::native::copy_impl()
[2m[36m(pid=39124)[0m     @     0x7fc4e583b5a4 at::native::copy_()
[2m[36m(pid=39114)[0m     @     0x7fa1550e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39114)[0m     @     0x7fa15458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39114)[0m     @     0x7fa154589388 at::native::copy_impl()
[2m[36m(pid=39114)[0m     @     0x7fa15458b5a4 at::native::copy_()
[2m[36m(pid=39192)[0m     @     0x7f8576f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39192)[0m     @     0x7f8576f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39192)[0m     @     0x7f85763e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39192)[0m     @     0x7f85763e7388 at::native::copy_impl()
[2m[36m(pid=39113)[0m     @     0x7f4ed70f3d91 at::TensorIterator::for_each()
[2m[36m(pid=39113)[0m     @     0x7f4ed79d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39113)[0m     @     0x7f4ed79f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39113)[0m     @     0x7f4ed6e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39113)[0m     @     0x7f4ed6e99388 at::native::copy_impl()
[2m[36m(pid=39164)[0m     @     0x7f4d185d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39164)[0m     @     0x7f4d185d2d91 at::TensorIterator::for_each()
[2m[36m(pid=39164)[0m     @     0x7f4d18eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39164)[0m     @     0x7f4d18ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39177)[0m     @     0x7f325b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=39177)[0m     @     0x7f325b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=39177)[0m     @     0x7f325b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39173)[0m     @     0x7ed0745d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39173)[0m     @     0x7ed0745d2d91 at::TensorIterator::for_each()
[2m[36m(pid=39173)[0m     @     0x7ed074eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39173)[0m     @     0x7ed074ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39098)[0m     @     0x7f274f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39167)[0m     @     0x7fc8ae9a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39167)[0m     @     0x7fc8ac4d24f5 at::Tensor::copy_()
[2m[36m(pid=39167)[0m     @     0x7fc8b257d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39167)[0m     @     0x55d7775f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39167)[0m     @     0x55d77754bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x55d7775d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39167)[0m     @     0x55d7775d7a20 method_vectorcall
[2m[36m(pid=39167)[0m     @     0x55d77754bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x55d7775d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39167)[0m     @     0x55d7775d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39167)[0m     @     0x55d77754c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x55d7775d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39167)[0m     @     0x55d7775d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39167)[0m     @     0x55d77754c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x55d7775d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39167)[0m     @     0x55d7775d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39167)[0m     @     0x55d77754c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39167)[0m     @     0x55d7775d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39167)[0m     @     0x55d7775d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39167)[0m     @     0x55d77754c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x7fa51070b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39116)[0m     @     0x562fcc9a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39116)[0m     @     0x562fcc904b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x562fcc98fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39116)[0m     @     0x562fcc990a20 method_vectorcall
[2m[36m(pid=39116)[0m     @     0x562fcc904bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x562fcc98fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39116)[0m     @     0x562fcc990643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39116)[0m     @     0x562fcc905689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x562fcc98fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39116)[0m     @     0x562fcc990643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39116)[0m     @     0x562fcc905689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x562fcc98fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39116)[0m     @     0x562fcc990643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39116)[0m     @     0x562fcc905689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39116)[0m     @     0x562fcc98fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39116)[0m     @     0x562fcc990643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39116)[0m     @     0x562fcc905689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x5619676ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x561967774baf _PyEval_EvalCodeWithName
[2m[36m(pid=39126)[0m     @     0x561967775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39126)[0m     @     0x5619676ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x561967774baf _PyEval_EvalCodeWithName
[2m[36m(pid=39126)[0m     @     0x561967775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39126)[0m     @     0x5619676ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39126)[0m     @     0x561967774baf _PyEval_EvalCodeWithName
[2m[36m(pid=39126)[0m     @     0x561967775643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39126)[0m     @     0x5619676ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39171)[0m     @     0x55d68ab24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39171)[0m     @     0x55d68abaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39171)[0m     @     0x55d68ab24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39171)[0m     @     0x55d68abaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39171)[0m     @     0x55d68abaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39171)[0m     @     0x55d68ab24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x7f75d736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39221)[0m     @     0x55c852b1afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39221)[0m     @     0x55c852a75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x55c852b00baf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x55c852b01a20 method_vectorcall
[2m[36m(pid=39221)[0m     @     0x55c852a75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x55c852b00baf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x55c852b01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39221)[0m     @     0x55c852a76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x55c852b00baf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x55c852b01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39221)[0m     @     0x55c852a76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x55c852b00baf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x55c852b01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39221)[0m     @     0x55c852a76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39221)[0m     @     0x55c852b00baf _PyEval_EvalCodeWithName
[2m[36m(pid=39221)[0m     @     0x55c852b01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39221)[0m     @     0x55c852a76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x7f2081463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39105)[0m     @     0x7f2081461388 at::native::copy_impl()
[2m[36m(pid=39105)[0m     @     0x7f20814635a4 at::native::copy_()
[2m[36m(pid=39162)[0m     @     0x55d144226b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39162)[0m     @     0x55d1442b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39162)[0m     @     0x55d1442b2a20 method_vectorcall
[2m[36m(pid=39162)[0m     @     0x55d144226bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39162)[0m     @     0x55d1442b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39162)[0m     @     0x55d1442b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39162)[0m     @     0x55d144227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39162)[0m     @     0x55d1442b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39162)[0m     @     0x55d1442b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39162)[0m     @     0x55d144227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39162)[0m     @     0x55d1442b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39162)[0m     @     0x55d1442b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39162)[0m     @     0x55d144227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39162)[0m     @     0x55d1442b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39162)[0m     @     0x55d1442b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39162)[0m     @     0x55d144227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x7fcb3749f4f5 at::Tensor::copy_()
[2m[36m(pid=39224)[0m     @     0x7fcb3d54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39224)[0m     @     0x55fb04385fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39224)[0m     @     0x55fb042e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x55fb0436bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39224)[0m     @     0x55fb0436ca20 method_vectorcall
[2m[36m(pid=39224)[0m     @     0x55fb042e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x55fb0436bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39224)[0m     @     0x55fb0436c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39224)[0m     @     0x55fb042e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x55fb0436bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39224)[0m     @     0x55fb0436c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39224)[0m     @     0x55fb042e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x55fb0436bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39224)[0m     @     0x55fb0436c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39224)[0m     @     0x55fb042e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39224)[0m     @     0x55fb0436bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39224)[0m     @     0x55fb0436c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39224)[0m     @     0x55fb042e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x7f47d7a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39203)[0m     @     0x7f47d7a37388 at::native::copy_impl()
[2m[36m(pid=39203)[0m     @     0x7f47d7a395a4 at::native::copy_()
[2m[36m(pid=39176)[0m     @     0x7f8a1437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39176)[0m     @     0x7f8a14378388 at::native::copy_impl()
[2m[36m(pid=39176)[0m     @     0x7f8a1437a5a4 at::native::copy_()
[2m[36m(pid=39183)[0m     @     0x7f2562c7d388 at::native::copy_impl()
[2m[36m(pid=39183)[0m     @     0x7f2562c7f5a4 at::native::copy_()
[2m[36m(pid=39183)[0m     @     0x7f256336a4f5 at::Tensor::copy_()
[2m[36m(pid=39179)[0m     @     0x7f4e3726f4f5 at::Tensor::copy_()
[2m[36m(pid=39179)[0m     @     0x7f4e3d31a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39179)[0m     @     0x56490c6f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39179)[0m     @     0x56490c64eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x56490c6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39179)[0m     @     0x56490c6daa20 method_vectorcall
[2m[36m(pid=39179)[0m     @     0x56490c64ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x56490c6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39179)[0m     @     0x56490c6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39179)[0m     @     0x56490c64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x56490c6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39179)[0m     @     0x56490c6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39179)[0m     @     0x56490c64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x56490c6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39179)[0m     @     0x56490c6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39179)[0m     @     0x56490c64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39179)[0m     @     0x56490c6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39179)[0m     @     0x56490c6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39179)[0m     @     0x56490c64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x7f6b0118b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39112)[0m     @     0x7f6afecb84f5 at::Tensor::copy_()
[2m[36m(pid=39112)[0m     @     0x7f6b04d6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39112)[0m     @     0x557a5ad91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39112)[0m     @     0x557a5acecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x557a5ad77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39112)[0m     @     0x557a5ad78a20 method_vectorcall
[2m[36m(pid=39112)[0m     @     0x557a5acecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x557a5ad77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39112)[0m     @     0x557a5ad78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39112)[0m     @     0x557a5aced689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x557a5ad77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39112)[0m     @     0x557a5ad78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39112)[0m     @     0x557a5aced689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x557a5ad77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39112)[0m     @     0x557a5ad78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39112)[0m     @     0x557a5aced689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39112)[0m     @     0x557a5ad77baf _PyEval_EvalCodeWithName
[2m[36m(pid=39112)[0m     @     0x557a5ad78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39112)[0m     @     0x557a5aced689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x7f9b452484f5 at::Tensor::copy_()
[2m[36m(pid=39163)[0m     @     0x7f9b4b2f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39163)[0m     @     0x55a376057fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39163)[0m     @     0x55a375fb2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x55a37603dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39163)[0m     @     0x55a37603ea20 method_vectorcall
[2m[36m(pid=39163)[0m     @     0x55a375fb2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x55a37603dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39163)[0m     @     0x55a37603e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39163)[0m     @     0x55a375fb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x55a37603dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39163)[0m     @     0x55a37603e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39163)[0m     @     0x55a375fb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x55a37603dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39163)[0m     @     0x55a37603e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39163)[0m     @     0x55a375fb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39163)[0m     @     0x55a37603dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39163)[0m     @     0x55a37603e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39163)[0m     @     0x55a375fb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x7f66c3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=39191)[0m     @     0x7f66c9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39191)[0m     @     0x5603cef54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39191)[0m     @     0x5603ceeafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x5603cef3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39191)[0m     @     0x5603cef3ba20 method_vectorcall
[2m[36m(pid=39191)[0m     @     0x5603ceeafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x5603cef3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39191)[0m     @     0x5603cef3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39191)[0m     @     0x5603ceeb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x5603cef3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39191)[0m     @     0x5603cef3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39191)[0m     @     0x5603ceeb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x5603cef3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39191)[0m     @     0x5603cef3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39191)[0m     @     0x5603ceeb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39191)[0m     @     0x5603cef3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39191)[0m     @     0x5603cef3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39191)[0m     @     0x5603ceeb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x7f96cece54f5 at::Tensor::copy_()
[2m[36m(pid=39122)[0m     @     0x7f96d11b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39122)[0m     @     0x7f96cece54f5 at::Tensor::copy_()
[2m[36m(pid=39110)[0m     @     0x7f44d46f9388 at::native::copy_impl()
[2m[36m(pid=39110)[0m     @     0x7f44d46fb5a4 at::native::copy_()
[2m[36m(pid=39110)[0m     @     0x7f44d4de64f5 at::Tensor::copy_()
[2m[36m(pid=39110)[0m     @     0x7f44d72b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39194)[0m     @     0x561d88469baf _PyEval_EvalCodeWithName
[2m[36m(pid=39194)[0m     @     0x561d8846a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39194)[0m     @     0x561d883df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39194)[0m     @     0x561d88469baf _PyEval_EvalCodeWithName
[2m[36m(pid=39194)[0m     @     0x561d8846a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39194)[0m     @     0x561d883df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39194)[0m     @     0x561d88469baf _PyEval_EvalCodeWithName
[2m[36m(pid=39194)[0m     @     0x561d8846a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39194)[0m     @     0x561d883df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39194)[0m     @     0x561d88469baf _PyEval_EvalCodeWithName
[2m[36m(pid=39194)[0m     @     0x561d8846a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39194)[0m     @     0x561d883df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x7f77f6a14d91 at::TensorIterator::for_each()
[2m[36m(pid=39166)[0m     @     0x7f77f72f7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39166)[0m     @     0x7f77f731ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39166)[0m     @     0x7f77f67bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39166)[0m     @     0x7f77f67ba388 at::native::copy_impl()
[2m[36m(pid=39166)[0m     @     0x7f77f67bc5a4 at::native::copy_()
[2m[36m(pid=39188)[0m     @     0x7f843e016b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39188)[0m     @     0x7f843e039c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39188)[0m     @     0x7f843d4dba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39188)[0m     @     0x7f843d4d9388 at::native::copy_impl()
[2m[36m(pid=39188)[0m     @     0x7f843d4db5a4 at::native::copy_()
[2m[36m(pid=39178)[0m     @     0x7fa525a0da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39178)[0m     @     0x7fa525a0b388 at::native::copy_impl()
[2m[36m(pid=39178)[0m     @     0x7fa525a0d5a4 at::native::copy_()
[2m[36m(pid=39178)[0m     @     0x7fa5260f84f5 at::Tensor::copy_()
[2m[36m(pid=39178)[0m     @     0x7fa5285cb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39226)[0m     @     0x7f1a14acdd91 at::TensorIterator::for_each()
[2m[36m(pid=39226)[0m     @     0x7f1a153b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39226)[0m     @     0x7f1a153d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39226)[0m     @     0x7f1a14875a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39226)[0m     @     0x7f1a14873388 at::native::copy_impl()
[2m[36m(pid=39107)[0m     @     0x7fc1b0b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39107)[0m     @     0x7fc1b0011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39107)[0m     @     0x7fc1b000f388 at::native::copy_impl()
[2m[36m(pid=39107)[0m     @     0x7fc1b00115a4 at::native::copy_()
[2m[36m(pid=39118)[0m     @     0x7f46e31b6d91 at::TensorIterator::for_each()
[2m[36m(pid=39118)[0m     @     0x7f46e3a99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39118)[0m     @     0x7f46e3abcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39118)[0m     @     0x7f46e2f5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39118)[0m     @     0x7f46e2f5c388 at::native::copy_impl()
[2m[36m(pid=39158)[0m     @     0x7efcb2343ad3 at::TensorIterator::for_each()
[2m[36m(pid=39158)[0m     @     0x7efcb2343d91 at::TensorIterator::for_each()
[2m[36m(pid=39158)[0m     @     0x7efcb2c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39158)[0m     @     0x7efcb2c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39158)[0m     @     0x7efcb20eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39158)[0m     @     0x7efcb20e9388 at::native::copy_impl()
[2m[36m(pid=39234)[0m     @     0x7fc4387d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39234)[0m     @     0x7fc4387d0388 at::native::copy_impl()
[2m[36m(pid=39234)[0m     @     0x7fc4387d25a4 at::native::copy_()
[2m[36m(pid=39234)[0m     @     0x7fc438ebd4f5 at::Tensor::copy_()
[2m[36m(pid=39234)[0m     @     0x7fc43b3908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39115)[0m     @     0x7f84c87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=39115)[0m     @     0x7f84c90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39115)[0m     @     0x7f84c90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39115)[0m     @     0x7f84c858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39115)[0m     @     0x7f84c8589388 at::native::copy_impl()
[2m[36m(pid=39175)[0m     @     0x7fbd374f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39175)[0m     @     0x7fbd374f0388 at::native::copy_impl()
[2m[36m(pid=39175)[0m     @     0x7fbd374f25a4 at::native::copy_()
[2m[36m(pid=39186)[0m     @     0x7f2db26ff5a4 at::native::copy_()
[2m[36m(pid=39186)[0m     @     0x7f2db2dea4f5 at::Tensor::copy_()
[2m[36m(pid=39198)[0m     @     0x7f7f5652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39198)[0m     @     0x7f7f559cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39198)[0m     @     0x7f7f559cd388 at::native::copy_impl()
[2m[36m(pid=39104)[0m     @     0x7f3ef494ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39104)[0m     @     0x7f3ef494a388 at::native::copy_impl()
[2m[36m(pid=39104)[0m     @     0x7f3ef494c5a4 at::native::copy_()
[2m[36m(pid=39099)[0m     @     0x7fbafc64a5a4 at::native::copy_()
[2m[36m(pid=39099)[0m     @     0x7fbafcd354f5 at::Tensor::copy_()
[2m[36m(pid=39099)[0m     @     0x7fbaff2088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39181)[0m     @     0x7f2d8b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39181)[0m     @     0x7f2d8b4f0388 at::native::copy_impl()
[2m[36m(pid=39181)[0m     @     0x7f2d8b4f25a4 at::native::copy_()
[2m[36m(pid=39165)[0m     @     0x7f26136e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39165)[0m     @     0x7f2612b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39165)[0m     @     0x7f2612b82388 at::native::copy_impl()
[2m[36m(pid=39100)[0m     @     0x7f0f0d0e35a4 at::native::copy_()
[2m[36m(pid=39100)[0m     @     0x7f0f0d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=39130)[0m     @     0x7efa54bc8388 at::native::copy_impl()
[2m[36m(pid=39130)[0m     @     0x7efa54bca5a4 at::native::copy_()
[2m[36m(pid=39130)[0m     @     0x7efa552b54f5 at::Tensor::copy_()
[2m[36m(pid=39170)[0m     @     0x7f74ff403388 at::native::copy_impl()
[2m[36m(pid=39170)[0m     @     0x7f74ff4055a4 at::native::copy_()
[2m[36m(pid=39102)[0m     @     0x7ed2d403a5a4 at::native::copy_()
[2m[36m(pid=39102)[0m     @     0x7ed2d47254f5 at::Tensor::copy_()
[2m[36m(pid=39200)[0m     @     0x7f36371e04f5 at::Tensor::copy_()
[2m[36m(pid=39200)[0m     @     0x7f36396b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39200)[0m     @     0x7f36371e04f5 at::Tensor::copy_()
[2m[36m(pid=39174)[0m     @     0x7f1bae3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39174)[0m     @     0x7f1bae3e7388 at::native::copy_impl()
[2m[36m(pid=39174)[0m     @     0x7f1bae3e95a4 at::native::copy_()
[2m[36m(pid=39161)[0m     @     0x7f0b5a2fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39161)[0m     @     0x7f0b5a2fa388 at::native::copy_impl()
[2m[36m(pid=39161)[0m     @     0x7f0b5a2fc5a4 at::native::copy_()
[2m[36m(pid=39101)[0m     @     0x7f306f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39101)[0m     @     0x7f306f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39101)[0m     @     0x7f306ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39101)[0m     @     0x7f306ee99388 at::native::copy_impl()
[2m[36m(pid=39233)[0m     @     0x7f2cf81244f5 at::Tensor::copy_()
[2m[36m(pid=39233)[0m     @     0x7f2cfa5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39233)[0m     @     0x7f2cf81244f5 at::Tensor::copy_()
[2m[36m(pid=39233)[0m     @     0x7f2cfe1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39233)[0m     @     0x55ff5b2c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39233)[0m     @     0x55ff5b224b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39233)[0m     @     0x55ff5b2afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39233)[0m     @     0x55ff5b2b0a20 method_vectorcall
[2m[36m(pid=39233)[0m     @     0x55ff5b224bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39233)[0m     @     0x55ff5b2afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39233)[0m     @     0x55ff5b2b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39233)[0m     @     0x55ff5b225689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39233)[0m     @     0x55ff5b2afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39233)[0m     @     0x55ff5b2b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39233)[0m     @     0x55ff5b225689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39233)[0m     @     0x55ff5b2afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39233)[0m     @     0x55ff5b2b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39233)[0m     @     0x55ff5b225689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39233)[0m     @     0x55ff5b2afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39233)[0m     @     0x55ff5b2b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39233)[0m     @     0x55ff5b225689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x7fbfa98215a4 at::native::copy_()
[2m[36m(pid=39108)[0m     @     0x7fbfa9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=39108)[0m     @     0x7fbfac3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39108)[0m     @     0x7fbfa9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=39168)[0m     @     0x7ef3ff99f4f5 at::Tensor::copy_()
[2m[36m(pid=39168)[0m     @     0x7ef401e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39168)[0m     @     0x7ef3ff99f4f5 at::Tensor::copy_()
[2m[36m(pid=39168)[0m     @     0x7ef405a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39168)[0m     @     0x5645eb0bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39168)[0m     @     0x5645eb01ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39168)[0m     @     0x5645eb0a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39168)[0m     @     0x5645eb0a6a20 method_vectorcall
[2m[36m(pid=39168)[0m     @     0x5645eb01abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39168)[0m     @     0x5645eb0a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39168)[0m     @     0x5645eb0a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39168)[0m     @     0x5645eb01b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39168)[0m     @     0x5645eb0a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39168)[0m     @     0x5645eb0a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39168)[0m     @     0x5645eb01b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39168)[0m     @     0x5645eb0a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39168)[0m     @     0x5645eb0a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39168)[0m     @     0x5645eb01b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39168)[0m     @     0x5645eb0a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39168)[0m     @     0x5645eb0a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39168)[0m     @     0x5645eb01b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x7eddac81d5a4 at::native::copy_()
[2m[36m(pid=39096)[0m     @     0x7eddacf084f5 at::Tensor::copy_()
[2m[36m(pid=39096)[0m     @     0x7eddaf3db8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39169)[0m     @     0x7f7524bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39169)[0m     @     0x7f7524bc8388 at::native::copy_impl()
[2m[36m(pid=39169)[0m     @     0x7f7524bca5a4 at::native::copy_()
[2m[36m(pid=39169)[0m     @     0x7f75252b54f5 at::Tensor::copy_()
[2m[36m(pid=39169)[0m     @     0x7f75277888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39127)[0m     @     0x7fc8d434d5a4 at::native::copy_()
[2m[36m(pid=39127)[0m     @     0x7fc8d4a384f5 at::Tensor::copy_()
[2m[36m(pid=39127)[0m     @     0x7fc8d6f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39127)[0m     @     0x7fc8d4a384f5 at::Tensor::copy_()
[2m[36m(pid=39117)[0m     @     0x7f2f7cee05a4 at::native::copy_()
[2m[36m(pid=39117)[0m     @     0x7f2f7d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=39117)[0m     @     0x7f2f7fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39117)[0m     @     0x7f2f7d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=39111)[0m     @     0x7ee72f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=39111)[0m     @     0x7ee731e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39111)[0m     @     0x7ee72f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=39111)[0m     @     0x7ee735a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39111)[0m     @     0x55f34437efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39111)[0m     @     0x55f3442d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f344364baf _PyEval_EvalCodeWithName
[2m[36m(pid=39111)[0m     @     0x55f344365a20 method_vectorcall
[2m[36m(pid=39111)[0m     @     0x55f3442d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f344364baf _PyEval_EvalCodeWithName
[2m[36m(pid=39111)[0m     @     0x55f344365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39111)[0m     @     0x55f3442da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f344364baf _PyEval_EvalCodeWithName
[2m[36m(pid=39111)[0m     @     0x55f344365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39128)[0m     @     0x55a0ed2f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39128)[0m     @     0x55a0ed266689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x7fa6fe82b4f5 at::Tensor::copy_()
[2m[36m(pid=39120)[0m     @     0x7fa700cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39120)[0m     @     0x7fa6fe82b4f5 at::Tensor::copy_()
[2m[36m(pid=39120)[0m     @     0x7fa7048d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39120)[0m     @     0x55f4d7926fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39120)[0m     @     0x55f4d7881b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x55f4d790cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39120)[0m     @     0x55f4d790da20 method_vectorcall
[2m[36m(pid=39120)[0m     @     0x55f4d7881bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x55f4d790cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39120)[0m     @     0x55f4d790d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39120)[0m     @     0x55f4d7882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x55f4d790cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39120)[0m     @     0x55f4d790d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39120)[0m     @     0x55f4d7882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x55f4d790cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39120)[0m     @     0x55f4d790d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39120)[0m     @     0x55f4d7882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39120)[0m     @     0x55f4d790cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39120)[0m     @     0x55f4d790d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39120)[0m     @     0x55f4d7882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x7f9d991b84f5 at::Tensor::copy_()
[2m[36m(pid=39103)[0m     @     0x7f9d9b68b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39103)[0m     @     0x7f9d991b84f5 at::Tensor::copy_()
[2m[36m(pid=39103)[0m     @     0x7f9dc035979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39103)[0m     @     0x5653449dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39103)[0m     @     0x565344937b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x5653449c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39103)[0m     @     0x5653449c3a20 method_vectorcall
[2m[36m(pid=39103)[0m     @     0x565344937bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x5653449c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39103)[0m     @     0x5653449c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39103)[0m     @     0x565344938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x5653449c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39103)[0m     @     0x5653449c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39103)[0m     @     0x565344938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x5653449c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39103)[0m     @     0x5653449c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39103)[0m     @     0x565344938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39103)[0m     @     0x5653449c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39103)[0m     @     0x5653449c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39103)[0m     @     0x565344938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x7fc4e5f264f5 at::Tensor::copy_()
[2m[36m(pid=39124)[0m     @     0x7fc4e83f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39124)[0m     @     0x7fc4e5f264f5 at::Tensor::copy_()
[2m[36m(pid=39124)[0m     @     0x7fc4ebfd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39124)[0m     @     0x5607c8daefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39124)[0m     @     0x5607c8d09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x5607c8d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=39124)[0m     @     0x5607c8d95a20 method_vectorcall
[2m[36m(pid=39124)[0m     @     0x5607c8d09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x5607c8d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=39124)[0m     @     0x5607c8d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39124)[0m     @     0x5607c8d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x5607c8d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=39124)[0m     @     0x5607c8d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39124)[0m     @     0x5607c8d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x5607c8d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=39124)[0m     @     0x5607c8d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39124)[0m     @     0x5607c8d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39124)[0m     @     0x5607c8d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=39124)[0m     @     0x5607c8d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39124)[0m     @     0x5607c8d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x7fa154c764f5 at::Tensor::copy_()
[2m[36m(pid=39114)[0m     @     0x7fa1571498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39114)[0m     @     0x7fa154c764f5 at::Tensor::copy_()
[2m[36m(pid=39114)[0m     @     0x7fa15ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39114)[0m     @     0x56286d752fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39114)[0m     @     0x56286d6adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x56286d738baf _PyEval_EvalCodeWithName
[2m[36m(pid=39114)[0m     @     0x56286d739a20 method_vectorcall
[2m[36m(pid=39114)[0m     @     0x56286d6adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x56286d738baf _PyEval_EvalCodeWithName
[2m[36m(pid=39114)[0m     @     0x56286d739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39114)[0m     @     0x56286d6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x56286d738baf _PyEval_EvalCodeWithName
[2m[36m(pid=39114)[0m     @     0x56286d739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39114)[0m     @     0x56286d6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x7f85763e95a4 at::native::copy_()
[2m[36m(pid=39192)[0m     @     0x7f8576ad44f5 at::Tensor::copy_()
[2m[36m(pid=39192)[0m     @     0x7f8578fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39113)[0m     @     0x7f4ed6e9b5a4 at::native::copy_()
[2m[36m(pid=39113)[0m     @     0x7f4ed75864f5 at::Tensor::copy_()
[2m[36m(pid=39113)[0m     @     0x7f4ed9a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39164)[0m     @     0x7f4d1837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39164)[0m     @     0x7f4d18378388 at::native::copy_impl()
[2m[36m(pid=39164)[0m     @     0x7f4d1837a5a4 at::native::copy_()
[2m[36m(pid=39164)[0m     @     0x7f4d18a654f5 at::Tensor::copy_()
[2m[36m(pid=39177)[0m     @     0x7f325b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39177)[0m     @     0x7f325adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39177)[0m     @     0x7f325adb2388 at::native::copy_impl()
[2m[36m(pid=39177)[0m     @     0x7f325adb45a4 at::native::copy_()
[2m[36m(pid=39173)[0m     @     0x7ed07437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39173)[0m     @     0x7ed074378388 at::native::copy_impl()
[2m[36m(pid=39173)[0m     @     0x7ed07437a5a4 at::native::copy_()
[2m[36m(pid=39098)[0m     @     0x7f274f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39098)[0m     @     0x7f274f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=39098)[0m     @     0x7f274f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39098)[0m     @     0x7f274f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39105)[0m     @     0x7f2081b4e4f5 at::Tensor::copy_()
[2m[36m(pid=39105)[0m     @     0x7f20840218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39105)[0m     @     0x7f2081b4e4f5 at::Tensor::copy_()
[2m[36m(pid=39105)[0m     @     0x7f2087bf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39105)[0m     @     0x55eb2792bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39105)[0m     @     0x55eb27886b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x55eb27911baf _PyEval_EvalCodeWithName
[2m[36m(pid=39105)[0m     @     0x55eb27912a20 method_vectorcall
[2m[36m(pid=39105)[0m     @     0x55eb27886bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x55eb27911baf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x7f47d81244f5 at::Tensor::copy_()
[2m[36m(pid=39203)[0m     @     0x7f47da5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39203)[0m     @     0x7f47d81244f5 at::Tensor::copy_()
[2m[36m(pid=39203)[0m     @     0x7f47de1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39203)[0m     @     0x5566bcea7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39203)[0m     @     0x5566bce02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x5566bce8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x5566bce8ea20 method_vectorcall
[2m[36m(pid=39203)[0m     @     0x5566bce02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x5566bce8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x5566bce8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39203)[0m     @     0x5566bce03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x5566bce8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x5566bce8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39203)[0m     @     0x5566bce03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x5566bce8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x5566bce8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39203)[0m     @     0x5566bce03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39203)[0m     @     0x5566bce8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39203)[0m     @     0x5566bce8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39203)[0m     @     0x5566bce03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x7f8a14a654f5 at::Tensor::copy_()
[2m[36m(pid=39176)[0m     @     0x7f8a16f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39176)[0m     @     0x7f8a14a654f5 at::Tensor::copy_()
[2m[36m(pid=39176)[0m     @     0x7f8a1ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39176)[0m     @     0x561dfcdbefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39176)[0m     @     0x561dfcd19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x561dfcda4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39176)[0m     @     0x561dfcda5a20 method_vectorcall
[2m[36m(pid=39176)[0m     @     0x561dfcd19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x561dfcda4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39176)[0m     @     0x561dfcda5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39176)[0m     @     0x561dfcd1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x561dfcda4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39176)[0m     @     0x561dfcda5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39176)[0m     @     0x561dfcd1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x561dfcda4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39176)[0m     @     0x561dfcda5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39176)[0m     @     0x561dfcd1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39176)[0m     @     0x561dfcda4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39176)[0m     @     0x561dfcda5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39176)[0m     @     0x561dfcd1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x7f256583d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39183)[0m     @     0x7f256336a4f5 at::Tensor::copy_()
[2m[36m(pid=39183)[0m     @     0x7f256941579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39183)[0m     @     0x55657e51afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39183)[0m     @     0x55657e475b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x55657e500baf _PyEval_EvalCodeWithName
[2m[36m(pid=39183)[0m     @     0x55657e501a20 method_vectorcall
[2m[36m(pid=39183)[0m     @     0x55657e475bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x55657e500baf _PyEval_EvalCodeWithName
[2m[36m(pid=39183)[0m     @     0x55657e501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39183)[0m     @     0x55657e476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x55657e500baf _PyEval_EvalCodeWithName
[2m[36m(pid=39183)[0m     @     0x55657e501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39183)[0m     @     0x55657e476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x55657e500baf _PyEval_EvalCodeWithName
[2m[36m(pid=39183)[0m     @     0x55657e501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39183)[0m     @     0x55657e476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39183)[0m     @     0x55657e500baf _PyEval_EvalCodeWithName
[2m[36m(pid=39183)[0m     @     0x55657e501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39183)[0m     @     0x55657e476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x7f96d4d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39122)[0m     @     0x55eaa9327fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39122)[0m     @     0x55eaa9282b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x55eaa930dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39122)[0m     @     0x55eaa930ea20 method_vectorcall
[2m[36m(pid=39122)[0m     @     0x55eaa9282bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x55eaa930dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39122)[0m     @     0x55eaa930e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39122)[0m     @     0x55eaa9283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x55eaa930dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39122)[0m     @     0x55eaa930e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39122)[0m     @     0x55eaa9283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x55eaa930dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39122)[0m     @     0x55eaa930e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39122)[0m     @     0x55eaa9283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39122)[0m     @     0x55eaa930dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39122)[0m     @     0x55eaa930e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39122)[0m     @     0x55eaa9283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x7f44d4de64f5 at::Tensor::copy_()
[2m[36m(pid=39110)[0m     @     0x7f44dae9179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39110)[0m     @     0x561f7718cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39110)[0m     @     0x561f770e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x561f77172baf _PyEval_EvalCodeWithName
[2m[36m(pid=39110)[0m     @     0x561f77173a20 method_vectorcall
[2m[36m(pid=39110)[0m     @     0x561f770e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x561f77172baf _PyEval_EvalCodeWithName
[2m[36m(pid=39110)[0m     @     0x561f77173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39110)[0m     @     0x561f770e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x561f77172baf _PyEval_EvalCodeWithName
[2m[36m(pid=39110)[0m     @     0x561f77173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39110)[0m     @     0x561f770e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x561f77172baf _PyEval_EvalCodeWithName
[2m[36m(pid=39110)[0m     @     0x561f77173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39110)[0m     @     0x561f770e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39110)[0m     @     0x561f77172baf _PyEval_EvalCodeWithName
[2m[36m(pid=39110)[0m     @     0x561f77173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39110)[0m     @     0x561f770e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x7f77f6ea74f5 at::Tensor::copy_()
[2m[36m(pid=39166)[0m     @     0x7f77f937a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39166)[0m     @     0x7f77f6ea74f5 at::Tensor::copy_()
[2m[36m(pid=39166)[0m     @     0x7f77fcf5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39166)[0m     @     0x562afc59efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39166)[0m     @     0x562afc4f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc584baf _PyEval_EvalCodeWithName
[2m[36m(pid=39166)[0m     @     0x562afc585a20 method_vectorcall
[2m[36m(pid=39166)[0m     @     0x562afc4f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc584baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x7f843dbc64f5 at::Tensor::copy_()
[2m[36m(pid=39188)[0m     @     0x7f84400998de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39188)[0m     @     0x7f843dbc64f5 at::Tensor::copy_()
[2m[36m(pid=39178)[0m     @     0x7fa5260f84f5 at::Tensor::copy_()
[2m[36m(pid=39178)[0m     @     0x7fa52c1a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39178)[0m     @     0x55d678c9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39178)[0m     @     0x55d678bf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39178)[0m     @     0x55d678c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=39178)[0m     @     0x55d678c82a20 method_vectorcall
[2m[36m(pid=39178)[0m     @     0x55d678bf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39178)[0m     @     0x55d678c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=39178)[0m     @     0x55d678c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39178)[0m     @     0x55d678bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39178)[0m     @     0x55d678c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=39178)[0m     @     0x55d678c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39178)[0m     @     0x55d678bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39178)[0m     @     0x55d678c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=39178)[0m     @     0x55d678c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39178)[0m     @     0x55d678bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39178)[0m     @     0x55d678c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=39178)[0m     @     0x55d678c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39178)[0m     @     0x55d678bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x7f1956e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=39119)[0m     @     0x7f1957762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39226)[0m     @     0x7f1a148755a4 at::native::copy_()
[2m[36m(pid=39226)[0m     @     0x7f1a14f604f5 at::Tensor::copy_()
[2m[36m(pid=39226)[0m     @     0x7f1a174338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39107)[0m     @     0x7fc1b06fc4f5 at::Tensor::copy_()
[2m[36m(pid=39107)[0m     @     0x7fc1b2bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39118)[0m     @     0x7f46e2f5e5a4 at::native::copy_()
[2m[36m(pid=39118)[0m     @     0x7f46e36494f5 at::Tensor::copy_()
[2m[36m(pid=39158)[0m     @     0x7efcb20eb5a4 at::native::copy_()
[2m[36m(pid=39234)[0m     @     0x7fc438ebd4f5 at::Tensor::copy_()
[2m[36m(pid=39234)[0m     @     0x7fc43ef6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39234)[0m     @     0x55681511ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39234)[0m     @     0x55681507ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39234)[0m     @     0x556815105baf _PyEval_EvalCodeWithName
[2m[36m(pid=39234)[0m     @     0x556815106a20 method_vectorcall
[2m[36m(pid=39234)[0m     @     0x55681507abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39234)[0m     @     0x556815105baf _PyEval_EvalCodeWithName
[2m[36m(pid=39234)[0m     @     0x556815106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39234)[0m     @     0x55681507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39234)[0m     @     0x556815105baf _PyEval_EvalCodeWithName
[2m[36m(pid=39234)[0m     @     0x556815106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39234)[0m     @     0x55681507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39234)[0m     @     0x556815105baf _PyEval_EvalCodeWithName
[2m[36m(pid=39234)[0m     @     0x556815106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39234)[0m     @     0x55681507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39234)[0m     @     0x556815105baf _PyEval_EvalCodeWithName
[2m[36m(pid=39234)[0m     @     0x556815106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39234)[0m     @     0x55681507b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x7f84c858b5a4 at::native::copy_()
[2m[36m(pid=39115)[0m     @     0x7f84c8c764f5 at::Tensor::copy_()
[2m[36m(pid=39175)[0m     @     0x7fbd37bdd4f5 at::Tensor::copy_()
[2m[36m(pid=39175)[0m     @     0x7fbd3a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39175)[0m     @     0x7fbd37bdd4f5 at::Tensor::copy_()
[2m[36m(pid=39175)[0m     @     0x7fbd3dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39175)[0m     @     0x565482db2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39175)[0m     @     0x565482d0db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39175)[0m     @     0x565482d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=39175)[0m     @     0x565482d99a20 method_vectorcall
[2m[36m(pid=39175)[0m     @     0x565482d0dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39175)[0m     @     0x565482d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=39175)[0m     @     0x565482d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39175)[0m     @     0x565482d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39175)[0m     @     0x565482d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=39175)[0m     @     0x565482d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39175)[0m     @     0x565482d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39175)[0m     @     0x565482d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=39175)[0m     @     0x565482d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39175)[0m     @     0x565482d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39175)[0m     @     0x565482d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=39175)[0m     @     0x565482d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39175)[0m     @     0x565482d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x7f2db52bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39186)[0m     @     0x7f2db2dea4f5 at::Tensor::copy_()
[2m[36m(pid=39186)[0m     @     0x7f2db8e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39186)[0m     @     0x561c24a83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39186)[0m     @     0x561c249deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x561c24a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39186)[0m     @     0x561c24a6aa20 method_vectorcall
[2m[36m(pid=39186)[0m     @     0x561c249debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x561c24a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39186)[0m     @     0x561c24a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39186)[0m     @     0x561c249df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x561c24a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39186)[0m     @     0x561c24a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39186)[0m     @     0x561c249df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x561c24a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39186)[0m     @     0x561c24a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39186)[0m     @     0x561c249df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39186)[0m     @     0x561c24a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=39186)[0m     @     0x561c24a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39186)[0m     @     0x561c249df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x7f7f559cf5a4 at::native::copy_()
[2m[36m(pid=39198)[0m     @     0x7f7f560ba4f5 at::Tensor::copy_()
[2m[36m(pid=39198)[0m     @     0x7f7f5858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39198)[0m     @     0x7f7f560ba4f5 at::Tensor::copy_()
[2m[36m(pid=39104)[0m     @     0x7f3ef50374f5 at::Tensor::copy_()
[2m[36m(pid=39104)[0m     @     0x7f3ef750a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39099)[0m     @     0x7fbafcd354f5 at::Tensor::copy_()
[2m[36m(pid=39099)[0m     @     0x7fbb02de079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39099)[0m     @     0x5616ae949fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39099)[0m     @     0x5616ae8a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39099)[0m     @     0x5616ae92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39099)[0m     @     0x5616ae930a20 method_vectorcall
[2m[36m(pid=39099)[0m     @     0x5616ae8a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39099)[0m     @     0x5616ae92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39099)[0m     @     0x5616ae930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39099)[0m     @     0x5616ae8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39099)[0m     @     0x5616ae92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39099)[0m     @     0x5616ae930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39099)[0m     @     0x5616ae8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39099)[0m     @     0x5616ae92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39099)[0m     @     0x5616ae930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39099)[0m     @     0x5616ae8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39099)[0m     @     0x5616ae92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39099)[0m     @     0x5616ae930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39099)[0m     @     0x5616ae8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x7f2d8bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=39181)[0m     @     0x7f2d8e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39181)[0m     @     0x7f2d8bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=39181)[0m     @     0x7f2d91c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39181)[0m     @     0x55a97adc5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39181)[0m     @     0x55a97ad20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x55a97adabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39181)[0m     @     0x55a97adaca20 method_vectorcall
[2m[36m(pid=39181)[0m     @     0x55a97ad20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x55a97adabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39181)[0m     @     0x55a97adac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39181)[0m     @     0x55a97ad21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x55a97adabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39181)[0m     @     0x55a97adac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39181)[0m     @     0x55a97ad21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x55a97adabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39181)[0m     @     0x55a97adac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39181)[0m     @     0x55a97ad21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39181)[0m     @     0x55a97adabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39181)[0m     @     0x55a97adac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39181)[0m     @     0x55a97ad21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x7f2612b845a4 at::native::copy_()
[2m[36m(pid=39165)[0m     @     0x7f261326f4f5 at::Tensor::copy_()
[2m[36m(pid=39165)[0m     @     0x7f26157428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39165)[0m     @     0x7f261326f4f5 at::Tensor::copy_()
[2m[36m(pid=39165)[0m     @     0x7f261931a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39165)[0m     @     0x5646c63fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39165)[0m     @     0x5646c6356b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c63e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39165)[0m     @     0x5646c63e2a20 method_vectorcall
[2m[36m(pid=39100)[0m     @     0x7f0f0fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39100)[0m     @     0x7f0f0d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=39100)[0m     @     0x7f0f1387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39100)[0m     @     0x56384cc80fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39100)[0m     @     0x56384cbdbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39100)[0m     @     0x56384cc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=39100)[0m     @     0x56384cc67a20 method_vectorcall
[2m[36m(pid=39100)[0m     @     0x56384cbdbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39100)[0m     @     0x56384cc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=39100)[0m     @     0x56384cc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39100)[0m     @     0x56384cbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39100)[0m     @     0x56384cc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=39100)[0m     @     0x56384cc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39100)[0m     @     0x56384cbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39100)[0m     @     0x56384cc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=39100)[0m     @     0x56384cc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39100)[0m     @     0x56384cbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39100)[0m     @     0x56384cc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=39100)[0m     @     0x56384cc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39100)[0m     @     0x56384cbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x7efa577888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39130)[0m     @     0x7efa552b54f5 at::Tensor::copy_()
[2m[36m(pid=39130)[0m     @     0x7efa5b36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39130)[0m     @     0x561f553b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39130)[0m     @     0x561f5530bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x561f55396baf _PyEval_EvalCodeWithName
[2m[36m(pid=39130)[0m     @     0x561f55397a20 method_vectorcall
[2m[36m(pid=39130)[0m     @     0x561f5530bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x561f55396baf _PyEval_EvalCodeWithName
[2m[36m(pid=39130)[0m     @     0x561f55397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39130)[0m     @     0x561f5530c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x561f55396baf _PyEval_EvalCodeWithName
[2m[36m(pid=39130)[0m     @     0x561f55397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39130)[0m     @     0x561f5530c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x561f55396baf _PyEval_EvalCodeWithName
[2m[36m(pid=39130)[0m     @     0x561f55397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39130)[0m     @     0x561f5530c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39130)[0m     @     0x561f55396baf _PyEval_EvalCodeWithName
[2m[36m(pid=39130)[0m     @     0x561f55397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39130)[0m     @     0x561f5530c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x7f74ffaf04f5 at::Tensor::copy_()
[2m[36m(pid=39170)[0m     @     0x7f7501fc38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39170)[0m     @     0x7f74ffaf04f5 at::Tensor::copy_()
[2m[36m(pid=39170)[0m     @     0x7f7505b9b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39170)[0m     @     0x55b70de36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39170)[0m     @     0x55b70dd91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70de1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39170)[0m     @     0x55b70de1da20 method_vectorcall
[2m[36m(pid=39170)[0m     @     0x55b70dd91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70de1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39170)[0m     @     0x55b70de1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39170)[0m     @     0x55b70dd92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70de1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39170)[0m     @     0x55b70de1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39170)[0m     @     0x55b70dd92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70de1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39170)[0m     @     0x55b70de1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39102)[0m     @     0x7ed2d6bf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39102)[0m     @     0x7ed2d47254f5 at::Tensor::copy_()
[2m[36m(pid=39102)[0m     @     0x7ed2da7d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39102)[0m     @     0x557a25095fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39102)[0m     @     0x557a24ff0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39102)[0m     @     0x557a2507bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39102)[0m     @     0x557a2507ca20 method_vectorcall
[2m[36m(pid=39102)[0m     @     0x557a24ff0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39102)[0m     @     0x557a2507bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39102)[0m     @     0x557a2507c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39102)[0m     @     0x557a24ff1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39102)[0m     @     0x557a2507bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39102)[0m     @     0x557a2507c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39102)[0m     @     0x557a24ff1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39102)[0m     @     0x557a2507bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39102)[0m     @     0x557a2507c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39102)[0m     @     0x557a24ff1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39102)[0m     @     0x557a2507bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39102)[0m     @     0x557a2507c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39102)[0m     @     0x557a24ff1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x7f363d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39200)[0m     @     0x5648721d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39200)[0m     @     0x564872132b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x5648721bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39200)[0m     @     0x5648721bea20 method_vectorcall
[2m[36m(pid=39200)[0m     @     0x564872132bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x5648721bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39200)[0m     @     0x5648721be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39200)[0m     @     0x564872133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x5648721bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39200)[0m     @     0x5648721be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39200)[0m     @     0x564872133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x5648721bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39200)[0m     @     0x5648721be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39200)[0m     @     0x564872133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39200)[0m     @     0x5648721bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39200)[0m     @     0x5648721be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39200)[0m     @     0x564872133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x7f1baead44f5 at::Tensor::copy_()
[2m[36m(pid=39174)[0m     @     0x7f1bb0fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39174)[0m     @     0x7f1baead44f5 at::Tensor::copy_()
[2m[36m(pid=39174)[0m     @     0x7f1bb4b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39174)[0m     @     0x5596435f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39174)[0m     @     0x55964354cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x5596435d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39174)[0m     @     0x5596435d8a20 method_vectorcall
[2m[36m(pid=39174)[0m     @     0x55964354cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x5596435d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39174)[0m     @     0x5596435d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39174)[0m     @     0x55964354d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x5596435d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39174)[0m     @     0x5596435d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39174)[0m     @     0x55964354d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x5596435d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39174)[0m     @     0x5596435d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39174)[0m     @     0x55964354d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x5596435d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39174)[0m     @     0x5596435d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39161)[0m     @     0x7f0b5a9e74f5 at::Tensor::copy_()
[2m[36m(pid=39161)[0m     @     0x7f0b5ceba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39161)[0m     @     0x7f0b5a9e74f5 at::Tensor::copy_()
[2m[36m(pid=39161)[0m     @     0x7f0b60a9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39161)[0m     @     0x56026c521fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39161)[0m     @     0x56026c47cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39161)[0m     @     0x56026c507baf _PyEval_EvalCodeWithName
[2m[36m(pid=39161)[0m     @     0x56026c508a20 method_vectorcall
[2m[36m(pid=39161)[0m     @     0x56026c47cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x7f306ee9b5a4 at::native::copy_()
[2m[36m(pid=39101)[0m     @     0x7f306f5864f5 at::Tensor::copy_()
[2m[36m(pid=39101)[0m     @     0x7f3071a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39108)[0m     @     0x7fbfaffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39108)[0m     @     0x561f3e11cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39108)[0m     @     0x561f3e077b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x561f3e102baf _PyEval_EvalCodeWithName
[2m[36m(pid=39108)[0m     @     0x561f3e103a20 method_vectorcall
[2m[36m(pid=39108)[0m     @     0x561f3e077bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x561f3e102baf _PyEval_EvalCodeWithName
[2m[36m(pid=39108)[0m     @     0x561f3e103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39108)[0m     @     0x561f3e078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x561f3e102baf _PyEval_EvalCodeWithName
[2m[36m(pid=39108)[0m     @     0x561f3e103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39108)[0m     @     0x561f3e078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x561f3e102baf _PyEval_EvalCodeWithName
[2m[36m(pid=39108)[0m     @     0x561f3e103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39108)[0m     @     0x561f3e078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39108)[0m     @     0x561f3e102baf _PyEval_EvalCodeWithName
[2m[36m(pid=39108)[0m     @     0x561f3e103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39108)[0m     @     0x561f3e078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x7eddacf084f5 at::Tensor::copy_()
[2m[36m(pid=39096)[0m     @     0x7eddb2fb379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39096)[0m     @     0x55637b1e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39096)[0m     @     0x55637b13eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x55637b1c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39096)[0m     @     0x55637b1caa20 method_vectorcall
[2m[36m(pid=39096)[0m     @     0x55637b13ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x55637b1c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39096)[0m     @     0x55637b1ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39096)[0m     @     0x55637b13f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x55637b1c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39096)[0m     @     0x55637b1ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39096)[0m     @     0x55637b13f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x55637b1c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39096)[0m     @     0x55637b1ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39096)[0m     @     0x55637b13f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39096)[0m     @     0x55637b1c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39096)[0m     @     0x55637b1ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39096)[0m     @     0x55637b13f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x7f75252b54f5 at::Tensor::copy_()
[2m[36m(pid=39169)[0m     @     0x7f752b36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39169)[0m     @     0x55c3bb0c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39169)[0m     @     0x55c3bb01fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x55c3bb0aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39169)[0m     @     0x55c3bb0aba20 method_vectorcall
[2m[36m(pid=39169)[0m     @     0x55c3bb01fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x55c3bb0aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39169)[0m     @     0x55c3bb0ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39169)[0m     @     0x55c3bb020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x55c3bb0aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39169)[0m     @     0x55c3bb0ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39169)[0m     @     0x55c3bb020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x55c3bb0aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39169)[0m     @     0x55c3bb0ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39169)[0m     @     0x55c3bb020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39169)[0m     @     0x55c3bb0aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=39169)[0m     @     0x55c3bb0ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39169)[0m     @     0x55c3bb020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x7fc8daae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39127)[0m     @     0x55804c5c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39127)[0m     @     0x55804c521b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x55804c5acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39127)[0m     @     0x55804c5ada20 method_vectorcall
[2m[36m(pid=39127)[0m     @     0x55804c521bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x55804c5acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39127)[0m     @     0x55804c5ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39127)[0m     @     0x55804c522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x55804c5acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39127)[0m     @     0x55804c5ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39127)[0m     @     0x55804c522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x55804c5acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39127)[0m     @     0x55804c5ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39127)[0m     @     0x55804c522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39127)[0m     @     0x55804c5acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39127)[0m     @     0x55804c5ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39127)[0m     @     0x55804c522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x7f2f8367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39117)[0m     @     0x560b82e75fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39117)[0m     @     0x560b82dd0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x560b82e5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39117)[0m     @     0x560b82e5ca20 method_vectorcall
[2m[36m(pid=39117)[0m     @     0x560b82dd0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x560b82e5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39117)[0m     @     0x560b82e5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39117)[0m     @     0x560b82dd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x560b82e5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39117)[0m     @     0x560b82e5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39117)[0m     @     0x560b82dd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x560b82e5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39117)[0m     @     0x560b82e5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39117)[0m     @     0x560b82dd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39117)[0m     @     0x560b82e5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39117)[0m     @     0x560b82e5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39117)[0m     @     0x560b82dd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f3442da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f344364baf _PyEval_EvalCodeWithName
[2m[36m(pid=39111)[0m     @     0x55f344365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39111)[0m     @     0x55f3442da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39111)[0m     @     0x55f344364baf _PyEval_EvalCodeWithName
[2m[36m(pid=39111)[0m     @     0x55f344365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39111)[0m     @     0x55f3442da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x56286d738baf _PyEval_EvalCodeWithName
[2m[36m(pid=39114)[0m     @     0x56286d739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39114)[0m     @     0x56286d6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39114)[0m     @     0x56286d738baf _PyEval_EvalCodeWithName
[2m[36m(pid=39114)[0m     @     0x56286d739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39114)[0m     @     0x56286d6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x7f8576ad44f5 at::Tensor::copy_()
[2m[36m(pid=39192)[0m     @     0x7f857cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39192)[0m     @     0x5618c4edcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39192)[0m     @     0x5618c4e37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x5618c4ec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39192)[0m     @     0x5618c4ec3a20 method_vectorcall
[2m[36m(pid=39192)[0m     @     0x5618c4e37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x5618c4ec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39192)[0m     @     0x5618c4ec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39192)[0m     @     0x5618c4e38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x5618c4ec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39192)[0m     @     0x5618c4ec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39192)[0m     @     0x5618c4e38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x5618c4ec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39192)[0m     @     0x5618c4ec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39192)[0m     @     0x5618c4e38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39192)[0m     @     0x5618c4ec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39192)[0m     @     0x5618c4ec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39192)[0m     @     0x5618c4e38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x7f4ed75864f5 at::Tensor::copy_()
[2m[36m(pid=39113)[0m     @     0x7f4edd63179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39113)[0m     @     0x55f0ed2fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39113)[0m     @     0x55f0ed256b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x55f0ed2e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39113)[0m     @     0x55f0ed2e2a20 method_vectorcall
[2m[36m(pid=39113)[0m     @     0x55f0ed256bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x55f0ed2e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39113)[0m     @     0x55f0ed2e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39113)[0m     @     0x55f0ed257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x55f0ed2e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39113)[0m     @     0x55f0ed2e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39113)[0m     @     0x55f0ed257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x55f0ed2e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39113)[0m     @     0x55f0ed2e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39113)[0m     @     0x55f0ed257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39113)[0m     @     0x55f0ed2e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39113)[0m     @     0x55f0ed2e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39113)[0m     @     0x55f0ed257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x7f4d1af388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39164)[0m     @     0x7f4d18a654f5 at::Tensor::copy_()
[2m[36m(pid=39164)[0m     @     0x7f4d1eb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39164)[0m     @     0x55562f3aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39164)[0m     @     0x55562f309b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f394baf _PyEval_EvalCodeWithName
[2m[36m(pid=39164)[0m     @     0x55562f395a20 method_vectorcall
[2m[36m(pid=39164)[0m     @     0x55562f309bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f394baf _PyEval_EvalCodeWithName
[2m[36m(pid=39164)[0m     @     0x55562f395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39177)[0m     @     0x7f325b49f4f5 at::Tensor::copy_()
[2m[36m(pid=39177)[0m     @     0x7f325d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39173)[0m     @     0x7ed074a654f5 at::Tensor::copy_()
[2m[36m(pid=39173)[0m     @     0x7ed076f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39173)[0m     @     0x7ed074a654f5 at::Tensor::copy_()
[2m[36m(pid=39098)[0m     @     0x7f274ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39098)[0m     @     0x7f274ee99388 at::native::copy_impl()
[2m[36m(pid=39098)[0m     @     0x7f274ee9b5a4 at::native::copy_()
[2m[36m(pid=39105)[0m     @     0x55eb27912643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39105)[0m     @     0x55eb27887689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x55eb27911baf _PyEval_EvalCodeWithName
[2m[36m(pid=39105)[0m     @     0x55eb27912643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39105)[0m     @     0x55eb27887689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x55eb27911baf _PyEval_EvalCodeWithName
[2m[36m(pid=39105)[0m     @     0x55eb27912643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39105)[0m     @     0x55eb27887689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39105)[0m     @     0x55eb27911baf _PyEval_EvalCodeWithName
[2m[36m(pid=39105)[0m     @     0x55eb27912643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39105)[0m     @     0x55eb27887689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39166)[0m     @     0x562afc4fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc584baf _PyEval_EvalCodeWithName
[2m[36m(pid=39166)[0m     @     0x562afc585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39166)[0m     @     0x562afc4fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc584baf _PyEval_EvalCodeWithName
[2m[36m(pid=39166)[0m     @     0x562afc585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39166)[0m     @     0x562afc4fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39166)[0m     @     0x562afc584baf _PyEval_EvalCodeWithName
[2m[36m(pid=39166)[0m     @     0x562afc585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39166)[0m     @     0x562afc4fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x7f8443c7179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39188)[0m     @     0x560bba4dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39188)[0m     @     0x560bba435b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x560bba4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x560bba4c1a20 method_vectorcall
[2m[36m(pid=39188)[0m     @     0x560bba435bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x560bba4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x560bba4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39188)[0m     @     0x560bba436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x560bba4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x560bba4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39188)[0m     @     0x560bba436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x560bba4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x560bba4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39188)[0m     @     0x560bba436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39188)[0m     @     0x560bba4c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39188)[0m     @     0x560bba4c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39188)[0m     @     0x560bba436689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x7f1957785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39119)[0m     @     0x7f1956c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39119)[0m     @     0x7f1956c25388 at::native::copy_impl()
[2m[36m(pid=39226)[0m     @     0x7f1a14f604f5 at::Tensor::copy_()
[2m[36m(pid=39226)[0m     @     0x7f1a1b00b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39226)[0m     @     0x5631de746fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39226)[0m     @     0x5631de6a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39226)[0m     @     0x5631de72cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39226)[0m     @     0x5631de72da20 method_vectorcall
[2m[36m(pid=39226)[0m     @     0x5631de6a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39226)[0m     @     0x5631de72cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39226)[0m     @     0x5631de72d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39226)[0m     @     0x5631de6a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39226)[0m     @     0x5631de72cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39226)[0m     @     0x5631de72d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39226)[0m     @     0x5631de6a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39226)[0m     @     0x5631de72cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39226)[0m     @     0x5631de72d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39226)[0m     @     0x5631de6a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39226)[0m     @     0x5631de72cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39226)[0m     @     0x5631de72d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39226)[0m     @     0x5631de6a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39107)[0m     @     0x7fc1b06fc4f5 at::Tensor::copy_()
[2m[36m(pid=39107)[0m     @     0x7fc1b67a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39107)[0m     @     0x56358343afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39107)[0m     @     0x563583395b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39107)[0m     @     0x563583420baf _PyEval_EvalCodeWithName
[2m[36m(pid=39107)[0m     @     0x563583421a20 method_vectorcall
[2m[36m(pid=39107)[0m     @     0x563583395bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x7f46e5b1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39118)[0m     @     0x7f46e36494f5 at::Tensor::copy_()
[2m[36m(pid=39118)[0m     @     0x7f46e96f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39118)[0m     @     0x5589e39e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39118)[0m     @     0x5589e3942b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x5589e39cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39118)[0m     @     0x5589e39cea20 method_vectorcall
[2m[36m(pid=39118)[0m     @     0x5589e3942bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x5589e39cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39118)[0m     @     0x5589e39ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39118)[0m     @     0x5589e3943689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x5589e39cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39118)[0m     @     0x5589e39ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39118)[0m     @     0x5589e3943689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x5589e39cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39118)[0m     @     0x5589e39ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39118)[0m     @     0x5589e3943689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39118)[0m     @     0x5589e39cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39118)[0m     @     0x5589e39ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39118)[0m     @     0x5589e3943689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x7efcb27d64f5 at::Tensor::copy_()
[2m[36m(pid=39158)[0m     @     0x7efcb4ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39158)[0m     @     0x7efcb27d64f5 at::Tensor::copy_()
[2m[36m(pid=39158)[0m     @     0x7efcb847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39158)[0m     @     0x564413ebffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39158)[0m     @     0x564413e1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x564413ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39158)[0m     @     0x564413ea6a20 method_vectorcall
[2m[36m(pid=39158)[0m     @     0x564413e1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x564413ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39158)[0m     @     0x564413ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39158)[0m     @     0x564413e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x564413ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39158)[0m     @     0x564413ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39158)[0m     @     0x564413e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x564413ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39158)[0m     @     0x564413ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39158)[0m     @     0x564413e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39158)[0m     @     0x564413ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39158)[0m     @     0x564413ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39158)[0m     @     0x564413e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x7f84cb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39115)[0m     @     0x7f84c8c764f5 at::Tensor::copy_()
[2m[36m(pid=39115)[0m     @     0x7f84ced2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39115)[0m     @     0x559b13e6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39115)[0m     @     0x559b13dcab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x559b13e55baf _PyEval_EvalCodeWithName
[2m[36m(pid=39115)[0m     @     0x559b13e56a20 method_vectorcall
[2m[36m(pid=39115)[0m     @     0x559b13dcabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x559b13e55baf _PyEval_EvalCodeWithName
[2m[36m(pid=39115)[0m     @     0x559b13e56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39115)[0m     @     0x559b13dcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x559b13e55baf _PyEval_EvalCodeWithName
[2m[36m(pid=39115)[0m     @     0x559b13e56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39115)[0m     @     0x559b13dcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x559b13e55baf _PyEval_EvalCodeWithName
[2m[36m(pid=39115)[0m     @     0x559b13e56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39115)[0m     @     0x559b13dcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39115)[0m     @     0x559b13e55baf _PyEval_EvalCodeWithName
[2m[36m(pid=39115)[0m     @     0x559b13e56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39115)[0m     @     0x559b13dcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x7f7f5c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39198)[0m     @     0x55f3ae333fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39198)[0m     @     0x55f3ae28eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x55f3ae319baf _PyEval_EvalCodeWithName
[2m[36m(pid=39198)[0m     @     0x55f3ae31aa20 method_vectorcall
[2m[36m(pid=39198)[0m     @     0x55f3ae28ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x55f3ae319baf _PyEval_EvalCodeWithName
[2m[36m(pid=39198)[0m     @     0x55f3ae31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39198)[0m     @     0x55f3ae28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x55f3ae319baf _PyEval_EvalCodeWithName
[2m[36m(pid=39198)[0m     @     0x55f3ae31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39198)[0m     @     0x55f3ae28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x55f3ae319baf _PyEval_EvalCodeWithName
[2m[36m(pid=39198)[0m     @     0x55f3ae31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39198)[0m     @     0x55f3ae28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39198)[0m     @     0x55f3ae319baf _PyEval_EvalCodeWithName
[2m[36m(pid=39198)[0m     @     0x55f3ae31a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39198)[0m     @     0x55f3ae28f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x7f3ef50374f5 at::Tensor::copy_()
[2m[36m(pid=39104)[0m     @     0x7f3efb0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39104)[0m     @     0x55f511506fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39104)[0m     @     0x55f511461b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x55f5114ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39104)[0m     @     0x55f5114eda20 method_vectorcall
[2m[36m(pid=39104)[0m     @     0x55f511461bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x55f5114ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39104)[0m     @     0x55f5114ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39104)[0m     @     0x55f511462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x55f5114ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39104)[0m     @     0x55f5114ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39104)[0m     @     0x55f511462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x55f5114ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39104)[0m     @     0x55f5114ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39104)[0m     @     0x55f511462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39104)[0m     @     0x55f5114ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39104)[0m     @     0x55f5114ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39104)[0m     @     0x55f511462689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c6356bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c63e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39165)[0m     @     0x5646c63e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39165)[0m     @     0x5646c6357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c63e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39165)[0m     @     0x5646c63e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39165)[0m     @     0x5646c6357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c63e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39165)[0m     @     0x5646c63e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39165)[0m     @     0x5646c6357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39165)[0m     @     0x5646c63e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39165)[0m     @     0x5646c63e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39165)[0m     @     0x5646c6357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70dd92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39170)[0m     @     0x55b70de1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39170)[0m     @     0x55b70de1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39170)[0m     @     0x55b70dd92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39174)[0m     @     0x55964354d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39161)[0m     @     0x56026c507baf _PyEval_EvalCodeWithName
[2m[36m(pid=39161)[0m     @     0x56026c508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39161)[0m     @     0x56026c47d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39161)[0m     @     0x56026c507baf _PyEval_EvalCodeWithName
[2m[36m(pid=39161)[0m     @     0x56026c508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39161)[0m     @     0x56026c47d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39161)[0m     @     0x56026c507baf _PyEval_EvalCodeWithName
[2m[36m(pid=39161)[0m     @     0x56026c508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39161)[0m     @     0x56026c47d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39161)[0m     @     0x56026c507baf _PyEval_EvalCodeWithName
[2m[36m(pid=39161)[0m     @     0x56026c508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39161)[0m     @     0x56026c47d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x7f306f5864f5 at::Tensor::copy_()
[2m[36m(pid=39101)[0m     @     0x7f307563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39101)[0m     @     0x55f1c1bbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39101)[0m     @     0x55f1c1b1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x55f1c1ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39101)[0m     @     0x55f1c1ba6a20 method_vectorcall
[2m[36m(pid=39101)[0m     @     0x55f1c1b1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x55f1c1ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39101)[0m     @     0x55f1c1ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39101)[0m     @     0x55f1c1b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x55f1c1ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39101)[0m     @     0x55f1c1ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39101)[0m     @     0x55f1c1b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x55f1c1ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39101)[0m     @     0x55f1c1ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39101)[0m     @     0x55f1c1b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39101)[0m     @     0x55f1c1ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39101)[0m     @     0x55f1c1ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39101)[0m     @     0x55f1c1b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f394baf _PyEval_EvalCodeWithName
[2m[36m(pid=39164)[0m     @     0x55562f395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39164)[0m     @     0x55562f30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f394baf _PyEval_EvalCodeWithName
[2m[36m(pid=39164)[0m     @     0x55562f395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39164)[0m     @     0x55562f30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39164)[0m     @     0x55562f394baf _PyEval_EvalCodeWithName
[2m[36m(pid=39164)[0m     @     0x55562f395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39164)[0m     @     0x55562f30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x7f325b49f4f5 at::Tensor::copy_()
[2m[36m(pid=39177)[0m     @     0x7f326154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39177)[0m     @     0x55632dd64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39177)[0m     @     0x55632dcbfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x55632dd4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39177)[0m     @     0x55632dd4ba20 method_vectorcall
[2m[36m(pid=39177)[0m     @     0x55632dcbfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x55632dd4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39177)[0m     @     0x55632dd4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39177)[0m     @     0x55632dcc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x55632dd4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39177)[0m     @     0x55632dd4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39177)[0m     @     0x55632dcc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x55632dd4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39177)[0m     @     0x55632dd4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39177)[0m     @     0x55632dcc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39177)[0m     @     0x55632dd4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39177)[0m     @     0x55632dd4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39177)[0m     @     0x55632dcc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x7ed07ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39173)[0m     @     0x55c51b8befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39173)[0m     @     0x55c51b819b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x55c51b8a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39173)[0m     @     0x55c51b8a5a20 method_vectorcall
[2m[36m(pid=39173)[0m     @     0x55c51b819bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x55c51b8a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39173)[0m     @     0x55c51b8a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39173)[0m     @     0x55c51b81a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x55c51b8a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39173)[0m     @     0x55c51b8a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39173)[0m     @     0x55c51b81a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x55c51b8a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39173)[0m     @     0x55c51b8a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39173)[0m     @     0x55c51b81a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39173)[0m     @     0x55c51b8a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39173)[0m     @     0x55c51b8a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39173)[0m     @     0x55c51b81a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x7f274f5864f5 at::Tensor::copy_()
[2m[36m(pid=39098)[0m     @     0x7f2751a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39119)[0m     @     0x7f1956c275a4 at::native::copy_()
[2m[36m(pid=39119)[0m     @     0x7f19573124f5 at::Tensor::copy_()
[2m[36m(pid=39107)[0m     @     0x563583420baf _PyEval_EvalCodeWithName
[2m[36m(pid=39107)[0m     @     0x563583421643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39107)[0m     @     0x563583396689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39107)[0m     @     0x563583420baf _PyEval_EvalCodeWithName
[2m[36m(pid=39107)[0m     @     0x563583421643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39107)[0m     @     0x563583396689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39107)[0m     @     0x563583420baf _PyEval_EvalCodeWithName
[2m[36m(pid=39107)[0m     @     0x563583421643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39107)[0m     @     0x563583396689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39107)[0m     @     0x563583420baf _PyEval_EvalCodeWithName
[2m[36m(pid=39107)[0m     @     0x563583421643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39107)[0m     @     0x563583396689 _PyEval_EvalFrameDefault.cold.2792
== Status ==
Memory usage on this node: 24.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_bb4dc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_bb4dc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_bb4dc_00000_0_2020-11-05_10-07-37/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
[2m[36m(pid=39098)[0m     @     0x7f274f5864f5 at::Tensor::copy_()
[2m[36m(pid=39098)[0m     @     0x7f275563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39098)[0m     @     0x55f119ab4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39098)[0m     @     0x55f119a0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x55f119a9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39098)[0m     @     0x55f119a9ba20 method_vectorcall
[2m[36m(pid=39098)[0m     @     0x55f119a0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x55f119a9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39098)[0m     @     0x55f119a9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39098)[0m     @     0x55f119a10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x55f119a9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39098)[0m     @     0x55f119a9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39098)[0m     @     0x55f119a10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x55f119a9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39098)[0m     @     0x55f119a9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39098)[0m     @     0x55f119a10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39098)[0m     @     0x55f119a9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39098)[0m     @     0x55f119a9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39098)[0m     @     0x55f119a10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x7f19597e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:07:44,803	ERROR trial_runner.py:567 -- Trial PPO_jss_env_bb4dc_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=39242, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:07:44,807	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:07:44,807	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
[2m[36m(pid=39119)[0m     @     0x7f19573124f5 at::Tensor::copy_()
[2m[36m(pid=39119)[0m     @     0x7f195d3bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39119)[0m     @     0x56439b5bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39119)[0m     @     0x56439b518b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x56439b5a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39119)[0m     @     0x56439b5a4a20 method_vectorcall
[2m[36m(pid=39119)[0m     @     0x56439b518bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x56439b5a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39119)[0m     @     0x56439b5a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39119)[0m     @     0x56439b519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x56439b5a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39119)[0m     @     0x56439b5a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39119)[0m     @     0x56439b519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x56439b5a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39119)[0m     @     0x56439b5a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39119)[0m     @     0x56439b519689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39119)[0m     @     0x56439b5a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39119)[0m     @     0x56439b5a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39119)[0m     @     0x56439b519689 _PyEval_EvalFrameDefault.cold.2792
[2m[33m(pid=raylet)[0m E1105 10:07:44.795258 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:07:44.796500 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:07:44,818	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:07:44,818	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:07:44,818	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
[2m[36m(pid=39242)[0m E1105 10:07:44.796416 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=39242)[0m E1105 10:07:44.796594 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=39242)[0m E1105 10:07:44.796761 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=39242)[0m E1105 10:07:44.796834 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=39242)[0m E1105 10:07:44.807859 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9ecf84e34eb8e61dc2621d1401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=39242)[0m E1105 10:07:44.808137 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f3cba62d4c01820bc2621d1401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=39242)[0m E1105 10:07:44.808488 39242 40373 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=39242)[0m E1105 10:07:44.809252 39242 40373 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=38e2d2d27b716bfb821ddf4301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=39242)[0m E1105 10:07:44.812713 39242 40373 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=8fbf1bd7de98d288c2621d1401000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_bb4dc_00000])
2020-11-05 10:07:44,829	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
[2m[33m(pid=raylet)[0m E1105 10:07:44.807876 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:07:44.815104 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:07:44.815445 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:07:44.820873 39055 39055 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=39242)[0m E1105 10:07:44.815107 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=39242)[0m E1105 10:07:44.815239 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=39242)[0m E1105 10:07:44.815429 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d88ec84d5baca957a97540c201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=39242)[0m E1105 10:07:44.815793 39242 40373 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4db1cba171d56c3356c9ec1501000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf