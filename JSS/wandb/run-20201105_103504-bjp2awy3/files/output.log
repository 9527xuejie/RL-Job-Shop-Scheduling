2020-11-05 10:35:08,186	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_93f54_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=22415)[0m 2020-11-05 10:35:11,001	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=22415)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=22415)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=22415)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=22415)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=22415)[0m 
[2m[36m(pid=22415)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=22441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22441)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22441)[0m *** SIGSEGV (@0x0) received by PID 22441 (TID 0x7f09f305b700) from PID 0; stack trace: ***
[2m[36m(pid=22441)[0m     @     0x7f09f2c34390 (unknown)
[2m[36m(pid=22441)[0m     @     0x7edaf2a13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22396)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22396)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22396)[0m *** SIGSEGV (@0x0) received by PID 22396 (TID 0x7fe7f80d0700) from PID 0; stack trace: ***
[2m[36m(pid=22396)[0m     @     0x7fe7f7ca9390 (unknown)
[2m[36m(pid=22396)[0m     @     0x7fb8f7bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22396)[0m     @     0x7fb8f72f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22382)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22382)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22382)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22382)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22382)[0m *** SIGSEGV (@0x0) received by PID 22382 (TID 0x7fd865587700) from PID 0; stack trace: ***
[2m[36m(pid=22382)[0m     @     0x7fd865160390 (unknown)
[2m[36m(pid=22382)[0m     @     0x7fa9650b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22382)[0m     @     0x7fa9647e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22433)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22433)[0m *** SIGSEGV (@0x0) received by PID 22433 (TID 0x7f7931581700) from PID 0; stack trace: ***
[2m[36m(pid=22433)[0m     @     0x7f793115a390 (unknown)
[2m[36m(pid=22433)[0m     @     0x7f4a310b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22365)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22365)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22365)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22365)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22365)[0m *** SIGSEGV (@0x0) received by PID 22365 (TID 0x7fa38191d700) from PID 0; stack trace: ***
[2m[36m(pid=22365)[0m     @     0x7fa3814f6390 (unknown)
[2m[36m(pid=22365)[0m     @     0x7f74812daf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22388)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22388)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22388)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22388)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22388)[0m *** SIGSEGV (@0x0) received by PID 22388 (TID 0x7ff2a5636700) from PID 0; stack trace: ***
[2m[36m(pid=22388)[0m     @     0x7ff2a520f390 (unknown)
[2m[36m(pid=22388)[0m     @     0x7fc3a50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22388)[0m     @     0x7fc3a47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22410)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22410)[0m *** SIGSEGV (@0x0) received by PID 22410 (TID 0x7fc4c4c8f700) from PID 0; stack trace: ***
[2m[36m(pid=22410)[0m     @     0x7fc4c4868390 (unknown)
[2m[36m(pid=22410)[0m     @     0x7f95c4774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22296)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22296)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22296)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22296)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22296)[0m *** SIGSEGV (@0x0) received by PID 22296 (TID 0x7fd2076ce700) from PID 0; stack trace: ***
[2m[36m(pid=22296)[0m     @     0x7fd2072a7390 (unknown)
[2m[36m(pid=22296)[0m     @     0x7fa307229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22296)[0m     @     0x7fa3069547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22424)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22424)[0m *** SIGSEGV (@0x0) received by PID 22424 (TID 0x7f89488d0700) from PID 0; stack trace: ***
[2m[36m(pid=22424)[0m     @     0x7f89484a9390 (unknown)
[2m[36m(pid=22424)[0m     @     0x7f5a48333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22424)[0m     @     0x7f5a47a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22390)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22390)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22390)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22390)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22390)[0m *** SIGSEGV (@0x0) received by PID 22390 (TID 0x7fb81a36a700) from PID 0; stack trace: ***
[2m[36m(pid=22390)[0m     @     0x7fb819f43390 (unknown)
[2m[36m(pid=22390)[0m     @     0x7f8919e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22390)[0m     @     0x7f891954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22381)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22381)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22381)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22381)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22381)[0m *** SIGSEGV (@0x0) received by PID 22381 (TID 0x7f669aca1700) from PID 0; stack trace: ***
[2m[36m(pid=22381)[0m     @     0x7f669a87a390 (unknown)
[2m[36m(pid=22381)[0m     @     0x7f379a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22381)[0m     @     0x7f3799ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22317)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22317)[0m *** SIGSEGV (@0x0) received by PID 22317 (TID 0x7faf59c50700) from PID 0; stack trace: ***
[2m[36m(pid=22317)[0m     @     0x7faf59829390 (unknown)
[2m[36m(pid=22317)[0m     @     0x7f80596f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22409)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22409)[0m *** SIGSEGV (@0x0) received by PID 22409 (TID 0x7ff9d70d7700) from PID 0; stack trace: ***
[2m[36m(pid=22409)[0m     @     0x7ff9d6cb0390 (unknown)
[2m[36m(pid=22409)[0m     @     0x7fcad6c50f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22409)[0m     @     0x7fcad637b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22399)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22399)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22399)[0m *** SIGSEGV (@0x0) received by PID 22399 (TID 0x7f861d742700) from PID 0; stack trace: ***
[2m[36m(pid=22399)[0m     @     0x7f861d31b390 (unknown)
[2m[36m(pid=22399)[0m     @     0x7f571d28af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22399)[0m     @     0x7f571c9b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22387)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22387)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22387)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22387)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22387)[0m *** SIGSEGV (@0x0) received by PID 22387 (TID 0x7f12cd639700) from PID 0; stack trace: ***
[2m[36m(pid=22387)[0m     @     0x7f12cd212390 (unknown)
[2m[36m(pid=22387)[0m     @     0x7ee3cd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22387)[0m     @     0x7ee3cc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22427)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22427)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22427)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22427)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22427)[0m *** SIGSEGV (@0x0) received by PID 22427 (TID 0x7ff4bcf2c700) from PID 0; stack trace: ***
[2m[36m(pid=22427)[0m     @     0x7ff4bcb05390 (unknown)
[2m[36m(pid=22427)[0m     @     0x7fc5bc9e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22427)[0m     @     0x7fc5bc1137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22378)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22378)[0m *** SIGSEGV (@0x0) received by PID 22378 (TID 0x7f322aedf700) from PID 0; stack trace: ***
[2m[36m(pid=22378)[0m     @     0x7f322aab8390 (unknown)
[2m[36m(pid=22378)[0m     @     0x7f032a9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22310)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22310)[0m *** SIGSEGV (@0x0) received by PID 22310 (TID 0x7fbe3d40e700) from PID 0; stack trace: ***
[2m[36m(pid=22310)[0m     @     0x7fbe3cfe7390 (unknown)
[2m[36m(pid=22422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22422)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22422)[0m *** SIGSEGV (@0x0) received by PID 22422 (TID 0x7f0bb8972700) from PID 0; stack trace: ***
[2m[36m(pid=22422)[0m     @     0x7f0bb854b390 (unknown)
[2m[36m(pid=22422)[0m     @     0x7edcb84d9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22422)[0m     @     0x7edcb7c047db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22405)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22405)[0m *** SIGSEGV (@0x0) received by PID 22405 (TID 0x7f9e065e5700) from PID 0; stack trace: ***
[2m[36m(pid=22327)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22327)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22327)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22327)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22327)[0m *** SIGSEGV (@0x0) received by PID 22327 (TID 0x7fd6720d0700) from PID 0; stack trace: ***
[2m[36m(pid=22327)[0m     @     0x7fd671ca9390 (unknown)
[2m[36m(pid=22335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22335)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22335)[0m *** SIGSEGV (@0x0) received by PID 22335 (TID 0x7f1637ad9700) from PID 0; stack trace: ***
[2m[36m(pid=22335)[0m     @     0x7f16376b2390 (unknown)
[2m[36m(pid=22376)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22376)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22376)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22376)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22376)[0m *** SIGSEGV (@0x0) received by PID 22376 (TID 0x7f52e0e9d700) from PID 0; stack trace: ***
[2m[36m(pid=22376)[0m     @     0x7f52e0a76390 (unknown)
[2m[36m(pid=22376)[0m     @     0x7f23e0774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22376)[0m     @     0x7f23dfe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22315)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22315)[0m *** SIGSEGV (@0x0) received by PID 22315 (TID 0x7f7788ec1700) from PID 0; stack trace: ***
[2m[36m(pid=22315)[0m     @     0x7f7788a9a390 (unknown)
[2m[36m(pid=22315)[0m     @     0x7f48889e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22355)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22355)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22355)[0m *** SIGSEGV (@0x0) received by PID 22355 (TID 0x7fb594556700) from PID 0; stack trace: ***
[2m[36m(pid=22355)[0m     @     0x7fb59412f390 (unknown)
[2m[36m(pid=22355)[0m     @     0x7f8693eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22355)[0m     @     0x7f86935e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22411)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22411)[0m *** SIGSEGV (@0x0) received by PID 22411 (TID 0x7f95ae224700) from PID 0; stack trace: ***
[2m[36m(pid=22411)[0m     @     0x7f95addfd390 (unknown)
[2m[36m(pid=22411)[0m     @     0x7f66add77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22411)[0m     @     0x7f66ad4a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22383)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22383)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22383)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22383)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22383)[0m *** SIGSEGV (@0x0) received by PID 22383 (TID 0x7fa8085da700) from PID 0; stack trace: ***
[2m[36m(pid=22383)[0m     @     0x7fa8081b3390 (unknown)
[2m[36m(pid=22383)[0m     @     0x7f79080cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22383)[0m     @     0x7f79077f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22431)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22431)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22431)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22431)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22431)[0m *** SIGSEGV (@0x0) received by PID 22431 (TID 0x7f8067cd9700) from PID 0; stack trace: ***
[2m[36m(pid=22431)[0m     @     0x7f80678b2390 (unknown)
[2m[36m(pid=22431)[0m     @     0x7f516784cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22431)[0m     @     0x7f5166f777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22311)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22311)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22311)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22311)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22311)[0m *** SIGSEGV (@0x0) received by PID 22311 (TID 0x7f1c670f0700) from PID 0; stack trace: ***
[2m[36m(pid=22294)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22294)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22294)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22294)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22294)[0m *** SIGSEGV (@0x0) received by PID 22294 (TID 0x7f8ce50c9700) from PID 0; stack trace: ***
[2m[36m(pid=22354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22354)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22354)[0m *** SIGSEGV (@0x0) received by PID 22354 (TID 0x7f5ab4334700) from PID 0; stack trace: ***
[2m[36m(pid=22354)[0m     @     0x7f5ab3f0d390 (unknown)
[2m[36m(pid=22354)[0m     @     0x7f2bb3e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22354)[0m     @     0x7f2bb35367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22316)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22316)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22316)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22316)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22316)[0m *** SIGSEGV (@0x0) received by PID 22316 (TID 0x7f2cef958700) from PID 0; stack trace: ***
[2m[36m(pid=22316)[0m     @     0x7f2cef531390 (unknown)
[2m[36m(pid=22316)[0m     @     0x7efdef4cff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22316)[0m     @     0x7efdeebfa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22441)[0m     @     0x7edaf213e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22441)[0m     @     0x7edaf21418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22396)[0m     @     0x7fb8f72f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22396)[0m     @     0x7fb8f72f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=22382)[0m     @     0x7fa9647e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22382)[0m     @     0x7fa9647e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=22433)[0m     @     0x7f4a307e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22365)[0m     @     0x7f7480a057db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22365)[0m     @     0x7f7480a088f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22388)[0m     @     0x7fc3a47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22388)[0m     @     0x7fc3a47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=22410)[0m     @     0x7f95c3e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22410)[0m     @     0x7f95c3ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22296)[0m     @     0x7fa3069578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22424)[0m     @     0x7f5a47a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22424)[0m     @     0x7f5a47a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=22390)[0m     @     0x7f89195528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22381)[0m     @     0x7f3799ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22381)[0m     @     0x7f3799ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=22317)[0m     @     0x7f8058e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22317)[0m     @     0x7f8058e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22409)[0m     @     0x7fcad637e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22399)[0m     @     0x7f571c9b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22387)[0m     @     0x7ee3cc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22387)[0m     @     0x7ee3cc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=22427)[0m     @     0x7fc5bc1168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22378)[0m     @     0x7f032a0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22378)[0m     @     0x7f032a0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22310)[0m     @     0x7f8f3cea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22310)[0m     @     0x7f8f3c5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22310)[0m     @     0x7f8f3c5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22422)[0m     @     0x7edcb7c078f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22405)[0m     @     0x7f9e061be390 (unknown)
[2m[36m(pid=22405)[0m     @     0x7f6f0613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22405)[0m     @     0x7f6f058657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22327)[0m     @     0x7fa771c51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22327)[0m     @     0x7fa77137c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22327)[0m     @     0x7fa77137f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22335)[0m     @     0x7ee73761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22335)[0m     @     0x7ee736d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22335)[0m     @     0x7ee736d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22329)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22376)[0m     @     0x7f23dfea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22376)[0m     @     0x7f23dfea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=22315)[0m     @     0x7f48881137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22315)[0m     @     0x7f48881168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22315)[0m     @     0x7f4888116ad3 at::TensorIterator::for_each()
[2m[36m(pid=22355)[0m     @     0x7f86935e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22355)[0m     @     0x7f86935e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=22411)[0m     @     0x7f66ad4a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22411)[0m     @     0x7f66ad4a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=22411)[0m     @     0x7f66ad4a5d91 at::TensorIterator::for_each()
[2m[36m(pid=22383)[0m     @     0x7f79077fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22431)[0m     @     0x7f5166f7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22431)[0m     @     0x7f5166f7aad3 at::TensorIterator::for_each()
[2m[36m(pid=22311)[0m     @     0x7f1c66cc9390 (unknown)
[2m[36m(pid=22311)[0m     @     0x7eed66c6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22311)[0m     @     0x7eed663957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22294)[0m     @     0x7f8ce4ca2390 (unknown)
[2m[36m(pid=22294)[0m     @     0x7f5de1940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22294)[0m     @     0x7f5de106b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22417)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22297)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22297)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22297)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22379)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22379)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22379)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22379)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22379)[0m *** SIGSEGV (@0x0) received by PID 22379 (TID 0x7fd1cc9bf700) from PID 0; stack trace: ***
[2m[36m(pid=22305)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22305)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22305)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22300)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22300)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22300)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22362)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22362)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22362)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22362)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22362)[0m *** SIGSEGV (@0x0) received by PID 22362 (TID 0x7fee43016700) from PID 0; stack trace: ***
[2m[36m(pid=22362)[0m     @     0x7fee42bef390 (unknown)
[2m[36m(pid=22362)[0m     @     0x7fbf42ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22362)[0m     @     0x7fbf421fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22354)[0m     @     0x7f2bb35398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22354)[0m     @     0x7f2bb3539ad3 at::TensorIterator::for_each()
[2m[36m(pid=22316)[0m     @     0x7efdeebfd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22316)[0m     @     0x7efdeebfdad3 at::TensorIterator::for_each()
[2m[36m(pid=22316)[0m     @     0x7efdeebfdd91 at::TensorIterator::for_each()
[2m[36m(pid=22322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22322)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22322)[0m *** SIGSEGV (@0x0) received by PID 22322 (TID 0x7f4bd4aa2700) from PID 0; stack trace: ***
[2m[36m(pid=22441)[0m     @     0x7edaf2141ad3 at::TensorIterator::for_each()
[2m[36m(pid=22396)[0m     @     0x7fb8f72f5d91 at::TensorIterator::for_each()
[2m[36m(pid=22396)[0m     @     0x7fb8f7bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22396)[0m     @     0x7fb8f7bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22396)[0m     @     0x7fb8f709da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22382)[0m     @     0x7fa9647e3d91 at::TensorIterator::for_each()
[2m[36m(pid=22382)[0m     @     0x7fa9650c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22382)[0m     @     0x7fa9650e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22382)[0m     @     0x7fa96458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22433)[0m     @     0x7f4a307e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22433)[0m     @     0x7f4a307e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=22365)[0m     @     0x7f7480a08ad3 at::TensorIterator::for_each()
[2m[36m(pid=22388)[0m     @     0x7fc3a47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=22388)[0m     @     0x7fc3a50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22388)[0m     @     0x7fc3a50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22388)[0m     @     0x7fc3a458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22388)[0m     @     0x7fc3a4589388 at::native::copy_impl()
[2m[36m(pid=22410)[0m     @     0x7f95c3ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=22410)[0m     @     0x7f95c3ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=22410)[0m     @     0x7f95c4785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22410)[0m     @     0x7f95c47a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22402)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22402)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22402)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22402)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22402)[0m *** SIGSEGV (@0x0) received by PID 22402 (TID 0x7fbe7d211700) from PID 0; stack trace: ***
[2m[36m(pid=22296)[0m     @     0x7fa306957ad3 at::TensorIterator::for_each()
[2m[36m(pid=22296)[0m     @     0x7fa306957d91 at::TensorIterator::for_each()
[2m[36m(pid=22296)[0m     @     0x7fa30723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22296)[0m     @     0x7fa30725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22424)[0m     @     0x7f5a47a61d91 at::TensorIterator::for_each()
[2m[36m(pid=22424)[0m     @     0x7f5a48344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22424)[0m     @     0x7f5a48367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22424)[0m     @     0x7f5a47809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22390)[0m     @     0x7f8919552ad3 at::TensorIterator::for_each()
[2m[36m(pid=22390)[0m     @     0x7f8919552d91 at::TensorIterator::for_each()
[2m[36m(pid=22390)[0m     @     0x7f8919e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22390)[0m     @     0x7f8919e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22381)[0m     @     0x7f3799ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=22381)[0m     @     0x7f379a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22381)[0m     @     0x7f379a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22381)[0m     @     0x7f3799c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22381)[0m     @     0x7f3799c8f388 at::native::copy_impl()
[2m[36m(pid=22317)[0m     @     0x7f8058e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=22317)[0m     @     0x7f8058e22d91 at::TensorIterator::for_each()
[2m[36m(pid=22317)[0m     @     0x7f8059705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22317)[0m     @     0x7f8059728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22409)[0m     @     0x7fcad637ead3 at::TensorIterator::for_each()
[2m[36m(pid=22409)[0m     @     0x7fcad637ed91 at::TensorIterator::for_each()
[2m[36m(pid=22409)[0m     @     0x7fcad6c61b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22409)[0m     @     0x7fcad6c84c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22399)[0m     @     0x7f571c9b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=22399)[0m     @     0x7f571c9b8d91 at::TensorIterator::for_each()
[2m[36m(pid=22399)[0m     @     0x7f571d29bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22399)[0m     @     0x7f571d2bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22312)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22387)[0m     @     0x7ee3cc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=22387)[0m     @     0x7ee3cd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22387)[0m     @     0x7ee3cd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22387)[0m     @     0x7ee3cc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22387)[0m     @     0x7ee3cc589388 at::native::copy_impl()
[2m[36m(pid=22427)[0m     @     0x7fc5bc116ad3 at::TensorIterator::for_each()
[2m[36m(pid=22427)[0m     @     0x7fc5bc116d91 at::TensorIterator::for_each()
[2m[36m(pid=22427)[0m     @     0x7fc5bc9f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22427)[0m     @     0x7fc5bca1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22401)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22378)[0m     @     0x7f032a0faad3 at::TensorIterator::for_each()
[2m[36m(pid=22378)[0m     @     0x7f032a0fad91 at::TensorIterator::for_each()
[2m[36m(pid=22378)[0m     @     0x7f032a9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22378)[0m     @     0x7f032aa00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22301)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22301)[0m *** SIGSEGV (@0x0) received by PID 22301 (TID 0x7f4258f0d700) from PID 0; stack trace: ***
[2m[36m(pid=22301)[0m     @     0x7f4258ae6390 (unknown)
[2m[36m(pid=22310)[0m     @     0x7f8f3c5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=22310)[0m     @     0x7f8f3c5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=22310)[0m     @     0x7f8f3ceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22310)[0m     @     0x7f8f3ced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22422)[0m     @     0x7edcb7c07ad3 at::TensorIterator::for_each()
[2m[36m(pid=22422)[0m     @     0x7edcb7c07d91 at::TensorIterator::for_each()
[2m[36m(pid=22422)[0m     @     0x7edcb84eab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22422)[0m     @     0x7edcb850dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22405)[0m     @     0x7f6f058688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22405)[0m     @     0x7f6f05868ad3 at::TensorIterator::for_each()
[2m[36m(pid=22405)[0m     @     0x7f6f05868d91 at::TensorIterator::for_each()
[2m[36m(pid=22436)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22436)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22436)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22436)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22436)[0m *** SIGSEGV (@0x0) received by PID 22436 (TID 0x7ff288324700) from PID 0; stack trace: ***
[2m[36m(pid=22436)[0m     @     0x7ff287efd390 (unknown)
[2m[36m(pid=22404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22404)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22404)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22404)[0m *** SIGSEGV (@0x0) received by PID 22404 (TID 0x7ff9de44a700) from PID 0; stack trace: ***
[2m[36m(pid=22327)[0m     @     0x7fa77137fad3 at::TensorIterator::for_each()
[2m[36m(pid=22327)[0m     @     0x7fa77137fd91 at::TensorIterator::for_each()
[2m[36m(pid=22327)[0m     @     0x7fa771c62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22327)[0m     @     0x7fa771c85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22335)[0m     @     0x7ee736d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=22335)[0m     @     0x7ee736d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=22335)[0m     @     0x7ee737630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22335)[0m     @     0x7ee737653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22329)[0m *** SIGSEGV (@0x0) received by PID 22329 (TID 0x7f9367160700) from PID 0; stack trace: ***
[2m[36m(pid=22329)[0m     @     0x7f9366d39390 (unknown)
[2m[36m(pid=22329)[0m     @     0x7f6466ccff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22306)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22306)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22306)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22306)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22306)[0m *** SIGSEGV (@0x0) received by PID 22306 (TID 0x7f4bcdb49700) from PID 0; stack trace: ***
[2m[36m(pid=22324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22324)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22324)[0m *** SIGSEGV (@0x0) received by PID 22324 (TID 0x7f4840e75700) from PID 0; stack trace: ***
[2m[36m(pid=22324)[0m     @     0x7f4840a4e390 (unknown)
[2m[36m(pid=22376)[0m     @     0x7f23dfea2d91 at::TensorIterator::for_each()
[2m[36m(pid=22376)[0m     @     0x7f23e0785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22376)[0m     @     0x7f23e07a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22376)[0m     @     0x7f23dfc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22376)[0m     @     0x7f23dfc48388 at::native::copy_impl()
[2m[36m(pid=22364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22364)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22364)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22364)[0m *** SIGSEGV (@0x0) received by PID 22364 (TID 0x7f4429567700) from PID 0; stack trace: ***
[2m[36m(pid=22309)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22309)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22309)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22309)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22309)[0m *** SIGSEGV (@0x0) received by PID 22309 (TID 0x7f3fe0093700) from PID 0; stack trace: ***
[2m[36m(pid=22315)[0m     @     0x7f4888116d91 at::TensorIterator::for_each()
[2m[36m(pid=22315)[0m     @     0x7f48889f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22315)[0m     @     0x7f4888a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22355)[0m     @     0x7f86935e4d91 at::TensorIterator::for_each()
[2m[36m(pid=22355)[0m     @     0x7f8693ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22355)[0m     @     0x7f8693eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22355)[0m     @     0x7f869338ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22355)[0m     @     0x7f869338a388 at::native::copy_impl()
[2m[36m(pid=22411)[0m     @     0x7f66add88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22411)[0m     @     0x7f66addabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22411)[0m     @     0x7f66ad24da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22411)[0m     @     0x7f66ad24b388 at::native::copy_impl()
[2m[36m(pid=22383)[0m     @     0x7f79077fbad3 at::TensorIterator::for_each()
[2m[36m(pid=22383)[0m     @     0x7f79077fbd91 at::TensorIterator::for_each()
[2m[36m(pid=22431)[0m     @     0x7f5166f7ad91 at::TensorIterator::for_each()
[2m[36m(pid=22431)[0m     @     0x7f516785db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22431)[0m     @     0x7f5167880c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22431)[0m     @     0x7f5166d22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22311)[0m     @     0x7eed663988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22311)[0m     @     0x7eed66398ad3 at::TensorIterator::for_each()
[2m[36m(pid=22377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22377)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22429)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22313)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22313)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22313)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22313)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22313)[0m *** SIGSEGV (@0x0) received by PID 22313 (TID 0x7fddb8e87700) from PID 0; stack trace: ***
[2m[36m(pid=22302)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22302)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22302)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22302)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22302)[0m *** SIGSEGV (@0x0) received by PID 22302 (TID 0x7f936a9ce700) from PID 0; stack trace: ***
[2m[36m(pid=22308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22308)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22308)[0m *** SIGSEGV (@0x0) received by PID 22308 (TID 0x7f65db0e7700) from PID 0; stack trace: ***
[2m[36m(pid=22319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22319)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22319)[0m *** SIGSEGV (@0x0) received by PID 22319 (TID 0x7fdbbe192700) from PID 0; stack trace: ***
[2m[36m(pid=22299)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22299)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22299)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22299)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22299)[0m *** SIGSEGV (@0x0) received by PID 22299 (TID 0x7fac6e9c1700) from PID 0; stack trace: ***
[2m[36m(pid=22299)[0m     @     0x7fac6e59a390 (unknown)
[2m[36m(pid=22299)[0m     @     0x7f7d6e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22299)[0m     @     0x7f7d6dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22366)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22366)[0m *** SIGSEGV (@0x0) received by PID 22366 (TID 0x7fa7775f6700) from PID 0; stack trace: ***
[2m[36m(pid=22366)[0m     @     0x7fa7771cf390 (unknown)
[2m[36m(pid=22366)[0m     @     0x7f7877124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22294)[0m     @     0x7f5de106e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22294)[0m     @     0x7f5de106ead3 at::TensorIterator::for_each()
[2m[36m(pid=22294)[0m     @     0x7f5de106ed91 at::TensorIterator::for_each()
[2m[36m(pid=22294)[0m     @     0x7f5de1951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22294)[0m     @     0x7f5de1974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22412)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22412)[0m *** SIGSEGV (@0x0) received by PID 22412 (TID 0x7f34bd0b1700) from PID 0; stack trace: ***
[2m[36m(pid=22412)[0m     @     0x7f34bcc8a390 (unknown)
[2m[36m(pid=22412)[0m     @     0x7f05bca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22395)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22392)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22392)[0m *** SIGSEGV (@0x0) received by PID 22392 (TID 0x7f5b78771700) from PID 0; stack trace: ***
[2m[36m(pid=22392)[0m     @     0x7f5b7834a390 (unknown)
[2m[36m(pid=22369)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22369)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22369)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22369)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22369)[0m *** SIGSEGV (@0x0) received by PID 22369 (TID 0x7f4d83e94700) from PID 0; stack trace: ***
[2m[36m(pid=22369)[0m     @     0x7f4d83a6d390 (unknown)
[2m[36m(pid=22380)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22380)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22380)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22380)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22380)[0m *** SIGSEGV (@0x0) received by PID 22380 (TID 0x7fb34fe74700) from PID 0; stack trace: ***
[2m[36m(pid=22380)[0m     @     0x7fb34fa4d390 (unknown)
[2m[36m(pid=22380)[0m     @     0x7f844f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22380)[0m     @     0x7f844f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22380)[0m     @     0x7f844f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22298)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22298)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22298)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22298)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22298)[0m *** SIGSEGV (@0x0) received by PID 22298 (TID 0x7f5d78d04700) from PID 0; stack trace: ***
[2m[36m(pid=22298)[0m     @     0x7f5d788dd390 (unknown)
[2m[36m(pid=22298)[0m     @     0x7f2e78864f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22295)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22295)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22295)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22295)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22295)[0m *** SIGSEGV (@0x0) received by PID 22295 (TID 0x7f252a11e700) from PID 0; stack trace: ***
[2m[36m(pid=22295)[0m     @     0x7f2529cf7390 (unknown)
[2m[36m(pid=22295)[0m     @     0x7ef629c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22295)[0m     @     0x7ef6293387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22368)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22368)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22368)[0m *** SIGSEGV (@0x0) received by PID 22368 (TID 0x7f6ba42c0700) from PID 0; stack trace: ***
[2m[36m(pid=22368)[0m     @     0x7f6ba3e99390 (unknown)
[2m[36m(pid=22368)[0m     @     0x7f3ca3e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22368)[0m     @     0x7f3ca35367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22330)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22330)[0m *** SIGSEGV (@0x0) received by PID 22330 (TID 0x7f3eaf459700) from PID 0; stack trace: ***
[2m[36m(pid=22330)[0m     @     0x7f3eaf032390 (unknown)
[2m[36m(pid=22330)[0m     @     0x7f0faefd4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22330)[0m     @     0x7f0fae6ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22393)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22393)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22393)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22393)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22393)[0m *** SIGSEGV (@0x0) received by PID 22393 (TID 0x7fecb0d02700) from PID 0; stack trace: ***
[2m[36m(pid=22359)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22359)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22359)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22359)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22359)[0m *** SIGSEGV (@0x0) received by PID 22359 (TID 0x7f3fc3b79700) from PID 0; stack trace: ***
[2m[36m(pid=22397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22397)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22397)[0m *** SIGSEGV (@0x0) received by PID 22397 (TID 0x7f188a008700) from PID 0; stack trace: ***
[2m[36m(pid=22397)[0m     @     0x7f1889be1390 (unknown)
[2m[36m(pid=22314)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22314)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22314)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22314)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22314)[0m *** SIGSEGV (@0x0) received by PID 22314 (TID 0x7f6496198700) from PID 0; stack trace: ***
[2m[36m(pid=22314)[0m     @     0x7f6495d71390 (unknown)
[2m[36m(pid=22314)[0m     @     0x7f3595d06f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22314)[0m     @     0x7f35954317db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22417)[0m *** SIGSEGV (@0x0) received by PID 22417 (TID 0x7fb998f1c700) from PID 0; stack trace: ***
[2m[36m(pid=22417)[0m     @     0x7fb998af5390 (unknown)
[2m[36m(pid=22417)[0m     @     0x7f8a98825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22417)[0m     @     0x7f8a97f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22417)[0m     @     0x7f8a97f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22297)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22297)[0m *** SIGSEGV (@0x0) received by PID 22297 (TID 0x7fd346eaf700) from PID 0; stack trace: ***
[2m[36m(pid=22297)[0m     @     0x7fd346a88390 (unknown)
[2m[36m(pid=22297)[0m     @     0x7fa4469ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22297)[0m     @     0x7fa4460f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22379)[0m     @     0x7fd1cc598390 (unknown)
[2m[36m(pid=22379)[0m     @     0x7fa2cc536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22379)[0m     @     0x7fa2cbc617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22379)[0m     @     0x7fa2cbc648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22305)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22305)[0m *** SIGSEGV (@0x0) received by PID 22305 (TID 0x7f43b0289700) from PID 0; stack trace: ***
[2m[36m(pid=22305)[0m     @     0x7f43afe62390 (unknown)
[2m[36m(pid=22305)[0m     @     0x7f14afddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22305)[0m     @     0x7f14af5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22300)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22300)[0m *** SIGSEGV (@0x0) received by PID 22300 (TID 0x7f0a95ffa700) from PID 0; stack trace: ***
[2m[36m(pid=22300)[0m     @     0x7f0a95bd3390 (unknown)
[2m[36m(pid=22300)[0m     @     0x7edb95b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22300)[0m     @     0x7edb952a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22362)[0m     @     0x7fbf421ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22362)[0m     @     0x7fbf421ffad3 at::TensorIterator::for_each()
[2m[36m(pid=22354)[0m     @     0x7f2bb3539d91 at::TensorIterator::for_each()
[2m[36m(pid=22354)[0m     @     0x7f2bb3e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22354)[0m     @     0x7f2bb3e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22354)[0m     @     0x7f2bb32e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22354)[0m     @     0x7f2bb32df388 at::native::copy_impl()
[2m[36m(pid=22316)[0m     @     0x7efdef4e0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22316)[0m     @     0x7efdef503c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22316)[0m     @     0x7efdee9a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22316)[0m     @     0x7efdee9a3388 at::native::copy_impl()
[2m[36m(pid=22322)[0m     @     0x7f4bd467b390 (unknown)
[2m[36m(pid=22322)[0m     @     0x7f1cd4563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22322)[0m     @     0x7f1cd3c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22322)[0m     @     0x7f1cd3c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22441)[0m     @     0x7edaf2141d91 at::TensorIterator::for_each()
[2m[36m(pid=22441)[0m     @     0x7edaf2a24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22441)[0m     @     0x7edaf2a47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22441)[0m     @     0x7edaf1ee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22441)[0m     @     0x7edaf1ee7388 at::native::copy_impl()
[2m[36m(pid=22396)[0m     @     0x7fb8f709b388 at::native::copy_impl()
[2m[36m(pid=22396)[0m     @     0x7fb8f709d5a4 at::native::copy_()
[2m[36m(pid=22396)[0m     @     0x7fb8f77884f5 at::Tensor::copy_()
[2m[36m(pid=22382)[0m     @     0x7fa964589388 at::native::copy_impl()
[2m[36m(pid=22382)[0m     @     0x7fa96458b5a4 at::native::copy_()
[2m[36m(pid=22382)[0m     @     0x7fa964c764f5 at::Tensor::copy_()
[2m[36m(pid=22433)[0m     @     0x7f4a307e3d91 at::TensorIterator::for_each()
[2m[36m(pid=22433)[0m     @     0x7f4a310c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22433)[0m     @     0x7f4a310e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22433)[0m     @     0x7f4a3058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22433)[0m     @     0x7f4a30589388 at::native::copy_impl()
[2m[36m(pid=22365)[0m     @     0x7f7480a08d91 at::TensorIterator::for_each()
[2m[36m(pid=22365)[0m     @     0x7f74812ebb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22365)[0m     @     0x7f748130ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22365)[0m     @     0x7f74807b0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22365)[0m     @     0x7f74807ae388 at::native::copy_impl()
[2m[36m(pid=22388)[0m     @     0x7fc3a458b5a4 at::native::copy_()
[2m[36m(pid=22388)[0m     @     0x7fc3a4c764f5 at::Tensor::copy_()
[2m[36m(pid=22388)[0m     @     0x7fc3a71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22410)[0m     @     0x7f95c3c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22410)[0m     @     0x7f95c3c48388 at::native::copy_impl()
[2m[36m(pid=22410)[0m     @     0x7f95c3c4a5a4 at::native::copy_()
[2m[36m(pid=22402)[0m     @     0x7fbe7cdea390 (unknown)
[2m[36m(pid=22402)[0m     @     0x7f8f7cd64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22402)[0m     @     0x7f8f7c48f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22402)[0m     @     0x7f8f7c4928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22296)[0m     @     0x7fa3066ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22296)[0m     @     0x7fa3066fd388 at::native::copy_impl()
[2m[36m(pid=22296)[0m     @     0x7fa3066ff5a4 at::native::copy_()
[2m[36m(pid=22428)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22428)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22428)[0m *** SIGSEGV (@0x0) received by PID 22428 (TID 0x7f06e1611700) from PID 0; stack trace: ***
[2m[36m(pid=22428)[0m     @     0x7f06e11ea390 (unknown)
[2m[36m(pid=22428)[0m     @     0x7ed7e0d87f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22428)[0m     @     0x7ed7e04b27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22424)[0m     @     0x7f5a47807388 at::native::copy_impl()
[2m[36m(pid=22424)[0m     @     0x7f5a478095a4 at::native::copy_()
[2m[36m(pid=22424)[0m     @     0x7f5a47ef44f5 at::Tensor::copy_()
[2m[36m(pid=22390)[0m     @     0x7f89192faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22390)[0m     @     0x7f89192f8388 at::native::copy_impl()
[2m[36m(pid=22390)[0m     @     0x7f89192fa5a4 at::native::copy_()
[2m[36m(pid=22381)[0m     @     0x7f3799c915a4 at::native::copy_()
[2m[36m(pid=22381)[0m     @     0x7f379a37c4f5 at::Tensor::copy_()
[2m[36m(pid=22317)[0m     @     0x7f8058bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22317)[0m     @     0x7f8058bc8388 at::native::copy_impl()
[2m[36m(pid=22317)[0m     @     0x7f8058bca5a4 at::native::copy_()
[2m[36m(pid=22317)[0m     @     0x7f80592b54f5 at::Tensor::copy_()
[2m[36m(pid=22317)[0m     @     0x7f805b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22409)[0m     @     0x7fcad6126a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22409)[0m     @     0x7fcad6124388 at::native::copy_impl()
[2m[36m(pid=22409)[0m     @     0x7fcad61265a4 at::native::copy_()
[2m[36m(pid=22409)[0m     @     0x7fcad68114f5 at::Tensor::copy_()
[2m[36m(pid=22409)[0m     @     0x7fcad8ce48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22399)[0m     @     0x7f571c760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22399)[0m     @     0x7f571c75e388 at::native::copy_impl()
[2m[36m(pid=22399)[0m     @     0x7f571c7605a4 at::native::copy_()
[2m[36m(pid=22399)[0m     @     0x7f571ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=22399)[0m     @     0x7f571f31e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22312)[0m *** SIGSEGV (@0x0) received by PID 22312 (TID 0x7f418c665700) from PID 0; stack trace: ***
[2m[36m(pid=22312)[0m     @     0x7f418c23e390 (unknown)
[2m[36m(pid=22312)[0m     @     0x7f128c0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22312)[0m     @     0x7f128b7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22312)[0m     @     0x7f128b7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22387)[0m     @     0x7ee3cc58b5a4 at::native::copy_()
[2m[36m(pid=22387)[0m     @     0x7ee3ccc764f5 at::Tensor::copy_()
[2m[36m(pid=22387)[0m     @     0x7ee3cf1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22427)[0m     @     0x7fc5bbebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22427)[0m     @     0x7fc5bbebc388 at::native::copy_impl()
[2m[36m(pid=22427)[0m     @     0x7fc5bbebe5a4 at::native::copy_()
[2m[36m(pid=22427)[0m     @     0x7fc5bc5a94f5 at::Tensor::copy_()
[2m[36m(pid=22401)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22401)[0m *** SIGSEGV (@0x0) received by PID 22401 (TID 0x7f7aa1202700) from PID 0; stack trace: ***
[2m[36m(pid=22401)[0m     @     0x7f7aa0ddb390 (unknown)
[2m[36m(pid=22401)[0m     @     0x7f4ba0d64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22401)[0m     @     0x7f4ba048f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22401)[0m     @     0x7f4ba04928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22363)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22363)[0m *** SIGSEGV (@0x0) received by PID 22363 (TID 0x7fa47d0cb700) from PID 0; stack trace: ***
[2m[36m(pid=22363)[0m     @     0x7fa47cca4390 (unknown)
[2m[36m(pid=22363)[0m     @     0x7f757ca8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22363)[0m     @     0x7f757c1b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22361)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22361)[0m *** SIGSEGV (@0x0) received by PID 22361 (TID 0x7f4a72e5a700) from PID 0; stack trace: ***
[2m[36m(pid=22371)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22371)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22371)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22371)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22371)[0m *** SIGSEGV (@0x0) received by PID 22371 (TID 0x7f7d7aa73700) from PID 0; stack trace: ***
[2m[36m(pid=22371)[0m     @     0x7f7d7a64c390 (unknown)
[2m[36m(pid=22371)[0m     @     0x7f4e7a365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22371)[0m     @     0x7f4e79a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22325)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22325)[0m *** SIGSEGV (@0x0) received by PID 22325 (TID 0x7f194f97d700) from PID 0; stack trace: ***
[2m[36m(pid=22325)[0m     @     0x7f194f556390 (unknown)
[2m[36m(pid=22304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22304)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22304)[0m *** SIGSEGV (@0x0) received by PID 22304 (TID 0x7f8ee54a8700) from PID 0; stack trace: ***
[2m[36m(pid=22304)[0m     @     0x7f8ee5081390 (unknown)
[2m[36m(pid=22304)[0m     @     0x7f5fe5031f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22304)[0m     @     0x7f5fe475c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22378)[0m     @     0x7f0329ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22378)[0m     @     0x7f0329ea0388 at::native::copy_impl()
[2m[36m(pid=22378)[0m     @     0x7f0329ea25a4 at::native::copy_()
[2m[36m(pid=22378)[0m     @     0x7f032a58d4f5 at::Tensor::copy_()
[2m[36m(pid=22301)[0m     @     0x7f1358a8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22301)[0m     @     0x7f13581ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22301)[0m     @     0x7f13581bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22301)[0m     @     0x7f13581bdad3 at::TensorIterator::for_each()
[2m[36m(pid=22310)[0m     @     0x7f8f3c37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22310)[0m     @     0x7f8f3c378388 at::native::copy_impl()
[2m[36m(pid=22310)[0m     @     0x7f8f3c37a5a4 at::native::copy_()
[2m[36m(pid=22310)[0m     @     0x7f8f3ca654f5 at::Tensor::copy_()
[2m[36m(pid=22422)[0m     @     0x7edcb79afa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22422)[0m     @     0x7edcb79ad388 at::native::copy_impl()
[2m[36m(pid=22422)[0m     @     0x7edcb79af5a4 at::native::copy_()
[2m[36m(pid=22422)[0m     @     0x7edcb809a4f5 at::Tensor::copy_()
[2m[36m(pid=22405)[0m     @     0x7f6f0614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22405)[0m     @     0x7f6f0616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22405)[0m     @     0x7f6f05610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22405)[0m     @     0x7f6f0560e388 at::native::copy_impl()
[2m[36m(pid=22405)[0m     @     0x7f6f056105a4 at::native::copy_()
[2m[36m(pid=22436)[0m     @     0x7fc387e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22436)[0m     @     0x7fc3875367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22436)[0m     @     0x7fc3875398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22436)[0m     @     0x7fc387539ad3 at::TensorIterator::for_each()
[2m[36m(pid=22404)[0m     @     0x7ff9de023390 (unknown)
[2m[36m(pid=22404)[0m     @     0x7fcadde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22404)[0m     @     0x7fcadd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22404)[0m     @     0x7fcadd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22404)[0m     @     0x7fcadd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=22327)[0m     @     0x7fa771127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22327)[0m     @     0x7fa771125388 at::native::copy_impl()
[2m[36m(pid=22327)[0m     @     0x7fa7711275a4 at::native::copy_()
[2m[36m(pid=22327)[0m     @     0x7fa7718124f5 at::Tensor::copy_()
[2m[36m(pid=22335)[0m     @     0x7ee736af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22335)[0m     @     0x7ee736af3388 at::native::copy_impl()
[2m[36m(pid=22335)[0m     @     0x7ee736af55a4 at::native::copy_()
[2m[36m(pid=22335)[0m     @     0x7ee7371e04f5 at::Tensor::copy_()
[2m[36m(pid=22329)[0m     @     0x7f64663fa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22329)[0m     @     0x7f64663fd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22329)[0m     @     0x7f64663fdad3 at::TensorIterator::for_each()
[2m[36m(pid=22306)[0m     @     0x7f4bcd722390 (unknown)
[2m[36m(pid=22306)[0m     @     0x7f1ccd6b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22306)[0m     @     0x7f1cccddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22306)[0m     @     0x7f1cccde28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22306)[0m     @     0x7f1cccde2ad3 at::TensorIterator::for_each()
[2m[36m(pid=22324)[0m     @     0x7f19409e1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22324)[0m     @     0x7f194010c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22324)[0m     @     0x7f194010f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22324)[0m     @     0x7f194010fad3 at::TensorIterator::for_each()
[2m[36m(pid=22376)[0m     @     0x7f23dfc4a5a4 at::native::copy_()
[2m[36m(pid=22376)[0m     @     0x7f23e03354f5 at::Tensor::copy_()
[2m[36m(pid=22376)[0m     @     0x7f23e28088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22364)[0m     @     0x7f4429140390 (unknown)
[2m[36m(pid=22364)[0m     @     0x7f15290b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22364)[0m     @     0x7f15287e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22309)[0m     @     0x7f3fdfc6c390 (unknown)
[2m[36m(pid=22309)[0m     @     0x7f10dfaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22309)[0m     @     0x7f10df2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22309)[0m     @     0x7f10df2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22309)[0m     @     0x7f10df223ad3 at::TensorIterator::for_each()
[2m[36m(pid=22309)[0m     @     0x7f10df223d91 at::TensorIterator::for_each()
[2m[36m(pid=22315)[0m     @     0x7f4887ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22315)[0m     @     0x7f4887ebc388 at::native::copy_impl()
[2m[36m(pid=22315)[0m     @     0x7f4887ebe5a4 at::native::copy_()
[2m[36m(pid=22315)[0m     @     0x7f48885a94f5 at::Tensor::copy_()
[2m[36m(pid=22355)[0m     @     0x7f869338c5a4 at::native::copy_()
[2m[36m(pid=22355)[0m     @     0x7f8693a774f5 at::Tensor::copy_()
[2m[36m(pid=22355)[0m     @     0x7f8695f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22355)[0m     @     0x7f8693a774f5 at::Tensor::copy_()
[2m[36m(pid=22355)[0m     @     0x7f8699b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22355)[0m     @     0x557dc4937fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22355)[0m     @     0x557dc4892b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22355)[0m     @     0x557dc491ea20 method_vectorcall
[2m[36m(pid=22355)[0m     @     0x557dc4892bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x7f66ad24d5a4 at::native::copy_()
[2m[36m(pid=22411)[0m     @     0x7f66ad9384f5 at::Tensor::copy_()
[2m[36m(pid=22411)[0m     @     0x7f66afe0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22383)[0m     @     0x7f79080deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22383)[0m     @     0x7f7908101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22383)[0m     @     0x7f79075a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22383)[0m     @     0x7f79075a1388 at::native::copy_impl()
[2m[36m(pid=22383)[0m     @     0x7f79075a35a4 at::native::copy_()
[2m[36m(pid=22431)[0m     @     0x7f5166d20388 at::native::copy_impl()
[2m[36m(pid=22431)[0m     @     0x7f5166d225a4 at::native::copy_()
[2m[36m(pid=22431)[0m     @     0x7f516740d4f5 at::Tensor::copy_()
[2m[36m(pid=22431)[0m     @     0x7f51698e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22311)[0m     @     0x7eed66398d91 at::TensorIterator::for_each()
[2m[36m(pid=22311)[0m     @     0x7eed66c7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22311)[0m     @     0x7eed66c9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22311)[0m     @     0x7eed66140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22311)[0m     @     0x7eed6613e388 at::native::copy_impl()
[2m[36m(pid=22370)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22370)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22370)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22370)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22370)[0m *** SIGSEGV (@0x0) received by PID 22370 (TID 0x7f99af4ee700) from PID 0; stack trace: ***
[2m[36m(pid=22370)[0m     @     0x7f99af0c7390 (unknown)
[2m[36m(pid=22370)[0m     @     0x7f6aaf068f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22377)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22377)[0m *** SIGSEGV (@0x0) received by PID 22377 (TID 0x7fef5fec6700) from PID 0; stack trace: ***
[2m[36m(pid=22377)[0m     @     0x7fef5fa9f390 (unknown)
[2m[36m(pid=22377)[0m     @     0x7fc05fa23f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22377)[0m     @     0x7fc05f14e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22377)[0m     @     0x7fc05f1518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22429)[0m *** SIGSEGV (@0x0) received by PID 22429 (TID 0x7ff1a82c8700) from PID 0; stack trace: ***
[2m[36m(pid=22313)[0m     @     0x7fddb8a60390 (unknown)
[2m[36m(pid=22313)[0m     @     0x7faeb8825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22313)[0m     @     0x7faeb7f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22313)[0m     @     0x7faeb7f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22313)[0m     @     0x7faeb7f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=22302)[0m     @     0x7f936a5a7390 (unknown)
[2m[36m(pid=22302)[0m     @     0x7f646a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22302)[0m     @     0x7f6469c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22302)[0m     @     0x7f6469c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22302)[0m     @     0x7f6469c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=22308)[0m     @     0x7f65dacc0390 (unknown)
[2m[36m(pid=22308)[0m     @     0x7f36dac6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22308)[0m     @     0x7f36da3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22308)[0m     @     0x7f36da3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22308)[0m     @     0x7f36da398ad3 at::TensorIterator::for_each()
[2m[36m(pid=22319)[0m     @     0x7fdbbdd6b390 (unknown)
[2m[36m(pid=22319)[0m     @     0x7facbdd06f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22319)[0m     @     0x7facbd4317db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22319)[0m     @     0x7facbd4348f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22384)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22384)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22384)[0m *** Aborted at 1604572516 (unix time) try "date -d @1604572516" if you are using GNU date ***
[2m[36m(pid=22384)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22384)[0m *** SIGSEGV (@0x0) received by PID 22384 (TID 0x7fe131df6700) from PID 0; stack trace: ***
[2m[36m(pid=22384)[0m     @     0x7fe1319cf390 (unknown)
[2m[36m(pid=22384)[0m     @     0x7fb2317f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22299)[0m     @     0x7f7d6dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22299)[0m     @     0x7f7d6dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=22366)[0m     @     0x7f787684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22366)[0m     @     0x7f78768528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22294)[0m     @     0x7f5de0e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22294)[0m     @     0x7f5de0e14388 at::native::copy_impl()
[2m[36m(pid=22294)[0m     @     0x7f5de0e165a4 at::native::copy_()
[2m[36m(pid=22412)[0m     @     0x7f05bc1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22412)[0m     @     0x7f05bc1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22395)[0m *** SIGSEGV (@0x0) received by PID 22395 (TID 0x7f29a5dbf700) from PID 0; stack trace: ***
[2m[36m(pid=22395)[0m     @     0x7f29a5998390 (unknown)
[2m[36m(pid=22395)[0m     @     0x7efaa57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22392)[0m     @     0x7f2c78290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22392)[0m     @     0x7f2c779bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22392)[0m     @     0x7f2c779be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22369)[0m     @     0x7f1e83a08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22369)[0m     @     0x7f1e831337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22380)[0m     @     0x7f844f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=22298)[0m     @     0x7f2e77f8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22298)[0m     @     0x7f2e77f928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22295)[0m     @     0x7ef62933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22295)[0m     @     0x7ef62933bad3 at::TensorIterator::for_each()
[2m[36m(pid=22295)[0m     @     0x7ef62933bd91 at::TensorIterator::for_each()
[2m[36m(pid=22368)[0m     @     0x7f3ca35398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22368)[0m     @     0x7f3ca3539ad3 at::TensorIterator::for_each()
[2m[36m(pid=22330)[0m     @     0x7f0fae7028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22330)[0m     @     0x7f0fae702ad3 at::TensorIterator::for_each()
[2m[36m(pid=22330)[0m     @     0x7f0fae702d91 at::TensorIterator::for_each()
[2m[36m(pid=22330)[0m     @     0x7f0faefe5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22393)[0m     @     0x7fecb08db390 (unknown)
[2m[36m(pid=22393)[0m     @     0x7fbdb0774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22393)[0m     @     0x7fbdafe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22393)[0m     @     0x7fbdafea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22359)[0m     @     0x7f3fc3752390 (unknown)
[2m[36m(pid=22359)[0m     @     0x7f10c361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22359)[0m     @     0x7f10c2d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22359)[0m     @     0x7f10c2d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22397)[0m     @     0x7ee989b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22397)[0m     @     0x7ee9892a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22397)[0m     @     0x7ee9892a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22397)[0m     @     0x7ee9892a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=22314)[0m     @     0x7f35954348f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22314)[0m     @     0x7f3595434ad3 at::TensorIterator::for_each()
[2m[36m(pid=22314)[0m     @     0x7f3595434d91 at::TensorIterator::for_each()
[2m[36m(pid=22417)[0m     @     0x7f8a97f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=22417)[0m     @     0x7f8a97f53d91 at::TensorIterator::for_each()
[2m[36m(pid=22417)[0m     @     0x7f8a98836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22417)[0m     @     0x7f8a98859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22297)[0m     @     0x7fa4460fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22297)[0m     @     0x7fa4460faad3 at::TensorIterator::for_each()
[2m[36m(pid=22297)[0m     @     0x7fa4460fad91 at::TensorIterator::for_each()
[2m[36m(pid=22297)[0m     @     0x7fa4469ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22379)[0m     @     0x7fa2cbc64ad3 at::TensorIterator::for_each()
[2m[36m(pid=22379)[0m     @     0x7fa2cbc64d91 at::TensorIterator::for_each()
[2m[36m(pid=22379)[0m     @     0x7fa2cc547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22379)[0m     @     0x7fa2cc56ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22305)[0m     @     0x7f14af50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22305)[0m     @     0x7f14af50cad3 at::TensorIterator::for_each()
[2m[36m(pid=22305)[0m     @     0x7f14af50cd91 at::TensorIterator::for_each()
[2m[36m(pid=22305)[0m     @     0x7f14afdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22305)[0m     @     0x7f14afe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22300)[0m     @     0x7edb952a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22300)[0m     @     0x7edb952a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=22362)[0m     @     0x7fbf421ffd91 at::TensorIterator::for_each()
[2m[36m(pid=22362)[0m     @     0x7fbf42ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22362)[0m     @     0x7fbf42b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22362)[0m     @     0x7fbf41fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22362)[0m     @     0x7fbf41fa5388 at::native::copy_impl()
[2m[36m(pid=22354)[0m     @     0x7f2bb32e15a4 at::native::copy_()
[2m[36m(pid=22354)[0m     @     0x7f2bb39cc4f5 at::Tensor::copy_()
[2m[36m(pid=22354)[0m     @     0x7f2bb5e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22316)[0m     @     0x7efdee9a55a4 at::native::copy_()
[2m[36m(pid=22316)[0m     @     0x7efdef0904f5 at::Tensor::copy_()
[2m[36m(pid=22316)[0m     @     0x7efdf15638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22316)[0m     @     0x7efdef0904f5 at::Tensor::copy_()
[2m[36m(pid=22322)[0m     @     0x7f1cd3c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=22322)[0m     @     0x7f1cd3c91d91 at::TensorIterator::for_each()
[2m[36m(pid=22322)[0m     @     0x7f1cd4574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22322)[0m     @     0x7f1cd4597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22441)[0m     @     0x7edaf1ee95a4 at::native::copy_()
[2m[36m(pid=22441)[0m     @     0x7edaf25d44f5 at::Tensor::copy_()
[2m[36m(pid=22441)[0m     @     0x7edaf4aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22396)[0m     @     0x7fb8f9c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22396)[0m     @     0x7fb8f77884f5 at::Tensor::copy_()
[2m[36m(pid=22396)[0m     @     0x7fb8fd83379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22396)[0m     @     0x564f74a25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22396)[0m     @     0x564f74980b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22396)[0m     @     0x564f74a0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22396)[0m     @     0x564f74a0ca20 method_vectorcall
[2m[36m(pid=22396)[0m     @     0x564f74980bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22396)[0m     @     0x564f74a0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22396)[0m     @     0x564f74a0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22396)[0m     @     0x564f74981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22396)[0m     @     0x564f74a0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22396)[0m     @     0x564f74a0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22396)[0m     @     0x564f74981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22396)[0m     @     0x564f74a0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22396)[0m     @     0x564f74a0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22396)[0m     @     0x564f74981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22396)[0m     @     0x564f74a0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22396)[0m     @     0x564f74a0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22396)[0m     @     0x564f74981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x7fa9671498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22382)[0m     @     0x7fa964c764f5 at::Tensor::copy_()
[2m[36m(pid=22382)[0m     @     0x7fa96ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22382)[0m     @     0x55656ad6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22382)[0m     @     0x55656acc7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x55656ad52baf _PyEval_EvalCodeWithName
[2m[36m(pid=22382)[0m     @     0x55656ad53a20 method_vectorcall
[2m[36m(pid=22382)[0m     @     0x55656acc7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x55656ad52baf _PyEval_EvalCodeWithName
[2m[36m(pid=22382)[0m     @     0x55656ad53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22382)[0m     @     0x55656acc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x55656ad52baf _PyEval_EvalCodeWithName
[2m[36m(pid=22382)[0m     @     0x55656ad53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22382)[0m     @     0x55656acc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x55656ad52baf _PyEval_EvalCodeWithName
[2m[36m(pid=22382)[0m     @     0x55656ad53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22382)[0m     @     0x55656acc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22382)[0m     @     0x55656ad52baf _PyEval_EvalCodeWithName
[2m[36m(pid=22382)[0m     @     0x55656ad53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22382)[0m     @     0x55656acc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x7f4a3058b5a4 at::native::copy_()
[2m[36m(pid=22433)[0m     @     0x7f4a30c764f5 at::Tensor::copy_()
[2m[36m(pid=22433)[0m     @     0x7f4a331498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22365)[0m     @     0x7f74807b05a4 at::native::copy_()
[2m[36m(pid=22365)[0m     @     0x7f7480e9b4f5 at::Tensor::copy_()
[2m[36m(pid=22365)[0m     @     0x7f748336e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22388)[0m     @     0x7fc3a4c764f5 at::Tensor::copy_()
[2m[36m(pid=22388)[0m     @     0x7fc3aad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22388)[0m     @     0x56463e3d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22388)[0m     @     0x56463e332b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22388)[0m     @     0x56463e3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22388)[0m     @     0x56463e3bea20 method_vectorcall
[2m[36m(pid=22388)[0m     @     0x56463e332bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22388)[0m     @     0x56463e3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22388)[0m     @     0x56463e3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22388)[0m     @     0x56463e333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22388)[0m     @     0x56463e3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22388)[0m     @     0x56463e3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22388)[0m     @     0x56463e333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22388)[0m     @     0x56463e3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22388)[0m     @     0x56463e3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22388)[0m     @     0x56463e333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22388)[0m     @     0x56463e3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22388)[0m     @     0x56463e3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22388)[0m     @     0x56463e333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x7f95c43354f5 at::Tensor::copy_()
[2m[36m(pid=22410)[0m     @     0x7f95c68088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22410)[0m     @     0x7f95c43354f5 at::Tensor::copy_()
[2m[36m(pid=22410)[0m     @     0x7f95ca3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22410)[0m     @     0x560de73f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22410)[0m     @     0x560de734eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x560de73d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22410)[0m     @     0x560de73daa20 method_vectorcall
[2m[36m(pid=22410)[0m     @     0x560de734ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x560de73d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22410)[0m     @     0x560de73da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22410)[0m     @     0x560de734f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x7f8f7c492ad3 at::TensorIterator::for_each()
[2m[36m(pid=22402)[0m     @     0x7f8f7c492d91 at::TensorIterator::for_each()
[2m[36m(pid=22402)[0m     @     0x7f8f7cd75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22402)[0m     @     0x7f8f7cd98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22296)[0m     @     0x7fa306dea4f5 at::Tensor::copy_()
[2m[36m(pid=22296)[0m     @     0x7fa3092bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22296)[0m     @     0x7fa306dea4f5 at::Tensor::copy_()
[2m[36m(pid=22296)[0m     @     0x7fa30ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22296)[0m     @     0x557607859fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22296)[0m     @     0x5576077b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22296)[0m     @     0x55760783fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22296)[0m     @     0x557607840a20 method_vectorcall
[2m[36m(pid=22296)[0m     @     0x5576077b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22296)[0m     @     0x55760783fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22296)[0m     @     0x557607840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22296)[0m     @     0x5576077b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22296)[0m     @     0x55760783fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22296)[0m     @     0x557607840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22296)[0m     @     0x5576077b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22296)[0m     @     0x55760783fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22296)[0m     @     0x557607840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22296)[0m     @     0x5576077b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22296)[0m     @     0x55760783fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22296)[0m     @     0x557607840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22296)[0m     @     0x5576077b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x7ed7e04b58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22428)[0m     @     0x7ed7e04b5ad3 at::TensorIterator::for_each()
[2m[36m(pid=22428)[0m     @     0x7ed7e04b5d91 at::TensorIterator::for_each()
[2m[36m(pid=22424)[0m     @     0x7f5a4a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22424)[0m     @     0x7f5a47ef44f5 at::Tensor::copy_()
[2m[36m(pid=22424)[0m     @     0x7f5a4df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22424)[0m     @     0x55ce0e152fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22424)[0m     @     0x55ce0e0adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22424)[0m     @     0x55ce0e138baf _PyEval_EvalCodeWithName
[2m[36m(pid=22424)[0m     @     0x55ce0e139a20 method_vectorcall
[2m[36m(pid=22424)[0m     @     0x55ce0e0adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22424)[0m     @     0x55ce0e138baf _PyEval_EvalCodeWithName
[2m[36m(pid=22424)[0m     @     0x55ce0e139643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22424)[0m     @     0x55ce0e0ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22424)[0m     @     0x55ce0e138baf _PyEval_EvalCodeWithName
[2m[36m(pid=22424)[0m     @     0x55ce0e139643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22424)[0m     @     0x55ce0e0ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22424)[0m     @     0x55ce0e138baf _PyEval_EvalCodeWithName
[2m[36m(pid=22424)[0m     @     0x55ce0e139643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22424)[0m     @     0x55ce0e0ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22424)[0m     @     0x55ce0e138baf _PyEval_EvalCodeWithName
[2m[36m(pid=22424)[0m     @     0x55ce0e139643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22424)[0m     @     0x55ce0e0ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x7f89199e54f5 at::Tensor::copy_()
[2m[36m(pid=22390)[0m     @     0x7f891beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22390)[0m     @     0x7f89199e54f5 at::Tensor::copy_()
[2m[36m(pid=22390)[0m     @     0x7f891fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22390)[0m     @     0x5587f239afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22390)[0m     @     0x5587f22f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x5587f2380baf _PyEval_EvalCodeWithName
[2m[36m(pid=22390)[0m     @     0x5587f2381a20 method_vectorcall
[2m[36m(pid=22390)[0m     @     0x5587f22f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x5587f2380baf _PyEval_EvalCodeWithName
[2m[36m(pid=22390)[0m     @     0x5587f2381643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22390)[0m     @     0x5587f22f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x5587f2380baf _PyEval_EvalCodeWithName
[2m[36m(pid=22390)[0m     @     0x5587f2381643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22390)[0m     @     0x5587f22f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x5587f2380baf _PyEval_EvalCodeWithName
[2m[36m(pid=22390)[0m     @     0x5587f2381643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22390)[0m     @     0x5587f22f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22390)[0m     @     0x5587f2380baf _PyEval_EvalCodeWithName
[2m[36m(pid=22390)[0m     @     0x5587f2381643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22390)[0m     @     0x5587f22f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x7f379c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22381)[0m     @     0x7f379a37c4f5 at::Tensor::copy_()
[2m[36m(pid=22381)[0m     @     0x7f37a042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22381)[0m     @     0x55e1efb3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22381)[0m     @     0x55e1efa9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x55e1efb25baf _PyEval_EvalCodeWithName
[2m[36m(pid=22381)[0m     @     0x55e1efb26a20 method_vectorcall
[2m[36m(pid=22381)[0m     @     0x55e1efa9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x55e1efb25baf _PyEval_EvalCodeWithName
[2m[36m(pid=22381)[0m     @     0x55e1efb26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22381)[0m     @     0x55e1efa9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x55e1efb25baf _PyEval_EvalCodeWithName
[2m[36m(pid=22381)[0m     @     0x55e1efb26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22381)[0m     @     0x55e1efa9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x55e1efb25baf _PyEval_EvalCodeWithName
[2m[36m(pid=22381)[0m     @     0x55e1efb26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22381)[0m     @     0x55e1efa9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22381)[0m     @     0x55e1efb25baf _PyEval_EvalCodeWithName
[2m[36m(pid=22381)[0m     @     0x55e1efb26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22381)[0m     @     0x55e1efa9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x7f80592b54f5 at::Tensor::copy_()
[2m[36m(pid=22317)[0m     @     0x7f805f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22317)[0m     @     0x55af75cd5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22317)[0m     @     0x55af75c30b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x55af75cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22317)[0m     @     0x55af75cbca20 method_vectorcall
[2m[36m(pid=22317)[0m     @     0x55af75c30bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x55af75cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22317)[0m     @     0x55af75cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22317)[0m     @     0x55af75c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x55af75cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22317)[0m     @     0x55af75cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22317)[0m     @     0x55af75c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x55af75cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22317)[0m     @     0x55af75cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22317)[0m     @     0x55af75c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22317)[0m     @     0x55af75cbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22317)[0m     @     0x55af75cbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22317)[0m     @     0x55af75c31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x7fcad68114f5 at::Tensor::copy_()
[2m[36m(pid=22409)[0m     @     0x7fcadc8bc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22409)[0m     @     0x558adf07cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22409)[0m     @     0x558adefd7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x558adf062baf _PyEval_EvalCodeWithName
[2m[36m(pid=22409)[0m     @     0x558adf063a20 method_vectorcall
[2m[36m(pid=22409)[0m     @     0x558adefd7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x558adf062baf _PyEval_EvalCodeWithName
[2m[36m(pid=22409)[0m     @     0x558adf063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22409)[0m     @     0x558adefd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x558adf062baf _PyEval_EvalCodeWithName
[2m[36m(pid=22409)[0m     @     0x558adf063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22409)[0m     @     0x558adefd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x558adf062baf _PyEval_EvalCodeWithName
[2m[36m(pid=22409)[0m     @     0x558adf063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22409)[0m     @     0x558adefd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22409)[0m     @     0x558adf062baf _PyEval_EvalCodeWithName
[2m[36m(pid=22409)[0m     @     0x558adf063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22409)[0m     @     0x558adefd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x7f571ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=22399)[0m     @     0x7f5722ef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22399)[0m     @     0x55dede822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22399)[0m     @     0x55dede77db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x55dede808baf _PyEval_EvalCodeWithName
[2m[36m(pid=22399)[0m     @     0x55dede809a20 method_vectorcall
[2m[36m(pid=22399)[0m     @     0x55dede77dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x55dede808baf _PyEval_EvalCodeWithName
[2m[36m(pid=22399)[0m     @     0x55dede809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22399)[0m     @     0x55dede77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x55dede808baf _PyEval_EvalCodeWithName
[2m[36m(pid=22399)[0m     @     0x55dede809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22399)[0m     @     0x55dede77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x55dede808baf _PyEval_EvalCodeWithName
[2m[36m(pid=22399)[0m     @     0x55dede809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22399)[0m     @     0x55dede77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22399)[0m     @     0x55dede808baf _PyEval_EvalCodeWithName
[2m[36m(pid=22399)[0m     @     0x55dede809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22399)[0m     @     0x55dede77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x7f128b7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=22312)[0m     @     0x7f128b7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=22387)[0m     @     0x7ee3ccc764f5 at::Tensor::copy_()
[2m[36m(pid=22387)[0m     @     0x7ee3d2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22387)[0m     @     0x55e489f5afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22387)[0m     @     0x55e489eb5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22387)[0m     @     0x55e489f40baf _PyEval_EvalCodeWithName
[2m[36m(pid=22387)[0m     @     0x55e489f41a20 method_vectorcall
[2m[36m(pid=22387)[0m     @     0x55e489eb5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22387)[0m     @     0x55e489f40baf _PyEval_EvalCodeWithName
[2m[36m(pid=22387)[0m     @     0x55e489f41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22387)[0m     @     0x55e489eb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22387)[0m     @     0x55e489f40baf _PyEval_EvalCodeWithName
[2m[36m(pid=22387)[0m     @     0x55e489f41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22387)[0m     @     0x55e489eb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22387)[0m     @     0x55e489f40baf _PyEval_EvalCodeWithName
[2m[36m(pid=22387)[0m     @     0x55e489f41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22387)[0m     @     0x55e489eb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22387)[0m     @     0x55e489f40baf _PyEval_EvalCodeWithName
[2m[36m(pid=22387)[0m     @     0x55e489f41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22387)[0m     @     0x55e489eb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x7fc5bea7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22427)[0m     @     0x7fc5bc5a94f5 at::Tensor::copy_()
[2m[36m(pid=22427)[0m     @     0x7fc5c265479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22427)[0m     @     0x559fd14dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22427)[0m     @     0x559fd1437b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x559fd14c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=22427)[0m     @     0x559fd14c3a20 method_vectorcall
[2m[36m(pid=22427)[0m     @     0x559fd1437bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x559fd14c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=22427)[0m     @     0x559fd14c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22427)[0m     @     0x559fd1438689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x559fd14c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=22427)[0m     @     0x559fd14c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22427)[0m     @     0x559fd1438689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x559fd14c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=22427)[0m     @     0x559fd14c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22427)[0m     @     0x559fd1438689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22427)[0m     @     0x559fd14c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=22427)[0m     @     0x559fd14c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22427)[0m     @     0x559fd1438689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x7f4ba0492ad3 at::TensorIterator::for_each()
[2m[36m(pid=22401)[0m     @     0x7f4ba0492d91 at::TensorIterator::for_each()
[2m[36m(pid=22363)[0m     @     0x7f757c1b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22363)[0m     @     0x7f757c1b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=22361)[0m     @     0x7f4a72a33390 (unknown)
[2m[36m(pid=22361)[0m     @     0x7f1b727bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22361)[0m     @     0x7f1b71ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22371)[0m     @     0x7f4e79a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22371)[0m     @     0x7f4e79a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=22325)[0m     @     0x7eea4f43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22325)[0m     @     0x7eea4eb657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22325)[0m     @     0x7eea4eb688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22304)[0m     @     0x7f5fe475f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22304)[0m     @     0x7f5fe475fad3 at::TensorIterator::for_each()
[2m[36m(pid=22378)[0m     @     0x7f032ca608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22378)[0m     @     0x7f032a58d4f5 at::Tensor::copy_()
[2m[36m(pid=22378)[0m     @     0x7f033063879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22378)[0m     @     0x55d444e3dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22378)[0m     @     0x55d444d98b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22378)[0m     @     0x55d444e23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22378)[0m     @     0x55d444e24a20 method_vectorcall
[2m[36m(pid=22378)[0m     @     0x55d444d98bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22378)[0m     @     0x55d444e23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22378)[0m     @     0x55d444e24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22378)[0m     @     0x55d444d99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22378)[0m     @     0x55d444e23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22378)[0m     @     0x55d444e24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22378)[0m     @     0x55d444d99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22378)[0m     @     0x55d444e23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22378)[0m     @     0x55d444e24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22378)[0m     @     0x55d444d99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22378)[0m     @     0x55d444e23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22378)[0m     @     0x55d444e24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22378)[0m     @     0x55d444d99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x7f13581bdd91 at::TensorIterator::for_each()
[2m[36m(pid=22301)[0m     @     0x7f1358aa0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22301)[0m     @     0x7f1358ac3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22301)[0m     @     0x7f1357f65a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22310)[0m     @     0x7f8f3ef388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22310)[0m     @     0x7f8f3ca654f5 at::Tensor::copy_()
[2m[36m(pid=22310)[0m     @     0x7f8f42b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22310)[0m     @     0x55d481f83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22310)[0m     @     0x55d481edeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22310)[0m     @     0x55d481f69baf _PyEval_EvalCodeWithName
[2m[36m(pid=22310)[0m     @     0x55d481f6aa20 method_vectorcall
[2m[36m(pid=22310)[0m     @     0x55d481edebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22310)[0m     @     0x55d481f69baf _PyEval_EvalCodeWithName
[2m[36m(pid=22310)[0m     @     0x55d481f6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22422)[0m     @     0x7edcba56d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22422)[0m     @     0x7edcb809a4f5 at::Tensor::copy_()
[2m[36m(pid=22422)[0m     @     0x7edcbe14579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22422)[0m     @     0x55742f098fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22422)[0m     @     0x55742eff3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742f07ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22422)[0m     @     0x55742f07fa20 method_vectorcall
[2m[36m(pid=22422)[0m     @     0x55742eff3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742f07ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22422)[0m     @     0x55742f07f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22405)[0m     @     0x7f6f05cfb4f5 at::Tensor::copy_()
[2m[36m(pid=22405)[0m     @     0x7f6f081ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22436)[0m     @     0x7fc387539d91 at::TensorIterator::for_each()
[2m[36m(pid=22436)[0m     @     0x7fc387e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22436)[0m     @     0x7fc387e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22436)[0m     @     0x7fc3872e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22404)[0m     @     0x7fcadd552d91 at::TensorIterator::for_each()
[2m[36m(pid=22404)[0m     @     0x7fcadde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22404)[0m     @     0x7fcadde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22327)[0m     @     0x7fa773ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22327)[0m     @     0x7fa7718124f5 at::Tensor::copy_()
[2m[36m(pid=22327)[0m     @     0x7fa7778bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22327)[0m     @     0x556008375fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22327)[0m     @     0x5560082d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22327)[0m     @     0x55600835bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22327)[0m     @     0x55600835ca20 method_vectorcall
[2m[36m(pid=22327)[0m     @     0x5560082d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22327)[0m     @     0x55600835bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22327)[0m     @     0x55600835c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22327)[0m     @     0x5560082d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22327)[0m     @     0x55600835bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22327)[0m     @     0x55600835c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22327)[0m     @     0x5560082d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22327)[0m     @     0x55600835bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22327)[0m     @     0x55600835c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22327)[0m     @     0x5560082d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22327)[0m     @     0x55600835bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22327)[0m     @     0x55600835c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22327)[0m     @     0x5560082d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x7ee7396b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22335)[0m     @     0x7ee7371e04f5 at::Tensor::copy_()
[2m[36m(pid=22335)[0m     @     0x7ee73d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22335)[0m     @     0x5643c324ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22335)[0m     @     0x5643c31aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x5643c3235baf _PyEval_EvalCodeWithName
[2m[36m(pid=22335)[0m     @     0x5643c3236a20 method_vectorcall
[2m[36m(pid=22335)[0m     @     0x5643c31aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x5643c3235baf _PyEval_EvalCodeWithName
[2m[36m(pid=22335)[0m     @     0x5643c3236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22335)[0m     @     0x5643c31ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x5643c3235baf _PyEval_EvalCodeWithName
[2m[36m(pid=22335)[0m     @     0x5643c3236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22335)[0m     @     0x5643c31ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x5643c3235baf _PyEval_EvalCodeWithName
[2m[36m(pid=22335)[0m     @     0x5643c3236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22335)[0m     @     0x5643c31ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22335)[0m     @     0x5643c3235baf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x7f64663fdd91 at::TensorIterator::for_each()
[2m[36m(pid=22329)[0m     @     0x7f6466ce0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22329)[0m     @     0x7f6466d03c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22329)[0m     @     0x7f64661a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22329)[0m     @     0x7f64661a3388 at::native::copy_impl()
[2m[36m(pid=22306)[0m     @     0x7f1cccde2d91 at::TensorIterator::for_each()
[2m[36m(pid=22306)[0m     @     0x7f1ccd6c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22306)[0m     @     0x7f1ccd6e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22324)[0m     @     0x7f194010fd91 at::TensorIterator::for_each()
[2m[36m(pid=22324)[0m     @     0x7f19409f2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22324)[0m     @     0x7f1940a15c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22324)[0m     @     0x7f193feb7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22376)[0m     @     0x7f23e03354f5 at::Tensor::copy_()
[2m[36m(pid=22376)[0m     @     0x7f23e63e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22376)[0m     @     0x55e818e9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22376)[0m     @     0x55e818df6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22376)[0m     @     0x55e818e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=22376)[0m     @     0x55e818e82a20 method_vectorcall
[2m[36m(pid=22376)[0m     @     0x55e818df6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22376)[0m     @     0x55e818e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=22376)[0m     @     0x55e818e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22376)[0m     @     0x55e818df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22376)[0m     @     0x55e818e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=22376)[0m     @     0x55e818e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22376)[0m     @     0x55e818df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22376)[0m     @     0x55e818e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=22376)[0m     @     0x55e818e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22376)[0m     @     0x55e818df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22376)[0m     @     0x55e818e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=22376)[0m     @     0x55e818e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22376)[0m     @     0x55e818df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x7f15287e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22364)[0m     @     0x7f15287e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=22309)[0m     @     0x7f10dfb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22309)[0m     @     0x7f10dfb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22309)[0m     @     0x7f10defcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22309)[0m     @     0x7f10defc9388 at::native::copy_impl()
[2m[36m(pid=22309)[0m     @     0x7f10defcb5a4 at::native::copy_()
[2m[36m(pid=22315)[0m     @     0x7f488aa7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22315)[0m     @     0x7f48885a94f5 at::Tensor::copy_()
[2m[36m(pid=22315)[0m     @     0x7f488e65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22315)[0m     @     0x5641bf1b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22315)[0m     @     0x5641bf10eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22315)[0m     @     0x5641bf199baf _PyEval_EvalCodeWithName
[2m[36m(pid=22315)[0m     @     0x5641bf19aa20 method_vectorcall
[2m[36m(pid=22315)[0m     @     0x5641bf10ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22315)[0m     @     0x5641bf199baf _PyEval_EvalCodeWithName
[2m[36m(pid=22315)[0m     @     0x5641bf19a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22315)[0m     @     0x5641bf10f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22315)[0m     @     0x5641bf199baf _PyEval_EvalCodeWithName
[2m[36m(pid=22315)[0m     @     0x5641bf19a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22315)[0m     @     0x5641bf10f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22315)[0m     @     0x5641bf199baf _PyEval_EvalCodeWithName
[2m[36m(pid=22315)[0m     @     0x5641bf19a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22315)[0m     @     0x5641bf10f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22355)[0m     @     0x557dc4893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22355)[0m     @     0x557dc491e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22355)[0m     @     0x557dc4893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22355)[0m     @     0x557dc491e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22355)[0m     @     0x557dc4893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22355)[0m     @     0x557dc491dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22355)[0m     @     0x557dc491e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22355)[0m     @     0x557dc4893689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x7f66ad9384f5 at::Tensor::copy_()
[2m[36m(pid=22411)[0m     @     0x7f66b39e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22411)[0m     @     0x5557c4f1dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22411)[0m     @     0x5557c4e78b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x5557c4f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x5557c4f04a20 method_vectorcall
[2m[36m(pid=22411)[0m     @     0x5557c4e78bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x5557c4f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x5557c4f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22411)[0m     @     0x5557c4e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x5557c4f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x5557c4f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22411)[0m     @     0x5557c4e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x5557c4f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x5557c4f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22411)[0m     @     0x5557c4e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22411)[0m     @     0x5557c4f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=22411)[0m     @     0x5557c4f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22411)[0m     @     0x5557c4e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x7f7907c8e4f5 at::Tensor::copy_()
[2m[36m(pid=22383)[0m     @     0x7f790a1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22431)[0m     @     0x7f516740d4f5 at::Tensor::copy_()
[2m[36m(pid=22431)[0m     @     0x7f516d4b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22431)[0m     @     0x563d8ba55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22431)[0m     @     0x563d8b9b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22431)[0m     @     0x563d8ba3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22431)[0m     @     0x563d8ba3ca20 method_vectorcall
[2m[36m(pid=22431)[0m     @     0x563d8b9b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22431)[0m     @     0x563d8ba3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22431)[0m     @     0x563d8ba3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22431)[0m     @     0x563d8b9b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22431)[0m     @     0x563d8ba3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22431)[0m     @     0x563d8ba3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22431)[0m     @     0x563d8b9b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22431)[0m     @     0x563d8ba3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22431)[0m     @     0x563d8ba3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22431)[0m     @     0x563d8b9b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22431)[0m     @     0x563d8ba3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22431)[0m     @     0x563d8ba3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22431)[0m     @     0x563d8b9b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x7eed661405a4 at::native::copy_()
[2m[36m(pid=22311)[0m     @     0x7eed6682b4f5 at::Tensor::copy_()
[2m[36m(pid=22311)[0m     @     0x7eed68cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22370)[0m     @     0x7f6aae7937db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22370)[0m     @     0x7f6aae7968f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22370)[0m     @     0x7f6aae796ad3 at::TensorIterator::for_each()
[2m[36m(pid=22377)[0m     @     0x7fc05f151ad3 at::TensorIterator::for_each()
[2m[36m(pid=22377)[0m     @     0x7fc05f151d91 at::TensorIterator::for_each()
[2m[36m(pid=22377)[0m     @     0x7fc05fa34b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22377)[0m     @     0x7fc05fa57c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22429)[0m     @     0x7ff1a7ea1390 (unknown)
[2m[36m(pid=22429)[0m     @     0x7fc2a7e36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22429)[0m     @     0x7fc2a75617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22313)[0m     @     0x7faeb7f53d91 at::TensorIterator::for_each()
[2m[36m(pid=22313)[0m     @     0x7faeb8836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22313)[0m     @     0x7faeb8859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22313)[0m     @     0x7faeb7cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22313)[0m     @     0x7faeb7cf9388 at::native::copy_impl()
[2m[36m(pid=22302)[0m     @     0x7f6469c27d91 at::TensorIterator::for_each()
[2m[36m(pid=22302)[0m     @     0x7f646a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22302)[0m     @     0x7f646a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22302)[0m     @     0x7f64699cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22302)[0m     @     0x7f64699cd388 at::native::copy_impl()
[2m[36m(pid=22308)[0m     @     0x7f36da398d91 at::TensorIterator::for_each()
[2m[36m(pid=22308)[0m     @     0x7f36dac7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22308)[0m     @     0x7f36dac9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22308)[0m     @     0x7f36da140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22308)[0m     @     0x7f36da13e388 at::native::copy_impl()
[2m[36m(pid=22319)[0m     @     0x7facbd434ad3 at::TensorIterator::for_each()
[2m[36m(pid=22319)[0m     @     0x7facbd434d91 at::TensorIterator::for_each()
[2m[36m(pid=22319)[0m     @     0x7facbdd17b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22319)[0m     @     0x7facbdd3ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22319)[0m     @     0x7facbd1dca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22319)[0m     @     0x7facbd1da388 at::native::copy_impl()
[2m[36m(pid=22384)[0m     @     0x7fb230f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22384)[0m     @     0x7fb230f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22384)[0m     @     0x7fb230f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=22299)[0m     @     0x7f7d6dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=22299)[0m     @     0x7f7d6e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22299)[0m     @     0x7f7d6e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22299)[0m     @     0x7f7d6d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22299)[0m     @     0x7f7d6d9cd388 at::native::copy_impl()
[2m[36m(pid=22366)[0m     @     0x7f7876852ad3 at::TensorIterator::for_each()
[2m[36m(pid=22366)[0m     @     0x7f7876852d91 at::TensorIterator::for_each()
[2m[36m(pid=22366)[0m     @     0x7f7877135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22366)[0m     @     0x7f7877158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22366)[0m     @     0x7f78765faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22366)[0m     @     0x7f78765f8388 at::native::copy_impl()
[2m[36m(pid=22294)[0m     @     0x7f5de15014f5 at::Tensor::copy_()
[2m[36m(pid=22294)[0m     @     0x7f5de39d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22294)[0m     @     0x7f5de15014f5 at::Tensor::copy_()
[2m[36m(pid=22294)[0m     @     0x7f8cac55f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22294)[0m     @     0x55fbafdfffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22294)[0m     @     0x55fbafd5ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22294)[0m     @     0x55fbafde5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22294)[0m     @     0x55fbafde6a20 method_vectorcall
[2m[36m(pid=22294)[0m     @     0x55fbafd5abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x7f05bc164ad3 at::TensorIterator::for_each()
[2m[36m(pid=22412)[0m     @     0x7f05bc164d91 at::TensorIterator::for_each()
[2m[36m(pid=22412)[0m     @     0x7f05bca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22412)[0m     @     0x7f05bca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22412)[0m     @     0x7f05bbf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22395)[0m     @     0x7efaa4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22395)[0m     @     0x7efaa4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22395)[0m     @     0x7efaa4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=22392)[0m     @     0x7f2c779bead3 at::TensorIterator::for_each()
[2m[36m(pid=22392)[0m     @     0x7f2c779bed91 at::TensorIterator::for_each()
[2m[36m(pid=22392)[0m     @     0x7f2c782a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22392)[0m     @     0x7f2c782c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22392)[0m     @     0x7f2c77766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22369)[0m     @     0x7f1e831368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22369)[0m     @     0x7f1e83136ad3 at::TensorIterator::for_each()
[2m[36m(pid=22369)[0m     @     0x7f1e83136d91 at::TensorIterator::for_each()
[2m[36m(pid=22380)[0m     @     0x7f844f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=22380)[0m     @     0x7f844f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22380)[0m     @     0x7f844f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22380)[0m     @     0x7f844edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22380)[0m     @     0x7f844edb2388 at::native::copy_impl()
[2m[36m(pid=22380)[0m     @     0x7f844edb45a4 at::native::copy_()
[2m[36m(pid=22298)[0m     @     0x7f2e77f92ad3 at::TensorIterator::for_each()
[2m[36m(pid=22298)[0m     @     0x7f2e77f92d91 at::TensorIterator::for_each()
[2m[36m(pid=22298)[0m     @     0x7f2e78875b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22298)[0m     @     0x7f2e78898c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22298)[0m     @     0x7f2e77d3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22295)[0m     @     0x7ef629c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22295)[0m     @     0x7ef629c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22295)[0m     @     0x7ef6290e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22295)[0m     @     0x7ef6290e1388 at::native::copy_impl()
[2m[36m(pid=22368)[0m     @     0x7f3ca3539d91 at::TensorIterator::for_each()
[2m[36m(pid=22368)[0m     @     0x7f3ca3e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22368)[0m     @     0x7f3ca3e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22368)[0m     @     0x7f3ca32e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22368)[0m     @     0x7f3ca32df388 at::native::copy_impl()
[2m[36m(pid=22330)[0m     @     0x7f0faf008c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22330)[0m     @     0x7f0fae4aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22330)[0m     @     0x7f0fae4a8388 at::native::copy_impl()
[2m[36m(pid=22330)[0m     @     0x7f0fae4aa5a4 at::native::copy_()
[2m[36m(pid=22393)[0m     @     0x7fbdafea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=22393)[0m     @     0x7fbdafea2d91 at::TensorIterator::for_each()
[2m[36m(pid=22393)[0m     @     0x7fbdb0785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22393)[0m     @     0x7fbdb07a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22359)[0m     @     0x7f10c2d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=22359)[0m     @     0x7f10c2d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=22359)[0m     @     0x7f10c3630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22397)[0m     @     0x7ee9892a8d91 at::TensorIterator::for_each()
[2m[36m(pid=22397)[0m     @     0x7ee989b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22397)[0m     @     0x7ee989baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22314)[0m     @     0x7f3595d17b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22314)[0m     @     0x7f3595d3ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22314)[0m     @     0x7f35951dca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22314)[0m     @     0x7f35951da388 at::native::copy_impl()
[2m[36m(pid=22417)[0m     @     0x7f8a97cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22417)[0m     @     0x7f8a97cf9388 at::native::copy_impl()
[2m[36m(pid=22297)[0m     @     0x7fa446a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22297)[0m     @     0x7fa445ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22297)[0m     @     0x7fa445ea0388 at::native::copy_impl()
[2m[36m(pid=22379)[0m     @     0x7fa2cba0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22379)[0m     @     0x7fa2cba0a388 at::native::copy_impl()
[2m[36m(pid=22379)[0m     @     0x7fa2cba0c5a4 at::native::copy_()
[2m[36m(pid=22305)[0m     @     0x7f14af2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22305)[0m     @     0x7f14af2b2388 at::native::copy_impl()
[2m[36m(pid=22300)[0m     @     0x7edb952a8d91 at::TensorIterator::for_each()
[2m[36m(pid=22300)[0m     @     0x7edb95b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22300)[0m     @     0x7edb95baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22300)[0m     @     0x7edb95050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22300)[0m     @     0x7edb9504e388 at::native::copy_impl()
[2m[36m(pid=22362)[0m     @     0x7fbf41fa75a4 at::native::copy_()
[2m[36m(pid=22362)[0m     @     0x7fbf426924f5 at::Tensor::copy_()
[2m[36m(pid=22362)[0m     @     0x7fbf44b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22354)[0m     @     0x7f2bb39cc4f5 at::Tensor::copy_()
[2m[36m(pid=22354)[0m     @     0x7f2bb9a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22354)[0m     @     0x561e6241dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22354)[0m     @     0x561e62378b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22354)[0m     @     0x561e62403baf _PyEval_EvalCodeWithName
[2m[36m(pid=22354)[0m     @     0x561e62404a20 method_vectorcall
[2m[36m(pid=22354)[0m     @     0x561e62378bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22354)[0m     @     0x561e62403baf _PyEval_EvalCodeWithName
[2m[36m(pid=22354)[0m     @     0x561e62404643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22354)[0m     @     0x561e62379689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22354)[0m     @     0x561e62403baf _PyEval_EvalCodeWithName
[2m[36m(pid=22354)[0m     @     0x561e62404643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22354)[0m     @     0x561e62379689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22354)[0m     @     0x561e62403baf _PyEval_EvalCodeWithName
[2m[36m(pid=22354)[0m     @     0x561e62404643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22354)[0m     @     0x561e62379689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22354)[0m     @     0x561e62403baf _PyEval_EvalCodeWithName
[2m[36m(pid=22354)[0m     @     0x561e62404643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22354)[0m     @     0x561e62379689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x7efdf513b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22316)[0m     @     0x55b0cc8a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22316)[0m     @     0x55b0cc7fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x55b0cc888baf _PyEval_EvalCodeWithName
[2m[36m(pid=22316)[0m     @     0x55b0cc889a20 method_vectorcall
[2m[36m(pid=22316)[0m     @     0x55b0cc7fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x55b0cc888baf _PyEval_EvalCodeWithName
[2m[36m(pid=22316)[0m     @     0x55b0cc889643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22316)[0m     @     0x55b0cc7fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x55b0cc888baf _PyEval_EvalCodeWithName
[2m[36m(pid=22316)[0m     @     0x55b0cc889643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22316)[0m     @     0x55b0cc7fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x55b0cc888baf _PyEval_EvalCodeWithName
[2m[36m(pid=22316)[0m     @     0x55b0cc889643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22316)[0m     @     0x55b0cc7fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22316)[0m     @     0x55b0cc888baf _PyEval_EvalCodeWithName
[2m[36m(pid=22316)[0m     @     0x55b0cc889643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22316)[0m     @     0x55b0cc7fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x7f1cd3a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22322)[0m     @     0x7f1cd3a37388 at::native::copy_impl()
[2m[36m(pid=22322)[0m     @     0x7f1cd3a395a4 at::native::copy_()
[2m[36m(pid=22441)[0m     @     0x7edaf25d44f5 at::Tensor::copy_()
[2m[36m(pid=22441)[0m     @     0x7edaf847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22441)[0m     @     0x55949a457fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22441)[0m     @     0x55949a3b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22441)[0m     @     0x55949a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22441)[0m     @     0x55949a43ea20 method_vectorcall
[2m[36m(pid=22441)[0m     @     0x55949a3b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22441)[0m     @     0x55949a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22441)[0m     @     0x55949a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22441)[0m     @     0x55949a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22441)[0m     @     0x55949a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22441)[0m     @     0x55949a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22441)[0m     @     0x55949a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22441)[0m     @     0x55949a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22441)[0m     @     0x55949a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22441)[0m     @     0x55949a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22441)[0m     @     0x55949a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22441)[0m     @     0x55949a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22441)[0m     @     0x55949a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x7f4a30c764f5 at::Tensor::copy_()
[2m[36m(pid=22433)[0m     @     0x7f4a36d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22433)[0m     @     0x5587ee121fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22433)[0m     @     0x5587ee07cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x5587ee107baf _PyEval_EvalCodeWithName
[2m[36m(pid=22433)[0m     @     0x5587ee108a20 method_vectorcall
[2m[36m(pid=22433)[0m     @     0x5587ee07cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x5587ee107baf _PyEval_EvalCodeWithName
[2m[36m(pid=22433)[0m     @     0x5587ee108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22433)[0m     @     0x5587ee07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x5587ee107baf _PyEval_EvalCodeWithName
[2m[36m(pid=22433)[0m     @     0x5587ee108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22433)[0m     @     0x5587ee07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x5587ee107baf _PyEval_EvalCodeWithName
[2m[36m(pid=22433)[0m     @     0x5587ee108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22433)[0m     @     0x5587ee07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22433)[0m     @     0x5587ee107baf _PyEval_EvalCodeWithName
[2m[36m(pid=22433)[0m     @     0x5587ee108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22433)[0m     @     0x5587ee07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x7f7480e9b4f5 at::Tensor::copy_()
[2m[36m(pid=22365)[0m     @     0x7f7486f4679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22365)[0m     @     0x5648430b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22365)[0m     @     0x564843010b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x56484309bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22365)[0m     @     0x56484309ca20 method_vectorcall
[2m[36m(pid=22365)[0m     @     0x564843010bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x56484309bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22365)[0m     @     0x56484309c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22365)[0m     @     0x564843011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x56484309bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22365)[0m     @     0x56484309c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22365)[0m     @     0x564843011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x56484309bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22365)[0m     @     0x56484309c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22365)[0m     @     0x564843011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22365)[0m     @     0x56484309bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22365)[0m     @     0x56484309c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22365)[0m     @     0x564843011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x560de73d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22410)[0m     @     0x560de73da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22410)[0m     @     0x560de734f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x560de73d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22410)[0m     @     0x560de73da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22410)[0m     @     0x560de734f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22410)[0m     @     0x560de73d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22410)[0m     @     0x560de73da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22410)[0m     @     0x560de734f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x7f8f7c23aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22402)[0m     @     0x7f8f7c238388 at::native::copy_impl()
[2m[36m(pid=22402)[0m     @     0x7f8f7c23a5a4 at::native::copy_()
[2m[36m(pid=22402)[0m     @     0x7f8f7c9254f5 at::Tensor::copy_()
[2m[36m(pid=22428)[0m     @     0x7ed7e0d98b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22428)[0m     @     0x7ed7e0dbbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22428)[0m     @     0x7ed7e025da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22428)[0m     @     0x7ed7e025b388 at::native::copy_impl()
[2m[36m(pid=22428)[0m     @     0x7ed7e025d5a4 at::native::copy_()
[2m[36m(pid=22312)[0m     @     0x7f128c0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22312)[0m     @     0x7f128c101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22312)[0m     @     0x7f128b5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22312)[0m     @     0x7f128b5a1388 at::native::copy_impl()
[2m[36m(pid=22312)[0m     @     0x7f128b5a35a4 at::native::copy_()
[2m[36m(pid=22401)[0m     @     0x7f4ba0d75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22401)[0m     @     0x7f4ba0d98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22401)[0m     @     0x7f4ba023aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22401)[0m     @     0x7f4ba0238388 at::native::copy_impl()
[2m[36m(pid=22401)[0m     @     0x7f4ba023a5a4 at::native::copy_()
[2m[36m(pid=22363)[0m     @     0x7f757c1b9d91 at::TensorIterator::for_each()
[2m[36m(pid=22363)[0m     @     0x7f757ca9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22363)[0m     @     0x7f757cabfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22363)[0m     @     0x7f757bf61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22363)[0m     @     0x7f757bf5f388 at::native::copy_impl()
[2m[36m(pid=22371)[0m     @     0x7f4e79a93d91 at::TensorIterator::for_each()
[2m[36m(pid=22371)[0m     @     0x7f4e7a376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22371)[0m     @     0x7f4e7a399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22371)[0m     @     0x7f4e7983ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22371)[0m     @     0x7f4e79839388 at::native::copy_impl()
[2m[36m(pid=22325)[0m     @     0x7eea4eb68ad3 at::TensorIterator::for_each()
[2m[36m(pid=22325)[0m     @     0x7eea4eb68d91 at::TensorIterator::for_each()
[2m[36m(pid=22325)[0m     @     0x7eea4f44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22325)[0m     @     0x7eea4f46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22325)[0m     @     0x7eea4e910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22304)[0m     @     0x7f5fe475fd91 at::TensorIterator::for_each()
[2m[36m(pid=22304)[0m     @     0x7f5fe5042b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22304)[0m     @     0x7f5fe5065c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22304)[0m     @     0x7f5fe4507a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22304)[0m     @     0x7f5fe4505388 at::native::copy_impl()
[2m[36m(pid=22301)[0m     @     0x7f1357f63388 at::native::copy_impl()
[2m[36m(pid=22301)[0m     @     0x7f1357f655a4 at::native::copy_()
[2m[36m(pid=22301)[0m     @     0x7f13586504f5 at::Tensor::copy_()
[2m[36m(pid=22301)[0m     @     0x7f135ab238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22310)[0m     @     0x55d481edf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22310)[0m     @     0x55d481f69baf _PyEval_EvalCodeWithName
[2m[36m(pid=22310)[0m     @     0x55d481f6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22310)[0m     @     0x55d481edf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22310)[0m     @     0x55d481f69baf _PyEval_EvalCodeWithName
[2m[36m(pid=22310)[0m     @     0x55d481f6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22310)[0m     @     0x55d481edf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22310)[0m     @     0x55d481f69baf _PyEval_EvalCodeWithName
[2m[36m(pid=22310)[0m     @     0x55d481f6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22310)[0m     @     0x55d481edf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742eff4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742f07ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22422)[0m     @     0x55742f07f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22422)[0m     @     0x55742eff4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742f07ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22422)[0m     @     0x55742f07f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22422)[0m     @     0x55742eff4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22422)[0m     @     0x55742f07ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22422)[0m     @     0x55742f07f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22422)[0m     @     0x55742eff4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x7f6f05cfb4f5 at::Tensor::copy_()
[2m[36m(pid=22405)[0m     @     0x7f6f0bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22405)[0m     @     0x56127fe39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22405)[0m     @     0x56127fd94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x56127fe1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22405)[0m     @     0x56127fe20a20 method_vectorcall
[2m[36m(pid=22405)[0m     @     0x56127fd94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x56127fe1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22405)[0m     @     0x56127fe20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22405)[0m     @     0x56127fd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x56127fe1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22405)[0m     @     0x56127fe20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22405)[0m     @     0x56127fd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x56127fe1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22405)[0m     @     0x56127fe20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22405)[0m     @     0x56127fd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22405)[0m     @     0x56127fe1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22405)[0m     @     0x56127fe20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22405)[0m     @     0x56127fd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x7fc3872df388 at::native::copy_impl()
[2m[36m(pid=22436)[0m     @     0x7fc3872e15a4 at::native::copy_()
[2m[36m(pid=22404)[0m     @     0x7fcadd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22404)[0m     @     0x7fcadd2f8388 at::native::copy_impl()
[2m[36m(pid=22404)[0m     @     0x7fcadd2fa5a4 at::native::copy_()
[2m[36m(pid=22335)[0m     @     0x5643c3236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22335)[0m     @     0x5643c31ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x7f64661a55a4 at::native::copy_()
[2m[36m(pid=22329)[0m     @     0x7f64668904f5 at::Tensor::copy_()
[2m[36m(pid=22329)[0m     @     0x7f6468d638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22306)[0m     @     0x7f1cccb8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22306)[0m     @     0x7f1cccb88388 at::native::copy_impl()
[2m[36m(pid=22306)[0m     @     0x7f1cccb8a5a4 at::native::copy_()
[2m[36m(pid=22306)[0m     @     0x7f1ccd2754f5 at::Tensor::copy_()
[2m[36m(pid=22324)[0m     @     0x7f193feb5388 at::native::copy_impl()
[2m[36m(pid=22324)[0m     @     0x7f193feb75a4 at::native::copy_()
[2m[36m(pid=22324)[0m     @     0x7f19405a24f5 at::Tensor::copy_()
[2m[36m(pid=22324)[0m     @     0x7f1942a758de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22364)[0m     @     0x7f15287e3d91 at::TensorIterator::for_each()
[2m[36m(pid=22364)[0m     @     0x7f15290c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22364)[0m     @     0x7f15290e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22364)[0m     @     0x7f152858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22364)[0m     @     0x7f1528589388 at::native::copy_impl()
[2m[36m(pid=22364)[0m     @     0x7f152858b5a4 at::native::copy_()
[2m[36m(pid=22309)[0m     @     0x7f10df6b64f5 at::Tensor::copy_()
[2m[36m(pid=22309)[0m     @     0x7f10e1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22309)[0m     @     0x7f10df6b64f5 at::Tensor::copy_()
[2m[36m(pid=22309)[0m     @     0x7f10e576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22309)[0m     @     0x5597a540bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22309)[0m     @     0x5597a5366b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22309)[0m     @     0x5597a53f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22309)[0m     @     0x5597a53f2a20 method_vectorcall
[2m[36m(pid=22309)[0m     @     0x5597a5366bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22309)[0m     @     0x5597a53f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22309)[0m     @     0x5597a53f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22309)[0m     @     0x5597a5367689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22309)[0m     @     0x5597a53f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22309)[0m     @     0x5597a53f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22309)[0m     @     0x5597a5367689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22309)[0m     @     0x5597a53f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22309)[0m     @     0x5597a53f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22309)[0m     @     0x5597a5367689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22309)[0m     @     0x5597a53f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22309)[0m     @     0x5597a53f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22309)[0m     @     0x5597a5367689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22315)[0m     @     0x5641bf199baf _PyEval_EvalCodeWithName
[2m[36m(pid=22315)[0m     @     0x5641bf19a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22315)[0m     @     0x5641bf10f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x7f7907c8e4f5 at::Tensor::copy_()
[2m[36m(pid=22383)[0m     @     0x7f790dd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22383)[0m     @     0x560886a06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22383)[0m     @     0x560886961b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x5608869ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22383)[0m     @     0x5608869eda20 method_vectorcall
[2m[36m(pid=22383)[0m     @     0x560886961bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x5608869ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22383)[0m     @     0x5608869ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22383)[0m     @     0x560886962689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x5608869ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22383)[0m     @     0x5608869ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22383)[0m     @     0x560886962689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x5608869ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22383)[0m     @     0x5608869ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22383)[0m     @     0x560886962689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22383)[0m     @     0x5608869ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22383)[0m     @     0x5608869ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22383)[0m     @     0x560886962689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x7eed6682b4f5 at::Tensor::copy_()
[2m[36m(pid=22311)[0m     @     0x7eed6c8d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22311)[0m     @     0x55d942390fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22311)[0m     @     0x55d9422ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x55d942376baf _PyEval_EvalCodeWithName
[2m[36m(pid=22311)[0m     @     0x55d942377a20 method_vectorcall
[2m[36m(pid=22311)[0m     @     0x55d9422ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x55d942376baf _PyEval_EvalCodeWithName
[2m[36m(pid=22311)[0m     @     0x55d942377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22311)[0m     @     0x55d9422ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x55d942376baf _PyEval_EvalCodeWithName
[2m[36m(pid=22311)[0m     @     0x55d942377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22311)[0m     @     0x55d9422ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x55d942376baf _PyEval_EvalCodeWithName
[2m[36m(pid=22311)[0m     @     0x55d942377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22311)[0m     @     0x55d9422ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22311)[0m     @     0x55d942376baf _PyEval_EvalCodeWithName
[2m[36m(pid=22311)[0m     @     0x55d942377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22311)[0m     @     0x55d9422ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x7f6aae796d91 at::TensorIterator::for_each()
[2m[36m(pid=22370)[0m     @     0x7f6aaf079b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22370)[0m     @     0x7f6aaf09cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22377)[0m     @     0x7fc05eef9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22377)[0m     @     0x7fc05eef7388 at::native::copy_impl()
[2m[36m(pid=22377)[0m     @     0x7fc05eef95a4 at::native::copy_()
[2m[36m(pid=22429)[0m     @     0x7fc2a75648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22313)[0m     @     0x7faeb7cfb5a4 at::native::copy_()
[2m[36m(pid=22313)[0m     @     0x7faeb83e64f5 at::Tensor::copy_()
[2m[36m(pid=22302)[0m     @     0x7f64699cf5a4 at::native::copy_()
[2m[36m(pid=22302)[0m     @     0x7f646a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=22308)[0m     @     0x7f36da1405a4 at::native::copy_()
[2m[36m(pid=22308)[0m     @     0x7f36da82b4f5 at::Tensor::copy_()
[2m[36m(pid=22308)[0m     @     0x7f36dccfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22319)[0m     @     0x7facbd1dc5a4 at::native::copy_()
[2m[36m(pid=22319)[0m     @     0x7facbd8c74f5 at::Tensor::copy_()
[2m[36m(pid=22384)[0m     @     0x7fb230f27d91 at::TensorIterator::for_each()
[2m[36m(pid=22384)[0m     @     0x7fb23180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22384)[0m     @     0x7fb23182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22384)[0m     @     0x7fb230ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22384)[0m     @     0x7fb230ccd388 at::native::copy_impl()
[2m[36m(pid=22299)[0m     @     0x7f7d6d9cf5a4 at::native::copy_()
[2m[36m(pid=22299)[0m     @     0x7f7d6e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=22366)[0m     @     0x7f78765fa5a4 at::native::copy_()
[2m[36m(pid=22366)[0m     @     0x7f7876ce54f5 at::Tensor::copy_()
[2m[36m(pid=22294)[0m     @     0x55fbafde5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22294)[0m     @     0x55fbafde6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22294)[0m     @     0x55fbafd5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22294)[0m     @     0x55fbafde5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22294)[0m     @     0x55fbafde6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22294)[0m     @     0x55fbafd5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22294)[0m     @     0x55fbafde5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22294)[0m     @     0x55fbafde6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22294)[0m     @     0x55fbafd5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22294)[0m     @     0x55fbafde5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22294)[0m     @     0x55fbafde6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22294)[0m     @     0x55fbafd5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x7f05bbf0a388 at::native::copy_impl()
[2m[36m(pid=22412)[0m     @     0x7f05bbf0c5a4 at::native::copy_()
[2m[36m(pid=22412)[0m     @     0x7f05bc5f74f5 at::Tensor::copy_()
[2m[36m(pid=22412)[0m     @     0x7f05beaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22395)[0m     @     0x7efaa4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=22395)[0m     @     0x7efaa580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22395)[0m     @     0x7efaa582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22395)[0m     @     0x7efaa4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22395)[0m     @     0x7efaa4ccd388 at::native::copy_impl()
[2m[36m(pid=22392)[0m     @     0x7f2c77764388 at::native::copy_impl()
[2m[36m(pid=22392)[0m     @     0x7f2c777665a4 at::native::copy_()
[2m[36m(pid=22392)[0m     @     0x7f2c77e514f5 at::Tensor::copy_()
[2m[36m(pid=22392)[0m     @     0x7f2c7a3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22369)[0m     @     0x7f1e83a19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22369)[0m     @     0x7f1e83a3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22369)[0m     @     0x7f1e82edea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22369)[0m     @     0x7f1e82edc388 at::native::copy_impl()
[2m[36m(pid=22369)[0m     @     0x7f1e82ede5a4 at::native::copy_()
[2m[36m(pid=22380)[0m     @     0x7f844f49f4f5 at::Tensor::copy_()
[2m[36m(pid=22380)[0m     @     0x7f84519728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22380)[0m     @     0x7f844f49f4f5 at::Tensor::copy_()
[2m[36m(pid=22380)[0m     @     0x7f845554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22380)[0m     @     0x56275e421fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22380)[0m     @     0x56275e37cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22380)[0m     @     0x56275e407baf _PyEval_EvalCodeWithName
[2m[36m(pid=22380)[0m     @     0x56275e408a20 method_vectorcall
[2m[36m(pid=22380)[0m     @     0x56275e37cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22380)[0m     @     0x56275e407baf _PyEval_EvalCodeWithName
[2m[36m(pid=22380)[0m     @     0x56275e408643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22380)[0m     @     0x56275e37d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22380)[0m     @     0x56275e407baf _PyEval_EvalCodeWithName
[2m[36m(pid=22380)[0m     @     0x56275e408643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22380)[0m     @     0x56275e37d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22380)[0m     @     0x56275e407baf _PyEval_EvalCodeWithName
[2m[36m(pid=22380)[0m     @     0x56275e408643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22380)[0m     @     0x56275e37d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22380)[0m     @     0x56275e407baf _PyEval_EvalCodeWithName
[2m[36m(pid=22380)[0m     @     0x56275e408643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22380)[0m     @     0x56275e37d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x7f2e77d38388 at::native::copy_impl()
[2m[36m(pid=22298)[0m     @     0x7f2e77d3a5a4 at::native::copy_()
[2m[36m(pid=22298)[0m     @     0x7f2e784254f5 at::Tensor::copy_()
[2m[36m(pid=22298)[0m     @     0x7f2e7a8f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22295)[0m     @     0x7ef6290e35a4 at::native::copy_()
[2m[36m(pid=22295)[0m     @     0x7ef6297ce4f5 at::Tensor::copy_()
[2m[36m(pid=22295)[0m     @     0x7ef62bca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22295)[0m     @     0x7ef6297ce4f5 at::Tensor::copy_()
[2m[36m(pid=22295)[0m     @     0x7ef62f87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22295)[0m     @     0x55a24cd17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22295)[0m     @     0x55a24cc72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x7f3ca32e15a4 at::native::copy_()
[2m[36m(pid=22368)[0m     @     0x7f3ca39cc4f5 at::Tensor::copy_()
[2m[36m(pid=22368)[0m     @     0x7f3ca5e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22330)[0m     @     0x7f0faeb954f5 at::Tensor::copy_()
[2m[36m(pid=22330)[0m     @     0x7f0fb10688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22330)[0m     @     0x7f0faeb954f5 at::Tensor::copy_()
[2m[36m(pid=22330)[0m     @     0x7f0fb4c4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22330)[0m     @     0x561af840dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22330)[0m     @     0x561af8368b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22330)[0m     @     0x561af83f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22330)[0m     @     0x561af83f4a20 method_vectorcall
[2m[36m(pid=22330)[0m     @     0x561af8368bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22330)[0m     @     0x561af83f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22330)[0m     @     0x561af83f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22330)[0m     @     0x561af8369689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22330)[0m     @     0x561af83f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22330)[0m     @     0x561af83f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22330)[0m     @     0x561af8369689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x7fbdafc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22393)[0m     @     0x7fbdafc48388 at::native::copy_impl()
[2m[36m(pid=22393)[0m     @     0x7fbdafc4a5a4 at::native::copy_()
[2m[36m(pid=22393)[0m     @     0x7fbdb03354f5 at::Tensor::copy_()
[2m[36m(pid=22359)[0m     @     0x7f10c3653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22359)[0m     @     0x7f10c2af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22359)[0m     @     0x7f10c2af3388 at::native::copy_impl()
[2m[36m(pid=22359)[0m     @     0x7f10c2af55a4 at::native::copy_()
[2m[36m(pid=22359)[0m     @     0x7f10c31e04f5 at::Tensor::copy_()
[2m[36m(pid=22397)[0m     @     0x7ee989050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22397)[0m     @     0x7ee98904e388 at::native::copy_impl()
[2m[36m(pid=22397)[0m     @     0x7ee9890505a4 at::native::copy_()
[2m[36m(pid=22397)[0m     @     0x7ee98973b4f5 at::Tensor::copy_()
[2m[36m(pid=22314)[0m     @     0x7f35951dc5a4 at::native::copy_()
[2m[36m(pid=22314)[0m     @     0x7f35958c74f5 at::Tensor::copy_()
[2m[36m(pid=22314)[0m     @     0x7f3597d9a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22314)[0m     @     0x7f35958c74f5 at::Tensor::copy_()
[2m[36m(pid=22314)[0m     @     0x7f359b97279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22417)[0m     @     0x7f8a97cfb5a4 at::native::copy_()
[2m[36m(pid=22417)[0m     @     0x7f8a983e64f5 at::Tensor::copy_()
[2m[36m(pid=22417)[0m     @     0x7f8a9a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22417)[0m     @     0x7f8a983e64f5 at::Tensor::copy_()
[2m[36m(pid=22417)[0m     @     0x7f8a9e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22417)[0m     @     0x557c94056fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22417)[0m     @     0x557c93fb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22417)[0m     @     0x557c9403cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22417)[0m     @     0x557c9403da20 method_vectorcall
[2m[36m(pid=22417)[0m     @     0x557c93fb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x7fa445ea25a4 at::native::copy_()
[2m[36m(pid=22297)[0m     @     0x7fa44658d4f5 at::Tensor::copy_()
[2m[36m(pid=22297)[0m     @     0x7fa448a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22297)[0m     @     0x7fa44658d4f5 at::Tensor::copy_()
[2m[36m(pid=22297)[0m     @     0x7fa44c63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22297)[0m     @     0x55f132b14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22297)[0m     @     0x55f132a6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x55f132afabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22297)[0m     @     0x55f132afba20 method_vectorcall
[2m[36m(pid=22297)[0m     @     0x55f132a6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x55f132afabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22297)[0m     @     0x55f132afb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22297)[0m     @     0x55f132a70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x55f132afabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22297)[0m     @     0x55f132afb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22297)[0m     @     0x55f132a70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x7fa2cc0f74f5 at::Tensor::copy_()
[2m[36m(pid=22379)[0m     @     0x7fa2ce5ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22379)[0m     @     0x7fa2cc0f74f5 at::Tensor::copy_()
[2m[36m(pid=22379)[0m     @     0x7fa2d21a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22379)[0m     @     0x56418a873fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22379)[0m     @     0x56418a7ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a859baf _PyEval_EvalCodeWithName
[2m[36m(pid=22379)[0m     @     0x56418a85aa20 method_vectorcall
[2m[36m(pid=22379)[0m     @     0x56418a7cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a859baf _PyEval_EvalCodeWithName
[2m[36m(pid=22379)[0m     @     0x56418a85a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22379)[0m     @     0x56418a7cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a859baf _PyEval_EvalCodeWithName
[2m[36m(pid=22379)[0m     @     0x56418a85a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22379)[0m     @     0x56418a7cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a859baf _PyEval_EvalCodeWithName
[2m[36m(pid=22379)[0m     @     0x56418a85a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22379)[0m     @     0x56418a7cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a859baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x7f14af2b45a4 at::native::copy_()
[2m[36m(pid=22305)[0m     @     0x7f14af99f4f5 at::Tensor::copy_()
[2m[36m(pid=22305)[0m     @     0x7f14b1e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22305)[0m     @     0x7f14af99f4f5 at::Tensor::copy_()
[2m[36m(pid=22305)[0m     @     0x7f14b5a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22305)[0m     @     0x55bdc637bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22305)[0m     @     0x55bdc62d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22305)[0m     @     0x55bdc6361baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x55bdc6362a20 method_vectorcall
[2m[36m(pid=22305)[0m     @     0x55bdc62d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x7edb950505a4 at::native::copy_()
[2m[36m(pid=22300)[0m     @     0x7edb9573b4f5 at::Tensor::copy_()
[2m[36m(pid=22300)[0m     @     0x7edb97c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22362)[0m     @     0x7fbf426924f5 at::Tensor::copy_()
[2m[36m(pid=22362)[0m     @     0x7fbf4873d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22362)[0m     @     0x563487026fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22362)[0m     @     0x563486f81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22362)[0m     @     0x56348700cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22362)[0m     @     0x56348700da20 method_vectorcall
[2m[36m(pid=22362)[0m     @     0x563486f81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22362)[0m     @     0x56348700cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22362)[0m     @     0x56348700d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22362)[0m     @     0x563486f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22362)[0m     @     0x56348700cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22362)[0m     @     0x56348700d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22362)[0m     @     0x563486f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22362)[0m     @     0x56348700cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22362)[0m     @     0x56348700d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22362)[0m     @     0x563486f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22362)[0m     @     0x56348700cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22362)[0m     @     0x56348700d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22362)[0m     @     0x563486f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x7f1cd41244f5 at::Tensor::copy_()
[2m[36m(pid=22322)[0m     @     0x7f1cd65f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22322)[0m     @     0x7f1cd41244f5 at::Tensor::copy_()
[2m[36m(pid=22322)[0m     @     0x7f1cda1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22322)[0m     @     0x5607eeb13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22322)[0m     @     0x5607eea6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x5607eeaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22322)[0m     @     0x5607eeafaa20 method_vectorcall
[2m[36m(pid=22322)[0m     @     0x5607eea6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x5607eeaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22322)[0m     @     0x5607eeafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22322)[0m     @     0x5607eea6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x5607eeaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22322)[0m     @     0x5607eeafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22322)[0m     @     0x5607eea6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x5607eeaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22322)[0m     @     0x5607eeafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22322)[0m     @     0x5607eea6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22322)[0m     @     0x5607eeaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22322)[0m     @     0x5607eeafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22322)[0m     @     0x5607eea6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x7f8f7edf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22402)[0m     @     0x7f8f7c9254f5 at::Tensor::copy_()
[2m[36m(pid=22402)[0m     @     0x7f8f829d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22402)[0m     @     0x559fa2c67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22402)[0m     @     0x559fa2bc2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x559fa2c4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22402)[0m     @     0x559fa2c4ea20 method_vectorcall
[2m[36m(pid=22402)[0m     @     0x559fa2bc2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x559fa2c4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22402)[0m     @     0x559fa2c4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22402)[0m     @     0x559fa2bc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x559fa2c4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22402)[0m     @     0x559fa2c4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22402)[0m     @     0x559fa2bc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x559fa2c4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22402)[0m     @     0x559fa2c4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22402)[0m     @     0x559fa2bc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22402)[0m     @     0x559fa2c4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22402)[0m     @     0x559fa2c4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22402)[0m     @     0x559fa2bc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x7ed7e09484f5 at::Tensor::copy_()
[2m[36m(pid=22428)[0m     @     0x7ed7e2e1b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22428)[0m     @     0x7ed7e09484f5 at::Tensor::copy_()
[2m[36m(pid=22428)[0m     @     0x7ed7e69f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22428)[0m     @     0x5643d6de7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22428)[0m     @     0x5643d6d42b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x7f128bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=22312)[0m     @     0x7f128e1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22401)[0m     @     0x7f4ba09254f5 at::Tensor::copy_()
[2m[36m(pid=22401)[0m     @     0x7f4ba2df88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22363)[0m     @     0x7f757bf615a4 at::native::copy_()
[2m[36m(pid=22363)[0m     @     0x7f757c64c4f5 at::Tensor::copy_()
[2m[36m(pid=22371)[0m     @     0x7f4e7983b5a4 at::native::copy_()
[2m[36m(pid=22371)[0m     @     0x7f4e79f264f5 at::Tensor::copy_()
[2m[36m(pid=22371)[0m     @     0x7f4e7c3f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22325)[0m     @     0x7eea4e90e388 at::native::copy_impl()
[2m[36m(pid=22325)[0m     @     0x7eea4e9105a4 at::native::copy_()
[2m[36m(pid=22325)[0m     @     0x7eea4effb4f5 at::Tensor::copy_()
[2m[36m(pid=22304)[0m     @     0x7f5fe45075a4 at::native::copy_()
[2m[36m(pid=22304)[0m     @     0x7f5fe4bf24f5 at::Tensor::copy_()
[2m[36m(pid=22301)[0m     @     0x7f13586504f5 at::Tensor::copy_()
[2m[36m(pid=22301)[0m     @     0x7f135e6fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22301)[0m     @     0x55dd909a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22301)[0m     @     0x55dd908fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x55dd90988baf _PyEval_EvalCodeWithName
[2m[36m(pid=22301)[0m     @     0x55dd90989a20 method_vectorcall
[2m[36m(pid=22301)[0m     @     0x55dd908fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x55dd90988baf _PyEval_EvalCodeWithName
[2m[36m(pid=22301)[0m     @     0x55dd90989643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22301)[0m     @     0x55dd908fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x55dd90988baf _PyEval_EvalCodeWithName
[2m[36m(pid=22301)[0m     @     0x55dd90989643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22301)[0m     @     0x55dd908fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x55dd90988baf _PyEval_EvalCodeWithName
[2m[36m(pid=22301)[0m     @     0x55dd90989643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22301)[0m     @     0x55dd908fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22301)[0m     @     0x55dd90988baf _PyEval_EvalCodeWithName
[2m[36m(pid=22301)[0m     @     0x55dd90989643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22301)[0m     @     0x55dd908fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x7fc3879cc4f5 at::Tensor::copy_()
[2m[36m(pid=22404)[0m     @     0x7fcadd9e54f5 at::Tensor::copy_()
[2m[36m(pid=22404)[0m     @     0x7fcadfeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22404)[0m     @     0x7fcadd9e54f5 at::Tensor::copy_()
[2m[36m(pid=22404)[0m     @     0x7fcae3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22404)[0m     @     0x55e38a222fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22404)[0m     @     0x55e38a17db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a208baf _PyEval_EvalCodeWithName
[2m[36m(pid=22404)[0m     @     0x55e38a209a20 method_vectorcall
[2m[36m(pid=22404)[0m     @     0x55e38a17dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a208baf _PyEval_EvalCodeWithName
[2m[36m(pid=22404)[0m     @     0x55e38a209643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22404)[0m     @     0x55e38a17e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a208baf _PyEval_EvalCodeWithName
[2m[36m(pid=22404)[0m     @     0x55e38a209643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22404)[0m     @     0x55e38a17e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a208baf _PyEval_EvalCodeWithName
[2m[36m(pid=22404)[0m     @     0x55e38a209643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22329)[0m     @     0x7f64668904f5 at::Tensor::copy_()
[2m[36m(pid=22329)[0m     @     0x7f646c93b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22329)[0m     @     0x563b46db9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22329)[0m     @     0x563b46d14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x563b46d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x563b46da0a20 method_vectorcall
[2m[36m(pid=22329)[0m     @     0x563b46d14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x563b46d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x563b46da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22329)[0m     @     0x563b46d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x563b46d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x563b46da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22329)[0m     @     0x563b46d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x563b46d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x563b46da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22329)[0m     @     0x563b46d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22329)[0m     @     0x563b46d9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22329)[0m     @     0x563b46da0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22329)[0m     @     0x563b46d15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x7f1ccf7488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22306)[0m     @     0x7f1ccd2754f5 at::Tensor::copy_()
[2m[36m(pid=22306)[0m     @     0x7f1cd332079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22306)[0m     @     0x558bb6eb5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22306)[0m     @     0x558bb6e10b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x558bb6e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22306)[0m     @     0x558bb6e9ca20 method_vectorcall
[2m[36m(pid=22306)[0m     @     0x558bb6e10bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x558bb6e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22306)[0m     @     0x558bb6e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22306)[0m     @     0x558bb6e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x558bb6e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22306)[0m     @     0x558bb6e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22306)[0m     @     0x558bb6e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x558bb6e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22306)[0m     @     0x558bb6e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22306)[0m     @     0x558bb6e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22306)[0m     @     0x558bb6e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22306)[0m     @     0x558bb6e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22306)[0m     @     0x558bb6e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x7f19405a24f5 at::Tensor::copy_()
[2m[36m(pid=22324)[0m     @     0x7f194664d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22324)[0m     @     0x55c315235fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22324)[0m     @     0x55c315190b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x55c31521bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22324)[0m     @     0x55c31521ca20 method_vectorcall
[2m[36m(pid=22324)[0m     @     0x55c315190bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x55c31521bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22324)[0m     @     0x55c31521c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22324)[0m     @     0x55c315191689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x55c31521bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22324)[0m     @     0x55c31521c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22324)[0m     @     0x55c315191689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x55c31521bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22324)[0m     @     0x55c31521c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22324)[0m     @     0x55c315191689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22324)[0m     @     0x55c31521bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22324)[0m     @     0x55c31521c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22324)[0m     @     0x55c315191689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x7f1528c764f5 at::Tensor::copy_()
[2m[36m(pid=22364)[0m     @     0x7f152b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22364)[0m     @     0x7f1528c764f5 at::Tensor::copy_()
[2m[36m(pid=22364)[0m     @     0x7f152ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22364)[0m     @     0x5570c1fb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22364)[0m     @     0x5570c1f0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x5570c1f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22364)[0m     @     0x5570c1f9ba20 method_vectorcall
[2m[36m(pid=22364)[0m     @     0x5570c1f0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x5570c1f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22364)[0m     @     0x5570c1f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22364)[0m     @     0x5570c1f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x5570c1f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22364)[0m     @     0x5570c1f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22364)[0m     @     0x5570c1f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x5570c1f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22364)[0m     @     0x5570c1f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22364)[0m     @     0x5570c1f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22364)[0m     @     0x5570c1f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22364)[0m     @     0x5570c1f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22364)[0m     @     0x5570c1f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x7f6aae53ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22370)[0m     @     0x7f6aae53c388 at::native::copy_impl()
[2m[36m(pid=22370)[0m     @     0x7f6aae53e5a4 at::native::copy_()
[2m[36m(pid=22370)[0m     @     0x7f6aaec294f5 at::Tensor::copy_()
[2m[36m(pid=22377)[0m     @     0x7fc05f5e44f5 at::Tensor::copy_()
[2m[36m(pid=22377)[0m     @     0x7fc061ab78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22377)[0m     @     0x7fc05f5e44f5 at::Tensor::copy_()
[2m[36m(pid=22377)[0m     @     0x7fc06568f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22377)[0m     @     0x5577c0578fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22377)[0m     @     0x5577c04d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22377)[0m     @     0x5577c055ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22377)[0m     @     0x5577c055fa20 method_vectorcall
[2m[36m(pid=22377)[0m     @     0x5577c04d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22377)[0m     @     0x5577c055ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22377)[0m     @     0x5577c055f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22377)[0m     @     0x5577c04d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22377)[0m     @     0x5577c055ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22377)[0m     @     0x5577c055f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22377)[0m     @     0x5577c04d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22377)[0m     @     0x5577c055ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22377)[0m     @     0x5577c055f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22377)[0m     @     0x5577c04d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22377)[0m     @     0x5577c055ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22377)[0m     @     0x5577c055f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22377)[0m     @     0x5577c04d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x7fc2a7564ad3 at::TensorIterator::for_each()
[2m[36m(pid=22429)[0m     @     0x7fc2a7564d91 at::TensorIterator::for_each()
[2m[36m(pid=22313)[0m     @     0x7faeba8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22313)[0m     @     0x7faeb83e64f5 at::Tensor::copy_()
[2m[36m(pid=22313)[0m     @     0x7faebe49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22313)[0m     @     0x55ec3dae2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22313)[0m     @     0x55ec3da3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22313)[0m     @     0x55ec3dac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22313)[0m     @     0x55ec3dac9a20 method_vectorcall
[2m[36m(pid=22313)[0m     @     0x55ec3da3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22313)[0m     @     0x55ec3dac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22313)[0m     @     0x55ec3dac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22313)[0m     @     0x55ec3da3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22313)[0m     @     0x55ec3dac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22313)[0m     @     0x55ec3dac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22313)[0m     @     0x55ec3da3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22313)[0m     @     0x55ec3dac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22313)[0m     @     0x55ec3dac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22313)[0m     @     0x55ec3da3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22313)[0m     @     0x55ec3dac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22313)[0m     @     0x55ec3dac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22313)[0m     @     0x55ec3da3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x7f646c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22302)[0m     @     0x7f646a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=22302)[0m     @     0x7f647016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22302)[0m     @     0x560e2e511fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22302)[0m     @     0x560e2e46cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x560e2e4f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22302)[0m     @     0x560e2e4f8a20 method_vectorcall
[2m[36m(pid=22302)[0m     @     0x560e2e46cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x560e2e4f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22302)[0m     @     0x560e2e4f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22302)[0m     @     0x560e2e46d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x560e2e4f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22302)[0m     @     0x560e2e4f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22302)[0m     @     0x560e2e46d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x560e2e4f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22302)[0m     @     0x560e2e4f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22302)[0m     @     0x560e2e46d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22302)[0m     @     0x560e2e4f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22302)[0m     @     0x560e2e4f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22302)[0m     @     0x560e2e46d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x7f36da82b4f5 at::Tensor::copy_()
[2m[36m(pid=22308)[0m     @     0x7f36e08d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22308)[0m     @     0x55bc9af90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22308)[0m     @     0x55bc9aeebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x55bc9af76baf _PyEval_EvalCodeWithName
[2m[36m(pid=22308)[0m     @     0x55bc9af77a20 method_vectorcall
[2m[36m(pid=22308)[0m     @     0x55bc9aeebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x55bc9af76baf _PyEval_EvalCodeWithName
[2m[36m(pid=22308)[0m     @     0x55bc9af77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22308)[0m     @     0x55bc9aeec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x55bc9af76baf _PyEval_EvalCodeWithName
[2m[36m(pid=22308)[0m     @     0x55bc9af77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22308)[0m     @     0x55bc9aeec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x55bc9af76baf _PyEval_EvalCodeWithName
[2m[36m(pid=22308)[0m     @     0x55bc9af77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22308)[0m     @     0x55bc9aeec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22308)[0m     @     0x55bc9af76baf _PyEval_EvalCodeWithName
[2m[36m(pid=22308)[0m     @     0x55bc9af77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22308)[0m     @     0x55bc9aeec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x7facbfd9a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22319)[0m     @     0x7facbd8c74f5 at::Tensor::copy_()
[2m[36m(pid=22319)[0m     @     0x7facc397279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22319)[0m     @     0x563cdb9b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22319)[0m     @     0x563cdb911b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x563cdb99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22319)[0m     @     0x563cdb99da20 method_vectorcall
[2m[36m(pid=22319)[0m     @     0x563cdb911bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x563cdb99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22319)[0m     @     0x563cdb99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22319)[0m     @     0x563cdb912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x563cdb99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22319)[0m     @     0x563cdb99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22319)[0m     @     0x563cdb912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x563cdb99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22319)[0m     @     0x563cdb99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22319)[0m     @     0x563cdb912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22319)[0m     @     0x563cdb99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22319)[0m     @     0x563cdb99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22319)[0m     @     0x563cdb912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x7fb230ccf5a4 at::native::copy_()
[2m[36m(pid=22299)[0m     @     0x7f7d7058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22299)[0m     @     0x7f7d6e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=22299)[0m     @     0x7f7d7416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22299)[0m     @     0x55e1d98f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22299)[0m     @     0x55e1d984db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22299)[0m     @     0x55e1d98d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22299)[0m     @     0x55e1d98d9a20 method_vectorcall
[2m[36m(pid=22299)[0m     @     0x55e1d984dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22299)[0m     @     0x55e1d98d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22299)[0m     @     0x55e1d98d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22299)[0m     @     0x55e1d984e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22299)[0m     @     0x55e1d98d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22299)[0m     @     0x55e1d98d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22299)[0m     @     0x55e1d984e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22299)[0m     @     0x55e1d98d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22299)[0m     @     0x55e1d98d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22299)[0m     @     0x55e1d984e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22299)[0m     @     0x55e1d98d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22299)[0m     @     0x55e1d98d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22299)[0m     @     0x55e1d984e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x7f78791b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22366)[0m     @     0x7f7876ce54f5 at::Tensor::copy_()
[2m[36m(pid=22366)[0m     @     0x7f787cd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22366)[0m     @     0x55927b0e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22366)[0m     @     0x55927b040b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x55927b0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22366)[0m     @     0x55927b0cca20 method_vectorcall
[2m[36m(pid=22366)[0m     @     0x55927b040bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x55927b0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22366)[0m     @     0x55927b0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22366)[0m     @     0x55927b041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x55927b0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22366)[0m     @     0x55927b0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22366)[0m     @     0x55927b041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x55927b0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22366)[0m     @     0x55927b0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22366)[0m     @     0x55927b041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22366)[0m     @     0x55927b0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22366)[0m     @     0x55927b0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22366)[0m     @     0x55927b041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x7f05bc5f74f5 at::Tensor::copy_()
[2m[36m(pid=22412)[0m     @     0x7f05c26a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22412)[0m     @     0x562af2432fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22412)[0m     @     0x562af238db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x562af2418baf _PyEval_EvalCodeWithName
[2m[36m(pid=22412)[0m     @     0x562af2419a20 method_vectorcall
[2m[36m(pid=22412)[0m     @     0x562af238dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x562af2418baf _PyEval_EvalCodeWithName
[2m[36m(pid=22412)[0m     @     0x562af2419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22412)[0m     @     0x562af238e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x562af2418baf _PyEval_EvalCodeWithName
[2m[36m(pid=22412)[0m     @     0x562af2419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22412)[0m     @     0x562af238e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x562af2418baf _PyEval_EvalCodeWithName
[2m[36m(pid=22412)[0m     @     0x562af2419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22412)[0m     @     0x562af238e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22412)[0m     @     0x562af2418baf _PyEval_EvalCodeWithName
[2m[36m(pid=22412)[0m     @     0x562af2419643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22412)[0m     @     0x562af238e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x7efaa4ccf5a4 at::native::copy_()
[2m[36m(pid=22395)[0m     @     0x7efaa53ba4f5 at::Tensor::copy_()
[2m[36m(pid=22395)[0m     @     0x7efaa788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22392)[0m     @     0x7f2c77e514f5 at::Tensor::copy_()
[2m[36m(pid=22392)[0m     @     0x7f2c7defc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22392)[0m     @     0x55880888dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22392)[0m     @     0x5588087e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22392)[0m     @     0x558808873baf _PyEval_EvalCodeWithName
[2m[36m(pid=22392)[0m     @     0x558808874a20 method_vectorcall
[2m[36m(pid=22392)[0m     @     0x5588087e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22392)[0m     @     0x558808873baf _PyEval_EvalCodeWithName
[2m[36m(pid=22392)[0m     @     0x558808874643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22392)[0m     @     0x5588087e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22392)[0m     @     0x558808873baf _PyEval_EvalCodeWithName
[2m[36m(pid=22392)[0m     @     0x558808874643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22392)[0m     @     0x5588087e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22392)[0m     @     0x558808873baf _PyEval_EvalCodeWithName
[2m[36m(pid=22392)[0m     @     0x558808874643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22392)[0m     @     0x5588087e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22392)[0m     @     0x558808873baf _PyEval_EvalCodeWithName
[2m[36m(pid=22392)[0m     @     0x558808874643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22392)[0m     @     0x5588087e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x7f1e835c94f5 at::Tensor::copy_()
[2m[36m(pid=22369)[0m     @     0x7f1e85a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22298)[0m     @     0x7f2e784254f5 at::Tensor::copy_()
[2m[36m(pid=22298)[0m     @     0x7f2e7e4d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22298)[0m     @     0x55856e3b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22298)[0m     @     0x55856e311b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x55856e39cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22298)[0m     @     0x55856e39da20 method_vectorcall
[2m[36m(pid=22298)[0m     @     0x55856e311bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x55856e39cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22298)[0m     @     0x55856e39d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22298)[0m     @     0x55856e312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x55856e39cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22298)[0m     @     0x55856e39d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22298)[0m     @     0x55856e312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x55856e39cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22298)[0m     @     0x55856e39d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22298)[0m     @     0x55856e312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22298)[0m     @     0x55856e39cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22298)[0m     @     0x55856e39d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22298)[0m     @     0x55856e312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfea20 method_vectorcall
[2m[36m(pid=22295)[0m     @     0x55a24cc72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22295)[0m     @     0x55a24ccfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22295)[0m     @     0x55a24cc73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22295)[0m     @     0x55a24ccfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22295)[0m     @     0x55a24cc73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22295)[0m     @     0x55a24ccfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22295)[0m     @     0x55a24cc73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22295)[0m     @     0x55a24ccfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22295)[0m     @     0x55a24ccfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22295)[0m     @     0x55a24cc73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x7f3ca39cc4f5 at::Tensor::copy_()
[2m[36m(pid=22368)[0m     @     0x7f3ca9a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22368)[0m     @     0x558ea9bd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22368)[0m     @     0x558ea9b2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x558ea9bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x558ea9bb7a20 method_vectorcall
[2m[36m(pid=22368)[0m     @     0x558ea9b2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x558ea9bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x558ea9bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22368)[0m     @     0x558ea9b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x558ea9bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x558ea9bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22368)[0m     @     0x558ea9b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x558ea9bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x558ea9bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22368)[0m     @     0x558ea9b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22368)[0m     @     0x558ea9bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22368)[0m     @     0x558ea9bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22368)[0m     @     0x558ea9b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22330)[0m     @     0x561af83f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22330)[0m     @     0x561af83f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22330)[0m     @     0x561af8369689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22330)[0m     @     0x561af83f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22330)[0m     @     0x561af83f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22330)[0m     @     0x561af8369689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x7fbdb28088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22393)[0m     @     0x7fbdb03354f5 at::Tensor::copy_()
[2m[36m(pid=22393)[0m     @     0x7fbdb63e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22393)[0m     @     0x55c491d66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22393)[0m     @     0x55c491cc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x55c491d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22393)[0m     @     0x55c491d4da20 method_vectorcall
[2m[36m(pid=22393)[0m     @     0x55c491cc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x55c491d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22393)[0m     @     0x55c491d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22393)[0m     @     0x55c491cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x55c491d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22393)[0m     @     0x55c491d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22393)[0m     @     0x55c491cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x55c491d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22393)[0m     @     0x55c491d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22393)[0m     @     0x55c491cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22393)[0m     @     0x55c491d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22393)[0m     @     0x55c491d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22393)[0m     @     0x55c491cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x7f10c56b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22359)[0m     @     0x7f10c31e04f5 at::Tensor::copy_()
[2m[36m(pid=22359)[0m     @     0x7f10c928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22359)[0m     @     0x5634df59bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22359)[0m     @     0x5634df4f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x5634df581baf _PyEval_EvalCodeWithName
[2m[36m(pid=22359)[0m     @     0x5634df582a20 method_vectorcall
[2m[36m(pid=22359)[0m     @     0x5634df4f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x5634df581baf _PyEval_EvalCodeWithName
[2m[36m(pid=22359)[0m     @     0x5634df582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22359)[0m     @     0x5634df4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x5634df581baf _PyEval_EvalCodeWithName
[2m[36m(pid=22359)[0m     @     0x5634df582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22359)[0m     @     0x5634df4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x5634df581baf _PyEval_EvalCodeWithName
[2m[36m(pid=22359)[0m     @     0x5634df582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22359)[0m     @     0x5634df4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22359)[0m     @     0x5634df581baf _PyEval_EvalCodeWithName
[2m[36m(pid=22359)[0m     @     0x5634df582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22359)[0m     @     0x5634df4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x7ee98bc0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22397)[0m     @     0x7ee98973b4f5 at::Tensor::copy_()
[2m[36m(pid=22397)[0m     @     0x7ee98f7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22397)[0m     @     0x55610c63cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22397)[0m     @     0x55610c597b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x55610c622baf _PyEval_EvalCodeWithName
[2m[36m(pid=22397)[0m     @     0x55610c623a20 method_vectorcall
[2m[36m(pid=22397)[0m     @     0x55610c597bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x55610c622baf _PyEval_EvalCodeWithName
[2m[36m(pid=22397)[0m     @     0x55610c623643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22397)[0m     @     0x55610c598689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x55610c622baf _PyEval_EvalCodeWithName
[2m[36m(pid=22397)[0m     @     0x55610c623643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22397)[0m     @     0x55610c598689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x55610c622baf _PyEval_EvalCodeWithName
[2m[36m(pid=22397)[0m     @     0x55610c623643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22397)[0m     @     0x55610c598689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22397)[0m     @     0x55610c622baf _PyEval_EvalCodeWithName
[2m[36m(pid=22397)[0m     @     0x55610c623643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22397)[0m     @     0x55610c598689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22314)[0m     @     0x560c80cccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=22314)[0m     @     0x560c80d58a20 method_vectorcall
[2m[36m(pid=22314)[0m     @     0x560c80cccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=22314)[0m     @     0x560c80d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22314)[0m     @     0x560c80ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=22314)[0m     @     0x560c80d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22314)[0m     @     0x560c80ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=22314)[0m     @     0x560c80d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22314)[0m     @     0x560c80ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22314)[0m     @     0x560c80d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=22314)[0m     @     0x560c80d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22314)[0m     @     0x560c80ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22417)[0m     @     0x557c9403cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22417)[0m     @     0x557c9403d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22417)[0m     @     0x557c93fb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22417)[0m     @     0x557c9403cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22417)[0m     @     0x557c9403d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22417)[0m     @     0x557c93fb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22417)[0m     @     0x557c9403cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22417)[0m     @     0x557c9403d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22417)[0m     @     0x557c93fb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22417)[0m     @     0x557c9403cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22417)[0m     @     0x557c9403d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22417)[0m     @     0x557c93fb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x55f132afabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22297)[0m     @     0x55f132afb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22297)[0m     @     0x55f132a70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22297)[0m     @     0x55f132afabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22297)[0m     @     0x55f132afb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22297)[0m     @     0x55f132a70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22379)[0m     @     0x56418a85a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22379)[0m     @     0x56418a7cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22305)[0m     @     0x55bdc6361baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x55bdc6362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22305)[0m     @     0x55bdc62d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22305)[0m     @     0x55bdc6361baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x55bdc6362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22305)[0m     @     0x55bdc62d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22305)[0m     @     0x55bdc6361baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x55bdc6362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22305)[0m     @     0x55bdc62d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22305)[0m     @     0x55bdc6361baf _PyEval_EvalCodeWithName
[2m[36m(pid=22305)[0m     @     0x55bdc6362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22305)[0m     @     0x55bdc62d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x7edb9573b4f5 at::Tensor::copy_()
[2m[36m(pid=22300)[0m     @     0x7edb9b7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22300)[0m     @     0x5593c2df1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22300)[0m     @     0x5593c2d4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x5593c2dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22300)[0m     @     0x5593c2dd8a20 method_vectorcall
[2m[36m(pid=22300)[0m     @     0x5593c2d4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x5593c2dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22300)[0m     @     0x5593c2dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22300)[0m     @     0x5593c2d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x5593c2dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22300)[0m     @     0x5593c2dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22300)[0m     @     0x5593c2d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x5593c2dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22300)[0m     @     0x5593c2dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22300)[0m     @     0x5593c2d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22300)[0m     @     0x5593c2dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22300)[0m     @     0x5593c2dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22300)[0m     @     0x5593c2d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcea20 method_vectorcall
[2m[36m(pid=22428)[0m     @     0x5643d6d42bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22428)[0m     @     0x5643d6dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22428)[0m     @     0x5643d6d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22428)[0m     @     0x5643d6dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22428)[0m     @     0x5643d6d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22428)[0m     @     0x5643d6dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22428)[0m     @     0x5643d6d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22428)[0m     @     0x5643d6dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22428)[0m     @     0x5643d6dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22428)[0m     @     0x5643d6d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x7f128bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=22312)[0m     @     0x7f1291d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22312)[0m     @     0x56526d2eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22312)[0m     @     0x56526d245b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x56526d2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x56526d2d1a20 method_vectorcall
[2m[36m(pid=22312)[0m     @     0x56526d245bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x56526d2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x56526d2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22312)[0m     @     0x56526d246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x56526d2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x56526d2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22312)[0m     @     0x56526d246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x56526d2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x56526d2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22312)[0m     @     0x56526d246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22312)[0m     @     0x56526d2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=22312)[0m     @     0x56526d2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22312)[0m     @     0x56526d246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x7f4ba09254f5 at::Tensor::copy_()
[2m[36m(pid=22401)[0m     @     0x7f4ba69d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22401)[0m     @     0x55a71bb49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22401)[0m     @     0x55a71baa4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x55a71bb2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22401)[0m     @     0x55a71bb30a20 method_vectorcall
[2m[36m(pid=22401)[0m     @     0x55a71baa4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x55a71bb2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22401)[0m     @     0x55a71bb30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22401)[0m     @     0x55a71baa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x55a71bb2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22401)[0m     @     0x55a71bb30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22401)[0m     @     0x55a71baa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x55a71bb2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22401)[0m     @     0x55a71bb30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22401)[0m     @     0x55a71baa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22401)[0m     @     0x55a71bb2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22401)[0m     @     0x55a71bb30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22401)[0m     @     0x55a71baa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x7f757eb1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22363)[0m     @     0x7f757c64c4f5 at::Tensor::copy_()
[2m[36m(pid=22363)[0m     @     0x7f75826f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22363)[0m     @     0x55670355bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22363)[0m     @     0x5567034b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x556703541baf _PyEval_EvalCodeWithName
[2m[36m(pid=22363)[0m     @     0x556703542a20 method_vectorcall
[2m[36m(pid=22363)[0m     @     0x5567034b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x556703541baf _PyEval_EvalCodeWithName
[2m[36m(pid=22363)[0m     @     0x556703542643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22363)[0m     @     0x5567034b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x556703541baf _PyEval_EvalCodeWithName
[2m[36m(pid=22363)[0m     @     0x556703542643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22363)[0m     @     0x5567034b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x556703541baf _PyEval_EvalCodeWithName
[2m[36m(pid=22363)[0m     @     0x556703542643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22363)[0m     @     0x5567034b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22363)[0m     @     0x556703541baf _PyEval_EvalCodeWithName
[2m[36m(pid=22363)[0m     @     0x556703542643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22363)[0m     @     0x5567034b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x7f1b71ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=22361)[0m     @     0x7f1b71ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=22371)[0m     @     0x7f4e79f264f5 at::Tensor::copy_()
[2m[36m(pid=22371)[0m     @     0x7f4e7ffd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22371)[0m     @     0x55f829c46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22371)[0m     @     0x55f829ba1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22371)[0m     @     0x55f829c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22371)[0m     @     0x55f829c2da20 method_vectorcall
[2m[36m(pid=22371)[0m     @     0x55f829ba1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22371)[0m     @     0x55f829c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22371)[0m     @     0x55f829c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22371)[0m     @     0x55f829ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22371)[0m     @     0x55f829c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22371)[0m     @     0x55f829c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22371)[0m     @     0x55f829ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22371)[0m     @     0x55f829c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22371)[0m     @     0x55f829c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22371)[0m     @     0x55f829ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22371)[0m     @     0x55f829c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22371)[0m     @     0x55f829c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22371)[0m     @     0x55f829ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x7eea514ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22325)[0m     @     0x7eea4effb4f5 at::Tensor::copy_()
[2m[36m(pid=22325)[0m     @     0x7eea550a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22325)[0m     @     0x5606a08d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22325)[0m     @     0x5606a082bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x5606a08b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22325)[0m     @     0x5606a08b7a20 method_vectorcall
[2m[36m(pid=22325)[0m     @     0x5606a082bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x5606a08b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22325)[0m     @     0x5606a08b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22325)[0m     @     0x5606a082c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x5606a08b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22325)[0m     @     0x5606a08b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22325)[0m     @     0x5606a082c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x5606a08b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22325)[0m     @     0x5606a08b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22325)[0m     @     0x5606a082c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22325)[0m     @     0x5606a08b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22325)[0m     @     0x5606a08b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22325)[0m     @     0x5606a082c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x7f5fe70c58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22304)[0m     @     0x7f5fe4bf24f5 at::Tensor::copy_()
[2m[36m(pid=22304)[0m     @     0x7f5feac9d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22304)[0m     @     0x5634acf78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22304)[0m     @     0x5634aced3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x5634acf5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22304)[0m     @     0x5634acf5fa20 method_vectorcall
[2m[36m(pid=22304)[0m     @     0x5634aced3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x5634acf5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22304)[0m     @     0x5634acf5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22304)[0m     @     0x5634aced4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x5634acf5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22304)[0m     @     0x5634acf5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22304)[0m     @     0x5634aced4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x5634acf5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22304)[0m     @     0x5634acf5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22304)[0m     @     0x5634aced4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22304)[0m     @     0x5634acf5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22304)[0m     @     0x5634acf5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22304)[0m     @     0x5634aced4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x7fc389e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22436)[0m     @     0x7fc3879cc4f5 at::Tensor::copy_()
[2m[36m(pid=22436)[0m     @     0x7fc38da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22436)[0m     @     0x5597609ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22436)[0m     @     0x559760946b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x5597609d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22436)[0m     @     0x5597609d2a20 method_vectorcall
[2m[36m(pid=22436)[0m     @     0x559760946bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x5597609d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22436)[0m     @     0x5597609d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22436)[0m     @     0x559760947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x5597609d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22436)[0m     @     0x5597609d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22436)[0m     @     0x559760947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x5597609d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22436)[0m     @     0x5597609d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22436)[0m     @     0x559760947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22436)[0m     @     0x5597609d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22436)[0m     @     0x5597609d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22436)[0m     @     0x559760947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a17e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22404)[0m     @     0x55e38a208baf _PyEval_EvalCodeWithName
[2m[36m(pid=22404)[0m     @     0x55e38a209643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22404)[0m     @     0x55e38a17e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x7f6ab10fc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22370)[0m     @     0x7f6aaec294f5 at::Tensor::copy_()
[2m[36m(pid=22370)[0m     @     0x7f6ab4cd479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22370)[0m     @     0x557c9912efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22370)[0m     @     0x557c99089b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x557c99114baf _PyEval_EvalCodeWithName
[2m[36m(pid=22370)[0m     @     0x557c99115a20 method_vectorcall
[2m[36m(pid=22370)[0m     @     0x557c99089bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x557c99114baf _PyEval_EvalCodeWithName
[2m[36m(pid=22370)[0m     @     0x557c99115643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22370)[0m     @     0x557c9908a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x557c99114baf _PyEval_EvalCodeWithName
[2m[36m(pid=22370)[0m     @     0x557c99115643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22370)[0m     @     0x557c9908a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x557c99114baf _PyEval_EvalCodeWithName
[2m[36m(pid=22370)[0m     @     0x557c99115643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22370)[0m     @     0x557c9908a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22370)[0m     @     0x557c99114baf _PyEval_EvalCodeWithName
[2m[36m(pid=22370)[0m     @     0x557c99115643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22370)[0m     @     0x557c9908a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x7fc2a7e47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22429)[0m     @     0x7fc2a7e6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22384)[0m     @     0x7fb2313ba4f5 at::Tensor::copy_()
[2m[36m(pid=22384)[0m     @     0x7fb23388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22395)[0m     @     0x7efaa53ba4f5 at::Tensor::copy_()
[2m[36m(pid=22395)[0m     @     0x7efaab46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22395)[0m     @     0x56362f6b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22395)[0m     @     0x56362f612b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x56362f69dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22395)[0m     @     0x56362f69ea20 method_vectorcall
[2m[36m(pid=22395)[0m     @     0x56362f612bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x56362f69dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22395)[0m     @     0x56362f69e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22395)[0m     @     0x56362f613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x56362f69dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22395)[0m     @     0x56362f69e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22395)[0m     @     0x56362f613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x56362f69dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22395)[0m     @     0x56362f69e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22395)[0m     @     0x56362f613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22395)[0m     @     0x56362f69dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22395)[0m     @     0x56362f69e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22395)[0m     @     0x56362f613689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x7f1e835c94f5 at::Tensor::copy_()
[2m[36m(pid=22369)[0m     @     0x7f1e8967479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22369)[0m     @     0x5594c7bc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22369)[0m     @     0x5594c7b1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x5594c7ba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22369)[0m     @     0x5594c7ba9a20 method_vectorcall
[2m[36m(pid=22369)[0m     @     0x5594c7b1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x5594c7ba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22369)[0m     @     0x5594c7ba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22369)[0m     @     0x5594c7b1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x5594c7ba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22369)[0m     @     0x5594c7ba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22369)[0m     @     0x5594c7b1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x5594c7ba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22369)[0m     @     0x5594c7ba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22369)[0m     @     0x5594c7b1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22369)[0m     @     0x5594c7ba8baf _PyEval_EvalCodeWithName
[2m[36m(pid=22369)[0m     @     0x5594c7ba9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22369)[0m     @     0x5594c7b1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x7f1b71ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=22361)[0m     @     0x7f1b727ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22361)[0m     @     0x7f1b727efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22361)[0m     @     0x7f1b71c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22429)[0m     @     0x7fc2a730ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22429)[0m     @     0x7fc2a730a388 at::native::copy_impl()
[2m[36m(pid=22429)[0m     @     0x7fc2a730c5a4 at::native::copy_()
[2m[36m(pid=22384)[0m     @     0x7fb2313ba4f5 at::Tensor::copy_()
[2m[36m(pid=22384)[0m     @     0x7fb23746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22384)[0m     @     0x559dff3a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22384)[0m     @     0x559dff2fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x559dff386baf _PyEval_EvalCodeWithName
[2m[36m(pid=22384)[0m     @     0x559dff387a20 method_vectorcall
[2m[36m(pid=22384)[0m     @     0x559dff2fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x559dff386baf _PyEval_EvalCodeWithName
[2m[36m(pid=22384)[0m     @     0x559dff387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22384)[0m     @     0x559dff2fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x559dff386baf _PyEval_EvalCodeWithName
[2m[36m(pid=22384)[0m     @     0x559dff387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22384)[0m     @     0x559dff2fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x559dff386baf _PyEval_EvalCodeWithName
[2m[36m(pid=22384)[0m     @     0x559dff387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22384)[0m     @     0x559dff2fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22384)[0m     @     0x559dff386baf _PyEval_EvalCodeWithName
[2m[36m(pid=22384)[0m     @     0x559dff387643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22384)[0m     @     0x559dff2fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x7f1b71c8f388 at::native::copy_impl()
[2m[36m(pid=22429)[0m     @     0x7fc2a79f74f5 at::Tensor::copy_()
[2m[36m(pid=22429)[0m     @     0x7fc2a9eca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22429)[0m     @     0x7fc2a79f74f5 at::Tensor::copy_()
[2m[36m(pid=22429)[0m     @     0x7fc2adaa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22429)[0m     @     0x558a8c370fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22429)[0m     @     0x558a8c2cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x558a8c356baf _PyEval_EvalCodeWithName
[2m[36m(pid=22429)[0m     @     0x558a8c357a20 method_vectorcall
[2m[36m(pid=22429)[0m     @     0x558a8c2cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x558a8c356baf _PyEval_EvalCodeWithName
[2m[36m(pid=22429)[0m     @     0x558a8c357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22429)[0m     @     0x558a8c2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x558a8c356baf _PyEval_EvalCodeWithName
[2m[36m(pid=22429)[0m     @     0x558a8c357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22429)[0m     @     0x558a8c2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x558a8c356baf _PyEval_EvalCodeWithName
[2m[36m(pid=22429)[0m     @     0x558a8c357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22429)[0m     @     0x558a8c2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22429)[0m     @     0x558a8c356baf _PyEval_EvalCodeWithName
[2m[36m(pid=22429)[0m     @     0x558a8c357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22429)[0m     @     0x558a8c2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x7f1b71c915a4 at::native::copy_()
[2m[36m(pid=22361)[0m     @     0x7f1b7237c4f5 at::Tensor::copy_()
[2m[36m(pid=22361)[0m     @     0x7f1b7484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22361)[0m     @     0x7f1b7237c4f5 at::Tensor::copy_()
[2m[36m(pid=22361)[0m     @     0x7f1b7842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=22361)[0m     @     0x55c4c1380fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22361)[0m     @     0x55c4c12dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x55c4c1366baf _PyEval_EvalCodeWithName
[2m[36m(pid=22361)[0m     @     0x55c4c1367a20 method_vectorcall
[2m[36m(pid=22361)[0m     @     0x55c4c12dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22361)[0m     @     0x55c4c1366baf _PyEval_EvalCodeWithName
[2m[36m(pid=22361)[0m     @     0x55c4c1367643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22361)[0m     @     0x55c4c12dc689 _PyEval_EvalFrameDefault.cold.2792
== Status ==
Memory usage on this node: 23.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_93f54_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_93f54_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_93f54_00000_0_2020-11-05_10-35-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_93f54_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_93f54_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_93f54_00000_0_2020-11-05_10-35-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:35:16,788	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:35:16,790	ERROR trial_runner.py:567 -- Trial PPO_jss_env_93f54_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=22415, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
