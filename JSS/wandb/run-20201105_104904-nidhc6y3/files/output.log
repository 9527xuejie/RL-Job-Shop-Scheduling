2020-11-05 10:49:07,917	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_887bc_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=58376)[0m 2020-11-05 10:49:10,700	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=58376)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=58376)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=58376)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=58376)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=58376)[0m 
[2m[36m(pid=58376)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=58378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58378)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58378)[0m *** SIGSEGV (@0x0) received by PID 58378 (TID 0x7eff28228700) from PID 0; stack trace: ***
[2m[36m(pid=58378)[0m     @     0x7eff27e01390 (unknown)
[2m[36m(pid=58378)[0m     @     0x7ed027da6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58378)[0m     @     0x7ed0274d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58320)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58320)[0m *** SIGSEGV (@0x0) received by PID 58320 (TID 0x7fdedf9c9700) from PID 0; stack trace: ***
[2m[36m(pid=58320)[0m     @     0x7fdedf5a2390 (unknown)
[2m[36m(pid=58373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58373)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58373)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58373)[0m *** SIGSEGV (@0x0) received by PID 58373 (TID 0x7f5dc7a73700) from PID 0; stack trace: ***
[2m[36m(pid=58373)[0m     @     0x7f5dc764c390 (unknown)
[2m[36m(pid=58373)[0m     @     0x7f2ec75dcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58373)[0m     @     0x7f2ec6d077db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58373)[0m     @     0x7f2ec6d0a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58349)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58349)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58349)[0m *** SIGSEGV (@0x0) received by PID 58349 (TID 0x7f325ec25700) from PID 0; stack trace: ***
[2m[36m(pid=58349)[0m     @     0x7f325e7fe390 (unknown)
[2m[36m(pid=58349)[0m     @     0x7f035e78ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58349)[0m     @     0x7f035deb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58329)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58329)[0m *** SIGSEGV (@0x0) received by PID 58329 (TID 0x7f64e83d6700) from PID 0; stack trace: ***
[2m[36m(pid=58329)[0m     @     0x7f64e7faf390 (unknown)
[2m[36m(pid=58329)[0m     @     0x7f35e7eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58329)[0m     @     0x7f35e75e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58364)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58364)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58364)[0m *** SIGSEGV (@0x0) received by PID 58364 (TID 0x7f32a25e8700) from PID 0; stack trace: ***
[2m[36m(pid=58364)[0m     @     0x7f32a21c1390 (unknown)
[2m[36m(pid=58364)[0m     @     0x7f03a1d89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58364)[0m     @     0x7f03a14b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58265)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58265)[0m *** SIGSEGV (@0x0) received by PID 58265 (TID 0x7fa891116700) from PID 0; stack trace: ***
[2m[36m(pid=58265)[0m     @     0x7fa890cef390 (unknown)
[2m[36m(pid=58265)[0m     @     0x7f7990bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58332)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58332)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58332)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58332)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58332)[0m *** SIGSEGV (@0x0) received by PID 58332 (TID 0x7f1a51fd4700) from PID 0; stack trace: ***
[2m[36m(pid=58332)[0m     @     0x7f1a51bad390 (unknown)
[2m[36m(pid=58332)[0m     @     0x7eeb51a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58345)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58345)[0m *** SIGSEGV (@0x0) received by PID 58345 (TID 0x7f3b27252700) from PID 0; stack trace: ***
[2m[36m(pid=58333)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58333)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58333)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58333)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58333)[0m *** SIGSEGV (@0x0) received by PID 58333 (TID 0x7f2897afa700) from PID 0; stack trace: ***
[2m[36m(pid=58333)[0m     @     0x7f28976d3390 (unknown)
[2m[36m(pid=58249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58249)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58249)[0m *** SIGSEGV (@0x0) received by PID 58249 (TID 0x7f4756702700) from PID 0; stack trace: ***
[2m[36m(pid=58339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58339)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58339)[0m *** SIGSEGV (@0x0) received by PID 58339 (TID 0x7fc248022700) from PID 0; stack trace: ***
[2m[36m(pid=58339)[0m     @     0x7fc247bfb390 (unknown)
[2m[36m(pid=58339)[0m     @     0x7f9347af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58339)[0m     @     0x7f93472207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58321)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58321)[0m *** SIGSEGV (@0x0) received by PID 58321 (TID 0x7f9db03a0700) from PID 0; stack trace: ***
[2m[36m(pid=58321)[0m     @     0x7f9daff79390 (unknown)
[2m[36m(pid=58321)[0m     @     0x7f6eafe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58321)[0m     @     0x7f6eaf5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58344)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58344)[0m *** SIGSEGV (@0x0) received by PID 58344 (TID 0x7f41d558e700) from PID 0; stack trace: ***
[2m[36m(pid=58344)[0m     @     0x7f41d5167390 (unknown)
[2m[36m(pid=58352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58352)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58352)[0m *** SIGSEGV (@0x0) received by PID 58352 (TID 0x7f4782a87700) from PID 0; stack trace: ***
[2m[36m(pid=58352)[0m     @     0x7f4782660390 (unknown)
[2m[36m(pid=58352)[0m     @     0x7f18825d5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58352)[0m     @     0x7f1881d007db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58352)[0m     @     0x7f1881d038f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58341)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58341)[0m *** SIGSEGV (@0x0) received by PID 58341 (TID 0x7f49fd368700) from PID 0; stack trace: ***
[2m[36m(pid=58341)[0m     @     0x7f49fcf41390 (unknown)
[2m[36m(pid=58341)[0m     @     0x7f1afcea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58341)[0m     @     0x7f1afc5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58341)[0m     @     0x7f1afc5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58341)[0m     @     0x7f1afc5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=58336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58336)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58336)[0m *** SIGSEGV (@0x0) received by PID 58336 (TID 0x7fc92cc40700) from PID 0; stack trace: ***
[2m[36m(pid=58336)[0m     @     0x7fc92c819390 (unknown)
[2m[36m(pid=58336)[0m     @     0x7f9a2c60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58336)[0m     @     0x7f9a2bd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58336)[0m     @     0x7f9a2bd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58325)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58325)[0m *** SIGSEGV (@0x0) received by PID 58325 (TID 0x7fe1b4ce1700) from PID 0; stack trace: ***
[2m[36m(pid=58325)[0m     @     0x7fe1b48ba390 (unknown)
[2m[36m(pid=58325)[0m     @     0x7fb2b4774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58325)[0m     @     0x7fb2b3e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58340)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58340)[0m *** SIGSEGV (@0x0) received by PID 58340 (TID 0x7f5fecc6d700) from PID 0; stack trace: ***
[2m[36m(pid=58340)[0m     @     0x7f5fec846390 (unknown)
[2m[36m(pid=58340)[0m     @     0x7f30ec60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58340)[0m     @     0x7f30ebd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58358)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58358)[0m *** SIGSEGV (@0x0) received by PID 58358 (TID 0x7f665b562700) from PID 0; stack trace: ***
[2m[36m(pid=58358)[0m     @     0x7f665b13b390 (unknown)
[2m[36m(pid=58358)[0m     @     0x7f375b0e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58358)[0m     @     0x7f375a80f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58358)[0m     @     0x7f375a8128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58360)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58360)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58360)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58360)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58360)[0m *** SIGSEGV (@0x0) received by PID 58360 (TID 0x7fa1d6741700) from PID 0; stack trace: ***
[2m[36m(pid=58360)[0m     @     0x7fa1d631a390 (unknown)
[2m[36m(pid=58360)[0m     @     0x7f72d62b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58360)[0m     @     0x7f72d59e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58360)[0m     @     0x7f72d59e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58264)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58264)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58264)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58264)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58264)[0m *** SIGSEGV (@0x0) received by PID 58264 (TID 0x7f005d55c700) from PID 0; stack trace: ***
[2m[36m(pid=58264)[0m     @     0x7f005d135390 (unknown)
[2m[36m(pid=58264)[0m     @     0x7ed15d0f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58264)[0m     @     0x7ed15c81f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58264)[0m     @     0x7ed15c8228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58258)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58258)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58258)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58258)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58258)[0m *** SIGSEGV (@0x0) received by PID 58258 (TID 0x7fda29e02700) from PID 0; stack trace: ***
[2m[36m(pid=58258)[0m     @     0x7fda299db390 (unknown)
[2m[36m(pid=58258)[0m     @     0x7fab297f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58258)[0m     @     0x7fab28f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58258)[0m     @     0x7fab28f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58330)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58330)[0m *** SIGSEGV (@0x0) received by PID 58330 (TID 0x7f6295743700) from PID 0; stack trace: ***
[2m[36m(pid=58330)[0m     @     0x7f629531c390 (unknown)
[2m[36m(pid=58330)[0m     @     0x7f339528af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58330)[0m     @     0x7f33949b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58355)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58355)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58355)[0m *** SIGSEGV (@0x0) received by PID 58355 (TID 0x7f64d68ab700) from PID 0; stack trace: ***
[2m[36m(pid=58355)[0m     @     0x7f64d6484390 (unknown)
[2m[36m(pid=58355)[0m     @     0x7f35d62fef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58355)[0m     @     0x7f35d5a297db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58311)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58311)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58311)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58311)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58311)[0m *** SIGSEGV (@0x0) received by PID 58311 (TID 0x7f0ecffdf700) from PID 0; stack trace: ***
[2m[36m(pid=58311)[0m     @     0x7f0ecfbb8390 (unknown)
[2m[36m(pid=58311)[0m     @     0x7edfcfaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58311)[0m     @     0x7edfcf2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58318)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58318)[0m *** SIGSEGV (@0x0) received by PID 58318 (TID 0x7f2c66a2f700) from PID 0; stack trace: ***
[2m[36m(pid=58318)[0m     @     0x7f2c66608390 (unknown)
[2m[36m(pid=58318)[0m     @     0x7efd665a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58318)[0m     @     0x7efd65ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58318)[0m     @     0x7efd65cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58354)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58354)[0m *** SIGSEGV (@0x0) received by PID 58354 (TID 0x7fbbe2ab7700) from PID 0; stack trace: ***
[2m[36m(pid=58354)[0m     @     0x7fbbe2690390 (unknown)
[2m[36m(pid=58354)[0m     @     0x7f8ce25a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58354)[0m     @     0x7f8ce1ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58272)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58272)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58272)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58272)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58272)[0m *** SIGSEGV (@0x0) received by PID 58272 (TID 0x7fd0ab03b700) from PID 0; stack trace: ***
[2m[36m(pid=58272)[0m     @     0x7fd0aac14390 (unknown)
[2m[36m(pid=58272)[0m     @     0x7fa1aabadf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58272)[0m     @     0x7fa1aa2d87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58272)[0m     @     0x7fa1aa2db8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58328)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58328)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58328)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58328)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58328)[0m *** SIGSEGV (@0x0) received by PID 58328 (TID 0x7fb2faffd700) from PID 0; stack trace: ***
[2m[36m(pid=58328)[0m     @     0x7fb2fabd6390 (unknown)
[2m[36m(pid=58328)[0m     @     0x7f83fab6df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58328)[0m     @     0x7f83fa2987db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58328)[0m     @     0x7f83fa29b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58328)[0m     @     0x7f83fa29bad3 at::TensorIterator::for_each()
[2m[36m(pid=58366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58366)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58366)[0m *** SIGSEGV (@0x0) received by PID 58366 (TID 0x7f093861c700) from PID 0; stack trace: ***
[2m[36m(pid=58366)[0m     @     0x7f09381f5390 (unknown)
[2m[36m(pid=58366)[0m     @     0x7eda3801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58366)[0m     @     0x7eda377477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58247)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58247)[0m *** SIGSEGV (@0x0) received by PID 58247 (TID 0x7f3e09a86700) from PID 0; stack trace: ***
[2m[36m(pid=58247)[0m     @     0x7f3e0965f390 (unknown)
[2m[36m(pid=58247)[0m     @     0x7f0f094e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58247)[0m     @     0x7f0f08c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58369)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58369)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58369)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58369)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58369)[0m *** SIGSEGV (@0x0) received by PID 58369 (TID 0x7fa457460700) from PID 0; stack trace: ***
[2m[36m(pid=58369)[0m     @     0x7fa457039390 (unknown)
[2m[36m(pid=58369)[0m     @     0x7f7556fd4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58369)[0m     @     0x7f75566ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58275)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58378)[0m     @     0x7ed0274d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58378)[0m     @     0x7ed0274d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=58378)[0m     @     0x7ed0274d4d91 at::TensorIterator::for_each()
[2m[36m(pid=58378)[0m     @     0x7ed027db7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58378)[0m     @     0x7ed027ddac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58320)[0m     @     0x7fafdf54df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58320)[0m     @     0x7fafdec787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58320)[0m     @     0x7fafdec7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58320)[0m     @     0x7fafdec7bad3 at::TensorIterator::for_each()
[2m[36m(pid=58320)[0m     @     0x7fafdec7bd91 at::TensorIterator::for_each()
[2m[36m(pid=58373)[0m     @     0x7f2ec6d0aad3 at::TensorIterator::for_each()
[2m[36m(pid=58373)[0m     @     0x7f2ec6d0ad91 at::TensorIterator::for_each()
[2m[36m(pid=58373)[0m     @     0x7f2ec75edb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58373)[0m     @     0x7f2ec7610c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58349)[0m     @     0x7f035debc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58349)[0m     @     0x7f035debcad3 at::TensorIterator::for_each()
[2m[36m(pid=58349)[0m     @     0x7f035debcd91 at::TensorIterator::for_each()
[2m[36m(pid=58349)[0m     @     0x7f035e79fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58349)[0m     @     0x7f035e7c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58329)[0m     @     0x7f35e75e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58329)[0m     @     0x7f35e75e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=58329)[0m     @     0x7f35e75e4d91 at::TensorIterator::for_each()
[2m[36m(pid=58329)[0m     @     0x7f35e7ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58329)[0m     @     0x7f35e7eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58364)[0m     @     0x7f03a14b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58364)[0m     @     0x7f03a14b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=58364)[0m     @     0x7f03a14b7d91 at::TensorIterator::for_each()
[2m[36m(pid=58364)[0m     @     0x7f03a1d9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58364)[0m     @     0x7f03a1dbdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58265)[0m     @     0x7f79902fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58265)[0m     @     0x7f79902ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58265)[0m     @     0x7f79902ffad3 at::TensorIterator::for_each()
[2m[36m(pid=58265)[0m     @     0x7f79902ffd91 at::TensorIterator::for_each()
[2m[36m(pid=58332)[0m     @     0x7eeb511357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58332)[0m     @     0x7eeb511388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58332)[0m     @     0x7eeb51138ad3 at::TensorIterator::for_each()
[2m[36m(pid=58332)[0m     @     0x7eeb51138d91 at::TensorIterator::for_each()
[2m[36m(pid=58345)[0m     @     0x7f3b26e2b390 (unknown)
[2m[36m(pid=58345)[0m     @     0x7f0c26dc3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58345)[0m     @     0x7f0c264ee7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58345)[0m     @     0x7f0c264f18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58333)[0m     @     0x7ef997681f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58333)[0m     @     0x7ef996dac7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58333)[0m     @     0x7ef996daf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58245)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58245)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58245)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58249)[0m     @     0x7f47562db390 (unknown)
[2m[36m(pid=58249)[0m     @     0x7f1855f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58249)[0m     @     0x7f18556b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58249)[0m     @     0x7f18556bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58249)[0m     @     0x7f18556bbad3 at::TensorIterator::for_each()
[2m[36m(pid=58339)[0m     @     0x7f93472238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58339)[0m     @     0x7f9347223ad3 at::TensorIterator::for_each()
[2m[36m(pid=58339)[0m     @     0x7f9347223d91 at::TensorIterator::for_each()
[2m[36m(pid=58339)[0m     @     0x7f9347b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58339)[0m     @     0x7f9347b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58321)[0m     @     0x7f6eaf5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58321)[0m     @     0x7f6eaf539ad3 at::TensorIterator::for_each()
[2m[36m(pid=58321)[0m     @     0x7f6eaf539d91 at::TensorIterator::for_each()
[2m[36m(pid=58321)[0m     @     0x7f6eafe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58321)[0m     @     0x7f6eafe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58344)[0m     @     0x7f12d50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58344)[0m     @     0x7f12d47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58344)[0m     @     0x7f12d47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58344)[0m     @     0x7f12d47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=58352)[0m     @     0x7f1881d03ad3 at::TensorIterator::for_each()
[2m[36m(pid=58341)[0m     @     0x7f1afc5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=58341)[0m     @     0x7f1afceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58341)[0m     @     0x7f1afced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58341)[0m     @     0x7f1afc37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58336)[0m     @     0x7f9a2bd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=58325)[0m     @     0x7fb2b3ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58340)[0m     @     0x7f30ebd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58340)[0m     @     0x7f30ebd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=58358)[0m     @     0x7f375a812ad3 at::TensorIterator::for_each()
[2m[36m(pid=58360)[0m     @     0x7f72d59e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=58264)[0m     @     0x7ed15c822ad3 at::TensorIterator::for_each()
[2m[36m(pid=58264)[0m     @     0x7ed15c822d91 at::TensorIterator::for_each()
[2m[36m(pid=58258)[0m     @     0x7fab28f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=58258)[0m     @     0x7fab28f27d91 at::TensorIterator::for_each()
[2m[36m(pid=58330)[0m     @     0x7f33949b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58355)[0m     @     0x7f35d5a2c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58355)[0m     @     0x7f35d5a2cad3 at::TensorIterator::for_each()
[2m[36m(pid=58311)[0m     @     0x7edfcf2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58311)[0m     @     0x7edfcf223ad3 at::TensorIterator::for_each()
[2m[36m(pid=58318)[0m     @     0x7efd65cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=58354)[0m     @     0x7f8ce1cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58272)[0m     @     0x7fa1aa2dbad3 at::TensorIterator::for_each()
[2m[36m(pid=58272)[0m     @     0x7fa1aa2dbd91 at::TensorIterator::for_each()
[2m[36m(pid=58272)[0m     @     0x7fa1aabbeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58272)[0m     @     0x7fa1aabe1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58328)[0m     @     0x7f83fa29bd91 at::TensorIterator::for_each()
[2m[36m(pid=58328)[0m     @     0x7f83fab7eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58328)[0m     @     0x7f83faba1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58366)[0m     @     0x7eda3774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58366)[0m     @     0x7eda3774aad3 at::TensorIterator::for_each()
[2m[36m(pid=58247)[0m     @     0x7f0f08c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58247)[0m     @     0x7f0f08c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=58369)[0m     @     0x7f75567028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58369)[0m     @     0x7f7556702ad3 at::TensorIterator::for_each()
[2m[36m(pid=58257)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58257)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58257)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58252)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58252)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58252)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58317)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58357)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58357)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58357)[0m *** SIGSEGV (@0x0) received by PID 58357 (TID 0x7f8ab2ae1700) from PID 0; stack trace: ***
[2m[36m(pid=58357)[0m     @     0x7f8ab26ba390 (unknown)
[2m[36m(pid=58357)[0m     @     0x7f5bb24f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58324)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58371)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58371)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58371)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58371)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58371)[0m *** SIGSEGV (@0x0) received by PID 58371 (TID 0x7f6cc92e7700) from PID 0; stack trace: ***
[2m[36m(pid=58323)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58323)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58323)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58323)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58251)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58251)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58251)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58251)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58251)[0m *** SIGSEGV (@0x0) received by PID 58251 (TID 0x7f889f24a700) from PID 0; stack trace: ***
[2m[36m(pid=58251)[0m     @     0x7f889ee23390 (unknown)
[2m[36m(pid=58251)[0m     @     0x7f599edc3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58256)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58256)[0m *** SIGSEGV (@0x0) received by PID 58256 (TID 0x7f04ac9a9700) from PID 0; stack trace: ***
[2m[36m(pid=58327)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58327)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58327)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58327)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58327)[0m *** SIGSEGV (@0x0) received by PID 58327 (TID 0x7f3d535c9700) from PID 0; stack trace: ***
[2m[36m(pid=58327)[0m     @     0x7f3d531a2390 (unknown)
[2m[36m(pid=58253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58253)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58278)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58278)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58278)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58283)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58283)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58283)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58283)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58283)[0m *** SIGSEGV (@0x0) received by PID 58283 (TID 0x7f03b991e700) from PID 0; stack trace: ***
[2m[36m(pid=58283)[0m     @     0x7f03b94f7390 (unknown)
[2m[36m(pid=58283)[0m     @     0x7ed4b94a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58275)[0m *** SIGSEGV (@0x0) received by PID 58275 (TID 0x7fe019706700) from PID 0; stack trace: ***
[2m[36m(pid=58275)[0m     @     0x7fe0192df390 (unknown)
[2m[36m(pid=58275)[0m     @     0x7fb11924af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58263)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58262)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58248)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58248)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58248)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58248)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58248)[0m *** SIGSEGV (@0x0) received by PID 58248 (TID 0x7fa2ecf00700) from PID 0; stack trace: ***
[2m[36m(pid=58248)[0m     @     0x7fa2ecad9390 (unknown)
[2m[36m(pid=58271)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58271)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58271)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58271)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58271)[0m *** SIGSEGV (@0x0) received by PID 58271 (TID 0x7fe91b7c5700) from PID 0; stack trace: ***
[2m[36m(pid=58271)[0m     @     0x7fe91b39e390 (unknown)
[2m[36m(pid=58271)[0m     @     0x7fba1b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58322)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58322)[0m *** SIGSEGV (@0x0) received by PID 58322 (TID 0x7f0933950700) from PID 0; stack trace: ***
[2m[36m(pid=58322)[0m     @     0x7f0933529390 (unknown)
[2m[36m(pid=58322)[0m     @     0x7eda3343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58261)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58261)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58261)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58261)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58261)[0m *** SIGSEGV (@0x0) received by PID 58261 (TID 0x7f48c8bea700) from PID 0; stack trace: ***
[2m[36m(pid=58315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58315)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58315)[0m *** SIGSEGV (@0x0) received by PID 58315 (TID 0x7fbf4ffa9700) from PID 0; stack trace: ***
[2m[36m(pid=58315)[0m     @     0x7fbf4fb82390 (unknown)
[2m[36m(pid=58378)[0m     @     0x7ed02727ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58378)[0m     @     0x7ed02727a388 at::native::copy_impl()
[2m[36m(pid=58378)[0m     @     0x7ed02727c5a4 at::native::copy_()
[2m[36m(pid=58378)[0m     @     0x7ed0279674f5 at::Tensor::copy_()
[2m[36m(pid=58378)[0m     @     0x7ed029e3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58320)[0m     @     0x7fafdf55eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58320)[0m     @     0x7fafdf581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58320)[0m     @     0x7fafdea23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58320)[0m     @     0x7fafdea21388 at::native::copy_impl()
[2m[36m(pid=58320)[0m     @     0x7fafdea235a4 at::native::copy_()
[2m[36m(pid=58373)[0m     @     0x7f2ec6ab2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58373)[0m     @     0x7f2ec6ab0388 at::native::copy_impl()
[2m[36m(pid=58373)[0m     @     0x7f2ec6ab25a4 at::native::copy_()
[2m[36m(pid=58373)[0m     @     0x7f2ec719d4f5 at::Tensor::copy_()
[2m[36m(pid=58349)[0m     @     0x7f035dc64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58349)[0m     @     0x7f035dc62388 at::native::copy_impl()
[2m[36m(pid=58349)[0m     @     0x7f035dc645a4 at::native::copy_()
[2m[36m(pid=58349)[0m     @     0x7f035e34f4f5 at::Tensor::copy_()
[2m[36m(pid=58329)[0m     @     0x7f35e738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58329)[0m     @     0x7f35e738a388 at::native::copy_impl()
[2m[36m(pid=58329)[0m     @     0x7f35e738c5a4 at::native::copy_()
[2m[36m(pid=58329)[0m     @     0x7f35e7a774f5 at::Tensor::copy_()
[2m[36m(pid=58364)[0m     @     0x7f03a125fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58364)[0m     @     0x7f03a125d388 at::native::copy_impl()
[2m[36m(pid=58364)[0m     @     0x7f03a125f5a4 at::native::copy_()
[2m[36m(pid=58364)[0m     @     0x7f03a194a4f5 at::Tensor::copy_()
[2m[36m(pid=58364)[0m     @     0x7f03a3e1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58265)[0m     @     0x7f7990be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58265)[0m     @     0x7f7990c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58265)[0m     @     0x7f79900a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58265)[0m     @     0x7f79900a5388 at::native::copy_impl()
[2m[36m(pid=58265)[0m     @     0x7f79900a75a4 at::native::copy_()
[2m[36m(pid=58332)[0m     @     0x7eeb51a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58332)[0m     @     0x7eeb51a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58332)[0m     @     0x7eeb50ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58332)[0m     @     0x7eeb50ede388 at::native::copy_impl()
[2m[36m(pid=58332)[0m     @     0x7eeb50ee05a4 at::native::copy_()
[2m[36m(pid=58345)[0m     @     0x7f0c264f1ad3 at::TensorIterator::for_each()
[2m[36m(pid=58345)[0m     @     0x7f0c264f1d91 at::TensorIterator::for_each()
[2m[36m(pid=58345)[0m     @     0x7f0c26dd4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58345)[0m     @     0x7f0c26df7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58345)[0m     @     0x7f0c26299a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58250)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58250)[0m *** SIGSEGV (@0x0) received by PID 58250 (TID 0x7f8f76b06700) from PID 0; stack trace: ***
[2m[36m(pid=58250)[0m     @     0x7f8f766df390 (unknown)
[2m[36m(pid=58250)[0m     @     0x7f607657cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58250)[0m     @     0x7f6075ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58246)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58246)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58246)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58246)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58246)[0m *** SIGSEGV (@0x0) received by PID 58246 (TID 0x7fdb79c78700) from PID 0; stack trace: ***
[2m[36m(pid=58246)[0m     @     0x7fdb79851390 (unknown)
[2m[36m(pid=58246)[0m     @     0x7fac796f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58246)[0m     @     0x7fac78e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58246)[0m     @     0x7fac78e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58333)[0m     @     0x7ef996dafad3 at::TensorIterator::for_each()
[2m[36m(pid=58333)[0m     @     0x7ef996dafd91 at::TensorIterator::for_each()
[2m[36m(pid=58333)[0m     @     0x7ef997692b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58333)[0m     @     0x7ef9976b5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58333)[0m     @     0x7ef996b57a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58333)[0m     @     0x7ef996b55388 at::native::copy_impl()
[2m[36m(pid=58245)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58245)[0m *** SIGSEGV (@0x0) received by PID 58245 (TID 0x7f25b8d9e700) from PID 0; stack trace: ***
[2m[36m(pid=58245)[0m     @     0x7f25b8977390 (unknown)
[2m[36m(pid=58245)[0m     @     0x7ef6b88f0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58245)[0m     @     0x7ef6b801b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58249)[0m     @     0x7f18556bbd91 at::TensorIterator::for_each()
[2m[36m(pid=58249)[0m     @     0x7f1855f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58249)[0m     @     0x7f1855fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58249)[0m     @     0x7f1855463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58249)[0m     @     0x7f1855461388 at::native::copy_impl()
[2m[36m(pid=58249)[0m     @     0x7f18554635a4 at::native::copy_()
[2m[36m(pid=58249)[0m     @     0x7f1855b4e4f5 at::Tensor::copy_()
[2m[36m(pid=58339)[0m     @     0x7f9346fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58339)[0m     @     0x7f9346fc9388 at::native::copy_impl()
[2m[36m(pid=58339)[0m     @     0x7f9346fcb5a4 at::native::copy_()
[2m[36m(pid=58339)[0m     @     0x7f93476b64f5 at::Tensor::copy_()
[2m[36m(pid=58321)[0m     @     0x7f6eaf2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58321)[0m     @     0x7f6eaf2df388 at::native::copy_impl()
[2m[36m(pid=58321)[0m     @     0x7f6eaf2e15a4 at::native::copy_()
[2m[36m(pid=58321)[0m     @     0x7f6eaf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=58344)[0m     @     0x7f12d47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=58344)[0m     @     0x7f12d50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58344)[0m     @     0x7f12d50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58344)[0m     @     0x7f12d458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58344)[0m     @     0x7f12d4589388 at::native::copy_impl()
[2m[36m(pid=58352)[0m     @     0x7f1881d03d91 at::TensorIterator::for_each()
[2m[36m(pid=58352)[0m     @     0x7f18825e6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58352)[0m     @     0x7f1882609c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58352)[0m     @     0x7f1881aaba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58352)[0m     @     0x7f1881aa9388 at::native::copy_impl()
[2m[36m(pid=58341)[0m     @     0x7f1afc378388 at::native::copy_impl()
[2m[36m(pid=58341)[0m     @     0x7f1afc37a5a4 at::native::copy_()
[2m[36m(pid=58341)[0m     @     0x7f1afca654f5 at::Tensor::copy_()
[2m[36m(pid=58341)[0m     @     0x7f1afef388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58336)[0m     @     0x7f9a2bd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=58336)[0m     @     0x7f9a2c61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58336)[0m     @     0x7f9a2c642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58336)[0m     @     0x7f9a2bae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58336)[0m     @     0x7f9a2bae2388 at::native::copy_impl()
[2m[36m(pid=58325)[0m     @     0x7fb2b3ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=58325)[0m     @     0x7fb2b3ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=58325)[0m     @     0x7fb2b4785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58325)[0m     @     0x7fb2b47a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58325)[0m     @     0x7fb2b3c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58325)[0m     @     0x7fb2b3c48388 at::native::copy_impl()
[2m[36m(pid=58340)[0m     @     0x7f30ebd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=58340)[0m     @     0x7f30ec61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58340)[0m     @     0x7f30ec642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58340)[0m     @     0x7f30ebae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58340)[0m     @     0x7f30ebae2388 at::native::copy_impl()
[2m[36m(pid=58358)[0m     @     0x7f375a812d91 at::TensorIterator::for_each()
[2m[36m(pid=58358)[0m     @     0x7f375b0f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58358)[0m     @     0x7f375b118c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58358)[0m     @     0x7f375a5baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58358)[0m     @     0x7f375a5b8388 at::native::copy_impl()
[2m[36m(pid=58360)[0m     @     0x7f72d59e7d91 at::TensorIterator::for_each()
[2m[36m(pid=58360)[0m     @     0x7f72d62cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58360)[0m     @     0x7f72d62edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58360)[0m     @     0x7f72d578fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58360)[0m     @     0x7f72d578d388 at::native::copy_impl()
[2m[36m(pid=58360)[0m     @     0x7f72d578f5a4 at::native::copy_()
[2m[36m(pid=58264)[0m     @     0x7ed15d105b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58264)[0m     @     0x7ed15d128c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58264)[0m     @     0x7ed15c5caa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58264)[0m     @     0x7ed15c5c8388 at::native::copy_impl()
[2m[36m(pid=58264)[0m     @     0x7ed15c5ca5a4 at::native::copy_()
[2m[36m(pid=58264)[0m     @     0x7ed15ccb54f5 at::Tensor::copy_()
[2m[36m(pid=58258)[0m     @     0x7fab2980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58258)[0m     @     0x7fab2982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58258)[0m     @     0x7fab28ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58258)[0m     @     0x7fab28ccd388 at::native::copy_impl()
[2m[36m(pid=58258)[0m     @     0x7fab28ccf5a4 at::native::copy_()
[2m[36m(pid=58330)[0m     @     0x7f33949b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=58330)[0m     @     0x7f33949b8d91 at::TensorIterator::for_each()
[2m[36m(pid=58330)[0m     @     0x7f339529bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58330)[0m     @     0x7f33952bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58330)[0m     @     0x7f3394760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58330)[0m     @     0x7f339475e388 at::native::copy_impl()
[2m[36m(pid=58355)[0m     @     0x7f35d5a2cd91 at::TensorIterator::for_each()
[2m[36m(pid=58355)[0m     @     0x7f35d630fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58355)[0m     @     0x7f35d6332c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58355)[0m     @     0x7f35d57d4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58355)[0m     @     0x7f35d57d2388 at::native::copy_impl()
[2m[36m(pid=58311)[0m     @     0x7edfcf223d91 at::TensorIterator::for_each()
[2m[36m(pid=58311)[0m     @     0x7edfcfb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58311)[0m     @     0x7edfcfb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58311)[0m     @     0x7edfcefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58311)[0m     @     0x7edfcefc9388 at::native::copy_impl()
[2m[36m(pid=58318)[0m     @     0x7efd65cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=58318)[0m     @     0x7efd665b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58318)[0m     @     0x7efd665d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58318)[0m     @     0x7efd65a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58318)[0m     @     0x7efd65a78388 at::native::copy_impl()
[2m[36m(pid=58354)[0m     @     0x7f8ce1cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=58354)[0m     @     0x7f8ce1cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=58354)[0m     @     0x7f8ce25b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58354)[0m     @     0x7f8ce25d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58354)[0m     @     0x7f8ce1a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58354)[0m     @     0x7f8ce1a78388 at::native::copy_impl()
[2m[36m(pid=58272)[0m     @     0x7fa1aa083a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58272)[0m     @     0x7fa1aa081388 at::native::copy_impl()
[2m[36m(pid=58272)[0m     @     0x7fa1aa0835a4 at::native::copy_()
[2m[36m(pid=58272)[0m     @     0x7fa1aa76e4f5 at::Tensor::copy_()
[2m[36m(pid=58328)[0m     @     0x7f83fa043a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58328)[0m     @     0x7f83fa041388 at::native::copy_impl()
[2m[36m(pid=58328)[0m     @     0x7f83fa0435a4 at::native::copy_()
[2m[36m(pid=58328)[0m     @     0x7f83fa72e4f5 at::Tensor::copy_()
[2m[36m(pid=58328)[0m     @     0x7f83fcc018de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58366)[0m     @     0x7eda3774ad91 at::TensorIterator::for_each()
[2m[36m(pid=58366)[0m     @     0x7eda3802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58366)[0m     @     0x7eda38050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58366)[0m     @     0x7eda374f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58366)[0m     @     0x7eda374f0388 at::native::copy_impl()
[2m[36m(pid=58247)[0m     @     0x7f0f08c11d91 at::TensorIterator::for_each()
[2m[36m(pid=58247)[0m     @     0x7f0f094f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58247)[0m     @     0x7f0f09517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58247)[0m     @     0x7f0f089b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58247)[0m     @     0x7f0f089b7388 at::native::copy_impl()
[2m[36m(pid=58369)[0m     @     0x7f7556702d91 at::TensorIterator::for_each()
[2m[36m(pid=58369)[0m     @     0x7f7556fe5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58369)[0m     @     0x7f7557008c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58369)[0m     @     0x7f75564aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58369)[0m     @     0x7f75564a8388 at::native::copy_impl()
[2m[36m(pid=58280)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58280)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58280)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58280)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58280)[0m *** SIGSEGV (@0x0) received by PID 58280 (TID 0x7f2c1ca26700) from PID 0; stack trace: ***
[2m[36m(pid=58280)[0m     @     0x7f2c1c5ff390 (unknown)
[2m[36m(pid=58257)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58257)[0m *** SIGSEGV (@0x0) received by PID 58257 (TID 0x7f57a0606700) from PID 0; stack trace: ***
[2m[36m(pid=58257)[0m     @     0x7f57a01df390 (unknown)
[2m[36m(pid=58257)[0m     @     0x7f289fcd6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58257)[0m     @     0x7f289f4017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58257)[0m     @     0x7f289f4048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58267)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58267)[0m *** SIGSEGV (@0x0) received by PID 58267 (TID 0x7fd140f3c700) from PID 0; stack trace: ***
[2m[36m(pid=58267)[0m     @     0x7fd140b15390 (unknown)
[2m[36m(pid=58267)[0m     @     0x7fa2409e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58267)[0m     @     0x7fa2401137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58338)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58338)[0m *** SIGSEGV (@0x0) received by PID 58338 (TID 0x7f2bbb478700) from PID 0; stack trace: ***
[2m[36m(pid=58338)[0m     @     0x7f2bbb051390 (unknown)
[2m[36m(pid=58259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58259)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58259)[0m *** SIGSEGV (@0x0) received by PID 58259 (TID 0x7f18169bc700) from PID 0; stack trace: ***
[2m[36m(pid=58310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58310)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58310)[0m *** SIGSEGV (@0x0) received by PID 58310 (TID 0x7f98987a0700) from PID 0; stack trace: ***
[2m[36m(pid=58310)[0m     @     0x7f9898379390 (unknown)
[2m[36m(pid=58361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58361)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58361)[0m *** SIGSEGV (@0x0) received by PID 58361 (TID 0x7f31390f9700) from PID 0; stack trace: ***
[2m[36m(pid=58361)[0m     @     0x7f3138cd2390 (unknown)
[2m[36m(pid=58361)[0m     @     0x7f0238bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58361)[0m     @     0x7f02382fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58347)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58347)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58347)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58347)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58347)[0m *** SIGSEGV (@0x0) received by PID 58347 (TID 0x7feeaf164700) from PID 0; stack trace: ***
[2m[36m(pid=58347)[0m     @     0x7feeaed3d390 (unknown)
[2m[36m(pid=58252)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58252)[0m *** SIGSEGV (@0x0) received by PID 58252 (TID 0x7f29cd76d700) from PID 0; stack trace: ***
[2m[36m(pid=58252)[0m     @     0x7f29cd346390 (unknown)
[2m[36m(pid=58252)[0m     @     0x7efacd2b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58252)[0m     @     0x7efacc9e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58304)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58273)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58273)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58273)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58273)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58273)[0m *** SIGSEGV (@0x0) received by PID 58273 (TID 0x7f7ed4969700) from PID 0; stack trace: ***
[2m[36m(pid=58273)[0m     @     0x7f7ed4542390 (unknown)
[2m[36m(pid=58357)[0m     @     0x7f5bb1c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58357)[0m     @     0x7f5bb1c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58324)[0m *** SIGSEGV (@0x0) received by PID 58324 (TID 0x7f77dd0ea700) from PID 0; stack trace: ***
[2m[36m(pid=58324)[0m     @     0x7f77dccc3390 (unknown)
[2m[36m(pid=58324)[0m     @     0x7f48dcbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58324)[0m     @     0x7f48dc2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58377)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58285)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58285)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58285)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58371)[0m     @     0x7f6cc8ec0390 (unknown)
[2m[36m(pid=58371)[0m     @     0x7f3dc8e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58371)[0m     @     0x7f3dc85a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58323)[0m *** SIGSEGV (@0x0) received by PID 58323 (TID 0x7fc298fbe700) from PID 0; stack trace: ***
[2m[36m(pid=58323)[0m     @     0x7fc298b97390 (unknown)
[2m[36m(pid=58323)[0m     @     0x7f9398a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58323)[0m     @     0x7f93981b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58323)[0m     @     0x7f93981b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58305)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58305)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58305)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58305)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58305)[0m *** SIGSEGV (@0x0) received by PID 58305 (TID 0x7f2a4dcc7700) from PID 0; stack trace: ***
[2m[36m(pid=58305)[0m     @     0x7f2a4d8a0390 (unknown)
[2m[36m(pid=58305)[0m     @     0x7efb4d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58305)[0m     @     0x7efb4cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58251)[0m     @     0x7f599e4ee7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58251)[0m     @     0x7f599e4f18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58251)[0m     @     0x7f599e4f1ad3 at::TensorIterator::for_each()
[2m[36m(pid=58251)[0m     @     0x7f599e4f1d91 at::TensorIterator::for_each()
[2m[36m(pid=58256)[0m     @     0x7f04ac582390 (unknown)
[2m[36m(pid=58256)[0m     @     0x7ed5ac507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58256)[0m     @     0x7ed5abc327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58256)[0m     @     0x7ed5abc358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58256)[0m     @     0x7ed5abc35ad3 at::TensorIterator::for_each()
[2m[36m(pid=58327)[0m     @     0x7f0e53115f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58327)[0m     @     0x7f0e528407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58327)[0m     @     0x7f0e528438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58327)[0m     @     0x7f0e52843ad3 at::TensorIterator::for_each()
[2m[36m(pid=58301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58301)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58301)[0m *** SIGSEGV (@0x0) received by PID 58301 (TID 0x7f96636b4700) from PID 0; stack trace: ***
[2m[36m(pid=58301)[0m     @     0x7f966328d390 (unknown)
[2m[36m(pid=58301)[0m     @     0x7f6763229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58301)[0m     @     0x7f67629547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58356)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58356)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58356)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58356)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58356)[0m *** SIGSEGV (@0x0) received by PID 58356 (TID 0x7f60749ed700) from PID 0; stack trace: ***
[2m[36m(pid=58356)[0m     @     0x7f60745c6390 (unknown)
[2m[36m(pid=58356)[0m     @     0x7f31743e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58356)[0m     @     0x7f3173b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58312)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58312)[0m *** SIGSEGV (@0x0) received by PID 58312 (TID 0x7f5f15f81700) from PID 0; stack trace: ***
[2m[36m(pid=58312)[0m     @     0x7f5f15b5a390 (unknown)
[2m[36m(pid=58312)[0m     @     0x7f3015a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58312)[0m     @     0x7f30151357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58307)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58307)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58307)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58307)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58307)[0m *** SIGSEGV (@0x0) received by PID 58307 (TID 0x7f61d6216700) from PID 0; stack trace: ***
[2m[36m(pid=58307)[0m     @     0x7f61d5def390 (unknown)
[2m[36m(pid=58307)[0m     @     0x7f32d5d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58307)[0m     @     0x7f32d54a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58307)[0m     @     0x7f32d54a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58253)[0m *** SIGSEGV (@0x0) received by PID 58253 (TID 0x7f75fa394700) from PID 0; stack trace: ***
[2m[36m(pid=58253)[0m     @     0x7f75f9f6d390 (unknown)
[2m[36m(pid=58253)[0m     @     0x7f46f9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58253)[0m     @     0x7f46f954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58253)[0m     @     0x7f46f95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58353)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58353)[0m *** SIGSEGV (@0x0) received by PID 58353 (TID 0x7f5ed3331700) from PID 0; stack trace: ***
[2m[36m(pid=58326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58326)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58326)[0m *** SIGSEGV (@0x0) received by PID 58326 (TID 0x7fc153f04700) from PID 0; stack trace: ***
[2m[36m(pid=58326)[0m     @     0x7fc153add390 (unknown)
[2m[36m(pid=58326)[0m     @     0x7f9253a88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58326)[0m     @     0x7f92531b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58319)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58319)[0m *** SIGSEGV (@0x0) received by PID 58319 (TID 0x7f3ef5f29700) from PID 0; stack trace: ***
[2m[36m(pid=58319)[0m     @     0x7f3ef5b02390 (unknown)
[2m[36m(pid=58278)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58278)[0m *** SIGSEGV (@0x0) received by PID 58278 (TID 0x7f94a7063700) from PID 0; stack trace: ***
[2m[36m(pid=58278)[0m     @     0x7f94a6c3c390 (unknown)
[2m[36m(pid=58278)[0m     @     0x7f65a6bcef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58278)[0m     @     0x7f65a62f97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58278)[0m     @     0x7f65a62fc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58283)[0m     @     0x7ed4b8bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58283)[0m     @     0x7ed4b8bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58283)[0m     @     0x7ed4b8bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=58283)[0m     @     0x7ed4b8bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=58275)[0m     @     0x7fb1189757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58275)[0m     @     0x7fb1189788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58275)[0m     @     0x7fb118978ad3 at::TensorIterator::for_each()
[2m[36m(pid=58275)[0m     @     0x7fb118978d91 at::TensorIterator::for_each()
[2m[36m(pid=58275)[0m     @     0x7fb11925bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58275)[0m     @     0x7fb11927ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58263)[0m *** SIGSEGV (@0x0) received by PID 58263 (TID 0x7f2bdc65a700) from PID 0; stack trace: ***
[2m[36m(pid=58263)[0m     @     0x7f2bdc233390 (unknown)
[2m[36m(pid=58263)[0m     @     0x7efcdc01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58263)[0m     @     0x7efcdb7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58263)[0m     @     0x7efcdb74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58262)[0m *** SIGSEGV (@0x0) received by PID 58262 (TID 0x7f0224777700) from PID 0; stack trace: ***
[2m[36m(pid=58262)[0m     @     0x7f0224350390 (unknown)
[2m[36m(pid=58262)[0m     @     0x7ed3242f3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58262)[0m     @     0x7ed323a1e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58262)[0m     @     0x7ed323a218f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58268)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58268)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58268)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58268)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58268)[0m *** SIGSEGV (@0x0) received by PID 58268 (TID 0x7fbfab1aa700) from PID 0; stack trace: ***
[2m[36m(pid=58268)[0m     @     0x7fbfaad83390 (unknown)
[2m[36m(pid=58268)[0m     @     0x7f90aacfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58268)[0m     @     0x7f90aa4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58268)[0m     @     0x7f90aa42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58254)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58254)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58254)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58254)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58254)[0m *** SIGSEGV (@0x0) received by PID 58254 (TID 0x7ff36e58e700) from PID 0; stack trace: ***
[2m[36m(pid=58254)[0m     @     0x7ff36e167390 (unknown)
[2m[36m(pid=58248)[0m     @     0x7f73ec95df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58248)[0m     @     0x7f73ec0887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58248)[0m     @     0x7f73ec08b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58248)[0m     @     0x7f73ec08bad3 at::TensorIterator::for_each()
[2m[36m(pid=58248)[0m     @     0x7f73ec08bd91 at::TensorIterator::for_each()
[2m[36m(pid=58271)[0m     @     0x7fba1a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58271)[0m     @     0x7fba1a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58271)[0m     @     0x7fba1a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=58271)[0m     @     0x7fba1a957d91 at::TensorIterator::for_each()
[2m[36m(pid=58271)[0m     @     0x7fba1b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58271)[0m     @     0x7fba1b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58322)[0m     @     0x7eda32b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58322)[0m     @     0x7eda32b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58322)[0m     @     0x7eda32b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=58261)[0m     @     0x7f48c87c3390 (unknown)
[2m[36m(pid=58261)[0m     @     0x7f19c873ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58261)[0m     @     0x7f19c7e697db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58261)[0m     @     0x7f19c7e6c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58261)[0m     @     0x7f19c7e6cad3 at::TensorIterator::for_each()
[2m[36m(pid=58315)[0m     @     0x7f904faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58315)[0m     @     0x7f904f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58315)[0m     @     0x7f904f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58315)[0m     @     0x7f904f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=58378)[0m     @     0x7ed0279674f5 at::Tensor::copy_()
[2m[36m(pid=58378)[0m     @     0x7ed02da1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58378)[0m     @     0x556c9edb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58378)[0m     @     0x556c9ed12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58378)[0m     @     0x556c9ed9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58378)[0m     @     0x556c9ed9ea20 method_vectorcall
[2m[36m(pid=58378)[0m     @     0x556c9ed12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58378)[0m     @     0x556c9ed9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58378)[0m     @     0x556c9ed9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58378)[0m     @     0x556c9ed13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58378)[0m     @     0x556c9ed9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58378)[0m     @     0x556c9ed9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58378)[0m     @     0x556c9ed13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58378)[0m     @     0x556c9ed9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58378)[0m     @     0x556c9ed9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58378)[0m     @     0x556c9ed13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58378)[0m     @     0x556c9ed9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58378)[0m     @     0x556c9ed9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58378)[0m     @     0x556c9ed13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x7fafdf10e4f5 at::Tensor::copy_()
[2m[36m(pid=58320)[0m     @     0x7fafe15e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58320)[0m     @     0x7fafdf10e4f5 at::Tensor::copy_()
[2m[36m(pid=58320)[0m     @     0x7fafe51b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58373)[0m     @     0x7f2ec96708de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58373)[0m     @     0x7f2ec719d4f5 at::Tensor::copy_()
[2m[36m(pid=58373)[0m     @     0x7f2ecd24879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58373)[0m     @     0x556402215fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58373)[0m     @     0x556402170b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58373)[0m     @     0x5564021fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58373)[0m     @     0x5564021fca20 method_vectorcall
[2m[36m(pid=58373)[0m     @     0x556402170bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58373)[0m     @     0x5564021fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58373)[0m     @     0x5564021fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58373)[0m     @     0x556402171689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58373)[0m     @     0x5564021fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58373)[0m     @     0x5564021fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58373)[0m     @     0x556402171689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58373)[0m     @     0x5564021fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58373)[0m     @     0x5564021fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58373)[0m     @     0x556402171689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58373)[0m     @     0x5564021fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58373)[0m     @     0x5564021fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58373)[0m     @     0x556402171689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x7f03608228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58349)[0m     @     0x7f035e34f4f5 at::Tensor::copy_()
[2m[36m(pid=58349)[0m     @     0x7f03643fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58349)[0m     @     0x56477dfa7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58349)[0m     @     0x56477df02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x56477df8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58349)[0m     @     0x56477df8ea20 method_vectorcall
[2m[36m(pid=58349)[0m     @     0x56477df02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x56477df8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58349)[0m     @     0x56477df8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58349)[0m     @     0x56477df03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x56477df8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58349)[0m     @     0x56477df8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58349)[0m     @     0x56477df03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x56477df8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58349)[0m     @     0x56477df8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58349)[0m     @     0x56477df03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58349)[0m     @     0x56477df8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58349)[0m     @     0x56477df8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58349)[0m     @     0x56477df03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x7f35e9f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58329)[0m     @     0x7f35e7a774f5 at::Tensor::copy_()
[2m[36m(pid=58329)[0m     @     0x7f35edb2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58329)[0m     @     0x562afe20ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58329)[0m     @     0x562afe16ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x562afe1f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58329)[0m     @     0x562afe1f6a20 method_vectorcall
[2m[36m(pid=58329)[0m     @     0x562afe16abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x562afe1f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58329)[0m     @     0x562afe1f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58329)[0m     @     0x562afe16b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x562afe1f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58329)[0m     @     0x562afe1f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58329)[0m     @     0x562afe16b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x562afe1f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58329)[0m     @     0x562afe1f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58329)[0m     @     0x562afe16b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58329)[0m     @     0x562afe1f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58329)[0m     @     0x562afe1f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58329)[0m     @     0x562afe16b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x7f03a194a4f5 at::Tensor::copy_()
[2m[36m(pid=58364)[0m     @     0x7f03a79f579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58364)[0m     @     0x55eb31e40fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58364)[0m     @     0x55eb31d9bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x55eb31e26baf _PyEval_EvalCodeWithName
[2m[36m(pid=58364)[0m     @     0x55eb31e27a20 method_vectorcall
[2m[36m(pid=58364)[0m     @     0x55eb31d9bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x55eb31e26baf _PyEval_EvalCodeWithName
[2m[36m(pid=58364)[0m     @     0x55eb31e27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58364)[0m     @     0x55eb31d9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x55eb31e26baf _PyEval_EvalCodeWithName
[2m[36m(pid=58364)[0m     @     0x55eb31e27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58364)[0m     @     0x55eb31d9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x55eb31e26baf _PyEval_EvalCodeWithName
[2m[36m(pid=58364)[0m     @     0x55eb31e27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58364)[0m     @     0x55eb31d9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58364)[0m     @     0x55eb31e26baf _PyEval_EvalCodeWithName
[2m[36m(pid=58364)[0m     @     0x55eb31e27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58364)[0m     @     0x55eb31d9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x7f79907924f5 at::Tensor::copy_()
[2m[36m(pid=58265)[0m     @     0x7f7992c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58265)[0m     @     0x7f79907924f5 at::Tensor::copy_()
[2m[36m(pid=58265)[0m     @     0x7f799683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58265)[0m     @     0x5616a7c23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58265)[0m     @     0x5616a7b7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x5616a7c09baf _PyEval_EvalCodeWithName
[2m[36m(pid=58265)[0m     @     0x5616a7c0aa20 method_vectorcall
[2m[36m(pid=58265)[0m     @     0x5616a7b7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x5616a7c09baf _PyEval_EvalCodeWithName
[2m[36m(pid=58265)[0m     @     0x5616a7c0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58265)[0m     @     0x5616a7b7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x5616a7c09baf _PyEval_EvalCodeWithName
[2m[36m(pid=58265)[0m     @     0x5616a7c0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58265)[0m     @     0x5616a7b7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x5616a7c09baf _PyEval_EvalCodeWithName
[2m[36m(pid=58265)[0m     @     0x5616a7c0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58265)[0m     @     0x5616a7b7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58265)[0m     @     0x5616a7c09baf _PyEval_EvalCodeWithName
[2m[36m(pid=58265)[0m     @     0x5616a7c0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58265)[0m     @     0x5616a7b7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x7eeb515cb4f5 at::Tensor::copy_()
[2m[36m(pid=58332)[0m     @     0x7eeb53a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58332)[0m     @     0x7eeb515cb4f5 at::Tensor::copy_()
[2m[36m(pid=58332)[0m     @     0x7eeb5767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58332)[0m     @     0x561ab80abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58332)[0m     @     0x561ab8006b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x561ab8091baf _PyEval_EvalCodeWithName
[2m[36m(pid=58332)[0m     @     0x561ab8092a20 method_vectorcall
[2m[36m(pid=58332)[0m     @     0x561ab8006bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x561ab8091baf _PyEval_EvalCodeWithName
[2m[36m(pid=58332)[0m     @     0x561ab8092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58332)[0m     @     0x561ab8007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x561ab8091baf _PyEval_EvalCodeWithName
[2m[36m(pid=58332)[0m     @     0x561ab8092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58332)[0m     @     0x561ab8007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x561ab8091baf _PyEval_EvalCodeWithName
[2m[36m(pid=58332)[0m     @     0x561ab8092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58332)[0m     @     0x561ab8007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58332)[0m     @     0x561ab8091baf _PyEval_EvalCodeWithName
[2m[36m(pid=58332)[0m     @     0x561ab8092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58332)[0m     @     0x561ab8007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x7f0c26297388 at::native::copy_impl()
[2m[36m(pid=58345)[0m     @     0x7f0c262995a4 at::native::copy_()
[2m[36m(pid=58345)[0m     @     0x7f0c269844f5 at::Tensor::copy_()
[2m[36m(pid=58250)[0m     @     0x7f6075caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58250)[0m     @     0x7f6075caaad3 at::TensorIterator::for_each()
[2m[36m(pid=58246)[0m     @     0x7fac78e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=58246)[0m     @     0x7fac78e22d91 at::TensorIterator::for_each()
[2m[36m(pid=58246)[0m     @     0x7fac79705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58333)[0m     @     0x7ef996b575a4 at::native::copy_()
[2m[36m(pid=58333)[0m     @     0x7ef9972424f5 at::Tensor::copy_()
[2m[36m(pid=58245)[0m     @     0x7ef6b801e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58245)[0m     @     0x7ef6b801ead3 at::TensorIterator::for_each()
[2m[36m(pid=58245)[0m     @     0x7ef6b801ed91 at::TensorIterator::for_each()
[2m[36m(pid=58245)[0m     @     0x7ef6b8901b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58249)[0m     @     0x7f18580218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58249)[0m     @     0x7f1855b4e4f5 at::Tensor::copy_()
[2m[36m(pid=58249)[0m     @     0x7f185bbf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58249)[0m     @     0x561f075bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58249)[0m     @     0x561f0751ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58249)[0m     @     0x561f075a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58249)[0m     @     0x561f075a6a20 method_vectorcall
[2m[36m(pid=58249)[0m     @     0x561f0751abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58249)[0m     @     0x561f075a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58249)[0m     @     0x561f075a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58249)[0m     @     0x561f0751b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58249)[0m     @     0x561f075a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58249)[0m     @     0x561f075a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58249)[0m     @     0x561f0751b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58249)[0m     @     0x561f075a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58249)[0m     @     0x561f075a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58249)[0m     @     0x561f0751b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58249)[0m     @     0x561f075a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58249)[0m     @     0x561f075a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58249)[0m     @     0x561f0751b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x7f9349b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58339)[0m     @     0x7f93476b64f5 at::Tensor::copy_()
[2m[36m(pid=58339)[0m     @     0x7f934d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58339)[0m     @     0x5604ea4b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58339)[0m     @     0x5604ea411b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x5604ea49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58339)[0m     @     0x5604ea49da20 method_vectorcall
[2m[36m(pid=58339)[0m     @     0x5604ea411bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x5604ea49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58339)[0m     @     0x5604ea49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58339)[0m     @     0x5604ea412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x5604ea49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58339)[0m     @     0x5604ea49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58339)[0m     @     0x5604ea412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x5604ea49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58339)[0m     @     0x5604ea49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58339)[0m     @     0x5604ea412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58339)[0m     @     0x5604ea49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58339)[0m     @     0x5604ea49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58339)[0m     @     0x5604ea412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x7f6eb1e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58321)[0m     @     0x7f6eaf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=58321)[0m     @     0x7f6eb5a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58321)[0m     @     0x55b84682dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58321)[0m     @     0x55b846788b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x55b846813baf _PyEval_EvalCodeWithName
[2m[36m(pid=58321)[0m     @     0x55b846814a20 method_vectorcall
[2m[36m(pid=58321)[0m     @     0x55b846788bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x55b846813baf _PyEval_EvalCodeWithName
[2m[36m(pid=58321)[0m     @     0x55b846814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58321)[0m     @     0x55b846789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x55b846813baf _PyEval_EvalCodeWithName
[2m[36m(pid=58321)[0m     @     0x55b846814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58321)[0m     @     0x55b846789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x55b846813baf _PyEval_EvalCodeWithName
[2m[36m(pid=58321)[0m     @     0x55b846814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58321)[0m     @     0x55b846789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58321)[0m     @     0x55b846813baf _PyEval_EvalCodeWithName
[2m[36m(pid=58321)[0m     @     0x55b846814643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58321)[0m     @     0x55b846789689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x7f12d458b5a4 at::native::copy_()
[2m[36m(pid=58344)[0m     @     0x7f12d4c764f5 at::Tensor::copy_()
[2m[36m(pid=58344)[0m     @     0x7f12d71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58352)[0m     @     0x7f1881aab5a4 at::native::copy_()
[2m[36m(pid=58352)[0m     @     0x7f18821964f5 at::Tensor::copy_()
[2m[36m(pid=58352)[0m     @     0x7f18846698de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58341)[0m     @     0x7f1afca654f5 at::Tensor::copy_()
[2m[36m(pid=58341)[0m     @     0x7f1b02b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58341)[0m     @     0x55cd5f143fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58341)[0m     @     0x55cd5f09eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58341)[0m     @     0x55cd5f129baf _PyEval_EvalCodeWithName
[2m[36m(pid=58341)[0m     @     0x55cd5f12aa20 method_vectorcall
[2m[36m(pid=58341)[0m     @     0x55cd5f09ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58341)[0m     @     0x55cd5f129baf _PyEval_EvalCodeWithName
[2m[36m(pid=58341)[0m     @     0x55cd5f12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58341)[0m     @     0x55cd5f09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58341)[0m     @     0x55cd5f129baf _PyEval_EvalCodeWithName
[2m[36m(pid=58341)[0m     @     0x55cd5f12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58341)[0m     @     0x55cd5f09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58341)[0m     @     0x55cd5f129baf _PyEval_EvalCodeWithName
[2m[36m(pid=58341)[0m     @     0x55cd5f12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58341)[0m     @     0x55cd5f09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58341)[0m     @     0x55cd5f129baf _PyEval_EvalCodeWithName
[2m[36m(pid=58341)[0m     @     0x55cd5f12a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58341)[0m     @     0x55cd5f09f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x7f9a2bae45a4 at::native::copy_()
[2m[36m(pid=58336)[0m     @     0x7f9a2c1cf4f5 at::Tensor::copy_()
[2m[36m(pid=58336)[0m     @     0x7f9a2e6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58325)[0m     @     0x7fb2b3c4a5a4 at::native::copy_()
[2m[36m(pid=58325)[0m     @     0x7fb2b43354f5 at::Tensor::copy_()
[2m[36m(pid=58325)[0m     @     0x7fb2b68088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58340)[0m     @     0x7f30ebae45a4 at::native::copy_()
[2m[36m(pid=58340)[0m     @     0x7f30ec1cf4f5 at::Tensor::copy_()
[2m[36m(pid=58340)[0m     @     0x7f30ee6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58358)[0m     @     0x7f375a5ba5a4 at::native::copy_()
[2m[36m(pid=58358)[0m     @     0x7f375aca54f5 at::Tensor::copy_()
[2m[36m(pid=58358)[0m     @     0x7f375d1788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58360)[0m     @     0x7f72d5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=58360)[0m     @     0x7f72d834d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58360)[0m     @     0x7f72d5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=58360)[0m     @     0x7f72dbf2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58360)[0m     @     0x555852264fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58360)[0m     @     0x5558521bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x55585224abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58360)[0m     @     0x55585224ba20 method_vectorcall
[2m[36m(pid=58264)[0m     @     0x7ed15f1888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58264)[0m     @     0x7ed15ccb54f5 at::Tensor::copy_()
[2m[36m(pid=58264)[0m     @     0x7ed162d6079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58264)[0m     @     0x5619865e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58264)[0m     @     0x56198653fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58264)[0m     @     0x5619865cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58264)[0m     @     0x5619865cba20 method_vectorcall
[2m[36m(pid=58264)[0m     @     0x56198653fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58264)[0m     @     0x5619865cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58264)[0m     @     0x5619865cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58264)[0m     @     0x561986540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58264)[0m     @     0x5619865cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58264)[0m     @     0x5619865cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58264)[0m     @     0x561986540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58264)[0m     @     0x5619865cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58264)[0m     @     0x5619865cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58264)[0m     @     0x561986540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58264)[0m     @     0x5619865cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58264)[0m     @     0x5619865cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58264)[0m     @     0x561986540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x7fab293ba4f5 at::Tensor::copy_()
[2m[36m(pid=58258)[0m     @     0x7fab2b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58258)[0m     @     0x7fab293ba4f5 at::Tensor::copy_()
[2m[36m(pid=58258)[0m     @     0x7fab2f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58258)[0m     @     0x56282d0acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58258)[0m     @     0x56282d007b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x56282d092baf _PyEval_EvalCodeWithName
[2m[36m(pid=58258)[0m     @     0x56282d093a20 method_vectorcall
[2m[36m(pid=58258)[0m     @     0x56282d007bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x56282d092baf _PyEval_EvalCodeWithName
[2m[36m(pid=58258)[0m     @     0x56282d093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58258)[0m     @     0x56282d008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x56282d092baf _PyEval_EvalCodeWithName
[2m[36m(pid=58258)[0m     @     0x56282d093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58258)[0m     @     0x56282d008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x56282d092baf _PyEval_EvalCodeWithName
[2m[36m(pid=58258)[0m     @     0x56282d093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58258)[0m     @     0x56282d008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58258)[0m     @     0x56282d092baf _PyEval_EvalCodeWithName
[2m[36m(pid=58258)[0m     @     0x56282d093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58258)[0m     @     0x56282d008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x7f33947605a4 at::native::copy_()
[2m[36m(pid=58330)[0m     @     0x7f3394e4b4f5 at::Tensor::copy_()
[2m[36m(pid=58330)[0m     @     0x7f339731e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58355)[0m     @     0x7f35d57d45a4 at::native::copy_()
[2m[36m(pid=58355)[0m     @     0x7f35d5ebf4f5 at::Tensor::copy_()
[2m[36m(pid=58355)[0m     @     0x7f35d83928de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58311)[0m     @     0x7edfcefcb5a4 at::native::copy_()
[2m[36m(pid=58311)[0m     @     0x7edfcf6b64f5 at::Tensor::copy_()
[2m[36m(pid=58311)[0m     @     0x7edfd1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58318)[0m     @     0x7efd65a7a5a4 at::native::copy_()
[2m[36m(pid=58318)[0m     @     0x7efd661654f5 at::Tensor::copy_()
[2m[36m(pid=58318)[0m     @     0x7efd686388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58354)[0m     @     0x7f8ce1a7a5a4 at::native::copy_()
[2m[36m(pid=58354)[0m     @     0x7f8ce21654f5 at::Tensor::copy_()
[2m[36m(pid=58354)[0m     @     0x7f8ce46388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58272)[0m     @     0x7fa1acc418de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58272)[0m     @     0x7fa1aa76e4f5 at::Tensor::copy_()
[2m[36m(pid=58272)[0m     @     0x7fa1b081979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58272)[0m     @     0x55739ce4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58272)[0m     @     0x55739cda9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58272)[0m     @     0x55739ce34baf _PyEval_EvalCodeWithName
[2m[36m(pid=58272)[0m     @     0x55739ce35a20 method_vectorcall
[2m[36m(pid=58272)[0m     @     0x55739cda9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58272)[0m     @     0x55739ce34baf _PyEval_EvalCodeWithName
[2m[36m(pid=58272)[0m     @     0x55739ce35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58272)[0m     @     0x55739cdaa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58272)[0m     @     0x55739ce34baf _PyEval_EvalCodeWithName
[2m[36m(pid=58272)[0m     @     0x55739ce35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58272)[0m     @     0x55739cdaa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58272)[0m     @     0x55739ce34baf _PyEval_EvalCodeWithName
[2m[36m(pid=58272)[0m     @     0x55739ce35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58272)[0m     @     0x55739cdaa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58272)[0m     @     0x55739ce34baf _PyEval_EvalCodeWithName
[2m[36m(pid=58272)[0m     @     0x55739ce35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58272)[0m     @     0x55739cdaa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x7f83fa72e4f5 at::Tensor::copy_()
[2m[36m(pid=58328)[0m     @     0x7f84007d979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58328)[0m     @     0x557b5171efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58328)[0m     @     0x557b51679b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x557b51704baf _PyEval_EvalCodeWithName
[2m[36m(pid=58328)[0m     @     0x557b51705a20 method_vectorcall
[2m[36m(pid=58328)[0m     @     0x557b51679bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x557b51704baf _PyEval_EvalCodeWithName
[2m[36m(pid=58328)[0m     @     0x557b51705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58328)[0m     @     0x557b5167a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x557b51704baf _PyEval_EvalCodeWithName
[2m[36m(pid=58328)[0m     @     0x557b51705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58328)[0m     @     0x557b5167a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x557b51704baf _PyEval_EvalCodeWithName
[2m[36m(pid=58328)[0m     @     0x557b51705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58328)[0m     @     0x557b5167a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58328)[0m     @     0x557b51704baf _PyEval_EvalCodeWithName
[2m[36m(pid=58328)[0m     @     0x557b51705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58328)[0m     @     0x557b5167a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x7eda374f25a4 at::native::copy_()
[2m[36m(pid=58366)[0m     @     0x7eda37bdd4f5 at::Tensor::copy_()
[2m[36m(pid=58366)[0m     @     0x7eda3a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58247)[0m     @     0x7f0f089b95a4 at::native::copy_()
[2m[36m(pid=58247)[0m     @     0x7f0f090a44f5 at::Tensor::copy_()
[2m[36m(pid=58247)[0m     @     0x7f0f0b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58369)[0m     @     0x7f75564aa5a4 at::native::copy_()
[2m[36m(pid=58369)[0m     @     0x7f7556b954f5 at::Tensor::copy_()
[2m[36m(pid=58369)[0m     @     0x7f75590688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58280)[0m     @     0x7efd1c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58280)[0m     @     0x7efd1bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58280)[0m     @     0x7efd1bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58280)[0m     @     0x7efd1bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=58257)[0m     @     0x7f289f404ad3 at::TensorIterator::for_each()
[2m[36m(pid=58257)[0m     @     0x7f289f404d91 at::TensorIterator::for_each()
[2m[36m(pid=58257)[0m     @     0x7f289fce7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58257)[0m     @     0x7f289fd0ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58257)[0m     @     0x7f289f1aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58257)[0m     @     0x7f289f1aa388 at::native::copy_impl()
[2m[36m(pid=58267)[0m     @     0x7fa2401168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58267)[0m     @     0x7fa240116ad3 at::TensorIterator::for_each()
[2m[36m(pid=58267)[0m     @     0x7fa240116d91 at::TensorIterator::for_each()
[2m[36m(pid=58267)[0m     @     0x7fa2409f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58267)[0m     @     0x7fa240a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58267)[0m     @     0x7fa23febea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58338)[0m     @     0x7efcbafeff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58338)[0m     @     0x7efcba71a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58338)[0m     @     0x7efcba71d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58338)[0m     @     0x7efcba71dad3 at::TensorIterator::for_each()
[2m[36m(pid=58338)[0m     @     0x7efcba71dd91 at::TensorIterator::for_each()
[2m[36m(pid=58338)[0m     @     0x7efcbb000b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58259)[0m     @     0x7f1816595390 (unknown)
[2m[36m(pid=58259)[0m     @     0x7ee916193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58259)[0m     @     0x7ee9158be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58259)[0m     @     0x7ee9158c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58259)[0m     @     0x7ee9158c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=58310)[0m     @     0x7f69982def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58310)[0m     @     0x7f6997a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58310)[0m     @     0x7f6997a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58310)[0m     @     0x7f6997a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=58310)[0m     @     0x7f6997a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=58361)[0m     @     0x7f02382ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58361)[0m     @     0x7f02382ffad3 at::TensorIterator::for_each()
[2m[36m(pid=58361)[0m     @     0x7f02382ffd91 at::TensorIterator::for_each()
[2m[36m(pid=58361)[0m     @     0x7f0238be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58361)[0m     @     0x7f0238c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58361)[0m     @     0x7f02380a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58347)[0m     @     0x7fbfaecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58347)[0m     @     0x7fbfae4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58347)[0m     @     0x7fbfae42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58347)[0m     @     0x7fbfae42aad3 at::TensorIterator::for_each()
[2m[36m(pid=58347)[0m     @     0x7fbfae42ad91 at::TensorIterator::for_each()
[2m[36m(pid=58252)[0m     @     0x7efacc9e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58252)[0m     @     0x7efacc9e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=58252)[0m     @     0x7efacc9e5d91 at::TensorIterator::for_each()
[2m[36m(pid=58252)[0m     @     0x7efacd2c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58252)[0m     @     0x7efacd2ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58304)[0m *** SIGSEGV (@0x0) received by PID 58304 (TID 0x7f87ebcf2700) from PID 0; stack trace: ***
[2m[36m(pid=58304)[0m     @     0x7f87eb8cb390 (unknown)
[2m[36m(pid=58304)[0m     @     0x7f58eb871f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58304)[0m     @     0x7f58eaf9c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58266)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=58266)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=58266)[0m *** Aborted at 1604573356 (unix time) try "date -d @1604573356" if you are using GNU date ***
[2m[36m(pid=58266)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58266)[0m *** SIGSEGV (@0x0) received by PID 58266 (TID 0x7ffb9a195700) from PID 0; stack trace: ***
[2m[36m(pid=58266)[0m     @     0x7ffb99d6e390 (unknown)
[2m[36m(pid=58266)[0m     @     0x7fcc99d12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58273)[0m     @     0x7f4fd44d1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58273)[0m     @     0x7f4fd3bfc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58273)[0m     @     0x7f4fd3bff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58273)[0m     @     0x7f4fd3bffad3 at::TensorIterator::for_each()
[2m[36m(pid=58317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58317)[0m *** SIGSEGV (@0x0) received by PID 58317 (TID 0x7f06a9363700) from PID 0; stack trace: ***
[2m[36m(pid=58317)[0m     @     0x7f06a8f3c390 (unknown)
[2m[36m(pid=58317)[0m     @     0x7ed7a8ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58317)[0m     @     0x7ed7a85cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58317)[0m     @     0x7ed7a85d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58317)[0m     @     0x7ed7a85d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=58357)[0m     @     0x7f5bb1c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=58357)[0m     @     0x7f5bb1c27d91 at::TensorIterator::for_each()
[2m[36m(pid=58357)[0m     @     0x7f5bb250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58357)[0m     @     0x7f5bb252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58357)[0m     @     0x7f5bb19cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58357)[0m     @     0x7f5bb19cd388 at::native::copy_impl()
[2m[36m(pid=58324)[0m     @     0x7f48dc2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58324)[0m     @     0x7f48dc2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=58324)[0m     @     0x7f48dc2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=58377)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58377)[0m *** SIGSEGV (@0x0) received by PID 58377 (TID 0x7f5005bb2700) from PID 0; stack trace: ***
[2m[36m(pid=58377)[0m     @     0x7f500578b390 (unknown)
[2m[36m(pid=58377)[0m     @     0x7f21056f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58377)[0m     @     0x7f2104e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58285)[0m PC: @                0x0 (unknown)
[2m[36m(pid=58285)[0m *** SIGSEGV (@0x0) received by PID 58285 (TID 0x7f0045996700) from PID 0; stack trace: ***
[2m[36m(pid=58285)[0m     @     0x7f004556f390 (unknown)
[2m[36m(pid=58285)[0m     @     0x7ed1454e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58285)[0m     @     0x7ed144c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58371)[0m     @     0x7f3dc85a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58371)[0m     @     0x7f3dc85a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=58371)[0m     @     0x7f3dc85a5d91 at::TensorIterator::for_each()
[2m[36m(pid=58371)[0m     @     0x7f3dc8e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58371)[0m     @     0x7f3dc8eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58371)[0m     @     0x7f3dc834da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58323)[0m     @     0x7f93981b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=58323)[0m     @     0x7f93981b9d91 at::TensorIterator::for_each()
[2m[36m(pid=58323)[0m     @     0x7f9398a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58323)[0m     @     0x7f9398abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58323)[0m     @     0x7f9397f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58323)[0m     @     0x7f9397f5f388 at::native::copy_impl()
[2m[36m(pid=58305)[0m     @     0x7efb4cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58305)[0m     @     0x7efb4cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=58305)[0m     @     0x7efb4cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=58251)[0m     @     0x7f599edd4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58251)[0m     @     0x7f599edf7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58251)[0m     @     0x7f599e299a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58251)[0m     @     0x7f599e297388 at::native::copy_impl()
[2m[36m(pid=58251)[0m     @     0x7f599e2995a4 at::native::copy_()
[2m[36m(pid=58256)[0m     @     0x7ed5abc35d91 at::TensorIterator::for_each()
[2m[36m(pid=58256)[0m     @     0x7ed5ac518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58256)[0m     @     0x7ed5ac53bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58256)[0m     @     0x7ed5ab9dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58327)[0m     @     0x7f0e52843d91 at::TensorIterator::for_each()
[2m[36m(pid=58327)[0m     @     0x7f0e53126b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58327)[0m     @     0x7f0e53149c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58327)[0m     @     0x7f0e525eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58327)[0m     @     0x7f0e525e9388 at::native::copy_impl()
[2m[36m(pid=58301)[0m     @     0x7f67629578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58301)[0m     @     0x7f6762957ad3 at::TensorIterator::for_each()
[2m[36m(pid=58301)[0m     @     0x7f6762957d91 at::TensorIterator::for_each()
[2m[36m(pid=58301)[0m     @     0x7f676323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58301)[0m     @     0x7f676325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58356)[0m     @     0x7f3173b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58356)[0m     @     0x7f3173b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=58312)[0m     @     0x7f30151388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58312)[0m     @     0x7f3015138ad3 at::TensorIterator::for_each()
[2m[36m(pid=58312)[0m     @     0x7f3015138d91 at::TensorIterator::for_each()
[2m[36m(pid=58312)[0m     @     0x7f3015a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58312)[0m     @     0x7f3015a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58307)[0m     @     0x7f32d54a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=58307)[0m     @     0x7f32d54a5d91 at::TensorIterator::for_each()
[2m[36m(pid=58307)[0m     @     0x7f32d5d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58307)[0m     @     0x7f32d5dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58253)[0m     @     0x7f46f9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=58253)[0m     @     0x7f46f9552d91 at::TensorIterator::for_each()
[2m[36m(pid=58253)[0m     @     0x7f46f9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58253)[0m     @     0x7f46f9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58253)[0m     @     0x7f46f92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58353)[0m     @     0x7f5ed2f0a390 (unknown)
[2m[36m(pid=58353)[0m     @     0x7f2fd2e93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58353)[0m     @     0x7f2fd25be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58353)[0m     @     0x7f2fd25c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58353)[0m     @     0x7f2fd25c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=58326)[0m     @     0x7f92531b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58326)[0m     @     0x7f92531b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=58326)[0m     @     0x7f92531b6d91 at::TensorIterator::for_each()
[2m[36m(pid=58319)[0m     @     0x7f0ff5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58319)[0m     @     0x7f0ff51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58278)[0m     @     0x7f65a62fcad3 at::TensorIterator::for_each()
[2m[36m(pid=58278)[0m     @     0x7f65a62fcd91 at::TensorIterator::for_each()
[2m[36m(pid=58278)[0m     @     0x7f65a6bdfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58278)[0m     @     0x7f65a6c02c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58278)[0m     @     0x7f65a60a4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58283)[0m     @     0x7ed4b94b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58283)[0m     @     0x7ed4b94d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58283)[0m     @     0x7ed4b8979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58283)[0m     @     0x7ed4b8977388 at::native::copy_impl()
[2m[36m(pid=58275)[0m     @     0x7fb118720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58275)[0m     @     0x7fb11871e388 at::native::copy_impl()
[2m[36m(pid=58275)[0m     @     0x7fb1187205a4 at::native::copy_()
[2m[36m(pid=58275)[0m     @     0x7fb118e0b4f5 at::Tensor::copy_()
[2m[36m(pid=58275)[0m     @     0x7fb11b2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58263)[0m     @     0x7efcdb74aad3 at::TensorIterator::for_each()
[2m[36m(pid=58263)[0m     @     0x7efcdb74ad91 at::TensorIterator::for_each()
[2m[36m(pid=58263)[0m     @     0x7efcdc02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58263)[0m     @     0x7efcdc050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58263)[0m     @     0x7efcdb4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58262)[0m     @     0x7ed323a21ad3 at::TensorIterator::for_each()
[2m[36m(pid=58262)[0m     @     0x7ed323a21d91 at::TensorIterator::for_each()
[2m[36m(pid=58262)[0m     @     0x7ed324304b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58262)[0m     @     0x7ed324327c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58262)[0m     @     0x7ed3237c9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58268)[0m     @     0x7f90aa42aad3 at::TensorIterator::for_each()
[2m[36m(pid=58268)[0m     @     0x7f90aa42ad91 at::TensorIterator::for_each()
[2m[36m(pid=58268)[0m     @     0x7f90aad0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58268)[0m     @     0x7f90aad30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58254)[0m     @     0x7fc46e10df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=58254)[0m     @     0x7fc46d8387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58254)[0m     @     0x7fc46d83b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58254)[0m     @     0x7fc46d83bad3 at::TensorIterator::for_each()
[2m[36m(pid=58248)[0m     @     0x7f73ec96eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58248)[0m     @     0x7f73ec991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58248)[0m     @     0x7f73ebe33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58248)[0m     @     0x7f73ebe31388 at::native::copy_impl()
[2m[36m(pid=58248)[0m     @     0x7f73ebe335a4 at::native::copy_()
[2m[36m(pid=58248)[0m     @     0x7f73ec51e4f5 at::Tensor::copy_()
[2m[36m(pid=58271)[0m     @     0x7fba1a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58271)[0m     @     0x7fba1a6fd388 at::native::copy_impl()
[2m[36m(pid=58271)[0m     @     0x7fba1a6ff5a4 at::native::copy_()
[2m[36m(pid=58271)[0m     @     0x7fba1adea4f5 at::Tensor::copy_()
[2m[36m(pid=58271)[0m     @     0x7fba1d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58322)[0m     @     0x7eda32b68d91 at::TensorIterator::for_each()
[2m[36m(pid=58322)[0m     @     0x7eda3344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58322)[0m     @     0x7eda3346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58322)[0m     @     0x7eda32910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58322)[0m     @     0x7eda3290e388 at::native::copy_impl()
[2m[36m(pid=58322)[0m     @     0x7eda329105a4 at::native::copy_()
[2m[36m(pid=58261)[0m     @     0x7f19c7e6cd91 at::TensorIterator::for_each()
[2m[36m(pid=58261)[0m     @     0x7f19c874fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58261)[0m     @     0x7f19c8772c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58261)[0m     @     0x7f19c7c14a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58261)[0m     @     0x7f19c7c12388 at::native::copy_impl()
[2m[36m(pid=58261)[0m     @     0x7f19c7c145a4 at::native::copy_()
[2m[36m(pid=58315)[0m     @     0x7f904f223d91 at::TensorIterator::for_each()
[2m[36m(pid=58315)[0m     @     0x7f904fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58315)[0m     @     0x7f904fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58315)[0m     @     0x7f904efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58315)[0m     @     0x7f904efc9388 at::native::copy_impl()
[2m[36m(pid=58315)[0m     @     0x7f904efcb5a4 at::native::copy_()
[2m[36m(pid=58320)[0m     @     0x5632a69a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58320)[0m     @     0x5632a6901b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x5632a698cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58320)[0m     @     0x5632a698da20 method_vectorcall
[2m[36m(pid=58320)[0m     @     0x5632a6901bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x5632a698cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58320)[0m     @     0x5632a698d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58320)[0m     @     0x5632a6902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x5632a698cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58320)[0m     @     0x5632a698d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58320)[0m     @     0x5632a6902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x5632a698cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58320)[0m     @     0x5632a698d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58320)[0m     @     0x5632a6902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58320)[0m     @     0x5632a698cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58320)[0m     @     0x5632a698d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58320)[0m     @     0x5632a6902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x7f0c28e578de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58345)[0m     @     0x7f0c269844f5 at::Tensor::copy_()
[2m[36m(pid=58345)[0m     @     0x7f0c2ca2f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58345)[0m     @     0x5586fc8a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58345)[0m     @     0x5586fc800b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x5586fc88bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58345)[0m     @     0x5586fc88ca20 method_vectorcall
[2m[36m(pid=58345)[0m     @     0x5586fc800bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x5586fc88bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58345)[0m     @     0x5586fc88c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58345)[0m     @     0x5586fc801689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x5586fc88bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58345)[0m     @     0x5586fc88c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58345)[0m     @     0x5586fc801689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x5586fc88bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58345)[0m     @     0x5586fc88c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58345)[0m     @     0x5586fc801689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58345)[0m     @     0x5586fc88bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58345)[0m     @     0x5586fc88c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58345)[0m     @     0x5586fc801689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x7f6075caad91 at::TensorIterator::for_each()
[2m[36m(pid=58250)[0m     @     0x7f607658db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58250)[0m     @     0x7f60765b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58250)[0m     @     0x7f6075a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58250)[0m     @     0x7f6075a50388 at::native::copy_impl()
[2m[36m(pid=58250)[0m     @     0x7f6075a525a4 at::native::copy_()
[2m[36m(pid=58250)[0m     @     0x7f607613d4f5 at::Tensor::copy_()
[2m[36m(pid=58246)[0m     @     0x7fac79728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58246)[0m     @     0x7fac78bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58246)[0m     @     0x7fac78bc8388 at::native::copy_impl()
[2m[36m(pid=58246)[0m     @     0x7fac78bca5a4 at::native::copy_()
[2m[36m(pid=58246)[0m     @     0x7fac792b54f5 at::Tensor::copy_()
[2m[36m(pid=58333)[0m     @     0x7ef9997158de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58333)[0m     @     0x7ef9972424f5 at::Tensor::copy_()
[2m[36m(pid=58333)[0m     @     0x7ef99d2ed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58333)[0m     @     0x55867a161fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58333)[0m     @     0x55867a0bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58333)[0m     @     0x55867a147baf _PyEval_EvalCodeWithName
[2m[36m(pid=58333)[0m     @     0x55867a148a20 method_vectorcall
[2m[36m(pid=58333)[0m     @     0x55867a0bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58333)[0m     @     0x55867a147baf _PyEval_EvalCodeWithName
[2m[36m(pid=58333)[0m     @     0x55867a148643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58333)[0m     @     0x55867a0bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58333)[0m     @     0x55867a147baf _PyEval_EvalCodeWithName
[2m[36m(pid=58333)[0m     @     0x55867a148643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58333)[0m     @     0x55867a0bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58333)[0m     @     0x55867a147baf _PyEval_EvalCodeWithName
[2m[36m(pid=58333)[0m     @     0x55867a148643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58333)[0m     @     0x55867a0bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58333)[0m     @     0x55867a147baf _PyEval_EvalCodeWithName
[2m[36m(pid=58333)[0m     @     0x55867a148643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58333)[0m     @     0x55867a0bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x7ef6b8924c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58245)[0m     @     0x7ef6b7dc6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58245)[0m     @     0x7ef6b7dc4388 at::native::copy_impl()
[2m[36m(pid=58245)[0m     @     0x7ef6b7dc65a4 at::native::copy_()
[2m[36m(pid=58245)[0m     @     0x7ef6b84b14f5 at::Tensor::copy_()
[2m[36m(pid=58344)[0m     @     0x7f12d4c764f5 at::Tensor::copy_()
[2m[36m(pid=58344)[0m     @     0x7f12dad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58344)[0m     @     0x563ae1da9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58344)[0m     @     0x563ae1d04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x563ae1d8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58344)[0m     @     0x563ae1d90a20 method_vectorcall
[2m[36m(pid=58344)[0m     @     0x563ae1d04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x563ae1d8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58344)[0m     @     0x563ae1d90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58344)[0m     @     0x563ae1d05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x563ae1d8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58344)[0m     @     0x563ae1d90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58344)[0m     @     0x563ae1d05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x563ae1d8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58344)[0m     @     0x563ae1d90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58344)[0m     @     0x563ae1d05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58344)[0m     @     0x563ae1d8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58344)[0m     @     0x563ae1d90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58344)[0m     @     0x563ae1d05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x7f18821964f5 at::Tensor::copy_()
[2m[36m(pid=58352)[0m     @     0x7f188824179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58352)[0m     @     0x55f26dfadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58352)[0m     @     0x55f26df08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x55f26df93baf _PyEval_EvalCodeWithName
[2m[36m(pid=58352)[0m     @     0x55f26df94a20 method_vectorcall
[2m[36m(pid=58352)[0m     @     0x55f26df08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x55f26df93baf _PyEval_EvalCodeWithName
[2m[36m(pid=58352)[0m     @     0x55f26df94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58352)[0m     @     0x55f26df09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x55f26df93baf _PyEval_EvalCodeWithName
[2m[36m(pid=58352)[0m     @     0x55f26df94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58352)[0m     @     0x55f26df09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x55f26df93baf _PyEval_EvalCodeWithName
[2m[36m(pid=58352)[0m     @     0x55f26df94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58352)[0m     @     0x55f26df09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58352)[0m     @     0x55f26df93baf _PyEval_EvalCodeWithName
[2m[36m(pid=58352)[0m     @     0x55f26df94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58352)[0m     @     0x55f26df09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x7f9a2c1cf4f5 at::Tensor::copy_()
[2m[36m(pid=58336)[0m     @     0x7f9a3227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58336)[0m     @     0x55f61e231fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58336)[0m     @     0x55f61e18cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x55f61e217baf _PyEval_EvalCodeWithName
[2m[36m(pid=58336)[0m     @     0x55f61e218a20 method_vectorcall
[2m[36m(pid=58336)[0m     @     0x55f61e18cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x55f61e217baf _PyEval_EvalCodeWithName
[2m[36m(pid=58336)[0m     @     0x55f61e218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58336)[0m     @     0x55f61e18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x55f61e217baf _PyEval_EvalCodeWithName
[2m[36m(pid=58336)[0m     @     0x55f61e218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58336)[0m     @     0x55f61e18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x55f61e217baf _PyEval_EvalCodeWithName
[2m[36m(pid=58336)[0m     @     0x55f61e218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58336)[0m     @     0x55f61e18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58336)[0m     @     0x55f61e217baf _PyEval_EvalCodeWithName
[2m[36m(pid=58336)[0m     @     0x55f61e218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58336)[0m     @     0x55f61e18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x7fb2b43354f5 at::Tensor::copy_()
[2m[36m(pid=58325)[0m     @     0x7fb2ba3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58325)[0m     @     0x5573276d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58325)[0m     @     0x557327632b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x5573276bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58325)[0m     @     0x5573276bea20 method_vectorcall
[2m[36m(pid=58325)[0m     @     0x557327632bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x5573276bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58325)[0m     @     0x5573276be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58325)[0m     @     0x557327633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x5573276bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58325)[0m     @     0x5573276be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58325)[0m     @     0x557327633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x5573276bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58325)[0m     @     0x5573276be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58325)[0m     @     0x557327633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58325)[0m     @     0x5573276bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58325)[0m     @     0x5573276be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58325)[0m     @     0x557327633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x7f30ec1cf4f5 at::Tensor::copy_()
[2m[36m(pid=58340)[0m     @     0x7f30f227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58340)[0m     @     0x55a4671e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58340)[0m     @     0x55a46713eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x55a4671c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58340)[0m     @     0x55a4671caa20 method_vectorcall
[2m[36m(pid=58340)[0m     @     0x55a46713ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x55a4671c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58340)[0m     @     0x55a4671ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58340)[0m     @     0x55a46713f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x55a4671c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58340)[0m     @     0x55a4671ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58340)[0m     @     0x55a46713f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x55a4671c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58340)[0m     @     0x55a4671ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58340)[0m     @     0x55a46713f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58340)[0m     @     0x55a4671c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58340)[0m     @     0x55a4671ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58340)[0m     @     0x55a46713f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x7f375aca54f5 at::Tensor::copy_()
[2m[36m(pid=58358)[0m     @     0x7f3760d5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58358)[0m     @     0x55e863fc8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58358)[0m     @     0x55e863f23b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x55e863faebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58358)[0m     @     0x55e863fafa20 method_vectorcall
[2m[36m(pid=58358)[0m     @     0x55e863f23bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x55e863faebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58358)[0m     @     0x55e863faf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58358)[0m     @     0x55e863f24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x55e863faebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58358)[0m     @     0x55e863faf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58358)[0m     @     0x55e863f24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x55e863faebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58358)[0m     @     0x55e863faf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58358)[0m     @     0x55e863f24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58358)[0m     @     0x55e863faebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58358)[0m     @     0x55e863faf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58358)[0m     @     0x55e863f24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x5558521bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x55585224abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58360)[0m     @     0x55585224b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58360)[0m     @     0x5558521c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x55585224abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58360)[0m     @     0x55585224b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58360)[0m     @     0x5558521c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x55585224abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58360)[0m     @     0x55585224b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58360)[0m     @     0x5558521c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58360)[0m     @     0x55585224abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58360)[0m     @     0x55585224b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58360)[0m     @     0x5558521c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x7f3394e4b4f5 at::Tensor::copy_()
[2m[36m(pid=58330)[0m     @     0x7f339aef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58330)[0m     @     0x556df542bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58330)[0m     @     0x556df5386b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x556df5411baf _PyEval_EvalCodeWithName
[2m[36m(pid=58330)[0m     @     0x556df5412a20 method_vectorcall
[2m[36m(pid=58330)[0m     @     0x556df5386bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x556df5411baf _PyEval_EvalCodeWithName
[2m[36m(pid=58330)[0m     @     0x556df5412643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58330)[0m     @     0x556df5387689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x556df5411baf _PyEval_EvalCodeWithName
[2m[36m(pid=58330)[0m     @     0x556df5412643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58330)[0m     @     0x556df5387689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x556df5411baf _PyEval_EvalCodeWithName
[2m[36m(pid=58330)[0m     @     0x556df5412643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58330)[0m     @     0x556df5387689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58330)[0m     @     0x556df5411baf _PyEval_EvalCodeWithName
[2m[36m(pid=58330)[0m     @     0x556df5412643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58330)[0m     @     0x556df5387689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x7f35d5ebf4f5 at::Tensor::copy_()
[2m[36m(pid=58355)[0m     @     0x7f35dbf6a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58355)[0m     @     0x560d138e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58355)[0m     @     0x560d13843b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x560d138cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58355)[0m     @     0x560d138cfa20 method_vectorcall
[2m[36m(pid=58355)[0m     @     0x560d13843bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x560d138cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58355)[0m     @     0x560d138cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58355)[0m     @     0x560d13844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x560d138cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58355)[0m     @     0x560d138cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58355)[0m     @     0x560d13844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x560d138cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58355)[0m     @     0x560d138cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58355)[0m     @     0x560d13844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58355)[0m     @     0x560d138cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58355)[0m     @     0x560d138cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58355)[0m     @     0x560d13844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x7edfcf6b64f5 at::Tensor::copy_()
[2m[36m(pid=58311)[0m     @     0x7edfd576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58311)[0m     @     0x55b96d24efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58311)[0m     @     0x55b96d1a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x55b96d234baf _PyEval_EvalCodeWithName
[2m[36m(pid=58311)[0m     @     0x55b96d235a20 method_vectorcall
[2m[36m(pid=58311)[0m     @     0x55b96d1a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x55b96d234baf _PyEval_EvalCodeWithName
[2m[36m(pid=58311)[0m     @     0x55b96d235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58311)[0m     @     0x55b96d1aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x55b96d234baf _PyEval_EvalCodeWithName
[2m[36m(pid=58311)[0m     @     0x55b96d235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58311)[0m     @     0x55b96d1aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x55b96d234baf _PyEval_EvalCodeWithName
[2m[36m(pid=58311)[0m     @     0x55b96d235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58311)[0m     @     0x55b96d1aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58311)[0m     @     0x55b96d234baf _PyEval_EvalCodeWithName
[2m[36m(pid=58311)[0m     @     0x55b96d235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58311)[0m     @     0x55b96d1aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x7efd661654f5 at::Tensor::copy_()
[2m[36m(pid=58318)[0m     @     0x7efd6c21079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58318)[0m     @     0x563d8dc84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58318)[0m     @     0x563d8dbdfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x563d8dc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58318)[0m     @     0x563d8dc6ba20 method_vectorcall
[2m[36m(pid=58318)[0m     @     0x563d8dbdfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x563d8dc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58318)[0m     @     0x563d8dc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58318)[0m     @     0x563d8dbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x563d8dc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58318)[0m     @     0x563d8dc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58318)[0m     @     0x563d8dbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x563d8dc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58318)[0m     @     0x563d8dc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58318)[0m     @     0x563d8dbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58318)[0m     @     0x563d8dc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58318)[0m     @     0x563d8dc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58318)[0m     @     0x563d8dbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x7f8ce21654f5 at::Tensor::copy_()
[2m[36m(pid=58354)[0m     @     0x7f8ce821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58354)[0m     @     0x556c16a94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58354)[0m     @     0x556c169efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x556c16a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58354)[0m     @     0x556c16a7ba20 method_vectorcall
[2m[36m(pid=58354)[0m     @     0x556c169efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x556c16a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58354)[0m     @     0x556c16a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58354)[0m     @     0x556c169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x556c16a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58354)[0m     @     0x556c16a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58354)[0m     @     0x556c169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x556c16a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58354)[0m     @     0x556c16a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58354)[0m     @     0x556c169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58354)[0m     @     0x556c16a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58354)[0m     @     0x556c16a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58354)[0m     @     0x556c169f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x7eda37bdd4f5 at::Tensor::copy_()
[2m[36m(pid=58366)[0m     @     0x7eda3dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58366)[0m     @     0x562c6ded8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58366)[0m     @     0x562c6de33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x562c6debebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58366)[0m     @     0x562c6debfa20 method_vectorcall
[2m[36m(pid=58366)[0m     @     0x562c6de33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x562c6debebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58366)[0m     @     0x562c6debf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58366)[0m     @     0x562c6de34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x562c6debebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58366)[0m     @     0x562c6debf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58366)[0m     @     0x562c6de34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x562c6debebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58366)[0m     @     0x562c6debf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58366)[0m     @     0x562c6de34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58366)[0m     @     0x562c6debebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58366)[0m     @     0x562c6debf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58366)[0m     @     0x562c6de34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x7f0f090a44f5 at::Tensor::copy_()
[2m[36m(pid=58247)[0m     @     0x7f0f0f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58247)[0m     @     0x55bbad113fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58247)[0m     @     0x55bbad06eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x55bbad0f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58247)[0m     @     0x55bbad0faa20 method_vectorcall
[2m[36m(pid=58247)[0m     @     0x55bbad06ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x55bbad0f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58247)[0m     @     0x55bbad0fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58247)[0m     @     0x55bbad06f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x55bbad0f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58247)[0m     @     0x55bbad0fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58247)[0m     @     0x55bbad06f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x55bbad0f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58247)[0m     @     0x55bbad0fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58247)[0m     @     0x55bbad06f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58247)[0m     @     0x55bbad0f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58247)[0m     @     0x55bbad0fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58247)[0m     @     0x55bbad06f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x7f7556b954f5 at::Tensor::copy_()
[2m[36m(pid=58369)[0m     @     0x7f755cc4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58369)[0m     @     0x558468e74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58369)[0m     @     0x558468dcfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x558468e5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58369)[0m     @     0x558468e5ba20 method_vectorcall
[2m[36m(pid=58369)[0m     @     0x558468dcfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x558468e5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58369)[0m     @     0x558468e5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58369)[0m     @     0x558468dd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x558468e5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58369)[0m     @     0x558468e5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58369)[0m     @     0x558468dd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x558468e5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58369)[0m     @     0x558468e5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58369)[0m     @     0x558468dd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58369)[0m     @     0x558468e5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58369)[0m     @     0x558468e5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58369)[0m     @     0x558468dd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x7efd1bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=58280)[0m     @     0x7efd1c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58280)[0m     @     0x7efd1c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58280)[0m     @     0x7efd1b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58280)[0m     @     0x7efd1b8b7388 at::native::copy_impl()
[2m[36m(pid=58257)[0m     @     0x7f289f1ac5a4 at::native::copy_()
[2m[36m(pid=58257)[0m     @     0x7f289f8974f5 at::Tensor::copy_()
[2m[36m(pid=58257)[0m     @     0x7f28a1d6a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58267)[0m     @     0x7fa23febc388 at::native::copy_impl()
[2m[36m(pid=58267)[0m     @     0x7fa23febe5a4 at::native::copy_()
[2m[36m(pid=58267)[0m     @     0x7fa2405a94f5 at::Tensor::copy_()
[2m[36m(pid=58267)[0m     @     0x7fa242a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58338)[0m     @     0x7efcbb023c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58338)[0m     @     0x7efcba4c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58338)[0m     @     0x7efcba4c3388 at::native::copy_impl()
[2m[36m(pid=58338)[0m     @     0x7efcba4c55a4 at::native::copy_()
[2m[36m(pid=58259)[0m     @     0x7ee9158c1d91 at::TensorIterator::for_each()
[2m[36m(pid=58259)[0m     @     0x7ee9161a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58259)[0m     @     0x7ee9161c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58259)[0m     @     0x7ee915669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58259)[0m     @     0x7ee915667388 at::native::copy_impl()
[2m[36m(pid=58310)[0m     @     0x7f69982efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58310)[0m     @     0x7f6998312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58310)[0m     @     0x7f69977b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58310)[0m     @     0x7f69977b2388 at::native::copy_impl()
[2m[36m(pid=58361)[0m     @     0x7f02380a5388 at::native::copy_impl()
[2m[36m(pid=58361)[0m     @     0x7f02380a75a4 at::native::copy_()
[2m[36m(pid=58361)[0m     @     0x7f02387924f5 at::Tensor::copy_()
[2m[36m(pid=58347)[0m     @     0x7fbfaed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58347)[0m     @     0x7fbfaed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58347)[0m     @     0x7fbfae1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58347)[0m     @     0x7fbfae1d0388 at::native::copy_impl()
[2m[36m(pid=58252)[0m     @     0x7efacc78da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58252)[0m     @     0x7efacc78b388 at::native::copy_impl()
[2m[36m(pid=58252)[0m     @     0x7efacc78d5a4 at::native::copy_()
[2m[36m(pid=58252)[0m     @     0x7efacce784f5 at::Tensor::copy_()
[2m[36m(pid=58304)[0m     @     0x7f58eaf9f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58304)[0m     @     0x7f58eaf9fad3 at::TensorIterator::for_each()
[2m[36m(pid=58304)[0m     @     0x7f58eaf9fd91 at::TensorIterator::for_each()
[2m[36m(pid=58266)[0m     @     0x7fcc9943d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=58266)[0m     @     0x7fcc994408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58273)[0m     @     0x7f4fd3bffd91 at::TensorIterator::for_each()
[2m[36m(pid=58273)[0m     @     0x7f4fd44e2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58273)[0m     @     0x7f4fd4505c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58273)[0m     @     0x7f4fd39a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58273)[0m     @     0x7f4fd39a5388 at::native::copy_impl()
[2m[36m(pid=58317)[0m     @     0x7ed7a85d2d91 at::TensorIterator::for_each()
[2m[36m(pid=58317)[0m     @     0x7ed7a8eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58317)[0m     @     0x7ed7a8ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58317)[0m     @     0x7ed7a837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58317)[0m     @     0x7ed7a8378388 at::native::copy_impl()
[2m[36m(pid=58357)[0m     @     0x7f5bb19cf5a4 at::native::copy_()
[2m[36m(pid=58357)[0m     @     0x7f5bb20ba4f5 at::Tensor::copy_()
[2m[36m(pid=58357)[0m     @     0x7f5bb458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58357)[0m     @     0x7f5bb20ba4f5 at::Tensor::copy_()
[2m[36m(pid=58357)[0m     @     0x7f5bb816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58357)[0m     @     0x564aa2d12fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58357)[0m     @     0x564aa2c6db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58357)[0m     @     0x564aa2cf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=58357)[0m     @     0x564aa2cf9a20 method_vectorcall
[2m[36m(pid=58357)[0m     @     0x564aa2c6dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58357)[0m     @     0x564aa2cf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=58357)[0m     @     0x564aa2cf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58357)[0m     @     0x564aa2c6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58357)[0m     @     0x564aa2cf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=58357)[0m     @     0x564aa2cf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58357)[0m     @     0x564aa2c6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x7f48dcbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58324)[0m     @     0x7f48dcc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58324)[0m     @     0x7f48dc0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58324)[0m     @     0x7f48dc0a5388 at::native::copy_impl()
[2m[36m(pid=58377)[0m     @     0x7f2104e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58285)[0m     @     0x7ed144c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58285)[0m     @     0x7ed144c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=58285)[0m     @     0x7ed144c11d91 at::TensorIterator::for_each()
[2m[36m(pid=58285)[0m     @     0x7ed1454f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58285)[0m     @     0x7ed145517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58371)[0m     @     0x7f3dc834b388 at::native::copy_impl()
[2m[36m(pid=58371)[0m     @     0x7f3dc834d5a4 at::native::copy_()
[2m[36m(pid=58371)[0m     @     0x7f3dc8a384f5 at::Tensor::copy_()
[2m[36m(pid=58371)[0m     @     0x7f3dcaf0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58323)[0m     @     0x7f9397f615a4 at::native::copy_()
[2m[36m(pid=58323)[0m     @     0x7f939864c4f5 at::Tensor::copy_()
[2m[36m(pid=58323)[0m     @     0x7f939ab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58323)[0m     @     0x7f939864c4f5 at::Tensor::copy_()
[2m[36m(pid=58305)[0m     @     0x7efb4d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58305)[0m     @     0x7efb4d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58305)[0m     @     0x7efb4cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58305)[0m     @     0x7efb4cccd388 at::native::copy_impl()
[2m[36m(pid=58305)[0m     @     0x7efb4cccf5a4 at::native::copy_()
[2m[36m(pid=58251)[0m     @     0x7f599e9844f5 at::Tensor::copy_()
[2m[36m(pid=58251)[0m     @     0x7f59a0e578de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58251)[0m     @     0x7f599e9844f5 at::Tensor::copy_()
[2m[36m(pid=58251)[0m     @     0x7f59a4a2f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58251)[0m     @     0x55b77b264fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58251)[0m     @     0x55b77b1bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58251)[0m     @     0x55b77b24abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58251)[0m     @     0x55b77b24ba20 method_vectorcall
[2m[36m(pid=58251)[0m     @     0x55b77b1bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58251)[0m     @     0x55b77b24abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58251)[0m     @     0x55b77b24b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58251)[0m     @     0x55b77b1c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58251)[0m     @     0x55b77b24abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58251)[0m     @     0x55b77b24b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58251)[0m     @     0x55b77b1c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58251)[0m     @     0x55b77b24abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58251)[0m     @     0x55b77b24b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58251)[0m     @     0x55b77b1c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58251)[0m     @     0x55b77b24abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58251)[0m     @     0x55b77b24b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58251)[0m     @     0x55b77b1c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x7ed5ab9db388 at::native::copy_impl()
[2m[36m(pid=58256)[0m     @     0x7ed5ab9dd5a4 at::native::copy_()
[2m[36m(pid=58256)[0m     @     0x7ed5ac0c84f5 at::Tensor::copy_()
[2m[36m(pid=58327)[0m     @     0x7f0e525eb5a4 at::native::copy_()
[2m[36m(pid=58327)[0m     @     0x7f0e52cd64f5 at::Tensor::copy_()
[2m[36m(pid=58327)[0m     @     0x7f0e551a98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58327)[0m     @     0x7f0e52cd64f5 at::Tensor::copy_()
[2m[36m(pid=58327)[0m     @     0x7f0e58d8179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58327)[0m     @     0x5639c7081fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58327)[0m     @     0x5639c6fdcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58327)[0m     @     0x5639c7067baf _PyEval_EvalCodeWithName
[2m[36m(pid=58327)[0m     @     0x5639c7068a20 method_vectorcall
[2m[36m(pid=58327)[0m     @     0x5639c6fdcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58327)[0m     @     0x5639c7067baf _PyEval_EvalCodeWithName
[2m[36m(pid=58327)[0m     @     0x5639c7068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58327)[0m     @     0x5639c6fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x7f67626ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58301)[0m     @     0x7f67626fd388 at::native::copy_impl()
[2m[36m(pid=58301)[0m     @     0x7f67626ff5a4 at::native::copy_()
[2m[36m(pid=58301)[0m     @     0x7f6762dea4f5 at::Tensor::copy_()
[2m[36m(pid=58301)[0m     @     0x7f67652bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58356)[0m     @     0x7f3173b11d91 at::TensorIterator::for_each()
[2m[36m(pid=58356)[0m     @     0x7f31743f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58356)[0m     @     0x7f3174417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58356)[0m     @     0x7f31738b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58356)[0m     @     0x7f31738b7388 at::native::copy_impl()
[2m[36m(pid=58356)[0m     @     0x7f31738b95a4 at::native::copy_()
[2m[36m(pid=58312)[0m     @     0x7f3014ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58312)[0m     @     0x7f3014ede388 at::native::copy_impl()
[2m[36m(pid=58312)[0m     @     0x7f3014ee05a4 at::native::copy_()
[2m[36m(pid=58312)[0m     @     0x7f30155cb4f5 at::Tensor::copy_()
[2m[36m(pid=58307)[0m     @     0x7f32d524da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58307)[0m     @     0x7f32d524b388 at::native::copy_impl()
[2m[36m(pid=58307)[0m     @     0x7f32d524d5a4 at::native::copy_()
[2m[36m(pid=58307)[0m     @     0x7f32d59384f5 at::Tensor::copy_()
[2m[36m(pid=58307)[0m     @     0x7f32d7e0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58253)[0m     @     0x7f46f92f8388 at::native::copy_impl()
[2m[36m(pid=58253)[0m     @     0x7f46f92fa5a4 at::native::copy_()
[2m[36m(pid=58253)[0m     @     0x7f46f99e54f5 at::Tensor::copy_()
[2m[36m(pid=58253)[0m     @     0x7f46fbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58353)[0m     @     0x7f2fd25c1d91 at::TensorIterator::for_each()
[2m[36m(pid=58353)[0m     @     0x7f2fd2ea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58353)[0m     @     0x7f2fd2ec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58353)[0m     @     0x7f2fd2369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58353)[0m     @     0x7f2fd2367388 at::native::copy_impl()
[2m[36m(pid=58353)[0m     @     0x7f2fd23695a4 at::native::copy_()
[2m[36m(pid=58326)[0m     @     0x7f9253a99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58326)[0m     @     0x7f9253abcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58326)[0m     @     0x7f9252f5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58326)[0m     @     0x7f9252f5c388 at::native::copy_impl()
[2m[36m(pid=58326)[0m     @     0x7f9252f5e5a4 at::native::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=58319)[0m     @     0x7f0ff5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=58278)[0m     @     0x7f65a60a2388 at::native::copy_impl()
[2m[36m(pid=58278)[0m     @     0x7f65a60a45a4 at::native::copy_()
[2m[36m(pid=58278)[0m     @     0x7f65a678f4f5 at::Tensor::copy_()
[2m[36m(pid=58278)[0m     @     0x7f65a8c628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58283)[0m     @     0x7ed4b89795a4 at::native::copy_()
[2m[36m(pid=58283)[0m     @     0x7ed4b90644f5 at::Tensor::copy_()
[2m[36m(pid=58283)[0m     @     0x7ed4bb5378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58283)[0m     @     0x7ed4b90644f5 at::Tensor::copy_()
[2m[36m(pid=58283)[0m     @     0x7ed4bf10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58283)[0m     @     0x556584248fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58283)[0m     @     0x5565841a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x55658422ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58283)[0m     @     0x55658422fa20 method_vectorcall
[2m[36m(pid=58283)[0m     @     0x5565841a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x55658422ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58283)[0m     @     0x55658422f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58283)[0m     @     0x5565841a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x55658422ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58283)[0m     @     0x55658422f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58283)[0m     @     0x5565841a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x55658422ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58283)[0m     @     0x55658422f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58283)[0m     @     0x5565841a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x55658422ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58283)[0m     @     0x55658422f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58275)[0m     @     0x7fb118e0b4f5 at::Tensor::copy_()
[2m[36m(pid=58275)[0m     @     0x7fb11eeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58275)[0m     @     0x55ab17dfffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58275)[0m     @     0x55ab17d5ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58275)[0m     @     0x55ab17de5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58275)[0m     @     0x55ab17de6a20 method_vectorcall
[2m[36m(pid=58275)[0m     @     0x55ab17d5abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58275)[0m     @     0x55ab17de5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58275)[0m     @     0x55ab17de6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58275)[0m     @     0x55ab17d5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58275)[0m     @     0x55ab17de5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58275)[0m     @     0x55ab17de6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58275)[0m     @     0x55ab17d5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58275)[0m     @     0x55ab17de5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58275)[0m     @     0x55ab17de6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58275)[0m     @     0x55ab17d5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58275)[0m     @     0x55ab17de5baf _PyEval_EvalCodeWithName
[2m[36m(pid=58275)[0m     @     0x55ab17de6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58275)[0m     @     0x55ab17d5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x7efcdb4f0388 at::native::copy_impl()
[2m[36m(pid=58263)[0m     @     0x7efcdb4f25a4 at::native::copy_()
[2m[36m(pid=58263)[0m     @     0x7efcdbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=58263)[0m     @     0x7efcde0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58262)[0m     @     0x7ed3237c7388 at::native::copy_impl()
[2m[36m(pid=58262)[0m     @     0x7ed3237c95a4 at::native::copy_()
[2m[36m(pid=58262)[0m     @     0x7ed323eb44f5 at::Tensor::copy_()
[2m[36m(pid=58262)[0m     @     0x7ed3263878de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58268)[0m     @     0x7f90aa1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58268)[0m     @     0x7f90aa1d0388 at::native::copy_impl()
[2m[36m(pid=58268)[0m     @     0x7f90aa1d25a4 at::native::copy_()
[2m[36m(pid=58268)[0m     @     0x7f90aa8bd4f5 at::Tensor::copy_()
[2m[36m(pid=58254)[0m     @     0x7fc46d83bd91 at::TensorIterator::for_each()
[2m[36m(pid=58254)[0m     @     0x7fc46e11eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58254)[0m     @     0x7fc46e141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58254)[0m     @     0x7fc46d5e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58254)[0m     @     0x7fc46d5e1388 at::native::copy_impl()
[2m[36m(pid=58254)[0m     @     0x7fc46d5e35a4 at::native::copy_()
[2m[36m(pid=58248)[0m     @     0x7f73ee9f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58248)[0m     @     0x7f73ec51e4f5 at::Tensor::copy_()
[2m[36m(pid=58248)[0m     @     0x7f73f25c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58248)[0m     @     0x56535cf5efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58248)[0m     @     0x56535ceb9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58248)[0m     @     0x56535cf44baf _PyEval_EvalCodeWithName
[2m[36m(pid=58248)[0m     @     0x56535cf45a20 method_vectorcall
[2m[36m(pid=58248)[0m     @     0x56535ceb9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58248)[0m     @     0x56535cf44baf _PyEval_EvalCodeWithName
[2m[36m(pid=58248)[0m     @     0x56535cf45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58248)[0m     @     0x56535ceba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58248)[0m     @     0x56535cf44baf _PyEval_EvalCodeWithName
[2m[36m(pid=58248)[0m     @     0x56535cf45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58248)[0m     @     0x56535ceba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58248)[0m     @     0x56535cf44baf _PyEval_EvalCodeWithName
[2m[36m(pid=58248)[0m     @     0x56535cf45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58248)[0m     @     0x56535ceba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58248)[0m     @     0x56535cf44baf _PyEval_EvalCodeWithName
[2m[36m(pid=58248)[0m     @     0x56535cf45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58248)[0m     @     0x56535ceba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x7fba1adea4f5 at::Tensor::copy_()
[2m[36m(pid=58271)[0m     @     0x7fba20e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58271)[0m     @     0x5635cc885fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58271)[0m     @     0x5635cc7e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x5635cc86bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58271)[0m     @     0x5635cc86ca20 method_vectorcall
[2m[36m(pid=58271)[0m     @     0x5635cc7e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x5635cc86bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58271)[0m     @     0x5635cc86c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58271)[0m     @     0x5635cc7e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x5635cc86bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58271)[0m     @     0x5635cc86c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58271)[0m     @     0x5635cc7e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x5635cc86bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58271)[0m     @     0x5635cc86c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58271)[0m     @     0x5635cc7e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58271)[0m     @     0x5635cc86bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58271)[0m     @     0x5635cc86c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58271)[0m     @     0x5635cc7e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x7eda32ffb4f5 at::Tensor::copy_()
[2m[36m(pid=58322)[0m     @     0x7eda354ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58322)[0m     @     0x7eda32ffb4f5 at::Tensor::copy_()
[2m[36m(pid=58322)[0m     @     0x7eda390a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58322)[0m     @     0x555c097d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58322)[0m     @     0x555c09732b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x555c097bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58322)[0m     @     0x555c097bea20 method_vectorcall
[2m[36m(pid=58322)[0m     @     0x555c09732bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x555c097bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58322)[0m     @     0x555c097be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58322)[0m     @     0x555c09733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x555c097bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58322)[0m     @     0x555c097be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58322)[0m     @     0x555c09733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x555c097bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58322)[0m     @     0x555c097be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58322)[0m     @     0x555c09733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58322)[0m     @     0x555c097bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58322)[0m     @     0x555c097be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58261)[0m     @     0x7f19c82ff4f5 at::Tensor::copy_()
[2m[36m(pid=58261)[0m     @     0x7f19ca7d28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58261)[0m     @     0x7f19c82ff4f5 at::Tensor::copy_()
[2m[36m(pid=58261)[0m     @     0x7f19ce1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58261)[0m     @     0x55fa3fa21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58261)[0m     @     0x55fa3f97cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58261)[0m     @     0x55fa3fa07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58261)[0m     @     0x55fa3fa08a20 method_vectorcall
[2m[36m(pid=58261)[0m     @     0x55fa3f97cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58261)[0m     @     0x55fa3fa07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58261)[0m     @     0x55fa3fa08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58261)[0m     @     0x55fa3f97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58261)[0m     @     0x55fa3fa07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58261)[0m     @     0x55fa3fa08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58261)[0m     @     0x55fa3f97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x7f904f6b64f5 at::Tensor::copy_()
[2m[36m(pid=58315)[0m     @     0x7f9051b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58315)[0m     @     0x7f904f6b64f5 at::Tensor::copy_()
[2m[36m(pid=58315)[0m     @     0x7f905576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58315)[0m     @     0x558d385b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58315)[0m     @     0x558d38511b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x558d3859cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58315)[0m     @     0x558d3859da20 method_vectorcall
[2m[36m(pid=58315)[0m     @     0x558d38511bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x558d3859cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58315)[0m     @     0x558d3859d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58315)[0m     @     0x558d38512689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x558d3859cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58315)[0m     @     0x558d3859d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58315)[0m     @     0x558d38512689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x558d3859cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58315)[0m     @     0x558d3859d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58315)[0m     @     0x558d38512689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58315)[0m     @     0x558d3859cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58315)[0m     @     0x558d3859d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58315)[0m     @     0x558d38512689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x7f60786108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58250)[0m     @     0x7f607613d4f5 at::Tensor::copy_()
[2m[36m(pid=58250)[0m     @     0x7f607c1e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58250)[0m     @     0x564751e36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58250)[0m     @     0x564751d91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x564751e1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58250)[0m     @     0x564751e1da20 method_vectorcall
[2m[36m(pid=58250)[0m     @     0x564751d91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x564751e1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58250)[0m     @     0x564751e1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58250)[0m     @     0x564751d92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x564751e1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58250)[0m     @     0x564751e1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58250)[0m     @     0x564751d92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x564751e1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58250)[0m     @     0x564751e1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58250)[0m     @     0x564751d92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58250)[0m     @     0x564751e1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58250)[0m     @     0x564751e1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58250)[0m     @     0x564751d92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x7fac7b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58246)[0m     @     0x7fac792b54f5 at::Tensor::copy_()
[2m[36m(pid=58246)[0m     @     0x7fac7f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58246)[0m     @     0x55978ac74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58246)[0m     @     0x55978abcfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x55978ac5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58246)[0m     @     0x55978ac5ba20 method_vectorcall
[2m[36m(pid=58246)[0m     @     0x55978abcfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x55978ac5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58246)[0m     @     0x55978ac5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58246)[0m     @     0x55978abd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x55978ac5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58246)[0m     @     0x55978ac5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58246)[0m     @     0x55978abd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x55978ac5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58246)[0m     @     0x55978ac5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58246)[0m     @     0x55978abd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58246)[0m     @     0x55978ac5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58246)[0m     @     0x55978ac5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58246)[0m     @     0x55978abd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x7ef6ba9848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58245)[0m     @     0x7ef6b84b14f5 at::Tensor::copy_()
[2m[36m(pid=58245)[0m     @     0x7ef6be55c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58245)[0m     @     0x560b5e9f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58245)[0m     @     0x560b5e953b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x560b5e9debaf _PyEval_EvalCodeWithName
[2m[36m(pid=58245)[0m     @     0x560b5e9dfa20 method_vectorcall
[2m[36m(pid=58245)[0m     @     0x560b5e953bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x560b5e9debaf _PyEval_EvalCodeWithName
[2m[36m(pid=58245)[0m     @     0x560b5e9df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58245)[0m     @     0x560b5e954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x560b5e9debaf _PyEval_EvalCodeWithName
[2m[36m(pid=58245)[0m     @     0x560b5e9df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58245)[0m     @     0x560b5e954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x560b5e9debaf _PyEval_EvalCodeWithName
[2m[36m(pid=58245)[0m     @     0x560b5e9df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58245)[0m     @     0x560b5e954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58245)[0m     @     0x560b5e9debaf _PyEval_EvalCodeWithName
[2m[36m(pid=58245)[0m     @     0x560b5e9df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58245)[0m     @     0x560b5e954689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x7efd1b8b95a4 at::native::copy_()
[2m[36m(pid=58280)[0m     @     0x7efd1bfa44f5 at::Tensor::copy_()
[2m[36m(pid=58280)[0m     @     0x7efd1e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58280)[0m     @     0x7efd1bfa44f5 at::Tensor::copy_()
[2m[36m(pid=58257)[0m     @     0x7f289f8974f5 at::Tensor::copy_()
[2m[36m(pid=58257)[0m     @     0x7f28c88b279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58257)[0m     @     0x559ccfc80fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58257)[0m     @     0x559ccfbdbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58257)[0m     @     0x559ccfc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=58257)[0m     @     0x559ccfc67a20 method_vectorcall
[2m[36m(pid=58257)[0m     @     0x559ccfbdbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58257)[0m     @     0x559ccfc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=58257)[0m     @     0x559ccfc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58257)[0m     @     0x559ccfbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58257)[0m     @     0x559ccfc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=58257)[0m     @     0x559ccfc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58257)[0m     @     0x559ccfbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58257)[0m     @     0x559ccfc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=58257)[0m     @     0x559ccfc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58257)[0m     @     0x559ccfbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58257)[0m     @     0x559ccfc66baf _PyEval_EvalCodeWithName
[2m[36m(pid=58257)[0m     @     0x559ccfc67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58257)[0m     @     0x559ccfbdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x7fa2405a94f5 at::Tensor::copy_()
[2m[36m(pid=58267)[0m     @     0x7fa24665479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58267)[0m     @     0x55b84c8b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58267)[0m     @     0x55b84c813b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x55b84c89ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58267)[0m     @     0x55b84c89fa20 method_vectorcall
[2m[36m(pid=58267)[0m     @     0x55b84c813bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x55b84c89ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58267)[0m     @     0x55b84c89f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58267)[0m     @     0x55b84c814689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x55b84c89ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58267)[0m     @     0x55b84c89f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58267)[0m     @     0x55b84c814689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x55b84c89ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58267)[0m     @     0x55b84c89f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58267)[0m     @     0x55b84c814689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58267)[0m     @     0x55b84c89ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58267)[0m     @     0x55b84c89f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58267)[0m     @     0x55b84c814689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x7efcbabb04f5 at::Tensor::copy_()
[2m[36m(pid=58338)[0m     @     0x7efcbd0838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58338)[0m     @     0x7efcbabb04f5 at::Tensor::copy_()
[2m[36m(pid=58338)[0m     @     0x7efcc0c5b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58338)[0m     @     0x55e2e5f16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58338)[0m     @     0x55e2e5e71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x55e2e5efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58338)[0m     @     0x55e2e5efda20 method_vectorcall
[2m[36m(pid=58338)[0m     @     0x55e2e5e71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x55e2e5efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58338)[0m     @     0x55e2e5efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58338)[0m     @     0x55e2e5e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x55e2e5efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58338)[0m     @     0x55e2e5efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58338)[0m     @     0x55e2e5e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x55e2e5efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58338)[0m     @     0x55e2e5efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58338)[0m     @     0x55e2e5e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58338)[0m     @     0x55e2e5efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58338)[0m     @     0x55e2e5efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58338)[0m     @     0x55e2e5e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x7ee9156695a4 at::native::copy_()
[2m[36m(pid=58259)[0m     @     0x7ee915d544f5 at::Tensor::copy_()
[2m[36m(pid=58310)[0m     @     0x7f69977b45a4 at::native::copy_()
[2m[36m(pid=58310)[0m     @     0x7f6997e9f4f5 at::Tensor::copy_()
[2m[36m(pid=58310)[0m     @     0x7f699a3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58310)[0m     @     0x7f6997e9f4f5 at::Tensor::copy_()
[2m[36m(pid=58310)[0m     @     0x7f699df4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58310)[0m     @     0x55accbb66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58310)[0m     @     0x55accbac1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58310)[0m     @     0x55accbb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58310)[0m     @     0x55accbb4da20 method_vectorcall
[2m[36m(pid=58310)[0m     @     0x55accbac1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58310)[0m     @     0x55accbb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58310)[0m     @     0x55accbb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58310)[0m     @     0x55accbac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x7f023ac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58361)[0m     @     0x7f02387924f5 at::Tensor::copy_()
[2m[36m(pid=58361)[0m     @     0x7f023e83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58361)[0m     @     0x56287b66afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58361)[0m     @     0x56287b5c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x56287b650baf _PyEval_EvalCodeWithName
[2m[36m(pid=58361)[0m     @     0x56287b651a20 method_vectorcall
[2m[36m(pid=58361)[0m     @     0x56287b5c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x56287b650baf _PyEval_EvalCodeWithName
[2m[36m(pid=58361)[0m     @     0x56287b651643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58361)[0m     @     0x56287b5c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x56287b650baf _PyEval_EvalCodeWithName
[2m[36m(pid=58361)[0m     @     0x56287b651643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58361)[0m     @     0x56287b5c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x56287b650baf _PyEval_EvalCodeWithName
[2m[36m(pid=58361)[0m     @     0x56287b651643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58361)[0m     @     0x56287b5c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58361)[0m     @     0x56287b650baf _PyEval_EvalCodeWithName
[2m[36m(pid=58361)[0m     @     0x56287b651643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58361)[0m     @     0x56287b5c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x7fbfae1d25a4 at::native::copy_()
[2m[36m(pid=58347)[0m     @     0x7fbfae8bd4f5 at::Tensor::copy_()
[2m[36m(pid=58347)[0m     @     0x7fbfb0d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58347)[0m     @     0x7fbfae8bd4f5 at::Tensor::copy_()
[2m[36m(pid=58347)[0m     @     0x7fbfb496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58347)[0m     @     0x55f87984cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58347)[0m     @     0x55f8797a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879832baf _PyEval_EvalCodeWithName
[2m[36m(pid=58347)[0m     @     0x55f879833a20 method_vectorcall
[2m[36m(pid=58347)[0m     @     0x55f8797a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879832baf _PyEval_EvalCodeWithName
[2m[36m(pid=58347)[0m     @     0x55f879833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58347)[0m     @     0x55f8797a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879832baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x7efacf34b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58252)[0m     @     0x7efacce784f5 at::Tensor::copy_()
[2m[36m(pid=58252)[0m     @     0x7efad2f2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58252)[0m     @     0x558ac32e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58252)[0m     @     0x558ac323eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58252)[0m     @     0x558ac32c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x558ac32caa20 method_vectorcall
[2m[36m(pid=58252)[0m     @     0x558ac323ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58252)[0m     @     0x558ac32c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x558ac32ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58252)[0m     @     0x558ac323f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58252)[0m     @     0x558ac32c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x558ac32ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58252)[0m     @     0x558ac323f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58252)[0m     @     0x558ac32c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x558ac32ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58252)[0m     @     0x558ac323f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58252)[0m     @     0x558ac32c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=58252)[0m     @     0x558ac32ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58252)[0m     @     0x558ac323f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x7f58eb882b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58304)[0m     @     0x7f58eb8a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58304)[0m     @     0x7f58ead47a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58304)[0m     @     0x7f58ead45388 at::native::copy_impl()
[2m[36m(pid=58304)[0m     @     0x7f58ead475a4 at::native::copy_()
[2m[36m(pid=58266)[0m     @     0x7fcc99440ad3 at::TensorIterator::for_each()
[2m[36m(pid=58273)[0m     @     0x7f4fd39a75a4 at::native::copy_()
[2m[36m(pid=58273)[0m     @     0x7f4fd40924f5 at::Tensor::copy_()
[2m[36m(pid=58273)[0m     @     0x7f4fd65658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58273)[0m     @     0x7f4fd40924f5 at::Tensor::copy_()
[2m[36m(pid=58317)[0m     @     0x7ed7a837a5a4 at::native::copy_()
[2m[36m(pid=58317)[0m     @     0x7ed7a8a654f5 at::Tensor::copy_()
[2m[36m(pid=58317)[0m     @     0x7ed7aaf388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58357)[0m     @     0x564aa2cf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=58357)[0m     @     0x564aa2cf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58357)[0m     @     0x564aa2c6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58357)[0m     @     0x564aa2cf8baf _PyEval_EvalCodeWithName
[2m[36m(pid=58357)[0m     @     0x564aa2cf9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58357)[0m     @     0x564aa2c6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x7f48dc0a75a4 at::native::copy_()
[2m[36m(pid=58377)[0m     @     0x7f2104e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=58377)[0m     @     0x7f2104e22d91 at::TensorIterator::for_each()
[2m[36m(pid=58377)[0m     @     0x7f2105705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58371)[0m     @     0x7f3dc8a384f5 at::Tensor::copy_()
[2m[36m(pid=58371)[0m     @     0x7f3dceae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58371)[0m     @     0x561e43fdbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58371)[0m     @     0x561e43f36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58371)[0m     @     0x561e43fc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=58371)[0m     @     0x561e43fc2a20 method_vectorcall
[2m[36m(pid=58371)[0m     @     0x561e43f36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58371)[0m     @     0x561e43fc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=58371)[0m     @     0x561e43fc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58371)[0m     @     0x561e43f37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58371)[0m     @     0x561e43fc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=58371)[0m     @     0x561e43fc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58371)[0m     @     0x561e43f37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58371)[0m     @     0x561e43fc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=58371)[0m     @     0x561e43fc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58371)[0m     @     0x561e43f37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58371)[0m     @     0x561e43fc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=58371)[0m     @     0x561e43fc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58371)[0m     @     0x561e43f37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x7f939e6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58323)[0m     @     0x556ee3338fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58323)[0m     @     0x556ee3293b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x556ee331ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58323)[0m     @     0x556ee331fa20 method_vectorcall
[2m[36m(pid=58323)[0m     @     0x556ee3293bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x556ee331ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58323)[0m     @     0x556ee331f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58323)[0m     @     0x556ee3294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x556ee331ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58323)[0m     @     0x556ee331f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58323)[0m     @     0x556ee3294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x556ee331ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58323)[0m     @     0x556ee331f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58323)[0m     @     0x556ee3294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58323)[0m     @     0x556ee331ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=58323)[0m     @     0x556ee331f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58323)[0m     @     0x556ee3294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58305)[0m     @     0x7efb4d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=58305)[0m     @     0x7efb4f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58305)[0m     @     0x7efb4d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=58305)[0m     @     0x7efb5346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58305)[0m     @     0x5582194b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58305)[0m     @     0x558219410b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58305)[0m     @     0x55821949bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58305)[0m     @     0x55821949ca20 method_vectorcall
[2m[36m(pid=58305)[0m     @     0x558219410bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x7ed5ae59b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58256)[0m     @     0x7ed5ac0c84f5 at::Tensor::copy_()
[2m[36m(pid=58256)[0m     @     0x7ed5b217379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58256)[0m     @     0x559f6ddd7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58256)[0m     @     0x559f6dd32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x559f6ddbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58256)[0m     @     0x559f6ddbea20 method_vectorcall
[2m[36m(pid=58256)[0m     @     0x559f6dd32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x559f6ddbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58256)[0m     @     0x559f6ddbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58256)[0m     @     0x559f6dd33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x559f6ddbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58256)[0m     @     0x559f6ddbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58256)[0m     @     0x559f6dd33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x559f6ddbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58256)[0m     @     0x559f6ddbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58256)[0m     @     0x559f6dd33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58256)[0m     @     0x559f6ddbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58256)[0m     @     0x559f6ddbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58256)[0m     @     0x559f6dd33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58327)[0m     @     0x5639c7067baf _PyEval_EvalCodeWithName
[2m[36m(pid=58327)[0m     @     0x5639c7068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58327)[0m     @     0x5639c6fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58327)[0m     @     0x5639c7067baf _PyEval_EvalCodeWithName
[2m[36m(pid=58327)[0m     @     0x5639c7068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58327)[0m     @     0x5639c6fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58327)[0m     @     0x5639c7067baf _PyEval_EvalCodeWithName
[2m[36m(pid=58327)[0m     @     0x5639c7068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58327)[0m     @     0x5639c6fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x7f6762dea4f5 at::Tensor::copy_()
[2m[36m(pid=58301)[0m     @     0x7f6768e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58301)[0m     @     0x55ba8c7f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58301)[0m     @     0x55ba8c74bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x55ba8c7d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=58301)[0m     @     0x55ba8c7d7a20 method_vectorcall
[2m[36m(pid=58301)[0m     @     0x55ba8c74bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x55ba8c7d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=58301)[0m     @     0x55ba8c7d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58301)[0m     @     0x55ba8c74c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x55ba8c7d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=58301)[0m     @     0x55ba8c7d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58301)[0m     @     0x55ba8c74c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x55ba8c7d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=58301)[0m     @     0x55ba8c7d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58301)[0m     @     0x55ba8c74c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58301)[0m     @     0x55ba8c7d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=58301)[0m     @     0x55ba8c7d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58301)[0m     @     0x55ba8c74c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x7f3173fa44f5 at::Tensor::copy_()
[2m[36m(pid=58356)[0m     @     0x7f31764778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58356)[0m     @     0x7f3173fa44f5 at::Tensor::copy_()
[2m[36m(pid=58312)[0m     @     0x7f3017a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58307)[0m     @     0x7f32d59384f5 at::Tensor::copy_()
[2m[36m(pid=58307)[0m     @     0x7f32db9e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58307)[0m     @     0x55eb40f27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58307)[0m     @     0x55eb40e82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58307)[0m     @     0x55eb40f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58307)[0m     @     0x55eb40f0ea20 method_vectorcall
[2m[36m(pid=58307)[0m     @     0x55eb40e82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58307)[0m     @     0x55eb40f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58307)[0m     @     0x55eb40f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58307)[0m     @     0x55eb40e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58307)[0m     @     0x55eb40f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58307)[0m     @     0x55eb40f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58307)[0m     @     0x55eb40e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58307)[0m     @     0x55eb40f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58307)[0m     @     0x55eb40f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58307)[0m     @     0x55eb40e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58307)[0m     @     0x55eb40f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58307)[0m     @     0x55eb40f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58307)[0m     @     0x55eb40e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x7f46f99e54f5 at::Tensor::copy_()
[2m[36m(pid=58253)[0m     @     0x7f46ffa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58253)[0m     @     0x557e9f1d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58253)[0m     @     0x557e9f134b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x557e9f1bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58253)[0m     @     0x557e9f1c0a20 method_vectorcall
[2m[36m(pid=58253)[0m     @     0x557e9f134bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x557e9f1bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58253)[0m     @     0x557e9f1c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58253)[0m     @     0x557e9f135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x557e9f1bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58253)[0m     @     0x557e9f1c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58253)[0m     @     0x557e9f135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x557e9f1bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58253)[0m     @     0x557e9f1c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58253)[0m     @     0x557e9f135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58253)[0m     @     0x557e9f1bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58253)[0m     @     0x557e9f1c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58253)[0m     @     0x557e9f135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x7f2fd2a544f5 at::Tensor::copy_()
[2m[36m(pid=58353)[0m     @     0x7f2fd4f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58326)[0m     @     0x7f92536494f5 at::Tensor::copy_()
[2m[36m(pid=58326)[0m     @     0x7f9255b1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58326)[0m     @     0x7f92536494f5 at::Tensor::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff5138d91 at::TensorIterator::for_each()
[2m[36m(pid=58319)[0m     @     0x7f0ff5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58319)[0m     @     0x7f0ff5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58278)[0m     @     0x7f65a678f4f5 at::Tensor::copy_()
[2m[36m(pid=58278)[0m     @     0x7f65ac83a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58278)[0m     @     0x55f4b6451fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58278)[0m     @     0x55f4b63acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58278)[0m     @     0x55f4b6437baf _PyEval_EvalCodeWithName
[2m[36m(pid=58278)[0m     @     0x55f4b6438a20 method_vectorcall
[2m[36m(pid=58278)[0m     @     0x55f4b63acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58278)[0m     @     0x55f4b6437baf _PyEval_EvalCodeWithName
[2m[36m(pid=58278)[0m     @     0x55f4b6438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58278)[0m     @     0x55f4b63ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58278)[0m     @     0x55f4b6437baf _PyEval_EvalCodeWithName
[2m[36m(pid=58278)[0m     @     0x55f4b6438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58278)[0m     @     0x55f4b63ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58278)[0m     @     0x55f4b6437baf _PyEval_EvalCodeWithName
[2m[36m(pid=58278)[0m     @     0x55f4b6438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58278)[0m     @     0x55f4b63ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58278)[0m     @     0x55f4b6437baf _PyEval_EvalCodeWithName
[2m[36m(pid=58278)[0m     @     0x55f4b6438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58278)[0m     @     0x55f4b63ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58283)[0m     @     0x5565841a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x7efcdbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=58263)[0m     @     0x7efce1c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58263)[0m     @     0x555cb0e7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58263)[0m     @     0x555cb0ddab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x555cb0e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=58263)[0m     @     0x555cb0e66a20 method_vectorcall
[2m[36m(pid=58263)[0m     @     0x555cb0ddabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x555cb0e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=58263)[0m     @     0x555cb0e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58263)[0m     @     0x555cb0ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x555cb0e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=58263)[0m     @     0x555cb0e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58263)[0m     @     0x555cb0ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x555cb0e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=58263)[0m     @     0x555cb0e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58263)[0m     @     0x555cb0ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58263)[0m     @     0x555cb0e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=58263)[0m     @     0x555cb0e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58263)[0m     @     0x555cb0ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x7ed323eb44f5 at::Tensor::copy_()
[2m[36m(pid=58262)[0m     @     0x7ed329f5f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58262)[0m     @     0x55c0bbf44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58262)[0m     @     0x55c0bbe9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x55c0bbf2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58262)[0m     @     0x55c0bbf2ba20 method_vectorcall
[2m[36m(pid=58262)[0m     @     0x55c0bbe9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x55c0bbf2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58262)[0m     @     0x55c0bbf2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58262)[0m     @     0x55c0bbea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x55c0bbf2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58262)[0m     @     0x55c0bbf2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58262)[0m     @     0x55c0bbea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x55c0bbf2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58262)[0m     @     0x55c0bbf2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58262)[0m     @     0x55c0bbea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58262)[0m     @     0x55c0bbf2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58262)[0m     @     0x55c0bbf2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58262)[0m     @     0x55c0bbea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x7f90acd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58268)[0m     @     0x7f90aa8bd4f5 at::Tensor::copy_()
[2m[36m(pid=58268)[0m     @     0x7f90b096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58268)[0m     @     0x562f34e5cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58268)[0m     @     0x562f34db7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x562f34e42baf _PyEval_EvalCodeWithName
[2m[36m(pid=58268)[0m     @     0x562f34e43a20 method_vectorcall
[2m[36m(pid=58268)[0m     @     0x562f34db7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x562f34e42baf _PyEval_EvalCodeWithName
[2m[36m(pid=58268)[0m     @     0x562f34e43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58268)[0m     @     0x562f34db8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x562f34e42baf _PyEval_EvalCodeWithName
[2m[36m(pid=58268)[0m     @     0x562f34e43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58268)[0m     @     0x562f34db8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x562f34e42baf _PyEval_EvalCodeWithName
[2m[36m(pid=58268)[0m     @     0x562f34e43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58268)[0m     @     0x562f34db8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58268)[0m     @     0x562f34e42baf _PyEval_EvalCodeWithName
[2m[36m(pid=58268)[0m     @     0x562f34e43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58268)[0m     @     0x562f34db8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x7fc46dcce4f5 at::Tensor::copy_()
[2m[36m(pid=58254)[0m     @     0x7fc4701a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58322)[0m     @     0x555c09733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58261)[0m     @     0x55fa3fa07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58261)[0m     @     0x55fa3fa08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58261)[0m     @     0x55fa3f97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58261)[0m     @     0x55fa3fa07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58261)[0m     @     0x55fa3fa08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58261)[0m     @     0x55fa3f97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x7ee9182278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58259)[0m     @     0x7ee915d544f5 at::Tensor::copy_()
[2m[36m(pid=58259)[0m     @     0x7ee91bdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58259)[0m     @     0x55680d019fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58259)[0m     @     0x55680cf74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x55680cfffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58259)[0m     @     0x55680d000a20 method_vectorcall
[2m[36m(pid=58259)[0m     @     0x55680cf74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x55680cfffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58259)[0m     @     0x55680d000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58259)[0m     @     0x55680cf75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x55680cfffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58259)[0m     @     0x55680d000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58259)[0m     @     0x55680cf75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x55680cfffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58259)[0m     @     0x55680d000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58259)[0m     @     0x55680cf75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58259)[0m     @     0x55680cfffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58259)[0m     @     0x55680d000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58259)[0m     @     0x55680cf75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58310)[0m     @     0x55accbb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58310)[0m     @     0x55accbb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58310)[0m     @     0x55accbac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58310)[0m     @     0x55accbb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58310)[0m     @     0x55accbb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58310)[0m     @     0x55accbac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58310)[0m     @     0x55accbb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58310)[0m     @     0x55accbb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58310)[0m     @     0x55accbac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58347)[0m     @     0x55f8797a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879832baf _PyEval_EvalCodeWithName
[2m[36m(pid=58347)[0m     @     0x55f879833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58347)[0m     @     0x55f8797a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58347)[0m     @     0x55f879832baf _PyEval_EvalCodeWithName
[2m[36m(pid=58347)[0m     @     0x55f879833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58347)[0m     @     0x55f8797a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x7f58eb4324f5 at::Tensor::copy_()
[2m[36m(pid=58304)[0m     @     0x7f58ed9058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58304)[0m     @     0x7f58eb4324f5 at::Tensor::copy_()
[2m[36m(pid=58304)[0m     @     0x7f58f14dd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58304)[0m     @     0x55f40464ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58304)[0m     @     0x55f4045aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x55f404635baf _PyEval_EvalCodeWithName
[2m[36m(pid=58304)[0m     @     0x55f404636a20 method_vectorcall
[2m[36m(pid=58304)[0m     @     0x55f4045aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x55f404635baf _PyEval_EvalCodeWithName
[2m[36m(pid=58304)[0m     @     0x55f404636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58304)[0m     @     0x55f4045ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x7fcc99440d91 at::TensorIterator::for_each()
[2m[36m(pid=58266)[0m     @     0x7fcc99d23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=58266)[0m     @     0x7fcc99d46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58266)[0m     @     0x7fcc991e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58266)[0m     @     0x7fcc991e6388 at::native::copy_impl()
[2m[36m(pid=58273)[0m     @     0x7f4fda13d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58273)[0m     @     0x55b9f4365fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58273)[0m     @     0x55b9f42c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58273)[0m     @     0x55b9f434bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58273)[0m     @     0x55b9f434ca20 method_vectorcall
[2m[36m(pid=58273)[0m     @     0x55b9f42c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58273)[0m     @     0x55b9f434bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58273)[0m     @     0x55b9f434c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58273)[0m     @     0x55b9f42c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58273)[0m     @     0x55b9f434bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58273)[0m     @     0x55b9f434c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58273)[0m     @     0x55b9f42c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58273)[0m     @     0x55b9f434bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58273)[0m     @     0x55b9f434c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58273)[0m     @     0x55b9f42c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58273)[0m     @     0x55b9f434bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58273)[0m     @     0x55b9f434c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58273)[0m     @     0x55b9f42c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x7ed7a8a654f5 at::Tensor::copy_()
[2m[36m(pid=58317)[0m     @     0x7ed7aeb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58317)[0m     @     0x5567b9d79fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58317)[0m     @     0x5567b9cd4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x5567b9d5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58317)[0m     @     0x5567b9d60a20 method_vectorcall
[2m[36m(pid=58317)[0m     @     0x5567b9cd4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x5567b9d5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58317)[0m     @     0x5567b9d60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58317)[0m     @     0x5567b9cd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x5567b9d5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58317)[0m     @     0x5567b9d60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58317)[0m     @     0x5567b9cd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x5567b9d5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58317)[0m     @     0x5567b9d60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58317)[0m     @     0x5567b9cd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58317)[0m     @     0x5567b9d5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58317)[0m     @     0x5567b9d60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58317)[0m     @     0x5567b9cd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x7f48dc7924f5 at::Tensor::copy_()
[2m[36m(pid=58324)[0m     @     0x7f48dec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58324)[0m     @     0x7f48dc7924f5 at::Tensor::copy_()
[2m[36m(pid=58324)[0m     @     0x7f48e283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58324)[0m     @     0x55af0f8fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58324)[0m     @     0x55af0f857b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x55af0f8e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=58324)[0m     @     0x55af0f8e3a20 method_vectorcall
[2m[36m(pid=58324)[0m     @     0x55af0f857bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x55af0f8e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=58324)[0m     @     0x55af0f8e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58324)[0m     @     0x55af0f858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x55af0f8e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=58324)[0m     @     0x55af0f8e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58324)[0m     @     0x55af0f858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58324)[0m     @     0x55af0f8e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=58324)[0m     @     0x55af0f8e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58324)[0m     @     0x55af0f858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x7f2105728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=58377)[0m     @     0x7f2104bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58377)[0m     @     0x7f2104bc8388 at::native::copy_impl()
[2m[36m(pid=58377)[0m     @     0x7f2104bca5a4 at::native::copy_()
[2m[36m(pid=58285)[0m     @     0x7ed1449b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58285)[0m     @     0x7ed1449b7388 at::native::copy_impl()
[2m[36m(pid=58305)[0m     @     0x55821949bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58305)[0m     @     0x55821949c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58305)[0m     @     0x558219411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58305)[0m     @     0x55821949bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58305)[0m     @     0x55821949c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58305)[0m     @     0x558219411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58305)[0m     @     0x55821949bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58305)[0m     @     0x55821949c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58305)[0m     @     0x558219411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58305)[0m     @     0x55821949bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58305)[0m     @     0x55821949c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58305)[0m     @     0x558219411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x7f317a04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58356)[0m     @     0x55d937a51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58356)[0m     @     0x55d9379acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x55d937a37baf _PyEval_EvalCodeWithName
[2m[36m(pid=58356)[0m     @     0x55d937a38a20 method_vectorcall
[2m[36m(pid=58356)[0m     @     0x55d9379acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x55d937a37baf _PyEval_EvalCodeWithName
[2m[36m(pid=58356)[0m     @     0x55d937a38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58356)[0m     @     0x55d9379ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x55d937a37baf _PyEval_EvalCodeWithName
[2m[36m(pid=58356)[0m     @     0x55d937a38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58356)[0m     @     0x55d9379ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x55d937a37baf _PyEval_EvalCodeWithName
[2m[36m(pid=58356)[0m     @     0x55d937a38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58356)[0m     @     0x55d9379ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58356)[0m     @     0x55d937a37baf _PyEval_EvalCodeWithName
[2m[36m(pid=58356)[0m     @     0x55d937a38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58356)[0m     @     0x55d9379ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x7f30155cb4f5 at::Tensor::copy_()
[2m[36m(pid=58312)[0m     @     0x7f301b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58312)[0m     @     0x5618e50c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58312)[0m     @     0x5618e501fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x5618e50aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58312)[0m     @     0x5618e50aba20 method_vectorcall
[2m[36m(pid=58312)[0m     @     0x5618e501fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x5618e50aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58312)[0m     @     0x5618e50ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58312)[0m     @     0x5618e5020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x5618e50aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58312)[0m     @     0x5618e50ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58312)[0m     @     0x5618e5020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x5618e50aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58312)[0m     @     0x5618e50ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58312)[0m     @     0x5618e5020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58312)[0m     @     0x5618e50aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=58312)[0m     @     0x5618e50ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58312)[0m     @     0x5618e5020689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x7f2fd2a544f5 at::Tensor::copy_()
[2m[36m(pid=58353)[0m     @     0x7f2fd8aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58353)[0m     @     0x55a29ee21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58353)[0m     @     0x55a29ed7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x55a29ee07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58353)[0m     @     0x55a29ee08a20 method_vectorcall
[2m[36m(pid=58353)[0m     @     0x55a29ed7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x55a29ee07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58353)[0m     @     0x55a29ee08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58353)[0m     @     0x55a29ed7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x55a29ee07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58353)[0m     @     0x55a29ee08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58353)[0m     @     0x55a29ed7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x55a29ee07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58353)[0m     @     0x55a29ee08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58353)[0m     @     0x55a29ed7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58353)[0m     @     0x55a29ee07baf _PyEval_EvalCodeWithName
[2m[36m(pid=58353)[0m     @     0x55a29ee08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58353)[0m     @     0x55a29ed7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x7f92596f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58326)[0m     @     0x558d9e030fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58326)[0m     @     0x558d9df8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x558d9e016baf _PyEval_EvalCodeWithName
[2m[36m(pid=58326)[0m     @     0x558d9e017a20 method_vectorcall
[2m[36m(pid=58326)[0m     @     0x558d9df8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x558d9e016baf _PyEval_EvalCodeWithName
[2m[36m(pid=58326)[0m     @     0x558d9e017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58326)[0m     @     0x558d9df8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x558d9e016baf _PyEval_EvalCodeWithName
[2m[36m(pid=58326)[0m     @     0x558d9e017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58326)[0m     @     0x558d9df8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x558d9e016baf _PyEval_EvalCodeWithName
[2m[36m(pid=58326)[0m     @     0x558d9e017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58326)[0m     @     0x558d9df8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58326)[0m     @     0x558d9e016baf _PyEval_EvalCodeWithName
[2m[36m(pid=58326)[0m     @     0x558d9e017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58326)[0m     @     0x558d9df8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x7f0ff4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=58319)[0m     @     0x7f0ff4ede388 at::native::copy_impl()
[2m[36m(pid=58304)[0m     @     0x55f404635baf _PyEval_EvalCodeWithName
[2m[36m(pid=58304)[0m     @     0x55f404636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58304)[0m     @     0x55f4045ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x55f404635baf _PyEval_EvalCodeWithName
[2m[36m(pid=58304)[0m     @     0x55f404636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58304)[0m     @     0x55f4045ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58304)[0m     @     0x55f404635baf _PyEval_EvalCodeWithName
[2m[36m(pid=58304)[0m     @     0x55f404636643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58304)[0m     @     0x55f4045ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x7fcc991e85a4 at::native::copy_()
[2m[36m(pid=58266)[0m     @     0x7fcc998d34f5 at::Tensor::copy_()
[2m[36m(pid=58324)[0m     @     0x55af0f8e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=58324)[0m     @     0x55af0f8e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58324)[0m     @     0x55af0f858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x7f21052b54f5 at::Tensor::copy_()
[2m[36m(pid=58285)[0m     @     0x7ed1449b95a4 at::native::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff4ee05a4 at::native::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff55cb4f5 at::Tensor::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58254)[0m     @     0x7fc46dcce4f5 at::Tensor::copy_()
[2m[36m(pid=58254)[0m     @     0x7fc473d7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58254)[0m     @     0x563863851fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58254)[0m     @     0x5638637acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x563863837baf _PyEval_EvalCodeWithName
[2m[36m(pid=58254)[0m     @     0x563863838a20 method_vectorcall
[2m[36m(pid=58254)[0m     @     0x5638637acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x563863837baf _PyEval_EvalCodeWithName
[2m[36m(pid=58254)[0m     @     0x563863838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58254)[0m     @     0x5638637ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x563863837baf _PyEval_EvalCodeWithName
[2m[36m(pid=58254)[0m     @     0x563863838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58254)[0m     @     0x5638637ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x563863837baf _PyEval_EvalCodeWithName
[2m[36m(pid=58254)[0m     @     0x563863838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58254)[0m     @     0x5638637ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58254)[0m     @     0x563863837baf _PyEval_EvalCodeWithName
[2m[36m(pid=58254)[0m     @     0x563863838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58254)[0m     @     0x5638637ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x7fcc9bda68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58266)[0m     @     0x7fcc998d34f5 at::Tensor::copy_()
[2m[36m(pid=58266)[0m     @     0x7fcc9f97e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58266)[0m     @     0x55c4546f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58266)[0m     @     0x55c45464cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x55c4546d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=58266)[0m     @     0x55c4546d8a20 method_vectorcall
[2m[36m(pid=58266)[0m     @     0x55c45464cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x55c4546d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=58266)[0m     @     0x55c4546d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58266)[0m     @     0x55c45464d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x55c4546d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=58266)[0m     @     0x55c4546d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58266)[0m     @     0x55c45464d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x55c4546d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=58266)[0m     @     0x55c4546d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58266)[0m     @     0x55c45464d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58266)[0m     @     0x55c4546d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=58266)[0m     @     0x55c4546d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58266)[0m     @     0x55c45464d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x7f21077888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58377)[0m     @     0x7f21052b54f5 at::Tensor::copy_()
[2m[36m(pid=58377)[0m     @     0x7f210b36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58377)[0m     @     0x55e51cecafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58377)[0m     @     0x55e51ce25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x55e51ceb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=58377)[0m     @     0x55e51ceb1a20 method_vectorcall
[2m[36m(pid=58377)[0m     @     0x55e51ce25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x55e51ceb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=58377)[0m     @     0x55e51ceb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58377)[0m     @     0x55e51ce26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x55e51ceb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=58377)[0m     @     0x55e51ceb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58377)[0m     @     0x55e51ce26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x55e51ceb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=58377)[0m     @     0x55e51ceb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58377)[0m     @     0x55e51ce26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58377)[0m     @     0x55e51ceb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=58377)[0m     @     0x55e51ceb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58377)[0m     @     0x55e51ce26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x7ed1450a44f5 at::Tensor::copy_()
[2m[36m(pid=58285)[0m     @     0x7ed1475778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=58285)[0m     @     0x7ed1450a44f5 at::Tensor::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ff55cb4f5 at::Tensor::copy_()
[2m[36m(pid=58319)[0m     @     0x7f0ffb67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58319)[0m     @     0x564b17994fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58319)[0m     @     0x564b178efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58319)[0m     @     0x564b1797ba20 method_vectorcall
[2m[36m(pid=58319)[0m     @     0x564b178efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58319)[0m     @     0x564b1797b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58319)[0m     @     0x564b178f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58319)[0m     @     0x564b1797b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58319)[0m     @     0x564b178f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x7efd2204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58280)[0m     @     0x556dfaf35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58280)[0m     @     0x556dfae90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x556dfaf1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x556dfaf1ca20 method_vectorcall
[2m[36m(pid=58280)[0m     @     0x556dfae90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x556dfaf1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x556dfaf1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58280)[0m     @     0x556dfae91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x556dfaf1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x556dfaf1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58280)[0m     @     0x556dfae91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x556dfaf1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x556dfaf1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58285)[0m     @     0x7ed14b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=58285)[0m     @     0x56014de90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=58285)[0m     @     0x56014ddebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x56014de76baf _PyEval_EvalCodeWithName
[2m[36m(pid=58285)[0m     @     0x56014de77a20 method_vectorcall
[2m[36m(pid=58285)[0m     @     0x56014ddebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x56014de76baf _PyEval_EvalCodeWithName
[2m[36m(pid=58285)[0m     @     0x56014de77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58285)[0m     @     0x56014ddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x56014de76baf _PyEval_EvalCodeWithName
[2m[36m(pid=58285)[0m     @     0x56014de77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58285)[0m     @     0x56014ddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x56014de76baf _PyEval_EvalCodeWithName
[2m[36m(pid=58285)[0m     @     0x56014de77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58285)[0m     @     0x56014ddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58285)[0m     @     0x56014de76baf _PyEval_EvalCodeWithName
[2m[36m(pid=58285)[0m     @     0x56014de77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58285)[0m     @     0x56014ddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58319)[0m     @     0x564b178f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58319)[0m     @     0x564b1797abaf _PyEval_EvalCodeWithName
[2m[36m(pid=58319)[0m     @     0x564b1797b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58319)[0m     @     0x564b178f0689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:49:16,588	ERROR trial_runner.py:567 -- Trial PPO_jss_env_887bc_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=58376, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=58280)[0m     @     0x556dfae91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=58280)[0m     @     0x556dfaf1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=58280)[0m     @     0x556dfaf1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=58280)[0m     @     0x556dfae91689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:49:16,594	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
[2m[36m(pid=58376)[0m E1105 10:49:16.579183 58376 59493 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=58376)[0m E1105 10:49:16.579367 58376 59493 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:49:16,605	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:49:16,606	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
== Status ==
Memory usage on this node: 23.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_887bc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_887bc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_887bc_00000_0_2020-11-05_10-49-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_887bc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_887bc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_887bc_00000_0_2020-11-05_10-49-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
2020-11-05 10:49:16,616	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_887bc_00000])
