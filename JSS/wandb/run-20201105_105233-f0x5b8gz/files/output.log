2020-11-05 10:52:36,934	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/557.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_0516b_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=71473)[0m 2020-11-05 10:52:39,907	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=71473)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=71473)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=71473)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=71473)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=71473)[0m 
[2m[36m(pid=71473)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=71432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71432)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71432)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71432)[0m *** SIGSEGV (@0x0) received by PID 71432 (TID 0x7fedb681b700) from PID 0; stack trace: ***
[2m[36m(pid=71370)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71370)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71370)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71370)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71370)[0m *** SIGSEGV (@0x0) received by PID 71370 (TID 0x7f50b54e7700) from PID 0; stack trace: ***
[2m[36m(pid=71370)[0m     @     0x7f50b50c0390 (unknown)
[2m[36m(pid=71370)[0m     @     0x7f21b5048f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71430)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71430)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71430)[0m *** SIGSEGV (@0x0) received by PID 71430 (TID 0x7fb73821d700) from PID 0; stack trace: ***
[2m[36m(pid=71430)[0m     @     0x7fb737df6390 (unknown)
[2m[36m(pid=71430)[0m     @     0x7f8837d79f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71430)[0m     @     0x7f88374a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71355)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71355)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71355)[0m *** SIGSEGV (@0x0) received by PID 71355 (TID 0x7f12f8233700) from PID 0; stack trace: ***
[2m[36m(pid=71355)[0m     @     0x7f12f7e0c390 (unknown)
[2m[36m(pid=71355)[0m     @     0x7ee3f7d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71484)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71484)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71484)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71484)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71484)[0m *** SIGSEGV (@0x0) received by PID 71484 (TID 0x7fa80d790700) from PID 0; stack trace: ***
[2m[36m(pid=71484)[0m     @     0x7fa80d369390 (unknown)
[2m[36m(pid=71484)[0m     @     0x7f790d166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71484)[0m     @     0x7f790c8917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71423)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71423)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71423)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71423)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71423)[0m *** SIGSEGV (@0x0) received by PID 71423 (TID 0x7f40e0b09700) from PID 0; stack trace: ***
[2m[36m(pid=71423)[0m     @     0x7f40e06e2390 (unknown)
[2m[36m(pid=71423)[0m     @     0x7f11e05f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71438)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71438)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71438)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71438)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71438)[0m *** SIGSEGV (@0x0) received by PID 71438 (TID 0x7fabec751700) from PID 0; stack trace: ***
[2m[36m(pid=71438)[0m     @     0x7fabec32a390 (unknown)
[2m[36m(pid=71434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71434)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71434)[0m *** SIGSEGV (@0x0) received by PID 71434 (TID 0x7f4b712ac700) from PID 0; stack trace: ***
[2m[36m(pid=71434)[0m     @     0x7f4b70e85390 (unknown)
[2m[36m(pid=71496)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71496)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71496)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71496)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71496)[0m *** SIGSEGV (@0x0) received by PID 71496 (TID 0x7f5c0a8ce700) from PID 0; stack trace: ***
[2m[36m(pid=71496)[0m     @     0x7f5c0a4a7390 (unknown)
[2m[36m(pid=71496)[0m     @     0x7f2d0a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71496)[0m     @     0x7f2d09a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71431)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71431)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71431)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71431)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71431)[0m *** SIGSEGV (@0x0) received by PID 71431 (TID 0x7f2c244e3700) from PID 0; stack trace: ***
[2m[36m(pid=71431)[0m     @     0x7f2c240bc390 (unknown)
[2m[36m(pid=71482)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71482)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71482)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71482)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71482)[0m *** SIGSEGV (@0x0) received by PID 71482 (TID 0x7ffaf96c2700) from PID 0; stack trace: ***
[2m[36m(pid=71482)[0m     @     0x7ffaf929b390 (unknown)
[2m[36m(pid=71482)[0m     @     0x7fcbf9242f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71482)[0m     @     0x7fcbf896d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71419)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71419)[0m *** SIGSEGV (@0x0) received by PID 71419 (TID 0x7f2ad785d700) from PID 0; stack trace: ***
[2m[36m(pid=71419)[0m     @     0x7f2ad7436390 (unknown)
[2m[36m(pid=71419)[0m     @     0x7efbd7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71364)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71364)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71364)[0m *** SIGSEGV (@0x0) received by PID 71364 (TID 0x7fb298529700) from PID 0; stack trace: ***
[2m[36m(pid=71376)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71376)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71376)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71376)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71376)[0m *** SIGSEGV (@0x0) received by PID 71376 (TID 0x7f0ae40ed700) from PID 0; stack trace: ***
[2m[36m(pid=71376)[0m     @     0x7f0ae3cc6390 (unknown)
[2m[36m(pid=71442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71442)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71442)[0m *** SIGSEGV (@0x0) received by PID 71442 (TID 0x7f075fa03700) from PID 0; stack trace: ***
[2m[36m(pid=71442)[0m     @     0x7f075f5dc390 (unknown)
[2m[36m(pid=71442)[0m     @     0x7ed85f43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71442)[0m     @     0x7ed85eb657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71463)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71463)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71463)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71463)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71463)[0m *** SIGSEGV (@0x0) received by PID 71463 (TID 0x7f5387507700) from PID 0; stack trace: ***
[2m[36m(pid=71463)[0m     @     0x7f53870e0390 (unknown)
[2m[36m(pid=71463)[0m     @     0x7f2487092f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71463)[0m     @     0x7f24867bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71371)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71371)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71371)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71371)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71371)[0m *** SIGSEGV (@0x0) received by PID 71371 (TID 0x7fcc443a1700) from PID 0; stack trace: ***
[2m[36m(pid=71371)[0m     @     0x7fcc43f7a390 (unknown)
[2m[36m(pid=71371)[0m     @     0x7f9d43e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71433)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71433)[0m *** SIGSEGV (@0x0) received by PID 71433 (TID 0x7fbc9229c700) from PID 0; stack trace: ***
[2m[36m(pid=71433)[0m     @     0x7fbc91e75390 (unknown)
[2m[36m(pid=71433)[0m     @     0x7f8d91df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71433)[0m     @     0x7f8d915227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71465)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71465)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71465)[0m *** SIGSEGV (@0x0) received by PID 71465 (TID 0x7f1b9133e700) from PID 0; stack trace: ***
[2m[36m(pid=71465)[0m     @     0x7f1b90f17390 (unknown)
[2m[36m(pid=71465)[0m     @     0x7eec90ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71465)[0m     @     0x7eec905cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71486)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71486)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71486)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71486)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71486)[0m *** SIGSEGV (@0x0) received by PID 71486 (TID 0x7f3fe8903700) from PID 0; stack trace: ***
[2m[36m(pid=71486)[0m     @     0x7f3fe84dc390 (unknown)
[2m[36m(pid=71486)[0m     @     0x7f10e83e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71486)[0m     @     0x7f10e7b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71476)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71476)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71476)[0m *** SIGSEGV (@0x0) received by PID 71476 (TID 0x7eff2fe29700) from PID 0; stack trace: ***
[2m[36m(pid=71476)[0m     @     0x7eff2fa02390 (unknown)
[2m[36m(pid=71476)[0m     @     0x7ed02f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71476)[0m     @     0x7ed02f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71470)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71470)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71470)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71470)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71470)[0m *** SIGSEGV (@0x0) received by PID 71470 (TID 0x7f9fe5ae7700) from PID 0; stack trace: ***
[2m[36m(pid=71470)[0m     @     0x7f9fe56c0390 (unknown)
[2m[36m(pid=71358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71358)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71358)[0m *** SIGSEGV (@0x0) received by PID 71358 (TID 0x7f195d05d700) from PID 0; stack trace: ***
[2m[36m(pid=71456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71456)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71456)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71456)[0m *** SIGSEGV (@0x0) received by PID 71456 (TID 0x7fd1a07b4700) from PID 0; stack trace: ***
[2m[36m(pid=71456)[0m     @     0x7fd1a038d390 (unknown)
[2m[36m(pid=71422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71422)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71422)[0m *** SIGSEGV (@0x0) received by PID 71422 (TID 0x7f7699588700) from PID 0; stack trace: ***
[2m[36m(pid=71422)[0m     @     0x7f7699161390 (unknown)
[2m[36m(pid=71422)[0m     @     0x7f47990f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71422)[0m     @     0x7f47988247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71384)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71384)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71384)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71384)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71384)[0m *** SIGSEGV (@0x0) received by PID 71384 (TID 0x7effe57d3700) from PID 0; stack trace: ***
[2m[36m(pid=71384)[0m     @     0x7effe53ac390 (unknown)
[2m[36m(pid=71384)[0m     @     0x7ed0e533af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71384)[0m     @     0x7ed0e4a657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71384)[0m     @     0x7ed0e4a688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71384)[0m     @     0x7ed0e4a68ad3 at::TensorIterator::for_each()
[2m[36m(pid=71451)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71451)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71451)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71451)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71451)[0m *** SIGSEGV (@0x0) received by PID 71451 (TID 0x7f6ab774f700) from PID 0; stack trace: ***
[2m[36m(pid=71451)[0m     @     0x7f6ab7328390 (unknown)
[2m[36m(pid=71451)[0m     @     0x7f3bb7124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71451)[0m     @     0x7f3bb684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71466)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71466)[0m *** SIGSEGV (@0x0) received by PID 71466 (TID 0x7f14b750a700) from PID 0; stack trace: ***
[2m[36m(pid=71466)[0m     @     0x7f14b70e3390 (unknown)
[2m[36m(pid=71466)[0m     @     0x7ee5b7092f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71466)[0m     @     0x7ee5b67bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71493)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71493)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71493)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71493)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71493)[0m *** SIGSEGV (@0x0) received by PID 71493 (TID 0x7f42bd304700) from PID 0; stack trace: ***
[2m[36m(pid=71493)[0m     @     0x7f42bcedd390 (unknown)
[2m[36m(pid=71493)[0m     @     0x7f13bce77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71493)[0m     @     0x7f13bc5a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71454)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71454)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71454)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71454)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71454)[0m *** SIGSEGV (@0x0) received by PID 71454 (TID 0x7fe611818700) from PID 0; stack trace: ***
[2m[36m(pid=71454)[0m     @     0x7fe6113f1390 (unknown)
[2m[36m(pid=71454)[0m     @     0x7fb71139ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71454)[0m     @     0x7fb710aca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71454)[0m     @     0x7fb710acd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71454)[0m     @     0x7fb710acdad3 at::TensorIterator::for_each()
[2m[36m(pid=71353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71353)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71353)[0m *** SIGSEGV (@0x0) received by PID 71353 (TID 0x7fd7a301c700) from PID 0; stack trace: ***
[2m[36m(pid=71353)[0m     @     0x7fd7a2bf5390 (unknown)
[2m[36m(pid=71353)[0m     @     0x7fa8a2a13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71353)[0m     @     0x7fa8a213e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71459)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71459)[0m *** SIGSEGV (@0x0) received by PID 71459 (TID 0x7fb8333eb700) from PID 0; stack trace: ***
[2m[36m(pid=71459)[0m     @     0x7fb832fc4390 (unknown)
[2m[36m(pid=71459)[0m     @     0x7f8932f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71459)[0m     @     0x7f893263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71495)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71495)[0m *** SIGSEGV (@0x0) received by PID 71495 (TID 0x7f4ee54b0700) from PID 0; stack trace: ***
[2m[36m(pid=71495)[0m     @     0x7f4ee5089390 (unknown)
[2m[36m(pid=71495)[0m     @     0x7f1fe5023f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71495)[0m     @     0x7f1fe474e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71432)[0m     @     0x7fedb63f4390 (unknown)
[2m[36m(pid=71432)[0m     @     0x7fbeb634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71432)[0m     @     0x7fbeb5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71370)[0m     @     0x7f21b47737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71430)[0m     @     0x7f88374a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71355)[0m     @     0x7ee3f74577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71355)[0m     @     0x7ee3f745a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71355)[0m     @     0x7ee3f745aad3 at::TensorIterator::for_each()
[2m[36m(pid=71484)[0m     @     0x7f790c8948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71423)[0m     @     0x7f11dfd1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71423)[0m     @     0x7f11dfd228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71438)[0m     @     0x7f7cec0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71438)[0m     @     0x7f7ceb7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71438)[0m     @     0x7f7ceb7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71434)[0m     @     0x7f1c70c1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71434)[0m     @     0x7f1c7034a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71434)[0m     @     0x7f1c7034d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71496)[0m     @     0x7f2d09a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71431)[0m     @     0x7efd22c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71431)[0m     @     0x7efd223407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71431)[0m     @     0x7efd223438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71482)[0m     @     0x7fcbf89708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71419)[0m     @     0x7efbd69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71419)[0m     @     0x7efbd69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71364)[0m     @     0x7fb298102390 (unknown)
[2m[36m(pid=71364)[0m     @     0x7f839801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71364)[0m     @     0x7f83977477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71376)[0m     @     0x7edbe3af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71376)[0m     @     0x7edbe32207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71376)[0m     @     0x7edbe32238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71442)[0m     @     0x7ed85eb688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71442)[0m     @     0x7ed85eb68ad3 at::TensorIterator::for_each()
[2m[36m(pid=71463)[0m     @     0x7f24867c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71371)[0m     @     0x7f9d435367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71371)[0m     @     0x7f9d435398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71433)[0m     @     0x7f8d915258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71465)[0m     @     0x7eec905d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71486)[0m     @     0x7f10e7b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71486)[0m     @     0x7f10e7b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=71476)[0m     @     0x7ed02f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71470)[0m     @     0x7f70e5674f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71470)[0m     @     0x7f70e4d9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71470)[0m     @     0x7f70e4da28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71358)[0m     @     0x7f195cc36390 (unknown)
[2m[36m(pid=71358)[0m     @     0x7eea5c940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71358)[0m     @     0x7eea5c06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71358)[0m     @     0x7eea5c06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71456)[0m     @     0x7fa2a0333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71456)[0m     @     0x7fa29fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71456)[0m     @     0x7fa29fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71422)[0m     @     0x7f47988278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71384)[0m     @     0x7ed0e4a68d91 at::TensorIterator::for_each()
[2m[36m(pid=71451)[0m     @     0x7f3bb68528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71466)[0m     @     0x7ee5b67c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71493)[0m     @     0x7f13bc5a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71454)[0m     @     0x7fb710acdd91 at::TensorIterator::for_each()
[2m[36m(pid=71454)[0m     @     0x7fb7113b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71353)[0m     @     0x7fa8a21418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71459)[0m     @     0x7f89326418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71495)[0m     @     0x7f1fe47518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71432)[0m     @     0x7fbeb5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71363)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71370)[0m     @     0x7f21b47768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71370)[0m     @     0x7f21b4776ad3 at::TensorIterator::for_each()
[2m[36m(pid=71430)[0m     @     0x7f88374a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=71430)[0m     @     0x7f88374a7d91 at::TensorIterator::for_each()
[2m[36m(pid=71430)[0m     @     0x7f8837d8ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71355)[0m     @     0x7ee3f745ad91 at::TensorIterator::for_each()
[2m[36m(pid=71355)[0m     @     0x7ee3f7d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71355)[0m     @     0x7ee3f7d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71484)[0m     @     0x7f790c894ad3 at::TensorIterator::for_each()
[2m[36m(pid=71423)[0m     @     0x7f11dfd22ad3 at::TensorIterator::for_each()
[2m[36m(pid=71438)[0m     @     0x7f7ceb7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=71434)[0m     @     0x7f1c7034dad3 at::TensorIterator::for_each()
[2m[36m(pid=71496)[0m     @     0x7f2d09a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=71431)[0m     @     0x7efd22343ad3 at::TensorIterator::for_each()
[2m[36m(pid=71482)[0m     @     0x7fcbf8970ad3 at::TensorIterator::for_each()
[2m[36m(pid=71419)[0m     @     0x7efbd6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=71464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71464)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71379)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71379)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71379)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71372)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71356)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71356)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71356)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71364)[0m     @     0x7f839774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71364)[0m     @     0x7f839774aad3 at::TensorIterator::for_each()
[2m[36m(pid=71376)[0m     @     0x7edbe3223ad3 at::TensorIterator::for_each()
[2m[36m(pid=71442)[0m     @     0x7ed85eb68d91 at::TensorIterator::for_each()
[2m[36m(pid=71442)[0m     @     0x7ed85f44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71442)[0m     @     0x7ed85f46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71442)[0m     @     0x7ed85e910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71463)[0m     @     0x7f24867c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=71463)[0m     @     0x7f24867c0d91 at::TensorIterator::for_each()
[2m[36m(pid=71371)[0m     @     0x7f9d43539ad3 at::TensorIterator::for_each()
[2m[36m(pid=71433)[0m     @     0x7f8d91525ad3 at::TensorIterator::for_each()
[2m[36m(pid=71433)[0m     @     0x7f8d91525d91 at::TensorIterator::for_each()
[2m[36m(pid=71465)[0m     @     0x7eec905d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=71465)[0m     @     0x7eec905d2d91 at::TensorIterator::for_each()
[2m[36m(pid=71486)[0m     @     0x7f10e7b11d91 at::TensorIterator::for_each()
[2m[36m(pid=71486)[0m     @     0x7f10e83f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71354)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71476)[0m     @     0x7ed02f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=71476)[0m     @     0x7ed02f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=71470)[0m     @     0x7f70e4da2ad3 at::TensorIterator::for_each()
[2m[36m(pid=71358)[0m     @     0x7eea5c06ead3 at::TensorIterator::for_each()
[2m[36m(pid=71358)[0m     @     0x7eea5c06ed91 at::TensorIterator::for_each()
[2m[36m(pid=71358)[0m     @     0x7eea5c951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71456)[0m     @     0x7fa29fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=71456)[0m     @     0x7fa29fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=71456)[0m     @     0x7fa2a0344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71417)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71426)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71427)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71427)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71427)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71352)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71436)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71436)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71436)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71360)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71360)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71360)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71474)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71474)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71474)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71474)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71474)[0m *** SIGSEGV (@0x0) received by PID 71474 (TID 0x7fe619683700) from PID 0; stack trace: ***
[2m[36m(pid=71474)[0m     @     0x7fe61925c390 (unknown)
[2m[36m(pid=71492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71492)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71492)[0m *** SIGSEGV (@0x0) received by PID 71492 (TID 0x7fa951d46700) from PID 0; stack trace: ***
[2m[36m(pid=71440)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71440)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71440)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71440)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71440)[0m *** SIGSEGV (@0x0) received by PID 71440 (TID 0x7f46d919b700) from PID 0; stack trace: ***
[2m[36m(pid=71362)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71362)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71362)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71362)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71362)[0m *** SIGSEGV (@0x0) received by PID 71362 (TID 0x7fbac57ac700) from PID 0; stack trace: ***
[2m[36m(pid=71366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71366)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71366)[0m *** SIGSEGV (@0x0) received by PID 71366 (TID 0x7fb0fedc9700) from PID 0; stack trace: ***
[2m[36m(pid=71366)[0m     @     0x7fb0fe9a2390 (unknown)
[2m[36m(pid=71410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71410)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71410)[0m *** SIGSEGV (@0x0) received by PID 71410 (TID 0x7f8880f47700) from PID 0; stack trace: ***
[2m[36m(pid=71410)[0m     @     0x7f8880b20390 (unknown)
[2m[36m(pid=71410)[0m     @     0x7f5980a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71410)[0m     @     0x7f59801617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71435)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71435)[0m *** SIGSEGV (@0x0) received by PID 71435 (TID 0x7f8eb859c700) from PID 0; stack trace: ***
[2m[36m(pid=71422)[0m     @     0x7f4798827ad3 at::TensorIterator::for_each()
[2m[36m(pid=71422)[0m     @     0x7f4798827d91 at::TensorIterator::for_each()
[2m[36m(pid=71422)[0m     @     0x7f479910ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71422)[0m     @     0x7f479912dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71384)[0m     @     0x7ed0e534bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71384)[0m     @     0x7ed0e536ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71384)[0m     @     0x7ed0e4810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71384)[0m     @     0x7ed0e480e388 at::native::copy_impl()
[2m[36m(pid=71384)[0m     @     0x7ed0e48105a4 at::native::copy_()
[2m[36m(pid=71451)[0m     @     0x7f3bb6852ad3 at::TensorIterator::for_each()
[2m[36m(pid=71451)[0m     @     0x7f3bb6852d91 at::TensorIterator::for_each()
[2m[36m(pid=71451)[0m     @     0x7f3bb7135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71451)[0m     @     0x7f3bb7158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71466)[0m     @     0x7ee5b67c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=71466)[0m     @     0x7ee5b67c0d91 at::TensorIterator::for_each()
[2m[36m(pid=71466)[0m     @     0x7ee5b70a3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71466)[0m     @     0x7ee5b70c6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71493)[0m     @     0x7f13bc5a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=71493)[0m     @     0x7f13bc5a5d91 at::TensorIterator::for_each()
[2m[36m(pid=71493)[0m     @     0x7f13bce88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71421)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71421)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71421)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71421)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71421)[0m *** SIGSEGV (@0x0) received by PID 71421 (TID 0x7f792f073700) from PID 0; stack trace: ***
[2m[36m(pid=71421)[0m     @     0x7f792ec4c390 (unknown)
[2m[36m(pid=71454)[0m     @     0x7fb7113d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71454)[0m     @     0x7fb710875a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71454)[0m     @     0x7fb710873388 at::native::copy_impl()
[2m[36m(pid=71454)[0m     @     0x7fb7108755a4 at::native::copy_()
[2m[36m(pid=71454)[0m     @     0x7fb710f604f5 at::Tensor::copy_()
[2m[36m(pid=71353)[0m     @     0x7fa8a2141ad3 at::TensorIterator::for_each()
[2m[36m(pid=71353)[0m     @     0x7fa8a2141d91 at::TensorIterator::for_each()
[2m[36m(pid=71353)[0m     @     0x7fa8a2a24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71353)[0m     @     0x7fa8a2a47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71381)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71381)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71381)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71381)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71381)[0m *** SIGSEGV (@0x0) received by PID 71381 (TID 0x7fb1b3649700) from PID 0; stack trace: ***
[2m[36m(pid=71381)[0m     @     0x7fb1b3222390 (unknown)
[2m[36m(pid=71459)[0m     @     0x7f8932641ad3 at::TensorIterator::for_each()
[2m[36m(pid=71459)[0m     @     0x7f8932641d91 at::TensorIterator::for_each()
[2m[36m(pid=71459)[0m     @     0x7f8932f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71459)[0m     @     0x7f8932f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71495)[0m     @     0x7f1fe4751ad3 at::TensorIterator::for_each()
[2m[36m(pid=71495)[0m     @     0x7f1fe4751d91 at::TensorIterator::for_each()
[2m[36m(pid=71495)[0m     @     0x7f1fe5034b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71495)[0m     @     0x7f1fe5057c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71414)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71414)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71414)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71414)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71414)[0m *** SIGSEGV (@0x0) received by PID 71414 (TID 0x7f7a75dce700) from PID 0; stack trace: ***
[2m[36m(pid=71414)[0m     @     0x7f7a759a7390 (unknown)
[2m[36m(pid=71414)[0m     @     0x7f4b757f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71414)[0m     @     0x7f4b74f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71378)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71378)[0m *** SIGSEGV (@0x0) received by PID 71378 (TID 0x7f5928779700) from PID 0; stack trace: ***
[2m[36m(pid=71378)[0m     @     0x7f5928352390 (unknown)
[2m[36m(pid=71428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71428)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71428)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71351)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71351)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71351)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71351)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71351)[0m *** SIGSEGV (@0x0) received by PID 71351 (TID 0x7f541157b700) from PID 0; stack trace: ***
[2m[36m(pid=71351)[0m     @     0x7f5411154390 (unknown)
[2m[36m(pid=71351)[0m     @     0x7f25110b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71429)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71429)[0m *** SIGSEGV (@0x0) received by PID 71429 (TID 0x7f888ef60700) from PID 0; stack trace: ***
[2m[36m(pid=71415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71415)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71443)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71467)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71467)[0m *** SIGSEGV (@0x0) received by PID 71467 (TID 0x7f56454fb700) from PID 0; stack trace: ***
[2m[36m(pid=71357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71357)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71377)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71413)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71365)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71365)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71365)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71365)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71365)[0m *** SIGSEGV (@0x0) received by PID 71365 (TID 0x7fd63cb59700) from PID 0; stack trace: ***
[2m[36m(pid=71432)[0m     @     0x7fbeb5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=71432)[0m     @     0x7fbeb5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=71432)[0m     @     0x7fbeb635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71432)[0m     @     0x7fbeb637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71375)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71375)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71375)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71363)[0m *** SIGSEGV (@0x0) received by PID 71363 (TID 0x7fbf1e98e700) from PID 0; stack trace: ***
[2m[36m(pid=71363)[0m     @     0x7fbf1e567390 (unknown)
[2m[36m(pid=71363)[0m     @     0x7f901e512f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71363)[0m     @     0x7f901dc3d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71359)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71359)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71359)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71359)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71359)[0m *** SIGSEGV (@0x0) received by PID 71359 (TID 0x7fc5986b1700) from PID 0; stack trace: ***
[2m[36m(pid=71359)[0m     @     0x7fc59828a390 (unknown)
[2m[36m(pid=71437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71437)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71437)[0m *** SIGSEGV (@0x0) received by PID 71437 (TID 0x7f9a909e3700) from PID 0; stack trace: ***
[2m[36m(pid=71437)[0m     @     0x7f9a905bc390 (unknown)
[2m[36m(pid=71370)[0m     @     0x7f21b4776d91 at::TensorIterator::for_each()
[2m[36m(pid=71370)[0m     @     0x7f21b5059b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71370)[0m     @     0x7f21b507cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71370)[0m     @     0x7f21b451ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71370)[0m     @     0x7f21b451c388 at::native::copy_impl()
[2m[36m(pid=71370)[0m     @     0x7f21b451e5a4 at::native::copy_()
[2m[36m(pid=71430)[0m     @     0x7f8837dadc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71430)[0m     @     0x7f883724fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71430)[0m     @     0x7f883724d388 at::native::copy_impl()
[2m[36m(pid=71430)[0m     @     0x7f883724f5a4 at::native::copy_()
[2m[36m(pid=71430)[0m     @     0x7f883793a4f5 at::Tensor::copy_()
[2m[36m(pid=71383)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71383)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71383)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71383)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71383)[0m *** SIGSEGV (@0x0) received by PID 71383 (TID 0x7fee51d45700) from PID 0; stack trace: ***
[2m[36m(pid=71383)[0m     @     0x7fee5191e390 (unknown)
[2m[36m(pid=71489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71489)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71489)[0m *** SIGSEGV (@0x0) received by PID 71489 (TID 0x7fd9eace1700) from PID 0; stack trace: ***
[2m[36m(pid=71373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71373)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71373)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71373)[0m *** SIGSEGV (@0x0) received by PID 71373 (TID 0x7f834fc85700) from PID 0; stack trace: ***
[2m[36m(pid=71373)[0m     @     0x7f834f85e390 (unknown)
[2m[36m(pid=71373)[0m     @     0x7f544f5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71373)[0m     @     0x7f544ed1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71368)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71368)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71368)[0m *** SIGSEGV (@0x0) received by PID 71368 (TID 0x7f5377849700) from PID 0; stack trace: ***
[2m[36m(pid=71368)[0m     @     0x7f5377422390 (unknown)
[2m[36m(pid=71368)[0m     @     0x7f2477229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71368)[0m     @     0x7f24769547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71355)[0m     @     0x7ee3f7202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71355)[0m     @     0x7ee3f7200388 at::native::copy_impl()
[2m[36m(pid=71355)[0m     @     0x7ee3f72025a4 at::native::copy_()
[2m[36m(pid=71355)[0m     @     0x7ee3f78ed4f5 at::Tensor::copy_()
[2m[36m(pid=71355)[0m     @     0x7ee3f9dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71478)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71478)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71478)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71478)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71478)[0m *** SIGSEGV (@0x0) received by PID 71478 (TID 0x7f158a0b3700) from PID 0; stack trace: ***
[2m[36m(pid=71478)[0m     @     0x7f1589c8c390 (unknown)
[2m[36m(pid=71478)[0m     @     0x7ee689c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71478)[0m     @     0x7ee68933c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71478)[0m     @     0x7ee68933f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71374)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71374)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71374)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71374)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71374)[0m *** SIGSEGV (@0x0) received by PID 71374 (TID 0x7f20aa745700) from PID 0; stack trace: ***
[2m[36m(pid=71374)[0m     @     0x7f20aa31e390 (unknown)
[2m[36m(pid=71374)[0m     @     0x7ef1a9f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71374)[0m     @     0x7ef1a96b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71484)[0m     @     0x7f790c894d91 at::TensorIterator::for_each()
[2m[36m(pid=71484)[0m     @     0x7f790d177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71484)[0m     @     0x7f790d19ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71484)[0m     @     0x7f790c63ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71484)[0m     @     0x7f790c63a388 at::native::copy_impl()
[2m[36m(pid=71484)[0m     @     0x7f790c63c5a4 at::native::copy_()
[2m[36m(pid=71423)[0m     @     0x7f11dfd22d91 at::TensorIterator::for_each()
[2m[36m(pid=71423)[0m     @     0x7f11e0605b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71423)[0m     @     0x7f11e0628c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71423)[0m     @     0x7f11dfacaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71423)[0m     @     0x7f11dfac8388 at::native::copy_impl()
[2m[36m(pid=71423)[0m     @     0x7f11dfaca5a4 at::native::copy_()
[2m[36m(pid=71438)[0m     @     0x7f7ceb7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=71438)[0m     @     0x7f7cec0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71438)[0m     @     0x7f7cec101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71438)[0m     @     0x7f7ceb5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71438)[0m     @     0x7f7ceb5a1388 at::native::copy_impl()
[2m[36m(pid=71438)[0m     @     0x7f7ceb5a35a4 at::native::copy_()
[2m[36m(pid=71434)[0m     @     0x7f1c7034dd91 at::TensorIterator::for_each()
[2m[36m(pid=71434)[0m     @     0x7f1c70c30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71434)[0m     @     0x7f1c70c53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71434)[0m     @     0x7f1c700f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71434)[0m     @     0x7f1c700f3388 at::native::copy_impl()
[2m[36m(pid=71434)[0m     @     0x7f1c700f55a4 at::native::copy_()
[2m[36m(pid=71496)[0m     @     0x7f2d09a79d91 at::TensorIterator::for_each()
[2m[36m(pid=71496)[0m     @     0x7f2d0a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71496)[0m     @     0x7f2d0a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71496)[0m     @     0x7f2d09821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71496)[0m     @     0x7f2d0981f388 at::native::copy_impl()
[2m[36m(pid=71496)[0m     @     0x7f2d098215a4 at::native::copy_()
[2m[36m(pid=71431)[0m     @     0x7efd22343d91 at::TensorIterator::for_each()
[2m[36m(pid=71431)[0m     @     0x7efd22c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71431)[0m     @     0x7efd22c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71431)[0m     @     0x7efd220eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71431)[0m     @     0x7efd220e9388 at::native::copy_impl()
[2m[36m(pid=71431)[0m     @     0x7efd220eb5a4 at::native::copy_()
[2m[36m(pid=71482)[0m     @     0x7fcbf8970d91 at::TensorIterator::for_each()
[2m[36m(pid=71482)[0m     @     0x7fcbf9253b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71482)[0m     @     0x7fcbf9276c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71482)[0m     @     0x7fcbf8718a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71482)[0m     @     0x7fcbf8716388 at::native::copy_impl()
[2m[36m(pid=71482)[0m     @     0x7fcbf87185a4 at::native::copy_()
[2m[36m(pid=71419)[0m     @     0x7efbd6957d91 at::TensorIterator::for_each()
[2m[36m(pid=71419)[0m     @     0x7efbd723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71419)[0m     @     0x7efbd725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71419)[0m     @     0x7efbd66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71419)[0m     @     0x7efbd66fd388 at::native::copy_impl()
[2m[36m(pid=71419)[0m     @     0x7efbd66ff5a4 at::native::copy_()
[2m[36m(pid=71464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71464)[0m *** SIGSEGV (@0x0) received by PID 71464 (TID 0x7f0190ab7700) from PID 0; stack trace: ***
[2m[36m(pid=71464)[0m     @     0x7f0190690390 (unknown)
[2m[36m(pid=71464)[0m     @     0x7ed29063af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71464)[0m     @     0x7ed28fd657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71464)[0m     @     0x7ed28fd688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71379)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71379)[0m *** SIGSEGV (@0x0) received by PID 71379 (TID 0x7fddaa952700) from PID 0; stack trace: ***
[2m[36m(pid=71379)[0m     @     0x7fddaa52b390 (unknown)
[2m[36m(pid=71379)[0m     @     0x7faeaa365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71379)[0m     @     0x7faea9a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71379)[0m     @     0x7faea9a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71372)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71372)[0m *** SIGSEGV (@0x0) received by PID 71372 (TID 0x7f24d6747700) from PID 0; stack trace: ***
[2m[36m(pid=71372)[0m     @     0x7f24d6320390 (unknown)
[2m[36m(pid=71372)[0m     @     0x7ef5d62b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71372)[0m     @     0x7ef5d59e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71372)[0m     @     0x7ef5d59e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71356)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71356)[0m *** SIGSEGV (@0x0) received by PID 71356 (TID 0x7f3045bf8700) from PID 0; stack trace: ***
[2m[36m(pid=71356)[0m     @     0x7f30457d1390 (unknown)
[2m[36m(pid=71356)[0m     @     0x7f01454dff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71356)[0m     @     0x7f0144c0a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71356)[0m     @     0x7f0144c0d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71364)[0m     @     0x7f839774ad91 at::TensorIterator::for_each()
[2m[36m(pid=71364)[0m     @     0x7f839802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71364)[0m     @     0x7f8398050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71364)[0m     @     0x7f83974f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71364)[0m     @     0x7f83974f0388 at::native::copy_impl()
[2m[36m(pid=71376)[0m     @     0x7edbe3223d91 at::TensorIterator::for_each()
[2m[36m(pid=71376)[0m     @     0x7edbe3b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71376)[0m     @     0x7edbe3b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71376)[0m     @     0x7edbe2fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71376)[0m     @     0x7edbe2fc9388 at::native::copy_impl()
[2m[36m(pid=71376)[0m     @     0x7edbe2fcb5a4 at::native::copy_()
[2m[36m(pid=71442)[0m     @     0x7ed85e90e388 at::native::copy_impl()
[2m[36m(pid=71442)[0m     @     0x7ed85e9105a4 at::native::copy_()
[2m[36m(pid=71442)[0m     @     0x7ed85effb4f5 at::Tensor::copy_()
[2m[36m(pid=71442)[0m     @     0x7ed8614ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71442)[0m     @     0x7ed85effb4f5 at::Tensor::copy_()
[2m[36m(pid=71442)[0m     @     0x7ed8650a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71442)[0m     @     0x56162e0effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71463)[0m     @     0x7f24870a3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71463)[0m     @     0x7f24870c6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71463)[0m     @     0x7f2486568a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71463)[0m     @     0x7f2486566388 at::native::copy_impl()
[2m[36m(pid=71463)[0m     @     0x7f24865685a4 at::native::copy_()
[2m[36m(pid=71371)[0m     @     0x7f9d43539d91 at::TensorIterator::for_each()
[2m[36m(pid=71371)[0m     @     0x7f9d43e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71371)[0m     @     0x7f9d43e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71371)[0m     @     0x7f9d432e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71371)[0m     @     0x7f9d432df388 at::native::copy_impl()
[2m[36m(pid=71371)[0m     @     0x7f9d432e15a4 at::native::copy_()
[2m[36m(pid=71433)[0m     @     0x7f8d91e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71433)[0m     @     0x7f8d91e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71433)[0m     @     0x7f8d912cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71433)[0m     @     0x7f8d912cb388 at::native::copy_impl()
[2m[36m(pid=71433)[0m     @     0x7f8d912cd5a4 at::native::copy_()
[2m[36m(pid=71465)[0m     @     0x7eec90eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71465)[0m     @     0x7eec90ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71465)[0m     @     0x7eec9037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71465)[0m     @     0x7eec90378388 at::native::copy_impl()
[2m[36m(pid=71465)[0m     @     0x7eec9037a5a4 at::native::copy_()
[2m[36m(pid=71486)[0m     @     0x7f10e8417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71486)[0m     @     0x7f10e78b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71486)[0m     @     0x7f10e78b7388 at::native::copy_impl()
[2m[36m(pid=71486)[0m     @     0x7f10e78b95a4 at::native::copy_()
[2m[36m(pid=71486)[0m     @     0x7f10e7fa44f5 at::Tensor::copy_()
[2m[36m(pid=71354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71354)[0m *** SIGSEGV (@0x0) received by PID 71354 (TID 0x7f406bd7a700) from PID 0; stack trace: ***
[2m[36m(pid=71354)[0m     @     0x7f406b953390 (unknown)
[2m[36m(pid=71354)[0m     @     0x7f116b90df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71354)[0m     @     0x7f116b0387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71354)[0m     @     0x7f116b03b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71476)[0m     @     0x7ed02f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71476)[0m     @     0x7ed02f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71476)[0m     @     0x7ed02edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71476)[0m     @     0x7ed02edb2388 at::native::copy_impl()
[2m[36m(pid=71476)[0m     @     0x7ed02edb45a4 at::native::copy_()
[2m[36m(pid=71470)[0m     @     0x7f70e4da2d91 at::TensorIterator::for_each()
[2m[36m(pid=71470)[0m     @     0x7f70e5685b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71470)[0m     @     0x7f70e56a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71470)[0m     @     0x7f70e4b4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71470)[0m     @     0x7f70e4b48388 at::native::copy_impl()
[2m[36m(pid=71470)[0m     @     0x7f70e4b4a5a4 at::native::copy_()
[2m[36m(pid=71424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71424)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71424)[0m *** SIGSEGV (@0x0) received by PID 71424 (TID 0x7f00044ae700) from PID 0; stack trace: ***
[2m[36m(pid=71358)[0m     @     0x7eea5c974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71358)[0m     @     0x7eea5be16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71358)[0m     @     0x7eea5be14388 at::native::copy_impl()
[2m[36m(pid=71358)[0m     @     0x7eea5be165a4 at::native::copy_()
[2m[36m(pid=71456)[0m     @     0x7fa2a0367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71456)[0m     @     0x7fa29f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71456)[0m     @     0x7fa29f807388 at::native::copy_impl()
[2m[36m(pid=71456)[0m     @     0x7fa29f8095a4 at::native::copy_()
[2m[36m(pid=71417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71417)[0m *** SIGSEGV (@0x0) received by PID 71417 (TID 0x7f9b569d1700) from PID 0; stack trace: ***
[2m[36m(pid=71417)[0m     @     0x7f9b565aa390 (unknown)
[2m[36m(pid=71426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71426)[0m *** SIGSEGV (@0x0) received by PID 71426 (TID 0x7f3d6cf4b700) from PID 0; stack trace: ***
[2m[36m(pid=71426)[0m     @     0x7f3d6cb24390 (unknown)
[2m[36m(pid=71426)[0m     @     0x7f0e6c9e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71426)[0m     @     0x7f0e6c1137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71427)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71427)[0m *** SIGSEGV (@0x0) received by PID 71427 (TID 0x7f93d002e700) from PID 0; stack trace: ***
[2m[36m(pid=71427)[0m     @     0x7f93cfc07390 (unknown)
[2m[36m(pid=71427)[0m     @     0x7f64cfaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71427)[0m     @     0x7f64cf2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71427)[0m     @     0x7f64cf2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71425)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71425)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71425)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71352)[0m *** SIGSEGV (@0x0) received by PID 71352 (TID 0x7f435def7700) from PID 0; stack trace: ***
[2m[36m(pid=71352)[0m     @     0x7f435dad0390 (unknown)
[2m[36m(pid=71352)[0m     @     0x7f145da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71352)[0m     @     0x7f145d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71436)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71436)[0m *** SIGSEGV (@0x0) received by PID 71436 (TID 0x7fd61000c700) from PID 0; stack trace: ***
[2m[36m(pid=71436)[0m     @     0x7fd60fbe5390 (unknown)
[2m[36m(pid=71436)[0m     @     0x7fa70f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71436)[0m     @     0x7fa70f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71360)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71360)[0m *** SIGSEGV (@0x0) received by PID 71360 (TID 0x7f73dad4f700) from PID 0; stack trace: ***
[2m[36m(pid=71360)[0m     @     0x7f73da928390 (unknown)
[2m[36m(pid=71360)[0m     @     0x7f44da8baf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71474)[0m     @     0x7fb7190b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71474)[0m     @     0x7fb7187e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71474)[0m     @     0x7fb7187e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71474)[0m     @     0x7fb7187e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=71492)[0m     @     0x7fa95191f390 (unknown)
[2m[36m(pid=71492)[0m     @     0x7f7a517f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71492)[0m     @     0x7f7a50f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71492)[0m     @     0x7f7a50f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71440)[0m     @     0x7f46d8d74390 (unknown)
[2m[36m(pid=71440)[0m     @     0x7f17d8c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71440)[0m     @     0x7f17d839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71440)[0m     @     0x7f17d83a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71362)[0m     @     0x7fbac5385390 (unknown)
[2m[36m(pid=71362)[0m     @     0x7f8bc530af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71362)[0m     @     0x7f8bc4a357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71362)[0m     @     0x7f8bc4a388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71366)[0m     @     0x7f81fe601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71366)[0m     @     0x7f81fdd2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71366)[0m     @     0x7f81fdd2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71366)[0m     @     0x7f81fdd2fad3 at::TensorIterator::for_each()
[2m[36m(pid=71487)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71487)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71487)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71487)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71487)[0m *** SIGSEGV (@0x0) received by PID 71487 (TID 0x7f05b126e700) from PID 0; stack trace: ***
[2m[36m(pid=71487)[0m     @     0x7f05b0e47390 (unknown)
[2m[36m(pid=71367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=71367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=71367)[0m *** Aborted at 1604573565 (unix time) try "date -d @1604573565" if you are using GNU date ***
[2m[36m(pid=71367)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71367)[0m *** SIGSEGV (@0x0) received by PID 71367 (TID 0x7ff30d8af700) from PID 0; stack trace: ***
[2m[36m(pid=71367)[0m     @     0x7ff30d488390 (unknown)
[2m[36m(pid=71367)[0m     @     0x7fc40d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71367)[0m     @     0x7fc40caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71410)[0m     @     0x7f59801648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71410)[0m     @     0x7f5980164ad3 at::TensorIterator::for_each()
[2m[36m(pid=71410)[0m     @     0x7f5980164d91 at::TensorIterator::for_each()
[2m[36m(pid=71435)[0m     @     0x7f8eb8175390 (unknown)
[2m[36m(pid=71435)[0m     @     0x7f5fb80cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71435)[0m     @     0x7f5fb77f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71435)[0m     @     0x7f5fb77fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71422)[0m     @     0x7f47985cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71422)[0m     @     0x7f47985cd388 at::native::copy_impl()
[2m[36m(pid=71422)[0m     @     0x7f47985cf5a4 at::native::copy_()
[2m[36m(pid=71384)[0m     @     0x7ed0e4efb4f5 at::Tensor::copy_()
[2m[36m(pid=71384)[0m     @     0x7ed0e73ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71384)[0m     @     0x7ed0e4efb4f5 at::Tensor::copy_()
[2m[36m(pid=71384)[0m     @     0x7ed0eafa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71384)[0m     @     0x55befdb33fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71384)[0m     @     0x55befda8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71384)[0m     @     0x55befdb19baf _PyEval_EvalCodeWithName
[2m[36m(pid=71384)[0m     @     0x55befdb1aa20 method_vectorcall
[2m[36m(pid=71384)[0m     @     0x55befda8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71384)[0m     @     0x55befdb19baf _PyEval_EvalCodeWithName
[2m[36m(pid=71384)[0m     @     0x55befdb1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71384)[0m     @     0x55befda8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71384)[0m     @     0x55befdb19baf _PyEval_EvalCodeWithName
[2m[36m(pid=71384)[0m     @     0x55befdb1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71384)[0m     @     0x55befda8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71384)[0m     @     0x55befdb19baf _PyEval_EvalCodeWithName
[2m[36m(pid=71384)[0m     @     0x55befdb1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71384)[0m     @     0x55befda8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71384)[0m     @     0x55befdb19baf _PyEval_EvalCodeWithName
[2m[36m(pid=71384)[0m     @     0x55befdb1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71384)[0m     @     0x55befda8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x7f3bb65faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71451)[0m     @     0x7f3bb65f8388 at::native::copy_impl()
[2m[36m(pid=71451)[0m     @     0x7f3bb65fa5a4 at::native::copy_()
[2m[36m(pid=71466)[0m     @     0x7ee5b6568a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71466)[0m     @     0x7ee5b6566388 at::native::copy_impl()
[2m[36m(pid=71466)[0m     @     0x7ee5b65685a4 at::native::copy_()
[2m[36m(pid=71493)[0m     @     0x7f13bceabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71493)[0m     @     0x7f13bc34da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71493)[0m     @     0x7f13bc34b388 at::native::copy_impl()
[2m[36m(pid=71493)[0m     @     0x7f13bc34d5a4 at::native::copy_()
[2m[36m(pid=71421)[0m     @     0x7f4a2ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71421)[0m     @     0x7f4a2e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71421)[0m     @     0x7f4a2e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71421)[0m     @     0x7f4a2e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=71454)[0m     @     0x7fb7134338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71454)[0m     @     0x7fb710f604f5 at::Tensor::copy_()
[2m[36m(pid=71454)[0m     @     0x7fb71700b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71454)[0m     @     0x56055b651fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71454)[0m     @     0x56055b5acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71454)[0m     @     0x56055b637baf _PyEval_EvalCodeWithName
[2m[36m(pid=71454)[0m     @     0x56055b638a20 method_vectorcall
[2m[36m(pid=71454)[0m     @     0x56055b5acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71454)[0m     @     0x56055b637baf _PyEval_EvalCodeWithName
[2m[36m(pid=71454)[0m     @     0x56055b638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71454)[0m     @     0x56055b5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71454)[0m     @     0x56055b637baf _PyEval_EvalCodeWithName
[2m[36m(pid=71454)[0m     @     0x56055b638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71454)[0m     @     0x56055b5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71454)[0m     @     0x56055b637baf _PyEval_EvalCodeWithName
[2m[36m(pid=71454)[0m     @     0x56055b638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71454)[0m     @     0x56055b5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71454)[0m     @     0x56055b637baf _PyEval_EvalCodeWithName
[2m[36m(pid=71454)[0m     @     0x56055b638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71454)[0m     @     0x56055b5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x7fa8a1ee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71353)[0m     @     0x7fa8a1ee7388 at::native::copy_impl()
[2m[36m(pid=71353)[0m     @     0x7fa8a1ee95a4 at::native::copy_()
[2m[36m(pid=71381)[0m     @     0x7f82b3179f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71381)[0m     @     0x7f82b28a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71381)[0m     @     0x7f82b28a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71381)[0m     @     0x7f82b28a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=71459)[0m     @     0x7f89323e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71459)[0m     @     0x7f89323e7388 at::native::copy_impl()
[2m[36m(pid=71459)[0m     @     0x7f89323e95a4 at::native::copy_()
[2m[36m(pid=71495)[0m     @     0x7f1fe44f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71495)[0m     @     0x7f1fe44f7388 at::native::copy_impl()
[2m[36m(pid=71495)[0m     @     0x7f1fe44f95a4 at::native::copy_()
[2m[36m(pid=71414)[0m     @     0x7f4b74f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71414)[0m     @     0x7f4b74f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=71414)[0m     @     0x7f4b74f27d91 at::TensorIterator::for_each()
[2m[36m(pid=71414)[0m     @     0x7f4b7580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71414)[0m     @     0x7f4b7582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71378)[0m     @     0x7f2a282f3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71378)[0m     @     0x7f2a27a1e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71378)[0m     @     0x7f2a27a218f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71378)[0m     @     0x7f2a27a21ad3 at::TensorIterator::for_each()
[2m[36m(pid=71378)[0m     @     0x7f2a27a21d91 at::TensorIterator::for_each()
[2m[36m(pid=71428)[0m *** SIGSEGV (@0x0) received by PID 71428 (TID 0x7fb7dcbbc700) from PID 0; stack trace: ***
[2m[36m(pid=71428)[0m     @     0x7fb7dc795390 (unknown)
[2m[36m(pid=71428)[0m     @     0x7f88dc60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71428)[0m     @     0x7f88dbd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71428)[0m     @     0x7f88dbd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71428)[0m     @     0x7f88dbd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=71351)[0m     @     0x7f25107e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71351)[0m     @     0x7f25107e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71351)[0m     @     0x7f25107e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=71351)[0m     @     0x7f25107e3d91 at::TensorIterator::for_each()
[2m[36m(pid=71351)[0m     @     0x7f25110c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71429)[0m     @     0x7f888eb39390 (unknown)
[2m[36m(pid=71429)[0m     @     0x7f598e9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71429)[0m     @     0x7f598e0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71429)[0m     @     0x7f598e0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71429)[0m     @     0x7f598e0faad3 at::TensorIterator::for_each()
[2m[36m(pid=71415)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71415)[0m *** SIGSEGV (@0x0) received by PID 71415 (TID 0x7fb433b84700) from PID 0; stack trace: ***
[2m[36m(pid=71415)[0m     @     0x7fb43375d390 (unknown)
[2m[36m(pid=71415)[0m     @     0x7f853361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71415)[0m     @     0x7f8532d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71415)[0m     @     0x7f8532d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71443)[0m *** SIGSEGV (@0x0) received by PID 71443 (TID 0x7f1c4cce5700) from PID 0; stack trace: ***
[2m[36m(pid=71443)[0m     @     0x7f1c4c8be390 (unknown)
[2m[36m(pid=71443)[0m     @     0x7eed4c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71443)[0m     @     0x7eed4bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71443)[0m     @     0x7eed4bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71467)[0m     @     0x7f56450d4390 (unknown)
[2m[36m(pid=71467)[0m     @     0x7f2745075f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71467)[0m     @     0x7f27447a07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71467)[0m     @     0x7f27447a38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71467)[0m     @     0x7f27447a3ad3 at::TensorIterator::for_each()
[2m[36m(pid=71357)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71357)[0m *** SIGSEGV (@0x0) received by PID 71357 (TID 0x7f48f2c89700) from PID 0; stack trace: ***
[2m[36m(pid=71357)[0m     @     0x7f48f2862390 (unknown)
[2m[36m(pid=71357)[0m     @     0x7f19f27bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71357)[0m     @     0x7f19f1ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71357)[0m     @     0x7f19f1ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71377)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71377)[0m *** SIGSEGV (@0x0) received by PID 71377 (TID 0x7fc8f5592700) from PID 0; stack trace: ***
[2m[36m(pid=71377)[0m     @     0x7fc8f516b390 (unknown)
[2m[36m(pid=71377)[0m     @     0x7f99f50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71377)[0m     @     0x7f99f47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71377)[0m     @     0x7f99f47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71413)[0m *** SIGSEGV (@0x0) received by PID 71413 (TID 0x7f6d7ae1d700) from PID 0; stack trace: ***
[2m[36m(pid=71413)[0m     @     0x7f6d7a9f6390 (unknown)
[2m[36m(pid=71413)[0m     @     0x7f3e7a99ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71413)[0m     @     0x7f3e7a0ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71413)[0m     @     0x7f3e7a0cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71365)[0m     @     0x7fd63c732390 (unknown)
[2m[36m(pid=71365)[0m     @     0x7fa73c6dff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71365)[0m     @     0x7fa73be0a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71365)[0m     @     0x7fa73be0d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71365)[0m     @     0x7fa73be0dad3 at::TensorIterator::for_each()
[2m[36m(pid=71432)[0m     @     0x7fbeb5821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71432)[0m     @     0x7fbeb581f388 at::native::copy_impl()
[2m[36m(pid=71432)[0m     @     0x7fbeb58215a4 at::native::copy_()
[2m[36m(pid=71432)[0m     @     0x7fbeb5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=71432)[0m     @     0x7fbeb83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71375)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71375)[0m *** SIGSEGV (@0x0) received by PID 71375 (TID 0x7f84c6554700) from PID 0; stack trace: ***
[2m[36m(pid=71375)[0m     @     0x7f84c612d390 (unknown)
[2m[36m(pid=71375)[0m     @     0x7f55c60cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71375)[0m     @     0x7f55c57f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71375)[0m     @     0x7f55c57fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71363)[0m     @     0x7f901dc408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71363)[0m     @     0x7f901dc40ad3 at::TensorIterator::for_each()
[2m[36m(pid=71363)[0m     @     0x7f901dc40d91 at::TensorIterator::for_each()
[2m[36m(pid=71363)[0m     @     0x7f901e523b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71363)[0m     @     0x7f901e546c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71359)[0m     @     0x7f9698221f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71359)[0m     @     0x7f969794c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71359)[0m     @     0x7f969794f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71359)[0m     @     0x7f969794fad3 at::TensorIterator::for_each()
[2m[36m(pid=71437)[0m     @     0x7f6b90536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71437)[0m     @     0x7f6b8fc617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71437)[0m     @     0x7f6b8fc648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71370)[0m     @     0x7f21b4c094f5 at::Tensor::copy_()
[2m[36m(pid=71370)[0m     @     0x7f21b70dc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71430)[0m     @     0x7f8839e0d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71430)[0m     @     0x7f883793a4f5 at::Tensor::copy_()
[2m[36m(pid=71430)[0m     @     0x7f883d9e579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71430)[0m     @     0x55d2bd59bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71430)[0m     @     0x55d2bd4f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71430)[0m     @     0x55d2bd581baf _PyEval_EvalCodeWithName
[2m[36m(pid=71430)[0m     @     0x55d2bd582a20 method_vectorcall
[2m[36m(pid=71430)[0m     @     0x55d2bd4f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71430)[0m     @     0x55d2bd581baf _PyEval_EvalCodeWithName
[2m[36m(pid=71430)[0m     @     0x55d2bd582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71430)[0m     @     0x55d2bd4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71430)[0m     @     0x55d2bd581baf _PyEval_EvalCodeWithName
[2m[36m(pid=71430)[0m     @     0x55d2bd582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71430)[0m     @     0x55d2bd4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71430)[0m     @     0x55d2bd581baf _PyEval_EvalCodeWithName
[2m[36m(pid=71430)[0m     @     0x55d2bd582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71430)[0m     @     0x55d2bd4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71430)[0m     @     0x55d2bd581baf _PyEval_EvalCodeWithName
[2m[36m(pid=71430)[0m     @     0x55d2bd582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71430)[0m     @     0x55d2bd4f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x7fbf517f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71383)[0m     @     0x7fbf50f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71383)[0m     @     0x7fbf50f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71489)[0m     @     0x7fd9ea8ba390 (unknown)
[2m[36m(pid=71489)[0m     @     0x7faaea70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71489)[0m     @     0x7faae9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71489)[0m     @     0x7faae9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71373)[0m     @     0x7f544ed1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71373)[0m     @     0x7f544ed1dad3 at::TensorIterator::for_each()
[2m[36m(pid=71368)[0m     @     0x7f24769578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71368)[0m     @     0x7f2476957ad3 at::TensorIterator::for_each()
[2m[36m(pid=71368)[0m     @     0x7f2476957d91 at::TensorIterator::for_each()
[2m[36m(pid=71355)[0m     @     0x7ee3f78ed4f5 at::Tensor::copy_()
[2m[36m(pid=71355)[0m     @     0x7ee3fd99879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71355)[0m     @     0x560ae79cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71355)[0m     @     0x560ae7926b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71355)[0m     @     0x560ae79b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71355)[0m     @     0x560ae79b2a20 method_vectorcall
[2m[36m(pid=71355)[0m     @     0x560ae7926bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71355)[0m     @     0x560ae79b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71355)[0m     @     0x560ae79b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71355)[0m     @     0x560ae7927689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71355)[0m     @     0x560ae79b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71355)[0m     @     0x560ae79b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71355)[0m     @     0x560ae7927689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71355)[0m     @     0x560ae79b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71355)[0m     @     0x560ae79b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71355)[0m     @     0x560ae7927689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71355)[0m     @     0x560ae79b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71355)[0m     @     0x560ae79b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71355)[0m     @     0x560ae7927689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x7ee68933fad3 at::TensorIterator::for_each()
[2m[36m(pid=71478)[0m     @     0x7ee68933fd91 at::TensorIterator::for_each()
[2m[36m(pid=71478)[0m     @     0x7ee689c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71374)[0m     @     0x7ef1a96bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71374)[0m     @     0x7ef1a96bbad3 at::TensorIterator::for_each()
[2m[36m(pid=71484)[0m     @     0x7f790cd274f5 at::Tensor::copy_()
[2m[36m(pid=71484)[0m     @     0x7f790f1fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71484)[0m     @     0x7f790cd274f5 at::Tensor::copy_()
[2m[36m(pid=71423)[0m     @     0x7f11e01b54f5 at::Tensor::copy_()
[2m[36m(pid=71423)[0m     @     0x7f11e26888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71423)[0m     @     0x7f11e01b54f5 at::Tensor::copy_()
[2m[36m(pid=71438)[0m     @     0x7f7cebc8e4f5 at::Tensor::copy_()
[2m[36m(pid=71438)[0m     @     0x7f7cee1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71434)[0m     @     0x7f1c707e04f5 at::Tensor::copy_()
[2m[36m(pid=71434)[0m     @     0x7f1c72cb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71434)[0m     @     0x7f1c707e04f5 at::Tensor::copy_()
[2m[36m(pid=71496)[0m     @     0x7f2d09f0c4f5 at::Tensor::copy_()
[2m[36m(pid=71496)[0m     @     0x7f2d0c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71496)[0m     @     0x7f2d09f0c4f5 at::Tensor::copy_()
[2m[36m(pid=71496)[0m     @     0x7f2d0ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71496)[0m     @     0x55da82154fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71496)[0m     @     0x55da820afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71496)[0m     @     0x55da8213abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71496)[0m     @     0x55da8213ba20 method_vectorcall
[2m[36m(pid=71496)[0m     @     0x55da820afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71496)[0m     @     0x55da8213abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71496)[0m     @     0x55da8213b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71496)[0m     @     0x55da820b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71496)[0m     @     0x55da8213abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71496)[0m     @     0x55da8213b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71496)[0m     @     0x55da820b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71496)[0m     @     0x55da8213abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71496)[0m     @     0x55da8213b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71496)[0m     @     0x55da820b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71496)[0m     @     0x55da8213abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71496)[0m     @     0x55da8213b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71496)[0m     @     0x55da820b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x7efd227d64f5 at::Tensor::copy_()
[2m[36m(pid=71431)[0m     @     0x7efd24ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71431)[0m     @     0x7efd227d64f5 at::Tensor::copy_()
[2m[36m(pid=71431)[0m     @     0x7efd2847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71431)[0m     @     0x55d2a0a9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71431)[0m     @     0x55d2a09f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x55d2a0a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=71431)[0m     @     0x55d2a0a82a20 method_vectorcall
[2m[36m(pid=71431)[0m     @     0x55d2a09f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x55d2a0a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=71431)[0m     @     0x55d2a0a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71431)[0m     @     0x55d2a09f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x55d2a0a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=71431)[0m     @     0x55d2a0a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71431)[0m     @     0x55d2a09f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x55d2a0a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=71431)[0m     @     0x55d2a0a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71431)[0m     @     0x55d2a09f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71431)[0m     @     0x55d2a0a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=71431)[0m     @     0x55d2a0a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71431)[0m     @     0x55d2a09f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x7fcbf8e034f5 at::Tensor::copy_()
[2m[36m(pid=71482)[0m     @     0x7fcbfb2d68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71482)[0m     @     0x7fcbf8e034f5 at::Tensor::copy_()
[2m[36m(pid=71482)[0m     @     0x7fcbfeeae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71482)[0m     @     0x56416b9e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71482)[0m     @     0x56416b944b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x56416b9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71482)[0m     @     0x56416b9d0a20 method_vectorcall
[2m[36m(pid=71482)[0m     @     0x56416b944bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x56416b9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71482)[0m     @     0x56416b9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71482)[0m     @     0x56416b945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x56416b9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71482)[0m     @     0x56416b9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71482)[0m     @     0x56416b945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x56416b9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71482)[0m     @     0x56416b9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71482)[0m     @     0x56416b945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71482)[0m     @     0x56416b9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71482)[0m     @     0x56416b9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71482)[0m     @     0x56416b945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x7efbd6dea4f5 at::Tensor::copy_()
[2m[36m(pid=71419)[0m     @     0x7efbd92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71419)[0m     @     0x7efbd6dea4f5 at::Tensor::copy_()
[2m[36m(pid=71419)[0m     @     0x7efbdce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71419)[0m     @     0x5648380c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71419)[0m     @     0x564838024b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x5648380afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71419)[0m     @     0x5648380b0a20 method_vectorcall
[2m[36m(pid=71419)[0m     @     0x564838024bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x5648380afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71419)[0m     @     0x5648380b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71419)[0m     @     0x564838025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x5648380afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71419)[0m     @     0x5648380b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71419)[0m     @     0x564838025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x5648380afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71419)[0m     @     0x5648380b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71419)[0m     @     0x564838025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71419)[0m     @     0x5648380afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71419)[0m     @     0x5648380b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71419)[0m     @     0x564838025689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x7ed28fd68ad3 at::TensorIterator::for_each()
[2m[36m(pid=71464)[0m     @     0x7ed28fd68d91 at::TensorIterator::for_each()
[2m[36m(pid=71464)[0m     @     0x7ed29064bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71464)[0m     @     0x7ed29066ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71464)[0m     @     0x7ed28fb10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71464)[0m     @     0x7ed28fb0e388 at::native::copy_impl()
[2m[36m(pid=71379)[0m     @     0x7faea9a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=71379)[0m     @     0x7faea9a93d91 at::TensorIterator::for_each()
[2m[36m(pid=71379)[0m     @     0x7faeaa376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71379)[0m     @     0x7faeaa399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71372)[0m     @     0x7ef5d59e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=71372)[0m     @     0x7ef5d59e7d91 at::TensorIterator::for_each()
[2m[36m(pid=71372)[0m     @     0x7ef5d62cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71372)[0m     @     0x7ef5d62edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71372)[0m     @     0x7ef5d578fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71372)[0m     @     0x7ef5d578d388 at::native::copy_impl()
[2m[36m(pid=71356)[0m     @     0x7f0144c0dad3 at::TensorIterator::for_each()
[2m[36m(pid=71356)[0m     @     0x7f0144c0dd91 at::TensorIterator::for_each()
[2m[36m(pid=71356)[0m     @     0x7f01454f0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71356)[0m     @     0x7f0145513c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71356)[0m     @     0x7f01449b5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71356)[0m     @     0x7f01449b3388 at::native::copy_impl()
[2m[36m(pid=71364)[0m     @     0x7f83974f25a4 at::native::copy_()
[2m[36m(pid=71364)[0m     @     0x7f8397bdd4f5 at::Tensor::copy_()
[2m[36m(pid=71364)[0m     @     0x7f839a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71364)[0m     @     0x7f8397bdd4f5 at::Tensor::copy_()
[2m[36m(pid=71364)[0m     @     0x7f839dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71364)[0m     @     0x55866c54dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71364)[0m     @     0x55866c4a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71364)[0m     @     0x55866c533baf _PyEval_EvalCodeWithName
[2m[36m(pid=71364)[0m     @     0x55866c534a20 method_vectorcall
[2m[36m(pid=71364)[0m     @     0x55866c4a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71364)[0m     @     0x55866c533baf _PyEval_EvalCodeWithName
[2m[36m(pid=71364)[0m     @     0x55866c534643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71364)[0m     @     0x55866c4a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71364)[0m     @     0x55866c533baf _PyEval_EvalCodeWithName
[2m[36m(pid=71364)[0m     @     0x55866c534643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71364)[0m     @     0x55866c4a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71364)[0m     @     0x55866c533baf _PyEval_EvalCodeWithName
[2m[36m(pid=71364)[0m     @     0x55866c534643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71364)[0m     @     0x55866c4a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71364)[0m     @     0x55866c533baf _PyEval_EvalCodeWithName
[2m[36m(pid=71364)[0m     @     0x55866c534643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71364)[0m     @     0x55866c4a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x7edbe36b64f5 at::Tensor::copy_()
[2m[36m(pid=71376)[0m     @     0x7edbe5b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71376)[0m     @     0x7edbe36b64f5 at::Tensor::copy_()
[2m[36m(pid=71376)[0m     @     0x7edbe976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71376)[0m     @     0x564ae40ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71376)[0m     @     0x564ae4038b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x564ae40c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71376)[0m     @     0x564ae40c4a20 method_vectorcall
[2m[36m(pid=71376)[0m     @     0x564ae4038bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x564ae40c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71376)[0m     @     0x564ae40c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71376)[0m     @     0x564ae4039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x564ae40c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71376)[0m     @     0x564ae40c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71376)[0m     @     0x564ae4039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x564ae40c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71376)[0m     @     0x564ae40c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71376)[0m     @     0x564ae4039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71376)[0m     @     0x564ae40c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71376)[0m     @     0x564ae40c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71376)[0m     @     0x564ae4039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e04ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71442)[0m     @     0x56162e0d6a20 method_vectorcall
[2m[36m(pid=71442)[0m     @     0x56162e04abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71442)[0m     @     0x56162e0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71442)[0m     @     0x56162e04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71442)[0m     @     0x56162e0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71442)[0m     @     0x56162e04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71442)[0m     @     0x56162e0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71442)[0m     @     0x56162e04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71442)[0m     @     0x56162e0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71442)[0m     @     0x56162e0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71442)[0m     @     0x56162e04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x7f2486c534f5 at::Tensor::copy_()
[2m[36m(pid=71463)[0m     @     0x7f24891268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71463)[0m     @     0x7f2486c534f5 at::Tensor::copy_()
[2m[36m(pid=71463)[0m     @     0x7f248ccfe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71463)[0m     @     0x55a756858fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71463)[0m     @     0x55a7567b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x55a75683ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71463)[0m     @     0x55a75683fa20 method_vectorcall
[2m[36m(pid=71463)[0m     @     0x55a7567b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x55a75683ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71463)[0m     @     0x55a75683f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71463)[0m     @     0x55a7567b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x55a75683ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71463)[0m     @     0x55a75683f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71463)[0m     @     0x55a7567b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x55a75683ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71463)[0m     @     0x55a75683f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71463)[0m     @     0x55a7567b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71463)[0m     @     0x55a75683ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71463)[0m     @     0x55a75683f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71463)[0m     @     0x55a7567b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x7f9d439cc4f5 at::Tensor::copy_()
[2m[36m(pid=71371)[0m     @     0x7f9d45e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71371)[0m     @     0x7f9d439cc4f5 at::Tensor::copy_()
[2m[36m(pid=71371)[0m     @     0x7f9d49a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71371)[0m     @     0x5613c1e25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71371)[0m     @     0x5613c1d80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x5613c1e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71371)[0m     @     0x5613c1e0ca20 method_vectorcall
[2m[36m(pid=71371)[0m     @     0x5613c1d80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x5613c1e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71371)[0m     @     0x5613c1e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71371)[0m     @     0x5613c1d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x5613c1e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71371)[0m     @     0x5613c1e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71371)[0m     @     0x5613c1d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x5613c1e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71371)[0m     @     0x5613c1e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71371)[0m     @     0x5613c1d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71371)[0m     @     0x5613c1e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71371)[0m     @     0x5613c1e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71371)[0m     @     0x5613c1d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x7f8d919b84f5 at::Tensor::copy_()
[2m[36m(pid=71433)[0m     @     0x7f8d93e8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71433)[0m     @     0x7f8d919b84f5 at::Tensor::copy_()
[2m[36m(pid=71433)[0m     @     0x7f8d97a6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71433)[0m     @     0x55723d7cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71433)[0m     @     0x55723d726b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x55723d7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71433)[0m     @     0x55723d7b2a20 method_vectorcall
[2m[36m(pid=71433)[0m     @     0x55723d726bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x55723d7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71433)[0m     @     0x55723d7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71433)[0m     @     0x55723d727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x55723d7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71433)[0m     @     0x55723d7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71433)[0m     @     0x55723d727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x55723d7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71433)[0m     @     0x55723d7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71433)[0m     @     0x55723d727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71433)[0m     @     0x55723d7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=71433)[0m     @     0x55723d7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71433)[0m     @     0x55723d727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x7eec90a654f5 at::Tensor::copy_()
[2m[36m(pid=71465)[0m     @     0x7eec92f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71465)[0m     @     0x7eec90a654f5 at::Tensor::copy_()
[2m[36m(pid=71465)[0m     @     0x7eec96b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71465)[0m     @     0x562e639e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71465)[0m     @     0x562e6393bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x562e639c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71465)[0m     @     0x562e639c7a20 method_vectorcall
[2m[36m(pid=71465)[0m     @     0x562e6393bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x562e639c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71465)[0m     @     0x562e639c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71465)[0m     @     0x562e6393c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x562e639c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71465)[0m     @     0x562e639c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71465)[0m     @     0x562e6393c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x562e639c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71465)[0m     @     0x562e639c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71465)[0m     @     0x562e6393c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71465)[0m     @     0x562e639c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71465)[0m     @     0x562e639c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71465)[0m     @     0x562e6393c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x7f10ea4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71486)[0m     @     0x7f10e7fa44f5 at::Tensor::copy_()
[2m[36m(pid=71486)[0m     @     0x7f10ee04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71486)[0m     @     0x5579c5486fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71486)[0m     @     0x5579c53e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x5579c546cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71486)[0m     @     0x5579c546da20 method_vectorcall
[2m[36m(pid=71486)[0m     @     0x5579c53e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x5579c546cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71486)[0m     @     0x5579c546d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71486)[0m     @     0x5579c53e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x5579c546cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71486)[0m     @     0x5579c546d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71486)[0m     @     0x5579c53e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x5579c546cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71486)[0m     @     0x5579c546d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71486)[0m     @     0x5579c53e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71486)[0m     @     0x5579c546cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71486)[0m     @     0x5579c546d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71486)[0m     @     0x5579c53e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x7f116b03bad3 at::TensorIterator::for_each()
[2m[36m(pid=71354)[0m     @     0x7f116b03bd91 at::TensorIterator::for_each()
[2m[36m(pid=71354)[0m     @     0x7f116b91eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71354)[0m     @     0x7f116b941c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71354)[0m     @     0x7f116ade3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71354)[0m     @     0x7f116ade1388 at::native::copy_impl()
[2m[36m(pid=71354)[0m     @     0x7f116ade35a4 at::native::copy_()
[2m[36m(pid=71476)[0m     @     0x7ed02f49f4f5 at::Tensor::copy_()
[2m[36m(pid=71476)[0m     @     0x7ed0319728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71476)[0m     @     0x7ed02f49f4f5 at::Tensor::copy_()
[2m[36m(pid=71476)[0m     @     0x7ed03554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71476)[0m     @     0x55f52cdddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71476)[0m     @     0x55f52cd38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71476)[0m     @     0x55f52cdc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71476)[0m     @     0x55f52cdc4a20 method_vectorcall
[2m[36m(pid=71476)[0m     @     0x55f52cd38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71476)[0m     @     0x55f52cdc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71476)[0m     @     0x55f52cdc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71476)[0m     @     0x55f52cd39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71476)[0m     @     0x55f52cdc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71476)[0m     @     0x55f52cdc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71476)[0m     @     0x55f52cd39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71476)[0m     @     0x55f52cdc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71476)[0m     @     0x55f52cdc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71476)[0m     @     0x55f52cd39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71476)[0m     @     0x55f52cdc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=71476)[0m     @     0x55f52cdc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71476)[0m     @     0x55f52cd39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x7f70e52354f5 at::Tensor::copy_()
[2m[36m(pid=71470)[0m     @     0x7f70e77088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71470)[0m     @     0x7f70e52354f5 at::Tensor::copy_()
[2m[36m(pid=71470)[0m     @     0x7f70eb2e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71470)[0m     @     0x55a5b7b6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71470)[0m     @     0x55a5b7acab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x55a5b7b55baf _PyEval_EvalCodeWithName
[2m[36m(pid=71470)[0m     @     0x55a5b7b56a20 method_vectorcall
[2m[36m(pid=71470)[0m     @     0x55a5b7acabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x55a5b7b55baf _PyEval_EvalCodeWithName
[2m[36m(pid=71470)[0m     @     0x55a5b7b56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71470)[0m     @     0x55a5b7acb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x55a5b7b55baf _PyEval_EvalCodeWithName
[2m[36m(pid=71470)[0m     @     0x55a5b7b56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71470)[0m     @     0x55a5b7acb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x55a5b7b55baf _PyEval_EvalCodeWithName
[2m[36m(pid=71470)[0m     @     0x55a5b7b56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71470)[0m     @     0x55a5b7acb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71470)[0m     @     0x55a5b7b55baf _PyEval_EvalCodeWithName
[2m[36m(pid=71470)[0m     @     0x55a5b7b56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71470)[0m     @     0x55a5b7acb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x7f0004087390 (unknown)
[2m[36m(pid=71424)[0m     @     0x7ed10401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71424)[0m     @     0x7ed1037477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71358)[0m     @     0x7eea5c5014f5 at::Tensor::copy_()
[2m[36m(pid=71358)[0m     @     0x7eea5e9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71358)[0m     @     0x7eea5c5014f5 at::Tensor::copy_()
[2m[36m(pid=71358)[0m     @     0x7eea621a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71358)[0m     @     0x55d1e649dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71358)[0m     @     0x55d1e63f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71358)[0m     @     0x55d1e6483baf _PyEval_EvalCodeWithName
[2m[36m(pid=71358)[0m     @     0x55d1e6484a20 method_vectorcall
[2m[36m(pid=71358)[0m     @     0x55d1e63f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71358)[0m     @     0x55d1e6483baf _PyEval_EvalCodeWithName
[2m[36m(pid=71358)[0m     @     0x55d1e6484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71358)[0m     @     0x55d1e63f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71358)[0m     @     0x55d1e6483baf _PyEval_EvalCodeWithName
[2m[36m(pid=71358)[0m     @     0x55d1e6484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71358)[0m     @     0x55d1e63f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71358)[0m     @     0x55d1e6483baf _PyEval_EvalCodeWithName
[2m[36m(pid=71358)[0m     @     0x55d1e6484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71358)[0m     @     0x55d1e63f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71358)[0m     @     0x55d1e6483baf _PyEval_EvalCodeWithName
[2m[36m(pid=71358)[0m     @     0x55d1e6484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71358)[0m     @     0x55d1e63f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x7fa29fef44f5 at::Tensor::copy_()
[2m[36m(pid=71456)[0m     @     0x7fa2a23c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71456)[0m     @     0x7fa29fef44f5 at::Tensor::copy_()
[2m[36m(pid=71456)[0m     @     0x7fa2a5f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71456)[0m     @     0x5626d8048fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71456)[0m     @     0x5626d7fa3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x5626d802ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71456)[0m     @     0x5626d802fa20 method_vectorcall
[2m[36m(pid=71456)[0m     @     0x5626d7fa3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x5626d802ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71456)[0m     @     0x5626d802f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71456)[0m     @     0x5626d7fa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x5626d802ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71456)[0m     @     0x5626d802f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71456)[0m     @     0x5626d7fa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x5626d802ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71456)[0m     @     0x5626d802f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71456)[0m     @     0x5626d7fa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71456)[0m     @     0x5626d802ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71456)[0m     @     0x5626d802f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71456)[0m     @     0x5626d7fa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x7f6c56537f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71417)[0m     @     0x7f6c55c627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71417)[0m     @     0x7f6c55c658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71417)[0m     @     0x7f6c55c65ad3 at::TensorIterator::for_each()
[2m[36m(pid=71426)[0m     @     0x7f0e6c1168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71426)[0m     @     0x7f0e6c116ad3 at::TensorIterator::for_each()
[2m[36m(pid=71426)[0m     @     0x7f0e6c116d91 at::TensorIterator::for_each()
[2m[36m(pid=71426)[0m     @     0x7f0e6c9f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71427)[0m     @     0x7f64cf223ad3 at::TensorIterator::for_each()
[2m[36m(pid=71427)[0m     @     0x7f64cf223d91 at::TensorIterator::for_each()
[2m[36m(pid=71427)[0m     @     0x7f64cfb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71427)[0m     @     0x7f64cfb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71427)[0m     @     0x7f64cefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71425)[0m PC: @                0x0 (unknown)
[2m[36m(pid=71425)[0m *** SIGSEGV (@0x0) received by PID 71425 (TID 0x7fbeeb8fe700) from PID 0; stack trace: ***
[2m[36m(pid=71425)[0m     @     0x7fbeeb4d7390 (unknown)
[2m[36m(pid=71425)[0m     @     0x7f8feb43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71425)[0m     @     0x7f8feab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71425)[0m     @     0x7f8feab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71352)[0m     @     0x7f145d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71352)[0m     @     0x7f145d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=71352)[0m     @     0x7f145d138d91 at::TensorIterator::for_each()
[2m[36m(pid=71352)[0m     @     0x7f145da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71352)[0m     @     0x7f145da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71436)[0m     @     0x7fa70f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71436)[0m     @     0x7fa70f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=71436)[0m     @     0x7fa70f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=71436)[0m     @     0x7fa70f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71436)[0m     @     0x7fa70f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71360)[0m     @     0x7f44d9fe57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71360)[0m     @     0x7f44d9fe88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71360)[0m     @     0x7f44d9fe8ad3 at::TensorIterator::for_each()
[2m[36m(pid=71360)[0m     @     0x7f44d9fe8d91 at::TensorIterator::for_each()
[2m[36m(pid=71474)[0m     @     0x7fb7187e3d91 at::TensorIterator::for_each()
[2m[36m(pid=71474)[0m     @     0x7fb7190c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71474)[0m     @     0x7fb7190e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71474)[0m     @     0x7fb71858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71474)[0m     @     0x7fb718589388 at::native::copy_impl()
[2m[36m(pid=71474)[0m     @     0x7fb71858b5a4 at::native::copy_()
[2m[36m(pid=71492)[0m     @     0x7f7a50f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=71492)[0m     @     0x7f7a50f27d91 at::TensorIterator::for_each()
[2m[36m(pid=71492)[0m     @     0x7f7a5180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71492)[0m     @     0x7f7a5182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71492)[0m     @     0x7f7a50ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71492)[0m     @     0x7f7a50ccd388 at::native::copy_impl()
[2m[36m(pid=71440)[0m     @     0x7f17d83a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=71440)[0m     @     0x7f17d83a2d91 at::TensorIterator::for_each()
[2m[36m(pid=71440)[0m     @     0x7f17d8c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71440)[0m     @     0x7f17d8ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71440)[0m     @     0x7f17d814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71440)[0m     @     0x7f17d8148388 at::native::copy_impl()
[2m[36m(pid=71362)[0m     @     0x7f8bc4a38ad3 at::TensorIterator::for_each()
[2m[36m(pid=71362)[0m     @     0x7f8bc4a38d91 at::TensorIterator::for_each()
[2m[36m(pid=71362)[0m     @     0x7f8bc531bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71362)[0m     @     0x7f8bc533ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71362)[0m     @     0x7f8bc47e0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71362)[0m     @     0x7f8bc47de388 at::native::copy_impl()
[2m[36m(pid=71366)[0m     @     0x7f81fdd2fd91 at::TensorIterator::for_each()
[2m[36m(pid=71366)[0m     @     0x7f81fe612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71366)[0m     @     0x7f81fe635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71366)[0m     @     0x7f81fdad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71366)[0m     @     0x7f81fdad5388 at::native::copy_impl()
[2m[36m(pid=71366)[0m     @     0x7f81fdad75a4 at::native::copy_()
[2m[36m(pid=71487)[0m     @     0x7ed6b0dc9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=71487)[0m     @     0x7ed6b04f47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=71367)[0m     @     0x7fc40cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71367)[0m     @     0x7fc40cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=71367)[0m     @     0x7fc40cafad91 at::TensorIterator::for_each()
[2m[36m(pid=71367)[0m     @     0x7fc40d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71367)[0m     @     0x7fc40d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71410)[0m     @     0x7f5980a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71410)[0m     @     0x7f5980a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71410)[0m     @     0x7f597ff0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71410)[0m     @     0x7f597ff0a388 at::native::copy_impl()
[2m[36m(pid=71410)[0m     @     0x7f597ff0c5a4 at::native::copy_()
[2m[36m(pid=71410)[0m     @     0x7f59805f74f5 at::Tensor::copy_()
[2m[36m(pid=71435)[0m     @     0x7f5fb77fbad3 at::TensorIterator::for_each()
[2m[36m(pid=71435)[0m     @     0x7f5fb77fbd91 at::TensorIterator::for_each()
[2m[36m(pid=71435)[0m     @     0x7f5fb80deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71435)[0m     @     0x7f5fb8101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71435)[0m     @     0x7f5fb75a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71435)[0m     @     0x7f5fb75a1388 at::native::copy_impl()
[2m[36m(pid=71422)[0m     @     0x7f4798cba4f5 at::Tensor::copy_()
[2m[36m(pid=71422)[0m     @     0x7f479b18d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71422)[0m     @     0x7f4798cba4f5 at::Tensor::copy_()
[2m[36m(pid=71422)[0m     @     0x7f479ed6579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71422)[0m     @     0x564074a7cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71422)[0m     @     0x5640749d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71422)[0m     @     0x564074a62baf _PyEval_EvalCodeWithName
[2m[36m(pid=71422)[0m     @     0x564074a63a20 method_vectorcall
[2m[36m(pid=71422)[0m     @     0x5640749d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71422)[0m     @     0x564074a62baf _PyEval_EvalCodeWithName
[2m[36m(pid=71422)[0m     @     0x564074a63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71422)[0m     @     0x5640749d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71422)[0m     @     0x564074a62baf _PyEval_EvalCodeWithName
[2m[36m(pid=71422)[0m     @     0x564074a63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71422)[0m     @     0x5640749d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71422)[0m     @     0x564074a62baf _PyEval_EvalCodeWithName
[2m[36m(pid=71422)[0m     @     0x564074a63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71422)[0m     @     0x5640749d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71422)[0m     @     0x564074a62baf _PyEval_EvalCodeWithName
[2m[36m(pid=71422)[0m     @     0x564074a63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71422)[0m     @     0x5640749d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x7f3bb6ce54f5 at::Tensor::copy_()
[2m[36m(pid=71451)[0m     @     0x7f3bb91b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71451)[0m     @     0x7f3bb6ce54f5 at::Tensor::copy_()
[2m[36m(pid=71451)[0m     @     0x7f3bbcd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71451)[0m     @     0x55c69b2d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71451)[0m     @     0x55c69b234b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x55c69b2bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71451)[0m     @     0x55c69b2c0a20 method_vectorcall
[2m[36m(pid=71451)[0m     @     0x55c69b234bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x55c69b2bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71451)[0m     @     0x55c69b2c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71451)[0m     @     0x55c69b235689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x55c69b2bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71451)[0m     @     0x55c69b2c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71451)[0m     @     0x55c69b235689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x55c69b2bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71451)[0m     @     0x55c69b2c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71451)[0m     @     0x55c69b235689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71451)[0m     @     0x55c69b2bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71451)[0m     @     0x55c69b2c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71451)[0m     @     0x55c69b235689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x7ee5b6c534f5 at::Tensor::copy_()
[2m[36m(pid=71466)[0m     @     0x7ee5b91268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71466)[0m     @     0x7ee5b6c534f5 at::Tensor::copy_()
[2m[36m(pid=71466)[0m     @     0x7ee5bccfe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71466)[0m     @     0x5601db111fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71466)[0m     @     0x5601db06cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x5601db0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71466)[0m     @     0x5601db0f8a20 method_vectorcall
[2m[36m(pid=71466)[0m     @     0x5601db06cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x5601db0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71466)[0m     @     0x5601db0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71466)[0m     @     0x5601db06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x5601db0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71466)[0m     @     0x5601db0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71466)[0m     @     0x5601db06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x5601db0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71466)[0m     @     0x5601db0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71466)[0m     @     0x5601db06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71466)[0m     @     0x5601db0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71466)[0m     @     0x5601db0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71466)[0m     @     0x5601db06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x7f13bca384f5 at::Tensor::copy_()
[2m[36m(pid=71493)[0m     @     0x7f13bef0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71493)[0m     @     0x7f13bca384f5 at::Tensor::copy_()
[2m[36m(pid=71493)[0m     @     0x7f13c2ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71493)[0m     @     0x55c07223bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71493)[0m     @     0x55c072196b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x55c072221baf _PyEval_EvalCodeWithName
[2m[36m(pid=71493)[0m     @     0x55c072222a20 method_vectorcall
[2m[36m(pid=71493)[0m     @     0x55c072196bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x55c072221baf _PyEval_EvalCodeWithName
[2m[36m(pid=71493)[0m     @     0x55c072222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71493)[0m     @     0x55c072197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x55c072221baf _PyEval_EvalCodeWithName
[2m[36m(pid=71493)[0m     @     0x55c072222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71493)[0m     @     0x55c072197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x55c072221baf _PyEval_EvalCodeWithName
[2m[36m(pid=71493)[0m     @     0x55c072222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71493)[0m     @     0x55c072197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71493)[0m     @     0x55c072221baf _PyEval_EvalCodeWithName
[2m[36m(pid=71493)[0m     @     0x55c072222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71493)[0m     @     0x55c072197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x7f4a2e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=71421)[0m     @     0x7f4a2ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71421)[0m     @     0x7f4a2ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71421)[0m     @     0x7f4a2def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71421)[0m     @     0x7f4a2def5388 at::native::copy_impl()
[2m[36m(pid=71421)[0m     @     0x7f4a2def75a4 at::native::copy_()
[2m[36m(pid=71353)[0m     @     0x7fa8a25d44f5 at::Tensor::copy_()
[2m[36m(pid=71353)[0m     @     0x7fa8a4aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71353)[0m     @     0x7fa8a25d44f5 at::Tensor::copy_()
[2m[36m(pid=71353)[0m     @     0x7fa8a847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71353)[0m     @     0x56338746afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71353)[0m     @     0x5633873c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x563387450baf _PyEval_EvalCodeWithName
[2m[36m(pid=71353)[0m     @     0x563387451a20 method_vectorcall
[2m[36m(pid=71353)[0m     @     0x5633873c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x563387450baf _PyEval_EvalCodeWithName
[2m[36m(pid=71353)[0m     @     0x563387451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71353)[0m     @     0x5633873c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x563387450baf _PyEval_EvalCodeWithName
[2m[36m(pid=71353)[0m     @     0x563387451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71353)[0m     @     0x5633873c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x563387450baf _PyEval_EvalCodeWithName
[2m[36m(pid=71353)[0m     @     0x563387451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71353)[0m     @     0x5633873c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71353)[0m     @     0x563387450baf _PyEval_EvalCodeWithName
[2m[36m(pid=71353)[0m     @     0x563387451643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71353)[0m     @     0x5633873c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x7f82b28a7d91 at::TensorIterator::for_each()
[2m[36m(pid=71381)[0m     @     0x7f82b318ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71381)[0m     @     0x7f82b31adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71381)[0m     @     0x7f82b264fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71381)[0m     @     0x7f82b264d388 at::native::copy_impl()
[2m[36m(pid=71459)[0m     @     0x7f8932ad44f5 at::Tensor::copy_()
[2m[36m(pid=71459)[0m     @     0x7f8934fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71459)[0m     @     0x7f8932ad44f5 at::Tensor::copy_()
[2m[36m(pid=71459)[0m     @     0x7f8938b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71459)[0m     @     0x55be6c918fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71459)[0m     @     0x55be6c873b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71459)[0m     @     0x55be6c8febaf _PyEval_EvalCodeWithName
[2m[36m(pid=71459)[0m     @     0x55be6c8ffa20 method_vectorcall
[2m[36m(pid=71459)[0m     @     0x55be6c873bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71459)[0m     @     0x55be6c8febaf _PyEval_EvalCodeWithName
[2m[36m(pid=71459)[0m     @     0x55be6c8ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71459)[0m     @     0x55be6c874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71459)[0m     @     0x55be6c8febaf _PyEval_EvalCodeWithName
[2m[36m(pid=71459)[0m     @     0x55be6c8ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71459)[0m     @     0x55be6c874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71459)[0m     @     0x55be6c8febaf _PyEval_EvalCodeWithName
[2m[36m(pid=71459)[0m     @     0x55be6c8ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71459)[0m     @     0x55be6c874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71459)[0m     @     0x55be6c8febaf _PyEval_EvalCodeWithName
[2m[36m(pid=71459)[0m     @     0x55be6c8ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71459)[0m     @     0x55be6c874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x7f1fe4be44f5 at::Tensor::copy_()
[2m[36m(pid=71495)[0m     @     0x7f1fe70b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71495)[0m     @     0x7f1fe4be44f5 at::Tensor::copy_()
[2m[36m(pid=71495)[0m     @     0x7f1feac8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71495)[0m     @     0x56290f5eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71495)[0m     @     0x56290f545b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x56290f5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71495)[0m     @     0x56290f5d1a20 method_vectorcall
[2m[36m(pid=71495)[0m     @     0x56290f545bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x56290f5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71495)[0m     @     0x56290f5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71495)[0m     @     0x56290f546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x56290f5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71495)[0m     @     0x56290f5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71495)[0m     @     0x56290f546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x56290f5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71495)[0m     @     0x56290f5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71495)[0m     @     0x56290f546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71495)[0m     @     0x56290f5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71495)[0m     @     0x56290f5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71495)[0m     @     0x56290f546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x7f4b74ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71414)[0m     @     0x7f4b74ccd388 at::native::copy_impl()
[2m[36m(pid=71414)[0m     @     0x7f4b74ccf5a4 at::native::copy_()
[2m[36m(pid=71378)[0m     @     0x7f2a28304b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71378)[0m     @     0x7f2a28327c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71378)[0m     @     0x7f2a277c9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71378)[0m     @     0x7f2a277c7388 at::native::copy_impl()
[2m[36m(pid=71428)[0m     @     0x7f88dbd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=71428)[0m     @     0x7f88dc61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71428)[0m     @     0x7f88dc642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71428)[0m     @     0x7f88dbae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71351)[0m     @     0x7f25110e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71351)[0m     @     0x7f251058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71351)[0m     @     0x7f2510589388 at::native::copy_impl()
[2m[36m(pid=71351)[0m     @     0x7f251058b5a4 at::native::copy_()
[2m[36m(pid=71429)[0m     @     0x7f598e0fad91 at::TensorIterator::for_each()
[2m[36m(pid=71429)[0m     @     0x7f598e9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71429)[0m     @     0x7f598ea00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71429)[0m     @     0x7f598dea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71429)[0m     @     0x7f598dea0388 at::native::copy_impl()
[2m[36m(pid=71415)[0m     @     0x7f8532d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=71415)[0m     @     0x7f8532d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=71415)[0m     @     0x7f8533630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71415)[0m     @     0x7f8533653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71443)[0m     @     0x7eed4bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=71443)[0m     @     0x7eed4bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=71443)[0m     @     0x7eed4c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71467)[0m     @     0x7f27447a3d91 at::TensorIterator::for_each()
[2m[36m(pid=71467)[0m     @     0x7f2745086b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71357)[0m     @     0x7f19f1ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=71357)[0m     @     0x7f19f1ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=71357)[0m     @     0x7f19f27ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71357)[0m     @     0x7f19f27efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71377)[0m     @     0x7f99f47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=71377)[0m     @     0x7f99f47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=71377)[0m     @     0x7f99f50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71377)[0m     @     0x7f99f50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71413)[0m     @     0x7f3e7a0cdad3 at::TensorIterator::for_each()
[2m[36m(pid=71413)[0m     @     0x7f3e7a0cdd91 at::TensorIterator::for_each()
[2m[36m(pid=71413)[0m     @     0x7f3e7a9b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71365)[0m     @     0x7fa73be0dd91 at::TensorIterator::for_each()
[2m[36m(pid=71365)[0m     @     0x7fa73c6f0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71365)[0m     @     0x7fa73c713c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71365)[0m     @     0x7fa73bbb5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71365)[0m     @     0x7fa73bbb3388 at::native::copy_impl()
[2m[36m(pid=71365)[0m     @     0x7fa73bbb55a4 at::native::copy_()
[2m[36m(pid=71432)[0m     @     0x7fbeb5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=71432)[0m     @     0x7fbebbfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71432)[0m     @     0x55ad9f257fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71432)[0m     @     0x55ad9f1b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71432)[0m     @     0x55ad9f23dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71432)[0m     @     0x55ad9f23ea20 method_vectorcall
[2m[36m(pid=71432)[0m     @     0x55ad9f1b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71432)[0m     @     0x55ad9f23dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71432)[0m     @     0x55ad9f23e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71432)[0m     @     0x55ad9f1b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71432)[0m     @     0x55ad9f23dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71432)[0m     @     0x55ad9f23e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71432)[0m     @     0x55ad9f1b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71432)[0m     @     0x55ad9f23dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71432)[0m     @     0x55ad9f23e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71432)[0m     @     0x55ad9f1b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71432)[0m     @     0x55ad9f23dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71432)[0m     @     0x55ad9f23e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71432)[0m     @     0x55ad9f1b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x7f55c57fbad3 at::TensorIterator::for_each()
[2m[36m(pid=71375)[0m     @     0x7f55c57fbd91 at::TensorIterator::for_each()
[2m[36m(pid=71375)[0m     @     0x7f55c60deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71363)[0m     @     0x7f901d9e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71363)[0m     @     0x7f901d9e6388 at::native::copy_impl()
[2m[36m(pid=71363)[0m     @     0x7f901d9e85a4 at::native::copy_()
[2m[36m(pid=71363)[0m     @     0x7f901e0d34f5 at::Tensor::copy_()
[2m[36m(pid=71363)[0m     @     0x7f90205a68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71359)[0m     @     0x7f969794fd91 at::TensorIterator::for_each()
[2m[36m(pid=71359)[0m     @     0x7f9698232b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71359)[0m     @     0x7f9698255c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71359)[0m     @     0x7f96976f7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71359)[0m     @     0x7f96976f5388 at::native::copy_impl()
[2m[36m(pid=71359)[0m     @     0x7f96976f75a4 at::native::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b8fc64ad3 at::TensorIterator::for_each()
[2m[36m(pid=71437)[0m     @     0x7f6b8fc64d91 at::TensorIterator::for_each()
[2m[36m(pid=71437)[0m     @     0x7f6b90547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71437)[0m     @     0x7f6b9056ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71370)[0m     @     0x7f21b4c094f5 at::Tensor::copy_()
[2m[36m(pid=71370)[0m     @     0x7f21bacb479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71370)[0m     @     0x562ea476efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71370)[0m     @     0x562ea46c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71370)[0m     @     0x562ea4754baf _PyEval_EvalCodeWithName
[2m[36m(pid=71370)[0m     @     0x562ea4755a20 method_vectorcall
[2m[36m(pid=71370)[0m     @     0x562ea46c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71370)[0m     @     0x562ea4754baf _PyEval_EvalCodeWithName
[2m[36m(pid=71370)[0m     @     0x562ea4755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71370)[0m     @     0x562ea46ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71370)[0m     @     0x562ea4754baf _PyEval_EvalCodeWithName
[2m[36m(pid=71370)[0m     @     0x562ea4755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71370)[0m     @     0x562ea46ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71370)[0m     @     0x562ea4754baf _PyEval_EvalCodeWithName
[2m[36m(pid=71370)[0m     @     0x562ea4755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71370)[0m     @     0x562ea46ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71370)[0m     @     0x562ea4754baf _PyEval_EvalCodeWithName
[2m[36m(pid=71370)[0m     @     0x562ea4755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71370)[0m     @     0x562ea46ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x7fbf50f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=71383)[0m     @     0x7fbf50f27d91 at::TensorIterator::for_each()
[2m[36m(pid=71383)[0m     @     0x7fbf5180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71383)[0m     @     0x7fbf5182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71383)[0m     @     0x7fbf50ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71489)[0m     @     0x7faae9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=71489)[0m     @     0x7faae9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=71489)[0m     @     0x7faaea71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71489)[0m     @     0x7faaea73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71489)[0m     @     0x7faae9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71489)[0m     @     0x7faae9bde388 at::native::copy_impl()
[2m[36m(pid=71489)[0m     @     0x7faae9be05a4 at::native::copy_()
[2m[36m(pid=71373)[0m     @     0x7f544ed1dd91 at::TensorIterator::for_each()
[2m[36m(pid=71373)[0m     @     0x7f544f600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71373)[0m     @     0x7f544f623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71373)[0m     @     0x7f544eac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71373)[0m     @     0x7f544eac3388 at::native::copy_impl()
[2m[36m(pid=71373)[0m     @     0x7f544eac55a4 at::native::copy_()
[2m[36m(pid=71368)[0m     @     0x7f247723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71368)[0m     @     0x7f247725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71368)[0m     @     0x7f24766ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71368)[0m     @     0x7f24766fd388 at::native::copy_impl()
[2m[36m(pid=71368)[0m     @     0x7f24766ff5a4 at::native::copy_()
[2m[36m(pid=71478)[0m     @     0x7ee689c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71478)[0m     @     0x7ee6890e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71478)[0m     @     0x7ee6890e5388 at::native::copy_impl()
[2m[36m(pid=71478)[0m     @     0x7ee6890e75a4 at::native::copy_()
[2m[36m(pid=71478)[0m     @     0x7ee6897d24f5 at::Tensor::copy_()
[2m[36m(pid=71374)[0m     @     0x7ef1a96bbd91 at::TensorIterator::for_each()
[2m[36m(pid=71374)[0m     @     0x7ef1a9f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71374)[0m     @     0x7ef1a9fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71374)[0m     @     0x7ef1a9463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71374)[0m     @     0x7ef1a9461388 at::native::copy_impl()
[2m[36m(pid=71374)[0m     @     0x7ef1a94635a4 at::native::copy_()
[2m[36m(pid=71484)[0m     @     0x7f7912dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71484)[0m     @     0x558f9901efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71484)[0m     @     0x558f98f79b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71484)[0m     @     0x558f99004baf _PyEval_EvalCodeWithName
[2m[36m(pid=71484)[0m     @     0x558f99005a20 method_vectorcall
[2m[36m(pid=71484)[0m     @     0x558f98f79bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71484)[0m     @     0x558f99004baf _PyEval_EvalCodeWithName
[2m[36m(pid=71484)[0m     @     0x558f99005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71484)[0m     @     0x558f98f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71484)[0m     @     0x558f99004baf _PyEval_EvalCodeWithName
[2m[36m(pid=71484)[0m     @     0x558f99005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71484)[0m     @     0x558f98f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71484)[0m     @     0x558f99004baf _PyEval_EvalCodeWithName
[2m[36m(pid=71484)[0m     @     0x558f99005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71484)[0m     @     0x558f98f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71484)[0m     @     0x558f99004baf _PyEval_EvalCodeWithName
[2m[36m(pid=71484)[0m     @     0x558f99005643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71484)[0m     @     0x558f98f7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x7f11e626079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71423)[0m     @     0x55d6a2f21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71423)[0m     @     0x55d6a2e7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x55d6a2f07baf _PyEval_EvalCodeWithName
[2m[36m(pid=71423)[0m     @     0x55d6a2f08a20 method_vectorcall
[2m[36m(pid=71423)[0m     @     0x55d6a2e7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x55d6a2f07baf _PyEval_EvalCodeWithName
[2m[36m(pid=71423)[0m     @     0x55d6a2f08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71423)[0m     @     0x55d6a2e7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x55d6a2f07baf _PyEval_EvalCodeWithName
[2m[36m(pid=71423)[0m     @     0x55d6a2f08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71423)[0m     @     0x55d6a2e7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x55d6a2f07baf _PyEval_EvalCodeWithName
[2m[36m(pid=71423)[0m     @     0x55d6a2f08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71423)[0m     @     0x55d6a2e7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71423)[0m     @     0x55d6a2f07baf _PyEval_EvalCodeWithName
[2m[36m(pid=71423)[0m     @     0x55d6a2f08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71423)[0m     @     0x55d6a2e7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x7f7cebc8e4f5 at::Tensor::copy_()
[2m[36m(pid=71438)[0m     @     0x7f7cf1d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71438)[0m     @     0x55e421747fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71438)[0m     @     0x55e4216a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x55e42172dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71438)[0m     @     0x55e42172ea20 method_vectorcall
[2m[36m(pid=71438)[0m     @     0x55e4216a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x55e42172dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71438)[0m     @     0x55e42172e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71438)[0m     @     0x55e4216a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x55e42172dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71438)[0m     @     0x55e42172e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71438)[0m     @     0x55e4216a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x55e42172dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71438)[0m     @     0x55e42172e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71438)[0m     @     0x55e4216a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71438)[0m     @     0x55e42172dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71438)[0m     @     0x55e42172e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71438)[0m     @     0x55e4216a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x7f1c7688b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71434)[0m     @     0x55fd26e0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71434)[0m     @     0x55fd26d69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x55fd26df4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71434)[0m     @     0x55fd26df5a20 method_vectorcall
[2m[36m(pid=71434)[0m     @     0x55fd26d69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x55fd26df4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71434)[0m     @     0x55fd26df5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71434)[0m     @     0x55fd26d6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x55fd26df4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71434)[0m     @     0x55fd26df5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71434)[0m     @     0x55fd26d6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x55fd26df4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71434)[0m     @     0x55fd26df5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71434)[0m     @     0x55fd26d6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71434)[0m     @     0x55fd26df4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71434)[0m     @     0x55fd26df5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71434)[0m     @     0x55fd26d6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x7ed28fb105a4 at::native::copy_()
[2m[36m(pid=71464)[0m     @     0x7ed2901fb4f5 at::Tensor::copy_()
[2m[36m(pid=71379)[0m     @     0x7faea983ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71379)[0m     @     0x7faea9839388 at::native::copy_impl()
[2m[36m(pid=71379)[0m     @     0x7faea983b5a4 at::native::copy_()
[2m[36m(pid=71372)[0m     @     0x7ef5d578f5a4 at::native::copy_()
[2m[36m(pid=71372)[0m     @     0x7ef5d5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=71356)[0m     @     0x7f01449b55a4 at::native::copy_()
[2m[36m(pid=71356)[0m     @     0x7f01450a04f5 at::Tensor::copy_()
[2m[36m(pid=71356)[0m     @     0x7f01475738de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71354)[0m     @     0x7f116b4ce4f5 at::Tensor::copy_()
[2m[36m(pid=71354)[0m     @     0x7f116d9a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71424)[0m     @     0x7ed10374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71424)[0m     @     0x7ed10374aad3 at::TensorIterator::for_each()
[2m[36m(pid=71417)[0m     @     0x7f6c55c65d91 at::TensorIterator::for_each()
[2m[36m(pid=71417)[0m     @     0x7f6c56548b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71417)[0m     @     0x7f6c5656bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71417)[0m     @     0x7f6c55a0da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71426)[0m     @     0x7f0e6ca1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71426)[0m     @     0x7f0e6bebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71426)[0m     @     0x7f0e6bebc388 at::native::copy_impl()
[2m[36m(pid=71427)[0m     @     0x7f64cefc9388 at::native::copy_impl()
[2m[36m(pid=71427)[0m     @     0x7f64cefcb5a4 at::native::copy_()
[2m[36m(pid=71352)[0m     @     0x7f145cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71352)[0m     @     0x7f145cede388 at::native::copy_impl()
[2m[36m(pid=71352)[0m     @     0x7f145cee05a4 at::native::copy_()
[2m[36m(pid=71436)[0m     @     0x7fa70ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71436)[0m     @     0x7fa70ee99388 at::native::copy_impl()
[2m[36m(pid=71436)[0m     @     0x7fa70ee9b5a4 at::native::copy_()
[2m[36m(pid=71360)[0m     @     0x7f44da8cbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71360)[0m     @     0x7f44da8eec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71360)[0m     @     0x7f44d9d90a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71360)[0m     @     0x7f44d9d8e388 at::native::copy_impl()
[2m[36m(pid=71474)[0m     @     0x7fb718c764f5 at::Tensor::copy_()
[2m[36m(pid=71474)[0m     @     0x7fb71b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71492)[0m     @     0x7f7a50ccf5a4 at::native::copy_()
[2m[36m(pid=71492)[0m     @     0x7f7a513ba4f5 at::Tensor::copy_()
[2m[36m(pid=71440)[0m     @     0x7f17d814a5a4 at::native::copy_()
[2m[36m(pid=71440)[0m     @     0x7f17d88354f5 at::Tensor::copy_()
[2m[36m(pid=71440)[0m     @     0x7f17dad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71362)[0m     @     0x7f8bc47e05a4 at::native::copy_()
[2m[36m(pid=71362)[0m     @     0x7f8bc4ecb4f5 at::Tensor::copy_()
[2m[36m(pid=71366)[0m     @     0x7f81fe1c24f5 at::Tensor::copy_()
[2m[36m(pid=71366)[0m     @     0x7f82006958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71487)[0m     @     0x7ed6b04f78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=71367)[0m     @     0x7fc40c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71367)[0m     @     0x7fc40c8a0388 at::native::copy_impl()
[2m[36m(pid=71410)[0m     @     0x7f5982aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71410)[0m     @     0x7f59805f74f5 at::Tensor::copy_()
[2m[36m(pid=71410)[0m     @     0x7f59866a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71410)[0m     @     0x560b9f0d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71410)[0m     @     0x560b9f02db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71410)[0m     @     0x560b9f0b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71410)[0m     @     0x560b9f0b9a20 method_vectorcall
[2m[36m(pid=71410)[0m     @     0x560b9f02dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71410)[0m     @     0x560b9f0b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71410)[0m     @     0x560b9f0b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71410)[0m     @     0x560b9f02e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71410)[0m     @     0x560b9f0b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x7f5fb75a35a4 at::native::copy_()
[2m[36m(pid=71435)[0m     @     0x7f5fb7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=71421)[0m     @     0x7f4a2e5e24f5 at::Tensor::copy_()
[2m[36m(pid=71421)[0m     @     0x7f4a30ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71421)[0m     @     0x7f4a2e5e24f5 at::Tensor::copy_()
[2m[36m(pid=71381)[0m     @     0x7f82b264f5a4 at::native::copy_()
[2m[36m(pid=71381)[0m     @     0x7f82b2d3a4f5 at::Tensor::copy_()
[2m[36m(pid=71381)[0m     @     0x7f82b520d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71381)[0m     @     0x7f82b2d3a4f5 at::Tensor::copy_()
2020-11-05 10:52:45,807	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=71414)[0m     @     0x7f4b753ba4f5 at::Tensor::copy_()
[2m[36m(pid=71414)[0m     @     0x7f4b7788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71414)[0m     @     0x7f4b753ba4f5 at::Tensor::copy_()
[2m[36m(pid=71414)[0m     @     0x7f4b7b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71414)[0m     @     0x55cb91f10fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71414)[0m     @     0x55cb91e6bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x55cb91ef6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71414)[0m     @     0x55cb91ef7a20 method_vectorcall
[2m[36m(pid=71414)[0m     @     0x55cb91e6bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x55cb91ef6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71414)[0m     @     0x55cb91ef7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71414)[0m     @     0x55cb91e6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x55cb91ef6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71414)[0m     @     0x55cb91ef7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71414)[0m     @     0x55cb91e6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x55cb91ef6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71414)[0m     @     0x55cb91ef7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71414)[0m     @     0x55cb91e6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71414)[0m     @     0x55cb91ef6baf _PyEval_EvalCodeWithName
[2m[36m(pid=71414)[0m     @     0x55cb91ef7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71414)[0m     @     0x55cb91e6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x7f2a277c95a4 at::native::copy_()
[2m[36m(pid=71378)[0m     @     0x7f2a27eb44f5 at::Tensor::copy_()
[2m[36m(pid=71378)[0m     @     0x7f2a2a3878de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71428)[0m     @     0x7f88dbae2388 at::native::copy_impl()
[2m[36m(pid=71428)[0m     @     0x7f88dbae45a4 at::native::copy_()
[2m[36m(pid=71428)[0m     @     0x7f88dc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=71351)[0m     @     0x7f2510c764f5 at::Tensor::copy_()
[2m[36m(pid=71351)[0m     @     0x7f25131498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71351)[0m     @     0x7f2510c764f5 at::Tensor::copy_()
[2m[36m(pid=71351)[0m     @     0x7f2516d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71351)[0m     @     0x55be309fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71351)[0m     @     0x55be30955b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71351)[0m     @     0x55be309e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71351)[0m     @     0x55be309e1a20 method_vectorcall
[2m[36m(pid=71351)[0m     @     0x55be30955bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71351)[0m     @     0x55be309e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71351)[0m     @     0x55be309e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71429)[0m     @     0x7f598dea25a4 at::native::copy_()
[2m[36m(pid=71429)[0m     @     0x7f598e58d4f5 at::Tensor::copy_()
[2m[36m(pid=71429)[0m     @     0x7f5990a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71415)[0m     @     0x7f8532af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71415)[0m     @     0x7f8532af3388 at::native::copy_impl()
[2m[36m(pid=71415)[0m     @     0x7f8532af55a4 at::native::copy_()
[2m[36m(pid=71415)[0m     @     0x7f85331e04f5 at::Tensor::copy_()
[2m[36m(pid=71443)[0m     @     0x7eed4c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71443)[0m     @     0x7eed4bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71443)[0m     @     0x7eed4bcf9388 at::native::copy_impl()
[2m[36m(pid=71443)[0m     @     0x7eed4bcfb5a4 at::native::copy_()
[2m[36m(pid=71467)[0m     @     0x7f27450a9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71357)[0m     @     0x7f19f1c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71357)[0m     @     0x7f19f1c8f388 at::native::copy_impl()
[2m[36m(pid=71357)[0m     @     0x7f19f1c915a4 at::native::copy_()
[2m[36m(pid=71377)[0m     @     0x7f99f458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71377)[0m     @     0x7f99f4589388 at::native::copy_impl()
[2m[36m(pid=71377)[0m     @     0x7f99f458b5a4 at::native::copy_()
[2m[36m(pid=71413)[0m     @     0x7f3e7a9d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71413)[0m     @     0x7f3e79e75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71413)[0m     @     0x7f3e79e73388 at::native::copy_impl()
[2m[36m(pid=71413)[0m     @     0x7f3e79e755a4 at::native::copy_()
[2m[36m(pid=71365)[0m     @     0x7fa73c2a04f5 at::Tensor::copy_()
[2m[36m(pid=71365)[0m     @     0x7fa73e7738de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71375)[0m     @     0x7f55c6101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71363)[0m     @     0x7f901e0d34f5 at::Tensor::copy_()
[2m[36m(pid=71363)[0m     @     0x7f902417e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71363)[0m     @     0x5631216d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71363)[0m     @     0x563121633b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71363)[0m     @     0x5631216bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71363)[0m     @     0x5631216bfa20 method_vectorcall
[2m[36m(pid=71363)[0m     @     0x563121633bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71363)[0m     @     0x5631216bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71363)[0m     @     0x5631216bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71363)[0m     @     0x563121634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71363)[0m     @     0x5631216bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71363)[0m     @     0x5631216bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71363)[0m     @     0x563121634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71363)[0m     @     0x5631216bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71363)[0m     @     0x5631216bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71363)[0m     @     0x563121634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71363)[0m     @     0x5631216bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71363)[0m     @     0x5631216bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71363)[0m     @     0x563121634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x7f9697de24f5 at::Tensor::copy_()
[2m[36m(pid=71359)[0m     @     0x7f969a2b58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b8fa0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71437)[0m     @     0x7f6b8fa0a388 at::native::copy_impl()
[2m[36m(pid=71383)[0m     @     0x7fbf50ccd388 at::native::copy_impl()
[2m[36m(pid=71383)[0m     @     0x7fbf50ccf5a4 at::native::copy_()
[2m[36m(pid=71383)[0m     @     0x7fbf513ba4f5 at::Tensor::copy_()
[2m[36m(pid=71489)[0m     @     0x7faaea2cb4f5 at::Tensor::copy_()
[2m[36m(pid=71489)[0m     @     0x7faaec79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71489)[0m     @     0x7faaea2cb4f5 at::Tensor::copy_()
[2m[36m(pid=71373)[0m     @     0x7f544f1b04f5 at::Tensor::copy_()
[2m[36m(pid=71373)[0m     @     0x7f54516838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71373)[0m     @     0x7f544f1b04f5 at::Tensor::copy_()
[2m[36m(pid=71373)[0m     @     0x7f545525b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71373)[0m     @     0x55e934446fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71373)[0m     @     0x55e9343a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e93442cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71373)[0m     @     0x55e93442da20 method_vectorcall
[2m[36m(pid=71373)[0m     @     0x55e9343a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e93442cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71373)[0m     @     0x55e93442d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71373)[0m     @     0x55e9343a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e93442cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71373)[0m     @     0x55e93442d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71373)[0m     @     0x55e9343a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e93442cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71373)[0m     @     0x55e93442d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71368)[0m     @     0x7f2476dea4f5 at::Tensor::copy_()
[2m[36m(pid=71368)[0m     @     0x7f24792bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71368)[0m     @     0x7f2476dea4f5 at::Tensor::copy_()
[2m[36m(pid=71368)[0m     @     0x7f247ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71368)[0m     @     0x560947783fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71368)[0m     @     0x5609476deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71368)[0m     @     0x560947769baf _PyEval_EvalCodeWithName
[2m[36m(pid=71368)[0m     @     0x56094776aa20 method_vectorcall
[2m[36m(pid=71368)[0m     @     0x5609476debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71368)[0m     @     0x560947769baf _PyEval_EvalCodeWithName
[2m[36m(pid=71368)[0m     @     0x56094776a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71368)[0m     @     0x5609476df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71368)[0m     @     0x560947769baf _PyEval_EvalCodeWithName
[2m[36m(pid=71368)[0m     @     0x56094776a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71368)[0m     @     0x5609476df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71368)[0m     @     0x560947769baf _PyEval_EvalCodeWithName
[2m[36m(pid=71368)[0m     @     0x56094776a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71368)[0m     @     0x5609476df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71368)[0m     @     0x560947769baf _PyEval_EvalCodeWithName
[2m[36m(pid=71368)[0m     @     0x56094776a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71368)[0m     @     0x5609476df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x7ee68bca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71478)[0m     @     0x7ee6897d24f5 at::Tensor::copy_()
[2m[36m(pid=71478)[0m     @     0x7ee68f87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71478)[0m     @     0x55dd9291ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71478)[0m     @     0x55dd9287ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x55dd92905baf _PyEval_EvalCodeWithName
[2m[36m(pid=71478)[0m     @     0x55dd92906a20 method_vectorcall
[2m[36m(pid=71478)[0m     @     0x55dd9287abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x55dd92905baf _PyEval_EvalCodeWithName
[2m[36m(pid=71478)[0m     @     0x55dd92906643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71478)[0m     @     0x55dd9287b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x55dd92905baf _PyEval_EvalCodeWithName
[2m[36m(pid=71478)[0m     @     0x55dd92906643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71478)[0m     @     0x55dd9287b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x55dd92905baf _PyEval_EvalCodeWithName
[2m[36m(pid=71478)[0m     @     0x55dd92906643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71478)[0m     @     0x55dd9287b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71478)[0m     @     0x55dd92905baf _PyEval_EvalCodeWithName
[2m[36m(pid=71478)[0m     @     0x55dd92906643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71478)[0m     @     0x55dd9287b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x7ef1a9b4e4f5 at::Tensor::copy_()
[2m[36m(pid=71374)[0m     @     0x7ef1ac0218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71464)[0m     @     0x7ed2926ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71464)[0m     @     0x7ed2901fb4f5 at::Tensor::copy_()
[2m[36m(pid=71464)[0m     @     0x7ed2962a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71464)[0m     @     0x556f58e3efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71464)[0m     @     0x556f58d99b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x556f58e24baf _PyEval_EvalCodeWithName
[2m[36m(pid=71464)[0m     @     0x556f58e25a20 method_vectorcall
[2m[36m(pid=71464)[0m     @     0x556f58d99bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x556f58e24baf _PyEval_EvalCodeWithName
[2m[36m(pid=71464)[0m     @     0x556f58e25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71464)[0m     @     0x556f58d9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x556f58e24baf _PyEval_EvalCodeWithName
[2m[36m(pid=71464)[0m     @     0x556f58e25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71464)[0m     @     0x556f58d9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x556f58e24baf _PyEval_EvalCodeWithName
[2m[36m(pid=71464)[0m     @     0x556f58e25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71464)[0m     @     0x556f58d9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71464)[0m     @     0x556f58e24baf _PyEval_EvalCodeWithName
[2m[36m(pid=71464)[0m     @     0x556f58e25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71464)[0m     @     0x556f58d9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x7faea9f264f5 at::Tensor::copy_()
[2m[36m(pid=71379)[0m     @     0x7faeac3f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71379)[0m     @     0x7faea9f264f5 at::Tensor::copy_()
[2m[36m(pid=71379)[0m     @     0x7faeaffd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71379)[0m     @     0x562e95f8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71379)[0m     @     0x562e95ee5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=71379)[0m     @     0x562e95f71a20 method_vectorcall
[2m[36m(pid=71379)[0m     @     0x562e95ee5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=71379)[0m     @     0x562e95f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71379)[0m     @     0x562e95ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x7ef5d834d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71372)[0m     @     0x7ef5d5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=71372)[0m     @     0x7ef5dbf2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71372)[0m     @     0x56527efdcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71372)[0m     @     0x56527ef37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71372)[0m     @     0x56527efc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x56527efc3a20 method_vectorcall
[2m[36m(pid=71372)[0m     @     0x56527ef37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71372)[0m     @     0x56527efc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x56527efc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71372)[0m     @     0x56527ef38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71372)[0m     @     0x56527efc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x56527efc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71372)[0m     @     0x56527ef38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71372)[0m     @     0x56527efc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x56527efc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71372)[0m     @     0x56527ef38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71372)[0m     @     0x56527efc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71372)[0m     @     0x56527efc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71372)[0m     @     0x56527ef38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x7f01450a04f5 at::Tensor::copy_()
[2m[36m(pid=71356)[0m     @     0x7f014b14b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71356)[0m     @     0x55655af11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71356)[0m     @     0x55655ae6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x55655aef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71356)[0m     @     0x55655aef8a20 method_vectorcall
[2m[36m(pid=71356)[0m     @     0x55655ae6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x55655aef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71356)[0m     @     0x55655aef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71356)[0m     @     0x55655ae6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x55655aef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71356)[0m     @     0x55655aef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71356)[0m     @     0x55655ae6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x55655aef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71356)[0m     @     0x55655aef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71356)[0m     @     0x55655ae6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71356)[0m     @     0x55655aef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71356)[0m     @     0x55655aef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71356)[0m     @     0x55655ae6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x7f116b4ce4f5 at::Tensor::copy_()
[2m[36m(pid=71354)[0m     @     0x7f117157979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71354)[0m     @     0x55fc8bd11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71354)[0m     @     0x55fc8bc6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x55fc8bcf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71354)[0m     @     0x55fc8bcf8a20 method_vectorcall
[2m[36m(pid=71354)[0m     @     0x55fc8bc6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x55fc8bcf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71354)[0m     @     0x55fc8bcf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71354)[0m     @     0x55fc8bc6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x55fc8bcf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71354)[0m     @     0x55fc8bcf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71354)[0m     @     0x55fc8bc6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x55fc8bcf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71354)[0m     @     0x55fc8bcf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71354)[0m     @     0x55fc8bc6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71354)[0m     @     0x55fc8bcf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71354)[0m     @     0x55fc8bcf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71354)[0m     @     0x55fc8bc6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x7ed10374ad91 at::TensorIterator::for_each()
[2m[36m(pid=71424)[0m     @     0x7ed10402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71424)[0m     @     0x7ed104050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71417)[0m     @     0x7f6c55a0b388 at::native::copy_impl()
[2m[36m(pid=71417)[0m     @     0x7f6c55a0d5a4 at::native::copy_()
[2m[36m(pid=71417)[0m     @     0x7f6c560f84f5 at::Tensor::copy_()
[2m[36m(pid=71426)[0m     @     0x7f0e6bebe5a4 at::native::copy_()
[2m[36m(pid=71426)[0m     @     0x7f0e6c5a94f5 at::Tensor::copy_()
[2m[36m(pid=71426)[0m     @     0x7f0e6ea7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71427)[0m     @     0x7f64cf6b64f5 at::Tensor::copy_()
[2m[36m(pid=71427)[0m     @     0x7f64d1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71427)[0m     @     0x7f64cf6b64f5 at::Tensor::copy_()
[2m[36m(pid=71427)[0m     @     0x7f64d576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71425)[0m     @     0x7f8feab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=71425)[0m     @     0x7f8feab68d91 at::TensorIterator::for_each()
[2m[36m(pid=71425)[0m     @     0x7f8feb44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71352)[0m     @     0x7f145d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=71352)[0m     @     0x7f145fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71352)[0m     @     0x7f145d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=71352)[0m     @     0x7f146367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71352)[0m     @     0x55b518664fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71352)[0m     @     0x55b5185bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71352)[0m     @     0x55b51864abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71352)[0m     @     0x55b51864ba20 method_vectorcall
[2m[36m(pid=71352)[0m     @     0x55b5185bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x7fa70f5864f5 at::Tensor::copy_()
[2m[36m(pid=71436)[0m     @     0x7fa711a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71436)[0m     @     0x7fa70f5864f5 at::Tensor::copy_()
[2m[36m(pid=71360)[0m     @     0x7f44d9d905a4 at::native::copy_()
[2m[36m(pid=71360)[0m     @     0x7f44da47b4f5 at::Tensor::copy_()
[2m[36m(pid=71360)[0m     @     0x7f44dc94e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71474)[0m     @     0x7fb718c764f5 at::Tensor::copy_()
[2m[36m(pid=71474)[0m     @     0x7fb71ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71474)[0m     @     0x55f5274f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71474)[0m     @     0x55f52744db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71474)[0m     @     0x55f5274d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71474)[0m     @     0x55f5274d9a20 method_vectorcall
[2m[36m(pid=71474)[0m     @     0x55f52744dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71474)[0m     @     0x55f5274d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71474)[0m     @     0x55f5274d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71474)[0m     @     0x55f52744e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71474)[0m     @     0x55f5274d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71474)[0m     @     0x55f5274d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71474)[0m     @     0x55f52744e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71474)[0m     @     0x55f5274d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71474)[0m     @     0x55f5274d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71474)[0m     @     0x55f52744e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71474)[0m     @     0x55f5274d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71474)[0m     @     0x55f5274d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71474)[0m     @     0x55f52744e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x7f7a5388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71492)[0m     @     0x7f7a513ba4f5 at::Tensor::copy_()
[2m[36m(pid=71492)[0m     @     0x7f7a5746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71492)[0m     @     0x55e216a60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71492)[0m     @     0x55e2169bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x55e216a46baf _PyEval_EvalCodeWithName
[2m[36m(pid=71492)[0m     @     0x55e216a47a20 method_vectorcall
[2m[36m(pid=71492)[0m     @     0x55e2169bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x55e216a46baf _PyEval_EvalCodeWithName
[2m[36m(pid=71492)[0m     @     0x55e216a47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71492)[0m     @     0x55e2169bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x55e216a46baf _PyEval_EvalCodeWithName
[2m[36m(pid=71492)[0m     @     0x55e216a47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71492)[0m     @     0x55e2169bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x55e216a46baf _PyEval_EvalCodeWithName
[2m[36m(pid=71492)[0m     @     0x55e216a47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71492)[0m     @     0x55e2169bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71492)[0m     @     0x55e216a46baf _PyEval_EvalCodeWithName
[2m[36m(pid=71492)[0m     @     0x55e216a47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71492)[0m     @     0x55e2169bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x7f17d88354f5 at::Tensor::copy_()
[2m[36m(pid=71440)[0m     @     0x7f17de8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71440)[0m     @     0x562d7257afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71440)[0m     @     0x562d724d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x562d72560baf _PyEval_EvalCodeWithName
[2m[36m(pid=71440)[0m     @     0x562d72561a20 method_vectorcall
[2m[36m(pid=71440)[0m     @     0x562d724d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x562d72560baf _PyEval_EvalCodeWithName
[2m[36m(pid=71440)[0m     @     0x562d72561643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71440)[0m     @     0x562d724d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x562d72560baf _PyEval_EvalCodeWithName
[2m[36m(pid=71440)[0m     @     0x562d72561643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71440)[0m     @     0x562d724d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x562d72560baf _PyEval_EvalCodeWithName
[2m[36m(pid=71440)[0m     @     0x562d72561643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71440)[0m     @     0x562d724d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71440)[0m     @     0x562d72560baf _PyEval_EvalCodeWithName
[2m[36m(pid=71440)[0m     @     0x562d72561643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71440)[0m     @     0x562d724d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x7f8bc739e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71362)[0m     @     0x7f8bc4ecb4f5 at::Tensor::copy_()
[2m[36m(pid=71362)[0m     @     0x7f8bcaf7679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71362)[0m     @     0x556d82a77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71362)[0m     @     0x556d829d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x556d82a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71362)[0m     @     0x556d82a5ea20 method_vectorcall
[2m[36m(pid=71362)[0m     @     0x556d829d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x556d82a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71362)[0m     @     0x556d82a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71362)[0m     @     0x556d829d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x556d82a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71362)[0m     @     0x556d82a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71362)[0m     @     0x556d829d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x556d82a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71362)[0m     @     0x556d82a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71362)[0m     @     0x556d829d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71362)[0m     @     0x556d82a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71362)[0m     @     0x556d82a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71362)[0m     @     0x556d829d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x7f81fe1c24f5 at::Tensor::copy_()
[2m[36m(pid=71366)[0m     @     0x7f820426d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71366)[0m     @     0x56132fe30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71366)[0m     @     0x56132fd8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x56132fe16baf _PyEval_EvalCodeWithName
[2m[36m(pid=71366)[0m     @     0x56132fe17a20 method_vectorcall
[2m[36m(pid=71366)[0m     @     0x56132fd8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x56132fe16baf _PyEval_EvalCodeWithName
[2m[36m(pid=71366)[0m     @     0x56132fe17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71366)[0m     @     0x56132fd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x56132fe16baf _PyEval_EvalCodeWithName
[2m[36m(pid=71366)[0m     @     0x56132fe17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71366)[0m     @     0x56132fd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x56132fe16baf _PyEval_EvalCodeWithName
[2m[36m(pid=71366)[0m     @     0x56132fe17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71366)[0m     @     0x56132fd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71366)[0m     @     0x56132fe16baf _PyEval_EvalCodeWithName
[2m[36m(pid=71366)[0m     @     0x56132fe17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71366)[0m     @     0x56132fd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x7ed6b04f7ad3 at::TensorIterator::for_each()
[2m[36m(pid=71487)[0m     @     0x7ed6b04f7d91 at::TensorIterator::for_each()
[2m[36m(pid=71487)[0m     @     0x7ed6b0ddab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=71487)[0m     @     0x7ed6b0dfdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71367)[0m     @     0x7fc40c8a25a4 at::native::copy_()
[2m[36m(pid=71367)[0m     @     0x7fc40cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=71367)[0m     @     0x7fc40f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71410)[0m     @     0x560b9f0b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71410)[0m     @     0x560b9f02e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71410)[0m     @     0x560b9f0b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71410)[0m     @     0x560b9f0b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71410)[0m     @     0x560b9f02e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71410)[0m     @     0x560b9f0b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=71410)[0m     @     0x560b9f0b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71410)[0m     @     0x560b9f02e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x7f5fba1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71435)[0m     @     0x7f5fb7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=71435)[0m     @     0x7f5fbdd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71435)[0m     @     0x5563bf29afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71435)[0m     @     0x5563bf1f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x5563bf280baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x5563bf281a20 method_vectorcall
[2m[36m(pid=71435)[0m     @     0x5563bf1f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x5563bf280baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x5563bf281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71435)[0m     @     0x5563bf1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x5563bf280baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x5563bf281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71435)[0m     @     0x5563bf1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x5563bf280baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x5563bf281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71435)[0m     @     0x5563bf1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71435)[0m     @     0x5563bf280baf _PyEval_EvalCodeWithName
[2m[36m(pid=71435)[0m     @     0x5563bf281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71435)[0m     @     0x5563bf1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x7f4a3468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71421)[0m     @     0x5607d7b29fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71421)[0m     @     0x5607d7a84b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x5607d7b0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71421)[0m     @     0x5607d7b10a20 method_vectorcall
[2m[36m(pid=71421)[0m     @     0x5607d7a84bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x5607d7b0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71421)[0m     @     0x5607d7b10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71421)[0m     @     0x5607d7a85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x5607d7b0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71421)[0m     @     0x5607d7b10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71421)[0m     @     0x5607d7a85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x5607d7b0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71421)[0m     @     0x5607d7b10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71421)[0m     @     0x5607d7a85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71421)[0m     @     0x5607d7b0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71421)[0m     @     0x5607d7b10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71421)[0m     @     0x5607d7a85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x7f82b8de579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71381)[0m     @     0x55f28b734fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71381)[0m     @     0x55f28b68fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b71abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71381)[0m     @     0x55f28b71ba20 method_vectorcall
[2m[36m(pid=71381)[0m     @     0x55f28b68fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b71abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71381)[0m     @     0x55f28b71b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71378)[0m     @     0x7f2a27eb44f5 at::Tensor::copy_()
[2m[36m(pid=71378)[0m     @     0x7f2a2df5f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71378)[0m     @     0x560378e32fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71378)[0m     @     0x560378d8db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x560378e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=71378)[0m     @     0x560378e19a20 method_vectorcall
[2m[36m(pid=71378)[0m     @     0x560378d8dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x560378e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=71378)[0m     @     0x560378e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71378)[0m     @     0x560378d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x560378e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=71378)[0m     @     0x560378e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71378)[0m     @     0x560378d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x560378e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=71378)[0m     @     0x560378e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71378)[0m     @     0x560378d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71378)[0m     @     0x560378e18baf _PyEval_EvalCodeWithName
[2m[36m(pid=71378)[0m     @     0x560378e19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71378)[0m     @     0x560378d8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x7f88de6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71428)[0m     @     0x7f88dc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=71428)[0m     @     0x7f88e227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71428)[0m     @     0x55d57c4cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71428)[0m     @     0x55d57c425b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c4b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71428)[0m     @     0x55d57c4b1a20 method_vectorcall
[2m[36m(pid=71428)[0m     @     0x55d57c425bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c4b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71428)[0m     @     0x55d57c4b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71428)[0m     @     0x55d57c426689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c4b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71428)[0m     @     0x55d57c4b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71351)[0m     @     0x55be30956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71351)[0m     @     0x55be309e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71351)[0m     @     0x55be309e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71351)[0m     @     0x55be30956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71351)[0m     @     0x55be309e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71351)[0m     @     0x55be309e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71351)[0m     @     0x55be30956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71351)[0m     @     0x55be309e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71351)[0m     @     0x55be309e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71351)[0m     @     0x55be30956689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x7f598e58d4f5 at::Tensor::copy_()
[2m[36m(pid=71429)[0m     @     0x7f599463879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71429)[0m     @     0x55b8d52d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71429)[0m     @     0x55b8d522fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x55b8d52babaf _PyEval_EvalCodeWithName
[2m[36m(pid=71429)[0m     @     0x55b8d52bba20 method_vectorcall
[2m[36m(pid=71429)[0m     @     0x55b8d522fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x55b8d52babaf _PyEval_EvalCodeWithName
[2m[36m(pid=71429)[0m     @     0x55b8d52bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71429)[0m     @     0x55b8d5230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x55b8d52babaf _PyEval_EvalCodeWithName
[2m[36m(pid=71429)[0m     @     0x55b8d52bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71429)[0m     @     0x55b8d5230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x55b8d52babaf _PyEval_EvalCodeWithName
[2m[36m(pid=71429)[0m     @     0x55b8d52bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71429)[0m     @     0x55b8d5230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71429)[0m     @     0x55b8d52babaf _PyEval_EvalCodeWithName
[2m[36m(pid=71429)[0m     @     0x55b8d52bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71429)[0m     @     0x55b8d5230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x7f85356b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71415)[0m     @     0x7f85331e04f5 at::Tensor::copy_()
[2m[36m(pid=71415)[0m     @     0x7f853928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71415)[0m     @     0x55ee14ff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71415)[0m     @     0x55ee14f53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x55ee14fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71415)[0m     @     0x55ee14fdfa20 method_vectorcall
[2m[36m(pid=71415)[0m     @     0x55ee14f53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x55ee14fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71415)[0m     @     0x55ee14fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71415)[0m     @     0x55ee14f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x55ee14fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71415)[0m     @     0x55ee14fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71415)[0m     @     0x55ee14f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x55ee14fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71415)[0m     @     0x55ee14fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71415)[0m     @     0x55ee14f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71415)[0m     @     0x55ee14fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71415)[0m     @     0x55ee14fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71415)[0m     @     0x55ee14f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x7eed4c3e64f5 at::Tensor::copy_()
[2m[36m(pid=71443)[0m     @     0x7eed4e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71443)[0m     @     0x7eed4c3e64f5 at::Tensor::copy_()
[2m[36m(pid=71443)[0m     @     0x7eed5249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71467)[0m     @     0x7f274454ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71467)[0m     @     0x7f2744549388 at::native::copy_impl()
[2m[36m(pid=71357)[0m     @     0x7f19f237c4f5 at::Tensor::copy_()
[2m[36m(pid=71357)[0m     @     0x7f19f484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71357)[0m     @     0x7f19f237c4f5 at::Tensor::copy_()
[2m[36m(pid=71357)[0m     @     0x7f19f842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71357)[0m     @     0x558ccfd70fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71357)[0m     @     0x558ccfccbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71357)[0m     @     0x558ccfd56baf _PyEval_EvalCodeWithName
[2m[36m(pid=71357)[0m     @     0x558ccfd57a20 method_vectorcall
[2m[36m(pid=71357)[0m     @     0x558ccfccbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71357)[0m     @     0x558ccfd56baf _PyEval_EvalCodeWithName
[2m[36m(pid=71357)[0m     @     0x558ccfd57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71357)[0m     @     0x558ccfccc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71357)[0m     @     0x558ccfd56baf _PyEval_EvalCodeWithName
[2m[36m(pid=71357)[0m     @     0x558ccfd57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71357)[0m     @     0x558ccfccc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71357)[0m     @     0x558ccfd56baf _PyEval_EvalCodeWithName
[2m[36m(pid=71357)[0m     @     0x558ccfd57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71357)[0m     @     0x558ccfccc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71357)[0m     @     0x558ccfd56baf _PyEval_EvalCodeWithName
[2m[36m(pid=71357)[0m     @     0x558ccfd57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71357)[0m     @     0x558ccfccc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71377)[0m     @     0x7f99f4c764f5 at::Tensor::copy_()
[2m[36m(pid=71377)[0m     @     0x7f99f71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71377)[0m     @     0x7f99f4c764f5 at::Tensor::copy_()
[2m[36m(pid=71377)[0m     @     0x7f99fad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71377)[0m     @     0x5640dd799fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71377)[0m     @     0x5640dd6f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71377)[0m     @     0x5640dd77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71377)[0m     @     0x5640dd780a20 method_vectorcall
[2m[36m(pid=71377)[0m     @     0x5640dd6f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71377)[0m     @     0x5640dd77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71377)[0m     @     0x5640dd780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71377)[0m     @     0x5640dd6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71377)[0m     @     0x5640dd77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71377)[0m     @     0x5640dd780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71377)[0m     @     0x5640dd6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71377)[0m     @     0x5640dd77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71377)[0m     @     0x5640dd780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71377)[0m     @     0x5640dd6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x7f3e7a5604f5 at::Tensor::copy_()
[2m[36m(pid=71413)[0m     @     0x7f3e7ca338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71413)[0m     @     0x7f3e7a5604f5 at::Tensor::copy_()
[2m[36m(pid=71413)[0m     @     0x7f3e8060b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71413)[0m     @     0x55ded908afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71413)[0m     @     0x55ded8fe5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded9070baf _PyEval_EvalCodeWithName
[2m[36m(pid=71413)[0m     @     0x55ded9071a20 method_vectorcall
[2m[36m(pid=71413)[0m     @     0x55ded8fe5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded9070baf _PyEval_EvalCodeWithName
[2m[36m(pid=71413)[0m     @     0x55ded9071643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71365)[0m     @     0x7fa73c2a04f5 at::Tensor::copy_()
[2m[36m(pid=71365)[0m     @     0x7fa74234b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71365)[0m     @     0x55c9e174dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71365)[0m     @     0x55c9e16a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71365)[0m     @     0x55c9e1733baf _PyEval_EvalCodeWithName
[2m[36m(pid=71365)[0m     @     0x55c9e1734a20 method_vectorcall
[2m[36m(pid=71365)[0m     @     0x55c9e16a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71365)[0m     @     0x55c9e1733baf _PyEval_EvalCodeWithName
[2m[36m(pid=71365)[0m     @     0x55c9e1734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71365)[0m     @     0x55c9e16a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71365)[0m     @     0x55c9e1733baf _PyEval_EvalCodeWithName
[2m[36m(pid=71365)[0m     @     0x55c9e1734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71365)[0m     @     0x55c9e16a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71365)[0m     @     0x55c9e1733baf _PyEval_EvalCodeWithName
[2m[36m(pid=71365)[0m     @     0x55c9e1734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71365)[0m     @     0x55c9e16a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71365)[0m     @     0x55c9e1733baf _PyEval_EvalCodeWithName
[2m[36m(pid=71365)[0m     @     0x55c9e1734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71365)[0m     @     0x55c9e16a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x7f55c55a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71375)[0m     @     0x7f55c55a1388 at::native::copy_impl()
[2m[36m(pid=71375)[0m     @     0x7f55c55a35a4 at::native::copy_()
[2m[36m(pid=71359)[0m     @     0x7f9697de24f5 at::Tensor::copy_()
[2m[36m(pid=71359)[0m     @     0x7f969de8d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71359)[0m     @     0x557f994bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71359)[0m     @     0x557f99415b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x557f994a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71359)[0m     @     0x557f994a1a20 method_vectorcall
[2m[36m(pid=71359)[0m     @     0x557f99415bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x557f994a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71359)[0m     @     0x557f994a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71359)[0m     @     0x557f99416689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x557f994a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71359)[0m     @     0x557f994a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71359)[0m     @     0x557f99416689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x557f994a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71359)[0m     @     0x557f994a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71359)[0m     @     0x557f99416689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71359)[0m     @     0x557f994a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71359)[0m     @     0x557f994a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71359)[0m     @     0x557f99416689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x7f6b8fa0c5a4 at::native::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b900f74f5 at::Tensor::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b925ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b900f74f5 at::Tensor::copy_()
[2m[36m(pid=71383)[0m     @     0x7fbf5388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71383)[0m     @     0x7fbf513ba4f5 at::Tensor::copy_()
[2m[36m(pid=71383)[0m     @     0x7fbf5746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71383)[0m     @     0x5590fadbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71383)[0m     @     0x5590fad1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x5590fada5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71383)[0m     @     0x5590fada6a20 method_vectorcall
[2m[36m(pid=71383)[0m     @     0x5590fad1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x5590fada5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71383)[0m     @     0x5590fada6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71383)[0m     @     0x5590fad1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x5590fada5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71383)[0m     @     0x5590fada6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71383)[0m     @     0x5590fad1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x5590fada5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71383)[0m     @     0x5590fada6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71383)[0m     @     0x5590fad1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x7faaf037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71489)[0m     @     0x559c7333efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71489)[0m     @     0x559c73299b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x559c73324baf _PyEval_EvalCodeWithName
[2m[36m(pid=71489)[0m     @     0x559c73325a20 method_vectorcall
[2m[36m(pid=71489)[0m     @     0x559c73299bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x559c73324baf _PyEval_EvalCodeWithName
[2m[36m(pid=71489)[0m     @     0x559c73325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71489)[0m     @     0x559c7329a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x559c73324baf _PyEval_EvalCodeWithName
[2m[36m(pid=71489)[0m     @     0x559c73325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71489)[0m     @     0x559c7329a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x559c73324baf _PyEval_EvalCodeWithName
[2m[36m(pid=71489)[0m     @     0x559c73325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71489)[0m     @     0x559c7329a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71489)[0m     @     0x559c73324baf _PyEval_EvalCodeWithName
[2m[36m(pid=71489)[0m     @     0x559c73325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71489)[0m     @     0x559c7329a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e9343a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71373)[0m     @     0x55e93442cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71373)[0m     @     0x55e93442d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71373)[0m     @     0x55e9343a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x7ef1a9b4e4f5 at::Tensor::copy_()
[2m[36m(pid=71374)[0m     @     0x7ef1afbf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71374)[0m     @     0x55bfcdab8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71374)[0m     @     0x55bfcda13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x55bfcda9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71374)[0m     @     0x55bfcda9fa20 method_vectorcall
[2m[36m(pid=71374)[0m     @     0x55bfcda13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x55bfcda9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71374)[0m     @     0x55bfcda9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71374)[0m     @     0x55bfcda14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x55bfcda9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71374)[0m     @     0x55bfcda9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71374)[0m     @     0x55bfcda14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x55bfcda9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71374)[0m     @     0x55bfcda9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71374)[0m     @     0x55bfcda14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71374)[0m     @     0x55bfcda9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=71374)[0m     @     0x55bfcda9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71374)[0m     @     0x55bfcda14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71379)[0m     @     0x562e95ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=71379)[0m     @     0x562e95f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71379)[0m     @     0x562e95ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71379)[0m     @     0x562e95f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=71379)[0m     @     0x562e95f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71379)[0m     @     0x562e95ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x7ed1034f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71424)[0m     @     0x7ed1034f0388 at::native::copy_impl()
[2m[36m(pid=71424)[0m     @     0x7ed1034f25a4 at::native::copy_()
[2m[36m(pid=71417)[0m     @     0x7f6c585cb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71417)[0m     @     0x7f6c560f84f5 at::Tensor::copy_()
[2m[36m(pid=71417)[0m     @     0x7f6c5c1a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71417)[0m     @     0x560054191fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71417)[0m     @     0x5600540ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x560054177baf _PyEval_EvalCodeWithName
[2m[36m(pid=71417)[0m     @     0x560054178a20 method_vectorcall
[2m[36m(pid=71417)[0m     @     0x5600540ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x560054177baf _PyEval_EvalCodeWithName
[2m[36m(pid=71417)[0m     @     0x560054178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71417)[0m     @     0x5600540ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x560054177baf _PyEval_EvalCodeWithName
[2m[36m(pid=71417)[0m     @     0x560054178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71417)[0m     @     0x5600540ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x560054177baf _PyEval_EvalCodeWithName
[2m[36m(pid=71417)[0m     @     0x560054178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71417)[0m     @     0x5600540ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71417)[0m     @     0x560054177baf _PyEval_EvalCodeWithName
[2m[36m(pid=71417)[0m     @     0x560054178643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71417)[0m     @     0x5600540ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x7f0e6c5a94f5 at::Tensor::copy_()
[2m[36m(pid=71426)[0m     @     0x7f0e7265479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71426)[0m     @     0x55788e949fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71426)[0m     @     0x55788e8a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x55788e92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71426)[0m     @     0x55788e930a20 method_vectorcall
[2m[36m(pid=71426)[0m     @     0x55788e8a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x55788e92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71426)[0m     @     0x55788e930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71426)[0m     @     0x55788e8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x55788e92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71426)[0m     @     0x55788e930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71426)[0m     @     0x55788e8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x55788e92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71426)[0m     @     0x55788e930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71426)[0m     @     0x55788e8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71426)[0m     @     0x55788e92fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71426)[0m     @     0x55788e930643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71426)[0m     @     0x55788e8a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd63fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71427)[0m     @     0x55f38dcbeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd49baf _PyEval_EvalCodeWithName
[2m[36m(pid=71427)[0m     @     0x55f38dd4aa20 method_vectorcall
[2m[36m(pid=71427)[0m     @     0x55f38dcbebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd49baf _PyEval_EvalCodeWithName
[2m[36m(pid=71427)[0m     @     0x55f38dd4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71427)[0m     @     0x55f38dcbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd49baf _PyEval_EvalCodeWithName
[2m[36m(pid=71427)[0m     @     0x55f38dd4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71427)[0m     @     0x55f38dcbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd49baf _PyEval_EvalCodeWithName
[2m[36m(pid=71427)[0m     @     0x55f38dd4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71427)[0m     @     0x55f38dcbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71427)[0m     @     0x55f38dd49baf _PyEval_EvalCodeWithName
[2m[36m(pid=71427)[0m     @     0x55f38dd4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71427)[0m     @     0x55f38dcbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x7f8feb46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=71425)[0m     @     0x7f8fea910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71425)[0m     @     0x7f8fea90e388 at::native::copy_impl()
[2m[36m(pid=71425)[0m     @     0x7f8fea9105a4 at::native::copy_()
[2m[36m(pid=71352)[0m     @     0x55b51864abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71352)[0m     @     0x55b51864b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71352)[0m     @     0x55b5185c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71352)[0m     @     0x55b51864abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71352)[0m     @     0x55b51864b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71352)[0m     @     0x55b5185c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71352)[0m     @     0x55b51864abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71352)[0m     @     0x55b51864b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71352)[0m     @     0x55b5185c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71352)[0m     @     0x55b51864abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71352)[0m     @     0x55b51864b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71352)[0m     @     0x55b5185c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x7fa71563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71436)[0m     @     0x561dba3d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71436)[0m     @     0x561dba32cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x561dba3b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71436)[0m     @     0x561dba3b8a20 method_vectorcall
[2m[36m(pid=71436)[0m     @     0x561dba32cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x561dba3b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71436)[0m     @     0x561dba3b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71436)[0m     @     0x561dba32d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x561dba3b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71436)[0m     @     0x561dba3b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71436)[0m     @     0x561dba32d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x561dba3b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71436)[0m     @     0x561dba3b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71436)[0m     @     0x561dba32d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71436)[0m     @     0x561dba3b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71436)[0m     @     0x561dba3b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71436)[0m     @     0x561dba32d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x7f44da47b4f5 at::Tensor::copy_()
[2m[36m(pid=71360)[0m     @     0x7f44e052679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71360)[0m     @     0x55a22e367fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71360)[0m     @     0x55a22e2c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x55a22e34dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71360)[0m     @     0x55a22e34ea20 method_vectorcall
[2m[36m(pid=71360)[0m     @     0x55a22e2c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x55a22e34dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71360)[0m     @     0x55a22e34e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71360)[0m     @     0x55a22e2c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x55a22e34dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71360)[0m     @     0x55a22e34e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71360)[0m     @     0x55a22e2c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x55a22e34dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71360)[0m     @     0x55a22e34e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71360)[0m     @     0x55a22e2c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71360)[0m     @     0x55a22e34dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71360)[0m     @     0x55a22e34e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71360)[0m     @     0x55a22e2c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x7ed6b029fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=71487)[0m     @     0x7ed6b029d388 at::native::copy_impl()
[2m[36m(pid=71487)[0m     @     0x7ed6b029f5a4 at::native::copy_()
[2m[36m(pid=71367)[0m     @     0x7fc40cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=71367)[0m     @     0x7fc41303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71367)[0m     @     0x55a3dbd0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71367)[0m     @     0x55a3dbc69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71367)[0m     @     0x55a3dbcf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71367)[0m     @     0x55a3dbcf5a20 method_vectorcall
[2m[36m(pid=71367)[0m     @     0x55a3dbc69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71367)[0m     @     0x55a3dbcf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71367)[0m     @     0x55a3dbcf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71367)[0m     @     0x55a3dbc6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71367)[0m     @     0x55a3dbcf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71367)[0m     @     0x55a3dbcf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71367)[0m     @     0x55a3dbc6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71367)[0m     @     0x55a3dbcf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71367)[0m     @     0x55a3dbcf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71367)[0m     @     0x55a3dbc6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71367)[0m     @     0x55a3dbcf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=71367)[0m     @     0x55a3dbcf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71367)[0m     @     0x55a3dbc6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b690689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b71abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71381)[0m     @     0x55f28b71b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71381)[0m     @     0x55f28b690689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b71abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71381)[0m     @     0x55f28b71b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71381)[0m     @     0x55f28b690689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71381)[0m     @     0x55f28b71abaf _PyEval_EvalCodeWithName
[2m[36m(pid=71381)[0m     @     0x55f28b71b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71381)[0m     @     0x55f28b690689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c426689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c4b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71428)[0m     @     0x55d57c4b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71428)[0m     @     0x55d57c426689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71428)[0m     @     0x55d57c4b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=71428)[0m     @     0x55d57c4b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71428)[0m     @     0x55d57c426689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71443)[0m     @     0x55954a99ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa25baf _PyEval_EvalCodeWithName
[2m[36m(pid=71443)[0m     @     0x55954aa26a20 method_vectorcall
[2m[36m(pid=71443)[0m     @     0x55954a99abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa25baf _PyEval_EvalCodeWithName
[2m[36m(pid=71443)[0m     @     0x55954aa26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71443)[0m     @     0x55954a99b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa25baf _PyEval_EvalCodeWithName
[2m[36m(pid=71443)[0m     @     0x55954aa26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71443)[0m     @     0x55954a99b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa25baf _PyEval_EvalCodeWithName
[2m[36m(pid=71443)[0m     @     0x55954aa26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71443)[0m     @     0x55954a99b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71443)[0m     @     0x55954aa25baf _PyEval_EvalCodeWithName
[2m[36m(pid=71443)[0m     @     0x55954aa26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71443)[0m     @     0x55954a99b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x7f274454b5a4 at::native::copy_()
[2m[36m(pid=71467)[0m     @     0x7f2744c364f5 at::Tensor::copy_()
[2m[36m(pid=71377)[0m     @     0x5640dd77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71377)[0m     @     0x5640dd780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71377)[0m     @     0x5640dd6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded8fe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded9070baf _PyEval_EvalCodeWithName
[2m[36m(pid=71413)[0m     @     0x55ded9071643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71413)[0m     @     0x55ded8fe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded9070baf _PyEval_EvalCodeWithName
[2m[36m(pid=71413)[0m     @     0x55ded9071643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71413)[0m     @     0x55ded8fe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71413)[0m     @     0x55ded9070baf _PyEval_EvalCodeWithName
[2m[36m(pid=71413)[0m     @     0x55ded9071643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71413)[0m     @     0x55ded8fe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x7f55c5c8e4f5 at::Tensor::copy_()
[2m[36m(pid=71375)[0m     @     0x7f55c81618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71437)[0m     @     0x7f6b961a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71437)[0m     @     0x55c2efcc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71437)[0m     @     0x55c2efc1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x55c2efca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71437)[0m     @     0x55c2efca8a20 method_vectorcall
[2m[36m(pid=71437)[0m     @     0x55c2efc1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x55c2efca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71437)[0m     @     0x55c2efca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71437)[0m     @     0x55c2efc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x55c2efca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71437)[0m     @     0x55c2efca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71437)[0m     @     0x55c2efc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x55c2efca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71437)[0m     @     0x55c2efca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71437)[0m     @     0x55c2efc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71437)[0m     @     0x55c2efca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=71437)[0m     @     0x55c2efca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71437)[0m     @     0x55c2efc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71383)[0m     @     0x5590fada5baf _PyEval_EvalCodeWithName
[2m[36m(pid=71383)[0m     @     0x5590fada6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71383)[0m     @     0x5590fad1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x7ed103bdd4f5 at::Tensor::copy_()
[2m[36m(pid=71424)[0m     @     0x7ed1060b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71424)[0m     @     0x7ed103bdd4f5 at::Tensor::copy_()
[2m[36m(pid=71425)[0m     @     0x7f8feaffb4f5 at::Tensor::copy_()
[2m[36m(pid=71425)[0m     @     0x7f8fed4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71487)[0m     @     0x7ed6b098a4f5 at::Tensor::copy_()
[2m[36m(pid=71487)[0m     @     0x7ed6b2e5d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71467)[0m     @     0x7f27471098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=71467)[0m     @     0x7f2744c364f5 at::Tensor::copy_()
[2m[36m(pid=71467)[0m     @     0x7f274ace179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71467)[0m     @     0x55def85e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71467)[0m     @     0x55def8542b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x55def85cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71467)[0m     @     0x55def85cea20 method_vectorcall
[2m[36m(pid=71467)[0m     @     0x55def8542bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x55def85cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71467)[0m     @     0x55def85ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71467)[0m     @     0x55def8543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x55def85cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71467)[0m     @     0x55def85ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71467)[0m     @     0x55def8543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x7f55c5c8e4f5 at::Tensor::copy_()
[2m[36m(pid=71375)[0m     @     0x7f55cbd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71375)[0m     @     0x565060816fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71375)[0m     @     0x565060771b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x5650607fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71375)[0m     @     0x5650607fda20 method_vectorcall
[2m[36m(pid=71375)[0m     @     0x565060771bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x5650607fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71375)[0m     @     0x5650607fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71375)[0m     @     0x565060772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x5650607fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71375)[0m     @     0x5650607fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71375)[0m     @     0x565060772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x5650607fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71375)[0m     @     0x5650607fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71375)[0m     @     0x565060772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71375)[0m     @     0x5650607fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71375)[0m     @     0x5650607fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71375)[0m     @     0x565060772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x7ed109c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71424)[0m     @     0x5654c6efcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71424)[0m     @     0x5654c6e57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x5654c6ee2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71424)[0m     @     0x5654c6ee3a20 method_vectorcall
[2m[36m(pid=71424)[0m     @     0x5654c6e57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x5654c6ee2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71424)[0m     @     0x5654c6ee3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71424)[0m     @     0x5654c6e58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x5654c6ee2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71424)[0m     @     0x5654c6ee3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71424)[0m     @     0x5654c6e58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x5654c6ee2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71424)[0m     @     0x5654c6ee3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71424)[0m     @     0x5654c6e58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71424)[0m     @     0x5654c6ee2baf _PyEval_EvalCodeWithName
[2m[36m(pid=71424)[0m     @     0x5654c6ee3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71424)[0m     @     0x5654c6e58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x7f8feaffb4f5 at::Tensor::copy_()
[2m[36m(pid=71425)[0m     @     0x7f8ff10a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71425)[0m     @     0x564443856fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71425)[0m     @     0x5644437b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x56444383cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71425)[0m     @     0x56444383da20 method_vectorcall
[2m[36m(pid=71425)[0m     @     0x5644437b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x56444383cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71425)[0m     @     0x56444383d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71425)[0m     @     0x5644437b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x56444383cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71425)[0m     @     0x56444383d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71425)[0m     @     0x5644437b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x56444383cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71425)[0m     @     0x56444383d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71425)[0m     @     0x5644437b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71425)[0m     @     0x56444383cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71425)[0m     @     0x56444383d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71425)[0m     @     0x5644437b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x7ed6b098a4f5 at::Tensor::copy_()
[2m[36m(pid=71487)[0m     @     0x7ed6b6a3579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=71487)[0m     @     0x55ed9088ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=71487)[0m     @     0x55ed907eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x55ed90875baf _PyEval_EvalCodeWithName
[2m[36m(pid=71487)[0m     @     0x55ed90876a20 method_vectorcall
[2m[36m(pid=71487)[0m     @     0x55ed907eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x55ed90875baf _PyEval_EvalCodeWithName
[2m[36m(pid=71487)[0m     @     0x55ed90876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71487)[0m     @     0x55ed907eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x55ed90875baf _PyEval_EvalCodeWithName
[2m[36m(pid=71487)[0m     @     0x55ed90876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71487)[0m     @     0x55ed907eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x55ed90875baf _PyEval_EvalCodeWithName
[2m[36m(pid=71487)[0m     @     0x55ed90876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71487)[0m     @     0x55ed907eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71487)[0m     @     0x55ed90875baf _PyEval_EvalCodeWithName
[2m[36m(pid=71487)[0m     @     0x55ed90876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71487)[0m     @     0x55ed907eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x55def85cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71467)[0m     @     0x55def85ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71467)[0m     @     0x55def8543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=71467)[0m     @     0x55def85cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=71467)[0m     @     0x55def85ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=71467)[0m     @     0x55def8543689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:52:45,959	ERROR trial_runner.py:567 -- Trial PPO_jss_env_0516b_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=71473, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:52:45,964	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:52:45,965	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff7ef9157101000000.
2020-11-05 10:52:45,965	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
== Status ==
Memory usage on this node: 25.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_0516b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_0516b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_0516b_00000_0_2020-11-05_10-52-38/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 25.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_0516b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_0516b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_0516b_00000_0_2020-11-05_10-52-38/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_0516b_00000])
