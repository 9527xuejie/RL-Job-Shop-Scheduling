2020-11-05 10:41:10,759	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6c0d2_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=34969)[0m 2020-11-05 10:41:13,520	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=34969)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=34969)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=34969)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=34969)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=34969)[0m 
[2m[36m(pid=34969)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=34964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34964)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34964)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34964)[0m *** SIGSEGV (@0x0) received by PID 34964 (TID 0x7f65a2f93700) from PID 0; stack trace: ***
[2m[36m(pid=34964)[0m     @     0x7f65a2b6c390 (unknown)
[2m[36m(pid=34964)[0m     @     0x7f36a2a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34964)[0m     @     0x7f36a214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34992)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34992)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34992)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34992)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34992)[0m *** SIGSEGV (@0x0) received by PID 34992 (TID 0x7f1828930700) from PID 0; stack trace: ***
[2m[36m(pid=34992)[0m     @     0x7f1828509390 (unknown)
[2m[36m(pid=34992)[0m     @     0x7ee9283e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34992)[0m     @     0x7ee927b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34979)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34979)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34979)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34979)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34979)[0m *** SIGSEGV (@0x0) received by PID 34979 (TID 0x7f553be1d700) from PID 0; stack trace: ***
[2m[36m(pid=34979)[0m     @     0x7f553b9f6390 (unknown)
[2m[36m(pid=34979)[0m     @     0x7f263b5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34979)[0m     @     0x7f263ad1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34931)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34931)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34931)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34931)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34931)[0m *** SIGSEGV (@0x0) received by PID 34931 (TID 0x7f9f9549e700) from PID 0; stack trace: ***
[2m[36m(pid=34931)[0m     @     0x7f9f95077390 (unknown)
[2m[36m(pid=34931)[0m     @     0x7f7094fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34931)[0m     @     0x7f709470e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34974)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34974)[0m *** SIGSEGV (@0x0) received by PID 34974 (TID 0x7fc4458f7700) from PID 0; stack trace: ***
[2m[36m(pid=34974)[0m     @     0x7fc4454d0390 (unknown)
[2m[36m(pid=34975)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34975)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34975)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34975)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34975)[0m *** SIGSEGV (@0x0) received by PID 34975 (TID 0x7f279671d700) from PID 0; stack trace: ***
[2m[36m(pid=34975)[0m     @     0x7f27962f6390 (unknown)
[2m[36m(pid=34975)[0m     @     0x7ef896279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34975)[0m     @     0x7ef8959a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34938)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34938)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34938)[0m *** SIGSEGV (@0x0) received by PID 34938 (TID 0x7f75d56d7700) from PID 0; stack trace: ***
[2m[36m(pid=34938)[0m     @     0x7f75d52b0390 (unknown)
[2m[36m(pid=34938)[0m     @     0x7f46d524af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34938)[0m     @     0x7f46d49757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34938)[0m     @     0x7f46d49788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34938)[0m     @     0x7f46d4978ad3 at::TensorIterator::for_each()
[2m[36m(pid=34938)[0m     @     0x7f46d4978d91 at::TensorIterator::for_each()
[2m[36m(pid=34938)[0m     @     0x7f46d525bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34953)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34953)[0m *** SIGSEGV (@0x0) received by PID 34953 (TID 0x7f8033412700) from PID 0; stack trace: ***
[2m[36m(pid=34953)[0m     @     0x7f8032feb390 (unknown)
[2m[36m(pid=34953)[0m     @     0x7f5132f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34953)[0m     @     0x7f513263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34953)[0m     @     0x7f51326418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34952)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34952)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34952)[0m *** SIGSEGV (@0x0) received by PID 34952 (TID 0x7fd1bf7ed700) from PID 0; stack trace: ***
[2m[36m(pid=34952)[0m     @     0x7fd1bf3c6390 (unknown)
[2m[36m(pid=34952)[0m     @     0x7fa2bf229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34952)[0m     @     0x7fa2be9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34952)[0m     @     0x7fa2be9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34952)[0m     @     0x7fa2be957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34954)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34954)[0m *** SIGSEGV (@0x0) received by PID 34954 (TID 0x7f88ddc8a700) from PID 0; stack trace: ***
[2m[36m(pid=34954)[0m     @     0x7f88dd863390 (unknown)
[2m[36m(pid=34954)[0m     @     0x7f59dd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34954)[0m     @     0x7f59dcf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34954)[0m     @     0x7f59dcf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34954)[0m     @     0x7f59dcf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34885)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34885)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34885)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34885)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34885)[0m *** SIGSEGV (@0x0) received by PID 34885 (TID 0x7f2739667700) from PID 0; stack trace: ***
[2m[36m(pid=34885)[0m     @     0x7f2739240390 (unknown)
[2m[36m(pid=34885)[0m     @     0x7ef839166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34885)[0m     @     0x7ef8388917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34885)[0m     @     0x7ef8388948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34966)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34966)[0m *** SIGSEGV (@0x0) received by PID 34966 (TID 0x7f9cb27cb700) from PID 0; stack trace: ***
[2m[36m(pid=34966)[0m     @     0x7f9cb23a4390 (unknown)
[2m[36m(pid=34966)[0m     @     0x7f6db234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34966)[0m     @     0x7f6db1a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34966)[0m     @     0x7f6db1a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34966)[0m     @     0x7f6db1a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=34934)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34934)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34934)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34934)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34934)[0m *** SIGSEGV (@0x0) received by PID 34934 (TID 0x7f183d36e700) from PID 0; stack trace: ***
[2m[36m(pid=34934)[0m     @     0x7f183cf47390 (unknown)
[2m[36m(pid=34934)[0m     @     0x7ee93ceacf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34934)[0m     @     0x7ee93c5d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34934)[0m     @     0x7ee93c5da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34924)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34924)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34924)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34924)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34924)[0m *** SIGSEGV (@0x0) received by PID 34924 (TID 0x7f3324e04700) from PID 0; stack trace: ***
[2m[36m(pid=34924)[0m     @     0x7f33249dd390 (unknown)
[2m[36m(pid=34924)[0m     @     0x7f042495df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34924)[0m     @     0x7f04240887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34924)[0m     @     0x7f042408b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34913)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34913)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34913)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34913)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34913)[0m *** SIGSEGV (@0x0) received by PID 34913 (TID 0x7f5e35db0700) from PID 0; stack trace: ***
[2m[36m(pid=34913)[0m     @     0x7f5e35989390 (unknown)
[2m[36m(pid=34913)[0m     @     0x7f2f357f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34913)[0m     @     0x7f2f34f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34913)[0m     @     0x7f2f34f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34913)[0m     @     0x7f2f34f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34960)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34960)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34960)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34960)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34960)[0m *** SIGSEGV (@0x0) received by PID 34960 (TID 0x7f9ed7246700) from PID 0; stack trace: ***
[2m[36m(pid=34960)[0m     @     0x7f9ed6e1f390 (unknown)
[2m[36m(pid=34960)[0m     @     0x7f6fd6dc3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34960)[0m     @     0x7f6fd64ee7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34960)[0m     @     0x7f6fd64f18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34960)[0m     @     0x7f6fd64f1ad3 at::TensorIterator::for_each()
[2m[36m(pid=34957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34957)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34957)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34957)[0m *** SIGSEGV (@0x0) received by PID 34957 (TID 0x7f4876c71700) from PID 0; stack trace: ***
[2m[36m(pid=34957)[0m     @     0x7f487684a390 (unknown)
[2m[36m(pid=34957)[0m     @     0x7f19767bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34957)[0m     @     0x7f1975ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34957)[0m     @     0x7f1975ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34957)[0m     @     0x7f1975ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=34929)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34929)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34929)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34929)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34929)[0m *** SIGSEGV (@0x0) received by PID 34929 (TID 0x7f5bdc52e700) from PID 0; stack trace: ***
[2m[36m(pid=34929)[0m     @     0x7f5bdc107390 (unknown)
[2m[36m(pid=34929)[0m     @     0x7f2cdc094f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34929)[0m     @     0x7f2cdb7bf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34929)[0m     @     0x7f2cdb7c28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34923)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34923)[0m *** SIGSEGV (@0x0) received by PID 34923 (TID 0x7f729937d700) from PID 0; stack trace: ***
[2m[36m(pid=34923)[0m     @     0x7f7298f56390 (unknown)
[2m[36m(pid=34923)[0m     @     0x7f4398eacf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34923)[0m     @     0x7f43985d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34973)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34973)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34973)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34973)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34973)[0m *** SIGSEGV (@0x0) received by PID 34973 (TID 0x7f1fecd89700) from PID 0; stack trace: ***
[2m[36m(pid=34973)[0m     @     0x7f1fec962390 (unknown)
[2m[36m(pid=34973)[0m     @     0x7ef0ec774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34973)[0m     @     0x7ef0ebe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34914)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34914)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34914)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34964)[0m     @     0x7f36a214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34964)[0m     @     0x7f36a214fad3 at::TensorIterator::for_each()
[2m[36m(pid=34964)[0m     @     0x7f36a214fd91 at::TensorIterator::for_each()
[2m[36m(pid=34964)[0m     @     0x7f36a2a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34992)[0m     @     0x7ee927b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34992)[0m     @     0x7ee927b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=34992)[0m     @     0x7ee927b11d91 at::TensorIterator::for_each()
[2m[36m(pid=34992)[0m     @     0x7ee9283f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34979)[0m     @     0x7f263ad1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34979)[0m     @     0x7f263ad1dad3 at::TensorIterator::for_each()
[2m[36m(pid=34979)[0m     @     0x7f263ad1dd91 at::TensorIterator::for_each()
[2m[36m(pid=34979)[0m     @     0x7f263b600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34931)[0m     @     0x7f70947118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34931)[0m     @     0x7f7094711ad3 at::TensorIterator::for_each()
[2m[36m(pid=34931)[0m     @     0x7f7094711d91 at::TensorIterator::for_each()
[2m[36m(pid=34931)[0m     @     0x7f7094ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34974)[0m     @     0x7f9545476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34974)[0m     @     0x7f9544ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34974)[0m     @     0x7f9544ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34995)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34995)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34995)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34955)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34949)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34975)[0m     @     0x7ef8959a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34975)[0m     @     0x7ef8959a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=34938)[0m     @     0x7f46d527ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34938)[0m     @     0x7f46d4720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34938)[0m     @     0x7f46d471e388 at::native::copy_impl()
[2m[36m(pid=34953)[0m     @     0x7f5132641ad3 at::TensorIterator::for_each()
[2m[36m(pid=34953)[0m     @     0x7f5132641d91 at::TensorIterator::for_each()
[2m[36m(pid=34952)[0m     @     0x7fa2be957d91 at::TensorIterator::for_each()
[2m[36m(pid=34952)[0m     @     0x7fa2bf23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34952)[0m     @     0x7fa2bf25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34954)[0m     @     0x7f59dcf27d91 at::TensorIterator::for_each()
[2m[36m(pid=34954)[0m     @     0x7f59dd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34885)[0m     @     0x7ef838894ad3 at::TensorIterator::for_each()
[2m[36m(pid=34885)[0m     @     0x7ef838894d91 at::TensorIterator::for_each()
[2m[36m(pid=34966)[0m     @     0x7f6db1a79d91 at::TensorIterator::for_each()
[2m[36m(pid=34966)[0m     @     0x7f6db235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34966)[0m     @     0x7f6db237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34934)[0m     @     0x7ee93c5daad3 at::TensorIterator::for_each()
[2m[36m(pid=34934)[0m     @     0x7ee93c5dad91 at::TensorIterator::for_each()
[2m[36m(pid=34934)[0m     @     0x7ee93cebdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34924)[0m     @     0x7f042408bad3 at::TensorIterator::for_each()
[2m[36m(pid=34924)[0m     @     0x7f042408bd91 at::TensorIterator::for_each()
[2m[36m(pid=34924)[0m     @     0x7f042496eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34913)[0m     @     0x7f2f34f27d91 at::TensorIterator::for_each()
[2m[36m(pid=34913)[0m     @     0x7f2f3580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34913)[0m     @     0x7f2f3582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34960)[0m     @     0x7f6fd64f1d91 at::TensorIterator::for_each()
[2m[36m(pid=34960)[0m     @     0x7f6fd6dd4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34960)[0m     @     0x7f6fd6df7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34957)[0m     @     0x7f1975ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=34957)[0m     @     0x7f19767ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34957)[0m     @     0x7f19767efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34957)[0m     @     0x7f1975c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34962)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34962)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34962)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34929)[0m     @     0x7f2cdb7c2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34929)[0m     @     0x7f2cdb7c2d91 at::TensorIterator::for_each()
[2m[36m(pid=34929)[0m     @     0x7f2cdc0a5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34859)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34859)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34859)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34923)[0m     @     0x7f43985da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34923)[0m     @     0x7f43985daad3 at::TensorIterator::for_each()
[2m[36m(pid=34973)[0m     @     0x7ef0ebea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34973)[0m     @     0x7ef0ebea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34862)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34862)[0m *** SIGSEGV (@0x0) received by PID 34862 (TID 0x7fa9476e9700) from PID 0; stack trace: ***
[2m[36m(pid=34862)[0m     @     0x7fa9472c2390 (unknown)
[2m[36m(pid=34857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34857)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34857)[0m *** SIGSEGV (@0x0) received by PID 34857 (TID 0x7f75e695a700) from PID 0; stack trace: ***
[2m[36m(pid=34870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34870)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34940)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34940)[0m *** SIGSEGV (@0x0) received by PID 34940 (TID 0x7f12f6642700) from PID 0; stack trace: ***
[2m[36m(pid=34889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34889)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34889)[0m *** SIGSEGV (@0x0) received by PID 34889 (TID 0x7f078626f700) from PID 0; stack trace: ***
[2m[36m(pid=34886)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34886)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34886)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34886)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34886)[0m *** SIGSEGV (@0x0) received by PID 34886 (TID 0x7ff2e36ee700) from PID 0; stack trace: ***
[2m[36m(pid=34875)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34875)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34875)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34937)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34937)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34937)[0m *** SIGSEGV (@0x0) received by PID 34937 (TID 0x7fdaf371b700) from PID 0; stack trace: ***
[2m[36m(pid=34878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34878)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34878)[0m *** SIGSEGV (@0x0) received by PID 34878 (TID 0x7f6c5472a700) from PID 0; stack trace: ***
[2m[36m(pid=34943)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34943)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34943)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34853)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34853)[0m *** SIGSEGV (@0x0) received by PID 34853 (TID 0x7f8da691a700) from PID 0; stack trace: ***
[2m[36m(pid=34864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34864)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34864)[0m *** SIGSEGV (@0x0) received by PID 34864 (TID 0x7f5c0e83f700) from PID 0; stack trace: ***
[2m[36m(pid=34864)[0m     @     0x7f5c0e418390 (unknown)
[2m[36m(pid=34986)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34986)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34986)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34986)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34986)[0m *** SIGSEGV (@0x0) received by PID 34986 (TID 0x7f40eab57700) from PID 0; stack trace: ***
[2m[36m(pid=34928)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34928)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34928)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34928)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34928)[0m *** SIGSEGV (@0x0) received by PID 34928 (TID 0x7f4338c94700) from PID 0; stack trace: ***
[2m[36m(pid=34928)[0m     @     0x7f433886d390 (unknown)
[2m[36m(pid=34928)[0m     @     0x7f1438774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34882)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34882)[0m *** SIGSEGV (@0x0) received by PID 34882 (TID 0x7f4a2dfc0700) from PID 0; stack trace: ***
[2m[36m(pid=34882)[0m     @     0x7f4a2db99390 (unknown)
[2m[36m(pid=34873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34873)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34873)[0m *** SIGSEGV (@0x0) received by PID 34873 (TID 0x7f6080e0e700) from PID 0; stack trace: ***
[2m[36m(pid=34921)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34921)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34921)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34921)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34921)[0m *** SIGSEGV (@0x0) received by PID 34921 (TID 0x7f3c10a19700) from PID 0; stack trace: ***
[2m[36m(pid=34921)[0m     @     0x7f3c105f2390 (unknown)
[2m[36m(pid=34863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34863)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34863)[0m *** SIGSEGV (@0x0) received by PID 34863 (TID 0x7fce53aeb700) from PID 0; stack trace: ***
[2m[36m(pid=34863)[0m     @     0x7fce536c4390 (unknown)
[2m[36m(pid=34863)[0m     @     0x7f9f5361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34863)[0m     @     0x7f9f52d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34856)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34856)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34856)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34856)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34856)[0m *** SIGSEGV (@0x0) received by PID 34856 (TID 0x7f7f57790700) from PID 0; stack trace: ***
[2m[36m(pid=34959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34959)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34917)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34917)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34917)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34917)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34917)[0m *** SIGSEGV (@0x0) received by PID 34917 (TID 0x7f09e64dc700) from PID 0; stack trace: ***
[2m[36m(pid=34879)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34879)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34879)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34879)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34879)[0m *** SIGSEGV (@0x0) received by PID 34879 (TID 0x7f6656362700) from PID 0; stack trace: ***
[2m[36m(pid=34869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34869)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34933)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34933)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34933)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34933)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34933)[0m *** SIGSEGV (@0x0) received by PID 34933 (TID 0x7f874b1cb700) from PID 0; stack trace: ***
[2m[36m(pid=34933)[0m     @     0x7f874ada4390 (unknown)
[2m[36m(pid=34933)[0m     @     0x7f584acfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34871)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34871)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34871)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34871)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34871)[0m *** SIGSEGV (@0x0) received by PID 34871 (TID 0x7f8c5349b700) from PID 0; stack trace: ***
[2m[36m(pid=34871)[0m     @     0x7f8c53074390 (unknown)
[2m[36m(pid=34925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34925)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34925)[0m *** SIGSEGV (@0x0) received by PID 34925 (TID 0x7fcf3eefb700) from PID 0; stack trace: ***
[2m[36m(pid=34925)[0m     @     0x7fcf3ead4390 (unknown)
[2m[36m(pid=34881)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34881)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34881)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34881)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34881)[0m *** SIGSEGV (@0x0) received by PID 34881 (TID 0x7f814fe14700) from PID 0; stack trace: ***
[2m[36m(pid=34881)[0m     @     0x7f814f9ed390 (unknown)
[2m[36m(pid=34872)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34872)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34872)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34872)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34872)[0m *** SIGSEGV (@0x0) received by PID 34872 (TID 0x7fa5d7813700) from PID 0; stack trace: ***
[2m[36m(pid=34872)[0m     @     0x7fa5d73ec390 (unknown)
[2m[36m(pid=34852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34852)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34852)[0m *** SIGSEGV (@0x0) received by PID 34852 (TID 0x7f689d044700) from PID 0; stack trace: ***
[2m[36m(pid=34852)[0m     @     0x7f689cc1d390 (unknown)
[2m[36m(pid=34852)[0m     @     0x7f399cb42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34852)[0m     @     0x7f399c26d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34851)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34851)[0m *** SIGSEGV (@0x0) received by PID 34851 (TID 0x7f151db88700) from PID 0; stack trace: ***
[2m[36m(pid=34851)[0m     @     0x7f151d761390 (unknown)
[2m[36m(pid=34851)[0m     @     0x7ee61d709f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34920)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34920)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34920)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34920)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34920)[0m *** SIGSEGV (@0x0) received by PID 34920 (TID 0x7f1334927700) from PID 0; stack trace: ***
[2m[36m(pid=34920)[0m     @     0x7f1334500390 (unknown)
[2m[36m(pid=34920)[0m     @     0x7ee434333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34920)[0m     @     0x7ee433a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34932)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34932)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34932)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34932)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34932)[0m *** SIGSEGV (@0x0) received by PID 34932 (TID 0x7fd763e3f700) from PID 0; stack trace: ***
[2m[36m(pid=34932)[0m     @     0x7fd763a18390 (unknown)
[2m[36m(pid=34932)[0m     @     0x7fa863751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34932)[0m     @     0x7fa862e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34861)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34922)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34922)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34922)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34922)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34922)[0m *** SIGSEGV (@0x0) received by PID 34922 (TID 0x7f0104fa0700) from PID 0; stack trace: ***
[2m[36m(pid=34922)[0m     @     0x7f0104b79390 (unknown)
[2m[36m(pid=34922)[0m     @     0x7ed204b24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34922)[0m     @     0x7ed20424f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34866)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34916)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34916)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34916)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34916)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34916)[0m *** SIGSEGV (@0x0) received by PID 34916 (TID 0x7fa9fc5f2700) from PID 0; stack trace: ***
[2m[36m(pid=34971)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34971)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34971)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34971)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34971)[0m *** SIGSEGV (@0x0) received by PID 34971 (TID 0x7f332b0ca700) from PID 0; stack trace: ***
[2m[36m(pid=34971)[0m     @     0x7f332aca3390 (unknown)
[2m[36m(pid=34971)[0m     @     0x7f042ac35f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34971)[0m     @     0x7f042a3607db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34958)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34958)[0m *** SIGSEGV (@0x0) received by PID 34958 (TID 0x7fed63c55700) from PID 0; stack trace: ***
[2m[36m(pid=34958)[0m     @     0x7fed6382e390 (unknown)
[2m[36m(pid=34958)[0m     @     0x7fbe636aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34958)[0m     @     0x7fbe62dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34947)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34947)[0m *** SIGSEGV (@0x0) received by PID 34947 (TID 0x7f9644687700) from PID 0; stack trace: ***
[2m[36m(pid=34868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34868)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34868)[0m *** SIGSEGV (@0x0) received by PID 34868 (TID 0x7f86f1928700) from PID 0; stack trace: ***
[2m[36m(pid=34868)[0m     @     0x7f86f1501390 (unknown)
[2m[36m(pid=34892)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34892)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34892)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34892)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34892)[0m *** SIGSEGV (@0x0) received by PID 34892 (TID 0x7f0b5d661700) from PID 0; stack trace: ***
[2m[36m(pid=34892)[0m     @     0x7f0b5d23a390 (unknown)
[2m[36m(pid=34892)[0m     @     0x7edc5d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34892)[0m     @     0x7edc5c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34927)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34927)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34927)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34927)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34927)[0m *** SIGSEGV (@0x0) received by PID 34927 (TID 0x7f08b842f700) from PID 0; stack trace: ***
[2m[36m(pid=34927)[0m     @     0x7f08b8008390 (unknown)
[2m[36m(pid=34927)[0m     @     0x7ed9b7e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34927)[0m     @     0x7ed9b75367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34927)[0m     @     0x7ed9b75398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34914)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34914)[0m *** SIGSEGV (@0x0) received by PID 34914 (TID 0x7f7ccc702700) from PID 0; stack trace: ***
[2m[36m(pid=34914)[0m     @     0x7f7ccc2db390 (unknown)
[2m[36m(pid=34914)[0m     @     0x7f4dcc286f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34914)[0m     @     0x7f4dcb9b17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34914)[0m     @     0x7f4dcb9b48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34914)[0m     @     0x7f4dcb9b4ad3 at::TensorIterator::for_each()
[2m[36m(pid=34964)[0m     @     0x7f36a2a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34964)[0m     @     0x7f36a1ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34964)[0m     @     0x7f36a1ef5388 at::native::copy_impl()
[2m[36m(pid=34964)[0m     @     0x7f36a1ef75a4 at::native::copy_()
[2m[36m(pid=34964)[0m     @     0x7f36a25e24f5 at::Tensor::copy_()
[2m[36m(pid=34964)[0m     @     0x7f36a4ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34992)[0m     @     0x7ee928417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34992)[0m     @     0x7ee9278b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34992)[0m     @     0x7ee9278b7388 at::native::copy_impl()
[2m[36m(pid=34992)[0m     @     0x7ee9278b95a4 at::native::copy_()
[2m[36m(pid=34992)[0m     @     0x7ee927fa44f5 at::Tensor::copy_()
[2m[36m(pid=34992)[0m     @     0x7ee92a4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34979)[0m     @     0x7f263b623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34979)[0m     @     0x7f263aac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34979)[0m     @     0x7f263aac3388 at::native::copy_impl()
[2m[36m(pid=34979)[0m     @     0x7f263aac55a4 at::native::copy_()
[2m[36m(pid=34979)[0m     @     0x7f263b1b04f5 at::Tensor::copy_()
[2m[36m(pid=34979)[0m     @     0x7f263d6838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34931)[0m     @     0x7f7095017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34931)[0m     @     0x7f70944b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34931)[0m     @     0x7f70944b7388 at::native::copy_impl()
[2m[36m(pid=34931)[0m     @     0x7f70944b95a4 at::native::copy_()
[2m[36m(pid=34931)[0m     @     0x7f7094ba44f5 at::Tensor::copy_()
[2m[36m(pid=34931)[0m     @     0x7f70970778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34974)[0m     @     0x7f9544ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=34974)[0m     @     0x7f9544ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=34974)[0m     @     0x7f9545487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34974)[0m     @     0x7f95454aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34974)[0m     @     0x7f954494ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34974)[0m     @     0x7f954494a388 at::native::copy_impl()
[2m[36m(pid=34950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34950)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34950)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34950)[0m *** SIGSEGV (@0x0) received by PID 34950 (TID 0x7f21a49a2700) from PID 0; stack trace: ***
[2m[36m(pid=34950)[0m     @     0x7f21a457b390 (unknown)
[2m[36m(pid=34950)[0m     @     0x7ef2a44f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34950)[0m     @     0x7ef2a3c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34950)[0m     @     0x7ef2a3c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34854)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34854)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34854)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34854)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34854)[0m *** SIGSEGV (@0x0) received by PID 34854 (TID 0x7f275e0fd700) from PID 0; stack trace: ***
[2m[36m(pid=34854)[0m     @     0x7f275dcd6390 (unknown)
[2m[36m(pid=34854)[0m     @     0x7ef85dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34854)[0m     @     0x7ef85d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34854)[0m     @     0x7ef85d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34995)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34995)[0m *** SIGSEGV (@0x0) received by PID 34995 (TID 0x7f5495cee700) from PID 0; stack trace: ***
[2m[36m(pid=34995)[0m     @     0x7f54958c7390 (unknown)
[2m[36m(pid=34995)[0m     @     0x7f25957f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34995)[0m     @     0x7f2594f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34995)[0m     @     0x7f2594f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34995)[0m     @     0x7f2594f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34955)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34955)[0m *** SIGSEGV (@0x0) received by PID 34955 (TID 0x7ff9e61ee700) from PID 0; stack trace: ***
[2m[36m(pid=34955)[0m     @     0x7ff9e5dc7390 (unknown)
[2m[36m(pid=34955)[0m     @     0x7fcae5d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34955)[0m     @     0x7fcae547d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34955)[0m     @     0x7fcae54808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34955)[0m     @     0x7fcae5480ad3 at::TensorIterator::for_each()
[2m[36m(pid=34865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34865)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34865)[0m *** SIGSEGV (@0x0) received by PID 34865 (TID 0x7fa7da862700) from PID 0; stack trace: ***
[2m[36m(pid=34865)[0m     @     0x7fa7da43b390 (unknown)
[2m[36m(pid=34865)[0m     @     0x7f78da34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34865)[0m     @     0x7f78d9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34865)[0m     @     0x7f78d9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34949)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34949)[0m *** SIGSEGV (@0x0) received by PID 34949 (TID 0x7fae67941700) from PID 0; stack trace: ***
[2m[36m(pid=34949)[0m     @     0x7fae6751a390 (unknown)
[2m[36m(pid=34949)[0m     @     0x7f7f6748ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34949)[0m     @     0x7f7f66bba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34949)[0m     @     0x7f7f66bbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34949)[0m     @     0x7f7f66bbdad3 at::TensorIterator::for_each()
[2m[36m(pid=34975)[0m     @     0x7ef8959a7d91 at::TensorIterator::for_each()
[2m[36m(pid=34975)[0m     @     0x7ef89628ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34975)[0m     @     0x7ef8962adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34975)[0m     @     0x7ef89574fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34975)[0m     @     0x7ef89574d388 at::native::copy_impl()
[2m[36m(pid=34975)[0m     @     0x7ef89574f5a4 at::native::copy_()
[2m[36m(pid=34938)[0m     @     0x7f46d47205a4 at::native::copy_()
[2m[36m(pid=34938)[0m     @     0x7f46d4e0b4f5 at::Tensor::copy_()
[2m[36m(pid=34938)[0m     @     0x7f46d72de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34938)[0m     @     0x7f46d4e0b4f5 at::Tensor::copy_()
[2m[36m(pid=34938)[0m     @     0x7f46daeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34938)[0m     @     0x561051e90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34938)[0m     @     0x561051debb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34938)[0m     @     0x561051e76baf _PyEval_EvalCodeWithName
[2m[36m(pid=34938)[0m     @     0x561051e77a20 method_vectorcall
[2m[36m(pid=34938)[0m     @     0x561051debbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34938)[0m     @     0x561051e76baf _PyEval_EvalCodeWithName
[2m[36m(pid=34938)[0m     @     0x561051e77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34938)[0m     @     0x561051dec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34938)[0m     @     0x561051e76baf _PyEval_EvalCodeWithName
[2m[36m(pid=34938)[0m     @     0x561051e77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34938)[0m     @     0x561051dec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34938)[0m     @     0x561051e76baf _PyEval_EvalCodeWithName
[2m[36m(pid=34938)[0m     @     0x561051e77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34938)[0m     @     0x561051dec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34938)[0m     @     0x561051e76baf _PyEval_EvalCodeWithName
[2m[36m(pid=34938)[0m     @     0x561051e77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34938)[0m     @     0x561051dec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x7f5132f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34953)[0m     @     0x7f5132f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34953)[0m     @     0x7f51323e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34953)[0m     @     0x7f51323e7388 at::native::copy_impl()
[2m[36m(pid=34953)[0m     @     0x7f51323e95a4 at::native::copy_()
[2m[36m(pid=34953)[0m     @     0x7f5132ad44f5 at::Tensor::copy_()
[2m[36m(pid=34953)[0m     @     0x7f5134fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34952)[0m     @     0x7fa2be6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34952)[0m     @     0x7fa2be6fd388 at::native::copy_impl()
[2m[36m(pid=34952)[0m     @     0x7fa2be6ff5a4 at::native::copy_()
[2m[36m(pid=34952)[0m     @     0x7fa2bedea4f5 at::Tensor::copy_()
[2m[36m(pid=34952)[0m     @     0x7fa2c12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34952)[0m     @     0x7fa2bedea4f5 at::Tensor::copy_()
[2m[36m(pid=34952)[0m     @     0x7fa2c4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34952)[0m     @     0x55d9152f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34952)[0m     @     0x55d915254b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d9152dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34952)[0m     @     0x55d9152e0a20 method_vectorcall
[2m[36m(pid=34952)[0m     @     0x55d915254bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d9152dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34952)[0m     @     0x55d9152e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34952)[0m     @     0x55d915255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d9152dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34952)[0m     @     0x55d9152e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34954)[0m     @     0x7f59dd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34954)[0m     @     0x7f59dcccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34954)[0m     @     0x7f59dcccd388 at::native::copy_impl()
[2m[36m(pid=34954)[0m     @     0x7f59dcccf5a4 at::native::copy_()
[2m[36m(pid=34954)[0m     @     0x7f59dd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=34954)[0m     @     0x7f59df88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34885)[0m     @     0x7ef839177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34885)[0m     @     0x7ef83919ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34885)[0m     @     0x7ef83863ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34885)[0m     @     0x7ef83863a388 at::native::copy_impl()
[2m[36m(pid=34885)[0m     @     0x7ef83863c5a4 at::native::copy_()
[2m[36m(pid=34885)[0m     @     0x7ef838d274f5 at::Tensor::copy_()
[2m[36m(pid=34885)[0m     @     0x7ef83b1fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34966)[0m     @     0x7f6db1821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34966)[0m     @     0x7f6db181f388 at::native::copy_impl()
[2m[36m(pid=34966)[0m     @     0x7f6db18215a4 at::native::copy_()
[2m[36m(pid=34966)[0m     @     0x7f6db1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34966)[0m     @     0x7f6db43df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34934)[0m     @     0x7ee93cee0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34934)[0m     @     0x7ee93c382a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34934)[0m     @     0x7ee93c380388 at::native::copy_impl()
[2m[36m(pid=34934)[0m     @     0x7ee93c3825a4 at::native::copy_()
[2m[36m(pid=34934)[0m     @     0x7ee93ca6d4f5 at::Tensor::copy_()
[2m[36m(pid=34934)[0m     @     0x7ee93ef408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34924)[0m     @     0x7f0424991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34924)[0m     @     0x7f0423e33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34924)[0m     @     0x7f0423e31388 at::native::copy_impl()
[2m[36m(pid=34924)[0m     @     0x7f0423e335a4 at::native::copy_()
[2m[36m(pid=34924)[0m     @     0x7f042451e4f5 at::Tensor::copy_()
[2m[36m(pid=34924)[0m     @     0x7f04269f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34913)[0m     @     0x7f2f34ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34913)[0m     @     0x7f2f34ccd388 at::native::copy_impl()
[2m[36m(pid=34913)[0m     @     0x7f2f34ccf5a4 at::native::copy_()
[2m[36m(pid=34913)[0m     @     0x7f2f353ba4f5 at::Tensor::copy_()
[2m[36m(pid=34913)[0m     @     0x7f2f3788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34913)[0m     @     0x7f2f353ba4f5 at::Tensor::copy_()
[2m[36m(pid=34960)[0m     @     0x7f6fd6299a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34960)[0m     @     0x7f6fd6297388 at::native::copy_impl()
[2m[36m(pid=34960)[0m     @     0x7f6fd62995a4 at::native::copy_()
[2m[36m(pid=34960)[0m     @     0x7f6fd69844f5 at::Tensor::copy_()
[2m[36m(pid=34960)[0m     @     0x7f6fd8e578de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34957)[0m     @     0x7f1975c8f388 at::native::copy_impl()
[2m[36m(pid=34957)[0m     @     0x7f1975c915a4 at::native::copy_()
[2m[36m(pid=34957)[0m     @     0x7f197637c4f5 at::Tensor::copy_()
[2m[36m(pid=34957)[0m     @     0x7f197884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34957)[0m     @     0x7f197637c4f5 at::Tensor::copy_()
[2m[36m(pid=34957)[0m     @     0x7f197c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34957)[0m     @     0x55ff780dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34957)[0m     @     0x55ff78037b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34962)[0m *** SIGSEGV (@0x0) received by PID 34962 (TID 0x7fb153af8700) from PID 0; stack trace: ***
[2m[36m(pid=34962)[0m     @     0x7fb1536d1390 (unknown)
[2m[36m(pid=34962)[0m     @     0x7f825361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34962)[0m     @     0x7f8252d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34962)[0m     @     0x7f8252d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34962)[0m     @     0x7f8252d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34929)[0m     @     0x7f2cdc0c8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34929)[0m     @     0x7f2cdb56aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34929)[0m     @     0x7f2cdb568388 at::native::copy_impl()
[2m[36m(pid=34929)[0m     @     0x7f2cdb56a5a4 at::native::copy_()
[2m[36m(pid=34929)[0m     @     0x7f2cdbc554f5 at::Tensor::copy_()
[2m[36m(pid=34929)[0m     @     0x7f2cde1288de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34859)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34859)[0m *** SIGSEGV (@0x0) received by PID 34859 (TID 0x7f7b56aca700) from PID 0; stack trace: ***
[2m[36m(pid=34859)[0m     @     0x7f7b566a3390 (unknown)
[2m[36m(pid=34859)[0m     @     0x7f4c55940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34859)[0m     @     0x7f4c5506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34859)[0m     @     0x7f4c5506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34859)[0m     @     0x7f4c5506ead3 at::TensorIterator::for_each()
[2m[36m(pid=34923)[0m     @     0x7f43985dad91 at::TensorIterator::for_each()
[2m[36m(pid=34923)[0m     @     0x7f4398ebdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34923)[0m     @     0x7f4398ee0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34923)[0m     @     0x7f4398382a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34923)[0m     @     0x7f4398380388 at::native::copy_impl()
[2m[36m(pid=34923)[0m     @     0x7f43983825a4 at::native::copy_()
[2m[36m(pid=34858)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34858)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34858)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34858)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34858)[0m *** SIGSEGV (@0x0) received by PID 34858 (TID 0x7f7123c3e700) from PID 0; stack trace: ***
[2m[36m(pid=34858)[0m     @     0x7f7123817390 (unknown)
[2m[36m(pid=34858)[0m     @     0x7f42237a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34858)[0m     @     0x7f4222ed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34858)[0m     @     0x7f4222ed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34942)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34942)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34942)[0m *** SIGSEGV (@0x0) received by PID 34942 (TID 0x7f773c753700) from PID 0; stack trace: ***
[2m[36m(pid=34942)[0m     @     0x7f773c32c390 (unknown)
[2m[36m(pid=34942)[0m     @     0x7f483bf2ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34942)[0m     @     0x7f483b65a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34942)[0m     @     0x7f483b65d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34973)[0m     @     0x7ef0ebea2d91 at::TensorIterator::for_each()
[2m[36m(pid=34973)[0m     @     0x7ef0ec785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34973)[0m     @     0x7ef0ec7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34973)[0m     @     0x7ef0ebc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34973)[0m     @     0x7ef0ebc48388 at::native::copy_impl()
[2m[36m(pid=34973)[0m     @     0x7ef0ebc4a5a4 at::native::copy_()
[2m[36m(pid=34862)[0m     @     0x7f7a47266f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34862)[0m     @     0x7f7a469917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34862)[0m     @     0x7f7a469948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34862)[0m     @     0x7f7a46994ad3 at::TensorIterator::for_each()
[2m[36m(pid=34862)[0m     @     0x7f7a46994d91 at::TensorIterator::for_each()
[2m[36m(pid=34862)[0m     @     0x7f7a47277b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34862)[0m     @     0x7f7a4729ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34857)[0m     @     0x7f75e6533390 (unknown)
[2m[36m(pid=34857)[0m     @     0x7f46e634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34857)[0m     @     0x7f46e5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34857)[0m     @     0x7f46e5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34857)[0m     @     0x7f46e5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=34857)[0m     @     0x7f46e5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=34870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34870)[0m *** SIGSEGV (@0x0) received by PID 34870 (TID 0x7f9c9cd80700) from PID 0; stack trace: ***
[2m[36m(pid=34870)[0m     @     0x7f9c9c959390 (unknown)
[2m[36m(pid=34870)[0m     @     0x7f6d9c8f0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34870)[0m     @     0x7f6d9c01b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34870)[0m     @     0x7f6d9c01e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34870)[0m     @     0x7f6d9c01ead3 at::TensorIterator::for_each()
[2m[36m(pid=34940)[0m     @     0x7f12f621b390 (unknown)
[2m[36m(pid=34940)[0m     @     0x7ee3f613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34940)[0m     @     0x7ee3f58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34940)[0m     @     0x7ee3f58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34940)[0m     @     0x7ee3f5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=34940)[0m     @     0x7ee3f5868d91 at::TensorIterator::for_each()
[2m[36m(pid=34889)[0m     @     0x7f0785e48390 (unknown)
[2m[36m(pid=34889)[0m     @     0x7ed885de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34889)[0m     @     0x7ed88550f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34889)[0m     @     0x7ed8855128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34889)[0m     @     0x7ed885512ad3 at::TensorIterator::for_each()
[2m[36m(pid=34886)[0m     @     0x7ff2e32c7390 (unknown)
[2m[36m(pid=34886)[0m     @     0x7fc3e3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34886)[0m     @     0x7fc3e284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34886)[0m     @     0x7fc3e28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34886)[0m     @     0x7fc3e2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=34886)[0m     @     0x7fc3e2852d91 at::TensorIterator::for_each()
[2m[36m(pid=34875)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34875)[0m *** SIGSEGV (@0x0) received by PID 34875 (TID 0x7f3e680d9700) from PID 0; stack trace: ***
[2m[36m(pid=34875)[0m     @     0x7f3e67cb2390 (unknown)
[2m[36m(pid=34875)[0m     @     0x7f0f67af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34875)[0m     @     0x7f0f672207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34875)[0m     @     0x7f0f672238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34875)[0m     @     0x7f0f67223ad3 at::TensorIterator::for_each()
[2m[36m(pid=34937)[0m     @     0x7fdaf32f4390 (unknown)
[2m[36m(pid=34937)[0m     @     0x7fabf3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34937)[0m     @     0x7fabf284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34937)[0m     @     0x7fabf28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34937)[0m     @     0x7fabf2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=34937)[0m     @     0x7fabf2852d91 at::TensorIterator::for_each()
[2m[36m(pid=34878)[0m     @     0x7f6c54303390 (unknown)
[2m[36m(pid=34878)[0m     @     0x7f3d540cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34878)[0m     @     0x7f3d537f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34878)[0m     @     0x7f3d537fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34878)[0m     @     0x7f3d537fbad3 at::TensorIterator::for_each()
[2m[36m(pid=34878)[0m     @     0x7f3d537fbd91 at::TensorIterator::for_each()
[2m[36m(pid=34943)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34943)[0m *** SIGSEGV (@0x0) received by PID 34943 (TID 0x7fb22214d700) from PID 0; stack trace: ***
[2m[36m(pid=34943)[0m     @     0x7fb221d26390 (unknown)
[2m[36m(pid=34943)[0m     @     0x7f8321c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34943)[0m     @     0x7f83213387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34943)[0m     @     0x7f832133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34943)[0m     @     0x7f832133bad3 at::TensorIterator::for_each()
[2m[36m(pid=34853)[0m     @     0x7f8da64f3390 (unknown)
[2m[36m(pid=34853)[0m     @     0x7f5ea646ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34853)[0m     @     0x7f5ea5b9a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34853)[0m     @     0x7f5ea5b9d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34853)[0m     @     0x7f5ea5b9dad3 at::TensorIterator::for_each()
[2m[36m(pid=34853)[0m     @     0x7f5ea5b9dd91 at::TensorIterator::for_each()
[2m[36m(pid=34926)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34926)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34926)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34926)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34926)[0m *** SIGSEGV (@0x0) received by PID 34926 (TID 0x7fec93369700) from PID 0; stack trace: ***
[2m[36m(pid=34926)[0m     @     0x7fec92f42390 (unknown)
[2m[36m(pid=34926)[0m     @     0x7fbd92ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34926)[0m     @     0x7fbd925fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34930)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34930)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34930)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34930)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34930)[0m *** SIGSEGV (@0x0) received by PID 34930 (TID 0x7f9204f45700) from PID 0; stack trace: ***
[2m[36m(pid=34930)[0m     @     0x7f9204b1e390 (unknown)
[2m[36m(pid=34930)[0m     @     0x7f6304a8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34930)[0m     @     0x7f63041b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34930)[0m     @     0x7f63041bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34919)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34919)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34919)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34919)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34919)[0m *** SIGSEGV (@0x0) received by PID 34919 (TID 0x7fb770ecb700) from PID 0; stack trace: ***
[2m[36m(pid=34919)[0m     @     0x7fb770aa4390 (unknown)
[2m[36m(pid=34919)[0m     @     0x7f88709e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34919)[0m     @     0x7f88701137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34936)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34936)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34936)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34936)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34936)[0m *** SIGSEGV (@0x0) received by PID 34936 (TID 0x7f25fae43700) from PID 0; stack trace: ***
[2m[36m(pid=34936)[0m     @     0x7f25faa1c390 (unknown)
[2m[36m(pid=34936)[0m     @     0x7ef6fa70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34936)[0m     @     0x7ef6f9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34936)[0m     @     0x7ef6f9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34864)[0m     @     0x7f2d0e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34864)[0m     @     0x7f2d0da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34864)[0m     @     0x7f2d0da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34864)[0m     @     0x7f2d0da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=34864)[0m     @     0x7f2d0da79d91 at::TensorIterator::for_each()
[2m[36m(pid=34864)[0m     @     0x7f2d0e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34986)[0m     @     0x7f40ea730390 (unknown)
[2m[36m(pid=34986)[0m     @     0x7f11ea4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34986)[0m     @     0x7f11e9c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34986)[0m     @     0x7f11e9c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34928)[0m     @     0x7f1437e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34928)[0m     @     0x7f1437ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34928)[0m     @     0x7f1437ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34882)[0m     @     0x7f1b2db3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34882)[0m     @     0x7f1b2d2657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34882)[0m     @     0x7f1b2d2688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34882)[0m     @     0x7f1b2d268ad3 at::TensorIterator::for_each()
[2m[36m(pid=34873)[0m     @     0x7f60809e7390 (unknown)
[2m[36m(pid=34873)[0m     @     0x7f3180774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34873)[0m     @     0x7f317fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34873)[0m     @     0x7f317fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34873)[0m     @     0x7f317fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=34921)[0m     @     0x7f0d1057cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34921)[0m     @     0x7f0d0fca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34921)[0m     @     0x7f0d0fcaa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34921)[0m     @     0x7f0d0fcaaad3 at::TensorIterator::for_each()
[2m[36m(pid=34863)[0m     @     0x7f9f52d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34863)[0m     @     0x7f9f52d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=34945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34945)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34945)[0m *** SIGSEGV (@0x0) received by PID 34945 (TID 0x7f5e3196b700) from PID 0; stack trace: ***
[2m[36m(pid=34945)[0m     @     0x7f5e31544390 (unknown)
[2m[36m(pid=34856)[0m     @     0x7f7f57369390 (unknown)
[2m[36m(pid=34856)[0m     @     0x7f5057229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34856)[0m     @     0x7f50569547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34856)[0m     @     0x7f50569578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34856)[0m     @     0x7f5056957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34959)[0m *** SIGSEGV (@0x0) received by PID 34959 (TID 0x7f6795dec700) from PID 0; stack trace: ***
[2m[36m(pid=34959)[0m     @     0x7f67959c5390 (unknown)
[2m[36m(pid=34959)[0m     @     0x7f38957f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34959)[0m     @     0x7f3894f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34959)[0m     @     0x7f3894f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34917)[0m     @     0x7f09e60b5390 (unknown)
[2m[36m(pid=34917)[0m     @     0x7edae604df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34917)[0m     @     0x7edae57787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34917)[0m     @     0x7edae577b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34917)[0m     @     0x7edae577bad3 at::TensorIterator::for_each()
[2m[36m(pid=34879)[0m     @     0x7f6655f3b390 (unknown)
[2m[36m(pid=34879)[0m     @     0x7f3755e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34879)[0m     @     0x7f375554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34879)[0m     @     0x7f37555528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34879)[0m     @     0x7f3755552ad3 at::TensorIterator::for_each()
[2m[36m(pid=34879)[0m     @     0x7f3755552d91 at::TensorIterator::for_each()
[2m[36m(pid=34869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34869)[0m *** SIGSEGV (@0x0) received by PID 34869 (TID 0x7f3470948700) from PID 0; stack trace: ***
[2m[36m(pid=34869)[0m     @     0x7f3470521390 (unknown)
[2m[36m(pid=34869)[0m     @     0x7f05703e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34933)[0m     @     0x7f584a4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34933)[0m     @     0x7f584a42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34933)[0m     @     0x7f584a42aad3 at::TensorIterator::for_each()
[2m[36m(pid=34933)[0m     @     0x7f584a42ad91 at::TensorIterator::for_each()
[2m[36m(pid=34933)[0m     @     0x7f584ad0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34871)[0m     @     0x7f5d53014f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34871)[0m     @     0x7f5d5273f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34871)[0m     @     0x7f5d527428f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34871)[0m     @     0x7f5d52742ad3 at::TensorIterator::for_each()
[2m[36m(pid=34871)[0m     @     0x7f5d52742d91 at::TensorIterator::for_each()
[2m[36m(pid=34925)[0m     @     0x7fa03ea64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34925)[0m     @     0x7fa03e18f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34925)[0m     @     0x7fa03e1928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34925)[0m     @     0x7fa03e192ad3 at::TensorIterator::for_each()
[2m[36m(pid=34881)[0m     @     0x7f524f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34881)[0m     @     0x7f524f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34881)[0m     @     0x7f524f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34881)[0m     @     0x7f524f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=34881)[0m     @     0x7f524f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=34881)[0m     @     0x7f524f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34872)[0m     @     0x7f76d7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34872)[0m     @     0x7f76d69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34872)[0m     @     0x7f76d69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34872)[0m     @     0x7f76d6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=34872)[0m     @     0x7f76d6957d91 at::TensorIterator::for_each()
[2m[36m(pid=34852)[0m     @     0x7f399c2708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34852)[0m     @     0x7f399c270ad3 at::TensorIterator::for_each()
[2m[36m(pid=34852)[0m     @     0x7f399c270d91 at::TensorIterator::for_each()
[2m[36m(pid=34852)[0m     @     0x7f399cb53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34852)[0m     @     0x7f399cb76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34852)[0m     @     0x7f399c018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34851)[0m     @     0x7ee61ce347db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34851)[0m     @     0x7ee61ce378f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34851)[0m     @     0x7ee61ce37ad3 at::TensorIterator::for_each()
[2m[36m(pid=34851)[0m     @     0x7ee61ce37d91 at::TensorIterator::for_each()
[2m[36m(pid=34851)[0m     @     0x7ee61d71ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34920)[0m     @     0x7ee433a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34920)[0m     @     0x7ee433a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=34920)[0m     @     0x7ee433a61d91 at::TensorIterator::for_each()
[2m[36m(pid=34920)[0m     @     0x7ee434344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34920)[0m     @     0x7ee434367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34920)[0m     @     0x7ee433809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34932)[0m     @     0x7fa862e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34932)[0m     @     0x7fa862e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=34932)[0m     @     0x7fa862e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=34932)[0m     @     0x7fa863762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34932)[0m     @     0x7fa863785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34861)[0m *** SIGSEGV (@0x0) received by PID 34861 (TID 0x7f491f4ec700) from PID 0; stack trace: ***
[2m[36m(pid=34861)[0m     @     0x7f491f0c5390 (unknown)
[2m[36m(pid=34861)[0m     @     0x7f1a1f077f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34861)[0m     @     0x7f1a1e7a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34922)[0m     @     0x7ed2042528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34922)[0m     @     0x7ed204252ad3 at::TensorIterator::for_each()
[2m[36m(pid=34922)[0m     @     0x7ed204252d91 at::TensorIterator::for_each()
[2m[36m(pid=34922)[0m     @     0x7ed204b35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34922)[0m     @     0x7ed204b58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34866)[0m *** SIGSEGV (@0x0) received by PID 34866 (TID 0x7fde1e7a9700) from PID 0; stack trace: ***
[2m[36m(pid=34866)[0m     @     0x7fde1e382390 (unknown)
[2m[36m(pid=34866)[0m     @     0x7faf1e2f8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34866)[0m     @     0x7faf1da237db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34916)[0m     @     0x7fa9fc1cb390 (unknown)
[2m[36m(pid=34916)[0m     @     0x7f7afc01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34916)[0m     @     0x7f7afb7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34916)[0m     @     0x7f7afb74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34916)[0m     @     0x7f7afb74aad3 at::TensorIterator::for_each()
[2m[36m(pid=34971)[0m     @     0x7f042a3638f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34971)[0m     @     0x7f042a363ad3 at::TensorIterator::for_each()
[2m[36m(pid=34971)[0m     @     0x7f042a363d91 at::TensorIterator::for_each()
[2m[36m(pid=34971)[0m     @     0x7f042ac46b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34971)[0m     @     0x7f042ac69c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34958)[0m     @     0x7fbe62ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34958)[0m     @     0x7fbe62ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=34958)[0m     @     0x7fbe62ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=34958)[0m     @     0x7fbe636bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34958)[0m     @     0x7fbe636e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34947)[0m     @     0x7f9644260390 (unknown)
[2m[36m(pid=34947)[0m     @     0x7f67440cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34947)[0m     @     0x7f67437f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34947)[0m     @     0x7f67437fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34947)[0m     @     0x7f67437fbad3 at::TensorIterator::for_each()
[2m[36m(pid=34868)[0m     @     0x7f57f14a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34868)[0m     @     0x7f57f0bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34868)[0m     @     0x7f57f0bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34868)[0m     @     0x7f57f0bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=34855)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=34855)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=34855)[0m *** Aborted at 1604572879 (unix time) try "date -d @1604572879" if you are using GNU date ***
[2m[36m(pid=34855)[0m PC: @                0x0 (unknown)
[2m[36m(pid=34855)[0m *** SIGSEGV (@0x0) received by PID 34855 (TID 0x7fb3f6ecd700) from PID 0; stack trace: ***
[2m[36m(pid=34855)[0m     @     0x7fb3f6aa6390 (unknown)
[2m[36m(pid=34855)[0m     @     0x7f84f69ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34855)[0m     @     0x7f84f60f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34892)[0m     @     0x7edc5c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34892)[0m     @     0x7edc5c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=34892)[0m     @     0x7edc5c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=34892)[0m     @     0x7edc5d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34927)[0m     @     0x7ed9b7539ad3 at::TensorIterator::for_each()
[2m[36m(pid=34927)[0m     @     0x7ed9b7539d91 at::TensorIterator::for_each()
[2m[36m(pid=34927)[0m     @     0x7ed9b7e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34927)[0m     @     0x7ed9b7e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34914)[0m     @     0x7f4dcb9b4d91 at::TensorIterator::for_each()
[2m[36m(pid=34914)[0m     @     0x7f4dcc297b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34914)[0m     @     0x7f4dcc2bac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34914)[0m     @     0x7f4dcb75ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34914)[0m     @     0x7f4dcb75a388 at::native::copy_impl()
[2m[36m(pid=34964)[0m     @     0x7f36a25e24f5 at::Tensor::copy_()
[2m[36m(pid=34964)[0m     @     0x7f36a868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34964)[0m     @     0x5559daf21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34964)[0m     @     0x5559dae7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34964)[0m     @     0x5559daf07baf _PyEval_EvalCodeWithName
[2m[36m(pid=34964)[0m     @     0x5559daf08a20 method_vectorcall
[2m[36m(pid=34964)[0m     @     0x5559dae7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34964)[0m     @     0x5559daf07baf _PyEval_EvalCodeWithName
[2m[36m(pid=34964)[0m     @     0x5559daf08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34964)[0m     @     0x5559dae7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34964)[0m     @     0x5559daf07baf _PyEval_EvalCodeWithName
[2m[36m(pid=34964)[0m     @     0x5559daf08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34964)[0m     @     0x5559dae7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34964)[0m     @     0x5559daf07baf _PyEval_EvalCodeWithName
[2m[36m(pid=34964)[0m     @     0x5559daf08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34964)[0m     @     0x5559dae7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34964)[0m     @     0x5559daf07baf _PyEval_EvalCodeWithName
[2m[36m(pid=34964)[0m     @     0x5559daf08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34964)[0m     @     0x5559dae7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x7ee927fa44f5 at::Tensor::copy_()
[2m[36m(pid=34992)[0m     @     0x7ee92e04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34992)[0m     @     0x564358858fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34992)[0m     @     0x5643587b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x56435883ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34992)[0m     @     0x56435883fa20 method_vectorcall
[2m[36m(pid=34992)[0m     @     0x5643587b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x56435883ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34992)[0m     @     0x56435883f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34992)[0m     @     0x5643587b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x56435883ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34992)[0m     @     0x56435883f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34992)[0m     @     0x5643587b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x56435883ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34992)[0m     @     0x56435883f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34992)[0m     @     0x5643587b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34992)[0m     @     0x56435883ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34992)[0m     @     0x56435883f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34992)[0m     @     0x5643587b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x7f263b1b04f5 at::Tensor::copy_()
[2m[36m(pid=34979)[0m     @     0x7f264125b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34979)[0m     @     0x5581d43e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34979)[0m     @     0x5581d433cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x5581d43c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34979)[0m     @     0x5581d43c8a20 method_vectorcall
[2m[36m(pid=34979)[0m     @     0x5581d433cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x5581d43c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34979)[0m     @     0x5581d43c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34979)[0m     @     0x5581d433d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x5581d43c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34979)[0m     @     0x5581d43c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34979)[0m     @     0x5581d433d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x5581d43c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34979)[0m     @     0x5581d43c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34979)[0m     @     0x5581d433d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34979)[0m     @     0x5581d43c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34979)[0m     @     0x5581d43c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34979)[0m     @     0x5581d433d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x7f7094ba44f5 at::Tensor::copy_()
[2m[36m(pid=34931)[0m     @     0x7f709ac4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34931)[0m     @     0x55b4bfda8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34931)[0m     @     0x55b4bfd03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x55b4bfd8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34931)[0m     @     0x55b4bfd8fa20 method_vectorcall
[2m[36m(pid=34931)[0m     @     0x55b4bfd03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x55b4bfd8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34931)[0m     @     0x55b4bfd8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34931)[0m     @     0x55b4bfd04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x55b4bfd8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34931)[0m     @     0x55b4bfd8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34931)[0m     @     0x55b4bfd04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x55b4bfd8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34931)[0m     @     0x55b4bfd8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34931)[0m     @     0x55b4bfd04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34931)[0m     @     0x55b4bfd8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34931)[0m     @     0x55b4bfd8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34931)[0m     @     0x55b4bfd04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x7f954494c5a4 at::native::copy_()
[2m[36m(pid=34974)[0m     @     0x7f95450374f5 at::Tensor::copy_()
[2m[36m(pid=34974)[0m     @     0x7f954750a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34950)[0m     @     0x7ef2a3c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=34950)[0m     @     0x7ef2a3c24d91 at::TensorIterator::for_each()
[2m[36m(pid=34950)[0m     @     0x7ef2a4507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34950)[0m     @     0x7ef2a452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34854)[0m     @     0x7ef85d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=34854)[0m     @     0x7ef85d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=34854)[0m     @     0x7ef85dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34854)[0m     @     0x7ef85dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34995)[0m     @     0x7f2594f27d91 at::TensorIterator::for_each()
[2m[36m(pid=34995)[0m     @     0x7f259580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34995)[0m     @     0x7f259582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34995)[0m     @     0x7f2594ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34955)[0m     @     0x7fcae5480d91 at::TensorIterator::for_each()
[2m[36m(pid=34955)[0m     @     0x7fcae5d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34955)[0m     @     0x7fcae5d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34955)[0m     @     0x7fcae5228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34865)[0m     @     0x7f78d9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=34865)[0m     @     0x7f78d9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=34865)[0m     @     0x7f78da35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34865)[0m     @     0x7f78da37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34949)[0m     @     0x7f7f66bbdd91 at::TensorIterator::for_each()
[2m[36m(pid=34949)[0m     @     0x7f7f674a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34949)[0m     @     0x7f7f674c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34949)[0m     @     0x7f7f66965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34949)[0m     @     0x7f7f66963388 at::native::copy_impl()
[2m[36m(pid=34975)[0m     @     0x7ef895e3a4f5 at::Tensor::copy_()
[2m[36m(pid=34975)[0m     @     0x7ef89830d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34975)[0m     @     0x7ef895e3a4f5 at::Tensor::copy_()
[2m[36m(pid=34975)[0m     @     0x7ef89bee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34975)[0m     @     0x55994c91bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34975)[0m     @     0x55994c876b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34975)[0m     @     0x55994c902a20 method_vectorcall
[2m[36m(pid=34975)[0m     @     0x55994c876bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34975)[0m     @     0x55994c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34975)[0m     @     0x55994c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x7f5132ad44f5 at::Tensor::copy_()
[2m[36m(pid=34953)[0m     @     0x7f5138b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34953)[0m     @     0x55b83c9e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34953)[0m     @     0x55b83c944b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x55b83c9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x55b83c9d0a20 method_vectorcall
[2m[36m(pid=34953)[0m     @     0x55b83c944bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x55b83c9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x55b83c9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34953)[0m     @     0x55b83c945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x55b83c9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x55b83c9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34953)[0m     @     0x55b83c945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x55b83c9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x55b83c9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34953)[0m     @     0x55b83c945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34953)[0m     @     0x55b83c9cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34953)[0m     @     0x55b83c9d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34953)[0m     @     0x55b83c945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d915255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d9152dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34952)[0m     @     0x55d9152e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34952)[0m     @     0x55d915255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34952)[0m     @     0x55d9152dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34952)[0m     @     0x55d9152e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34952)[0m     @     0x55d915255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x7f59dd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=34954)[0m     @     0x7f59e346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34954)[0m     @     0x55cd83b2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34954)[0m     @     0x55cd83a86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x55cd83b11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34954)[0m     @     0x55cd83b12a20 method_vectorcall
[2m[36m(pid=34954)[0m     @     0x55cd83a86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x55cd83b11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34954)[0m     @     0x55cd83b12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34954)[0m     @     0x55cd83a87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x55cd83b11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34954)[0m     @     0x55cd83b12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34954)[0m     @     0x55cd83a87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x55cd83b11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34954)[0m     @     0x55cd83b12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34954)[0m     @     0x55cd83a87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34954)[0m     @     0x55cd83b11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34954)[0m     @     0x55cd83b12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34954)[0m     @     0x55cd83a87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x7ef838d274f5 at::Tensor::copy_()
[2m[36m(pid=34885)[0m     @     0x7ef83edd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34885)[0m     @     0x561448308fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34885)[0m     @     0x561448263b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x5614482eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34885)[0m     @     0x5614482efa20 method_vectorcall
[2m[36m(pid=34885)[0m     @     0x561448263bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x5614482eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34885)[0m     @     0x5614482ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34885)[0m     @     0x561448264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x5614482eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34885)[0m     @     0x5614482ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34885)[0m     @     0x561448264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x5614482eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34885)[0m     @     0x5614482ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34885)[0m     @     0x561448264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34885)[0m     @     0x5614482eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34885)[0m     @     0x5614482ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34885)[0m     @     0x561448264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x7f6db1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34966)[0m     @     0x7f6db7fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34966)[0m     @     0x5620ff566fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34966)[0m     @     0x5620ff4c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x5620ff54cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34966)[0m     @     0x5620ff54da20 method_vectorcall
[2m[36m(pid=34966)[0m     @     0x5620ff4c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x5620ff54cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34966)[0m     @     0x5620ff54d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34966)[0m     @     0x5620ff4c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x5620ff54cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34966)[0m     @     0x5620ff54d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34966)[0m     @     0x5620ff4c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x5620ff54cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34966)[0m     @     0x5620ff54d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34966)[0m     @     0x5620ff4c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34966)[0m     @     0x5620ff54cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34966)[0m     @     0x5620ff54d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34966)[0m     @     0x5620ff4c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x7ee93ca6d4f5 at::Tensor::copy_()
[2m[36m(pid=34934)[0m     @     0x7ee942b1879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34934)[0m     @     0x5607fde0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34934)[0m     @     0x5607fdd67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x5607fddf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34934)[0m     @     0x5607fddf3a20 method_vectorcall
[2m[36m(pid=34934)[0m     @     0x5607fdd67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x5607fddf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34934)[0m     @     0x5607fddf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34934)[0m     @     0x5607fdd68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x5607fddf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34934)[0m     @     0x5607fddf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34934)[0m     @     0x5607fdd68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x5607fddf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34934)[0m     @     0x5607fddf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34934)[0m     @     0x5607fdd68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34934)[0m     @     0x5607fddf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34934)[0m     @     0x5607fddf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34934)[0m     @     0x5607fdd68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x7f042451e4f5 at::Tensor::copy_()
[2m[36m(pid=34924)[0m     @     0x7f042a5c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34924)[0m     @     0x561f62416fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34924)[0m     @     0x561f62371b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x561f623fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34924)[0m     @     0x561f623fda20 method_vectorcall
[2m[36m(pid=34924)[0m     @     0x561f62371bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x561f623fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34924)[0m     @     0x561f623fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34924)[0m     @     0x561f62372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x561f623fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34924)[0m     @     0x561f623fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34924)[0m     @     0x561f62372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x561f623fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34924)[0m     @     0x561f623fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34924)[0m     @     0x561f62372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34924)[0m     @     0x561f623fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34924)[0m     @     0x561f623fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34924)[0m     @     0x561f62372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x7f2f3b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34913)[0m     @     0x5650dee8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34913)[0m     @     0x5650dede7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x5650dee72baf _PyEval_EvalCodeWithName
[2m[36m(pid=34913)[0m     @     0x5650dee73a20 method_vectorcall
[2m[36m(pid=34913)[0m     @     0x5650dede7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x5650dee72baf _PyEval_EvalCodeWithName
[2m[36m(pid=34913)[0m     @     0x5650dee73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34913)[0m     @     0x5650dede8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x5650dee72baf _PyEval_EvalCodeWithName
[2m[36m(pid=34913)[0m     @     0x5650dee73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34913)[0m     @     0x5650dede8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x5650dee72baf _PyEval_EvalCodeWithName
[2m[36m(pid=34913)[0m     @     0x5650dee73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34913)[0m     @     0x5650dede8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34913)[0m     @     0x5650dee72baf _PyEval_EvalCodeWithName
[2m[36m(pid=34913)[0m     @     0x5650dee73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34913)[0m     @     0x5650dede8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x7f6fd69844f5 at::Tensor::copy_()
[2m[36m(pid=34960)[0m     @     0x7f6fdca2f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34960)[0m     @     0x55f2e87a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34960)[0m     @     0x55f2e86feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x55f2e8789baf _PyEval_EvalCodeWithName
[2m[36m(pid=34960)[0m     @     0x55f2e878aa20 method_vectorcall
[2m[36m(pid=34960)[0m     @     0x55f2e86febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x55f2e8789baf _PyEval_EvalCodeWithName
[2m[36m(pid=34960)[0m     @     0x55f2e878a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34960)[0m     @     0x55f2e86ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x55f2e8789baf _PyEval_EvalCodeWithName
[2m[36m(pid=34960)[0m     @     0x55f2e878a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34960)[0m     @     0x55f2e86ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x55f2e8789baf _PyEval_EvalCodeWithName
[2m[36m(pid=34960)[0m     @     0x55f2e878a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34960)[0m     @     0x55f2e86ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34960)[0m     @     0x55f2e8789baf _PyEval_EvalCodeWithName
[2m[36m(pid=34960)[0m     @     0x55f2e878a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34960)[0m     @     0x55f2e86ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34957)[0m     @     0x55ff780c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34957)[0m     @     0x55ff780c3a20 method_vectorcall
[2m[36m(pid=34957)[0m     @     0x55ff78037bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34957)[0m     @     0x55ff780c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34957)[0m     @     0x55ff780c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34957)[0m     @     0x55ff78038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34957)[0m     @     0x55ff780c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34957)[0m     @     0x55ff780c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34957)[0m     @     0x55ff78038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34957)[0m     @     0x55ff780c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34957)[0m     @     0x55ff780c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34957)[0m     @     0x55ff78038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34957)[0m     @     0x55ff780c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34957)[0m     @     0x55ff780c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34957)[0m     @     0x55ff78038689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x7f8252d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34962)[0m     @     0x7f8253630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34962)[0m     @     0x7f8253653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34962)[0m     @     0x7f8252af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34962)[0m     @     0x7f8252af3388 at::native::copy_impl()
[2m[36m(pid=34929)[0m     @     0x7f2cdbc554f5 at::Tensor::copy_()
[2m[36m(pid=34929)[0m     @     0x7f2ce1d0079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34929)[0m     @     0x55775e890fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34929)[0m     @     0x55775e7ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34929)[0m     @     0x55775e876baf _PyEval_EvalCodeWithName
[2m[36m(pid=34929)[0m     @     0x55775e877a20 method_vectorcall
[2m[36m(pid=34929)[0m     @     0x55775e7ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34929)[0m     @     0x55775e876baf _PyEval_EvalCodeWithName
[2m[36m(pid=34929)[0m     @     0x55775e877643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34929)[0m     @     0x55775e7ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34929)[0m     @     0x55775e876baf _PyEval_EvalCodeWithName
[2m[36m(pid=34929)[0m     @     0x55775e877643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34929)[0m     @     0x55775e7ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34929)[0m     @     0x55775e876baf _PyEval_EvalCodeWithName
[2m[36m(pid=34929)[0m     @     0x55775e877643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34929)[0m     @     0x55775e7ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34929)[0m     @     0x55775e876baf _PyEval_EvalCodeWithName
[2m[36m(pid=34929)[0m     @     0x55775e877643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34929)[0m     @     0x55775e7ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x7f4c5506ed91 at::TensorIterator::for_each()
[2m[36m(pid=34859)[0m     @     0x7f4c55951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34859)[0m     @     0x7f4c55974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34859)[0m     @     0x7f4c54e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34859)[0m     @     0x7f4c54e14388 at::native::copy_impl()
[2m[36m(pid=34923)[0m     @     0x7f4398a6d4f5 at::Tensor::copy_()
[2m[36m(pid=34923)[0m     @     0x7f439af408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34923)[0m     @     0x7f4398a6d4f5 at::Tensor::copy_()
[2m[36m(pid=34923)[0m     @     0x7f439eb1879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34923)[0m     @     0x55d8d25e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34858)[0m     @     0x7f4222ed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=34858)[0m     @     0x7f4222ed7d91 at::TensorIterator::for_each()
[2m[36m(pid=34858)[0m     @     0x7f42237bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34858)[0m     @     0x7f42237ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34858)[0m     @     0x7f4222c7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34858)[0m     @     0x7f4222c7d388 at::native::copy_impl()
[2m[36m(pid=34942)[0m     @     0x7f483b65dad3 at::TensorIterator::for_each()
[2m[36m(pid=34942)[0m     @     0x7f483b65dd91 at::TensorIterator::for_each()
[2m[36m(pid=34942)[0m     @     0x7f483bf40b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34942)[0m     @     0x7f483bf63c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34942)[0m     @     0x7f483b405a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34942)[0m     @     0x7f483b403388 at::native::copy_impl()
[2m[36m(pid=34973)[0m     @     0x7ef0ec3354f5 at::Tensor::copy_()
[2m[36m(pid=34973)[0m     @     0x7ef0ee8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34973)[0m     @     0x7ef0ec3354f5 at::Tensor::copy_()
[2m[36m(pid=34973)[0m     @     0x7ef0f23e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34973)[0m     @     0x55b54d0b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34973)[0m     @     0x55b54d012b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34973)[0m     @     0x55b54d09dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34973)[0m     @     0x55b54d09ea20 method_vectorcall
[2m[36m(pid=34973)[0m     @     0x55b54d012bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34973)[0m     @     0x55b54d09dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34973)[0m     @     0x55b54d09e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34973)[0m     @     0x55b54d013689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34973)[0m     @     0x55b54d09dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34973)[0m     @     0x55b54d09e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34973)[0m     @     0x55b54d013689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34973)[0m     @     0x55b54d09dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34973)[0m     @     0x55b54d09e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34973)[0m     @     0x55b54d013689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34973)[0m     @     0x55b54d09dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34973)[0m     @     0x55b54d09e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34973)[0m     @     0x55b54d013689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x7f7a4673ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34862)[0m     @     0x7f7a4673a388 at::native::copy_impl()
[2m[36m(pid=34862)[0m     @     0x7f7a4673c5a4 at::native::copy_()
[2m[36m(pid=34862)[0m     @     0x7f7a46e274f5 at::Tensor::copy_()
[2m[36m(pid=34862)[0m     @     0x7f7a492fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34857)[0m     @     0x7f46e635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34857)[0m     @     0x7f46e637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34857)[0m     @     0x7f46e5821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34857)[0m     @     0x7f46e581f388 at::native::copy_impl()
[2m[36m(pid=34857)[0m     @     0x7f46e58215a4 at::native::copy_()
[2m[36m(pid=34857)[0m     @     0x7f46e5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34870)[0m     @     0x7f6d9c01ed91 at::TensorIterator::for_each()
[2m[36m(pid=34870)[0m     @     0x7f6d9c901b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34870)[0m     @     0x7f6d9c924c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34870)[0m     @     0x7f6d9bdc6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34870)[0m     @     0x7f6d9bdc4388 at::native::copy_impl()
[2m[36m(pid=34870)[0m     @     0x7f6d9bdc65a4 at::native::copy_()
[2m[36m(pid=34940)[0m     @     0x7ee3f614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34940)[0m     @     0x7ee3f616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34940)[0m     @     0x7ee3f5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34940)[0m     @     0x7ee3f560e388 at::native::copy_impl()
[2m[36m(pid=34940)[0m     @     0x7ee3f56105a4 at::native::copy_()
[2m[36m(pid=34940)[0m     @     0x7ee3f5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34889)[0m     @     0x7ed885512d91 at::TensorIterator::for_each()
[2m[36m(pid=34889)[0m     @     0x7ed885df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34889)[0m     @     0x7ed885e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34889)[0m     @     0x7ed8852baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34889)[0m     @     0x7ed8852b8388 at::native::copy_impl()
[2m[36m(pid=34889)[0m     @     0x7ed8852ba5a4 at::native::copy_()
[2m[36m(pid=34886)[0m     @     0x7fc3e3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34886)[0m     @     0x7fc3e3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34886)[0m     @     0x7fc3e25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34886)[0m     @     0x7fc3e25f8388 at::native::copy_impl()
[2m[36m(pid=34886)[0m     @     0x7fc3e25fa5a4 at::native::copy_()
[2m[36m(pid=34886)[0m     @     0x7fc3e2ce54f5 at::Tensor::copy_()
[2m[36m(pid=34886)[0m     @     0x7fc3e51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34875)[0m     @     0x7f0f67223d91 at::TensorIterator::for_each()
[2m[36m(pid=34875)[0m     @     0x7f0f67b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34875)[0m     @     0x7f0f67b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34875)[0m     @     0x7f0f66fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34875)[0m     @     0x7f0f66fc9388 at::native::copy_impl()
[2m[36m(pid=34937)[0m     @     0x7fabf3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34937)[0m     @     0x7fabf3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34937)[0m     @     0x7fabf25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34937)[0m     @     0x7fabf25f8388 at::native::copy_impl()
[2m[36m(pid=34937)[0m     @     0x7fabf25fa5a4 at::native::copy_()
[2m[36m(pid=34937)[0m     @     0x7fabf2ce54f5 at::Tensor::copy_()
[2m[36m(pid=34878)[0m     @     0x7f3d540deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34878)[0m     @     0x7f3d54101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34878)[0m     @     0x7f3d535a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34878)[0m     @     0x7f3d535a1388 at::native::copy_impl()
[2m[36m(pid=34878)[0m     @     0x7f3d535a35a4 at::native::copy_()
[2m[36m(pid=34878)[0m     @     0x7f3d53c8e4f5 at::Tensor::copy_()
[2m[36m(pid=34878)[0m     @     0x7f3d561618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34943)[0m     @     0x7f832133bd91 at::TensorIterator::for_each()
[2m[36m(pid=34943)[0m     @     0x7f8321c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34943)[0m     @     0x7f8321c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34943)[0m     @     0x7f83210e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34943)[0m     @     0x7f83210e1388 at::native::copy_impl()
[2m[36m(pid=34853)[0m     @     0x7f5ea6480b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34853)[0m     @     0x7f5ea64a3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34853)[0m     @     0x7f5ea5945a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34853)[0m     @     0x7f5ea5943388 at::native::copy_impl()
[2m[36m(pid=34853)[0m     @     0x7f5ea59455a4 at::native::copy_()
[2m[36m(pid=34853)[0m     @     0x7f5ea60304f5 at::Tensor::copy_()
[2m[36m(pid=34926)[0m     @     0x7fbd926018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34926)[0m     @     0x7fbd92601ad3 at::TensorIterator::for_each()
[2m[36m(pid=34926)[0m     @     0x7fbd92601d91 at::TensorIterator::for_each()
[2m[36m(pid=34926)[0m     @     0x7fbd92ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34926)[0m     @     0x7fbd92f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34930)[0m     @     0x7f63041bbad3 at::TensorIterator::for_each()
[2m[36m(pid=34930)[0m     @     0x7f63041bbd91 at::TensorIterator::for_each()
[2m[36m(pid=34930)[0m     @     0x7f6304a9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34930)[0m     @     0x7f6304ac1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34930)[0m     @     0x7f6303f63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34930)[0m     @     0x7f6303f61388 at::native::copy_impl()
[2m[36m(pid=34919)[0m     @     0x7f88701168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34936)[0m     @     0x7ef6f9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=34936)[0m     @     0x7ef6f9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=34864)[0m     @     0x7f2d0e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34864)[0m     @     0x7f2d0d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34864)[0m     @     0x7f2d0d81f388 at::native::copy_impl()
[2m[36m(pid=34864)[0m     @     0x7f2d0d8215a4 at::native::copy_()
[2m[36m(pid=34864)[0m     @     0x7f2d0df0c4f5 at::Tensor::copy_()
[2m[36m(pid=34986)[0m     @     0x7f11e9c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34986)[0m     @     0x7f11e9c27d91 at::TensorIterator::for_each()
[2m[36m(pid=34986)[0m     @     0x7f11ea50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34986)[0m     @     0x7f11ea52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34986)[0m     @     0x7f11e99cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34986)[0m     @     0x7f11e99cd388 at::native::copy_impl()
[2m[36m(pid=34928)[0m     @     0x7f1437ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=34928)[0m     @     0x7f1438785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34928)[0m     @     0x7f14387a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34928)[0m     @     0x7f1437c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34928)[0m     @     0x7f1437c48388 at::native::copy_impl()
[2m[36m(pid=34928)[0m     @     0x7f1437c4a5a4 at::native::copy_()
[2m[36m(pid=34882)[0m     @     0x7f1b2d268d91 at::TensorIterator::for_each()
[2m[36m(pid=34882)[0m     @     0x7f1b2db4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34882)[0m     @     0x7f1b2db6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34882)[0m     @     0x7f1b2d010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34882)[0m     @     0x7f1b2d00e388 at::native::copy_impl()
[2m[36m(pid=34873)[0m     @     0x7f317fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=34873)[0m     @     0x7f3180785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34873)[0m     @     0x7f31807a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34873)[0m     @     0x7f317fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34873)[0m     @     0x7f317fc48388 at::native::copy_impl()
[2m[36m(pid=34921)[0m     @     0x7f0d0fcaad91 at::TensorIterator::for_each()
[2m[36m(pid=34921)[0m     @     0x7f0d1058db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34921)[0m     @     0x7f0d105b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34921)[0m     @     0x7f0d0fa52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34921)[0m     @     0x7f0d0fa50388 at::native::copy_impl()
[2m[36m(pid=34863)[0m     @     0x7f9f52d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=34863)[0m     @     0x7f9f53630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34863)[0m     @     0x7f9f53653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34863)[0m     @     0x7f9f52af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34863)[0m     @     0x7f9f52af3388 at::native::copy_impl()
[2m[36m(pid=34863)[0m     @     0x7f9f52af55a4 at::native::copy_()
[2m[36m(pid=34945)[0m     @     0x7f2f314e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=34945)[0m     @     0x7f2f30c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34945)[0m     @     0x7f2f30c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34856)[0m     @     0x7f5056957d91 at::TensorIterator::for_each()
[2m[36m(pid=34856)[0m     @     0x7f505723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34856)[0m     @     0x7f505725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34856)[0m     @     0x7f50566ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34856)[0m     @     0x7f50566fd388 at::native::copy_impl()
[2m[36m(pid=34959)[0m     @     0x7f3894f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=34959)[0m     @     0x7f3894f27d91 at::TensorIterator::for_each()
[2m[36m(pid=34917)[0m     @     0x7edae577bd91 at::TensorIterator::for_each()
[2m[36m(pid=34917)[0m     @     0x7edae605eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34917)[0m     @     0x7edae6081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34917)[0m     @     0x7edae5523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34917)[0m     @     0x7edae5521388 at::native::copy_impl()
[2m[36m(pid=34917)[0m     @     0x7edae55235a4 at::native::copy_()
[2m[36m(pid=34879)[0m     @     0x7f3755e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34879)[0m     @     0x7f3755e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34879)[0m     @     0x7f37552faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34879)[0m     @     0x7f37552f8388 at::native::copy_impl()
[2m[36m(pid=34869)[0m     @     0x7f056fb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=34869)[0m     @     0x7f056fb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34933)[0m     @     0x7f584ad30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34933)[0m     @     0x7f584a1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34933)[0m     @     0x7f584a1d0388 at::native::copy_impl()
[2m[36m(pid=34933)[0m     @     0x7f584a1d25a4 at::native::copy_()
[2m[36m(pid=34871)[0m     @     0x7f5d53025b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34871)[0m     @     0x7f5d53048c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34871)[0m     @     0x7f5d524eaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34871)[0m     @     0x7f5d524e8388 at::native::copy_impl()
[2m[36m(pid=34925)[0m     @     0x7fa03e192d91 at::TensorIterator::for_each()
[2m[36m(pid=34925)[0m     @     0x7fa03ea75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34925)[0m     @     0x7fa03ea98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34925)[0m     @     0x7fa03df3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34925)[0m     @     0x7fa03df38388 at::native::copy_impl()
[2m[36m(pid=34881)[0m     @     0x7f524f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34881)[0m     @     0x7f524edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34881)[0m     @     0x7f524edb2388 at::native::copy_impl()
[2m[36m(pid=34881)[0m     @     0x7f524edb45a4 at::native::copy_()
[2m[36m(pid=34872)[0m     @     0x7f76d723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34872)[0m     @     0x7f76d725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34872)[0m     @     0x7f76d66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34872)[0m     @     0x7f76d66fd388 at::native::copy_impl()
[2m[36m(pid=34872)[0m     @     0x7f76d66ff5a4 at::native::copy_()
[2m[36m(pid=34872)[0m     @     0x7f76d6dea4f5 at::Tensor::copy_()
[2m[36m(pid=34852)[0m     @     0x7f399c016388 at::native::copy_impl()
[2m[36m(pid=34852)[0m     @     0x7f399c0185a4 at::native::copy_()
[2m[36m(pid=34852)[0m     @     0x7f399c7034f5 at::Tensor::copy_()
[2m[36m(pid=34852)[0m     @     0x7f399ebd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34852)[0m     @     0x7f399c7034f5 at::Tensor::copy_()
[2m[36m(pid=34851)[0m     @     0x7ee61d73dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34851)[0m     @     0x7ee61cbdfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34851)[0m     @     0x7ee61cbdd388 at::native::copy_impl()
[2m[36m(pid=34851)[0m     @     0x7ee61cbdf5a4 at::native::copy_()
[2m[36m(pid=34851)[0m     @     0x7ee61d2ca4f5 at::Tensor::copy_()
[2m[36m(pid=34920)[0m     @     0x7ee433807388 at::native::copy_impl()
[2m[36m(pid=34920)[0m     @     0x7ee4338095a4 at::native::copy_()
[2m[36m(pid=34920)[0m     @     0x7ee433ef44f5 at::Tensor::copy_()
[2m[36m(pid=34920)[0m     @     0x7ee4363c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34932)[0m     @     0x7fa862c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34932)[0m     @     0x7fa862c25388 at::native::copy_impl()
[2m[36m(pid=34932)[0m     @     0x7fa862c275a4 at::native::copy_()
[2m[36m(pid=34932)[0m     @     0x7fa8633124f5 at::Tensor::copy_()
[2m[36m(pid=34861)[0m     @     0x7f1a1e7a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34861)[0m     @     0x7f1a1e7a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=34922)[0m     @     0x7ed203ffaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34922)[0m     @     0x7ed203ff8388 at::native::copy_impl()
[2m[36m(pid=34922)[0m     @     0x7ed203ffa5a4 at::native::copy_()
[2m[36m(pid=34922)[0m     @     0x7ed2046e54f5 at::Tensor::copy_()
[2m[36m(pid=34922)[0m     @     0x7ed206bb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34866)[0m     @     0x7faf1da268f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34916)[0m     @     0x7f7afb74ad91 at::TensorIterator::for_each()
[2m[36m(pid=34916)[0m     @     0x7f7afc02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34916)[0m     @     0x7f7afc050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34916)[0m     @     0x7f7afb4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34916)[0m     @     0x7f7afb4f0388 at::native::copy_impl()
[2m[36m(pid=34916)[0m     @     0x7f7afb4f25a4 at::native::copy_()
[2m[36m(pid=34971)[0m     @     0x7f042a10ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34971)[0m     @     0x7f042a109388 at::native::copy_impl()
[2m[36m(pid=34971)[0m     @     0x7f042a10b5a4 at::native::copy_()
[2m[36m(pid=34971)[0m     @     0x7f042a7f64f5 at::Tensor::copy_()
[2m[36m(pid=34971)[0m     @     0x7f042ccc98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34958)[0m     @     0x7fbe62b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34958)[0m     @     0x7fbe62b82388 at::native::copy_impl()
[2m[36m(pid=34958)[0m     @     0x7fbe62b845a4 at::native::copy_()
[2m[36m(pid=34958)[0m     @     0x7fbe6326f4f5 at::Tensor::copy_()
[2m[36m(pid=34958)[0m     @     0x7fbe657428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34947)[0m     @     0x7f67437fbd91 at::TensorIterator::for_each()
[2m[36m(pid=34947)[0m     @     0x7f67440deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34947)[0m     @     0x7f6744101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34947)[0m     @     0x7f67435a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34947)[0m     @     0x7f67435a1388 at::native::copy_impl()
[2m[36m(pid=34947)[0m     @     0x7f67435a35a4 at::native::copy_()
[2m[36m(pid=34868)[0m     @     0x7f57f0bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=34868)[0m     @     0x7f57f14b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34868)[0m     @     0x7f57f14d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34868)[0m     @     0x7f57f0979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34868)[0m     @     0x7f57f0977388 at::native::copy_impl()
[2m[36m(pid=34868)[0m     @     0x7f57f09795a4 at::native::copy_()
[2m[36m(pid=34855)[0m     @     0x7f84f60fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=34892)[0m     @     0x7edc5d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34892)[0m     @     0x7edc5c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34892)[0m     @     0x7edc5c589388 at::native::copy_impl()
[2m[36m(pid=34892)[0m     @     0x7edc5c58b5a4 at::native::copy_()
[2m[36m(pid=34892)[0m     @     0x7edc5cc764f5 at::Tensor::copy_()
[2m[36m(pid=34927)[0m     @     0x7ed9b72e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34927)[0m     @     0x7ed9b72df388 at::native::copy_impl()
[2m[36m(pid=34927)[0m     @     0x7ed9b72e15a4 at::native::copy_()
[2m[36m(pid=34927)[0m     @     0x7ed9b79cc4f5 at::Tensor::copy_()
[2m[36m(pid=34927)[0m     @     0x7ed9b9e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34914)[0m     @     0x7f4dcb75c5a4 at::native::copy_()
[2m[36m(pid=34914)[0m     @     0x7f4dcbe474f5 at::Tensor::copy_()
[2m[36m(pid=34914)[0m     @     0x7f4dce31a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34914)[0m     @     0x7f4dcbe474f5 at::Tensor::copy_()
[2m[36m(pid=34974)[0m     @     0x7f95450374f5 at::Tensor::copy_()
[2m[36m(pid=34974)[0m     @     0x7f954b0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34974)[0m     @     0x559441685fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34974)[0m     @     0x5594415e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x55944166bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34974)[0m     @     0x55944166ca20 method_vectorcall
[2m[36m(pid=34974)[0m     @     0x5594415e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x55944166bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34974)[0m     @     0x55944166c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34974)[0m     @     0x5594415e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x55944166bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34974)[0m     @     0x55944166c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34974)[0m     @     0x5594415e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x55944166bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34974)[0m     @     0x55944166c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34974)[0m     @     0x5594415e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34974)[0m     @     0x55944166bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34974)[0m     @     0x55944166c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34974)[0m     @     0x5594415e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x7ef2a39cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34950)[0m     @     0x7ef2a39ca388 at::native::copy_impl()
[2m[36m(pid=34950)[0m     @     0x7ef2a39cc5a4 at::native::copy_()
[2m[36m(pid=34950)[0m     @     0x7ef2a40b74f5 at::Tensor::copy_()
[2m[36m(pid=34950)[0m     @     0x7ef2a658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34854)[0m     @     0x7ef85d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34854)[0m     @     0x7ef85d0e1388 at::native::copy_impl()
[2m[36m(pid=34854)[0m     @     0x7ef85d0e35a4 at::native::copy_()
[2m[36m(pid=34854)[0m     @     0x7ef85d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=34854)[0m     @     0x7ef85fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34995)[0m     @     0x7f2594ccd388 at::native::copy_impl()
[2m[36m(pid=34995)[0m     @     0x7f2594ccf5a4 at::native::copy_()
[2m[36m(pid=34995)[0m     @     0x7f25953ba4f5 at::Tensor::copy_()
[2m[36m(pid=34995)[0m     @     0x7f259788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34955)[0m     @     0x7fcae5226388 at::native::copy_impl()
[2m[36m(pid=34955)[0m     @     0x7fcae52285a4 at::native::copy_()
[2m[36m(pid=34955)[0m     @     0x7fcae59134f5 at::Tensor::copy_()
[2m[36m(pid=34955)[0m     @     0x7fcae7de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34865)[0m     @     0x7f78d9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34865)[0m     @     0x7f78d981f388 at::native::copy_impl()
[2m[36m(pid=34865)[0m     @     0x7f78d98215a4 at::native::copy_()
[2m[36m(pid=34865)[0m     @     0x7f78d9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34865)[0m     @     0x7f78dc3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34949)[0m     @     0x7f7f669655a4 at::native::copy_()
[2m[36m(pid=34949)[0m     @     0x7f7f670504f5 at::Tensor::copy_()
[2m[36m(pid=34949)[0m     @     0x7f7f695238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34949)[0m     @     0x7f7f670504f5 at::Tensor::copy_()
[2m[36m(pid=34949)[0m     @     0x7f7f6d0fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34949)[0m     @     0x55deaa370fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34949)[0m     @     0x55deaa2cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34949)[0m     @     0x55deaa356baf _PyEval_EvalCodeWithName
[2m[36m(pid=34949)[0m     @     0x55deaa357a20 method_vectorcall
[2m[36m(pid=34949)[0m     @     0x55deaa2cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34949)[0m     @     0x55deaa356baf _PyEval_EvalCodeWithName
[2m[36m(pid=34949)[0m     @     0x55deaa357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34949)[0m     @     0x55deaa2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34975)[0m     @     0x55994c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34975)[0m     @     0x55994c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34975)[0m     @     0x55994c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34975)[0m     @     0x55994c901baf _PyEval_EvalCodeWithName
[2m[36m(pid=34975)[0m     @     0x55994c902643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34975)[0m     @     0x55994c877689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x7f8252af55a4 at::native::copy_()
[2m[36m(pid=34962)[0m     @     0x7f82531e04f5 at::Tensor::copy_()
[2m[36m(pid=34962)[0m     @     0x7f82556b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34962)[0m     @     0x7f82531e04f5 at::Tensor::copy_()
[2m[36m(pid=34962)[0m     @     0x7f825928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34962)[0m     @     0x5564b6f96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34962)[0m     @     0x5564b6ef1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34962)[0m     @     0x5564b6f7da20 method_vectorcall
[2m[36m(pid=34962)[0m     @     0x5564b6ef1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34962)[0m     @     0x5564b6f7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34962)[0m     @     0x5564b6ef2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34962)[0m     @     0x5564b6f7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34962)[0m     @     0x5564b6ef2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x7f4c54e165a4 at::native::copy_()
[2m[36m(pid=34859)[0m     @     0x7f4c555014f5 at::Tensor::copy_()
[2m[36m(pid=34859)[0m     @     0x7f4c579d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34923)[0m     @     0x55d8d253db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34923)[0m     @     0x55d8d25c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34923)[0m     @     0x55d8d25c9a20 method_vectorcall
[2m[36m(pid=34923)[0m     @     0x55d8d253dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34923)[0m     @     0x55d8d25c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34923)[0m     @     0x55d8d25c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34923)[0m     @     0x55d8d253e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34923)[0m     @     0x55d8d25c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34923)[0m     @     0x55d8d25c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34923)[0m     @     0x55d8d253e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34923)[0m     @     0x55d8d25c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34923)[0m     @     0x55d8d25c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34923)[0m     @     0x55d8d253e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34923)[0m     @     0x55d8d25c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=34923)[0m     @     0x55d8d25c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34923)[0m     @     0x55d8d253e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x7f4222c7f5a4 at::native::copy_()
[2m[36m(pid=34858)[0m     @     0x7f422336a4f5 at::Tensor::copy_()
[2m[36m(pid=34942)[0m     @     0x7f483b4055a4 at::native::copy_()
[2m[36m(pid=34942)[0m     @     0x7f483baf04f5 at::Tensor::copy_()
[2m[36m(pid=34862)[0m     @     0x7f7a46e274f5 at::Tensor::copy_()
[2m[36m(pid=34862)[0m     @     0x7f7a4ced279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34862)[0m     @     0x55accd745fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34862)[0m     @     0x55accd6a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x55accd72bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34862)[0m     @     0x55accd72ca20 method_vectorcall
[2m[36m(pid=34862)[0m     @     0x55accd6a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x55accd72bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34862)[0m     @     0x55accd72c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34862)[0m     @     0x55accd6a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x55accd72bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34862)[0m     @     0x55accd72c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34862)[0m     @     0x55accd6a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x55accd72bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34862)[0m     @     0x55accd72c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34862)[0m     @     0x55accd6a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34862)[0m     @     0x55accd72bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34862)[0m     @     0x55accd72c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34862)[0m     @     0x55accd6a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x7f46e83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34857)[0m     @     0x7f46e5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34857)[0m     @     0x7f46ebfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34857)[0m     @     0x55fdc17d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34857)[0m     @     0x55fdc172fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x55fdc17babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34857)[0m     @     0x55fdc17bba20 method_vectorcall
[2m[36m(pid=34857)[0m     @     0x55fdc172fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x55fdc17babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34857)[0m     @     0x55fdc17bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34857)[0m     @     0x55fdc1730689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x55fdc17babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34857)[0m     @     0x55fdc17bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34857)[0m     @     0x55fdc1730689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x55fdc17babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34857)[0m     @     0x55fdc17bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34857)[0m     @     0x55fdc1730689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34857)[0m     @     0x55fdc17babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34857)[0m     @     0x55fdc17bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34857)[0m     @     0x55fdc1730689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x7f6d9c4b14f5 at::Tensor::copy_()
[2m[36m(pid=34870)[0m     @     0x7f6d9e9848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34870)[0m     @     0x7f6d9c4b14f5 at::Tensor::copy_()
[2m[36m(pid=34870)[0m     @     0x7f6da255c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34870)[0m     @     0x55ea28172fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34870)[0m     @     0x55ea280cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea28158baf _PyEval_EvalCodeWithName
[2m[36m(pid=34870)[0m     @     0x55ea28159a20 method_vectorcall
[2m[36m(pid=34940)[0m     @     0x7ee3f81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34940)[0m     @     0x7ee3f5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=34940)[0m     @     0x7ee3fbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34940)[0m     @     0x55811f717fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34940)[0m     @     0x55811f672b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34940)[0m     @     0x55811f6fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34940)[0m     @     0x55811f6fea20 method_vectorcall
[2m[36m(pid=34940)[0m     @     0x55811f672bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34940)[0m     @     0x55811f6fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34940)[0m     @     0x55811f6fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34940)[0m     @     0x55811f673689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34940)[0m     @     0x55811f6fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34940)[0m     @     0x55811f6fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34940)[0m     @     0x55811f673689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34940)[0m     @     0x55811f6fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34940)[0m     @     0x55811f6fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34940)[0m     @     0x55811f673689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34940)[0m     @     0x55811f6fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34940)[0m     @     0x55811f6fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34940)[0m     @     0x55811f673689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x7ed8859a54f5 at::Tensor::copy_()
[2m[36m(pid=34889)[0m     @     0x7ed887e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34889)[0m     @     0x7ed8859a54f5 at::Tensor::copy_()
[2m[36m(pid=34889)[0m     @     0x7ed88ba5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34889)[0m     @     0x55fe558befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34889)[0m     @     0x55fe55819b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x55fe558a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34889)[0m     @     0x55fe558a5a20 method_vectorcall
[2m[36m(pid=34889)[0m     @     0x55fe55819bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x55fe558a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34889)[0m     @     0x55fe558a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34889)[0m     @     0x55fe5581a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x55fe558a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34889)[0m     @     0x55fe558a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34889)[0m     @     0x55fe5581a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x55fe558a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34889)[0m     @     0x55fe558a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34889)[0m     @     0x55fe5581a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34889)[0m     @     0x55fe558a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34889)[0m     @     0x55fe558a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34889)[0m     @     0x55fe5581a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x7fc3e2ce54f5 at::Tensor::copy_()
[2m[36m(pid=34886)[0m     @     0x7fc3e8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34886)[0m     @     0x55ee2daaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34886)[0m     @     0x55ee2da09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x55ee2da94baf _PyEval_EvalCodeWithName
[2m[36m(pid=34886)[0m     @     0x55ee2da95a20 method_vectorcall
[2m[36m(pid=34886)[0m     @     0x55ee2da09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x55ee2da94baf _PyEval_EvalCodeWithName
[2m[36m(pid=34886)[0m     @     0x55ee2da95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34886)[0m     @     0x55ee2da0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x55ee2da94baf _PyEval_EvalCodeWithName
[2m[36m(pid=34886)[0m     @     0x55ee2da95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34886)[0m     @     0x55ee2da0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x55ee2da94baf _PyEval_EvalCodeWithName
[2m[36m(pid=34886)[0m     @     0x55ee2da95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34886)[0m     @     0x55ee2da0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34886)[0m     @     0x55ee2da94baf _PyEval_EvalCodeWithName
[2m[36m(pid=34886)[0m     @     0x55ee2da95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34886)[0m     @     0x55ee2da0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x7f0f66fcb5a4 at::native::copy_()
[2m[36m(pid=34875)[0m     @     0x7f0f676b64f5 at::Tensor::copy_()
[2m[36m(pid=34875)[0m     @     0x7f0f69b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34937)[0m     @     0x7fabf51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34937)[0m     @     0x7fabf2ce54f5 at::Tensor::copy_()
[2m[36m(pid=34937)[0m     @     0x7fabf8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34937)[0m     @     0x55c2775c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34937)[0m     @     0x55c27751fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34937)[0m     @     0x55c2775aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34937)[0m     @     0x55c2775aba20 method_vectorcall
[2m[36m(pid=34937)[0m     @     0x55c27751fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34937)[0m     @     0x55c2775aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34937)[0m     @     0x55c2775ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34937)[0m     @     0x55c277520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34937)[0m     @     0x55c2775aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34937)[0m     @     0x55c2775ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34937)[0m     @     0x55c277520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34937)[0m     @     0x55c2775aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34937)[0m     @     0x55c2775ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34937)[0m     @     0x55c277520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34937)[0m     @     0x55c2775aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=34937)[0m     @     0x55c2775ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34937)[0m     @     0x55c277520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x7f3d53c8e4f5 at::Tensor::copy_()
[2m[36m(pid=34878)[0m     @     0x7f3d59d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34878)[0m     @     0x5644ad790fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34878)[0m     @     0x5644ad6ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x5644ad776baf _PyEval_EvalCodeWithName
[2m[36m(pid=34878)[0m     @     0x5644ad777a20 method_vectorcall
[2m[36m(pid=34878)[0m     @     0x5644ad6ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x5644ad776baf _PyEval_EvalCodeWithName
[2m[36m(pid=34878)[0m     @     0x5644ad777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34878)[0m     @     0x5644ad6ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x5644ad776baf _PyEval_EvalCodeWithName
[2m[36m(pid=34878)[0m     @     0x5644ad777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34878)[0m     @     0x5644ad6ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x5644ad776baf _PyEval_EvalCodeWithName
[2m[36m(pid=34878)[0m     @     0x5644ad777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34878)[0m     @     0x5644ad6ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34878)[0m     @     0x5644ad776baf _PyEval_EvalCodeWithName
[2m[36m(pid=34878)[0m     @     0x5644ad777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34878)[0m     @     0x5644ad6ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x7f83210e35a4 at::native::copy_()
[2m[36m(pid=34943)[0m     @     0x7f83217ce4f5 at::Tensor::copy_()
[2m[36m(pid=34943)[0m     @     0x7f8323ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34853)[0m     @     0x7f5ea85038de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34853)[0m     @     0x7f5ea60304f5 at::Tensor::copy_()
[2m[36m(pid=34853)[0m     @     0x7f5eac0db79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34853)[0m     @     0x5589cec07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34853)[0m     @     0x5589ceb62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34853)[0m     @     0x5589cebedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34853)[0m     @     0x5589cebeea20 method_vectorcall
[2m[36m(pid=34853)[0m     @     0x5589ceb62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34853)[0m     @     0x5589cebedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34853)[0m     @     0x5589cebee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34853)[0m     @     0x5589ceb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34853)[0m     @     0x5589cebedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34853)[0m     @     0x5589cebee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34853)[0m     @     0x5589ceb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34853)[0m     @     0x5589cebedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34853)[0m     @     0x5589cebee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34853)[0m     @     0x5589ceb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34853)[0m     @     0x5589cebedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34853)[0m     @     0x5589cebee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34853)[0m     @     0x5589ceb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x7fbd923a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34926)[0m     @     0x7fbd923a7388 at::native::copy_impl()
[2m[36m(pid=34926)[0m     @     0x7fbd923a95a4 at::native::copy_()
[2m[36m(pid=34930)[0m     @     0x7f6303f635a4 at::native::copy_()
[2m[36m(pid=34930)[0m     @     0x7f630464e4f5 at::Tensor::copy_()
[2m[36m(pid=34919)[0m     @     0x7f8870116ad3 at::TensorIterator::for_each()
[2m[36m(pid=34919)[0m     @     0x7f8870116d91 at::TensorIterator::for_each()
[2m[36m(pid=34919)[0m     @     0x7f88709f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34936)[0m     @     0x7ef6fa71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34936)[0m     @     0x7ef6fa73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34936)[0m     @     0x7ef6f9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34936)[0m     @     0x7ef6f9bde388 at::native::copy_impl()
[2m[36m(pid=34864)[0m     @     0x7f2d103df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34864)[0m     @     0x7f2d0df0c4f5 at::Tensor::copy_()
[2m[36m(pid=34864)[0m     @     0x7f2d13fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34864)[0m     @     0x55a9d62adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34864)[0m     @     0x55a9d6208b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34864)[0m     @     0x55a9d6293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34864)[0m     @     0x55a9d6294a20 method_vectorcall
[2m[36m(pid=34864)[0m     @     0x55a9d6208bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34864)[0m     @     0x55a9d6293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34864)[0m     @     0x55a9d6294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34864)[0m     @     0x55a9d6209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34864)[0m     @     0x55a9d6293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34864)[0m     @     0x55a9d6294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34864)[0m     @     0x55a9d6209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34864)[0m     @     0x55a9d6293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34864)[0m     @     0x55a9d6294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34864)[0m     @     0x55a9d6209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34864)[0m     @     0x55a9d6293baf _PyEval_EvalCodeWithName
[2m[36m(pid=34864)[0m     @     0x55a9d6294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34864)[0m     @     0x55a9d6209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x7f11e99cf5a4 at::native::copy_()
[2m[36m(pid=34986)[0m     @     0x7f11ea0ba4f5 at::Tensor::copy_()
[2m[36m(pid=34986)[0m     @     0x7f11ec58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34928)[0m     @     0x7f14383354f5 at::Tensor::copy_()
[2m[36m(pid=34928)[0m     @     0x7f143a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34928)[0m     @     0x7f14383354f5 at::Tensor::copy_()
[2m[36m(pid=34928)[0m     @     0x7f143e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34928)[0m     @     0x5581918c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34928)[0m     @     0x55819181cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x5581918a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34928)[0m     @     0x5581918a8a20 method_vectorcall
[2m[36m(pid=34882)[0m     @     0x7f1b2d0105a4 at::native::copy_()
[2m[36m(pid=34882)[0m     @     0x7f1b2d6fb4f5 at::Tensor::copy_()
[2m[36m(pid=34882)[0m     @     0x7f1b2fbce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34882)[0m     @     0x7f1b2d6fb4f5 at::Tensor::copy_()
[2m[36m(pid=34882)[0m     @     0x7f1b337a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34873)[0m     @     0x7f317fc4a5a4 at::native::copy_()
[2m[36m(pid=34873)[0m     @     0x7f31803354f5 at::Tensor::copy_()
[2m[36m(pid=34873)[0m     @     0x7f31828088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34873)[0m     @     0x7f31803354f5 at::Tensor::copy_()
[2m[36m(pid=34873)[0m     @     0x7f31863e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34873)[0m     @     0x556d13236fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34873)[0m     @     0x556d13191b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d1321cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34873)[0m     @     0x556d1321da20 method_vectorcall
[2m[36m(pid=34873)[0m     @     0x556d13191bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d1321cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34873)[0m     @     0x556d1321d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34921)[0m     @     0x7f0d0fa525a4 at::native::copy_()
[2m[36m(pid=34921)[0m     @     0x7f0d1013d4f5 at::Tensor::copy_()
[2m[36m(pid=34921)[0m     @     0x7f0d126108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34863)[0m     @     0x7f9f531e04f5 at::Tensor::copy_()
[2m[36m(pid=34863)[0m     @     0x7f9f556b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34863)[0m     @     0x7f9f531e04f5 at::Tensor::copy_()
[2m[36m(pid=34863)[0m     @     0x7f9f5928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34863)[0m     @     0x561bc02a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34863)[0m     @     0x561bc01fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34863)[0m     @     0x561bc0286baf _PyEval_EvalCodeWithName
[2m[36m(pid=34863)[0m     @     0x561bc0287a20 method_vectorcall
[2m[36m(pid=34863)[0m     @     0x561bc01fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34863)[0m     @     0x561bc0286baf _PyEval_EvalCodeWithName
[2m[36m(pid=34863)[0m     @     0x561bc0287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34863)[0m     @     0x561bc01fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34863)[0m     @     0x561bc0286baf _PyEval_EvalCodeWithName
[2m[36m(pid=34863)[0m     @     0x561bc0287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34863)[0m     @     0x561bc01fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34863)[0m     @     0x561bc0286baf _PyEval_EvalCodeWithName
[2m[36m(pid=34863)[0m     @     0x561bc0287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34863)[0m     @     0x561bc01fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34863)[0m     @     0x561bc0286baf _PyEval_EvalCodeWithName
[2m[36m(pid=34863)[0m     @     0x561bc0287643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34863)[0m     @     0x561bc01fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x7f2f30c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=34856)[0m     @     0x7f50566ff5a4 at::native::copy_()
[2m[36m(pid=34856)[0m     @     0x7f5056dea4f5 at::Tensor::copy_()
[2m[36m(pid=34856)[0m     @     0x7f50592bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34959)[0m     @     0x7f389580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34959)[0m     @     0x7f389582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34959)[0m     @     0x7f3894ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34959)[0m     @     0x7f3894ccd388 at::native::copy_impl()
[2m[36m(pid=34959)[0m     @     0x7f3894ccf5a4 at::native::copy_()
[2m[36m(pid=34917)[0m     @     0x7edae5c0e4f5 at::Tensor::copy_()
[2m[36m(pid=34917)[0m     @     0x7edae80e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34917)[0m     @     0x7edae5c0e4f5 at::Tensor::copy_()
[2m[36m(pid=34917)[0m     @     0x7edaebcb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34917)[0m     @     0x563bc4f0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34917)[0m     @     0x563bc4e69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34917)[0m     @     0x563bc4ef4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34917)[0m     @     0x563bc4ef5a20 method_vectorcall
[2m[36m(pid=34917)[0m     @     0x563bc4e69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34917)[0m     @     0x563bc4ef4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34917)[0m     @     0x563bc4ef5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34917)[0m     @     0x563bc4e6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34917)[0m     @     0x563bc4ef4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34917)[0m     @     0x563bc4ef5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34917)[0m     @     0x563bc4e6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34917)[0m     @     0x563bc4ef4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34917)[0m     @     0x563bc4ef5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34917)[0m     @     0x563bc4e6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34917)[0m     @     0x563bc4ef4baf _PyEval_EvalCodeWithName
[2m[36m(pid=34917)[0m     @     0x563bc4ef5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34917)[0m     @     0x563bc4e6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x7f37552fa5a4 at::native::copy_()
[2m[36m(pid=34879)[0m     @     0x7f37559e54f5 at::Tensor::copy_()
[2m[36m(pid=34879)[0m     @     0x7f3757eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34879)[0m     @     0x7f37559e54f5 at::Tensor::copy_()
[2m[36m(pid=34869)[0m     @     0x7f056fb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=34933)[0m     @     0x7f584a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=34933)[0m     @     0x7f584cd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34933)[0m     @     0x7f584a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=34933)[0m     @     0x7f585096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34933)[0m     @     0x55e214b91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34933)[0m     @     0x55e214aecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34933)[0m     @     0x55e214b77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34933)[0m     @     0x55e214b78a20 method_vectorcall
[2m[36m(pid=34933)[0m     @     0x55e214aecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34933)[0m     @     0x55e214b77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34933)[0m     @     0x55e214b78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34933)[0m     @     0x55e214aed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34933)[0m     @     0x55e214b77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34933)[0m     @     0x55e214b78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34933)[0m     @     0x55e214aed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34933)[0m     @     0x55e214b77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34933)[0m     @     0x55e214b78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34933)[0m     @     0x55e214aed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34933)[0m     @     0x55e214b77baf _PyEval_EvalCodeWithName
[2m[36m(pid=34933)[0m     @     0x55e214b78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34933)[0m     @     0x55e214aed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x7f5d524ea5a4 at::native::copy_()
[2m[36m(pid=34871)[0m     @     0x7f5d52bd54f5 at::Tensor::copy_()
[2m[36m(pid=34871)[0m     @     0x7f5d550a88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34871)[0m     @     0x7f5d52bd54f5 at::Tensor::copy_()
[2m[36m(pid=34871)[0m     @     0x7f5d58c8079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34871)[0m     @     0x5651f8e4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34871)[0m     @     0x5651f8da7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x5651f8e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=34871)[0m     @     0x5651f8e33a20 method_vectorcall
[2m[36m(pid=34871)[0m     @     0x5651f8da7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x5651f8e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x7fa03df3a5a4 at::native::copy_()
[2m[36m(pid=34925)[0m     @     0x7fa03e6254f5 at::Tensor::copy_()
[2m[36m(pid=34925)[0m     @     0x7fa040af88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34925)[0m     @     0x7fa03e6254f5 at::Tensor::copy_()
[2m[36m(pid=34881)[0m     @     0x7f524f49f4f5 at::Tensor::copy_()
[2m[36m(pid=34881)[0m     @     0x7f52519728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34881)[0m     @     0x7f524f49f4f5 at::Tensor::copy_()
[2m[36m(pid=34881)[0m     @     0x7f525554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34881)[0m     @     0x556a770cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34881)[0m     @     0x556a77028b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a770b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=34881)[0m     @     0x556a770b4a20 method_vectorcall
[2m[36m(pid=34881)[0m     @     0x556a77028bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a770b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=34881)[0m     @     0x556a770b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34881)[0m     @     0x556a77029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a770b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=34881)[0m     @     0x556a770b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34881)[0m     @     0x556a77029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a770b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=34881)[0m     @     0x556a770b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34881)[0m     @     0x556a77029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a770b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=34881)[0m     @     0x556a770b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34872)[0m     @     0x7f76d92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34872)[0m     @     0x7f76d6dea4f5 at::Tensor::copy_()
[2m[36m(pid=34872)[0m     @     0x7f76dce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34872)[0m     @     0x5559b39cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34872)[0m     @     0x5559b3925b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34872)[0m     @     0x5559b39b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34872)[0m     @     0x5559b39b1a20 method_vectorcall
[2m[36m(pid=34872)[0m     @     0x5559b3925bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34872)[0m     @     0x5559b39b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34872)[0m     @     0x5559b39b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34872)[0m     @     0x5559b3926689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34872)[0m     @     0x5559b39b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34872)[0m     @     0x5559b39b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34872)[0m     @     0x5559b3926689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34872)[0m     @     0x5559b39b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34872)[0m     @     0x5559b39b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34872)[0m     @     0x5559b3926689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34872)[0m     @     0x5559b39b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34872)[0m     @     0x5559b39b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34872)[0m     @     0x5559b3926689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x7f39a27ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34852)[0m     @     0x55e0bb368fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34852)[0m     @     0x55e0bb2c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x55e0bb34ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34852)[0m     @     0x55e0bb34fa20 method_vectorcall
[2m[36m(pid=34852)[0m     @     0x55e0bb2c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x55e0bb34ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34852)[0m     @     0x55e0bb34f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34852)[0m     @     0x55e0bb2c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x55e0bb34ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34852)[0m     @     0x55e0bb34f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34852)[0m     @     0x55e0bb2c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x55e0bb34ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34852)[0m     @     0x55e0bb34f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34852)[0m     @     0x55e0bb2c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34852)[0m     @     0x55e0bb34ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34852)[0m     @     0x55e0bb34f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34852)[0m     @     0x55e0bb2c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x7ee61f79d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34851)[0m     @     0x7ee61d2ca4f5 at::Tensor::copy_()
[2m[36m(pid=34851)[0m     @     0x7ee62337579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34851)[0m     @     0x560b4a0cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34851)[0m     @     0x560b4a025b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x560b4a0b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34851)[0m     @     0x560b4a0b1a20 method_vectorcall
[2m[36m(pid=34851)[0m     @     0x560b4a025bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x560b4a0b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34851)[0m     @     0x560b4a0b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34851)[0m     @     0x560b4a026689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x560b4a0b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34851)[0m     @     0x560b4a0b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34851)[0m     @     0x560b4a026689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x560b4a0b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34851)[0m     @     0x560b4a0b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34851)[0m     @     0x560b4a026689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34851)[0m     @     0x560b4a0b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34851)[0m     @     0x560b4a0b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34851)[0m     @     0x560b4a026689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x7ee433ef44f5 at::Tensor::copy_()
[2m[36m(pid=34920)[0m     @     0x7ee439f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34920)[0m     @     0x5558cca57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34920)[0m     @     0x5558cc9b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x5558cca3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34920)[0m     @     0x5558cca3ea20 method_vectorcall
[2m[36m(pid=34920)[0m     @     0x5558cc9b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x5558cca3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34920)[0m     @     0x5558cca3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34920)[0m     @     0x5558cc9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x5558cca3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34920)[0m     @     0x5558cca3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34920)[0m     @     0x5558cc9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x5558cca3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34920)[0m     @     0x5558cca3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34920)[0m     @     0x5558cc9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34920)[0m     @     0x5558cca3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34920)[0m     @     0x5558cca3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34920)[0m     @     0x5558cc9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x7fa8657e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34932)[0m     @     0x7fa8633124f5 at::Tensor::copy_()
[2m[36m(pid=34932)[0m     @     0x7fa8693bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34932)[0m     @     0x56112fdfcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34932)[0m     @     0x56112fd57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x56112fde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34932)[0m     @     0x56112fde3a20 method_vectorcall
[2m[36m(pid=34932)[0m     @     0x56112fd57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x56112fde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34932)[0m     @     0x56112fde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34932)[0m     @     0x56112fd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x56112fde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34932)[0m     @     0x56112fde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34932)[0m     @     0x56112fd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x56112fde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34932)[0m     @     0x56112fde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34932)[0m     @     0x56112fd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34932)[0m     @     0x56112fde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34932)[0m     @     0x56112fde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34932)[0m     @     0x56112fd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x7f1a1e7a5d91 at::TensorIterator::for_each()
[2m[36m(pid=34861)[0m     @     0x7f1a1f088b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34861)[0m     @     0x7f1a1f0abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34922)[0m     @     0x7ed2046e54f5 at::Tensor::copy_()
[2m[36m(pid=34922)[0m     @     0x7ed20a79079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34922)[0m     @     0x55b67bbb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34922)[0m     @     0x55b67bb11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34922)[0m     @     0x55b67bb9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34922)[0m     @     0x55b67bb9da20 method_vectorcall
[2m[36m(pid=34922)[0m     @     0x55b67bb11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34922)[0m     @     0x55b67bb9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34922)[0m     @     0x55b67bb9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34922)[0m     @     0x55b67bb12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34922)[0m     @     0x55b67bb9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34922)[0m     @     0x55b67bb9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34922)[0m     @     0x55b67bb12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34922)[0m     @     0x55b67bb9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34922)[0m     @     0x55b67bb9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34922)[0m     @     0x55b67bb12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34922)[0m     @     0x55b67bb9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34922)[0m     @     0x55b67bb9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34922)[0m     @     0x55b67bb12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x7faf1da26ad3 at::TensorIterator::for_each()
[2m[36m(pid=34866)[0m     @     0x7faf1da26d91 at::TensorIterator::for_each()
[2m[36m(pid=34916)[0m     @     0x7f7afbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=34916)[0m     @     0x7f7afe0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34916)[0m     @     0x7f7afbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=34916)[0m     @     0x7f7b01c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34916)[0m     @     0x56097d123fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34916)[0m     @     0x56097d07eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x7f042a7f64f5 at::Tensor::copy_()
[2m[36m(pid=34971)[0m     @     0x7f04308a179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34971)[0m     @     0x557cd1f97fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34971)[0m     @     0x557cd1ef2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x557cd1f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34971)[0m     @     0x557cd1f7ea20 method_vectorcall
[2m[36m(pid=34971)[0m     @     0x557cd1ef2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x557cd1f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34971)[0m     @     0x557cd1f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34971)[0m     @     0x557cd1ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x557cd1f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34971)[0m     @     0x557cd1f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34971)[0m     @     0x557cd1ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x557cd1f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34971)[0m     @     0x557cd1f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34971)[0m     @     0x557cd1ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34971)[0m     @     0x557cd1f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34971)[0m     @     0x557cd1f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34971)[0m     @     0x557cd1ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x7fbe6326f4f5 at::Tensor::copy_()
[2m[36m(pid=34958)[0m     @     0x7fbe6931a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34958)[0m     @     0x558ed77bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34958)[0m     @     0x558ed7715b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x558ed77a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34958)[0m     @     0x558ed77a1a20 method_vectorcall
[2m[36m(pid=34958)[0m     @     0x558ed7715bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x558ed77a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34958)[0m     @     0x558ed77a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34958)[0m     @     0x558ed7716689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x558ed77a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34958)[0m     @     0x558ed77a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34958)[0m     @     0x558ed7716689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x558ed77a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34958)[0m     @     0x558ed77a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34958)[0m     @     0x558ed7716689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34958)[0m     @     0x558ed77a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=34958)[0m     @     0x558ed77a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34958)[0m     @     0x558ed7716689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x7f6743c8e4f5 at::Tensor::copy_()
[2m[36m(pid=34947)[0m     @     0x7f67461618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34868)[0m     @     0x7f57f10644f5 at::Tensor::copy_()
[2m[36m(pid=34868)[0m     @     0x7f57f35378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34868)[0m     @     0x7f57f10644f5 at::Tensor::copy_()
[2m[36m(pid=34868)[0m     @     0x7f57f710f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34868)[0m     @     0x55662c08ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34868)[0m     @     0x55662bfeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662c075baf _PyEval_EvalCodeWithName
[2m[36m(pid=34868)[0m     @     0x55662c076a20 method_vectorcall
[2m[36m(pid=34855)[0m     @     0x7f84f60faad3 at::TensorIterator::for_each()
[2m[36m(pid=34892)[0m     @     0x7edc5f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34892)[0m     @     0x7edc5cc764f5 at::Tensor::copy_()
[2m[36m(pid=34892)[0m     @     0x7edc62d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34892)[0m     @     0x55ce07915fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34892)[0m     @     0x55ce07870b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34892)[0m     @     0x55ce078fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34892)[0m     @     0x55ce078fca20 method_vectorcall
[2m[36m(pid=34892)[0m     @     0x55ce07870bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34892)[0m     @     0x55ce078fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34892)[0m     @     0x55ce078fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34892)[0m     @     0x55ce07871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34892)[0m     @     0x55ce078fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34892)[0m     @     0x55ce078fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34892)[0m     @     0x55ce07871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34892)[0m     @     0x55ce078fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34892)[0m     @     0x55ce078fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34892)[0m     @     0x55ce07871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34892)[0m     @     0x55ce078fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34892)[0m     @     0x55ce078fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34892)[0m     @     0x55ce07871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x7f4dd1ef279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34914)[0m     @     0x556e7f8e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34914)[0m     @     0x556e7f83bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x556e7f8c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34914)[0m     @     0x556e7f8c7a20 method_vectorcall
[2m[36m(pid=34914)[0m     @     0x556e7f83bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x556e7f8c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34914)[0m     @     0x556e7f8c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34914)[0m     @     0x556e7f83c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x556e7f8c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34914)[0m     @     0x556e7f8c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34914)[0m     @     0x556e7f83c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x556e7f8c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34914)[0m     @     0x556e7f8c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34914)[0m     @     0x556e7f83c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34914)[0m     @     0x556e7f8c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=34914)[0m     @     0x556e7f8c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34914)[0m     @     0x556e7f83c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x7ef2a40b74f5 at::Tensor::copy_()
[2m[36m(pid=34950)[0m     @     0x7ef2aa16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34950)[0m     @     0x5598fe388fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34950)[0m     @     0x5598fe2e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x5598fe36ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34950)[0m     @     0x5598fe36fa20 method_vectorcall
[2m[36m(pid=34950)[0m     @     0x5598fe2e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x5598fe36ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34950)[0m     @     0x5598fe36f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34950)[0m     @     0x5598fe2e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x5598fe36ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34950)[0m     @     0x5598fe36f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34950)[0m     @     0x5598fe2e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x5598fe36ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34950)[0m     @     0x5598fe36f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34950)[0m     @     0x5598fe2e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34950)[0m     @     0x5598fe36ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=34950)[0m     @     0x5598fe36f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34950)[0m     @     0x5598fe2e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x7ef85d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=34854)[0m     @     0x7ef86387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34854)[0m     @     0x55898beb3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34854)[0m     @     0x55898be0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x55898be99baf _PyEval_EvalCodeWithName
[2m[36m(pid=34854)[0m     @     0x55898be9aa20 method_vectorcall
[2m[36m(pid=34854)[0m     @     0x55898be0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x55898be99baf _PyEval_EvalCodeWithName
[2m[36m(pid=34854)[0m     @     0x55898be9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34854)[0m     @     0x55898be0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x55898be99baf _PyEval_EvalCodeWithName
[2m[36m(pid=34854)[0m     @     0x55898be9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34854)[0m     @     0x55898be0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x55898be99baf _PyEval_EvalCodeWithName
[2m[36m(pid=34854)[0m     @     0x55898be9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34854)[0m     @     0x55898be0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34854)[0m     @     0x55898be99baf _PyEval_EvalCodeWithName
[2m[36m(pid=34854)[0m     @     0x55898be9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34854)[0m     @     0x55898be0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x7f25953ba4f5 at::Tensor::copy_()
[2m[36m(pid=34995)[0m     @     0x7f259b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34995)[0m     @     0x5627c147ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34995)[0m     @     0x5627c13dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x5627c1465baf _PyEval_EvalCodeWithName
[2m[36m(pid=34995)[0m     @     0x5627c1466a20 method_vectorcall
[2m[36m(pid=34995)[0m     @     0x5627c13dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x5627c1465baf _PyEval_EvalCodeWithName
[2m[36m(pid=34995)[0m     @     0x5627c1466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34995)[0m     @     0x5627c13db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x5627c1465baf _PyEval_EvalCodeWithName
[2m[36m(pid=34995)[0m     @     0x5627c1466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34995)[0m     @     0x5627c13db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x5627c1465baf _PyEval_EvalCodeWithName
[2m[36m(pid=34995)[0m     @     0x5627c1466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34995)[0m     @     0x5627c13db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34995)[0m     @     0x5627c1465baf _PyEval_EvalCodeWithName
[2m[36m(pid=34995)[0m     @     0x5627c1466643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34995)[0m     @     0x5627c13db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x7fcae59134f5 at::Tensor::copy_()
[2m[36m(pid=34955)[0m     @     0x7fcaeb9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34955)[0m     @     0x55871287dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34955)[0m     @     0x5587127d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x558712863baf _PyEval_EvalCodeWithName
[2m[36m(pid=34955)[0m     @     0x558712864a20 method_vectorcall
[2m[36m(pid=34955)[0m     @     0x5587127d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x558712863baf _PyEval_EvalCodeWithName
[2m[36m(pid=34955)[0m     @     0x558712864643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34955)[0m     @     0x5587127d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x558712863baf _PyEval_EvalCodeWithName
[2m[36m(pid=34955)[0m     @     0x558712864643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34955)[0m     @     0x5587127d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x558712863baf _PyEval_EvalCodeWithName
[2m[36m(pid=34955)[0m     @     0x558712864643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34955)[0m     @     0x5587127d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34955)[0m     @     0x558712863baf _PyEval_EvalCodeWithName
[2m[36m(pid=34955)[0m     @     0x558712864643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34955)[0m     @     0x5587127d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x7f78d9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=34865)[0m     @     0x7f78dffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34865)[0m     @     0x55661851efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34865)[0m     @     0x556618479b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x556618504baf _PyEval_EvalCodeWithName
[2m[36m(pid=34865)[0m     @     0x556618505a20 method_vectorcall
[2m[36m(pid=34865)[0m     @     0x556618479bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x556618504baf _PyEval_EvalCodeWithName
[2m[36m(pid=34865)[0m     @     0x556618505643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34865)[0m     @     0x55661847a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x556618504baf _PyEval_EvalCodeWithName
[2m[36m(pid=34865)[0m     @     0x556618505643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34865)[0m     @     0x55661847a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x556618504baf _PyEval_EvalCodeWithName
[2m[36m(pid=34865)[0m     @     0x556618505643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34865)[0m     @     0x55661847a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34865)[0m     @     0x556618504baf _PyEval_EvalCodeWithName
[2m[36m(pid=34865)[0m     @     0x556618505643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34865)[0m     @     0x55661847a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34949)[0m     @     0x55deaa356baf _PyEval_EvalCodeWithName
[2m[36m(pid=34949)[0m     @     0x55deaa357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34949)[0m     @     0x55deaa2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34949)[0m     @     0x55deaa356baf _PyEval_EvalCodeWithName
[2m[36m(pid=34949)[0m     @     0x55deaa357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34949)[0m     @     0x55deaa2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34949)[0m     @     0x55deaa356baf _PyEval_EvalCodeWithName
[2m[36m(pid=34949)[0m     @     0x55deaa357643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34949)[0m     @     0x55deaa2cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34962)[0m     @     0x5564b6ef2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34962)[0m     @     0x5564b6f7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34962)[0m     @     0x5564b6f7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34962)[0m     @     0x5564b6ef2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x7f4c555014f5 at::Tensor::copy_()
[2m[36m(pid=34859)[0m     @     0x7f4c78fed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34859)[0m     @     0x55fb2f18cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34859)[0m     @     0x55fb2f0e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x55fb2f172baf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x55fb2f173a20 method_vectorcall
[2m[36m(pid=34859)[0m     @     0x55fb2f0e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x55fb2f172baf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x55fb2f173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34859)[0m     @     0x55fb2f0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x55fb2f172baf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x55fb2f173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34859)[0m     @     0x55fb2f0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x55fb2f172baf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x55fb2f173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34859)[0m     @     0x55fb2f0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34859)[0m     @     0x55fb2f172baf _PyEval_EvalCodeWithName
[2m[36m(pid=34859)[0m     @     0x55fb2f173643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34859)[0m     @     0x55fb2f0e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x7f422583d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34858)[0m     @     0x7f422336a4f5 at::Tensor::copy_()
[2m[36m(pid=34858)[0m     @     0x7f422941579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34858)[0m     @     0x56149837ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34858)[0m     @     0x5614982dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x561498365baf _PyEval_EvalCodeWithName
[2m[36m(pid=34858)[0m     @     0x561498366a20 method_vectorcall
[2m[36m(pid=34858)[0m     @     0x5614982dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x561498365baf _PyEval_EvalCodeWithName
[2m[36m(pid=34858)[0m     @     0x561498366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34858)[0m     @     0x5614982db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x561498365baf _PyEval_EvalCodeWithName
[2m[36m(pid=34858)[0m     @     0x561498366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34858)[0m     @     0x5614982db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x561498365baf _PyEval_EvalCodeWithName
[2m[36m(pid=34858)[0m     @     0x561498366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34858)[0m     @     0x5614982db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34858)[0m     @     0x561498365baf _PyEval_EvalCodeWithName
[2m[36m(pid=34858)[0m     @     0x561498366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34858)[0m     @     0x5614982db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x7f483dfc38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34942)[0m     @     0x7f483baf04f5 at::Tensor::copy_()
[2m[36m(pid=34942)[0m     @     0x7f4841b9b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34942)[0m     @     0x555f629dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34942)[0m     @     0x555f62936b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x555f629c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34942)[0m     @     0x555f629c2a20 method_vectorcall
[2m[36m(pid=34942)[0m     @     0x555f62936bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x555f629c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34942)[0m     @     0x555f629c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34942)[0m     @     0x555f62937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x555f629c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34942)[0m     @     0x555f629c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34942)[0m     @     0x555f62937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x555f629c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34942)[0m     @     0x555f629c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34942)[0m     @     0x555f62937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34942)[0m     @     0x555f629c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=34942)[0m     @     0x555f629c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34942)[0m     @     0x555f62937689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea280cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea28158baf _PyEval_EvalCodeWithName
[2m[36m(pid=34870)[0m     @     0x55ea28159643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34870)[0m     @     0x55ea280ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea28158baf _PyEval_EvalCodeWithName
[2m[36m(pid=34870)[0m     @     0x55ea28159643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34870)[0m     @     0x55ea280ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea28158baf _PyEval_EvalCodeWithName
[2m[36m(pid=34870)[0m     @     0x55ea28159643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34870)[0m     @     0x55ea280ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34870)[0m     @     0x55ea28158baf _PyEval_EvalCodeWithName
[2m[36m(pid=34870)[0m     @     0x55ea28159643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34870)[0m     @     0x55ea280ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x7f0f676b64f5 at::Tensor::copy_()
[2m[36m(pid=34875)[0m     @     0x7f0f6d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34875)[0m     @     0x5558e8d4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34875)[0m     @     0x5558e8ca8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x5558e8d33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34875)[0m     @     0x5558e8d34a20 method_vectorcall
[2m[36m(pid=34875)[0m     @     0x5558e8ca8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x5558e8d33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34875)[0m     @     0x5558e8d34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34875)[0m     @     0x5558e8ca9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x5558e8d33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34875)[0m     @     0x5558e8d34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34875)[0m     @     0x5558e8ca9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x5558e8d33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34875)[0m     @     0x5558e8d34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34875)[0m     @     0x5558e8ca9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34875)[0m     @     0x5558e8d33baf _PyEval_EvalCodeWithName
[2m[36m(pid=34875)[0m     @     0x5558e8d34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34875)[0m     @     0x5558e8ca9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x7f83217ce4f5 at::Tensor::copy_()
[2m[36m(pid=34943)[0m     @     0x7f832787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34943)[0m     @     0x55c22f8cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34943)[0m     @     0x55c22f82ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x55c22f8b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34943)[0m     @     0x55c22f8b6a20 method_vectorcall
[2m[36m(pid=34943)[0m     @     0x55c22f82abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x55c22f8b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34943)[0m     @     0x55c22f8b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34943)[0m     @     0x55c22f82b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x55c22f8b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34943)[0m     @     0x55c22f8b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34943)[0m     @     0x55c22f82b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x55c22f8b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34943)[0m     @     0x55c22f8b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34943)[0m     @     0x55c22f82b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34943)[0m     @     0x55c22f8b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=34943)[0m     @     0x55c22f8b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34943)[0m     @     0x55c22f82b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x7fbd92a944f5 at::Tensor::copy_()
[2m[36m(pid=34926)[0m     @     0x7fbd94f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34926)[0m     @     0x7fbd92a944f5 at::Tensor::copy_()
[2m[36m(pid=34926)[0m     @     0x7fbd98b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34926)[0m     @     0x5623a641bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34926)[0m     @     0x5623a6376b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x5623a6401baf _PyEval_EvalCodeWithName
[2m[36m(pid=34926)[0m     @     0x5623a6402a20 method_vectorcall
[2m[36m(pid=34926)[0m     @     0x5623a6376bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x5623a6401baf _PyEval_EvalCodeWithName
[2m[36m(pid=34926)[0m     @     0x5623a6402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34926)[0m     @     0x5623a6377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x5623a6401baf _PyEval_EvalCodeWithName
[2m[36m(pid=34926)[0m     @     0x5623a6402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34926)[0m     @     0x5623a6377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x5623a6401baf _PyEval_EvalCodeWithName
[2m[36m(pid=34926)[0m     @     0x5623a6402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34926)[0m     @     0x5623a6377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34926)[0m     @     0x5623a6401baf _PyEval_EvalCodeWithName
[2m[36m(pid=34926)[0m     @     0x5623a6402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34926)[0m     @     0x5623a6377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x7f6306b218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34930)[0m     @     0x7f630464e4f5 at::Tensor::copy_()
[2m[36m(pid=34930)[0m     @     0x7f630a6f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34930)[0m     @     0x55686f9b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34930)[0m     @     0x55686f911b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x55686f99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34930)[0m     @     0x55686f99da20 method_vectorcall
[2m[36m(pid=34930)[0m     @     0x55686f911bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x55686f99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34930)[0m     @     0x55686f99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34930)[0m     @     0x55686f912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x55686f99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34930)[0m     @     0x55686f99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34930)[0m     @     0x55686f912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x55686f99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34930)[0m     @     0x55686f99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34930)[0m     @     0x55686f912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34930)[0m     @     0x55686f99cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34930)[0m     @     0x55686f99d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34930)[0m     @     0x55686f912689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x7f8870a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34919)[0m     @     0x7f886febea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34919)[0m     @     0x7f886febc388 at::native::copy_impl()
[2m[36m(pid=34919)[0m     @     0x7f886febe5a4 at::native::copy_()
[2m[36m(pid=34936)[0m     @     0x7ef6f9be05a4 at::native::copy_()
[2m[36m(pid=34936)[0m     @     0x7ef6fa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=34936)[0m     @     0x7ef6fc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34936)[0m     @     0x7ef6fa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=34936)[0m     @     0x7ef70037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34936)[0m     @     0x55d25aabcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34936)[0m     @     0x55d25aa17b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34936)[0m     @     0x55d25aaa2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34936)[0m     @     0x55d25aaa3a20 method_vectorcall
[2m[36m(pid=34936)[0m     @     0x55d25aa17bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34936)[0m     @     0x55d25aaa2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34936)[0m     @     0x55d25aaa3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34936)[0m     @     0x55d25aa18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x7f11ea0ba4f5 at::Tensor::copy_()
[2m[36m(pid=34986)[0m     @     0x7f11f016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34986)[0m     @     0x55f89ae22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34986)[0m     @     0x55f89ad7db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x55f89ae08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34986)[0m     @     0x55f89ae09a20 method_vectorcall
[2m[36m(pid=34986)[0m     @     0x55f89ad7dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x55f89ae08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34986)[0m     @     0x55f89ae09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34986)[0m     @     0x55f89ad7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x55f89ae08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34986)[0m     @     0x55f89ae09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34986)[0m     @     0x55f89ad7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x55f89ae08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34986)[0m     @     0x55f89ae09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34986)[0m     @     0x55f89ad7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34986)[0m     @     0x55f89ae08baf _PyEval_EvalCodeWithName
[2m[36m(pid=34986)[0m     @     0x55f89ae09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34986)[0m     @     0x55f89ad7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x55819181cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x5581918a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34928)[0m     @     0x5581918a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34928)[0m     @     0x55819181d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x5581918a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34928)[0m     @     0x5581918a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34928)[0m     @     0x55819181d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x5581918a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34928)[0m     @     0x5581918a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34928)[0m     @     0x55819181d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34928)[0m     @     0x5581918a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=34928)[0m     @     0x5581918a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34928)[0m     @     0x55819181d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34882)[0m     @     0x55cf7c986b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34882)[0m     @     0x55cf7ca12a20 method_vectorcall
[2m[36m(pid=34882)[0m     @     0x55cf7c986bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34882)[0m     @     0x55cf7ca12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34882)[0m     @     0x55cf7c987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34882)[0m     @     0x55cf7ca12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34882)[0m     @     0x55cf7c987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34882)[0m     @     0x55cf7ca12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34882)[0m     @     0x55cf7c987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34882)[0m     @     0x55cf7ca11baf _PyEval_EvalCodeWithName
[2m[36m(pid=34882)[0m     @     0x55cf7ca12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34882)[0m     @     0x55cf7c987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d13192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d1321cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34873)[0m     @     0x556d1321d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34873)[0m     @     0x556d13192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d1321cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34873)[0m     @     0x556d1321d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34873)[0m     @     0x556d13192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34873)[0m     @     0x556d1321cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34873)[0m     @     0x556d1321d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34873)[0m     @     0x556d13192689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x7f0d1013d4f5 at::Tensor::copy_()
[2m[36m(pid=34921)[0m     @     0x7f0d161e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34921)[0m     @     0x563fad1d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34921)[0m     @     0x563fad12fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x563fad1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34921)[0m     @     0x563fad1bba20 method_vectorcall
[2m[36m(pid=34921)[0m     @     0x563fad12fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x563fad1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34921)[0m     @     0x563fad1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34921)[0m     @     0x563fad130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x563fad1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34921)[0m     @     0x563fad1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34921)[0m     @     0x563fad130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x563fad1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34921)[0m     @     0x563fad1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34921)[0m     @     0x563fad130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34921)[0m     @     0x563fad1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=34921)[0m     @     0x563fad1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34921)[0m     @     0x563fad130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x7f2f30c11d91 at::TensorIterator::for_each()
[2m[36m(pid=34945)[0m     @     0x7f2f314f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34945)[0m     @     0x7f2f31517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34945)[0m     @     0x7f2f309b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34945)[0m     @     0x7f2f309b7388 at::native::copy_impl()
[2m[36m(pid=34856)[0m     @     0x7f5056dea4f5 at::Tensor::copy_()
[2m[36m(pid=34856)[0m     @     0x7f505ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34856)[0m     @     0x55ae6ed2cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34856)[0m     @     0x55ae6ec87b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34856)[0m     @     0x55ae6ed12baf _PyEval_EvalCodeWithName
[2m[36m(pid=34856)[0m     @     0x55ae6ed13a20 method_vectorcall
[2m[36m(pid=34856)[0m     @     0x55ae6ec87bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34856)[0m     @     0x55ae6ed12baf _PyEval_EvalCodeWithName
[2m[36m(pid=34856)[0m     @     0x55ae6ed13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34856)[0m     @     0x55ae6ec88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34856)[0m     @     0x55ae6ed12baf _PyEval_EvalCodeWithName
[2m[36m(pid=34856)[0m     @     0x55ae6ed13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34856)[0m     @     0x55ae6ec88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34856)[0m     @     0x55ae6ed12baf _PyEval_EvalCodeWithName
[2m[36m(pid=34856)[0m     @     0x55ae6ed13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34856)[0m     @     0x55ae6ec88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34856)[0m     @     0x55ae6ed12baf _PyEval_EvalCodeWithName
[2m[36m(pid=34856)[0m     @     0x55ae6ed13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34856)[0m     @     0x55ae6ec88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x7f38953ba4f5 at::Tensor::copy_()
[2m[36m(pid=34959)[0m     @     0x7f389788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34879)[0m     @     0x7f375ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34879)[0m     @     0x560ee947afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34879)[0m     @     0x560ee93d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x560ee9460baf _PyEval_EvalCodeWithName
[2m[36m(pid=34879)[0m     @     0x560ee9461a20 method_vectorcall
[2m[36m(pid=34879)[0m     @     0x560ee93d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x560ee9460baf _PyEval_EvalCodeWithName
[2m[36m(pid=34879)[0m     @     0x560ee9461643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34879)[0m     @     0x560ee93d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x560ee9460baf _PyEval_EvalCodeWithName
[2m[36m(pid=34879)[0m     @     0x560ee9461643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34879)[0m     @     0x560ee93d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x560ee9460baf _PyEval_EvalCodeWithName
[2m[36m(pid=34879)[0m     @     0x560ee9461643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34879)[0m     @     0x560ee93d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34879)[0m     @     0x560ee9460baf _PyEval_EvalCodeWithName
[2m[36m(pid=34879)[0m     @     0x560ee9461643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34879)[0m     @     0x560ee93d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34869)[0m     @     0x7f056fb11d91 at::TensorIterator::for_each()
[2m[36m(pid=34869)[0m     @     0x7f05703f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34869)[0m     @     0x7f0570417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34871)[0m     @     0x5651f8e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34871)[0m     @     0x5651f8da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x5651f8e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=34871)[0m     @     0x5651f8e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34871)[0m     @     0x5651f8da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x5651f8e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=34871)[0m     @     0x5651f8e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34871)[0m     @     0x5651f8da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34871)[0m     @     0x5651f8e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=34871)[0m     @     0x5651f8e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34871)[0m     @     0x5651f8da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x7fa0446d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34925)[0m     @     0x563fe1569fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34925)[0m     @     0x563fe14c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x563fe154fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x563fe1550a20 method_vectorcall
[2m[36m(pid=34925)[0m     @     0x563fe14c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x563fe154fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x563fe1550643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34925)[0m     @     0x563fe14c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x563fe154fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x563fe1550643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34925)[0m     @     0x563fe14c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x563fe154fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x563fe1550643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34925)[0m     @     0x563fe14c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34925)[0m     @     0x563fe154fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=34925)[0m     @     0x563fe1550643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34925)[0m     @     0x563fe14c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34881)[0m     @     0x556a77029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x7f1a1e54da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34861)[0m     @     0x7f1a1e54b388 at::native::copy_impl()
[2m[36m(pid=34861)[0m     @     0x7f1a1e54d5a4 at::native::copy_()
[2m[36m(pid=34861)[0m     @     0x7f1a1ec384f5 at::Tensor::copy_()
[2m[36m(pid=34866)[0m     @     0x7faf1e309b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34866)[0m     @     0x7faf1e32cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34866)[0m     @     0x7faf1d7cea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34866)[0m     @     0x7faf1d7cc388 at::native::copy_impl()
[2m[36m(pid=34866)[0m     @     0x7faf1d7ce5a4 at::native::copy_()
[2m[36m(pid=34916)[0m     @     0x56097d109baf _PyEval_EvalCodeWithName
[2m[36m(pid=34916)[0m     @     0x56097d10aa20 method_vectorcall
[2m[36m(pid=34916)[0m     @     0x56097d07ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34916)[0m     @     0x56097d109baf _PyEval_EvalCodeWithName
[2m[36m(pid=34916)[0m     @     0x56097d10a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34916)[0m     @     0x56097d07f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34916)[0m     @     0x56097d109baf _PyEval_EvalCodeWithName
[2m[36m(pid=34916)[0m     @     0x56097d10a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34916)[0m     @     0x56097d07f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34916)[0m     @     0x56097d109baf _PyEval_EvalCodeWithName
[2m[36m(pid=34916)[0m     @     0x56097d10a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34916)[0m     @     0x56097d07f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34916)[0m     @     0x56097d109baf _PyEval_EvalCodeWithName
[2m[36m(pid=34916)[0m     @     0x56097d10a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34916)[0m     @     0x56097d07f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x7f6743c8e4f5 at::Tensor::copy_()
[2m[36m(pid=34947)[0m     @     0x7f6749d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34947)[0m     @     0x5581fd87afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34947)[0m     @     0x5581fd7d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x5581fd860baf _PyEval_EvalCodeWithName
[2m[36m(pid=34947)[0m     @     0x5581fd861a20 method_vectorcall
[2m[36m(pid=34947)[0m     @     0x5581fd7d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x5581fd860baf _PyEval_EvalCodeWithName
[2m[36m(pid=34947)[0m     @     0x5581fd861643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34947)[0m     @     0x5581fd7d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x5581fd860baf _PyEval_EvalCodeWithName
[2m[36m(pid=34947)[0m     @     0x5581fd861643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34947)[0m     @     0x5581fd7d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x5581fd860baf _PyEval_EvalCodeWithName
[2m[36m(pid=34947)[0m     @     0x5581fd861643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34947)[0m     @     0x5581fd7d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34947)[0m     @     0x5581fd860baf _PyEval_EvalCodeWithName
[2m[36m(pid=34947)[0m     @     0x5581fd861643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34947)[0m     @     0x5581fd7d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662bfeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662c075baf _PyEval_EvalCodeWithName
[2m[36m(pid=34868)[0m     @     0x55662c076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34868)[0m     @     0x55662bfeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662c075baf _PyEval_EvalCodeWithName
[2m[36m(pid=34868)[0m     @     0x55662c076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34868)[0m     @     0x55662bfeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662c075baf _PyEval_EvalCodeWithName
[2m[36m(pid=34868)[0m     @     0x55662c076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34868)[0m     @     0x55662bfeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34868)[0m     @     0x55662c075baf _PyEval_EvalCodeWithName
[2m[36m(pid=34868)[0m     @     0x55662c076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34868)[0m     @     0x55662bfeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34855)[0m     @     0x7f84f60fad91 at::TensorIterator::for_each()
[2m[36m(pid=34855)[0m     @     0x7f84f69ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=34855)[0m     @     0x7f84f6a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=34855)[0m     @     0x7f84f5ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34927)[0m     @     0x7ed9b79cc4f5 at::Tensor::copy_()
[2m[36m(pid=34927)[0m     @     0x7ed9bda7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34927)[0m     @     0x55ad56a41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34927)[0m     @     0x55ad5699cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34927)[0m     @     0x55ad56a27baf _PyEval_EvalCodeWithName
[2m[36m(pid=34927)[0m     @     0x55ad56a28a20 method_vectorcall
[2m[36m(pid=34927)[0m     @     0x55ad5699cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34927)[0m     @     0x55ad56a27baf _PyEval_EvalCodeWithName
[2m[36m(pid=34927)[0m     @     0x55ad56a28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34927)[0m     @     0x55ad5699d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34927)[0m     @     0x55ad56a27baf _PyEval_EvalCodeWithName
[2m[36m(pid=34927)[0m     @     0x55ad56a28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34927)[0m     @     0x55ad5699d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34927)[0m     @     0x55ad56a27baf _PyEval_EvalCodeWithName
[2m[36m(pid=34927)[0m     @     0x55ad56a28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34927)[0m     @     0x55ad5699d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34927)[0m     @     0x55ad56a27baf _PyEval_EvalCodeWithName
[2m[36m(pid=34927)[0m     @     0x55ad56a28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34927)[0m     @     0x55ad5699d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x7f88705a94f5 at::Tensor::copy_()
[2m[36m(pid=34919)[0m     @     0x7f8872a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34919)[0m     @     0x7f88705a94f5 at::Tensor::copy_()
[2m[36m(pid=34936)[0m     @     0x55d25aaa2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34936)[0m     @     0x55d25aaa3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34936)[0m     @     0x55d25aa18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34936)[0m     @     0x55d25aaa2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34936)[0m     @     0x55d25aaa3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34936)[0m     @     0x55d25aa18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34936)[0m     @     0x55d25aaa2baf _PyEval_EvalCodeWithName
[2m[36m(pid=34936)[0m     @     0x55d25aaa3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34936)[0m     @     0x55d25aa18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x7f2f309b95a4 at::native::copy_()
[2m[36m(pid=34945)[0m     @     0x7f2f310a44f5 at::Tensor::copy_()
[2m[36m(pid=34945)[0m     @     0x7f2f335778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34959)[0m     @     0x7f38953ba4f5 at::Tensor::copy_()
[2m[36m(pid=34959)[0m     @     0x7f389b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34959)[0m     @     0x559c35a8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34959)[0m     @     0x559c359eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x559c35a75baf _PyEval_EvalCodeWithName
[2m[36m(pid=34959)[0m     @     0x559c35a76a20 method_vectorcall
[2m[36m(pid=34959)[0m     @     0x559c359eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x559c35a75baf _PyEval_EvalCodeWithName
[2m[36m(pid=34959)[0m     @     0x559c35a76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34959)[0m     @     0x559c359eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x559c35a75baf _PyEval_EvalCodeWithName
[2m[36m(pid=34959)[0m     @     0x559c35a76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34959)[0m     @     0x559c359eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x559c35a75baf _PyEval_EvalCodeWithName
[2m[36m(pid=34959)[0m     @     0x559c35a76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34959)[0m     @     0x559c359eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34959)[0m     @     0x559c35a75baf _PyEval_EvalCodeWithName
[2m[36m(pid=34959)[0m     @     0x559c35a76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34959)[0m     @     0x559c359eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34869)[0m     @     0x7f056f8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=34869)[0m     @     0x7f056f8b7388 at::native::copy_impl()
[2m[36m(pid=34869)[0m     @     0x7f056f8b95a4 at::native::copy_()
[2m[36m(pid=34861)[0m     @     0x7f1a2110b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34861)[0m     @     0x7f1a1ec384f5 at::Tensor::copy_()
[2m[36m(pid=34866)[0m     @     0x7faf1deb94f5 at::Tensor::copy_()
[2m[36m(pid=34866)[0m     @     0x7faf2038c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=34855)[0m     @     0x7f84f5ea0388 at::native::copy_impl()
[2m[36m(pid=34855)[0m     @     0x7f84f5ea25a4 at::native::copy_()
[2m[36m(pid=34919)[0m     @     0x7f887665479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34919)[0m     @     0x55bcff97ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34919)[0m     @     0x55bcff8dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x55bcff965baf _PyEval_EvalCodeWithName
[2m[36m(pid=34919)[0m     @     0x55bcff966a20 method_vectorcall
[2m[36m(pid=34919)[0m     @     0x55bcff8dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x55bcff965baf _PyEval_EvalCodeWithName
[2m[36m(pid=34919)[0m     @     0x55bcff966643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34919)[0m     @     0x55bcff8db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x55bcff965baf _PyEval_EvalCodeWithName
[2m[36m(pid=34919)[0m     @     0x55bcff966643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34919)[0m     @     0x55bcff8db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x55bcff965baf _PyEval_EvalCodeWithName
[2m[36m(pid=34919)[0m     @     0x55bcff966643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34919)[0m     @     0x55bcff8db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34919)[0m     @     0x55bcff965baf _PyEval_EvalCodeWithName
[2m[36m(pid=34919)[0m     @     0x55bcff966643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34919)[0m     @     0x55bcff8db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x7f2f310a44f5 at::Tensor::copy_()
[2m[36m(pid=34945)[0m     @     0x7f2f3714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34945)[0m     @     0x5650585a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34945)[0m     @     0x5650584feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x565058589baf _PyEval_EvalCodeWithName
[2m[36m(pid=34945)[0m     @     0x56505858aa20 method_vectorcall
[2m[36m(pid=34945)[0m     @     0x5650584febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x565058589baf _PyEval_EvalCodeWithName
[2m[36m(pid=34945)[0m     @     0x56505858a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34945)[0m     @     0x5650584ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x565058589baf _PyEval_EvalCodeWithName
[2m[36m(pid=34945)[0m     @     0x56505858a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34945)[0m     @     0x5650584ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x565058589baf _PyEval_EvalCodeWithName
[2m[36m(pid=34945)[0m     @     0x56505858a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34945)[0m     @     0x5650584ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34945)[0m     @     0x565058589baf _PyEval_EvalCodeWithName
[2m[36m(pid=34945)[0m     @     0x56505858a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34945)[0m     @     0x5650584ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x7f1a24ce379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34861)[0m     @     0x55cb2b32dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34861)[0m     @     0x55cb2b288b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x55cb2b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=34861)[0m     @     0x55cb2b314a20 method_vectorcall
[2m[36m(pid=34861)[0m     @     0x55cb2b288bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x55cb2b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=34861)[0m     @     0x55cb2b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34861)[0m     @     0x55cb2b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x55cb2b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=34861)[0m     @     0x55cb2b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34861)[0m     @     0x55cb2b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x55cb2b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=34861)[0m     @     0x55cb2b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34861)[0m     @     0x55cb2b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34861)[0m     @     0x55cb2b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=34861)[0m     @     0x55cb2b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34861)[0m     @     0x55cb2b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x7faf1deb94f5 at::Tensor::copy_()
[2m[36m(pid=34866)[0m     @     0x7faf23f6479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=34866)[0m     @     0x55df7bb2ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=34866)[0m     @     0x55df7ba8ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x55df7bb15baf _PyEval_EvalCodeWithName
[2m[36m(pid=34866)[0m     @     0x55df7bb16a20 method_vectorcall
[2m[36m(pid=34866)[0m     @     0x55df7ba8abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x55df7bb15baf _PyEval_EvalCodeWithName
[2m[36m(pid=34866)[0m     @     0x55df7bb16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34866)[0m     @     0x55df7ba8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x55df7bb15baf _PyEval_EvalCodeWithName
[2m[36m(pid=34866)[0m     @     0x55df7bb16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34866)[0m     @     0x55df7ba8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x55df7bb15baf _PyEval_EvalCodeWithName
[2m[36m(pid=34866)[0m     @     0x55df7bb16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34866)[0m     @     0x55df7ba8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34866)[0m     @     0x55df7bb15baf _PyEval_EvalCodeWithName
[2m[36m(pid=34866)[0m     @     0x55df7bb16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=34866)[0m     @     0x55df7ba8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=34855)[0m     @     0x7f84f658d4f5 at::Tensor::copy_()
[2m[36m(pid=34855)[0m     @     0x7f84f8a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:41:19,363	ERROR trial_runner.py:567 -- Trial PPO_jss_env_6c0d2_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=34969, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 25.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6c0d2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6c0d2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6c0d2_00000_0_2020-11-05_10-41-12/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:41:19,382	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
== Status ==
Memory usage on this node: 25.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6c0d2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6c0d2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6c0d2_00000_0_2020-11-05_10-41-12/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_6c0d2_00000])
