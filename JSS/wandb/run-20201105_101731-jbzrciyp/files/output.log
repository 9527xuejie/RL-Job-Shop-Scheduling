2020-11-05 10:17:33,676	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1f6cc_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=6683)[0m 2020-11-05 10:17:36,483	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=6564)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6564)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6564)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6653)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6653)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6653)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6653)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6653)[0m *** SIGSEGV (@0x0) received by PID 6653 (TID 0x7f66600c9700) from PID 0; stack trace: ***
[2m[36m(pid=6625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6625)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6625)[0m *** SIGSEGV (@0x0) received by PID 6625 (TID 0x7f6557036700) from PID 0; stack trace: ***
[2m[36m(pid=6680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6680)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6680)[0m *** SIGSEGV (@0x0) received by PID 6680 (TID 0x7f0baa4a7700) from PID 0; stack trace: ***
[2m[36m(pid=6680)[0m     @     0x7f0baa080390 (unknown)
[2m[36m(pid=6680)[0m     @     0x7edcaa028f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6621)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6621)[0m *** SIGSEGV (@0x0) received by PID 6621 (TID 0x7f3db6a80700) from PID 0; stack trace: ***
[2m[36m(pid=6621)[0m     @     0x7f3db6659390 (unknown)
[2m[36m(pid=6621)[0m     @     0x7f0eb65e5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6609)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6609)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6609)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6609)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6609)[0m *** SIGSEGV (@0x0) received by PID 6609 (TID 0x7fec67a65700) from PID 0; stack trace: ***
[2m[36m(pid=6609)[0m     @     0x7fec6763e390 (unknown)
[2m[36m(pid=6646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6646)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6646)[0m *** SIGSEGV (@0x0) received by PID 6646 (TID 0x7f67998bb700) from PID 0; stack trace: ***
[2m[36m(pid=6627)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6627)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6627)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6627)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6627)[0m *** SIGSEGV (@0x0) received by PID 6627 (TID 0x7f39b9474700) from PID 0; stack trace: ***
[2m[36m(pid=6627)[0m     @     0x7f39b904d390 (unknown)
[2m[36m(pid=6627)[0m     @     0x7f0ab8f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6627)[0m     @     0x7f0ab867a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6630)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6630)[0m *** SIGSEGV (@0x0) received by PID 6630 (TID 0x7fe44a1d1700) from PID 0; stack trace: ***
[2m[36m(pid=6630)[0m     @     0x7fe449daa390 (unknown)
[2m[36m(pid=6630)[0m     @     0x7fb549d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6670)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6670)[0m *** SIGSEGV (@0x0) received by PID 6670 (TID 0x7fdf40de1700) from PID 0; stack trace: ***
[2m[36m(pid=6670)[0m     @     0x7fdf409ba390 (unknown)
[2m[36m(pid=6670)[0m     @     0x7fb040825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6672)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6672)[0m *** SIGSEGV (@0x0) received by PID 6672 (TID 0x7fb4a2860700) from PID 0; stack trace: ***
[2m[36m(pid=6672)[0m     @     0x7fb4a2439390 (unknown)
[2m[36m(pid=6672)[0m     @     0x7f85a234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6672)[0m     @     0x7f85a1a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6606)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6606)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6606)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6606)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6606)[0m *** SIGSEGV (@0x0) received by PID 6606 (TID 0x7f6896c67700) from PID 0; stack trace: ***
[2m[36m(pid=6606)[0m     @     0x7f6896840390 (unknown)
[2m[36m(pid=6606)[0m     @     0x7f39967bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6643)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6643)[0m *** SIGSEGV (@0x0) received by PID 6643 (TID 0x7f5206d01700) from PID 0; stack trace: ***
[2m[36m(pid=6643)[0m     @     0x7f52068da390 (unknown)
[2m[36m(pid=6643)[0m     @     0x7f230670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6641)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6641)[0m *** SIGSEGV (@0x0) received by PID 6641 (TID 0x7f540b26e700) from PID 0; stack trace: ***
[2m[36m(pid=6641)[0m     @     0x7f540ae47390 (unknown)
[2m[36m(pid=6641)[0m     @     0x7f250adc3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6634)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6634)[0m *** SIGSEGV (@0x0) received by PID 6634 (TID 0x7fb902d79700) from PID 0; stack trace: ***
[2m[36m(pid=6634)[0m     @     0x7fb902952390 (unknown)
[2m[36m(pid=6634)[0m     @     0x7f8a0270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6634)[0m     @     0x7f8a01e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6682)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6682)[0m *** SIGSEGV (@0x0) received by PID 6682 (TID 0x7fee7f45c700) from PID 0; stack trace: ***
[2m[36m(pid=6682)[0m     @     0x7fee7f035390 (unknown)
[2m[36m(pid=6682)[0m     @     0x7fbf7ef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6682)[0m     @     0x7fbf7e63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6628)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6628)[0m *** SIGSEGV (@0x0) received by PID 6628 (TID 0x7f82aa7d8700) from PID 0; stack trace: ***
[2m[36m(pid=6628)[0m     @     0x7f82aa3b1390 (unknown)
[2m[36m(pid=6628)[0m     @     0x7f53aa34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6628)[0m     @     0x7f53a9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6555)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6555)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6555)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6617)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6617)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6617)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6617)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6617)[0m *** SIGSEGV (@0x0) received by PID 6617 (TID 0x7f004d73b700) from PID 0; stack trace: ***
[2m[36m(pid=6616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6616)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6616)[0m *** SIGSEGV (@0x0) received by PID 6616 (TID 0x7f161909a700) from PID 0; stack trace: ***
[2m[36m(pid=6616)[0m     @     0x7f1618c73390 (unknown)
[2m[36m(pid=6665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6665)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6665)[0m *** SIGSEGV (@0x0) received by PID 6665 (TID 0x7f8ee76b7700) from PID 0; stack trace: ***
[2m[36m(pid=6644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6644)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6644)[0m *** SIGSEGV (@0x0) received by PID 6644 (TID 0x7f21ab2e0700) from PID 0; stack trace: ***
[2m[36m(pid=6644)[0m     @     0x7f21aaeb9390 (unknown)
[2m[36m(pid=6644)[0m     @     0x7ef2aae66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6644)[0m     @     0x7ef2aa5917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6661)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6661)[0m *** SIGSEGV (@0x0) received by PID 6661 (TID 0x7f8924b46700) from PID 0; stack trace: ***
[2m[36m(pid=6661)[0m     @     0x7f892471f390 (unknown)
[2m[36m(pid=6577)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6577)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6577)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6577)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6577)[0m *** SIGSEGV (@0x0) received by PID 6577 (TID 0x7f6becf63700) from PID 0; stack trace: ***
[2m[36m(pid=6559)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6559)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6559)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6559)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6559)[0m *** SIGSEGV (@0x0) received by PID 6559 (TID 0x7fec3fa46700) from PID 0; stack trace: ***
[2m[36m(pid=6559)[0m     @     0x7fec3f61f390 (unknown)
[2m[36m(pid=6559)[0m     @     0x7fbd3f5b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6569)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6569)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6569)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6569)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6690)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6690)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6690)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6554)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6554)[0m *** SIGSEGV (@0x0) received by PID 6554 (TID 0x7f0235094700) from PID 0; stack trace: ***
[2m[36m(pid=6549)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6549)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6549)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6549)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6549)[0m *** SIGSEGV (@0x0) received by PID 6549 (TID 0x7fe070dde700) from PID 0; stack trace: ***
[2m[36m(pid=6658)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6658)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6658)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6658)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6658)[0m *** SIGSEGV (@0x0) received by PID 6658 (TID 0x7f104c680700) from PID 0; stack trace: ***
[2m[36m(pid=6636)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6636)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6636)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6636)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6636)[0m *** SIGSEGV (@0x0) received by PID 6636 (TID 0x7f1139d92700) from PID 0; stack trace: ***
[2m[36m(pid=6611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6611)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6611)[0m *** SIGSEGV (@0x0) received by PID 6611 (TID 0x7f96da321700) from PID 0; stack trace: ***
[2m[36m(pid=6611)[0m     @     0x7f96d9efa390 (unknown)
[2m[36m(pid=6562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6562)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6562)[0m *** SIGSEGV (@0x0) received by PID 6562 (TID 0x7ff42c940700) from PID 0; stack trace: ***
[2m[36m(pid=6561)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6561)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6561)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6561)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6561)[0m *** SIGSEGV (@0x0) received by PID 6561 (TID 0x7fadc2d8a700) from PID 0; stack trace: ***
[2m[36m(pid=6561)[0m     @     0x7fadc2963390 (unknown)
[2m[36m(pid=6552)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6552)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6552)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6552)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6552)[0m *** SIGSEGV (@0x0) received by PID 6552 (TID 0x7fde10227700) from PID 0; stack trace: ***
[2m[36m(pid=6552)[0m     @     0x7fde0fe00390 (unknown)
[2m[36m(pid=6552)[0m     @     0x7faf0fda6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6558)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6558)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6558)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6558)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6558)[0m *** SIGSEGV (@0x0) received by PID 6558 (TID 0x7f684463a700) from PID 0; stack trace: ***
[2m[36m(pid=6556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6556)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6556)[0m *** SIGSEGV (@0x0) received by PID 6556 (TID 0x7fb96b410700) from PID 0; stack trace: ***
[2m[36m(pid=6652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6652)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6652)[0m *** SIGSEGV (@0x0) received by PID 6652 (TID 0x7f77497df700) from PID 0; stack trace: ***
[2m[36m(pid=6652)[0m     @     0x7f77493b8390 (unknown)
[2m[36m(pid=6652)[0m     @     0x7f484935ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6652)[0m     @     0x7f4848a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6633)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6633)[0m *** SIGSEGV (@0x0) received by PID 6633 (TID 0x7efe3bcbc700) from PID 0; stack trace: ***
[2m[36m(pid=6633)[0m     @     0x7efe3b895390 (unknown)
[2m[36m(pid=6633)[0m     @     0x7ecf3b845f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6571)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6571)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6571)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6571)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6571)[0m *** SIGSEGV (@0x0) received by PID 6571 (TID 0x7fdff5013700) from PID 0; stack trace: ***
[2m[36m(pid=6655)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6655)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6655)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6655)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6655)[0m *** SIGSEGV (@0x0) received by PID 6655 (TID 0x7fa760850700) from PID 0; stack trace: ***
[2m[36m(pid=6626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6626)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6626)[0m *** SIGSEGV (@0x0) received by PID 6626 (TID 0x7fb7d66db700) from PID 0; stack trace: ***
[2m[36m(pid=6626)[0m     @     0x7fb7d62b4390 (unknown)
[2m[36m(pid=6626)[0m     @     0x7f88d625ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6581)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6581)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6581)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6581)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6581)[0m *** SIGSEGV (@0x0) received by PID 6581 (TID 0x7f3ee6b1f700) from PID 0; stack trace: ***
[2m[36m(pid=6581)[0m     @     0x7f3ee66f8390 (unknown)
[2m[36m(pid=6668)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6668)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6668)[0m *** Aborted at 1604571461 (unix time) try "date -d @1604571461" if you are using GNU date ***
[2m[36m(pid=6668)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6668)[0m *** SIGSEGV (@0x0) received by PID 6668 (TID 0x7f0f1560c700) from PID 0; stack trace: ***
[2m[36m(pid=6668)[0m     @     0x7f0f151e5390 (unknown)
[2m[36m(pid=6668)[0m     @     0x7ee0150b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6668)[0m     @     0x7ee0147e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6564)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6564)[0m *** SIGSEGV (@0x0) received by PID 6564 (TID 0x7f4e914cf700) from PID 0; stack trace: ***
[2m[36m(pid=6564)[0m     @     0x7f4e910a8390 (unknown)
[2m[36m(pid=6564)[0m     @     0x7f1f90940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6564)[0m     @     0x7f1f9006b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6653)[0m     @     0x7f665fca2390 (unknown)
[2m[36m(pid=6653)[0m     @     0x7f375faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6653)[0m     @     0x7f375f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6653)[0m     @     0x7f375f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6625)[0m     @     0x7f6556c0f390 (unknown)
[2m[36m(pid=6625)[0m     @     0x7f3656ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6625)[0m     @     0x7f36561fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6625)[0m     @     0x7f36561ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6680)[0m     @     0x7edca97537db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6680)[0m     @     0x7edca97568f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6680)[0m     @     0x7edca9756ad3 at::TensorIterator::for_each()
[2m[36m(pid=6621)[0m     @     0x7f0eb5d107db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6621)[0m     @     0x7f0eb5d138f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6621)[0m     @     0x7f0eb5d13ad3 at::TensorIterator::for_each()
[2m[36m(pid=6621)[0m     @     0x7f0eb5d13d91 at::TensorIterator::for_each()
[2m[36m(pid=6609)[0m     @     0x7fbd675f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6609)[0m     @     0x7fbd66d1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6609)[0m     @     0x7fbd66d208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6609)[0m     @     0x7fbd66d20ad3 at::TensorIterator::for_each()
[2m[36m(pid=6646)[0m     @     0x7f6799494390 (unknown)
[2m[36m(pid=6646)[0m     @     0x7f38992daf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6646)[0m     @     0x7f3898a057db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6646)[0m     @     0x7f3898a088f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6627)[0m     @     0x7f0ab867d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6627)[0m     @     0x7f0ab867dad3 at::TensorIterator::for_each()
[2m[36m(pid=6627)[0m     @     0x7f0ab867dd91 at::TensorIterator::for_each()
[2m[36m(pid=6627)[0m     @     0x7f0ab8f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6627)[0m     @     0x7f0ab8f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6630)[0m     @     0x7fb54947d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6630)[0m     @     0x7fb5494808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6630)[0m     @     0x7fb549480ad3 at::TensorIterator::for_each()
[2m[36m(pid=6630)[0m     @     0x7fb549480d91 at::TensorIterator::for_each()
[2m[36m(pid=6670)[0m     @     0x7fb03ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6670)[0m     @     0x7fb03ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6670)[0m     @     0x7fb03ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=6672)[0m     @     0x7f85a1a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6672)[0m     @     0x7f85a1a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=6672)[0m     @     0x7f85a1a79d91 at::TensorIterator::for_each()
[2m[36m(pid=6672)[0m     @     0x7f85a235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6606)[0m     @     0x7f3995ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6606)[0m     @     0x7f3995ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6606)[0m     @     0x7f3995ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=6606)[0m     @     0x7f3995ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=6643)[0m     @     0x7f2305e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6643)[0m     @     0x7f2305e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6643)[0m     @     0x7f2305e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=6641)[0m     @     0x7f250a4ee7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6641)[0m     @     0x7f250a4f18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6641)[0m     @     0x7f250a4f1ad3 at::TensorIterator::for_each()
[2m[36m(pid=6641)[0m     @     0x7f250a4f1d91 at::TensorIterator::for_each()
[2m[36m(pid=6634)[0m     @     0x7f8a01e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6634)[0m     @     0x7f8a01e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=6634)[0m     @     0x7f8a01e38d91 at::TensorIterator::for_each()
[2m[36m(pid=6682)[0m     @     0x7fbf7e6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6682)[0m     @     0x7fbf7e641ad3 at::TensorIterator::for_each()
[2m[36m(pid=6682)[0m     @     0x7fbf7e641d91 at::TensorIterator::for_each()
[2m[36m(pid=6682)[0m     @     0x7fbf7ef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6628)[0m     @     0x7f53a9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6628)[0m     @     0x7f53a9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=6628)[0m     @     0x7f53a9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=6628)[0m     @     0x7f53aa35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6628)[0m     @     0x7f53aa37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6555)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6555)[0m *** SIGSEGV (@0x0) received by PID 6555 (TID 0x7f1c8ee88700) from PID 0; stack trace: ***
[2m[36m(pid=6555)[0m     @     0x7f1c8ea61390 (unknown)
[2m[36m(pid=6555)[0m     @     0x7eed8e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6555)[0m     @     0x7eed8de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6617)[0m     @     0x7f004d314390 (unknown)
[2m[36m(pid=6617)[0m     @     0x7ed14d28af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6617)[0m     @     0x7ed14c9b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6617)[0m     @     0x7ed14c9b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6617)[0m     @     0x7ed14c9b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=6616)[0m     @     0x7ee718a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6616)[0m     @     0x7ee7181b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6616)[0m     @     0x7ee7181b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6616)[0m     @     0x7ee7181b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=6665)[0m     @     0x7f8ee7290390 (unknown)
[2m[36m(pid=6665)[0m     @     0x7f5fe7124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6665)[0m     @     0x7f5fe684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6665)[0m     @     0x7f5fe68528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6644)[0m     @     0x7ef2aa5948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6644)[0m     @     0x7ef2aa594ad3 at::TensorIterator::for_each()
[2m[36m(pid=6644)[0m     @     0x7ef2aa594d91 at::TensorIterator::for_each()
[2m[36m(pid=6644)[0m     @     0x7ef2aae77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6661)[0m     @     0x7f5a2460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6661)[0m     @     0x7f5a23d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6661)[0m     @     0x7f5a23d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6661)[0m     @     0x7f5a23d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=6577)[0m     @     0x7f6becb3c390 (unknown)
[2m[36m(pid=6577)[0m     @     0x7f3cecacdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6577)[0m     @     0x7f3cec1f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6577)[0m     @     0x7f3cec1fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6559)[0m     @     0x7fbd3ecdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6559)[0m     @     0x7fbd3ece08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6559)[0m     @     0x7fbd3ece0ad3 at::TensorIterator::for_each()
[2m[36m(pid=6559)[0m     @     0x7fbd3ece0d91 at::TensorIterator::for_each()
[2m[36m(pid=6569)[0m *** SIGSEGV (@0x0) received by PID 6569 (TID 0x7faeee679700) from PID 0; stack trace: ***
[2m[36m(pid=6569)[0m     @     0x7faeee252390 (unknown)
[2m[36m(pid=6569)[0m     @     0x7f7fee13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6569)[0m     @     0x7f7fed8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6569)[0m     @     0x7f7fed8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6690)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6690)[0m *** SIGSEGV (@0x0) received by PID 6690 (TID 0x7fe31032a700) from PID 0; stack trace: ***
[2m[36m(pid=6690)[0m     @     0x7fe30ff03390 (unknown)
[2m[36m(pid=6690)[0m     @     0x7fb40fe0ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6690)[0m     @     0x7fb40f5397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6554)[0m     @     0x7f0234c6d390 (unknown)
[2m[36m(pid=6554)[0m     @     0x7ed334b42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6554)[0m     @     0x7ed33426d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6554)[0m     @     0x7ed3342708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6549)[0m     @     0x7fe0709b7390 (unknown)
[2m[36m(pid=6549)[0m     @     0x7fb17073ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6549)[0m     @     0x7fb16fe697db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6549)[0m     @     0x7fb16fe6c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6658)[0m     @     0x7f104c259390 (unknown)
[2m[36m(pid=6658)[0m     @     0x7ee14c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6658)[0m     @     0x7ee14b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6658)[0m     @     0x7ee14b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6658)[0m     @     0x7ee14b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=6636)[0m     @     0x7f113996b390 (unknown)
[2m[36m(pid=6636)[0m     @     0x7ee2397f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6636)[0m     @     0x7ee238f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6636)[0m     @     0x7ee238f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6636)[0m     @     0x7ee238f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=6611)[0m     @     0x7f67d9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6611)[0m     @     0x7f67d954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6611)[0m     @     0x7f67d95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6611)[0m     @     0x7f67d9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=6562)[0m     @     0x7ff42c519390 (unknown)
[2m[36m(pid=6562)[0m     @     0x7fc52c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6562)[0m     @     0x7fc52bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6562)[0m     @     0x7fc52bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6561)[0m     @     0x7f7ec28faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6561)[0m     @     0x7f7ec20257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6561)[0m     @     0x7f7ec20288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6552)[0m     @     0x7faf0f4d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6552)[0m     @     0x7faf0f4d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6552)[0m     @     0x7faf0f4d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=6552)[0m     @     0x7faf0f4d4d91 at::TensorIterator::for_each()
[2m[36m(pid=6558)[0m     @     0x7f6844213390 (unknown)
[2m[36m(pid=6558)[0m     @     0x7f39440cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6558)[0m     @     0x7f39437f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6558)[0m     @     0x7f39437fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6556)[0m     @     0x7fb96afe9390 (unknown)
[2m[36m(pid=6556)[0m     @     0x7f8a6af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6556)[0m     @     0x7f8a6a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6556)[0m     @     0x7f8a6a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6556)[0m     @     0x7f8a6a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=6652)[0m     @     0x7f4848a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6652)[0m     @     0x7f4848a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=6633)[0m     @     0x7ecf3af707db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6633)[0m     @     0x7ecf3af738f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6633)[0m     @     0x7ecf3af73ad3 at::TensorIterator::for_each()
[2m[36m(pid=6633)[0m     @     0x7ecf3af73d91 at::TensorIterator::for_each()
[2m[36m(pid=6571)[0m     @     0x7fdff4bec390 (unknown)
[2m[36m(pid=6571)[0m     @     0x7fb0f4b42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6571)[0m     @     0x7fb0f426d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6571)[0m     @     0x7fb0f42708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6655)[0m     @     0x7fa760429390 (unknown)
[2m[36m(pid=6655)[0m     @     0x7f78602def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6655)[0m     @     0x7f785fa097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6655)[0m     @     0x7f785fa0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6655)[0m     @     0x7f785fa0cad3 at::TensorIterator::for_each()
[2m[36m(pid=6626)[0m     @     0x7f88d59897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6626)[0m     @     0x7f88d598c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6626)[0m     @     0x7f88d598cad3 at::TensorIterator::for_each()
[2m[36m(pid=6581)[0m     @     0x7f0fe6193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6581)[0m     @     0x7f0fe58be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6581)[0m     @     0x7f0fe58c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6668)[0m     @     0x7ee0147e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6668)[0m     @     0x7ee0147e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=6573)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6573)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6573)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6623)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6564)[0m     @     0x7f1f9006e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6564)[0m     @     0x7f1f9006ead3 at::TensorIterator::for_each()
[2m[36m(pid=6582)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6582)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6582)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6550)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6550)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6550)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6653)[0m     @     0x7f375f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=6625)[0m     @     0x7f36561ffad3 at::TensorIterator::for_each()
[2m[36m(pid=6625)[0m     @     0x7f36561ffd91 at::TensorIterator::for_each()
[2m[36m(pid=6680)[0m     @     0x7edca9756d91 at::TensorIterator::for_each()
[2m[36m(pid=6680)[0m     @     0x7edcaa039b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6680)[0m     @     0x7edcaa05cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6680)[0m     @     0x7edca94fea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6621)[0m     @     0x7f0eb65f6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6621)[0m     @     0x7f0eb6619c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6621)[0m     @     0x7f0eb5abba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6621)[0m     @     0x7f0eb5ab9388 at::native::copy_impl()
[2m[36m(pid=6609)[0m     @     0x7fbd66d20d91 at::TensorIterator::for_each()
[2m[36m(pid=6609)[0m     @     0x7fbd67603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6609)[0m     @     0x7fbd67626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6609)[0m     @     0x7fbd66ac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6609)[0m     @     0x7fbd66ac6388 at::native::copy_impl()
[2m[36m(pid=6646)[0m     @     0x7f3898a08ad3 at::TensorIterator::for_each()
[2m[36m(pid=6627)[0m     @     0x7f0ab8425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6627)[0m     @     0x7f0ab8423388 at::native::copy_impl()
[2m[36m(pid=6630)[0m     @     0x7fb549d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6630)[0m     @     0x7fb549d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6630)[0m     @     0x7fb549228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6630)[0m     @     0x7fb549226388 at::native::copy_impl()
[2m[36m(pid=6670)[0m     @     0x7fb03ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=6670)[0m     @     0x7fb040836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6670)[0m     @     0x7fb040859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6670)[0m     @     0x7fb03fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6670)[0m     @     0x7fb03fcf9388 at::native::copy_impl()
[2m[36m(pid=6672)[0m     @     0x7f85a237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6672)[0m     @     0x7f85a1821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6672)[0m     @     0x7f85a181f388 at::native::copy_impl()
[2m[36m(pid=6606)[0m     @     0x7f39967ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6606)[0m     @     0x7f39967efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6606)[0m     @     0x7f3995c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6606)[0m     @     0x7f3995c8f388 at::native::copy_impl()
[2m[36m(pid=6643)[0m     @     0x7f2305e38d91 at::TensorIterator::for_each()
[2m[36m(pid=6643)[0m     @     0x7f230671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6643)[0m     @     0x7f230673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6641)[0m     @     0x7f250add4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6641)[0m     @     0x7f250adf7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6641)[0m     @     0x7f250a299a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6641)[0m     @     0x7f250a297388 at::native::copy_impl()
[2m[36m(pid=6634)[0m     @     0x7f8a0271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6634)[0m     @     0x7f8a0273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6634)[0m     @     0x7f8a01be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6634)[0m     @     0x7f8a01bde388 at::native::copy_impl()
[2m[36m(pid=6682)[0m     @     0x7fbf7ef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6682)[0m     @     0x7fbf7e3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6682)[0m     @     0x7fbf7e3e7388 at::native::copy_impl()
[2m[36m(pid=6628)[0m     @     0x7f53a9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6628)[0m     @     0x7f53a981f388 at::native::copy_impl()
[2m[36m(pid=6555)[0m     @     0x7eed8de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6555)[0m     @     0x7eed8de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=6617)[0m     @     0x7ed14c9b8d91 at::TensorIterator::for_each()
[2m[36m(pid=6617)[0m     @     0x7ed14d29bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6617)[0m     @     0x7ed14d2bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6616)[0m     @     0x7ee7181b9d91 at::TensorIterator::for_each()
[2m[36m(pid=6616)[0m     @     0x7ee718a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6616)[0m     @     0x7ee718abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6616)[0m     @     0x7ee717f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6616)[0m     @     0x7ee717f5f388 at::native::copy_impl()
[2m[36m(pid=6665)[0m     @     0x7f5fe6852ad3 at::TensorIterator::for_each()
[2m[36m(pid=6665)[0m     @     0x7f5fe6852d91 at::TensorIterator::for_each()
[2m[36m(pid=6665)[0m     @     0x7f5fe7135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6665)[0m     @     0x7f5fe7158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6644)[0m     @     0x7ef2aae9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6644)[0m     @     0x7ef2aa33ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6644)[0m     @     0x7ef2aa33a388 at::native::copy_impl()
[2m[36m(pid=6661)[0m     @     0x7f5a23d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=6661)[0m     @     0x7f5a2461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6661)[0m     @     0x7f5a24642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6661)[0m     @     0x7f5a23ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6661)[0m     @     0x7f5a23ae2388 at::native::copy_impl()
[2m[36m(pid=6577)[0m     @     0x7f3cec1fbad3 at::TensorIterator::for_each()
[2m[36m(pid=6577)[0m     @     0x7f3cec1fbd91 at::TensorIterator::for_each()
[2m[36m(pid=6577)[0m     @     0x7f3cecadeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6577)[0m     @     0x7f3cecb01c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6559)[0m     @     0x7fbd3f5c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6559)[0m     @     0x7fbd3f5e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6559)[0m     @     0x7fbd3ea88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6559)[0m     @     0x7fbd3ea86388 at::native::copy_impl()
[2m[36m(pid=6551)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6551)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6551)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6563)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6563)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6563)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6563)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6563)[0m *** SIGSEGV (@0x0) received by PID 6563 (TID 0x7f170b28f700) from PID 0; stack trace: ***
[2m[36m(pid=6569)[0m     @     0x7f7fed868ad3 at::TensorIterator::for_each()
[2m[36m(pid=6569)[0m     @     0x7f7fed868d91 at::TensorIterator::for_each()
[2m[36m(pid=6569)[0m     @     0x7f7fee14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6569)[0m     @     0x7f7fee16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6569)[0m     @     0x7f7fed610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6569)[0m     @     0x7f7fed60e388 at::native::copy_impl()
[2m[36m(pid=6690)[0m     @     0x7fb40f53c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6690)[0m     @     0x7fb40f53cad3 at::TensorIterator::for_each()
[2m[36m(pid=6690)[0m     @     0x7fb40f53cd91 at::TensorIterator::for_each()
[2m[36m(pid=6690)[0m     @     0x7fb40fe1fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6554)[0m     @     0x7ed334270ad3 at::TensorIterator::for_each()
[2m[36m(pid=6554)[0m     @     0x7ed334270d91 at::TensorIterator::for_each()
[2m[36m(pid=6554)[0m     @     0x7ed334b53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6554)[0m     @     0x7ed334b76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6554)[0m     @     0x7ed334018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6554)[0m     @     0x7ed334016388 at::native::copy_impl()
[2m[36m(pid=6549)[0m     @     0x7fb16fe6cad3 at::TensorIterator::for_each()
[2m[36m(pid=6549)[0m     @     0x7fb16fe6cd91 at::TensorIterator::for_each()
[2m[36m(pid=6549)[0m     @     0x7fb17074fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6549)[0m     @     0x7fb170772c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6658)[0m     @     0x7ee14b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=6658)[0m     @     0x7ee14c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6658)[0m     @     0x7ee14c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6658)[0m     @     0x7ee14b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6658)[0m     @     0x7ee14b4f0388 at::native::copy_impl()
[2m[36m(pid=6658)[0m     @     0x7ee14b4f25a4 at::native::copy_()
[2m[36m(pid=6636)[0m     @     0x7ee238f27d91 at::TensorIterator::for_each()
[2m[36m(pid=6636)[0m     @     0x7ee23980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6636)[0m     @     0x7ee23982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6636)[0m     @     0x7ee238ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6636)[0m     @     0x7ee238ccd388 at::native::copy_impl()
[2m[36m(pid=6636)[0m     @     0x7ee238ccf5a4 at::native::copy_()
[2m[36m(pid=6611)[0m     @     0x7f67d9552d91 at::TensorIterator::for_each()
[2m[36m(pid=6611)[0m     @     0x7f67d9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6611)[0m     @     0x7f67d9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6611)[0m     @     0x7f67d92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6611)[0m     @     0x7f67d92f8388 at::native::copy_impl()
[2m[36m(pid=6562)[0m     @     0x7fc52bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=6562)[0m     @     0x7fc52bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=6562)[0m     @     0x7fc52c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6562)[0m     @     0x7fc52c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6561)[0m     @     0x7f7ec2028ad3 at::TensorIterator::for_each()
[2m[36m(pid=6561)[0m     @     0x7f7ec2028d91 at::TensorIterator::for_each()
[2m[36m(pid=6561)[0m     @     0x7f7ec290bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6561)[0m     @     0x7f7ec292ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6552)[0m     @     0x7faf0fdb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6552)[0m     @     0x7faf0fddac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6552)[0m     @     0x7faf0f27ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6552)[0m     @     0x7faf0f27a388 at::native::copy_impl()
[2m[36m(pid=6552)[0m     @     0x7faf0f27c5a4 at::native::copy_()
[2m[36m(pid=6558)[0m     @     0x7f39437fbad3 at::TensorIterator::for_each()
[2m[36m(pid=6558)[0m     @     0x7f39437fbd91 at::TensorIterator::for_each()
[2m[36m(pid=6558)[0m     @     0x7f39440deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6558)[0m     @     0x7f3944101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6556)[0m     @     0x7f8a6a641d91 at::TensorIterator::for_each()
[2m[36m(pid=6556)[0m     @     0x7f8a6af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6556)[0m     @     0x7f8a6af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6556)[0m     @     0x7f8a6a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6556)[0m     @     0x7f8a6a3e7388 at::native::copy_impl()
[2m[36m(pid=6556)[0m     @     0x7f8a6a3e95a4 at::native::copy_()
[2m[36m(pid=6652)[0m     @     0x7f4848a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=6652)[0m     @     0x7f4849370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6652)[0m     @     0x7f4849393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6652)[0m     @     0x7f4848835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6652)[0m     @     0x7f4848833388 at::native::copy_impl()
[2m[36m(pid=6633)[0m     @     0x7ecf3b856b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6633)[0m     @     0x7ecf3b879c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6633)[0m     @     0x7ecf3ad1ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6633)[0m     @     0x7ecf3ad19388 at::native::copy_impl()
[2m[36m(pid=6633)[0m     @     0x7ecf3ad1b5a4 at::native::copy_()
[2m[36m(pid=6571)[0m     @     0x7fb0f4270ad3 at::TensorIterator::for_each()
[2m[36m(pid=6571)[0m     @     0x7fb0f4270d91 at::TensorIterator::for_each()
[2m[36m(pid=6571)[0m     @     0x7fb0f4b53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6571)[0m     @     0x7fb0f4b76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6567)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6567)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6567)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6567)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6567)[0m *** SIGSEGV (@0x0) received by PID 6567 (TID 0x7ff3452d2700) from PID 0; stack trace: ***
[2m[36m(pid=6567)[0m     @     0x7ff344eab390 (unknown)
[2m[36m(pid=6567)[0m     @     0x7fc444e3ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6567)[0m     @     0x7fc44456a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6655)[0m     @     0x7f785fa0cd91 at::TensorIterator::for_each()
[2m[36m(pid=6655)[0m     @     0x7f78602efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6655)[0m     @     0x7f7860312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6655)[0m     @     0x7f785f7b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6655)[0m     @     0x7f785f7b2388 at::native::copy_impl()
[2m[36m(pid=6565)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6565)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6565)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6565)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6565)[0m *** SIGSEGV (@0x0) received by PID 6565 (TID 0x7fcc88ce6700) from PID 0; stack trace: ***
[2m[36m(pid=6565)[0m     @     0x7fcc888bf390 (unknown)
[2m[36m(pid=6565)[0m     @     0x7f9d88774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6565)[0m     @     0x7f9d87e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6639)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6639)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6639)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6639)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6639)[0m *** SIGSEGV (@0x0) received by PID 6639 (TID 0x7f4b82a36700) from PID 0; stack trace: ***
[2m[36m(pid=6639)[0m     @     0x7f4b8260f390 (unknown)
[2m[36m(pid=6639)[0m     @     0x7f1c825a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6626)[0m     @     0x7f88d598cd91 at::TensorIterator::for_each()
[2m[36m(pid=6626)[0m     @     0x7f88d626fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6626)[0m     @     0x7f88d6292c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6626)[0m     @     0x7f88d5734a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6626)[0m     @     0x7f88d5732388 at::native::copy_impl()
[2m[36m(pid=6581)[0m     @     0x7f0fe58c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=6581)[0m     @     0x7f0fe58c1d91 at::TensorIterator::for_each()
[2m[36m(pid=6581)[0m     @     0x7f0fe61a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6581)[0m     @     0x7f0fe61c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6581)[0m     @     0x7f0fe5669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6668)[0m     @     0x7ee0147e3d91 at::TensorIterator::for_each()
[2m[36m(pid=6668)[0m     @     0x7ee0150c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6668)[0m     @     0x7ee0150e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6668)[0m     @     0x7ee01458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6668)[0m     @     0x7ee014589388 at::native::copy_impl()
[2m[36m(pid=6585)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6585)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6585)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6585)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6585)[0m *** SIGSEGV (@0x0) received by PID 6585 (TID 0x7fc1adabd700) from PID 0; stack trace: ***
[2m[36m(pid=6585)[0m     @     0x7fc1ad696390 (unknown)
[2m[36m(pid=6585)[0m     @     0x7f92ad4e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6585)[0m     @     0x7f92acc0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6607)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6607)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6607)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6607)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6607)[0m *** SIGSEGV (@0x0) received by PID 6607 (TID 0x7f2c18ae5700) from PID 0; stack trace: ***
[2m[36m(pid=6566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6566)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6566)[0m *** SIGSEGV (@0x0) received by PID 6566 (TID 0x7fa628a20700) from PID 0; stack trace: ***
[2m[36m(pid=6583)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6583)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6583)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6583)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6583)[0m *** SIGSEGV (@0x0) received by PID 6583 (TID 0x7fcf2d303700) from PID 0; stack trace: ***
[2m[36m(pid=6583)[0m     @     0x7fcf2cedc390 (unknown)
[2m[36m(pid=6583)[0m     @     0x7fa02ce77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6583)[0m     @     0x7fa02c5a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6637)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6637)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6637)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6637)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6637)[0m *** SIGSEGV (@0x0) received by PID 6637 (TID 0x7fc0ce804700) from PID 0; stack trace: ***
[2m[36m(pid=6654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6654)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6654)[0m *** SIGSEGV (@0x0) received by PID 6654 (TID 0x7f777328f700) from PID 0; stack trace: ***
[2m[36m(pid=6650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6650)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6650)[0m *** SIGSEGV (@0x0) received by PID 6650 (TID 0x7fde79f40700) from PID 0; stack trace: ***
[2m[36m(pid=6650)[0m     @     0x7fde79b19390 (unknown)
[2m[36m(pid=6629)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6629)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6629)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6642)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6642)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6642)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6642)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6642)[0m *** SIGSEGV (@0x0) received by PID 6642 (TID 0x7fa561121700) from PID 0; stack trace: ***
[2m[36m(pid=6642)[0m     @     0x7fa560cfa390 (unknown)
[2m[36m(pid=6580)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6580)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6580)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6580)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6580)[0m *** SIGSEGV (@0x0) received by PID 6580 (TID 0x7fc57ea18700) from PID 0; stack trace: ***
[2m[36m(pid=6580)[0m     @     0x7fc57e5f1390 (unknown)
[2m[36m(pid=6580)[0m     @     0x7f967e577f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6573)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6573)[0m *** SIGSEGV (@0x0) received by PID 6573 (TID 0x7fe16a956700) from PID 0; stack trace: ***
[2m[36m(pid=6573)[0m     @     0x7fe16a52f390 (unknown)
[2m[36m(pid=6573)[0m     @     0x7fb26a4b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6573)[0m     @     0x7fb269be47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6624)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6624)[0m *** SIGSEGV (@0x0) received by PID 6624 (TID 0x7f9ee64ba700) from PID 0; stack trace: ***
[2m[36m(pid=6624)[0m     @     0x7f9ee6093390 (unknown)
[2m[36m(pid=6624)[0m     @     0x7f6fe6028f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6638)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6638)[0m *** SIGSEGV (@0x0) received by PID 6638 (TID 0x7f4c7e7fc700) from PID 0; stack trace: ***
[2m[36m(pid=6623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6623)[0m *** SIGSEGV (@0x0) received by PID 6623 (TID 0x7fceff7b6700) from PID 0; stack trace: ***
[2m[36m(pid=6623)[0m     @     0x7fceff38f390 (unknown)
[2m[36m(pid=6623)[0m     @     0x7f9fff229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6623)[0m     @     0x7f9ffe9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6564)[0m     @     0x7f1f9006ed91 at::TensorIterator::for_each()
[2m[36m(pid=6564)[0m     @     0x7f1f90951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6564)[0m     @     0x7f1f90974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6564)[0m     @     0x7f1f8fe16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6605)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6605)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6605)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6605)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6605)[0m *** SIGSEGV (@0x0) received by PID 6605 (TID 0x7feaa7761700) from PID 0; stack trace: ***
[2m[36m(pid=6605)[0m     @     0x7feaa733a390 (unknown)
[2m[36m(pid=6557)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6557)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6557)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6557)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6557)[0m *** SIGSEGV (@0x0) received by PID 6557 (TID 0x7f840a41c700) from PID 0; stack trace: ***
[2m[36m(pid=6557)[0m     @     0x7f8409ff5390 (unknown)
[2m[36m(pid=6557)[0m     @     0x7f5509e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6557)[0m     @     0x7f550954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6578)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6578)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6578)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6578)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6578)[0m *** SIGSEGV (@0x0) received by PID 6578 (TID 0x7f8b37e91700) from PID 0; stack trace: ***
[2m[36m(pid=6578)[0m     @     0x7f8b37a6a390 (unknown)
[2m[36m(pid=6578)[0m     @     0x7f5c37a08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6578)[0m     @     0x7f5c371337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6635)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6635)[0m *** SIGSEGV (@0x0) received by PID 6635 (TID 0x7f536e26a700) from PID 0; stack trace: ***
[2m[36m(pid=6635)[0m     @     0x7f536de43390 (unknown)
[2m[36m(pid=6635)[0m     @     0x7f246dde4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6635)[0m     @     0x7f246d50f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6582)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6582)[0m *** SIGSEGV (@0x0) received by PID 6582 (TID 0x7fce44993700) from PID 0; stack trace: ***
[2m[36m(pid=6582)[0m     @     0x7fce4456c390 (unknown)
[2m[36m(pid=6582)[0m     @     0x7f9f444f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6582)[0m     @     0x7f9f43c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6582)[0m     @     0x7f9f43c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6568)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6568)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6568)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6568)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6568)[0m *** SIGSEGV (@0x0) received by PID 6568 (TID 0x7fad3faf6700) from PID 0; stack trace: ***
[2m[36m(pid=6568)[0m     @     0x7fad3f6cf390 (unknown)
[2m[36m(pid=6568)[0m     @     0x7f7e3f61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6568)[0m     @     0x7f7e3ed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6568)[0m     @     0x7f7e3ed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6550)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6550)[0m *** SIGSEGV (@0x0) received by PID 6550 (TID 0x7f0dd9905700) from PID 0; stack trace: ***
[2m[36m(pid=6550)[0m     @     0x7f0dd94de390 (unknown)
[2m[36m(pid=6550)[0m     @     0x7eded949ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6550)[0m     @     0x7eded8bc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6550)[0m     @     0x7eded8bcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6653)[0m     @     0x7f375f223d91 at::TensorIterator::for_each()
[2m[36m(pid=6653)[0m     @     0x7f375fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6653)[0m     @     0x7f375fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6653)[0m     @     0x7f375efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6653)[0m     @     0x7f375efc9388 at::native::copy_impl()
[2m[36m(pid=6653)[0m     @     0x7f375efcb5a4 at::native::copy_()
[2m[36m(pid=6632)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6632)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6632)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6632)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6632)[0m *** SIGSEGV (@0x0) received by PID 6632 (TID 0x7fb65d29a700) from PID 0; stack trace: ***
[2m[36m(pid=6632)[0m     @     0x7fb65ce73390 (unknown)
[2m[36m(pid=6632)[0m     @     0x7f875ce12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6632)[0m     @     0x7f875c53d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6632)[0m     @     0x7f875c5408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6625)[0m     @     0x7f3656ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6625)[0m     @     0x7f3656b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6625)[0m     @     0x7f3655fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6625)[0m     @     0x7f3655fa5388 at::native::copy_impl()
[2m[36m(pid=6625)[0m     @     0x7f3655fa75a4 at::native::copy_()
[2m[36m(pid=6680)[0m     @     0x7edca94fc388 at::native::copy_impl()
[2m[36m(pid=6680)[0m     @     0x7edca94fe5a4 at::native::copy_()
[2m[36m(pid=6680)[0m     @     0x7edca9be94f5 at::Tensor::copy_()
[2m[36m(pid=6680)[0m     @     0x7edcac0bc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6621)[0m     @     0x7f0eb5abb5a4 at::native::copy_()
[2m[36m(pid=6621)[0m     @     0x7f0eb61a64f5 at::Tensor::copy_()
[2m[36m(pid=6621)[0m     @     0x7f0eb86798de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6621)[0m     @     0x7f0eb61a64f5 at::Tensor::copy_()
[2m[36m(pid=6621)[0m     @     0x7f0ebc25179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6621)[0m     @     0x55e160bfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6621)[0m     @     0x55e160b55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6621)[0m     @     0x55e160be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6621)[0m     @     0x55e160be1a20 method_vectorcall
[2m[36m(pid=6621)[0m     @     0x55e160b55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x7fbd66ac85a4 at::native::copy_()
[2m[36m(pid=6609)[0m     @     0x7fbd671b34f5 at::Tensor::copy_()
[2m[36m(pid=6609)[0m     @     0x7fbd696868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6609)[0m     @     0x7fbd671b34f5 at::Tensor::copy_()
[2m[36m(pid=6646)[0m     @     0x7f3898a08d91 at::TensorIterator::for_each()
[2m[36m(pid=6646)[0m     @     0x7f38992ebb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6646)[0m     @     0x7f389930ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6646)[0m     @     0x7f38987b0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6646)[0m     @     0x7f38987ae388 at::native::copy_impl()
[2m[36m(pid=6646)[0m     @     0x7f38987b05a4 at::native::copy_()
[2m[36m(pid=6627)[0m     @     0x7f0ab84255a4 at::native::copy_()
[2m[36m(pid=6627)[0m     @     0x7f0ab8b104f5 at::Tensor::copy_()
[2m[36m(pid=6627)[0m     @     0x7f0abafe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6627)[0m     @     0x7f0ab8b104f5 at::Tensor::copy_()
[2m[36m(pid=6627)[0m     @     0x7f0abebbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6627)[0m     @     0x56232439dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6627)[0m     @     0x5623242f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6627)[0m     @     0x562324383baf _PyEval_EvalCodeWithName
[2m[36m(pid=6627)[0m     @     0x562324384a20 method_vectorcall
[2m[36m(pid=6627)[0m     @     0x5623242f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6627)[0m     @     0x562324383baf _PyEval_EvalCodeWithName
[2m[36m(pid=6627)[0m     @     0x562324384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6627)[0m     @     0x5623242f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6627)[0m     @     0x562324383baf _PyEval_EvalCodeWithName
[2m[36m(pid=6627)[0m     @     0x562324384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6627)[0m     @     0x5623242f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6627)[0m     @     0x562324383baf _PyEval_EvalCodeWithName
[2m[36m(pid=6627)[0m     @     0x562324384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6627)[0m     @     0x5623242f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6627)[0m     @     0x562324383baf _PyEval_EvalCodeWithName
[2m[36m(pid=6627)[0m     @     0x562324384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6627)[0m     @     0x5623242f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x7fb5492285a4 at::native::copy_()
[2m[36m(pid=6630)[0m     @     0x7fb5499134f5 at::Tensor::copy_()
[2m[36m(pid=6630)[0m     @     0x7fb54bde68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6630)[0m     @     0x7fb5499134f5 at::Tensor::copy_()
[2m[36m(pid=6630)[0m     @     0x7fb54f9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6630)[0m     @     0x562631866fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6630)[0m     @     0x5626317c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x56263184cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x7fb03fcfb5a4 at::native::copy_()
[2m[36m(pid=6670)[0m     @     0x7fb0403e64f5 at::Tensor::copy_()
[2m[36m(pid=6670)[0m     @     0x7fb0428b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6670)[0m     @     0x7fb0403e64f5 at::Tensor::copy_()
[2m[36m(pid=6672)[0m     @     0x7f85a18215a4 at::native::copy_()
[2m[36m(pid=6672)[0m     @     0x7f85a1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=6672)[0m     @     0x7f85a43df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6672)[0m     @     0x7f85a1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=6672)[0m     @     0x7f85a7fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6672)[0m     @     0x5596e122cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6672)[0m     @     0x5596e1187b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6672)[0m     @     0x5596e1212baf _PyEval_EvalCodeWithName
[2m[36m(pid=6672)[0m     @     0x5596e1213a20 method_vectorcall
[2m[36m(pid=6672)[0m     @     0x5596e1187bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6672)[0m     @     0x5596e1212baf _PyEval_EvalCodeWithName
[2m[36m(pid=6672)[0m     @     0x5596e1213643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6672)[0m     @     0x5596e1188689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6672)[0m     @     0x5596e1212baf _PyEval_EvalCodeWithName
[2m[36m(pid=6672)[0m     @     0x5596e1213643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6672)[0m     @     0x5596e1188689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6672)[0m     @     0x5596e1212baf _PyEval_EvalCodeWithName
[2m[36m(pid=6672)[0m     @     0x5596e1213643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6672)[0m     @     0x5596e1188689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6672)[0m     @     0x5596e1212baf _PyEval_EvalCodeWithName
[2m[36m(pid=6672)[0m     @     0x5596e1213643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6672)[0m     @     0x5596e1188689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x7f3995c915a4 at::native::copy_()
[2m[36m(pid=6606)[0m     @     0x7f399637c4f5 at::Tensor::copy_()
[2m[36m(pid=6606)[0m     @     0x7f399884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6606)[0m     @     0x7f399637c4f5 at::Tensor::copy_()
[2m[36m(pid=6606)[0m     @     0x7f399c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6606)[0m     @     0x55de232bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6606)[0m     @     0x55de23217b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6606)[0m     @     0x55de232a3a20 method_vectorcall
[2m[36m(pid=6606)[0m     @     0x55de23217bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6606)[0m     @     0x55de232a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6606)[0m     @     0x55de23218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6606)[0m     @     0x55de232a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6606)[0m     @     0x55de23218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x7f2305be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6643)[0m     @     0x7f2305bde388 at::native::copy_impl()
[2m[36m(pid=6643)[0m     @     0x7f2305be05a4 at::native::copy_()
[2m[36m(pid=6643)[0m     @     0x7f23062cb4f5 at::Tensor::copy_()
[2m[36m(pid=6641)[0m     @     0x7f250a2995a4 at::native::copy_()
[2m[36m(pid=6641)[0m     @     0x7f250a9844f5 at::Tensor::copy_()
[2m[36m(pid=6641)[0m     @     0x7f250ce578de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6641)[0m     @     0x7f250a9844f5 at::Tensor::copy_()
[2m[36m(pid=6641)[0m     @     0x7f2510a2f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6641)[0m     @     0x5567d565cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6641)[0m     @     0x5567d55b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6641)[0m     @     0x5567d5642baf _PyEval_EvalCodeWithName
[2m[36m(pid=6641)[0m     @     0x5567d5643a20 method_vectorcall
[2m[36m(pid=6641)[0m     @     0x5567d55b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6641)[0m     @     0x5567d5642baf _PyEval_EvalCodeWithName
[2m[36m(pid=6641)[0m     @     0x5567d5643643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6641)[0m     @     0x5567d55b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x7f8a01be05a4 at::native::copy_()
[2m[36m(pid=6634)[0m     @     0x7f8a022cb4f5 at::Tensor::copy_()
[2m[36m(pid=6634)[0m     @     0x7f8a0479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6634)[0m     @     0x7f8a022cb4f5 at::Tensor::copy_()
[2m[36m(pid=6634)[0m     @     0x7f8a0837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6634)[0m     @     0x55c7e748dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6634)[0m     @     0x55c7e73e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e7473baf _PyEval_EvalCodeWithName
[2m[36m(pid=6634)[0m     @     0x55c7e7474a20 method_vectorcall
[2m[36m(pid=6634)[0m     @     0x55c7e73e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e7473baf _PyEval_EvalCodeWithName
[2m[36m(pid=6634)[0m     @     0x55c7e7474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6634)[0m     @     0x55c7e73e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e7473baf _PyEval_EvalCodeWithName
[2m[36m(pid=6634)[0m     @     0x55c7e7474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6682)[0m     @     0x7fbf7e3e95a4 at::native::copy_()
[2m[36m(pid=6682)[0m     @     0x7fbf7ead44f5 at::Tensor::copy_()
[2m[36m(pid=6682)[0m     @     0x7fbf80fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6682)[0m     @     0x7fbf7ead44f5 at::Tensor::copy_()
[2m[36m(pid=6682)[0m     @     0x7fbf84b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6682)[0m     @     0x555900cdafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6682)[0m     @     0x555900c35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6682)[0m     @     0x555900cc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6682)[0m     @     0x555900cc1a20 method_vectorcall
[2m[36m(pid=6682)[0m     @     0x555900c35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6682)[0m     @     0x555900cc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6682)[0m     @     0x555900cc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6682)[0m     @     0x555900c36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6682)[0m     @     0x555900cc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6682)[0m     @     0x555900cc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6682)[0m     @     0x555900c36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6682)[0m     @     0x555900cc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6682)[0m     @     0x555900cc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6682)[0m     @     0x555900c36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6682)[0m     @     0x555900cc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6682)[0m     @     0x555900cc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6682)[0m     @     0x555900c36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x7f53a98215a4 at::native::copy_()
[2m[36m(pid=6628)[0m     @     0x7f53a9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=6628)[0m     @     0x7f53ac3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6628)[0m     @     0x7f53a9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=6628)[0m     @     0x7f53affb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6628)[0m     @     0x563ff19f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6628)[0m     @     0x563ff1951b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x563ff19dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6628)[0m     @     0x563ff19dda20 method_vectorcall
[2m[36m(pid=6628)[0m     @     0x563ff1951bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x563ff19dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6628)[0m     @     0x563ff19dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6628)[0m     @     0x563ff1952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x563ff19dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6628)[0m     @     0x563ff19dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6628)[0m     @     0x563ff1952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x563ff19dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6628)[0m     @     0x563ff19dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6628)[0m     @     0x563ff1952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6628)[0m     @     0x563ff19dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6628)[0m     @     0x563ff19dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6628)[0m     @     0x563ff1952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x7eed8de38d91 at::TensorIterator::for_each()
[2m[36m(pid=6555)[0m     @     0x7eed8e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6555)[0m     @     0x7eed8e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6555)[0m     @     0x7eed8dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6555)[0m     @     0x7eed8dbde388 at::native::copy_impl()
[2m[36m(pid=6555)[0m     @     0x7eed8dbe05a4 at::native::copy_()
[2m[36m(pid=6617)[0m     @     0x7ed14c760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6617)[0m     @     0x7ed14c75e388 at::native::copy_impl()
[2m[36m(pid=6617)[0m     @     0x7ed14c7605a4 at::native::copy_()
[2m[36m(pid=6617)[0m     @     0x7ed14ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=6617)[0m     @     0x7ed14f31e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6616)[0m     @     0x7ee717f615a4 at::native::copy_()
[2m[36m(pid=6616)[0m     @     0x7ee71864c4f5 at::Tensor::copy_()
[2m[36m(pid=6616)[0m     @     0x7ee71ab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6665)[0m     @     0x7f5fe65faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6665)[0m     @     0x7f5fe65f8388 at::native::copy_impl()
[2m[36m(pid=6665)[0m     @     0x7f5fe65fa5a4 at::native::copy_()
[2m[36m(pid=6665)[0m     @     0x7f5fe6ce54f5 at::Tensor::copy_()
[2m[36m(pid=6665)[0m     @     0x7f5fe91b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6644)[0m     @     0x7ef2aa33c5a4 at::native::copy_()
[2m[36m(pid=6644)[0m     @     0x7ef2aaa274f5 at::Tensor::copy_()
[2m[36m(pid=6644)[0m     @     0x7ef2acefa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6644)[0m     @     0x7ef2aaa274f5 at::Tensor::copy_()
[2m[36m(pid=6644)[0m     @     0x7ef2b0ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6644)[0m     @     0x56455c331fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6644)[0m     @     0x56455c28cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6644)[0m     @     0x56455c317baf _PyEval_EvalCodeWithName
[2m[36m(pid=6644)[0m     @     0x56455c318a20 method_vectorcall
[2m[36m(pid=6644)[0m     @     0x56455c28cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6644)[0m     @     0x56455c317baf _PyEval_EvalCodeWithName
[2m[36m(pid=6644)[0m     @     0x56455c318643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6644)[0m     @     0x56455c28d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6644)[0m     @     0x56455c317baf _PyEval_EvalCodeWithName
[2m[36m(pid=6644)[0m     @     0x56455c318643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6644)[0m     @     0x56455c28d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6644)[0m     @     0x56455c317baf _PyEval_EvalCodeWithName
[2m[36m(pid=6644)[0m     @     0x56455c318643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6644)[0m     @     0x56455c28d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6644)[0m     @     0x56455c317baf _PyEval_EvalCodeWithName
[2m[36m(pid=6644)[0m     @     0x56455c318643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6644)[0m     @     0x56455c28d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x7f5a23ae45a4 at::native::copy_()
[2m[36m(pid=6661)[0m     @     0x7f5a241cf4f5 at::Tensor::copy_()
[2m[36m(pid=6661)[0m     @     0x7f5a266a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6661)[0m     @     0x7f5a241cf4f5 at::Tensor::copy_()
[2m[36m(pid=6577)[0m     @     0x7f3cebfa3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6577)[0m     @     0x7f3cebfa1388 at::native::copy_impl()
[2m[36m(pid=6577)[0m     @     0x7f3cebfa35a4 at::native::copy_()
[2m[36m(pid=6577)[0m     @     0x7f3cec68e4f5 at::Tensor::copy_()
[2m[36m(pid=6577)[0m     @     0x7f3ceeb618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6559)[0m     @     0x7fbd3ea885a4 at::native::copy_()
[2m[36m(pid=6559)[0m     @     0x7fbd3f1734f5 at::Tensor::copy_()
[2m[36m(pid=6559)[0m     @     0x7fbd416468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6559)[0m     @     0x7fbd3f1734f5 at::Tensor::copy_()
[2m[36m(pid=6613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6613)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6613)[0m *** SIGSEGV (@0x0) received by PID 6613 (TID 0x7ff5be49c700) from PID 0; stack trace: ***
[2m[36m(pid=6613)[0m     @     0x7ff5be075390 (unknown)
[2m[36m(pid=6613)[0m     @     0x7fc6be005f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6613)[0m     @     0x7fc6bd7307db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6631)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6631)[0m *** SIGSEGV (@0x0) received by PID 6631 (TID 0x7f62cb3dd700) from PID 0; stack trace: ***
[2m[36m(pid=6631)[0m     @     0x7f62cafb6390 (unknown)
[2m[36m(pid=6678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6678)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6678)[0m *** SIGSEGV (@0x0) received by PID 6678 (TID 0x7f80eb083700) from PID 0; stack trace: ***
[2m[36m(pid=6678)[0m     @     0x7f80eac5c390 (unknown)
[2m[36m(pid=6572)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6572)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6572)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6572)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6572)[0m *** SIGSEGV (@0x0) received by PID 6572 (TID 0x7f17bb463700) from PID 0; stack trace: ***
[2m[36m(pid=6572)[0m     @     0x7f17bb03c390 (unknown)
[2m[36m(pid=6572)[0m     @     0x7ee8baf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6572)[0m     @     0x7ee8ba63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6553)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6553)[0m *** SIGSEGV (@0x0) received by PID 6553 (TID 0x7fcea21f9700) from PID 0; stack trace: ***
[2m[36m(pid=6553)[0m     @     0x7fcea1dd2390 (unknown)
[2m[36m(pid=6553)[0m     @     0x7f9fa1d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6551)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6551)[0m *** SIGSEGV (@0x0) received by PID 6551 (TID 0x7fb218806700) from PID 0; stack trace: ***
[2m[36m(pid=6551)[0m     @     0x7fb2183df390 (unknown)
[2m[36m(pid=6551)[0m     @     0x7f8318333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6551)[0m     @     0x7f8317a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6551)[0m     @     0x7f8317a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6563)[0m     @     0x7f170ae68390 (unknown)
[2m[36m(pid=6563)[0m     @     0x7ee80ae03f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6563)[0m     @     0x7ee80a52e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6563)[0m     @     0x7ee80a5318f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6563)[0m     @     0x7ee80a531ad3 at::TensorIterator::for_each()
[2m[36m(pid=6569)[0m     @     0x7f7fed6105a4 at::native::copy_()
[2m[36m(pid=6569)[0m     @     0x7f7fedcfb4f5 at::Tensor::copy_()
[2m[36m(pid=6569)[0m     @     0x7f7ff01ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6690)[0m     @     0x7fb40fe42c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6690)[0m     @     0x7fb40f2e4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6690)[0m     @     0x7fb40f2e2388 at::native::copy_impl()
[2m[36m(pid=6690)[0m     @     0x7fb40f2e45a4 at::native::copy_()
[2m[36m(pid=6554)[0m     @     0x7ed3340185a4 at::native::copy_()
[2m[36m(pid=6554)[0m     @     0x7ed3347034f5 at::Tensor::copy_()
[2m[36m(pid=6554)[0m     @     0x7ed336bd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6549)[0m     @     0x7fb16fc14a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6549)[0m     @     0x7fb16fc12388 at::native::copy_impl()
[2m[36m(pid=6549)[0m     @     0x7fb16fc145a4 at::native::copy_()
[2m[36m(pid=6658)[0m     @     0x7ee14bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=6658)[0m     @     0x7ee14e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6636)[0m     @     0x7ee2393ba4f5 at::Tensor::copy_()
[2m[36m(pid=6636)[0m     @     0x7ee23b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6611)[0m     @     0x7f67d92fa5a4 at::native::copy_()
[2m[36m(pid=6611)[0m     @     0x7f67d99e54f5 at::Tensor::copy_()
[2m[36m(pid=6611)[0m     @     0x7f67dbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6562)[0m     @     0x7fc52b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6562)[0m     @     0x7fc52b8b7388 at::native::copy_impl()
[2m[36m(pid=6562)[0m     @     0x7fc52b8b95a4 at::native::copy_()
[2m[36m(pid=6561)[0m     @     0x7f7ec1dd0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6561)[0m     @     0x7f7ec1dce388 at::native::copy_impl()
[2m[36m(pid=6561)[0m     @     0x7f7ec1dd05a4 at::native::copy_()
[2m[36m(pid=6561)[0m     @     0x7f7ec24bb4f5 at::Tensor::copy_()
[2m[36m(pid=6552)[0m     @     0x7faf0f9674f5 at::Tensor::copy_()
[2m[36m(pid=6552)[0m     @     0x7faf11e3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6552)[0m     @     0x7faf0f9674f5 at::Tensor::copy_()
[2m[36m(pid=6552)[0m     @     0x7faf15a1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6552)[0m     @     0x564c82e02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6552)[0m     @     0x564c82d5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6552)[0m     @     0x564c82de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6552)[0m     @     0x564c82de9a20 method_vectorcall
[2m[36m(pid=6552)[0m     @     0x564c82d5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6552)[0m     @     0x564c82de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6552)[0m     @     0x564c82de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6552)[0m     @     0x564c82d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6552)[0m     @     0x564c82de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6552)[0m     @     0x564c82de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6552)[0m     @     0x564c82d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6552)[0m     @     0x564c82de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6552)[0m     @     0x564c82de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6552)[0m     @     0x564c82d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6552)[0m     @     0x564c82de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6552)[0m     @     0x564c82de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6552)[0m     @     0x564c82d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x7f39435a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6558)[0m     @     0x7f39435a1388 at::native::copy_impl()
[2m[36m(pid=6558)[0m     @     0x7f39435a35a4 at::native::copy_()
[2m[36m(pid=6556)[0m     @     0x7f8a6aad44f5 at::Tensor::copy_()
[2m[36m(pid=6556)[0m     @     0x7f8a6cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6556)[0m     @     0x7f8a6aad44f5 at::Tensor::copy_()
[2m[36m(pid=6556)[0m     @     0x7f8a70b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6556)[0m     @     0x56124e683fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6556)[0m     @     0x56124e5deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6556)[0m     @     0x56124e669baf _PyEval_EvalCodeWithName
[2m[36m(pid=6556)[0m     @     0x56124e66aa20 method_vectorcall
[2m[36m(pid=6556)[0m     @     0x56124e5debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x7f48488355a4 at::native::copy_()
[2m[36m(pid=6652)[0m     @     0x7f4848f204f5 at::Tensor::copy_()
[2m[36m(pid=6652)[0m     @     0x7f484b3f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6633)[0m     @     0x7ecf3b4064f5 at::Tensor::copy_()
[2m[36m(pid=6633)[0m     @     0x7ecf3d8d98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6633)[0m     @     0x7ecf3b4064f5 at::Tensor::copy_()
[2m[36m(pid=6633)[0m     @     0x7ecf414b179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6633)[0m     @     0x5653db390fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6633)[0m     @     0x5653db2ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6633)[0m     @     0x5653db376baf _PyEval_EvalCodeWithName
[2m[36m(pid=6633)[0m     @     0x5653db377a20 method_vectorcall
[2m[36m(pid=6633)[0m     @     0x5653db2ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6633)[0m     @     0x5653db376baf _PyEval_EvalCodeWithName
[2m[36m(pid=6633)[0m     @     0x5653db377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6633)[0m     @     0x5653db2ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6633)[0m     @     0x5653db376baf _PyEval_EvalCodeWithName
[2m[36m(pid=6633)[0m     @     0x5653db377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6633)[0m     @     0x5653db2ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6633)[0m     @     0x5653db376baf _PyEval_EvalCodeWithName
[2m[36m(pid=6633)[0m     @     0x5653db377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6633)[0m     @     0x5653db2ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6633)[0m     @     0x5653db376baf _PyEval_EvalCodeWithName
[2m[36m(pid=6633)[0m     @     0x5653db377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6633)[0m     @     0x5653db2ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x7fb0f4018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6571)[0m     @     0x7fb0f4016388 at::native::copy_impl()
[2m[36m(pid=6571)[0m     @     0x7fb0f40185a4 at::native::copy_()
[2m[36m(pid=6567)[0m     @     0x7fc44456d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6567)[0m     @     0x7fc44456dad3 at::TensorIterator::for_each()
[2m[36m(pid=6655)[0m     @     0x7f785f7b45a4 at::native::copy_()
[2m[36m(pid=6655)[0m     @     0x7f785fe9f4f5 at::Tensor::copy_()
[2m[36m(pid=6655)[0m     @     0x7f78623728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6565)[0m     @     0x7f9d87ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6565)[0m     @     0x7f9d87ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=6639)[0m     @     0x7f1c81ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6626)[0m     @     0x7f88d57345a4 at::native::copy_()
[2m[36m(pid=6626)[0m     @     0x7f88d5e1f4f5 at::Tensor::copy_()
[2m[36m(pid=6581)[0m     @     0x7f0fe5667388 at::native::copy_impl()
[2m[36m(pid=6581)[0m     @     0x7f0fe56695a4 at::native::copy_()
[2m[36m(pid=6581)[0m     @     0x7f0fe5d544f5 at::Tensor::copy_()
[2m[36m(pid=6668)[0m     @     0x7ee01458b5a4 at::native::copy_()
[2m[36m(pid=6668)[0m     @     0x7ee014c764f5 at::Tensor::copy_()
[2m[36m(pid=6668)[0m     @     0x7ee0171498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6585)[0m     @     0x7f92acc118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6585)[0m     @     0x7f92acc11ad3 at::TensorIterator::for_each()
[2m[36m(pid=6610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6610)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6610)[0m *** SIGSEGV (@0x0) received by PID 6610 (TID 0x7f9d4fb29700) from PID 0; stack trace: ***
[2m[36m(pid=6610)[0m     @     0x7f9d4f702390 (unknown)
[2m[36m(pid=6607)[0m     @     0x7f2c186be390 (unknown)
[2m[36m(pid=6607)[0m     @     0x7efd1860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6607)[0m     @     0x7efd17d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6607)[0m     @     0x7efd17d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6607)[0m     @     0x7efd17d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=6566)[0m     @     0x7fa6285f9390 (unknown)
[2m[36m(pid=6566)[0m     @     0x7f7728507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6566)[0m     @     0x7f7727c327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6566)[0m     @     0x7f7727c358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6566)[0m     @     0x7f7727c35ad3 at::TensorIterator::for_each()
[2m[36m(pid=6583)[0m     @     0x7fa02c5a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6583)[0m     @     0x7fa02c5a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=6583)[0m     @     0x7fa02c5a5d91 at::TensorIterator::for_each()
[2m[36m(pid=6666)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6666)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6666)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6666)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6666)[0m *** SIGSEGV (@0x0) received by PID 6666 (TID 0x7f6c13379700) from PID 0; stack trace: ***
[2m[36m(pid=6666)[0m     @     0x7f6c12f52390 (unknown)
[2m[36m(pid=6666)[0m     @     0x7f3d12ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6666)[0m     @     0x7f3d125fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6637)[0m     @     0x7fc0ce3dd390 (unknown)
[2m[36m(pid=6637)[0m     @     0x7f91ce34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6637)[0m     @     0x7f91cda767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6637)[0m     @     0x7f91cda798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6637)[0m     @     0x7f91cda79ad3 at::TensorIterator::for_each()
[2m[36m(pid=6663)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6663)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6663)[0m *** Aborted at 1604571462 (unix time) try "date -d @1604571462" if you are using GNU date ***
[2m[36m(pid=6663)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6663)[0m *** SIGSEGV (@0x0) received by PID 6663 (TID 0x7f78cb896700) from PID 0; stack trace: ***
[2m[36m(pid=6663)[0m     @     0x7f78cb46f390 (unknown)
[2m[36m(pid=6663)[0m     @     0x7f49cb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6663)[0m     @     0x7f49ca9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6654)[0m     @     0x7f7772e68390 (unknown)
[2m[36m(pid=6654)[0m     @     0x7f4872c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6654)[0m     @     0x7f48723407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6654)[0m     @     0x7f48723438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6650)[0m     @     0x7faf799bdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6650)[0m     @     0x7faf790e87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6650)[0m     @     0x7faf790eb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6629)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6629)[0m *** SIGSEGV (@0x0) received by PID 6629 (TID 0x7f0c6e44b700) from PID 0; stack trace: ***
[2m[36m(pid=6629)[0m     @     0x7f0c6e024390 (unknown)
[2m[36m(pid=6629)[0m     @     0x7edd6de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6629)[0m     @     0x7edd6d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6642)[0m     @     0x7f7660bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6642)[0m     @     0x7f76602fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6642)[0m     @     0x7f76602ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6642)[0m     @     0x7f76602ffad3 at::TensorIterator::for_each()
[2m[36m(pid=6580)[0m     @     0x7f967dca27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6580)[0m     @     0x7f967dca58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6580)[0m     @     0x7f967dca5ad3 at::TensorIterator::for_each()
[2m[36m(pid=6573)[0m     @     0x7fb269be78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6573)[0m     @     0x7fb269be7ad3 at::TensorIterator::for_each()
[2m[36m(pid=6573)[0m     @     0x7fb269be7d91 at::TensorIterator::for_each()
[2m[36m(pid=6573)[0m     @     0x7fb26a4cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6624)[0m     @     0x7f6fe57537db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6624)[0m     @     0x7f6fe57568f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6624)[0m     @     0x7f6fe5756ad3 at::TensorIterator::for_each()
[2m[36m(pid=6624)[0m     @     0x7f6fe5756d91 at::TensorIterator::for_each()
[2m[36m(pid=6638)[0m     @     0x7f4c7e3d5390 (unknown)
[2m[36m(pid=6638)[0m     @     0x7f1d7e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6623)[0m     @     0x7f9ffe9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6623)[0m     @     0x7f9ffe957ad3 at::TensorIterator::for_each()
[2m[36m(pid=6623)[0m     @     0x7f9ffe957d91 at::TensorIterator::for_each()
[2m[36m(pid=6564)[0m     @     0x7f1f8fe14388 at::native::copy_impl()
[2m[36m(pid=6564)[0m     @     0x7f1f8fe165a4 at::native::copy_()
[2m[36m(pid=6564)[0m     @     0x7f1f905014f5 at::Tensor::copy_()
[2m[36m(pid=6564)[0m     @     0x7f1f929d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6605)[0m     @     0x7fbba7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6605)[0m     @     0x7fbba69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6605)[0m     @     0x7fbba69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6605)[0m     @     0x7fbba6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=6557)[0m     @     0x7f55095528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6557)[0m     @     0x7f5509552ad3 at::TensorIterator::for_each()
[2m[36m(pid=6578)[0m     @     0x7f5c371368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6578)[0m     @     0x7f5c37136ad3 at::TensorIterator::for_each()
[2m[36m(pid=6635)[0m     @     0x7f246d5128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6635)[0m     @     0x7f246d512ad3 at::TensorIterator::for_each()
[2m[36m(pid=6582)[0m     @     0x7f9f43c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=6582)[0m     @     0x7f9f43c24d91 at::TensorIterator::for_each()
[2m[36m(pid=6582)[0m     @     0x7f9f44507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6568)[0m     @     0x7f7e3ed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=6568)[0m     @     0x7f7e3ed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=6550)[0m     @     0x7eded8bccad3 at::TensorIterator::for_each()
[2m[36m(pid=6550)[0m     @     0x7eded8bccd91 at::TensorIterator::for_each()
[2m[36m(pid=6550)[0m     @     0x7eded94afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6653)[0m     @     0x7f375f6b64f5 at::Tensor::copy_()
[2m[36m(pid=6653)[0m     @     0x7f3761b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6632)[0m     @     0x7f875c540ad3 at::TensorIterator::for_each()
[2m[36m(pid=6632)[0m     @     0x7f875c540d91 at::TensorIterator::for_each()
[2m[36m(pid=6632)[0m     @     0x7f875ce23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6625)[0m     @     0x7f36566924f5 at::Tensor::copy_()
[2m[36m(pid=6625)[0m     @     0x7f3658b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6625)[0m     @     0x7f36566924f5 at::Tensor::copy_()
[2m[36m(pid=6680)[0m     @     0x7edca9be94f5 at::Tensor::copy_()
[2m[36m(pid=6680)[0m     @     0x7edcafc9479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6680)[0m     @     0x563e41c4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6680)[0m     @     0x563e41ba9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6680)[0m     @     0x563e41c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=6680)[0m     @     0x563e41c35a20 method_vectorcall
[2m[36m(pid=6680)[0m     @     0x563e41ba9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6680)[0m     @     0x563e41c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=6680)[0m     @     0x563e41c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6680)[0m     @     0x563e41baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6680)[0m     @     0x563e41c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=6680)[0m     @     0x563e41c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6680)[0m     @     0x563e41baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6680)[0m     @     0x563e41c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=6680)[0m     @     0x563e41c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6680)[0m     @     0x563e41baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6680)[0m     @     0x563e41c34baf _PyEval_EvalCodeWithName
[2m[36m(pid=6680)[0m     @     0x563e41c35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6680)[0m     @     0x563e41baa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6621)[0m     @     0x55e160be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6621)[0m     @     0x55e160be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6621)[0m     @     0x55e160b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6621)[0m     @     0x55e160be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6621)[0m     @     0x55e160be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6621)[0m     @     0x55e160b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6621)[0m     @     0x55e160be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6621)[0m     @     0x55e160be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6621)[0m     @     0x55e160b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6621)[0m     @     0x55e160be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6621)[0m     @     0x55e160be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6621)[0m     @     0x55e160b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x7fbd6d25e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6609)[0m     @     0x559e6b980fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6609)[0m     @     0x559e6b8dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x559e6b966baf _PyEval_EvalCodeWithName
[2m[36m(pid=6609)[0m     @     0x559e6b967a20 method_vectorcall
[2m[36m(pid=6609)[0m     @     0x559e6b8dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x559e6b966baf _PyEval_EvalCodeWithName
[2m[36m(pid=6609)[0m     @     0x559e6b967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6609)[0m     @     0x559e6b8dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x559e6b966baf _PyEval_EvalCodeWithName
[2m[36m(pid=6609)[0m     @     0x559e6b967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6609)[0m     @     0x559e6b8dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x559e6b966baf _PyEval_EvalCodeWithName
[2m[36m(pid=6609)[0m     @     0x559e6b967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6609)[0m     @     0x559e6b8dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6609)[0m     @     0x559e6b966baf _PyEval_EvalCodeWithName
[2m[36m(pid=6609)[0m     @     0x559e6b967643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6609)[0m     @     0x559e6b8dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x7f3898e9b4f5 at::Tensor::copy_()
[2m[36m(pid=6646)[0m     @     0x7f389b36e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6630)[0m     @     0x56263184da20 method_vectorcall
[2m[36m(pid=6630)[0m     @     0x5626317c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x56263184cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6630)[0m     @     0x56263184d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6630)[0m     @     0x5626317c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x56263184cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6630)[0m     @     0x56263184d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6630)[0m     @     0x5626317c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x56263184cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6630)[0m     @     0x56263184d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6630)[0m     @     0x5626317c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6630)[0m     @     0x56263184cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6630)[0m     @     0x56263184d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6630)[0m     @     0x5626317c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x7fb04649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6670)[0m     @     0x556066d62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6670)[0m     @     0x556066cbdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x556066d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x556066d49a20 method_vectorcall
[2m[36m(pid=6670)[0m     @     0x556066cbdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x556066d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x556066d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6670)[0m     @     0x556066cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x556066d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x556066d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6670)[0m     @     0x556066cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x556066d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x556066d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6670)[0m     @     0x556066cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6670)[0m     @     0x556066d48baf _PyEval_EvalCodeWithName
[2m[36m(pid=6670)[0m     @     0x556066d49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6670)[0m     @     0x556066cbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6606)[0m     @     0x55de23218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6606)[0m     @     0x55de232a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6606)[0m     @     0x55de232a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6606)[0m     @     0x55de23218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x7f230879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6643)[0m     @     0x7f23062cb4f5 at::Tensor::copy_()
[2m[36m(pid=6643)[0m     @     0x7f230c37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6643)[0m     @     0x5568d65e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6643)[0m     @     0x5568d6540b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x5568d65cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x5568d65cca20 method_vectorcall
[2m[36m(pid=6643)[0m     @     0x5568d6540bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x5568d65cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x5568d65cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6643)[0m     @     0x5568d6541689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x5568d65cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x5568d65cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6643)[0m     @     0x5568d6541689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x5568d65cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x5568d65cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6643)[0m     @     0x5568d6541689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6641)[0m     @     0x5567d5642baf _PyEval_EvalCodeWithName
[2m[36m(pid=6641)[0m     @     0x5567d5643643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6641)[0m     @     0x5567d55b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6641)[0m     @     0x5567d5642baf _PyEval_EvalCodeWithName
[2m[36m(pid=6641)[0m     @     0x5567d5643643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6641)[0m     @     0x5567d55b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6641)[0m     @     0x5567d5642baf _PyEval_EvalCodeWithName
[2m[36m(pid=6641)[0m     @     0x5567d5643643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6641)[0m     @     0x5567d55b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e73e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e7473baf _PyEval_EvalCodeWithName
[2m[36m(pid=6634)[0m     @     0x55c7e7474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6634)[0m     @     0x55c7e73e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6634)[0m     @     0x55c7e7473baf _PyEval_EvalCodeWithName
[2m[36m(pid=6634)[0m     @     0x55c7e7474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6634)[0m     @     0x55c7e73e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x7eed8e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=6555)[0m     @     0x7eed9079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6555)[0m     @     0x7eed8e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=6555)[0m     @     0x7eed9437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6555)[0m     @     0x55d8bc130fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6555)[0m     @     0x55d8bc08bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x55d8bc116baf _PyEval_EvalCodeWithName
[2m[36m(pid=6555)[0m     @     0x55d8bc117a20 method_vectorcall
[2m[36m(pid=6555)[0m     @     0x55d8bc08bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x55d8bc116baf _PyEval_EvalCodeWithName
[2m[36m(pid=6555)[0m     @     0x55d8bc117643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6555)[0m     @     0x55d8bc08c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x55d8bc116baf _PyEval_EvalCodeWithName
[2m[36m(pid=6555)[0m     @     0x55d8bc117643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6555)[0m     @     0x55d8bc08c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x55d8bc116baf _PyEval_EvalCodeWithName
[2m[36m(pid=6555)[0m     @     0x55d8bc117643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6555)[0m     @     0x55d8bc08c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6555)[0m     @     0x55d8bc116baf _PyEval_EvalCodeWithName
[2m[36m(pid=6555)[0m     @     0x55d8bc117643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6555)[0m     @     0x55d8bc08c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x7ed14ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=6617)[0m     @     0x7ed152ef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6617)[0m     @     0x55674762afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6617)[0m     @     0x556747585b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x556747610baf _PyEval_EvalCodeWithName
[2m[36m(pid=6617)[0m     @     0x556747611a20 method_vectorcall
[2m[36m(pid=6617)[0m     @     0x556747585bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x556747610baf _PyEval_EvalCodeWithName
[2m[36m(pid=6617)[0m     @     0x556747611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6617)[0m     @     0x556747586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x556747610baf _PyEval_EvalCodeWithName
[2m[36m(pid=6617)[0m     @     0x556747611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6617)[0m     @     0x556747586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x556747610baf _PyEval_EvalCodeWithName
[2m[36m(pid=6617)[0m     @     0x556747611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6617)[0m     @     0x556747586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6617)[0m     @     0x556747610baf _PyEval_EvalCodeWithName
[2m[36m(pid=6617)[0m     @     0x556747611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6617)[0m     @     0x556747586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x7ee71864c4f5 at::Tensor::copy_()
[2m[36m(pid=6616)[0m     @     0x7ee71e6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6616)[0m     @     0x55f9c6e34fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6616)[0m     @     0x55f9c6d8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x55f9c6e1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6616)[0m     @     0x55f9c6e1ba20 method_vectorcall
[2m[36m(pid=6616)[0m     @     0x55f9c6d8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x55f9c6e1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6616)[0m     @     0x55f9c6e1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6616)[0m     @     0x55f9c6d90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x55f9c6e1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6616)[0m     @     0x55f9c6e1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6616)[0m     @     0x55f9c6d90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x55f9c6e1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6616)[0m     @     0x55f9c6e1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6616)[0m     @     0x55f9c6d90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6616)[0m     @     0x55f9c6e1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6616)[0m     @     0x55f9c6e1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6616)[0m     @     0x55f9c6d90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x7f5fe6ce54f5 at::Tensor::copy_()
[2m[36m(pid=6665)[0m     @     0x7f5fecd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6665)[0m     @     0x562504915fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6665)[0m     @     0x562504870b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x5625048fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6665)[0m     @     0x5625048fca20 method_vectorcall
[2m[36m(pid=6665)[0m     @     0x562504870bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x5625048fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6665)[0m     @     0x5625048fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6665)[0m     @     0x562504871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x5625048fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6665)[0m     @     0x5625048fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6665)[0m     @     0x562504871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x5625048fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6665)[0m     @     0x5625048fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6665)[0m     @     0x562504871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6665)[0m     @     0x5625048fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6665)[0m     @     0x5625048fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6665)[0m     @     0x562504871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x7f5a2a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6661)[0m     @     0x563eba784fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6661)[0m     @     0x563eba6dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x563eba76abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6661)[0m     @     0x563eba76ba20 method_vectorcall
[2m[36m(pid=6661)[0m     @     0x563eba6dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x563eba76abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6661)[0m     @     0x563eba76b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6661)[0m     @     0x563eba6e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x563eba76abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6661)[0m     @     0x563eba76b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6661)[0m     @     0x563eba6e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x563eba76abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6661)[0m     @     0x563eba76b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6661)[0m     @     0x563eba6e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6661)[0m     @     0x563eba76abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6661)[0m     @     0x563eba76b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6661)[0m     @     0x563eba6e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x7f3cec68e4f5 at::Tensor::copy_()
[2m[36m(pid=6577)[0m     @     0x7f3cf273979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6577)[0m     @     0x5589ba947fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6577)[0m     @     0x5589ba8a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x5589ba92dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6577)[0m     @     0x5589ba92ea20 method_vectorcall
[2m[36m(pid=6577)[0m     @     0x5589ba8a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x5589ba92dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6577)[0m     @     0x5589ba92e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6577)[0m     @     0x5589ba8a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x5589ba92dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6577)[0m     @     0x5589ba92e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6577)[0m     @     0x5589ba8a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x5589ba92dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6577)[0m     @     0x5589ba92e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6577)[0m     @     0x5589ba8a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6577)[0m     @     0x5589ba92dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6577)[0m     @     0x5589ba92e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6577)[0m     @     0x5589ba8a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x7fbd4521e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6559)[0m     @     0x556b79aeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6559)[0m     @     0x556b79a4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x556b79ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6559)[0m     @     0x556b79ad6a20 method_vectorcall
[2m[36m(pid=6559)[0m     @     0x556b79a4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x556b79ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6559)[0m     @     0x556b79ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6559)[0m     @     0x556b79a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x556b79ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6559)[0m     @     0x556b79ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6559)[0m     @     0x556b79a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x556b79ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6559)[0m     @     0x556b79ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6559)[0m     @     0x556b79a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6559)[0m     @     0x556b79ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6559)[0m     @     0x556b79ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6559)[0m     @     0x556b79a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x7fc6bd7338f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6613)[0m     @     0x7fc6bd733ad3 at::TensorIterator::for_each()
[2m[36m(pid=6613)[0m     @     0x7fc6bd733d91 at::TensorIterator::for_each()
[2m[36m(pid=6613)[0m     @     0x7fc6be016b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6631)[0m     @     0x7f33caf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6631)[0m     @     0x7f33ca63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6631)[0m     @     0x7f33ca6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6631)[0m     @     0x7f33ca641ad3 at::TensorIterator::for_each()
[2m[36m(pid=6678)[0m     @     0x7f51eaa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6678)[0m     @     0x7f51ea14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6678)[0m     @     0x7f51ea14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6678)[0m     @     0x7f51ea14fad3 at::TensorIterator::for_each()
[2m[36m(pid=6678)[0m     @     0x7f51ea14fd91 at::TensorIterator::for_each()
[2m[36m(pid=6572)[0m     @     0x7ee8ba6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6572)[0m     @     0x7ee8ba641ad3 at::TensorIterator::for_each()
[2m[36m(pid=6572)[0m     @     0x7ee8ba641d91 at::TensorIterator::for_each()
[2m[36m(pid=6572)[0m     @     0x7ee8baf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6572)[0m     @     0x7ee8baf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6553)[0m     @     0x7f9fa147d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6553)[0m     @     0x7f9fa14808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6553)[0m     @     0x7f9fa1480ad3 at::TensorIterator::for_each()
[2m[36m(pid=6551)[0m     @     0x7f8317a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=6551)[0m     @     0x7f8317a61d91 at::TensorIterator::for_each()
[2m[36m(pid=6551)[0m     @     0x7f8318344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6551)[0m     @     0x7f8318367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6551)[0m     @     0x7f8317809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6551)[0m     @     0x7f8317807388 at::native::copy_impl()
[2m[36m(pid=6563)[0m     @     0x7ee80a531d91 at::TensorIterator::for_each()
[2m[36m(pid=6563)[0m     @     0x7ee80ae14b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6563)[0m     @     0x7ee80ae37c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6563)[0m     @     0x7ee80a2d9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6563)[0m     @     0x7ee80a2d7388 at::native::copy_impl()
[2m[36m(pid=6563)[0m     @     0x7ee80a2d95a4 at::native::copy_()
[2m[36m(pid=6569)[0m     @     0x7f7fedcfb4f5 at::Tensor::copy_()
[2m[36m(pid=6569)[0m     @     0x7f7ff3da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6569)[0m     @     0x5592b324efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6569)[0m     @     0x5592b31a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6569)[0m     @     0x5592b3234baf _PyEval_EvalCodeWithName
[2m[36m(pid=6569)[0m     @     0x5592b3235a20 method_vectorcall
[2m[36m(pid=6569)[0m     @     0x5592b31a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6569)[0m     @     0x5592b3234baf _PyEval_EvalCodeWithName
[2m[36m(pid=6569)[0m     @     0x5592b3235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6569)[0m     @     0x5592b31aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6569)[0m     @     0x5592b3234baf _PyEval_EvalCodeWithName
[2m[36m(pid=6569)[0m     @     0x5592b3235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6569)[0m     @     0x5592b31aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6569)[0m     @     0x5592b3234baf _PyEval_EvalCodeWithName
[2m[36m(pid=6569)[0m     @     0x5592b3235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6569)[0m     @     0x5592b31aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6569)[0m     @     0x5592b3234baf _PyEval_EvalCodeWithName
[2m[36m(pid=6569)[0m     @     0x5592b3235643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6569)[0m     @     0x5592b31aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x7fb40f9cf4f5 at::Tensor::copy_()
[2m[36m(pid=6690)[0m     @     0x7fb411ea28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6690)[0m     @     0x7fb40f9cf4f5 at::Tensor::copy_()
[2m[36m(pid=6690)[0m     @     0x7fb415a7a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6690)[0m     @     0x558549d66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6690)[0m     @     0x558549cc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x558549d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6690)[0m     @     0x558549d4da20 method_vectorcall
[2m[36m(pid=6690)[0m     @     0x558549cc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x558549d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6690)[0m     @     0x558549d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6690)[0m     @     0x558549cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x558549d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6690)[0m     @     0x558549d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6690)[0m     @     0x558549cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x558549d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6690)[0m     @     0x558549d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6690)[0m     @     0x558549cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6690)[0m     @     0x558549d4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6690)[0m     @     0x558549d4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6690)[0m     @     0x558549cc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x7ed3347034f5 at::Tensor::copy_()
[2m[36m(pid=6554)[0m     @     0x7ed33a7ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6554)[0m     @     0x562a8994dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6554)[0m     @     0x562a898a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x562a89933baf _PyEval_EvalCodeWithName
[2m[36m(pid=6554)[0m     @     0x562a89934a20 method_vectorcall
[2m[36m(pid=6554)[0m     @     0x562a898a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x562a89933baf _PyEval_EvalCodeWithName
[2m[36m(pid=6554)[0m     @     0x562a89934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6554)[0m     @     0x562a898a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x562a89933baf _PyEval_EvalCodeWithName
[2m[36m(pid=6554)[0m     @     0x562a89934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6554)[0m     @     0x562a898a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x562a89933baf _PyEval_EvalCodeWithName
[2m[36m(pid=6554)[0m     @     0x562a89934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6554)[0m     @     0x562a898a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6554)[0m     @     0x562a89933baf _PyEval_EvalCodeWithName
[2m[36m(pid=6554)[0m     @     0x562a89934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6554)[0m     @     0x562a898a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x7fb1702ff4f5 at::Tensor::copy_()
[2m[36m(pid=6549)[0m     @     0x7fb1727d28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6549)[0m     @     0x7fb1702ff4f5 at::Tensor::copy_()
[2m[36m(pid=6549)[0m     @     0x7fb1761a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6549)[0m     @     0x561c6fdc8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6549)[0m     @     0x561c6fd23b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x561c6fdaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6549)[0m     @     0x561c6fdafa20 method_vectorcall
[2m[36m(pid=6549)[0m     @     0x561c6fd23bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x561c6fdaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6549)[0m     @     0x561c6fdaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6549)[0m     @     0x561c6fd24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x561c6fdaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6549)[0m     @     0x561c6fdaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6549)[0m     @     0x561c6fd24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x561c6fdaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6549)[0m     @     0x561c6fdaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6549)[0m     @     0x561c6fd24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6549)[0m     @     0x561c6fdaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6549)[0m     @     0x561c6fdaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6549)[0m     @     0x561c6fd24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x7ee14bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=6658)[0m     @     0x7ee151c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6658)[0m     @     0x55556ca25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6658)[0m     @     0x55556c980b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x55556ca0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6658)[0m     @     0x55556ca0ca20 method_vectorcall
[2m[36m(pid=6658)[0m     @     0x55556c980bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x55556ca0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6658)[0m     @     0x55556ca0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6658)[0m     @     0x55556c981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x55556ca0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6658)[0m     @     0x55556ca0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6658)[0m     @     0x55556c981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x55556ca0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6658)[0m     @     0x55556ca0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6658)[0m     @     0x55556c981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6658)[0m     @     0x55556ca0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6658)[0m     @     0x55556ca0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6658)[0m     @     0x55556c981689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x7ee2393ba4f5 at::Tensor::copy_()
[2m[36m(pid=6636)[0m     @     0x7ee23f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6636)[0m     @     0x5622a8db3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6636)[0m     @     0x5622a8d0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x5622a8d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=6636)[0m     @     0x5622a8d9aa20 method_vectorcall
[2m[36m(pid=6636)[0m     @     0x5622a8d0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x5622a8d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=6636)[0m     @     0x5622a8d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6636)[0m     @     0x5622a8d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x5622a8d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=6636)[0m     @     0x5622a8d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6636)[0m     @     0x5622a8d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x5622a8d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=6636)[0m     @     0x5622a8d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6636)[0m     @     0x5622a8d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6636)[0m     @     0x5622a8d99baf _PyEval_EvalCodeWithName
[2m[36m(pid=6636)[0m     @     0x5622a8d9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6636)[0m     @     0x5622a8d0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x7f67d99e54f5 at::Tensor::copy_()
[2m[36m(pid=6611)[0m     @     0x7f67dfa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6611)[0m     @     0x5622c58fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6611)[0m     @     0x5622c5857b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x5622c58e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6611)[0m     @     0x5622c58e3a20 method_vectorcall
[2m[36m(pid=6611)[0m     @     0x5622c5857bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x5622c58e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6611)[0m     @     0x5622c58e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6611)[0m     @     0x5622c5858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x5622c58e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6611)[0m     @     0x5622c58e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6611)[0m     @     0x5622c5858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x5622c58e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6611)[0m     @     0x5622c58e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6611)[0m     @     0x5622c5858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6611)[0m     @     0x5622c58e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6611)[0m     @     0x5622c58e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6611)[0m     @     0x5622c5858689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x7fc52bfa44f5 at::Tensor::copy_()
[2m[36m(pid=6562)[0m     @     0x7fc52e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6562)[0m     @     0x7fc52bfa44f5 at::Tensor::copy_()
[2m[36m(pid=6562)[0m     @     0x7fc53204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6562)[0m     @     0x56060777bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6562)[0m     @     0x5606076d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x560607761baf _PyEval_EvalCodeWithName
[2m[36m(pid=6562)[0m     @     0x560607762a20 method_vectorcall
[2m[36m(pid=6562)[0m     @     0x5606076d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x560607761baf _PyEval_EvalCodeWithName
[2m[36m(pid=6562)[0m     @     0x560607762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6562)[0m     @     0x5606076d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x560607761baf _PyEval_EvalCodeWithName
[2m[36m(pid=6562)[0m     @     0x560607762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6562)[0m     @     0x5606076d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x560607761baf _PyEval_EvalCodeWithName
[2m[36m(pid=6562)[0m     @     0x560607762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6562)[0m     @     0x5606076d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6562)[0m     @     0x560607761baf _PyEval_EvalCodeWithName
[2m[36m(pid=6562)[0m     @     0x560607762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6562)[0m     @     0x5606076d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x7f7ec498e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6561)[0m     @     0x7f7ec24bb4f5 at::Tensor::copy_()
[2m[36m(pid=6561)[0m     @     0x7f7ec856679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6561)[0m     @     0x564959410fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6561)[0m     @     0x56495936bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x5649593f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6561)[0m     @     0x5649593f7a20 method_vectorcall
[2m[36m(pid=6561)[0m     @     0x56495936bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x5649593f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6561)[0m     @     0x5649593f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6561)[0m     @     0x56495936c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x5649593f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6561)[0m     @     0x5649593f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6561)[0m     @     0x56495936c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x5649593f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6561)[0m     @     0x5649593f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6561)[0m     @     0x56495936c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6561)[0m     @     0x5649593f6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6561)[0m     @     0x5649593f7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6561)[0m     @     0x56495936c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x7f3943c8e4f5 at::Tensor::copy_()
[2m[36m(pid=6558)[0m     @     0x7f39461618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6558)[0m     @     0x7f3943c8e4f5 at::Tensor::copy_()
[2m[36m(pid=6558)[0m     @     0x7f3949d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6558)[0m     @     0x558dc204ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6558)[0m     @     0x558dc1faab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x558dc2035baf _PyEval_EvalCodeWithName
[2m[36m(pid=6558)[0m     @     0x558dc2036a20 method_vectorcall
[2m[36m(pid=6558)[0m     @     0x558dc1faabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x558dc2035baf _PyEval_EvalCodeWithName
[2m[36m(pid=6558)[0m     @     0x558dc2036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6558)[0m     @     0x558dc1fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x558dc2035baf _PyEval_EvalCodeWithName
[2m[36m(pid=6558)[0m     @     0x558dc2036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6558)[0m     @     0x558dc1fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x558dc2035baf _PyEval_EvalCodeWithName
[2m[36m(pid=6558)[0m     @     0x558dc2036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6558)[0m     @     0x558dc1fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6558)[0m     @     0x558dc2035baf _PyEval_EvalCodeWithName
[2m[36m(pid=6558)[0m     @     0x558dc2036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6558)[0m     @     0x558dc1fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6556)[0m     @     0x56124e669baf _PyEval_EvalCodeWithName
[2m[36m(pid=6556)[0m     @     0x56124e66a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6556)[0m     @     0x56124e5df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6556)[0m     @     0x56124e669baf _PyEval_EvalCodeWithName
[2m[36m(pid=6556)[0m     @     0x56124e66a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6556)[0m     @     0x56124e5df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6556)[0m     @     0x56124e669baf _PyEval_EvalCodeWithName
[2m[36m(pid=6556)[0m     @     0x56124e66a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6556)[0m     @     0x56124e5df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6556)[0m     @     0x56124e669baf _PyEval_EvalCodeWithName
[2m[36m(pid=6556)[0m     @     0x56124e66a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6556)[0m     @     0x56124e5df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x7f4848f204f5 at::Tensor::copy_()
[2m[36m(pid=6652)[0m     @     0x7f484efcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6652)[0m     @     0x55c7c12c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6652)[0m     @     0x55c7c1221b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x55c7c12acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6652)[0m     @     0x55c7c12ada20 method_vectorcall
[2m[36m(pid=6652)[0m     @     0x55c7c1221bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x55c7c12acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6652)[0m     @     0x55c7c12ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6652)[0m     @     0x55c7c1222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x55c7c12acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6652)[0m     @     0x55c7c12ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6652)[0m     @     0x55c7c1222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x55c7c12acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6652)[0m     @     0x55c7c12ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6652)[0m     @     0x55c7c1222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6652)[0m     @     0x55c7c12acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6652)[0m     @     0x55c7c12ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6652)[0m     @     0x55c7c1222689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x7fb0f47034f5 at::Tensor::copy_()
[2m[36m(pid=6571)[0m     @     0x7fb0f6bd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6571)[0m     @     0x7fb0f47034f5 at::Tensor::copy_()
[2m[36m(pid=6571)[0m     @     0x7fb0fa7ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6571)[0m     @     0x56418951bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6571)[0m     @     0x564189476b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x564189501baf _PyEval_EvalCodeWithName
[2m[36m(pid=6571)[0m     @     0x564189502a20 method_vectorcall
[2m[36m(pid=6571)[0m     @     0x564189476bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x564189501baf _PyEval_EvalCodeWithName
[2m[36m(pid=6571)[0m     @     0x564189502643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6571)[0m     @     0x564189477689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x564189501baf _PyEval_EvalCodeWithName
[2m[36m(pid=6571)[0m     @     0x564189502643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6571)[0m     @     0x564189477689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x564189501baf _PyEval_EvalCodeWithName
[2m[36m(pid=6571)[0m     @     0x564189502643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6571)[0m     @     0x564189477689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6571)[0m     @     0x564189501baf _PyEval_EvalCodeWithName
[2m[36m(pid=6571)[0m     @     0x564189502643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6571)[0m     @     0x564189477689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x7fc44456dd91 at::TensorIterator::for_each()
[2m[36m(pid=6567)[0m     @     0x7fc444e50b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6567)[0m     @     0x7fc444e73c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6567)[0m     @     0x7fc444315a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6567)[0m     @     0x7fc444313388 at::native::copy_impl()
[2m[36m(pid=6567)[0m     @     0x7fc4443155a4 at::native::copy_()
[2m[36m(pid=6567)[0m     @     0x7fc444a004f5 at::Tensor::copy_()
[2m[36m(pid=6655)[0m     @     0x7f785fe9f4f5 at::Tensor::copy_()
[2m[36m(pid=6655)[0m     @     0x7f7865f4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6655)[0m     @     0x558f399cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6655)[0m     @     0x558f3992ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6655)[0m     @     0x558f399b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6655)[0m     @     0x558f399b6a20 method_vectorcall
[2m[36m(pid=6655)[0m     @     0x558f3992abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6655)[0m     @     0x558f399b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6655)[0m     @     0x558f399b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6655)[0m     @     0x558f3992b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6655)[0m     @     0x558f399b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6655)[0m     @     0x558f399b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6655)[0m     @     0x558f3992b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6655)[0m     @     0x558f399b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6655)[0m     @     0x558f399b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6655)[0m     @     0x558f3992b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6655)[0m     @     0x558f399b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6655)[0m     @     0x558f399b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6655)[0m     @     0x558f3992b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x7f9d87ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=6565)[0m     @     0x7f9d88785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6565)[0m     @     0x7f9d887a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6565)[0m     @     0x7f9d87c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6565)[0m     @     0x7f9d87c48388 at::native::copy_impl()
[2m[36m(pid=6565)[0m     @     0x7f9d87c4a5a4 at::native::copy_()
[2m[36m(pid=6639)[0m     @     0x7f1c81cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6639)[0m     @     0x7f1c81cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=6639)[0m     @     0x7f1c81cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=6639)[0m     @     0x7f1c825b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6639)[0m     @     0x7f1c825d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6626)[0m     @     0x7f88d82f28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6626)[0m     @     0x7f88d5e1f4f5 at::Tensor::copy_()
[2m[36m(pid=6626)[0m     @     0x7f88dbeca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6626)[0m     @     0x55e92978bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6626)[0m     @     0x55e9296e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6626)[0m     @     0x55e929771baf _PyEval_EvalCodeWithName
[2m[36m(pid=6626)[0m     @     0x55e929772a20 method_vectorcall
[2m[36m(pid=6626)[0m     @     0x55e9296e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6626)[0m     @     0x55e929771baf _PyEval_EvalCodeWithName
[2m[36m(pid=6626)[0m     @     0x55e929772643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6626)[0m     @     0x55e9296e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6626)[0m     @     0x55e929771baf _PyEval_EvalCodeWithName
[2m[36m(pid=6626)[0m     @     0x55e929772643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6626)[0m     @     0x55e9296e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6626)[0m     @     0x55e929771baf _PyEval_EvalCodeWithName
[2m[36m(pid=6626)[0m     @     0x55e929772643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6626)[0m     @     0x55e9296e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6626)[0m     @     0x55e929771baf _PyEval_EvalCodeWithName
[2m[36m(pid=6626)[0m     @     0x55e929772643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6626)[0m     @     0x55e9296e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x7f0fe82278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6581)[0m     @     0x7f0fe5d544f5 at::Tensor::copy_()
[2m[36m(pid=6581)[0m     @     0x7f0febdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6581)[0m     @     0x55733d654fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6581)[0m     @     0x55733d5afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x55733d63abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6581)[0m     @     0x55733d63ba20 method_vectorcall
[2m[36m(pid=6581)[0m     @     0x55733d5afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x55733d63abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6581)[0m     @     0x55733d63b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6581)[0m     @     0x55733d5b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x55733d63abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6581)[0m     @     0x55733d63b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6581)[0m     @     0x55733d5b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x55733d63abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6581)[0m     @     0x55733d63b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6581)[0m     @     0x55733d5b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6581)[0m     @     0x55733d63abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6581)[0m     @     0x55733d63b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6581)[0m     @     0x55733d5b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x7ee014c764f5 at::Tensor::copy_()
[2m[36m(pid=6668)[0m     @     0x7ee01ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6668)[0m     @     0x55db5f5eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6668)[0m     @     0x55db5f549b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x55db5f5d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6668)[0m     @     0x55db5f5d5a20 method_vectorcall
[2m[36m(pid=6668)[0m     @     0x55db5f549bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x55db5f5d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6668)[0m     @     0x55db5f5d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6668)[0m     @     0x55db5f54a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x55db5f5d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6668)[0m     @     0x55db5f5d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6668)[0m     @     0x55db5f54a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x55db5f5d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6668)[0m     @     0x55db5f5d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6668)[0m     @     0x55db5f54a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6668)[0m     @     0x55db5f5d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6668)[0m     @     0x55db5f5d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6668)[0m     @     0x55db5f54a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x7f92acc11d91 at::TensorIterator::for_each()
[2m[36m(pid=6585)[0m     @     0x7f92ad4f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6585)[0m     @     0x7f92ad517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6585)[0m     @     0x7f92ac9b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6585)[0m     @     0x7f92ac9b7388 at::native::copy_impl()
[2m[36m(pid=6585)[0m     @     0x7f92ac9b95a4 at::native::copy_()
[2m[36m(pid=6610)[0m     @     0x7f6e4f6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6610)[0m     @     0x7f6e4edd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6610)[0m     @     0x7f6e4eddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6610)[0m     @     0x7f6e4eddcad3 at::TensorIterator::for_each()
[2m[36m(pid=6607)[0m     @     0x7efd17d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=6607)[0m     @     0x7efd1861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6607)[0m     @     0x7efd18642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6607)[0m     @     0x7efd17ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6607)[0m     @     0x7efd17ae2388 at::native::copy_impl()
[2m[36m(pid=6566)[0m     @     0x7f7727c35d91 at::TensorIterator::for_each()
[2m[36m(pid=6566)[0m     @     0x7f7728518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6566)[0m     @     0x7f772853bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6566)[0m     @     0x7f77279dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6566)[0m     @     0x7f77279db388 at::native::copy_impl()
[2m[36m(pid=6583)[0m     @     0x7fa02ce88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6583)[0m     @     0x7fa02ceabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6583)[0m     @     0x7fa02c34da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6583)[0m     @     0x7fa02c34b388 at::native::copy_impl()
[2m[36m(pid=6583)[0m     @     0x7fa02c34d5a4 at::native::copy_()
[2m[36m(pid=6666)[0m     @     0x7f3d126018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6666)[0m     @     0x7f3d12601ad3 at::TensorIterator::for_each()
[2m[36m(pid=6666)[0m     @     0x7f3d12601d91 at::TensorIterator::for_each()
[2m[36m(pid=6666)[0m     @     0x7f3d12ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6666)[0m     @     0x7f3d12f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6637)[0m     @     0x7f91cda79d91 at::TensorIterator::for_each()
[2m[36m(pid=6637)[0m     @     0x7f91ce35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6637)[0m     @     0x7f91ce37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6637)[0m     @     0x7f91cd821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6637)[0m     @     0x7f91cd81f388 at::native::copy_impl()
[2m[36m(pid=6663)[0m     @     0x7f49ca9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6663)[0m     @     0x7f49ca957ad3 at::TensorIterator::for_each()
[2m[36m(pid=6654)[0m     @     0x7f4872343ad3 at::TensorIterator::for_each()
[2m[36m(pid=6654)[0m     @     0x7f4872343d91 at::TensorIterator::for_each()
[2m[36m(pid=6654)[0m     @     0x7f4872c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6654)[0m     @     0x7f4872c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6654)[0m     @     0x7f48720eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6650)[0m     @     0x7faf790ebad3 at::TensorIterator::for_each()
[2m[36m(pid=6650)[0m     @     0x7faf790ebd91 at::TensorIterator::for_each()
[2m[36m(pid=6650)[0m     @     0x7faf799ceb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6650)[0m     @     0x7faf799f1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6650)[0m     @     0x7faf78e93a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6629)[0m     @     0x7edd6d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6629)[0m     @     0x7edd6d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=6629)[0m     @     0x7edd6d552d91 at::TensorIterator::for_each()
[2m[36m(pid=6642)[0m     @     0x7f76602ffd91 at::TensorIterator::for_each()
[2m[36m(pid=6642)[0m     @     0x7f7660be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6642)[0m     @     0x7f7660c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6642)[0m     @     0x7f76600a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6642)[0m     @     0x7f76600a5388 at::native::copy_impl()
[2m[36m(pid=6642)[0m     @     0x7f76600a75a4 at::native::copy_()
[2m[36m(pid=6642)[0m     @     0x7f76607924f5 at::Tensor::copy_()
[2m[36m(pid=6642)[0m     @     0x7f7662c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6580)[0m     @     0x7f967dca5d91 at::TensorIterator::for_each()
[2m[36m(pid=6580)[0m     @     0x7f967e588b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6580)[0m     @     0x7f967e5abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6580)[0m     @     0x7f967da4da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6580)[0m     @     0x7f967da4b388 at::native::copy_impl()
[2m[36m(pid=6580)[0m     @     0x7f967da4d5a4 at::native::copy_()
[2m[36m(pid=6580)[0m     @     0x7f967e1384f5 at::Tensor::copy_()
[2m[36m(pid=6573)[0m     @     0x7fb26a4edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6573)[0m     @     0x7fb26998fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6573)[0m     @     0x7fb26998d388 at::native::copy_impl()
[2m[36m(pid=6573)[0m     @     0x7fb26998f5a4 at::native::copy_()
[2m[36m(pid=6573)[0m     @     0x7fb26a07a4f5 at::Tensor::copy_()
[2m[36m(pid=6573)[0m     @     0x7fb26c54d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6624)[0m     @     0x7f6fe6039b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6624)[0m     @     0x7f6fe605cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6624)[0m     @     0x7f6fe54fea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6624)[0m     @     0x7f6fe54fc388 at::native::copy_impl()
[2m[36m(pid=6624)[0m     @     0x7f6fe54fe5a4 at::native::copy_()
[2m[36m(pid=6624)[0m     @     0x7f6fe5be94f5 at::Tensor::copy_()
[2m[36m(pid=6624)[0m     @     0x7f6fe80bc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6638)[0m     @     0x7f1d7da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6638)[0m     @     0x7f1d7da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=6623)[0m     @     0x7f9fff23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6623)[0m     @     0x7f9fff25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6623)[0m     @     0x7f9ffe6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6623)[0m     @     0x7f9ffe6fd388 at::native::copy_impl()
[2m[36m(pid=6623)[0m     @     0x7f9ffe6ff5a4 at::native::copy_()
[2m[36m(pid=6623)[0m     @     0x7f9ffedea4f5 at::Tensor::copy_()
[2m[36m(pid=6564)[0m     @     0x7f1f905014f5 at::Tensor::copy_()
[2m[36m(pid=6564)[0m     @     0x7f1f961a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6564)[0m     @     0x556e081d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6564)[0m     @     0x556e0812eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6564)[0m     @     0x556e081b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6564)[0m     @     0x556e081baa20 method_vectorcall
[2m[36m(pid=6564)[0m     @     0x556e0812ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6564)[0m     @     0x556e081b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6564)[0m     @     0x556e081ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6564)[0m     @     0x556e0812f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6564)[0m     @     0x556e081b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6564)[0m     @     0x556e081ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6564)[0m     @     0x556e0812f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6564)[0m     @     0x556e081b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6564)[0m     @     0x556e081ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6564)[0m     @     0x556e0812f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6564)[0m     @     0x556e081b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6564)[0m     @     0x556e081ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6564)[0m     @     0x556e0812f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x7fbba6957d91 at::TensorIterator::for_each()
[2m[36m(pid=6605)[0m     @     0x7fbba723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6605)[0m     @     0x7fbba725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6605)[0m     @     0x7fbba66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6605)[0m     @     0x7fbba66fd388 at::native::copy_impl()
[2m[36m(pid=6605)[0m     @     0x7fbba66ff5a4 at::native::copy_()
[2m[36m(pid=6605)[0m     @     0x7fbba6dea4f5 at::Tensor::copy_()
[2m[36m(pid=6605)[0m     @     0x7fbba92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6557)[0m     @     0x7f5509552d91 at::TensorIterator::for_each()
[2m[36m(pid=6557)[0m     @     0x7f5509e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6557)[0m     @     0x7f5509e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6557)[0m     @     0x7f55092faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6557)[0m     @     0x7f55092f8388 at::native::copy_impl()
[2m[36m(pid=6557)[0m     @     0x7f55092fa5a4 at::native::copy_()
[2m[36m(pid=6578)[0m     @     0x7f5c37136d91 at::TensorIterator::for_each()
[2m[36m(pid=6578)[0m     @     0x7f5c37a19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6578)[0m     @     0x7f5c37a3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6578)[0m     @     0x7f5c36edea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6578)[0m     @     0x7f5c36edc388 at::native::copy_impl()
[2m[36m(pid=6578)[0m     @     0x7f5c36ede5a4 at::native::copy_()
[2m[36m(pid=6578)[0m     @     0x7f5c375c94f5 at::Tensor::copy_()
[2m[36m(pid=6635)[0m     @     0x7f246d512d91 at::TensorIterator::for_each()
[2m[36m(pid=6635)[0m     @     0x7f246ddf5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6635)[0m     @     0x7f246de18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6635)[0m     @     0x7f246d2baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6635)[0m     @     0x7f246d2b8388 at::native::copy_impl()
[2m[36m(pid=6635)[0m     @     0x7f246d2ba5a4 at::native::copy_()
[2m[36m(pid=6582)[0m     @     0x7f9f4452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6582)[0m     @     0x7f9f439cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6582)[0m     @     0x7f9f439ca388 at::native::copy_impl()
[2m[36m(pid=6582)[0m     @     0x7f9f439cc5a4 at::native::copy_()
[2m[36m(pid=6582)[0m     @     0x7f9f440b74f5 at::Tensor::copy_()
[2m[36m(pid=6582)[0m     @     0x7f9f4658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6568)[0m     @     0x7f7e3f630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6568)[0m     @     0x7f7e3f653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6568)[0m     @     0x7f7e3eaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6568)[0m     @     0x7f7e3eaf3388 at::native::copy_impl()
[2m[36m(pid=6568)[0m     @     0x7f7e3eaf55a4 at::native::copy_()
[2m[36m(pid=6568)[0m     @     0x7f7e3f1e04f5 at::Tensor::copy_()
[2m[36m(pid=6568)[0m     @     0x7f7e416b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6550)[0m     @     0x7eded94d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6550)[0m     @     0x7eded8974a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6550)[0m     @     0x7eded8972388 at::native::copy_impl()
[2m[36m(pid=6550)[0m     @     0x7eded89745a4 at::native::copy_()
[2m[36m(pid=6550)[0m     @     0x7eded905f4f5 at::Tensor::copy_()
[2m[36m(pid=6550)[0m     @     0x7ededb5328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6653)[0m     @     0x7f375f6b64f5 at::Tensor::copy_()
[2m[36m(pid=6653)[0m     @     0x7f376576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6653)[0m     @     0x55a34d7affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6653)[0m     @     0x55a34d70ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6653)[0m     @     0x55a34d795baf _PyEval_EvalCodeWithName
[2m[36m(pid=6653)[0m     @     0x55a34d796a20 method_vectorcall
[2m[36m(pid=6653)[0m     @     0x55a34d70abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6653)[0m     @     0x55a34d795baf _PyEval_EvalCodeWithName
[2m[36m(pid=6653)[0m     @     0x55a34d796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6653)[0m     @     0x55a34d70b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6653)[0m     @     0x55a34d795baf _PyEval_EvalCodeWithName
[2m[36m(pid=6653)[0m     @     0x55a34d796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6653)[0m     @     0x55a34d70b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6653)[0m     @     0x55a34d795baf _PyEval_EvalCodeWithName
[2m[36m(pid=6653)[0m     @     0x55a34d796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6653)[0m     @     0x55a34d70b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6653)[0m     @     0x55a34d795baf _PyEval_EvalCodeWithName
[2m[36m(pid=6653)[0m     @     0x55a34d796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6653)[0m     @     0x55a34d70b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x7f875ce46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6632)[0m     @     0x7f875c2e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6632)[0m     @     0x7f875c2e6388 at::native::copy_impl()
[2m[36m(pid=6632)[0m     @     0x7f875c2e85a4 at::native::copy_()
[2m[36m(pid=6632)[0m     @     0x7f875c9d34f5 at::Tensor::copy_()
[2m[36m(pid=6632)[0m     @     0x7f875eea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6625)[0m     @     0x7f365c73d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6625)[0m     @     0x5596e3ed9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6625)[0m     @     0x5596e3e34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6625)[0m     @     0x5596e3ebfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6625)[0m     @     0x5596e3ec0a20 method_vectorcall
[2m[36m(pid=6625)[0m     @     0x5596e3e34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6625)[0m     @     0x5596e3ebfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6625)[0m     @     0x5596e3ec0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6625)[0m     @     0x5596e3e35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6625)[0m     @     0x5596e3ebfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6625)[0m     @     0x5596e3ec0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6625)[0m     @     0x5596e3e35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6625)[0m     @     0x5596e3ebfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6625)[0m     @     0x5596e3ec0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6625)[0m     @     0x5596e3e35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6625)[0m     @     0x5596e3ebfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6625)[0m     @     0x5596e3ec0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6625)[0m     @     0x5596e3e35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x7f3898e9b4f5 at::Tensor::copy_()
[2m[36m(pid=6646)[0m     @     0x7f389ef4679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6646)[0m     @     0x55963d7dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6646)[0m     @     0x55963d735b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x55963d7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6646)[0m     @     0x55963d7c1a20 method_vectorcall
[2m[36m(pid=6646)[0m     @     0x55963d735bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x55963d7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6646)[0m     @     0x55963d7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6646)[0m     @     0x55963d736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x55963d7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6646)[0m     @     0x55963d7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6646)[0m     @     0x55963d736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x55963d7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6646)[0m     @     0x55963d7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6646)[0m     @     0x55963d736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6646)[0m     @     0x55963d7c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6646)[0m     @     0x55963d7c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6646)[0m     @     0x55963d736689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6643)[0m     @     0x5568d65cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6643)[0m     @     0x5568d65cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6643)[0m     @     0x5568d6541689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x7fc6be039c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6613)[0m     @     0x7fc6bd4dba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6613)[0m     @     0x7fc6bd4d9388 at::native::copy_impl()
[2m[36m(pid=6613)[0m     @     0x7fc6bd4db5a4 at::native::copy_()
[2m[36m(pid=6631)[0m     @     0x7f33ca641d91 at::TensorIterator::for_each()
[2m[36m(pid=6631)[0m     @     0x7f33caf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6631)[0m     @     0x7f33caf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6631)[0m     @     0x7f33ca3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6631)[0m     @     0x7f33ca3e7388 at::native::copy_impl()
[2m[36m(pid=6678)[0m     @     0x7f51eaa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6678)[0m     @     0x7f51eaa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6678)[0m     @     0x7f51e9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6678)[0m     @     0x7f51e9ef5388 at::native::copy_impl()
[2m[36m(pid=6572)[0m     @     0x7ee8ba3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6572)[0m     @     0x7ee8ba3e7388 at::native::copy_impl()
[2m[36m(pid=6572)[0m     @     0x7ee8ba3e95a4 at::native::copy_()
[2m[36m(pid=6553)[0m     @     0x7f9fa1480d91 at::TensorIterator::for_each()
[2m[36m(pid=6553)[0m     @     0x7f9fa1d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6553)[0m     @     0x7f9fa1d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6553)[0m     @     0x7f9fa1228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6551)[0m     @     0x7f83178095a4 at::native::copy_()
[2m[36m(pid=6551)[0m     @     0x7f8317ef44f5 at::Tensor::copy_()
[2m[36m(pid=6551)[0m     @     0x7f831a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6563)[0m     @     0x7ee80a9c44f5 at::Tensor::copy_()
[2m[36m(pid=6563)[0m     @     0x7ee80ce978de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6563)[0m     @     0x7ee80a9c44f5 at::Tensor::copy_()
[2m[36m(pid=6563)[0m     @     0x7ee810a6f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6563)[0m     @     0x561357921fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6563)[0m     @     0x56135787cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x561357907baf _PyEval_EvalCodeWithName
[2m[36m(pid=6563)[0m     @     0x561357908a20 method_vectorcall
[2m[36m(pid=6563)[0m     @     0x56135787cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x561357907baf _PyEval_EvalCodeWithName
[2m[36m(pid=6563)[0m     @     0x561357908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6567)[0m     @     0x7fc446ed38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6567)[0m     @     0x7fc444a004f5 at::Tensor::copy_()
[2m[36m(pid=6567)[0m     @     0x7fc44aaab79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6567)[0m     @     0x55c8aeba9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6567)[0m     @     0x55c8aeb04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x55c8aeb8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6567)[0m     @     0x55c8aeb90a20 method_vectorcall
[2m[36m(pid=6567)[0m     @     0x55c8aeb04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x55c8aeb8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6567)[0m     @     0x55c8aeb90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6567)[0m     @     0x55c8aeb05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x55c8aeb8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6567)[0m     @     0x55c8aeb90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6567)[0m     @     0x55c8aeb05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x55c8aeb8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6567)[0m     @     0x55c8aeb90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6567)[0m     @     0x55c8aeb05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6567)[0m     @     0x55c8aeb8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6567)[0m     @     0x55c8aeb90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6567)[0m     @     0x55c8aeb05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x7f9d883354f5 at::Tensor::copy_()
[2m[36m(pid=6565)[0m     @     0x7f9d8a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6565)[0m     @     0x7f9d883354f5 at::Tensor::copy_()
[2m[36m(pid=6639)[0m     @     0x7f1c81a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6639)[0m     @     0x7f1c81a78388 at::native::copy_impl()
[2m[36m(pid=6639)[0m     @     0x7f1c81a7a5a4 at::native::copy_()
[2m[36m(pid=6585)[0m     @     0x7f92ad0a44f5 at::Tensor::copy_()
[2m[36m(pid=6585)[0m     @     0x7f92af5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6585)[0m     @     0x7f92ad0a44f5 at::Tensor::copy_()
[2m[36m(pid=6585)[0m     @     0x7f92b314f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6585)[0m     @     0x560bec424fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6585)[0m     @     0x560bec37fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x560bec40abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6585)[0m     @     0x560bec40ba20 method_vectorcall
[2m[36m(pid=6585)[0m     @     0x560bec37fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x560bec40abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6585)[0m     @     0x560bec40b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6585)[0m     @     0x560bec380689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x560bec40abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6585)[0m     @     0x560bec40b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6585)[0m     @     0x560bec380689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x560bec40abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6585)[0m     @     0x560bec40b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6585)[0m     @     0x560bec380689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6585)[0m     @     0x560bec40abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6585)[0m     @     0x560bec40b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6585)[0m     @     0x560bec380689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x7f6e4eddcd91 at::TensorIterator::for_each()
[2m[36m(pid=6610)[0m     @     0x7f6e4f6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6610)[0m     @     0x7f6e4f6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6610)[0m     @     0x7f6e4eb84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6610)[0m     @     0x7f6e4eb82388 at::native::copy_impl()
[2m[36m(pid=6607)[0m     @     0x7efd17ae45a4 at::native::copy_()
[2m[36m(pid=6607)[0m     @     0x7efd181cf4f5 at::Tensor::copy_()
[2m[36m(pid=6607)[0m     @     0x7efd1a6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6607)[0m     @     0x7efd181cf4f5 at::Tensor::copy_()
[2m[36m(pid=6607)[0m     @     0x7efd1e27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6607)[0m     @     0x55a2deb89fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6607)[0m     @     0x55a2deae4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x7f77279dd5a4 at::native::copy_()
[2m[36m(pid=6566)[0m     @     0x7f77280c84f5 at::Tensor::copy_()
[2m[36m(pid=6566)[0m     @     0x7f772a59b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6566)[0m     @     0x7f77280c84f5 at::Tensor::copy_()
[2m[36m(pid=6566)[0m     @     0x7f772e17379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6566)[0m     @     0x557c1a3d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6566)[0m     @     0x557c1a32db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6566)[0m     @     0x557c1a3b9a20 method_vectorcall
[2m[36m(pid=6566)[0m     @     0x557c1a32dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6566)[0m     @     0x557c1a3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6566)[0m     @     0x557c1a32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6566)[0m     @     0x557c1a3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6566)[0m     @     0x557c1a32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6566)[0m     @     0x557c1a3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6583)[0m     @     0x7fa02ca384f5 at::Tensor::copy_()
[2m[36m(pid=6583)[0m     @     0x7fa02ef0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6583)[0m     @     0x7fa02ca384f5 at::Tensor::copy_()
[2m[36m(pid=6583)[0m     @     0x7fa032ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6583)[0m     @     0x55c19a44cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6583)[0m     @     0x55c19a3a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6583)[0m     @     0x55c19a432baf _PyEval_EvalCodeWithName
[2m[36m(pid=6583)[0m     @     0x55c19a433a20 method_vectorcall
[2m[36m(pid=6583)[0m     @     0x55c19a3a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6583)[0m     @     0x55c19a432baf _PyEval_EvalCodeWithName
[2m[36m(pid=6583)[0m     @     0x55c19a433643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6583)[0m     @     0x55c19a3a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6583)[0m     @     0x55c19a432baf _PyEval_EvalCodeWithName
[2m[36m(pid=6583)[0m     @     0x55c19a433643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6583)[0m     @     0x55c19a3a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6583)[0m     @     0x55c19a432baf _PyEval_EvalCodeWithName
[2m[36m(pid=6583)[0m     @     0x55c19a433643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6583)[0m     @     0x55c19a3a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6583)[0m     @     0x55c19a432baf _PyEval_EvalCodeWithName
[2m[36m(pid=6583)[0m     @     0x55c19a433643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6583)[0m     @     0x55c19a3a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x7f3d123a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6666)[0m     @     0x7f3d123a7388 at::native::copy_impl()
[2m[36m(pid=6666)[0m     @     0x7f3d123a95a4 at::native::copy_()
[2m[36m(pid=6637)[0m     @     0x7f91cd8215a4 at::native::copy_()
[2m[36m(pid=6637)[0m     @     0x7f91cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=6637)[0m     @     0x7f91d03df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6637)[0m     @     0x7f91cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=6663)[0m     @     0x7f49ca957d91 at::TensorIterator::for_each()
[2m[36m(pid=6663)[0m     @     0x7f49cb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6663)[0m     @     0x7f49cb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6663)[0m     @     0x7f49ca6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6663)[0m     @     0x7f49ca6fd388 at::native::copy_impl()
[2m[36m(pid=6663)[0m     @     0x7f49ca6ff5a4 at::native::copy_()
[2m[36m(pid=6654)[0m     @     0x7f48720e9388 at::native::copy_impl()
[2m[36m(pid=6654)[0m     @     0x7f48720eb5a4 at::native::copy_()
[2m[36m(pid=6654)[0m     @     0x7f48727d64f5 at::Tensor::copy_()
[2m[36m(pid=6654)[0m     @     0x7f4874ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6650)[0m     @     0x7faf78e91388 at::native::copy_impl()
[2m[36m(pid=6650)[0m     @     0x7faf78e935a4 at::native::copy_()
[2m[36m(pid=6650)[0m     @     0x7faf7957e4f5 at::Tensor::copy_()
[2m[36m(pid=6650)[0m     @     0x7faf7ba518de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6629)[0m     @     0x7edd6de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6629)[0m     @     0x7edd6de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6629)[0m     @     0x7edd6d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6629)[0m     @     0x7edd6d2f8388 at::native::copy_impl()
[2m[36m(pid=6629)[0m     @     0x7edd6d2fa5a4 at::native::copy_()
[2m[36m(pid=6642)[0m     @     0x7f76607924f5 at::Tensor::copy_()
[2m[36m(pid=6642)[0m     @     0x7f766683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6642)[0m     @     0x5588b3ac9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6642)[0m     @     0x5588b3a24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6642)[0m     @     0x5588b3aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6642)[0m     @     0x5588b3ab0a20 method_vectorcall
[2m[36m(pid=6642)[0m     @     0x5588b3a24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6642)[0m     @     0x5588b3aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6642)[0m     @     0x5588b3ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6642)[0m     @     0x5588b3a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6642)[0m     @     0x5588b3aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6642)[0m     @     0x5588b3ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6642)[0m     @     0x5588b3a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6642)[0m     @     0x5588b3aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6642)[0m     @     0x5588b3ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6642)[0m     @     0x5588b3a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6642)[0m     @     0x5588b3aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6642)[0m     @     0x5588b3ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6642)[0m     @     0x5588b3a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6580)[0m     @     0x7f968060b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6580)[0m     @     0x7f967e1384f5 at::Tensor::copy_()
[2m[36m(pid=6580)[0m     @     0x7f96841e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6580)[0m     @     0x55ccd39f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6580)[0m     @     0x55ccd3954b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6580)[0m     @     0x55ccd39dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39e0a20 method_vectorcall
[2m[36m(pid=6580)[0m     @     0x55ccd3954bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6580)[0m     @     0x55ccd39dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6580)[0m     @     0x55ccd3955689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6580)[0m     @     0x55ccd39dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6580)[0m     @     0x55ccd3955689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x7fb26a07a4f5 at::Tensor::copy_()
[2m[36m(pid=6573)[0m     @     0x7fb27012579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6573)[0m     @     0x562576567fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6573)[0m     @     0x5625764c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x56257654dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6573)[0m     @     0x56257654ea20 method_vectorcall
[2m[36m(pid=6573)[0m     @     0x5625764c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x56257654dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6573)[0m     @     0x56257654e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6573)[0m     @     0x5625764c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x56257654dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6573)[0m     @     0x56257654e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6573)[0m     @     0x5625764c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x56257654dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6573)[0m     @     0x56257654e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6573)[0m     @     0x5625764c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6573)[0m     @     0x56257654dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6573)[0m     @     0x56257654e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6573)[0m     @     0x5625764c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x7f6fe5be94f5 at::Tensor::copy_()
[2m[36m(pid=6624)[0m     @     0x7f6febc9479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6624)[0m     @     0x55dcc084bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6624)[0m     @     0x55dcc07a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x55dcc0831baf _PyEval_EvalCodeWithName
[2m[36m(pid=6624)[0m     @     0x55dcc0832a20 method_vectorcall
[2m[36m(pid=6624)[0m     @     0x55dcc07a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x55dcc0831baf _PyEval_EvalCodeWithName
[2m[36m(pid=6624)[0m     @     0x55dcc0832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6624)[0m     @     0x55dcc07a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x55dcc0831baf _PyEval_EvalCodeWithName
[2m[36m(pid=6624)[0m     @     0x55dcc0832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6624)[0m     @     0x55dcc07a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x55dcc0831baf _PyEval_EvalCodeWithName
[2m[36m(pid=6624)[0m     @     0x55dcc0832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6624)[0m     @     0x55dcc07a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6624)[0m     @     0x55dcc0831baf _PyEval_EvalCodeWithName
[2m[36m(pid=6624)[0m     @     0x55dcc0832643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6624)[0m     @     0x55dcc07a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x7f1d7da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=6638)[0m     @     0x7f1d7da79d91 at::TensorIterator::for_each()
[2m[36m(pid=6638)[0m     @     0x7f1d7e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6623)[0m     @     0x7fa0012bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6623)[0m     @     0x7f9ffedea4f5 at::Tensor::copy_()
[2m[36m(pid=6623)[0m     @     0x7fa004e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6623)[0m     @     0x55a3bee29fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6623)[0m     @     0x55a3bed84b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6623)[0m     @     0x55a3bee0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6623)[0m     @     0x55a3bee10a20 method_vectorcall
[2m[36m(pid=6623)[0m     @     0x55a3bed84bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6623)[0m     @     0x55a3bee0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6623)[0m     @     0x55a3bee10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6623)[0m     @     0x55a3bed85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6623)[0m     @     0x55a3bee0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6623)[0m     @     0x55a3bee10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6623)[0m     @     0x55a3bed85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x7fbba6dea4f5 at::Tensor::copy_()
[2m[36m(pid=6605)[0m     @     0x7fbbace9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6605)[0m     @     0x562a58d55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6605)[0m     @     0x562a58cb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x562a58d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6605)[0m     @     0x562a58d3ca20 method_vectorcall
[2m[36m(pid=6605)[0m     @     0x562a58cb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x562a58d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6605)[0m     @     0x562a58d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6605)[0m     @     0x562a58cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x562a58d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6605)[0m     @     0x562a58d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6605)[0m     @     0x562a58cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x562a58d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6605)[0m     @     0x562a58d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6605)[0m     @     0x562a58cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6605)[0m     @     0x562a58d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6605)[0m     @     0x562a58d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6605)[0m     @     0x562a58cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x7f55099e54f5 at::Tensor::copy_()
[2m[36m(pid=6557)[0m     @     0x7f550beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6578)[0m     @     0x7f5c39a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6578)[0m     @     0x7f5c375c94f5 at::Tensor::copy_()
[2m[36m(pid=6578)[0m     @     0x7f5c3d67479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6578)[0m     @     0x560b9d961fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6578)[0m     @     0x560b9d8bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6578)[0m     @     0x560b9d947baf _PyEval_EvalCodeWithName
[2m[36m(pid=6578)[0m     @     0x560b9d948a20 method_vectorcall
[2m[36m(pid=6578)[0m     @     0x560b9d8bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6578)[0m     @     0x560b9d947baf _PyEval_EvalCodeWithName
[2m[36m(pid=6578)[0m     @     0x560b9d948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6578)[0m     @     0x560b9d8bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6578)[0m     @     0x560b9d947baf _PyEval_EvalCodeWithName
[2m[36m(pid=6578)[0m     @     0x560b9d948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6578)[0m     @     0x560b9d8bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6578)[0m     @     0x560b9d947baf _PyEval_EvalCodeWithName
[2m[36m(pid=6578)[0m     @     0x560b9d948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6578)[0m     @     0x560b9d8bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6578)[0m     @     0x560b9d947baf _PyEval_EvalCodeWithName
[2m[36m(pid=6578)[0m     @     0x560b9d948643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6578)[0m     @     0x560b9d8bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x7f246d9a54f5 at::Tensor::copy_()
[2m[36m(pid=6635)[0m     @     0x7f246fe788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6635)[0m     @     0x7f246d9a54f5 at::Tensor::copy_()
[2m[36m(pid=6635)[0m     @     0x7f2473a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6635)[0m     @     0x55cfe059dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6635)[0m     @     0x55cfe04f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x55cfe0583baf _PyEval_EvalCodeWithName
[2m[36m(pid=6635)[0m     @     0x55cfe0584a20 method_vectorcall
[2m[36m(pid=6635)[0m     @     0x55cfe04f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x55cfe0583baf _PyEval_EvalCodeWithName
[2m[36m(pid=6635)[0m     @     0x55cfe0584643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6635)[0m     @     0x55cfe04f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x55cfe0583baf _PyEval_EvalCodeWithName
[2m[36m(pid=6635)[0m     @     0x55cfe0584643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6635)[0m     @     0x55cfe04f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x55cfe0583baf _PyEval_EvalCodeWithName
[2m[36m(pid=6635)[0m     @     0x55cfe0584643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6635)[0m     @     0x55cfe04f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6635)[0m     @     0x55cfe0583baf _PyEval_EvalCodeWithName
[2m[36m(pid=6635)[0m     @     0x55cfe0584643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6635)[0m     @     0x55cfe04f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x7f9f440b74f5 at::Tensor::copy_()
[2m[36m(pid=6582)[0m     @     0x7f9f4a16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6582)[0m     @     0x55e90d5d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6582)[0m     @     0x55e90d534b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x55e90d5bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6582)[0m     @     0x55e90d5c0a20 method_vectorcall
[2m[36m(pid=6582)[0m     @     0x55e90d534bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x55e90d5bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6582)[0m     @     0x55e90d5c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6582)[0m     @     0x55e90d535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x55e90d5bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6582)[0m     @     0x55e90d5c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6582)[0m     @     0x55e90d535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x55e90d5bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6582)[0m     @     0x55e90d5c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6582)[0m     @     0x55e90d535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6582)[0m     @     0x55e90d5bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6582)[0m     @     0x55e90d5c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6582)[0m     @     0x55e90d535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x7f7e3f1e04f5 at::Tensor::copy_()
[2m[36m(pid=6568)[0m     @     0x7f7e4528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6568)[0m     @     0x560abed77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6568)[0m     @     0x560abecd2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x560abed5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6568)[0m     @     0x560abed5ea20 method_vectorcall
[2m[36m(pid=6568)[0m     @     0x560abecd2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x560abed5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6568)[0m     @     0x560abed5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6568)[0m     @     0x560abecd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x560abed5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6568)[0m     @     0x560abed5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6568)[0m     @     0x560abecd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x560abed5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6568)[0m     @     0x560abed5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6568)[0m     @     0x560abecd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6568)[0m     @     0x560abed5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6568)[0m     @     0x560abed5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6568)[0m     @     0x560abecd3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x7eded905f4f5 at::Tensor::copy_()
[2m[36m(pid=6550)[0m     @     0x7ededf10a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6550)[0m     @     0x558ee2f27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6550)[0m     @     0x558ee2e82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x558ee2f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6550)[0m     @     0x558ee2f0ea20 method_vectorcall
[2m[36m(pid=6550)[0m     @     0x558ee2e82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x558ee2f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6550)[0m     @     0x558ee2f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6550)[0m     @     0x558ee2e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x558ee2f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6550)[0m     @     0x558ee2f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6550)[0m     @     0x558ee2e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x558ee2f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6550)[0m     @     0x558ee2f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6550)[0m     @     0x558ee2e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6550)[0m     @     0x558ee2f0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6550)[0m     @     0x558ee2f0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6550)[0m     @     0x558ee2e83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x7f875c9d34f5 at::Tensor::copy_()
[2m[36m(pid=6632)[0m     @     0x7f8762a7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6632)[0m     @     0x559286509fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6632)[0m     @     0x559286464b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x5592864efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6632)[0m     @     0x5592864f0a20 method_vectorcall
[2m[36m(pid=6632)[0m     @     0x559286464bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x5592864efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6632)[0m     @     0x5592864f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6632)[0m     @     0x559286465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x5592864efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6632)[0m     @     0x5592864f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6632)[0m     @     0x559286465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x5592864efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6632)[0m     @     0x5592864f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6632)[0m     @     0x559286465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6632)[0m     @     0x5592864efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6632)[0m     @     0x5592864f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6632)[0m     @     0x559286465689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x7fc6bdbc64f5 at::Tensor::copy_()
[2m[36m(pid=6613)[0m     @     0x7fc6c00998de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6613)[0m     @     0x7fc6bdbc64f5 at::Tensor::copy_()
[2m[36m(pid=6613)[0m     @     0x7fc6c3c7179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6613)[0m     @     0x5596e9ea0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6613)[0m     @     0x5596e9dfbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x5596e9e86baf _PyEval_EvalCodeWithName
[2m[36m(pid=6613)[0m     @     0x5596e9e87a20 method_vectorcall
[2m[36m(pid=6613)[0m     @     0x5596e9dfbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x5596e9e86baf _PyEval_EvalCodeWithName
[2m[36m(pid=6613)[0m     @     0x5596e9e87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6613)[0m     @     0x5596e9dfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x5596e9e86baf _PyEval_EvalCodeWithName
[2m[36m(pid=6613)[0m     @     0x5596e9e87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6613)[0m     @     0x5596e9dfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x5596e9e86baf _PyEval_EvalCodeWithName
[2m[36m(pid=6613)[0m     @     0x5596e9e87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6613)[0m     @     0x5596e9dfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6613)[0m     @     0x5596e9e86baf _PyEval_EvalCodeWithName
[2m[36m(pid=6613)[0m     @     0x5596e9e87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6613)[0m     @     0x5596e9dfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x7f33ca3e95a4 at::native::copy_()
[2m[36m(pid=6631)[0m     @     0x7f33caad44f5 at::Tensor::copy_()
[2m[36m(pid=6631)[0m     @     0x7f33ccfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6631)[0m     @     0x7f33caad44f5 at::Tensor::copy_()
[2m[36m(pid=6678)[0m     @     0x7f51e9ef75a4 at::native::copy_()
[2m[36m(pid=6678)[0m     @     0x7f51ea5e24f5 at::Tensor::copy_()
[2m[36m(pid=6678)[0m     @     0x7f51ecab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6678)[0m     @     0x7f51ea5e24f5 at::Tensor::copy_()
[2m[36m(pid=6678)[0m     @     0x7f51f068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6678)[0m     @     0x560b6675afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6678)[0m     @     0x560b666b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x7ee8baad44f5 at::Tensor::copy_()
[2m[36m(pid=6572)[0m     @     0x7ee8bcfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6572)[0m     @     0x7ee8baad44f5 at::Tensor::copy_()
[2m[36m(pid=6572)[0m     @     0x7ee8c0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6572)[0m     @     0x55aba11b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6572)[0m     @     0x55aba1110b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x55aba119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6572)[0m     @     0x55aba119ca20 method_vectorcall
[2m[36m(pid=6572)[0m     @     0x55aba1110bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x55aba119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6572)[0m     @     0x55aba119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6572)[0m     @     0x55aba1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x55aba119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6572)[0m     @     0x55aba119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6572)[0m     @     0x55aba1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x55aba119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6572)[0m     @     0x55aba119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6572)[0m     @     0x55aba1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6572)[0m     @     0x55aba119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6572)[0m     @     0x55aba119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6572)[0m     @     0x55aba1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x7f9fa1226388 at::native::copy_impl()
[2m[36m(pid=6553)[0m     @     0x7f9fa12285a4 at::native::copy_()
[2m[36m(pid=6553)[0m     @     0x7f9fa19134f5 at::Tensor::copy_()
[2m[36m(pid=6553)[0m     @     0x7f9fa3de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6551)[0m     @     0x7f8317ef44f5 at::Tensor::copy_()
[2m[36m(pid=6551)[0m     @     0x7f831df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6551)[0m     @     0x563552b60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6551)[0m     @     0x563552abbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6551)[0m     @     0x563552b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=6551)[0m     @     0x563552b47a20 method_vectorcall
[2m[36m(pid=6551)[0m     @     0x563552abbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6551)[0m     @     0x563552b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=6551)[0m     @     0x563552b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6551)[0m     @     0x563552abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6551)[0m     @     0x563552b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=6551)[0m     @     0x563552b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6551)[0m     @     0x563552abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6551)[0m     @     0x563552b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=6551)[0m     @     0x563552b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6551)[0m     @     0x563552abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6551)[0m     @     0x563552b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=6551)[0m     @     0x563552b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6551)[0m     @     0x563552abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x56135787d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x561357907baf _PyEval_EvalCodeWithName
[2m[36m(pid=6563)[0m     @     0x561357908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6563)[0m     @     0x56135787d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x561357907baf _PyEval_EvalCodeWithName
[2m[36m(pid=6563)[0m     @     0x561357908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6563)[0m     @     0x56135787d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6563)[0m     @     0x561357907baf _PyEval_EvalCodeWithName
[2m[36m(pid=6563)[0m     @     0x561357908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6563)[0m     @     0x56135787d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x7f9d8e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6565)[0m     @     0x55edf5e16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6565)[0m     @     0x55edf5d71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x55edf5dfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6565)[0m     @     0x55edf5dfda20 method_vectorcall
[2m[36m(pid=6565)[0m     @     0x55edf5d71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x55edf5dfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6565)[0m     @     0x55edf5dfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6565)[0m     @     0x55edf5d72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x55edf5dfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6565)[0m     @     0x55edf5dfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6565)[0m     @     0x55edf5d72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x55edf5dfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6565)[0m     @     0x55edf5dfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6565)[0m     @     0x55edf5d72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6565)[0m     @     0x55edf5dfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6565)[0m     @     0x55edf5dfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6565)[0m     @     0x55edf5d72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x7f1c821654f5 at::Tensor::copy_()
[2m[36m(pid=6639)[0m     @     0x7f1c846388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6639)[0m     @     0x7f1c821654f5 at::Tensor::copy_()
[2m[36m(pid=6639)[0m     @     0x7f1c8821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6639)[0m     @     0x56056e020fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6639)[0m     @     0x56056df7bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x56056e006baf _PyEval_EvalCodeWithName
[2m[36m(pid=6639)[0m     @     0x56056e007a20 method_vectorcall
[2m[36m(pid=6639)[0m     @     0x56056df7bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x56056e006baf _PyEval_EvalCodeWithName
[2m[36m(pid=6639)[0m     @     0x56056e007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6639)[0m     @     0x56056df7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x56056e006baf _PyEval_EvalCodeWithName
[2m[36m(pid=6639)[0m     @     0x56056e007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6639)[0m     @     0x56056df7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x56056e006baf _PyEval_EvalCodeWithName
[2m[36m(pid=6639)[0m     @     0x56056e007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6639)[0m     @     0x56056df7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6639)[0m     @     0x56056e006baf _PyEval_EvalCodeWithName
[2m[36m(pid=6639)[0m     @     0x56056e007643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6639)[0m     @     0x56056df7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x7f6e4eb845a4 at::native::copy_()
[2m[36m(pid=6610)[0m     @     0x7f6e4f26f4f5 at::Tensor::copy_()
[2m[36m(pid=6610)[0m     @     0x7f6e517428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6607)[0m     @     0x55a2deb6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6607)[0m     @     0x55a2deb70a20 method_vectorcall
[2m[36m(pid=6607)[0m     @     0x55a2deae4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6607)[0m     @     0x55a2deb6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6607)[0m     @     0x55a2deb70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6607)[0m     @     0x55a2deae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6607)[0m     @     0x55a2deb6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6607)[0m     @     0x55a2deb70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6607)[0m     @     0x55a2deae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6607)[0m     @     0x55a2deb6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6607)[0m     @     0x55a2deb70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6607)[0m     @     0x55a2deae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6607)[0m     @     0x55a2deb6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6607)[0m     @     0x55a2deb70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6607)[0m     @     0x55a2deae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6566)[0m     @     0x557c1a3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6566)[0m     @     0x557c1a3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6566)[0m     @     0x557c1a32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x7f3d12a944f5 at::Tensor::copy_()
[2m[36m(pid=6666)[0m     @     0x7f3d14f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6637)[0m     @     0x7f91d3fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6637)[0m     @     0x55807894bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6637)[0m     @     0x5580788a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6637)[0m     @     0x558078931baf _PyEval_EvalCodeWithName
[2m[36m(pid=6637)[0m     @     0x558078932a20 method_vectorcall
[2m[36m(pid=6637)[0m     @     0x5580788a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6637)[0m     @     0x558078931baf _PyEval_EvalCodeWithName
[2m[36m(pid=6637)[0m     @     0x558078932643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6637)[0m     @     0x5580788a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6637)[0m     @     0x558078931baf _PyEval_EvalCodeWithName
[2m[36m(pid=6637)[0m     @     0x558078932643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6637)[0m     @     0x5580788a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6637)[0m     @     0x558078931baf _PyEval_EvalCodeWithName
[2m[36m(pid=6637)[0m     @     0x558078932643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6637)[0m     @     0x5580788a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6637)[0m     @     0x558078931baf _PyEval_EvalCodeWithName
[2m[36m(pid=6637)[0m     @     0x558078932643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6637)[0m     @     0x5580788a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x7f49cadea4f5 at::Tensor::copy_()
[2m[36m(pid=6663)[0m     @     0x7f49cd2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6663)[0m     @     0x7f49cadea4f5 at::Tensor::copy_()
[2m[36m(pid=6654)[0m     @     0x7f48727d64f5 at::Tensor::copy_()
[2m[36m(pid=6654)[0m     @     0x7f487847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6654)[0m     @     0x55655e0affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6654)[0m     @     0x55655e00ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6654)[0m     @     0x55655e095baf _PyEval_EvalCodeWithName
[2m[36m(pid=6654)[0m     @     0x55655e096a20 method_vectorcall
[2m[36m(pid=6654)[0m     @     0x55655e00abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6654)[0m     @     0x55655e095baf _PyEval_EvalCodeWithName
[2m[36m(pid=6654)[0m     @     0x55655e096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6654)[0m     @     0x55655e00b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6654)[0m     @     0x55655e095baf _PyEval_EvalCodeWithName
[2m[36m(pid=6654)[0m     @     0x55655e096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6654)[0m     @     0x55655e00b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6654)[0m     @     0x55655e095baf _PyEval_EvalCodeWithName
[2m[36m(pid=6654)[0m     @     0x55655e096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6654)[0m     @     0x55655e00b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6654)[0m     @     0x55655e095baf _PyEval_EvalCodeWithName
[2m[36m(pid=6654)[0m     @     0x55655e096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6654)[0m     @     0x55655e00b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x7faf7957e4f5 at::Tensor::copy_()
[2m[36m(pid=6650)[0m     @     0x7faf7f62979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6650)[0m     @     0x560f00b46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6650)[0m     @     0x560f00aa1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x560f00b2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6650)[0m     @     0x560f00b2da20 method_vectorcall
[2m[36m(pid=6650)[0m     @     0x560f00aa1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x560f00b2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6650)[0m     @     0x560f00b2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6650)[0m     @     0x560f00aa2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x560f00b2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6650)[0m     @     0x560f00b2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6650)[0m     @     0x560f00aa2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x560f00b2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6650)[0m     @     0x560f00b2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6650)[0m     @     0x560f00aa2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6650)[0m     @     0x560f00b2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6650)[0m     @     0x560f00b2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6650)[0m     @     0x560f00aa2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x7edd6d9e54f5 at::Tensor::copy_()
[2m[36m(pid=6629)[0m     @     0x7edd6feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6629)[0m     @     0x7edd6d9e54f5 at::Tensor::copy_()
[2m[36m(pid=6629)[0m     @     0x7edd73a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6629)[0m     @     0x5559db9b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6629)[0m     @     0x5559db90fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6580)[0m     @     0x55ccd3955689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6580)[0m     @     0x55ccd39dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6580)[0m     @     0x55ccd39e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6580)[0m     @     0x55ccd3955689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x7f1d7e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6638)[0m     @     0x7f1d7d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6638)[0m     @     0x7f1d7d81f388 at::native::copy_impl()
[2m[36m(pid=6638)[0m     @     0x7f1d7d8215a4 at::native::copy_()
[2m[36m(pid=6623)[0m     @     0x55a3bee0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6623)[0m     @     0x55a3bee10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6623)[0m     @     0x55a3bed85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6623)[0m     @     0x55a3bee0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6623)[0m     @     0x55a3bee10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6623)[0m     @     0x55a3bed85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x7f55099e54f5 at::Tensor::copy_()
[2m[36m(pid=6557)[0m     @     0x7f550fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6557)[0m     @     0x5632656c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6557)[0m     @     0x563265621b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x5632656acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6557)[0m     @     0x5632656ada20 method_vectorcall
[2m[36m(pid=6557)[0m     @     0x563265621bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x5632656acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6557)[0m     @     0x5632656ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6557)[0m     @     0x563265622689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x5632656acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6557)[0m     @     0x5632656ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6557)[0m     @     0x563265622689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x5632656acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6557)[0m     @     0x5632656ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6557)[0m     @     0x563265622689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6557)[0m     @     0x5632656acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6557)[0m     @     0x5632656ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6557)[0m     @     0x563265622689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x7f33d0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6631)[0m     @     0x55e4dd658fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6631)[0m     @     0x55e4dd5b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x55e4dd63ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6631)[0m     @     0x55e4dd63fa20 method_vectorcall
[2m[36m(pid=6631)[0m     @     0x55e4dd5b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x55e4dd63ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6631)[0m     @     0x55e4dd63f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6631)[0m     @     0x55e4dd5b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x55e4dd63ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6631)[0m     @     0x55e4dd63f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6631)[0m     @     0x55e4dd5b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x55e4dd63ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6631)[0m     @     0x55e4dd63f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6631)[0m     @     0x55e4dd5b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6631)[0m     @     0x55e4dd63ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6631)[0m     @     0x55e4dd63f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6631)[0m     @     0x55e4dd5b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6678)[0m     @     0x560b66740baf _PyEval_EvalCodeWithName
[2m[36m(pid=6678)[0m     @     0x560b66741a20 method_vectorcall
[2m[36m(pid=6678)[0m     @     0x560b666b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6678)[0m     @     0x560b66740baf _PyEval_EvalCodeWithName
[2m[36m(pid=6678)[0m     @     0x560b66741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6678)[0m     @     0x560b666b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6678)[0m     @     0x560b66740baf _PyEval_EvalCodeWithName
[2m[36m(pid=6678)[0m     @     0x560b66741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6678)[0m     @     0x560b666b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6678)[0m     @     0x560b66740baf _PyEval_EvalCodeWithName
[2m[36m(pid=6678)[0m     @     0x560b66741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6678)[0m     @     0x560b666b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6678)[0m     @     0x560b66740baf _PyEval_EvalCodeWithName
[2m[36m(pid=6678)[0m     @     0x560b66741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6678)[0m     @     0x560b666b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x7f9fa19134f5 at::Tensor::copy_()
[2m[36m(pid=6553)[0m     @     0x7f9fa79be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6553)[0m     @     0x55eb553e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6553)[0m     @     0x55eb5533cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x55eb553c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6553)[0m     @     0x55eb553c8a20 method_vectorcall
[2m[36m(pid=6553)[0m     @     0x55eb5533cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x55eb553c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6553)[0m     @     0x55eb553c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6553)[0m     @     0x55eb5533d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x55eb553c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6553)[0m     @     0x55eb553c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6553)[0m     @     0x55eb5533d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x55eb553c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6553)[0m     @     0x55eb553c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6553)[0m     @     0x55eb5533d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6553)[0m     @     0x55eb553c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6553)[0m     @     0x55eb553c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6553)[0m     @     0x55eb5533d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x7f6e4f26f4f5 at::Tensor::copy_()
[2m[36m(pid=6610)[0m     @     0x7f6e5531a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6610)[0m     @     0x5644b13c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6610)[0m     @     0x5644b131eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x5644b13a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6610)[0m     @     0x5644b13aaa20 method_vectorcall
[2m[36m(pid=6610)[0m     @     0x5644b131ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x5644b13a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6610)[0m     @     0x5644b13aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6610)[0m     @     0x5644b131f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x5644b13a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6610)[0m     @     0x5644b13aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6610)[0m     @     0x5644b131f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x5644b13a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6610)[0m     @     0x5644b13aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6610)[0m     @     0x5644b131f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6610)[0m     @     0x5644b13a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6610)[0m     @     0x5644b13aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6610)[0m     @     0x5644b131f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x7f3d12a944f5 at::Tensor::copy_()
[2m[36m(pid=6666)[0m     @     0x7f3d18b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6666)[0m     @     0x55c2b25effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6666)[0m     @     0x55c2b254ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x55c2b25d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6666)[0m     @     0x55c2b25d6a20 method_vectorcall
[2m[36m(pid=6666)[0m     @     0x55c2b254abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x55c2b25d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6666)[0m     @     0x55c2b25d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6666)[0m     @     0x55c2b254b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x55c2b25d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6666)[0m     @     0x55c2b25d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6666)[0m     @     0x55c2b254b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x55c2b25d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6666)[0m     @     0x55c2b25d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6666)[0m     @     0x55c2b254b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6666)[0m     @     0x55c2b25d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6666)[0m     @     0x55c2b25d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6666)[0m     @     0x55c2b254b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x7f49d0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6663)[0m     @     0x55c2c8f1bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6663)[0m     @     0x55c2c8e76b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x55c2c8f01baf _PyEval_EvalCodeWithName
[2m[36m(pid=6663)[0m     @     0x55c2c8f02a20 method_vectorcall
[2m[36m(pid=6663)[0m     @     0x55c2c8e76bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x55c2c8f01baf _PyEval_EvalCodeWithName
[2m[36m(pid=6663)[0m     @     0x55c2c8f02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6663)[0m     @     0x55c2c8e77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x55c2c8f01baf _PyEval_EvalCodeWithName
[2m[36m(pid=6663)[0m     @     0x55c2c8f02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6663)[0m     @     0x55c2c8e77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x55c2c8f01baf _PyEval_EvalCodeWithName
[2m[36m(pid=6663)[0m     @     0x55c2c8f02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6663)[0m     @     0x55c2c8e77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6663)[0m     @     0x55c2c8f01baf _PyEval_EvalCodeWithName
[2m[36m(pid=6663)[0m     @     0x55c2c8f02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6663)[0m     @     0x55c2c8e77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99ba20 method_vectorcall
[2m[36m(pid=6629)[0m     @     0x5559db90fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6629)[0m     @     0x5559db99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6629)[0m     @     0x5559db910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6629)[0m     @     0x5559db99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6629)[0m     @     0x5559db910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6629)[0m     @     0x5559db99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6629)[0m     @     0x5559db910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6629)[0m     @     0x5559db99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6629)[0m     @     0x5559db99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6629)[0m     @     0x5559db910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x7f1d7df0c4f5 at::Tensor::copy_()
[2m[36m(pid=6638)[0m     @     0x7f1d803df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6638)[0m     @     0x7f1d7df0c4f5 at::Tensor::copy_()
[2m[36m(pid=6638)[0m     @     0x7f1d83fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=6638)[0m     @     0x55a58583cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6638)[0m     @     0x55a585797b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x55a585822baf _PyEval_EvalCodeWithName
[2m[36m(pid=6638)[0m     @     0x55a585823a20 method_vectorcall
[2m[36m(pid=6638)[0m     @     0x55a585797bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x55a585822baf _PyEval_EvalCodeWithName
[2m[36m(pid=6638)[0m     @     0x55a585823643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6638)[0m     @     0x55a585798689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x55a585822baf _PyEval_EvalCodeWithName
[2m[36m(pid=6638)[0m     @     0x55a585823643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6638)[0m     @     0x55a585798689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x55a585822baf _PyEval_EvalCodeWithName
[2m[36m(pid=6638)[0m     @     0x55a585823643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6638)[0m     @     0x55a585798689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6638)[0m     @     0x55a585822baf _PyEval_EvalCodeWithName
[2m[36m(pid=6638)[0m     @     0x55a585823643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6638)[0m     @     0x55a585798689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:17:42,320	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:17:42,331	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff3a9488b101000000.
[2m[33m(pid=raylet)[0m E1105 10:17:42.311439  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:17:42,332	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
[2m[36m(pid=6683)[0m E1105 10:17:42.326579  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}2020-11-05 10:17:42,342	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0d557f6601000000.

[2m[36m(pid=6683)[0m E1105 10:17:42.326777  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.327035  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=a9f882a9e9e6260d3a9488b101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=3a9488b101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.327119  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ce06aecb2528476b3a9488b101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=3a9488b101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.331281  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.331385  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:17:42,353	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
[2m[33m(pid=raylet)[0m E1105 10:17:42.327062  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.331216  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.336207  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=6683)[0m E1105 10:17:42.336344  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=559b33aa5754ccdd0d557f6601000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0d557f6601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.336465  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=40900fb9361f40170d557f6601000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0d557f6601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:17:42.349583  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:17:42,364	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffee8852f401000000.
[2m[36m(pid=6683)[0m E1105 10:17:42.349599  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.349727  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.358170  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=ca6e9afd853093adee8852f401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=ee8852f401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.358302  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f573b5e9a35a9ec7ee8852f401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=ee8852f401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:17:42,374	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
2020-11-05 10:17:42,375	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff1e7ae67b01000000.
2020-11-05 10:17:42,375	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
[2m[33m(pid=raylet)[0m E1105 10:17:42.358191  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.366739  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.370028  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.371606  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.371834  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=6683)[0m E1105 10:17:42.366719  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9e78156cc0f1c18db2413f7201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.366842  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=99a573b913884b0db2413f7201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.369976  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7401512aaa7b6e5d1e7ae67b01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=1e7ae67b01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.370095  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=71fdc8bab2e5c4d51e7ae67b01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=1e7ae67b01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.371430  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8b485cbbeaa005a559d91ef301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.371502  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ca546fa1af7e507159d91ef301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6683)[0m E1105 10:17:42.371659  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6683)[0m E1105 10:17:42.371718  6683  7838 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:17:42,375	ERROR trial_runner.py:567 -- Trial PPO_jss_env_1f6cc_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=6683, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:17:42,376	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
== Status ==
Memory usage on this node: 22.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1f6cc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1f6cc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1f6cc_00000_0_2020-11-05_10-17-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[33m(pid=raylet)[0m E1105 10:17:42.379683  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:17:42.382241  6508  6508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
== Status ==
Memory usage on this node: 22.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1f6cc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1f6cc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1f6cc_00000_0_2020-11-05_10-17-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:17:42,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.

2020-11-05 10:17:42,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:17:42,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff018c9dac01000000.
2020-11-05 10:17:42,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:17:42,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_1f6cc_00000])
