2020-11-05 10:50:52,711	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c6e89_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=64579)[0m 2020-11-05 10:50:55,470	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=64579)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=64579)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=64579)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=64579)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=64579)[0m 
[2m[36m(pid=64579)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=64477)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64477)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64477)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64569)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64569)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64569)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64558)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64558)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64558)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64558)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64558)[0m *** SIGSEGV (@0x0) received by PID 64558 (TID 0x7f4fe4306700) from PID 0; stack trace: ***
[2m[36m(pid=64559)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64559)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64559)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64559)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64559)[0m *** SIGSEGV (@0x0) received by PID 64559 (TID 0x7ff6fc86a700) from PID 0; stack trace: ***
[2m[36m(pid=64533)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64533)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64533)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64573)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64573)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64573)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64549)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64549)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64549)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64549)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64549)[0m *** SIGSEGV (@0x0) received by PID 64549 (TID 0x7fad23a01700) from PID 0; stack trace: ***
[2m[36m(pid=64580)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64580)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64580)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64580)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64580)[0m *** SIGSEGV (@0x0) received by PID 64580 (TID 0x7f2194027700) from PID 0; stack trace: ***
[2m[36m(pid=64595)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64595)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64595)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64602)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64602)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64602)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64602)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64602)[0m *** SIGSEGV (@0x0) received by PID 64602 (TID 0x7fdd78803700) from PID 0; stack trace: ***
[2m[36m(pid=64499)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64499)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64499)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64593)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64593)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64593)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64593)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64593)[0m *** SIGSEGV (@0x0) received by PID 64593 (TID 0x7f0477ef6700) from PID 0; stack trace: ***
[2m[36m(pid=64584)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64584)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64584)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64584)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64584)[0m *** SIGSEGV (@0x0) received by PID 64584 (TID 0x7f900b867700) from PID 0; stack trace: ***
[2m[36m(pid=64546)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64546)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64546)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64546)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64589)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64589)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64589)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64589)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64589)[0m *** SIGSEGV (@0x0) received by PID 64589 (TID 0x7fbb8fcec700) from PID 0; stack trace: ***
[2m[36m(pid=64589)[0m     @     0x7fbb8f8c5390 (unknown)
[2m[36m(pid=64553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64553)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64553)[0m *** SIGSEGV (@0x0) received by PID 64553 (TID 0x7ff4fae4d700) from PID 0; stack trace: ***
[2m[36m(pid=64483)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64483)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64483)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64548)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64548)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64548)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64548)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64548)[0m *** SIGSEGV (@0x0) received by PID 64548 (TID 0x7f9ad669f700) from PID 0; stack trace: ***
[2m[36m(pid=64557)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64557)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64557)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64557)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64557)[0m *** SIGSEGV (@0x0) received by PID 64557 (TID 0x7fe031b30700) from PID 0; stack trace: ***
[2m[36m(pid=64557)[0m     @     0x7fe031709390 (unknown)
[2m[36m(pid=64552)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64552)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64552)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64552)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64552)[0m *** SIGSEGV (@0x0) received by PID 64552 (TID 0x7fd9d31ce700) from PID 0; stack trace: ***
[2m[36m(pid=64552)[0m     @     0x7fd9d2da7390 (unknown)
[2m[36m(pid=64552)[0m     @     0x7faad2cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64552)[0m     @     0x7faad24277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64540)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64540)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64540)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64540)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64540)[0m *** SIGSEGV (@0x0) received by PID 64540 (TID 0x7f4c28fdf700) from PID 0; stack trace: ***
[2m[36m(pid=64540)[0m     @     0x7f4c28bb8390 (unknown)
[2m[36m(pid=64540)[0m     @     0x7f1d28a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64586)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64586)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64586)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64586)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64586)[0m *** SIGSEGV (@0x0) received by PID 64586 (TID 0x7f32740c8700) from PID 0; stack trace: ***
[2m[36m(pid=64586)[0m     @     0x7f3273ca1390 (unknown)
[2m[36m(pid=64586)[0m     @     0x7f03739c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64586)[0m     @     0x7f03730f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64586)[0m     @     0x7f03730f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64588)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64588)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64588)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64588)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64588)[0m *** SIGSEGV (@0x0) received by PID 64588 (TID 0x7f30356ed700) from PID 0; stack trace: ***
[2m[36m(pid=64588)[0m     @     0x7f30352c6390 (unknown)
[2m[36m(pid=64588)[0m     @     0x7f013524af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64588)[0m     @     0x7f01349757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64588)[0m     @     0x7f01349788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64600)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64600)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64600)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64600)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64600)[0m *** SIGSEGV (@0x0) received by PID 64600 (TID 0x7fbd87908700) from PID 0; stack trace: ***
[2m[36m(pid=64600)[0m     @     0x7fbd874e1390 (unknown)
[2m[36m(pid=64600)[0m     @     0x7f8e8743af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64600)[0m     @     0x7f8e86b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64600)[0m     @     0x7f8e86b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64551)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64551)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64551)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64551)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64551)[0m *** SIGSEGV (@0x0) received by PID 64551 (TID 0x7f1e499e9700) from PID 0; stack trace: ***
[2m[36m(pid=64551)[0m     @     0x7f1e495c2390 (unknown)
[2m[36m(pid=64551)[0m     @     0x7eef49564f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64551)[0m     @     0x7eef48c8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64576)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64576)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64576)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64576)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64576)[0m *** SIGSEGV (@0x0) received by PID 64576 (TID 0x7fa9ab665700) from PID 0; stack trace: ***
[2m[36m(pid=64576)[0m     @     0x7fa9ab23e390 (unknown)
[2m[36m(pid=64576)[0m     @     0x7f7aab124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64576)[0m     @     0x7f7aaa84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64565)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64565)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64565)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64565)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64565)[0m *** SIGSEGV (@0x0) received by PID 64565 (TID 0x7fb566ee1700) from PID 0; stack trace: ***
[2m[36m(pid=64565)[0m     @     0x7fb566aba390 (unknown)
[2m[36m(pid=64565)[0m     @     0x7f8666a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64565)[0m     @     0x7f866614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64596)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64596)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64596)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64596)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64596)[0m *** SIGSEGV (@0x0) received by PID 64596 (TID 0x7f227b31e700) from PID 0; stack trace: ***
[2m[36m(pid=64596)[0m     @     0x7f227aef7390 (unknown)
[2m[36m(pid=64596)[0m     @     0x7ef37ae93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64596)[0m     @     0x7ef37a5be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64596)[0m     @     0x7ef37a5c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64477)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64477)[0m *** SIGSEGV (@0x0) received by PID 64477 (TID 0x7f095c6d5700) from PID 0; stack trace: ***
[2m[36m(pid=64477)[0m     @     0x7f095c2ae390 (unknown)
[2m[36m(pid=64477)[0m     @     0x7eda5c0c0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64477)[0m     @     0x7eda5b7eb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64477)[0m     @     0x7eda5b7ee8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64569)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64569)[0m *** SIGSEGV (@0x0) received by PID 64569 (TID 0x7f05e0be6700) from PID 0; stack trace: ***
[2m[36m(pid=64569)[0m     @     0x7f05e07bf390 (unknown)
[2m[36m(pid=64569)[0m     @     0x7ed6e060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64569)[0m     @     0x7ed6dfd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64558)[0m     @     0x7f4fe3edf390 (unknown)
[2m[36m(pid=64558)[0m     @     0x7f20e3e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64558)[0m     @     0x7f20e35367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64558)[0m     @     0x7f20e35398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64558)[0m     @     0x7f20e3539ad3 at::TensorIterator::for_each()
[2m[36m(pid=64559)[0m     @     0x7ff6fc443390 (unknown)
[2m[36m(pid=64559)[0m     @     0x7fc7fc333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64559)[0m     @     0x7fc7fba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64559)[0m     @     0x7fc7fba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64533)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64533)[0m *** SIGSEGV (@0x0) received by PID 64533 (TID 0x7fdbc527e700) from PID 0; stack trace: ***
[2m[36m(pid=64533)[0m     @     0x7fdbc4e57390 (unknown)
[2m[36m(pid=64533)[0m     @     0x7facc4dd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64533)[0m     @     0x7facc44fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64573)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64573)[0m *** SIGSEGV (@0x0) received by PID 64573 (TID 0x7f8a07ff5700) from PID 0; stack trace: ***
[2m[36m(pid=64573)[0m     @     0x7f8a07bce390 (unknown)
[2m[36m(pid=64573)[0m     @     0x7f5b07af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64573)[0m     @     0x7f5b072207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64549)[0m     @     0x7fad235da390 (unknown)
[2m[36m(pid=64549)[0m     @     0x7f7e2356af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64549)[0m     @     0x7f7e22c957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64549)[0m     @     0x7f7e22c988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64580)[0m     @     0x7f2193c00390 (unknown)
[2m[36m(pid=64580)[0m     @     0x7ef293af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64580)[0m     @     0x7ef2932207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64580)[0m     @     0x7ef2932238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64595)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64595)[0m *** SIGSEGV (@0x0) received by PID 64595 (TID 0x7fcaa7c5f700) from PID 0; stack trace: ***
[2m[36m(pid=64595)[0m     @     0x7fcaa7838390 (unknown)
[2m[36m(pid=64595)[0m     @     0x7f9ba77cef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64595)[0m     @     0x7f9ba6ef97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64602)[0m     @     0x7fdd783dc390 (unknown)
[2m[36m(pid=64602)[0m     @     0x7fae78333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64602)[0m     @     0x7fae77a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64602)[0m     @     0x7fae77a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64499)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64499)[0m *** SIGSEGV (@0x0) received by PID 64499 (TID 0x7fcd6d728700) from PID 0; stack trace: ***
[2m[36m(pid=64499)[0m     @     0x7fcd6d301390 (unknown)
[2m[36m(pid=64499)[0m     @     0x7f9e6d28af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64593)[0m     @     0x7f0477acf390 (unknown)
[2m[36m(pid=64593)[0m     @     0x7ed577a63f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64593)[0m     @     0x7ed57718e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64593)[0m     @     0x7ed5771918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64584)[0m     @     0x7f900b440390 (unknown)
[2m[36m(pid=64584)[0m     @     0x7f610b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64584)[0m     @     0x7f610a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64584)[0m     @     0x7f610a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64546)[0m *** SIGSEGV (@0x0) received by PID 64546 (TID 0x7f2aba299700) from PID 0; stack trace: ***
[2m[36m(pid=64546)[0m     @     0x7f2ab9e72390 (unknown)
[2m[36m(pid=64546)[0m     @     0x7efbb9df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64546)[0m     @     0x7efbb95227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64589)[0m     @     0x7f8c8f84cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64589)[0m     @     0x7f8c8ef777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64589)[0m     @     0x7f8c8ef7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64553)[0m     @     0x7ff4faa26390 (unknown)
[2m[36m(pid=64553)[0m     @     0x7fc5fa70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64553)[0m     @     0x7fc5f9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64553)[0m     @     0x7fc5f9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64483)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64483)[0m *** SIGSEGV (@0x0) received by PID 64483 (TID 0x7f8da8606700) from PID 0; stack trace: ***
[2m[36m(pid=64483)[0m     @     0x7f8da81df390 (unknown)
[2m[36m(pid=64483)[0m     @     0x7f5ea801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64483)[0m     @     0x7f5ea77477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64548)[0m     @     0x7f9ad6278390 (unknown)
[2m[36m(pid=64548)[0m     @     0x7f6bd613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64548)[0m     @     0x7f6bd58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64557)[0m     @     0x7fb1316b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64557)[0m     @     0x7fb130ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64557)[0m     @     0x7fb130de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64552)[0m     @     0x7faad242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64552)[0m     @     0x7faad242aad3 at::TensorIterator::for_each()
[2m[36m(pid=64540)[0m     @     0x7f1d281b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64540)[0m     @     0x7f1d281b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64540)[0m     @     0x7f1d281b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=64586)[0m     @     0x7f03730f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=64586)[0m     @     0x7f03730f3d91 at::TensorIterator::for_each()
[2m[36m(pid=64586)[0m     @     0x7f03739d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64586)[0m     @     0x7f03739f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64586)[0m     @     0x7f0372e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64588)[0m     @     0x7f0134978ad3 at::TensorIterator::for_each()
[2m[36m(pid=64588)[0m     @     0x7f0134978d91 at::TensorIterator::for_each()
[2m[36m(pid=64588)[0m     @     0x7f013525bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64588)[0m     @     0x7f013527ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64588)[0m     @     0x7f0134720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64600)[0m     @     0x7f8e86b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=64600)[0m     @     0x7f8e86b68d91 at::TensorIterator::for_each()
[2m[36m(pid=64600)[0m     @     0x7f8e8744bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64600)[0m     @     0x7f8e8746ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64551)[0m     @     0x7eef48c928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64551)[0m     @     0x7eef48c92ad3 at::TensorIterator::for_each()
[2m[36m(pid=64551)[0m     @     0x7eef48c92d91 at::TensorIterator::for_each()
[2m[36m(pid=64551)[0m     @     0x7eef49575b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64576)[0m     @     0x7f7aaa8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64576)[0m     @     0x7f7aaa852ad3 at::TensorIterator::for_each()
[2m[36m(pid=64576)[0m     @     0x7f7aaa852d91 at::TensorIterator::for_each()
[2m[36m(pid=64576)[0m     @     0x7f7aab135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64561)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64561)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64561)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64506)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64565)[0m     @     0x7f866614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64565)[0m     @     0x7f866614fad3 at::TensorIterator::for_each()
[2m[36m(pid=64565)[0m     @     0x7f866614fd91 at::TensorIterator::for_each()
[2m[36m(pid=64565)[0m     @     0x7f8666a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64565)[0m     @     0x7f8666a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64596)[0m     @     0x7ef37a5c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=64596)[0m     @     0x7ef37a5c1d91 at::TensorIterator::for_each()
[2m[36m(pid=64596)[0m     @     0x7ef37aea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64596)[0m     @     0x7ef37aec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64575)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64575)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64575)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64477)[0m     @     0x7eda5b7eead3 at::TensorIterator::for_each()
[2m[36m(pid=64477)[0m     @     0x7eda5b7eed91 at::TensorIterator::for_each()
[2m[36m(pid=64477)[0m     @     0x7eda5c0d1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64477)[0m     @     0x7eda5c0f4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64477)[0m     @     0x7eda5b596a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64569)[0m     @     0x7ed6dfd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64569)[0m     @     0x7ed6dfd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=64569)[0m     @     0x7ed6dfd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=64569)[0m     @     0x7ed6e061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64569)[0m     @     0x7ed6e0642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64558)[0m     @     0x7f20e3539d91 at::TensorIterator::for_each()
[2m[36m(pid=64558)[0m     @     0x7f20e3e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64558)[0m     @     0x7f20e3e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64558)[0m     @     0x7f20e32e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64558)[0m     @     0x7f20e32df388 at::native::copy_impl()
[2m[36m(pid=64559)[0m     @     0x7fc7fba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=64559)[0m     @     0x7fc7fba61d91 at::TensorIterator::for_each()
[2m[36m(pid=64559)[0m     @     0x7fc7fc344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64559)[0m     @     0x7fc7fc367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64533)[0m     @     0x7facc45008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64533)[0m     @     0x7facc4500ad3 at::TensorIterator::for_each()
[2m[36m(pid=64573)[0m     @     0x7f5b072238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64573)[0m     @     0x7f5b07223ad3 at::TensorIterator::for_each()
[2m[36m(pid=64573)[0m     @     0x7f5b07223d91 at::TensorIterator::for_each()
[2m[36m(pid=64573)[0m     @     0x7f5b07b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64573)[0m     @     0x7f5b07b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64549)[0m     @     0x7f7e22c98ad3 at::TensorIterator::for_each()
[2m[36m(pid=64549)[0m     @     0x7f7e22c98d91 at::TensorIterator::for_each()
[2m[36m(pid=64549)[0m     @     0x7f7e2357bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64549)[0m     @     0x7f7e2359ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64580)[0m     @     0x7ef293223ad3 at::TensorIterator::for_each()
[2m[36m(pid=64580)[0m     @     0x7ef293223d91 at::TensorIterator::for_each()
[2m[36m(pid=64580)[0m     @     0x7ef293b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64580)[0m     @     0x7ef293b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64580)[0m     @     0x7ef292fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64474)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64474)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64474)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64597)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64597)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64597)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64595)[0m     @     0x7f9ba6efc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64595)[0m     @     0x7f9ba6efcad3 at::TensorIterator::for_each()
[2m[36m(pid=64595)[0m     @     0x7f9ba6efcd91 at::TensorIterator::for_each()
[2m[36m(pid=64595)[0m     @     0x7f9ba77dfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64595)[0m     @     0x7f9ba7802c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64476)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64480)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64480)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64480)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64544)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64544)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64544)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64602)[0m     @     0x7fae77a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=64602)[0m     @     0x7fae77a61d91 at::TensorIterator::for_each()
[2m[36m(pid=64602)[0m     @     0x7fae78344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64602)[0m     @     0x7fae78367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64602)[0m     @     0x7fae77809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64602)[0m     @     0x7fae77807388 at::native::copy_impl()
[2m[36m(pid=64481)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64481)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64481)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64481)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64481)[0m *** SIGSEGV (@0x0) received by PID 64481 (TID 0x7f1a6cd9a700) from PID 0; stack trace: ***
[2m[36m(pid=64489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64489)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64499)[0m     @     0x7f9e6c9b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64499)[0m     @     0x7f9e6c9b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64499)[0m     @     0x7f9e6c9b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=64555)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64555)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64555)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64555)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64555)[0m *** SIGSEGV (@0x0) received by PID 64555 (TID 0x7fea5fdd3700) from PID 0; stack trace: ***
[2m[36m(pid=64593)[0m     @     0x7ed577191ad3 at::TensorIterator::for_each()
[2m[36m(pid=64593)[0m     @     0x7ed577191d91 at::TensorIterator::for_each()
[2m[36m(pid=64593)[0m     @     0x7ed577a74b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64593)[0m     @     0x7ed577a97c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64593)[0m     @     0x7ed576f39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64593)[0m     @     0x7ed576f37388 at::native::copy_impl()
[2m[36m(pid=64543)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64543)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64543)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64584)[0m     @     0x7f610a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=64584)[0m     @     0x7f610a957d91 at::TensorIterator::for_each()
[2m[36m(pid=64584)[0m     @     0x7f610b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64584)[0m     @     0x7f610b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64584)[0m     @     0x7f610a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64584)[0m     @     0x7f610a6fd388 at::native::copy_impl()
[2m[36m(pid=64546)[0m     @     0x7efbb95258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64546)[0m     @     0x7efbb9525ad3 at::TensorIterator::for_each()
[2m[36m(pid=64589)[0m     @     0x7f8c8ef7aad3 at::TensorIterator::for_each()
[2m[36m(pid=64589)[0m     @     0x7f8c8ef7ad91 at::TensorIterator::for_each()
[2m[36m(pid=64589)[0m     @     0x7f8c8f85db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64589)[0m     @     0x7f8c8f880c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64589)[0m     @     0x7f8c8ed22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64589)[0m     @     0x7f8c8ed20388 at::native::copy_impl()
[2m[36m(pid=64493)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64493)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64493)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64553)[0m     @     0x7fc5f9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=64553)[0m     @     0x7fc5f9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=64553)[0m     @     0x7fc5fa71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64553)[0m     @     0x7fc5fa73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64553)[0m     @     0x7fc5f9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64553)[0m     @     0x7fc5f9bde388 at::native::copy_impl()
[2m[36m(pid=64491)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64491)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64491)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64538)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64538)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64538)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64538)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64538)[0m *** SIGSEGV (@0x0) received by PID 64538 (TID 0x7f3079127700) from PID 0; stack trace: ***
[2m[36m(pid=64475)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64475)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64475)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64475)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64475)[0m *** SIGSEGV (@0x0) received by PID 64475 (TID 0x7f76fd625700) from PID 0; stack trace: ***
[2m[36m(pid=64483)[0m     @     0x7f5ea774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64483)[0m     @     0x7f5ea774aad3 at::TensorIterator::for_each()
[2m[36m(pid=64483)[0m     @     0x7f5ea774ad91 at::TensorIterator::for_each()
[2m[36m(pid=64483)[0m     @     0x7f5ea802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64483)[0m     @     0x7f5ea8050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64534)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64534)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64534)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64534)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64534)[0m *** SIGSEGV (@0x0) received by PID 64534 (TID 0x7f1a3e533700) from PID 0; stack trace: ***
[2m[36m(pid=64487)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64487)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64487)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64487)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64487)[0m *** SIGSEGV (@0x0) received by PID 64487 (TID 0x7f5ed9c6b700) from PID 0; stack trace: ***
[2m[36m(pid=64497)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64497)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64497)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64497)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64497)[0m *** SIGSEGV (@0x0) received by PID 64497 (TID 0x7f435f33c700) from PID 0; stack trace: ***
[2m[36m(pid=64500)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64500)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64500)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64500)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64500)[0m *** SIGSEGV (@0x0) received by PID 64500 (TID 0x7fd7e14bf700) from PID 0; stack trace: ***
[2m[36m(pid=64537)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64537)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64537)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64560)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64560)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64560)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64503)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64472)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64472)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64472)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64473)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64473)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64473)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64485)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64485)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64485)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64486)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64486)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64486)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64486)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64486)[0m *** SIGSEGV (@0x0) received by PID 64486 (TID 0x7f3df54d3700) from PID 0; stack trace: ***
[2m[36m(pid=64572)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64572)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64572)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64495)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64508)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64508)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64508)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64554)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64554)[0m *** SIGSEGV (@0x0) received by PID 64554 (TID 0x7fb590943700) from PID 0; stack trace: ***
[2m[36m(pid=64570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64570)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64570)[0m *** SIGSEGV (@0x0) received by PID 64570 (TID 0x7f7fb929b700) from PID 0; stack trace: ***
[2m[36m(pid=64502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64502)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64502)[0m *** SIGSEGV (@0x0) received by PID 64502 (TID 0x7f5de1ff1700) from PID 0; stack trace: ***
[2m[36m(pid=64548)[0m     @     0x7f6bd58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64548)[0m     @     0x7f6bd5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=64548)[0m     @     0x7f6bd5868d91 at::TensorIterator::for_each()
[2m[36m(pid=64548)[0m     @     0x7f6bd614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64488)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64488)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64488)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64488)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64488)[0m *** SIGSEGV (@0x0) received by PID 64488 (TID 0x7fa81e344700) from PID 0; stack trace: ***
[2m[36m(pid=64557)[0m     @     0x7fb130de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=64557)[0m     @     0x7fb130de2d91 at::TensorIterator::for_each()
[2m[36m(pid=64557)[0m     @     0x7fb1316c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64557)[0m     @     0x7fb1316e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64557)[0m     @     0x7fb130b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64557)[0m     @     0x7fb130b88388 at::native::copy_impl()
[2m[36m(pid=64552)[0m     @     0x7faad242ad91 at::TensorIterator::for_each()
[2m[36m(pid=64552)[0m     @     0x7faad2d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64552)[0m     @     0x7faad2d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64552)[0m     @     0x7faad21d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64552)[0m     @     0x7faad21d0388 at::native::copy_impl()
[2m[36m(pid=64540)[0m     @     0x7f1d281b9d91 at::TensorIterator::for_each()
[2m[36m(pid=64540)[0m     @     0x7f1d28a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64540)[0m     @     0x7f1d28abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64586)[0m     @     0x7f0372e99388 at::native::copy_impl()
[2m[36m(pid=64586)[0m     @     0x7f0372e9b5a4 at::native::copy_()
[2m[36m(pid=64586)[0m     @     0x7f03735864f5 at::Tensor::copy_()
[2m[36m(pid=64588)[0m     @     0x7f013471e388 at::native::copy_impl()
[2m[36m(pid=64588)[0m     @     0x7f01347205a4 at::native::copy_()
[2m[36m(pid=64588)[0m     @     0x7f0134e0b4f5 at::Tensor::copy_()
[2m[36m(pid=64600)[0m     @     0x7f8e86910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64600)[0m     @     0x7f8e8690e388 at::native::copy_impl()
[2m[36m(pid=64600)[0m     @     0x7f8e869105a4 at::native::copy_()
[2m[36m(pid=64551)[0m     @     0x7eef49598c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64551)[0m     @     0x7eef48a3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64551)[0m     @     0x7eef48a38388 at::native::copy_impl()
[2m[36m(pid=64576)[0m     @     0x7f7aab158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64576)[0m     @     0x7f7aaa5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64576)[0m     @     0x7f7aaa5f8388 at::native::copy_impl()
[2m[36m(pid=64561)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64561)[0m *** SIGSEGV (@0x0) received by PID 64561 (TID 0x7f578b9ef700) from PID 0; stack trace: ***
[2m[36m(pid=64561)[0m     @     0x7f578b5c8390 (unknown)
[2m[36m(pid=64561)[0m     @     0x7f288b575f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64561)[0m     @     0x7f288aca07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64550)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64550)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64550)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64550)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64550)[0m *** SIGSEGV (@0x0) received by PID 64550 (TID 0x7f76cf3f9700) from PID 0; stack trace: ***
[2m[36m(pid=64550)[0m     @     0x7f76cefd2390 (unknown)
[2m[36m(pid=64550)[0m     @     0x7f47cef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64563)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64563)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64563)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64563)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64563)[0m *** SIGSEGV (@0x0) received by PID 64563 (TID 0x7fcc2532f700) from PID 0; stack trace: ***
[2m[36m(pid=64506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64506)[0m *** SIGSEGV (@0x0) received by PID 64506 (TID 0x7ffa5bc4a700) from PID 0; stack trace: ***
[2m[36m(pid=64506)[0m     @     0x7ffa5b823390 (unknown)
[2m[36m(pid=64565)[0m     @     0x7f8665ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64565)[0m     @     0x7f8665ef5388 at::native::copy_impl()
[2m[36m(pid=64565)[0m     @     0x7f8665ef75a4 at::native::copy_()
[2m[36m(pid=64596)[0m     @     0x7ef37a369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64596)[0m     @     0x7ef37a367388 at::native::copy_impl()
[2m[36m(pid=64596)[0m     @     0x7ef37a3695a4 at::native::copy_()
[2m[36m(pid=64575)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64575)[0m *** SIGSEGV (@0x0) received by PID 64575 (TID 0x7fdf9d23b700) from PID 0; stack trace: ***
[2m[36m(pid=64575)[0m     @     0x7fdf9ce14390 (unknown)
[2m[36m(pid=64490)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64490)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64490)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64490)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64490)[0m *** SIGSEGV (@0x0) received by PID 64490 (TID 0x7fa4c93c6700) from PID 0; stack trace: ***
[2m[36m(pid=64490)[0m     @     0x7fa4c8f9f390 (unknown)
[2m[36m(pid=64471)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64471)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64471)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64471)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64471)[0m *** SIGSEGV (@0x0) received by PID 64471 (TID 0x7f18eed31700) from PID 0; stack trace: ***
[2m[36m(pid=64556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64556)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64556)[0m *** SIGSEGV (@0x0) received by PID 64556 (TID 0x7f499ca42700) from PID 0; stack trace: ***
[2m[36m(pid=64477)[0m     @     0x7eda5b594388 at::native::copy_impl()
[2m[36m(pid=64477)[0m     @     0x7eda5b5965a4 at::native::copy_()
[2m[36m(pid=64569)[0m     @     0x7ed6dfae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64569)[0m     @     0x7ed6dfae2388 at::native::copy_impl()
[2m[36m(pid=64569)[0m     @     0x7ed6dfae45a4 at::native::copy_()
[2m[36m(pid=64558)[0m     @     0x7f20e32e15a4 at::native::copy_()
[2m[36m(pid=64558)[0m     @     0x7f20e39cc4f5 at::Tensor::copy_()
[2m[36m(pid=64559)[0m     @     0x7fc7fb809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64559)[0m     @     0x7fc7fb807388 at::native::copy_impl()
[2m[36m(pid=64559)[0m     @     0x7fc7fb8095a4 at::native::copy_()
[2m[36m(pid=64533)[0m     @     0x7facc4500d91 at::TensorIterator::for_each()
[2m[36m(pid=64533)[0m     @     0x7facc4de3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64533)[0m     @     0x7facc4e06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64573)[0m     @     0x7f5b06fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64573)[0m     @     0x7f5b06fc9388 at::native::copy_impl()
[2m[36m(pid=64573)[0m     @     0x7f5b06fcb5a4 at::native::copy_()
[2m[36m(pid=64549)[0m     @     0x7f7e22a40a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64549)[0m     @     0x7f7e22a3e388 at::native::copy_impl()
[2m[36m(pid=64549)[0m     @     0x7f7e22a405a4 at::native::copy_()
[2m[36m(pid=64580)[0m     @     0x7ef292fc9388 at::native::copy_impl()
[2m[36m(pid=64580)[0m     @     0x7ef292fcb5a4 at::native::copy_()
[2m[36m(pid=64474)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64474)[0m *** SIGSEGV (@0x0) received by PID 64474 (TID 0x7f5f3d768700) from PID 0; stack trace: ***
[2m[36m(pid=64474)[0m     @     0x7f5f3d341390 (unknown)
[2m[36m(pid=64474)[0m     @     0x7f303d2cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64474)[0m     @     0x7f303c9f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64597)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64597)[0m *** SIGSEGV (@0x0) received by PID 64597 (TID 0x7f12058c3700) from PID 0; stack trace: ***
[2m[36m(pid=64597)[0m     @     0x7f120549c390 (unknown)
[2m[36m(pid=64595)[0m     @     0x7f9ba6ca4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64595)[0m     @     0x7f9ba6ca2388 at::native::copy_impl()
[2m[36m(pid=64595)[0m     @     0x7f9ba6ca45a4 at::native::copy_()
[2m[36m(pid=64476)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64476)[0m *** SIGSEGV (@0x0) received by PID 64476 (TID 0x7f5bae4fe700) from PID 0; stack trace: ***
[2m[36m(pid=64476)[0m     @     0x7f5bae0d7390 (unknown)
[2m[36m(pid=64480)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64480)[0m *** SIGSEGV (@0x0) received by PID 64480 (TID 0x7faf73d79700) from PID 0; stack trace: ***
[2m[36m(pid=64480)[0m     @     0x7faf73952390 (unknown)
[2m[36m(pid=64544)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64544)[0m *** SIGSEGV (@0x0) received by PID 64544 (TID 0x7fc8b3c05700) from PID 0; stack trace: ***
[2m[36m(pid=64544)[0m     @     0x7fc8b37de390 (unknown)
[2m[36m(pid=64544)[0m     @     0x7f99b36aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64602)[0m     @     0x7fae778095a4 at::native::copy_()
[2m[36m(pid=64602)[0m     @     0x7fae77ef44f5 at::Tensor::copy_()
[2m[36m(pid=64602)[0m     @     0x7fae7a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64481)[0m     @     0x7f1a6c973390 (unknown)
[2m[36m(pid=64481)[0m     @     0x7eeb6c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64481)[0m     @     0x7eeb6be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64489)[0m *** SIGSEGV (@0x0) received by PID 64489 (TID 0x7f1adc717700) from PID 0; stack trace: ***
[2m[36m(pid=64489)[0m     @     0x7f1adc2f0390 (unknown)
[2m[36m(pid=64489)[0m     @     0x7eebdc263f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64499)[0m     @     0x7f9e6c9b8d91 at::TensorIterator::for_each()
[2m[36m(pid=64499)[0m     @     0x7f9e6d29bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64499)[0m     @     0x7f9e6d2bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64499)[0m     @     0x7f9e6c760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64499)[0m     @     0x7f9e6c75e388 at::native::copy_impl()
[2m[36m(pid=64555)[0m     @     0x7fea5f9ac390 (unknown)
[2m[36m(pid=64555)[0m     @     0x7fbb5f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64555)[0m     @     0x7fbb5f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64555)[0m     @     0x7fbb5f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64593)[0m     @     0x7ed576f395a4 at::native::copy_()
[2m[36m(pid=64593)[0m     @     0x7ed5776244f5 at::Tensor::copy_()
[2m[36m(pid=64593)[0m     @     0x7ed579af78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64543)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64543)[0m *** SIGSEGV (@0x0) received by PID 64543 (TID 0x7fa38a277700) from PID 0; stack trace: ***
[2m[36m(pid=64543)[0m     @     0x7fa389e50390 (unknown)
[2m[36m(pid=64543)[0m     @     0x7f7489df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64584)[0m     @     0x7f610a6ff5a4 at::native::copy_()
[2m[36m(pid=64584)[0m     @     0x7f610adea4f5 at::Tensor::copy_()
[2m[36m(pid=64584)[0m     @     0x7f610d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64546)[0m     @     0x7efbb9525d91 at::TensorIterator::for_each()
[2m[36m(pid=64546)[0m     @     0x7efbb9e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64546)[0m     @     0x7efbb9e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64546)[0m     @     0x7efbb92cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64546)[0m     @     0x7efbb92cb388 at::native::copy_impl()
[2m[36m(pid=64589)[0m     @     0x7f8c8ed225a4 at::native::copy_()
[2m[36m(pid=64589)[0m     @     0x7f8c8f40d4f5 at::Tensor::copy_()
[2m[36m(pid=64589)[0m     @     0x7f8c918e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64493)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64493)[0m *** SIGSEGV (@0x0) received by PID 64493 (TID 0x7ff33fd78700) from PID 0; stack trace: ***
[2m[36m(pid=64493)[0m     @     0x7ff33f951390 (unknown)
[2m[36m(pid=64493)[0m     @     0x7fc43f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64493)[0m     @     0x7fc43f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64553)[0m     @     0x7fc5f9be05a4 at::native::copy_()
[2m[36m(pid=64553)[0m     @     0x7fc5fa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=64553)[0m     @     0x7fc5fc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64491)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64491)[0m *** SIGSEGV (@0x0) received by PID 64491 (TID 0x7fdd553dd700) from PID 0; stack trace: ***
[2m[36m(pid=64491)[0m     @     0x7fdd54fb6390 (unknown)
[2m[36m(pid=64491)[0m     @     0x7fae54ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64491)[0m     @     0x7fae545cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64491)[0m     @     0x7fae545d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64538)[0m     @     0x7f3078d00390 (unknown)
[2m[36m(pid=64538)[0m     @     0x7f0178bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64538)[0m     @     0x7f01782fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64538)[0m     @     0x7f01782ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64475)[0m     @     0x7f76fd1fe390 (unknown)
[2m[36m(pid=64475)[0m     @     0x7f47fd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64475)[0m     @     0x7f47fc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64475)[0m     @     0x7f47fc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64483)[0m     @     0x7f5ea74f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64483)[0m     @     0x7f5ea74f0388 at::native::copy_impl()
[2m[36m(pid=64483)[0m     @     0x7f5ea74f25a4 at::native::copy_()
[2m[36m(pid=64483)[0m     @     0x7f5ea7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=64483)[0m     @     0x7f5eaa0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64534)[0m     @     0x7f1a3e10c390 (unknown)
[2m[36m(pid=64534)[0m     @     0x7eeb3e0a8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64534)[0m     @     0x7eeb3d7d37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64534)[0m     @     0x7eeb3d7d68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64534)[0m     @     0x7eeb3d7d6ad3 at::TensorIterator::for_each()
[2m[36m(pid=64487)[0m     @     0x7f5ed9844390 (unknown)
[2m[36m(pid=64487)[0m     @     0x7f2fd96f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64487)[0m     @     0x7f2fd8e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64487)[0m     @     0x7f2fd8e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64487)[0m     @     0x7f2fd8e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=64497)[0m     @     0x7f435ef15390 (unknown)
[2m[36m(pid=64497)[0m     @     0x7f145ee93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64497)[0m     @     0x7f145e5be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64497)[0m     @     0x7f145e5c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64497)[0m     @     0x7f145e5c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=64500)[0m     @     0x7fd7e1098390 (unknown)
[2m[36m(pid=64500)[0m     @     0x7fa8e1031f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64500)[0m     @     0x7fa8e075c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64500)[0m     @     0x7fa8e075f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64500)[0m     @     0x7fa8e075fad3 at::TensorIterator::for_each()
[2m[36m(pid=64537)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64537)[0m *** SIGSEGV (@0x0) received by PID 64537 (TID 0x7f3453233700) from PID 0; stack trace: ***
[2m[36m(pid=64537)[0m     @     0x7f3452e0c390 (unknown)
[2m[36m(pid=64537)[0m     @     0x7f0552db0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64537)[0m     @     0x7f05524db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64537)[0m     @     0x7f05524de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64560)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64560)[0m *** SIGSEGV (@0x0) received by PID 64560 (TID 0x7f369aeff700) from PID 0; stack trace: ***
[2m[36m(pid=64560)[0m     @     0x7f369aad8390 (unknown)
[2m[36m(pid=64560)[0m     @     0x7f079a9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64560)[0m     @     0x7f079a0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64560)[0m     @     0x7f079a0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64503)[0m *** SIGSEGV (@0x0) received by PID 64503 (TID 0x7f09a07aa700) from PID 0; stack trace: ***
[2m[36m(pid=64503)[0m     @     0x7f09a0383390 (unknown)
[2m[36m(pid=64503)[0m     @     0x7edaa0290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64503)[0m     @     0x7eda9f9bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64503)[0m     @     0x7eda9f9be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64472)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64472)[0m *** SIGSEGV (@0x0) received by PID 64472 (TID 0x7f808ad24700) from PID 0; stack trace: ***
[2m[36m(pid=64472)[0m     @     0x7f808a8fd390 (unknown)
[2m[36m(pid=64472)[0m     @     0x7f518a897f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64472)[0m     @     0x7f5189fc27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64472)[0m     @     0x7f5189fc58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64473)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64473)[0m *** SIGSEGV (@0x0) received by PID 64473 (TID 0x7f6c4d9c5700) from PID 0; stack trace: ***
[2m[36m(pid=64473)[0m     @     0x7f6c4d59e390 (unknown)
[2m[36m(pid=64473)[0m     @     0x7f3d4d4e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64473)[0m     @     0x7f3d4cc0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64473)[0m     @     0x7f3d4cc118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64482)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64482)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64482)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64482)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64482)[0m *** SIGSEGV (@0x0) received by PID 64482 (TID 0x7f77abf24700) from PID 0; stack trace: ***
[2m[36m(pid=64482)[0m     @     0x7f77abafd390 (unknown)
[2m[36m(pid=64482)[0m     @     0x7f48ab9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64482)[0m     @     0x7f48ab0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64545)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64545)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64545)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64545)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64545)[0m *** SIGSEGV (@0x0) received by PID 64545 (TID 0x7f9f7cbd2700) from PID 0; stack trace: ***
[2m[36m(pid=64536)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64536)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64536)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64536)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64536)[0m *** SIGSEGV (@0x0) received by PID 64536 (TID 0x7f66b7e80700) from PID 0; stack trace: ***
[2m[36m(pid=64536)[0m     @     0x7f66b7a59390 (unknown)
[2m[36m(pid=64536)[0m     @     0x7f37b78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64485)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64485)[0m *** SIGSEGV (@0x0) received by PID 64485 (TID 0x7f3b180e5700) from PID 0; stack trace: ***
[2m[36m(pid=64485)[0m     @     0x7f3b17cbe390 (unknown)
[2m[36m(pid=64485)[0m     @     0x7f0c17c56f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64485)[0m     @     0x7f0c173817db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64485)[0m     @     0x7f0c173848f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64492)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64492)[0m *** SIGSEGV (@0x0) received by PID 64492 (TID 0x7f559f827700) from PID 0; stack trace: ***
[2m[36m(pid=64574)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64574)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64574)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64486)[0m     @     0x7f3df50ac390 (unknown)
[2m[36m(pid=64486)[0m     @     0x7f0ef5048f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64486)[0m     @     0x7f0ef47737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64486)[0m     @     0x7f0ef47768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64486)[0m     @     0x7f0ef4776ad3 at::TensorIterator::for_each()
[2m[36m(pid=64572)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64572)[0m *** SIGSEGV (@0x0) received by PID 64572 (TID 0x7f2d214cc700) from PID 0; stack trace: ***
[2m[36m(pid=64572)[0m     @     0x7f2d210a5390 (unknown)
[2m[36m(pid=64572)[0m     @     0x7efe20f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64572)[0m     @     0x7efe2067a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64572)[0m     @     0x7efe2067d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64495)[0m *** SIGSEGV (@0x0) received by PID 64495 (TID 0x7f9558cdd700) from PID 0; stack trace: ***
[2m[36m(pid=64495)[0m     @     0x7f95588b6390 (unknown)
[2m[36m(pid=64495)[0m     @     0x7f6658825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64495)[0m     @     0x7f6657f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64495)[0m     @     0x7f6657f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64547)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64547)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64547)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64547)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64547)[0m *** SIGSEGV (@0x0) received by PID 64547 (TID 0x7fc06a0aa700) from PID 0; stack trace: ***
[2m[36m(pid=64547)[0m     @     0x7fc069c83390 (unknown)
[2m[36m(pid=64508)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64508)[0m *** SIGSEGV (@0x0) received by PID 64508 (TID 0x7f5384da4700) from PID 0; stack trace: ***
[2m[36m(pid=64535)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64535)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64535)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64535)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64535)[0m *** SIGSEGV (@0x0) received by PID 64535 (TID 0x7f1fb08da700) from PID 0; stack trace: ***
[2m[36m(pid=64535)[0m     @     0x7f1fb04b3390 (unknown)
[2m[36m(pid=64507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64507)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64507)[0m *** SIGSEGV (@0x0) received by PID 64507 (TID 0x7f5ddfeed700) from PID 0; stack trace: ***
[2m[36m(pid=64507)[0m     @     0x7f5ddfac6390 (unknown)
[2m[36m(pid=64507)[0m     @     0x7f2edf9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64478)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64478)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64478)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64554)[0m     @     0x7fb59051c390 (unknown)
[2m[36m(pid=64554)[0m     @     0x7f8690333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64554)[0m     @     0x7f868fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64554)[0m     @     0x7f868fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64570)[0m     @     0x7f7fb8e74390 (unknown)
[2m[36m(pid=64570)[0m     @     0x7f50b8e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64570)[0m     @     0x7f50b853d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64502)[0m     @     0x7f5de1bca390 (unknown)
[2m[36m(pid=64502)[0m     @     0x7f2ee1b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64502)[0m     @     0x7f2ee12a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64502)[0m     @     0x7f2ee12a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64502)[0m     @     0x7f2ee12a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=64548)[0m     @     0x7f6bd616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64548)[0m     @     0x7f6bd5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64548)[0m     @     0x7f6bd560e388 at::native::copy_impl()
[2m[36m(pid=64548)[0m     @     0x7f6bd56105a4 at::native::copy_()
[2m[36m(pid=64488)[0m     @     0x7fa81df1d390 (unknown)
[2m[36m(pid=64488)[0m     @     0x7f791de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64488)[0m     @     0x7f791d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64488)[0m     @     0x7f791d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64488)[0m     @     0x7f791d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=64557)[0m     @     0x7fb130b8a5a4 at::native::copy_()
[2m[36m(pid=64557)[0m     @     0x7fb1312754f5 at::Tensor::copy_()
[2m[36m(pid=64557)[0m     @     0x7fb1337488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64557)[0m     @     0x7fb1312754f5 at::Tensor::copy_()
[2m[36m(pid=64557)[0m     @     0x7fb13732079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64557)[0m     @     0x55c7c7953fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64557)[0m     @     0x55c7c78aeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64557)[0m     @     0x55c7c7939baf _PyEval_EvalCodeWithName
[2m[36m(pid=64557)[0m     @     0x55c7c793aa20 method_vectorcall
[2m[36m(pid=64557)[0m     @     0x55c7c78aebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64557)[0m     @     0x55c7c7939baf _PyEval_EvalCodeWithName
[2m[36m(pid=64557)[0m     @     0x55c7c793a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64557)[0m     @     0x55c7c78af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64557)[0m     @     0x55c7c7939baf _PyEval_EvalCodeWithName
[2m[36m(pid=64557)[0m     @     0x55c7c793a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64557)[0m     @     0x55c7c78af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64557)[0m     @     0x55c7c7939baf _PyEval_EvalCodeWithName
[2m[36m(pid=64557)[0m     @     0x55c7c793a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64557)[0m     @     0x55c7c78af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64557)[0m     @     0x55c7c7939baf _PyEval_EvalCodeWithName
[2m[36m(pid=64557)[0m     @     0x55c7c793a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64557)[0m     @     0x55c7c78af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x7faad21d25a4 at::native::copy_()
[2m[36m(pid=64552)[0m     @     0x7faad28bd4f5 at::Tensor::copy_()
[2m[36m(pid=64552)[0m     @     0x7faad4d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64552)[0m     @     0x7faad28bd4f5 at::Tensor::copy_()
[2m[36m(pid=64540)[0m     @     0x7f1d27f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64540)[0m     @     0x7f1d27f5f388 at::native::copy_impl()
[2m[36m(pid=64540)[0m     @     0x7f1d27f615a4 at::native::copy_()
[2m[36m(pid=64540)[0m     @     0x7f1d2864c4f5 at::Tensor::copy_()
[2m[36m(pid=64586)[0m     @     0x7f0375a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64586)[0m     @     0x7f03735864f5 at::Tensor::copy_()
[2m[36m(pid=64586)[0m     @     0x7f037963179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64586)[0m     @     0x55fe03956fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64586)[0m     @     0x55fe038b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64586)[0m     @     0x55fe0393cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64586)[0m     @     0x55fe0393da20 method_vectorcall
[2m[36m(pid=64586)[0m     @     0x55fe038b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64586)[0m     @     0x55fe0393cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64586)[0m     @     0x55fe0393d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64586)[0m     @     0x55fe038b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64586)[0m     @     0x55fe0393cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64586)[0m     @     0x55fe0393d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64586)[0m     @     0x55fe038b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64586)[0m     @     0x55fe0393cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64586)[0m     @     0x55fe0393d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64586)[0m     @     0x55fe038b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64586)[0m     @     0x55fe0393cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64586)[0m     @     0x55fe0393d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64586)[0m     @     0x55fe038b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x7f01372de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64588)[0m     @     0x7f0134e0b4f5 at::Tensor::copy_()
[2m[36m(pid=64588)[0m     @     0x7f013aeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64588)[0m     @     0x561084491fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64588)[0m     @     0x5610843ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x561084477baf _PyEval_EvalCodeWithName
[2m[36m(pid=64588)[0m     @     0x561084478a20 method_vectorcall
[2m[36m(pid=64588)[0m     @     0x5610843ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x561084477baf _PyEval_EvalCodeWithName
[2m[36m(pid=64588)[0m     @     0x561084478643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64588)[0m     @     0x5610843ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x561084477baf _PyEval_EvalCodeWithName
[2m[36m(pid=64588)[0m     @     0x561084478643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64588)[0m     @     0x5610843ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x561084477baf _PyEval_EvalCodeWithName
[2m[36m(pid=64588)[0m     @     0x561084478643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64588)[0m     @     0x5610843ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64588)[0m     @     0x561084477baf _PyEval_EvalCodeWithName
[2m[36m(pid=64588)[0m     @     0x561084478643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64588)[0m     @     0x5610843ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x7f8e86ffb4f5 at::Tensor::copy_()
[2m[36m(pid=64600)[0m     @     0x7f8e894ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64600)[0m     @     0x7f8e86ffb4f5 at::Tensor::copy_()
[2m[36m(pid=64600)[0m     @     0x7f8e8d0a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64600)[0m     @     0x55fe4d6f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64600)[0m     @     0x55fe4d653b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x55fe4d6debaf _PyEval_EvalCodeWithName
[2m[36m(pid=64600)[0m     @     0x55fe4d6dfa20 method_vectorcall
[2m[36m(pid=64600)[0m     @     0x55fe4d653bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x55fe4d6debaf _PyEval_EvalCodeWithName
[2m[36m(pid=64600)[0m     @     0x55fe4d6df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64600)[0m     @     0x55fe4d654689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x55fe4d6debaf _PyEval_EvalCodeWithName
[2m[36m(pid=64600)[0m     @     0x55fe4d6df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64600)[0m     @     0x55fe4d654689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x55fe4d6debaf _PyEval_EvalCodeWithName
[2m[36m(pid=64600)[0m     @     0x55fe4d6df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64600)[0m     @     0x55fe4d654689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x7eef48a3a5a4 at::native::copy_()
[2m[36m(pid=64551)[0m     @     0x7eef491254f5 at::Tensor::copy_()
[2m[36m(pid=64551)[0m     @     0x7eef4b5f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64551)[0m     @     0x7eef491254f5 at::Tensor::copy_()
[2m[36m(pid=64576)[0m     @     0x7f7aaa5fa5a4 at::native::copy_()
[2m[36m(pid=64576)[0m     @     0x7f7aaace54f5 at::Tensor::copy_()
[2m[36m(pid=64576)[0m     @     0x7f7aad1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64576)[0m     @     0x7f7aaace54f5 at::Tensor::copy_()
[2m[36m(pid=64561)[0m     @     0x7f288aca38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64561)[0m     @     0x7f288aca3ad3 at::TensorIterator::for_each()
[2m[36m(pid=64561)[0m     @     0x7f288aca3d91 at::TensorIterator::for_each()
[2m[36m(pid=64561)[0m     @     0x7f288b586b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64561)[0m     @     0x7f288b5a9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64550)[0m     @     0x7f47ce63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64550)[0m     @     0x7f47ce6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64550)[0m     @     0x7f47ce641ad3 at::TensorIterator::for_each()
[2m[36m(pid=64563)[0m     @     0x7fcc24f08390 (unknown)
[2m[36m(pid=64563)[0m     @     0x7f9d24eacf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64563)[0m     @     0x7f9d245d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64563)[0m     @     0x7f9d245da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64563)[0m     @     0x7f9d245daad3 at::TensorIterator::for_each()
[2m[36m(pid=64506)[0m     @     0x7fcb5b7a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64506)[0m     @     0x7fcb5aed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64506)[0m     @     0x7fcb5aed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64506)[0m     @     0x7fcb5aed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=64565)[0m     @     0x7f86665e24f5 at::Tensor::copy_()
[2m[36m(pid=64565)[0m     @     0x7f8668ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64565)[0m     @     0x7f86665e24f5 at::Tensor::copy_()
[2m[36m(pid=64565)[0m     @     0x7f866c68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64565)[0m     @     0x561412e47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64565)[0m     @     0x561412da2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64565)[0m     @     0x561412e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64565)[0m     @     0x561412e2ea20 method_vectorcall
[2m[36m(pid=64565)[0m     @     0x561412da2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64565)[0m     @     0x561412e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64565)[0m     @     0x561412e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64565)[0m     @     0x561412da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64565)[0m     @     0x561412e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64565)[0m     @     0x561412e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64565)[0m     @     0x561412da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64565)[0m     @     0x561412e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64565)[0m     @     0x561412e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64565)[0m     @     0x561412da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64565)[0m     @     0x561412e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x7ef37aa544f5 at::Tensor::copy_()
[2m[36m(pid=64596)[0m     @     0x7ef37cf278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64596)[0m     @     0x7ef37aa544f5 at::Tensor::copy_()
[2m[36m(pid=64596)[0m     @     0x7ef380aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64596)[0m     @     0x55ae1483afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64596)[0m     @     0x55ae14795b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64596)[0m     @     0x55ae14820baf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x55ae14821a20 method_vectorcall
[2m[36m(pid=64596)[0m     @     0x55ae14795bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64596)[0m     @     0x55ae14820baf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x55ae14821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64596)[0m     @     0x55ae14796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64596)[0m     @     0x55ae14820baf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x55ae14821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64596)[0m     @     0x55ae14796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64596)[0m     @     0x55ae14820baf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x55ae14821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64596)[0m     @     0x55ae14796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64596)[0m     @     0x55ae14820baf _PyEval_EvalCodeWithName
[2m[36m(pid=64596)[0m     @     0x55ae14821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64596)[0m     @     0x55ae14796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x7fb09cd89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64575)[0m     @     0x7fb09c4b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64575)[0m     @     0x7fb09c4b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64575)[0m     @     0x7fb09c4b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=64490)[0m     @     0x7f75c8ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64490)[0m     @     0x7f75c85cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64490)[0m     @     0x7f75c85d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64490)[0m     @     0x7f75c85d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=64582)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64582)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64582)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64582)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64582)[0m *** SIGSEGV (@0x0) received by PID 64582 (TID 0x7f1170973700) from PID 0; stack trace: ***
[2m[36m(pid=64582)[0m     @     0x7f117054c390 (unknown)
[2m[36m(pid=64582)[0m     @     0x7ee27032cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64582)[0m     @     0x7ee26fa577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64582)[0m     @     0x7ee26fa5a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64567)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64567)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64567)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64567)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64567)[0m *** SIGSEGV (@0x0) received by PID 64567 (TID 0x7fdd262b1700) from PID 0; stack trace: ***
[2m[36m(pid=64567)[0m     @     0x7fdd25e8a390 (unknown)
[2m[36m(pid=64471)[0m     @     0x7f18ee90a390 (unknown)
[2m[36m(pid=64471)[0m     @     0x7ee9ee601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64471)[0m     @     0x7ee9edd2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64471)[0m     @     0x7ee9edd2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64471)[0m     @     0x7ee9edd2fad3 at::TensorIterator::for_each()
[2m[36m(pid=64556)[0m     @     0x7f499c61b390 (unknown)
[2m[36m(pid=64556)[0m     @     0x7f1a9c5a1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64556)[0m     @     0x7f1a9bccc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64556)[0m     @     0x7f1a9bccf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64556)[0m     @     0x7f1a9bccfad3 at::TensorIterator::for_each()
[2m[36m(pid=64477)[0m     @     0x7eda5bc814f5 at::Tensor::copy_()
[2m[36m(pid=64477)[0m     @     0x7eda5e1548de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64477)[0m     @     0x7eda5bc814f5 at::Tensor::copy_()
[2m[36m(pid=64477)[0m     @     0x7eda61d2c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64477)[0m     @     0x56332d31afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64477)[0m     @     0x56332d275b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64477)[0m     @     0x56332d300baf _PyEval_EvalCodeWithName
[2m[36m(pid=64477)[0m     @     0x56332d301a20 method_vectorcall
[2m[36m(pid=64477)[0m     @     0x56332d275bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64477)[0m     @     0x56332d300baf _PyEval_EvalCodeWithName
[2m[36m(pid=64477)[0m     @     0x56332d301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64477)[0m     @     0x56332d276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64477)[0m     @     0x56332d300baf _PyEval_EvalCodeWithName
[2m[36m(pid=64477)[0m     @     0x56332d301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64477)[0m     @     0x56332d276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64477)[0m     @     0x56332d300baf _PyEval_EvalCodeWithName
[2m[36m(pid=64477)[0m     @     0x56332d301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64477)[0m     @     0x56332d276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64477)[0m     @     0x56332d300baf _PyEval_EvalCodeWithName
[2m[36m(pid=64477)[0m     @     0x56332d301643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64477)[0m     @     0x56332d276689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64569)[0m     @     0x7ed6e01cf4f5 at::Tensor::copy_()
[2m[36m(pid=64569)[0m     @     0x7ed6e26a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64569)[0m     @     0x7ed6e01cf4f5 at::Tensor::copy_()
[2m[36m(pid=64569)[0m     @     0x7ed6e627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64569)[0m     @     0x56282910dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64569)[0m     @     0x562829068b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64569)[0m     @     0x5628290f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64569)[0m     @     0x5628290f4a20 method_vectorcall
[2m[36m(pid=64569)[0m     @     0x562829068bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64569)[0m     @     0x5628290f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64569)[0m     @     0x5628290f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64569)[0m     @     0x562829069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64569)[0m     @     0x5628290f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64569)[0m     @     0x5628290f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64569)[0m     @     0x562829069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64569)[0m     @     0x5628290f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64569)[0m     @     0x5628290f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64569)[0m     @     0x562829069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x7f20e5e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64558)[0m     @     0x7f20e39cc4f5 at::Tensor::copy_()
[2m[36m(pid=64558)[0m     @     0x7f20e9a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64558)[0m     @     0x557f4977efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64558)[0m     @     0x557f496d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x557f49764baf _PyEval_EvalCodeWithName
[2m[36m(pid=64558)[0m     @     0x557f49765a20 method_vectorcall
[2m[36m(pid=64558)[0m     @     0x557f496d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x557f49764baf _PyEval_EvalCodeWithName
[2m[36m(pid=64558)[0m     @     0x557f49765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64558)[0m     @     0x557f496da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x557f49764baf _PyEval_EvalCodeWithName
[2m[36m(pid=64558)[0m     @     0x557f49765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64558)[0m     @     0x557f496da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x557f49764baf _PyEval_EvalCodeWithName
[2m[36m(pid=64558)[0m     @     0x557f49765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64558)[0m     @     0x557f496da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64558)[0m     @     0x557f49764baf _PyEval_EvalCodeWithName
[2m[36m(pid=64558)[0m     @     0x557f49765643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64558)[0m     @     0x557f496da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x7fc7fbef44f5 at::Tensor::copy_()
[2m[36m(pid=64559)[0m     @     0x7fc7fe3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64559)[0m     @     0x7fc7fbef44f5 at::Tensor::copy_()
[2m[36m(pid=64559)[0m     @     0x7fc801f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64559)[0m     @     0x561994f16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64559)[0m     @     0x561994e71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x561994efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64559)[0m     @     0x561994efda20 method_vectorcall
[2m[36m(pid=64559)[0m     @     0x561994e71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x561994efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64559)[0m     @     0x561994efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64559)[0m     @     0x561994e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x561994efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64559)[0m     @     0x561994efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64559)[0m     @     0x561994e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x561994efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64559)[0m     @     0x561994efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64559)[0m     @     0x561994e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64559)[0m     @     0x561994efcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64559)[0m     @     0x561994efd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64559)[0m     @     0x561994e72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x7facc42a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64533)[0m     @     0x7facc42a6388 at::native::copy_impl()
[2m[36m(pid=64533)[0m     @     0x7facc42a85a4 at::native::copy_()
[2m[36m(pid=64533)[0m     @     0x7facc49934f5 at::Tensor::copy_()
[2m[36m(pid=64533)[0m     @     0x7facc6e668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64573)[0m     @     0x7f5b076b64f5 at::Tensor::copy_()
[2m[36m(pid=64573)[0m     @     0x7f5b09b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64573)[0m     @     0x7f5b076b64f5 at::Tensor::copy_()
[2m[36m(pid=64573)[0m     @     0x7f5b0d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64573)[0m     @     0x561b53359fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64573)[0m     @     0x561b532b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b5333fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64573)[0m     @     0x561b53340a20 method_vectorcall
[2m[36m(pid=64573)[0m     @     0x561b532b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b5333fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64573)[0m     @     0x561b53340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64573)[0m     @     0x561b532b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b5333fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64573)[0m     @     0x561b53340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64573)[0m     @     0x561b532b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b5333fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64573)[0m     @     0x561b53340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64549)[0m     @     0x7f7e2312b4f5 at::Tensor::copy_()
[2m[36m(pid=64549)[0m     @     0x7f7e255fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64549)[0m     @     0x7f7e2312b4f5 at::Tensor::copy_()
[2m[36m(pid=64549)[0m     @     0x7f7e291d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64549)[0m     @     0x55a0c4409fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64549)[0m     @     0x55a0c4364b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64549)[0m     @     0x55a0c43efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64549)[0m     @     0x55a0c43f0a20 method_vectorcall
[2m[36m(pid=64549)[0m     @     0x55a0c4364bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64549)[0m     @     0x55a0c43efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64549)[0m     @     0x55a0c43f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64549)[0m     @     0x55a0c4365689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64549)[0m     @     0x55a0c43efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64549)[0m     @     0x55a0c43f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64549)[0m     @     0x55a0c4365689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64549)[0m     @     0x55a0c43efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64549)[0m     @     0x55a0c43f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64549)[0m     @     0x55a0c4365689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64549)[0m     @     0x55a0c43efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64549)[0m     @     0x55a0c43f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64549)[0m     @     0x55a0c4365689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x7ef2936b64f5 at::Tensor::copy_()
[2m[36m(pid=64580)[0m     @     0x7ef295b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64580)[0m     @     0x7ef2936b64f5 at::Tensor::copy_()
[2m[36m(pid=64580)[0m     @     0x7ef29976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64580)[0m     @     0x55b9249a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64580)[0m     @     0x55b9248feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x55b924989baf _PyEval_EvalCodeWithName
[2m[36m(pid=64580)[0m     @     0x55b92498aa20 method_vectorcall
[2m[36m(pid=64580)[0m     @     0x55b9248febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x55b924989baf _PyEval_EvalCodeWithName
[2m[36m(pid=64580)[0m     @     0x55b92498a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64580)[0m     @     0x55b9248ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x55b924989baf _PyEval_EvalCodeWithName
[2m[36m(pid=64580)[0m     @     0x55b92498a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64580)[0m     @     0x55b9248ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x55b924989baf _PyEval_EvalCodeWithName
[2m[36m(pid=64580)[0m     @     0x55b92498a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64580)[0m     @     0x55b9248ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64580)[0m     @     0x55b924989baf _PyEval_EvalCodeWithName
[2m[36m(pid=64580)[0m     @     0x55b92498a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64580)[0m     @     0x55b9248ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x7f303c9fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64474)[0m     @     0x7f303c9fbad3 at::TensorIterator::for_each()
[2m[36m(pid=64474)[0m     @     0x7f303c9fbd91 at::TensorIterator::for_each()
[2m[36m(pid=64474)[0m     @     0x7f303d2deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64474)[0m     @     0x7f303d301c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64597)[0m     @     0x7ee3053ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64597)[0m     @     0x7ee304af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64597)[0m     @     0x7ee304afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64597)[0m     @     0x7ee304afaad3 at::TensorIterator::for_each()
[2m[36m(pid=64595)[0m     @     0x7f9ba738f4f5 at::Tensor::copy_()
[2m[36m(pid=64595)[0m     @     0x7f9ba98628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64595)[0m     @     0x7f9ba738f4f5 at::Tensor::copy_()
[2m[36m(pid=64595)[0m     @     0x7f9bad43a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64595)[0m     @     0x561ae6bcffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64595)[0m     @     0x561ae6b2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64595)[0m     @     0x561ae6bb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64595)[0m     @     0x561ae6bb6a20 method_vectorcall
[2m[36m(pid=64595)[0m     @     0x561ae6b2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64595)[0m     @     0x561ae6bb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64595)[0m     @     0x561ae6bb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64595)[0m     @     0x561ae6b2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64595)[0m     @     0x561ae6bb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64595)[0m     @     0x561ae6bb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64595)[0m     @     0x561ae6b2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x7f2cae07af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64476)[0m     @     0x7f2cad7a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64476)[0m     @     0x7f2cad7a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64476)[0m     @     0x7f2cad7a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=64480)[0m     @     0x7f8072c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64480)[0m     @     0x7f80723407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64480)[0m     @     0x7f80723438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64480)[0m     @     0x7f8072343ad3 at::TensorIterator::for_each()
[2m[36m(pid=64544)[0m     @     0x7f99b2dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64544)[0m     @     0x7f99b2ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64544)[0m     @     0x7f99b2ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=64544)[0m     @     0x7f99b2ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=64602)[0m     @     0x7fae77ef44f5 at::Tensor::copy_()
[2m[36m(pid=64602)[0m     @     0x7fae7df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64602)[0m     @     0x55bc8d7b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64602)[0m     @     0x55bc8d70bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64602)[0m     @     0x55bc8d796baf _PyEval_EvalCodeWithName
[2m[36m(pid=64602)[0m     @     0x55bc8d797a20 method_vectorcall
[2m[36m(pid=64602)[0m     @     0x55bc8d70bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64602)[0m     @     0x55bc8d796baf _PyEval_EvalCodeWithName
[2m[36m(pid=64602)[0m     @     0x55bc8d797643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64602)[0m     @     0x55bc8d70c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64602)[0m     @     0x55bc8d796baf _PyEval_EvalCodeWithName
[2m[36m(pid=64602)[0m     @     0x55bc8d797643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64602)[0m     @     0x55bc8d70c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64602)[0m     @     0x55bc8d796baf _PyEval_EvalCodeWithName
[2m[36m(pid=64602)[0m     @     0x55bc8d797643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64602)[0m     @     0x55bc8d70c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64602)[0m     @     0x55bc8d796baf _PyEval_EvalCodeWithName
[2m[36m(pid=64602)[0m     @     0x55bc8d797643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64602)[0m     @     0x55bc8d70c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x7eeb6bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64481)[0m     @     0x7eeb6bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=64481)[0m     @     0x7eeb6bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=64481)[0m     @     0x7eeb6c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64481)[0m     @     0x7eeb6c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64489)[0m     @     0x7eebdb98e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64489)[0m     @     0x7eebdb9918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64489)[0m     @     0x7eebdb991ad3 at::TensorIterator::for_each()
[2m[36m(pid=64489)[0m     @     0x7eebdb991d91 at::TensorIterator::for_each()
[2m[36m(pid=64499)[0m     @     0x7f9e6c7605a4 at::native::copy_()
[2m[36m(pid=64499)[0m     @     0x7f9e6ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=64499)[0m     @     0x7f9e6f31e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64555)[0m     @     0x7fbb5f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=64555)[0m     @     0x7fbb5f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=64555)[0m     @     0x7fbb5f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64555)[0m     @     0x7fbb5f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64593)[0m     @     0x7ed5776244f5 at::Tensor::copy_()
[2m[36m(pid=64593)[0m     @     0x7ed57d6cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64593)[0m     @     0x55f255eacfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64593)[0m     @     0x55f255e07b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64593)[0m     @     0x55f255e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=64593)[0m     @     0x55f255e93a20 method_vectorcall
[2m[36m(pid=64593)[0m     @     0x55f255e07bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64593)[0m     @     0x55f255e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=64593)[0m     @     0x55f255e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64593)[0m     @     0x55f255e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64593)[0m     @     0x55f255e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=64593)[0m     @     0x55f255e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64593)[0m     @     0x55f255e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64593)[0m     @     0x55f255e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=64593)[0m     @     0x55f255e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64593)[0m     @     0x55f255e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64593)[0m     @     0x55f255e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=64593)[0m     @     0x55f255e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64593)[0m     @     0x55f255e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x7f74895227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64543)[0m     @     0x7f74895258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64543)[0m     @     0x7f7489525ad3 at::TensorIterator::for_each()
[2m[36m(pid=64584)[0m     @     0x7f610adea4f5 at::Tensor::copy_()
[2m[36m(pid=64584)[0m     @     0x7f6110e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64584)[0m     @     0x563bda4e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64584)[0m     @     0x563bda444b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64584)[0m     @     0x563bda4cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64584)[0m     @     0x563bda4d0a20 method_vectorcall
[2m[36m(pid=64584)[0m     @     0x563bda444bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64584)[0m     @     0x563bda4cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64584)[0m     @     0x563bda4d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64584)[0m     @     0x563bda445689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64584)[0m     @     0x563bda4cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64584)[0m     @     0x563bda4d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64584)[0m     @     0x563bda445689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64584)[0m     @     0x563bda4cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64584)[0m     @     0x563bda4d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64584)[0m     @     0x563bda445689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64584)[0m     @     0x563bda4cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64584)[0m     @     0x563bda4d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64584)[0m     @     0x563bda445689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x7efbb92cd5a4 at::native::copy_()
[2m[36m(pid=64546)[0m     @     0x7efbb99b84f5 at::Tensor::copy_()
[2m[36m(pid=64546)[0m     @     0x7efbbbe8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64589)[0m     @     0x7f8c8f40d4f5 at::Tensor::copy_()
[2m[36m(pid=64589)[0m     @     0x7f8c954b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64589)[0m     @     0x5591c0c0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64589)[0m     @     0x5591c0b68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64589)[0m     @     0x5591c0bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64589)[0m     @     0x5591c0bf4a20 method_vectorcall
[2m[36m(pid=64589)[0m     @     0x5591c0b68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64589)[0m     @     0x5591c0bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64589)[0m     @     0x5591c0bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64589)[0m     @     0x5591c0b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64589)[0m     @     0x5591c0bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64589)[0m     @     0x5591c0bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64589)[0m     @     0x5591c0b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64589)[0m     @     0x5591c0bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64589)[0m     @     0x5591c0bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64589)[0m     @     0x5591c0b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64589)[0m     @     0x5591c0bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64589)[0m     @     0x5591c0bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64589)[0m     @     0x5591c0b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x7fc43f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64493)[0m     @     0x7fc43f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=64493)[0m     @     0x7fc43f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=64553)[0m     @     0x7fc5fa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=64553)[0m     @     0x7fc60037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64553)[0m     @     0x55ea09bfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64553)[0m     @     0x55ea09b55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64553)[0m     @     0x55ea09be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64553)[0m     @     0x55ea09be1a20 method_vectorcall
[2m[36m(pid=64553)[0m     @     0x55ea09b55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64553)[0m     @     0x55ea09be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64553)[0m     @     0x55ea09be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64553)[0m     @     0x55ea09b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64553)[0m     @     0x55ea09be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64553)[0m     @     0x55ea09be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64553)[0m     @     0x55ea09b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64553)[0m     @     0x55ea09be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64553)[0m     @     0x55ea09be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64553)[0m     @     0x55ea09b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64553)[0m     @     0x55ea09be0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64553)[0m     @     0x55ea09be1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64553)[0m     @     0x55ea09b56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x7fae545d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=64491)[0m     @     0x7fae545d2d91 at::TensorIterator::for_each()
[2m[36m(pid=64491)[0m     @     0x7fae54eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64491)[0m     @     0x7fae54ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64538)[0m     @     0x7f01782ffad3 at::TensorIterator::for_each()
[2m[36m(pid=64538)[0m     @     0x7f01782ffd91 at::TensorIterator::for_each()
[2m[36m(pid=64538)[0m     @     0x7f0178be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64538)[0m     @     0x7f0178c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64475)[0m     @     0x7f47fc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=64475)[0m     @     0x7f47fc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=64475)[0m     @     0x7f47fd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64475)[0m     @     0x7f47fd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64483)[0m     @     0x7f5ea7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=64483)[0m     @     0x7f5eadc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64483)[0m     @     0x55c184746fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64483)[0m     @     0x55c1846a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64483)[0m     @     0x55c18472cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64483)[0m     @     0x55c18472da20 method_vectorcall
[2m[36m(pid=64483)[0m     @     0x55c1846a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64483)[0m     @     0x55c18472cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64483)[0m     @     0x55c18472d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64483)[0m     @     0x55c1846a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64483)[0m     @     0x55c18472cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64483)[0m     @     0x55c18472d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64483)[0m     @     0x55c1846a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64483)[0m     @     0x55c18472cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64483)[0m     @     0x55c18472d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64483)[0m     @     0x55c1846a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64483)[0m     @     0x55c18472cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64483)[0m     @     0x55c18472d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64483)[0m     @     0x55c1846a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x7eeb3d7d6d91 at::TensorIterator::for_each()
[2m[36m(pid=64534)[0m     @     0x7eeb3e0b9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64534)[0m     @     0x7eeb3e0dcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64534)[0m     @     0x7eeb3d57ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64487)[0m     @     0x7f2fd8e22d91 at::TensorIterator::for_each()
[2m[36m(pid=64487)[0m     @     0x7f2fd9705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64487)[0m     @     0x7f2fd9728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64487)[0m     @     0x7f2fd8bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64497)[0m     @     0x7f145e5c1d91 at::TensorIterator::for_each()
[2m[36m(pid=64497)[0m     @     0x7f145eea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64497)[0m     @     0x7f145eec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64500)[0m     @     0x7fa8e075fd91 at::TensorIterator::for_each()
[2m[36m(pid=64500)[0m     @     0x7fa8e1042b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64500)[0m     @     0x7fa8e1065c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64500)[0m     @     0x7fa8e0507a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64537)[0m     @     0x7f05524dead3 at::TensorIterator::for_each()
[2m[36m(pid=64537)[0m     @     0x7f05524ded91 at::TensorIterator::for_each()
[2m[36m(pid=64537)[0m     @     0x7f0552dc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64537)[0m     @     0x7f0552de4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64560)[0m     @     0x7f079a0faad3 at::TensorIterator::for_each()
[2m[36m(pid=64560)[0m     @     0x7f079a0fad91 at::TensorIterator::for_each()
[2m[36m(pid=64560)[0m     @     0x7f079a9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64503)[0m     @     0x7eda9f9bead3 at::TensorIterator::for_each()
[2m[36m(pid=64503)[0m     @     0x7eda9f9bed91 at::TensorIterator::for_each()
[2m[36m(pid=64472)[0m     @     0x7f5189fc5ad3 at::TensorIterator::for_each()
[2m[36m(pid=64472)[0m     @     0x7f5189fc5d91 at::TensorIterator::for_each()
[2m[36m(pid=64472)[0m     @     0x7f518a8a8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64472)[0m     @     0x7f518a8cbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64473)[0m     @     0x7f3d4cc11ad3 at::TensorIterator::for_each()
[2m[36m(pid=64473)[0m     @     0x7f3d4cc11d91 at::TensorIterator::for_each()
[2m[36m(pid=64473)[0m     @     0x7f3d4d4f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64473)[0m     @     0x7f3d4d517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64482)[0m     @     0x7f48ab0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64482)[0m     @     0x7f48ab0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=64545)[0m     @     0x7f9f7c7ab390 (unknown)
[2m[36m(pid=64545)[0m     @     0x7f707c70ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64545)[0m     @     0x7f707be397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64536)[0m     @     0x7f37b70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64536)[0m     @     0x7f37b700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64536)[0m     @     0x7f37b700cad3 at::TensorIterator::for_each()
[2m[36m(pid=64485)[0m     @     0x7f0c17384ad3 at::TensorIterator::for_each()
[2m[36m(pid=64485)[0m     @     0x7f0c17384d91 at::TensorIterator::for_each()
[2m[36m(pid=64485)[0m     @     0x7f0c17c67b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64492)[0m     @     0x7f559f400390 (unknown)
[2m[36m(pid=64492)[0m     @     0x7f269f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64492)[0m     @     0x7f269e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64492)[0m     @     0x7f269e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64574)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64574)[0m *** SIGSEGV (@0x0) received by PID 64574 (TID 0x7fcc87767700) from PID 0; stack trace: ***
[2m[36m(pid=64574)[0m     @     0x7fcc87340390 (unknown)
[2m[36m(pid=64486)[0m     @     0x7f0ef4776d91 at::TensorIterator::for_each()
[2m[36m(pid=64486)[0m     @     0x7f0ef5059b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64486)[0m     @     0x7f0ef507cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64486)[0m     @     0x7f0ef451ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64572)[0m     @     0x7efe2067dad3 at::TensorIterator::for_each()
[2m[36m(pid=64572)[0m     @     0x7efe2067dd91 at::TensorIterator::for_each()
[2m[36m(pid=64572)[0m     @     0x7efe20f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64495)[0m     @     0x7f6657f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=64495)[0m     @     0x7f6657f53d91 at::TensorIterator::for_each()
[2m[36m(pid=64547)[0m     @     0x7f9169bbff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64547)[0m     @     0x7f91692ea7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64547)[0m     @     0x7f91692ed8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64508)[0m     @     0x7f538497d390 (unknown)
[2m[36m(pid=64508)[0m     @     0x7f2484774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64508)[0m     @     0x7f2483e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64535)[0m     @     0x7ef0b0136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64535)[0m     @     0x7ef0af8617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64535)[0m     @     0x7ef0af8648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64535)[0m     @     0x7ef0af864ad3 at::TensorIterator::for_each()
[2m[36m(pid=64507)[0m     @     0x7f2edf0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64507)[0m     @     0x7f2edf0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64507)[0m     @     0x7f2edf0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=64507)[0m     @     0x7f2edf0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=64478)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64478)[0m *** SIGSEGV (@0x0) received by PID 64478 (TID 0x7f67bb91b700) from PID 0; stack trace: ***
[2m[36m(pid=64478)[0m     @     0x7f67bb4f4390 (unknown)
[2m[36m(pid=64539)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=64539)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=64539)[0m *** Aborted at 1604573461 (unix time) try "date -d @1604573461" if you are using GNU date ***
[2m[36m(pid=64554)[0m     @     0x7f868fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=64554)[0m     @     0x7f868fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=64554)[0m     @     0x7f8690344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64554)[0m     @     0x7f8690367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64554)[0m     @     0x7f868f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64554)[0m     @     0x7f868f807388 at::native::copy_impl()
[2m[36m(pid=64570)[0m     @     0x7f50b85408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64570)[0m     @     0x7f50b8540ad3 at::TensorIterator::for_each()
[2m[36m(pid=64570)[0m     @     0x7f50b8540d91 at::TensorIterator::for_each()
[2m[36m(pid=64570)[0m     @     0x7f50b8e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64570)[0m     @     0x7f50b8e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64502)[0m     @     0x7f2ee12a8d91 at::TensorIterator::for_each()
[2m[36m(pid=64502)[0m     @     0x7f2ee1b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64502)[0m     @     0x7f2ee1baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64502)[0m     @     0x7f2ee1050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64548)[0m     @     0x7f6bd5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=64548)[0m     @     0x7f6bd81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64548)[0m     @     0x7f6bd5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=64548)[0m     @     0x7f6bdbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64548)[0m     @     0x55a2f9a9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64548)[0m     @     0x55a2f99f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64548)[0m     @     0x55a2f9a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=64548)[0m     @     0x55a2f9a83a20 method_vectorcall
[2m[36m(pid=64548)[0m     @     0x55a2f99f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64548)[0m     @     0x55a2f9a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=64548)[0m     @     0x55a2f9a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64548)[0m     @     0x55a2f99f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64548)[0m     @     0x55a2f9a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=64548)[0m     @     0x55a2f9a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64548)[0m     @     0x55a2f99f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64548)[0m     @     0x55a2f9a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=64548)[0m     @     0x55a2f9a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64488)[0m     @     0x7f791d552d91 at::TensorIterator::for_each()
[2m[36m(pid=64488)[0m     @     0x7f791de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64488)[0m     @     0x7f791de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64488)[0m     @     0x7f791d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64552)[0m     @     0x7faad896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64552)[0m     @     0x559aa52eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64552)[0m     @     0x559aa5249b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x559aa52d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64552)[0m     @     0x559aa52d5a20 method_vectorcall
[2m[36m(pid=64552)[0m     @     0x559aa5249bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x559aa52d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64552)[0m     @     0x559aa52d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64552)[0m     @     0x559aa524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x559aa52d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64552)[0m     @     0x559aa52d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64552)[0m     @     0x559aa524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x559aa52d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64552)[0m     @     0x559aa52d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64552)[0m     @     0x559aa524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64552)[0m     @     0x559aa52d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64552)[0m     @     0x559aa52d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64552)[0m     @     0x559aa524a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x7f1d2ab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64540)[0m     @     0x7f1d2864c4f5 at::Tensor::copy_()
[2m[36m(pid=64540)[0m     @     0x7f1d2e6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64540)[0m     @     0x561262c55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64540)[0m     @     0x561262bb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x561262c3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64540)[0m     @     0x561262c3ca20 method_vectorcall
[2m[36m(pid=64540)[0m     @     0x561262bb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x561262c3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64540)[0m     @     0x561262c3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64540)[0m     @     0x561262bb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x561262c3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64540)[0m     @     0x561262c3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64540)[0m     @     0x561262bb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x561262c3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64540)[0m     @     0x561262c3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64540)[0m     @     0x561262bb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64540)[0m     @     0x561262c3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64540)[0m     @     0x561262c3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64540)[0m     @     0x561262bb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64600)[0m     @     0x55fe4d6debaf _PyEval_EvalCodeWithName
[2m[36m(pid=64600)[0m     @     0x55fe4d6df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64600)[0m     @     0x55fe4d654689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x7eef4f1d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64551)[0m     @     0x556fa4626fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64551)[0m     @     0x556fa4581b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x556fa460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64551)[0m     @     0x556fa460da20 method_vectorcall
[2m[36m(pid=64551)[0m     @     0x556fa4581bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x556fa460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64551)[0m     @     0x556fa460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64551)[0m     @     0x556fa4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x556fa460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64551)[0m     @     0x556fa460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64551)[0m     @     0x556fa4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x556fa460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64551)[0m     @     0x556fa460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64551)[0m     @     0x556fa4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64551)[0m     @     0x556fa460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64551)[0m     @     0x556fa460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64551)[0m     @     0x556fa4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x7f7ab0d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64576)[0m     @     0x56031b7fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64576)[0m     @     0x56031b755b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x56031b7e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64576)[0m     @     0x56031b7e1a20 method_vectorcall
[2m[36m(pid=64576)[0m     @     0x56031b755bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x56031b7e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64576)[0m     @     0x56031b7e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64576)[0m     @     0x56031b756689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x56031b7e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64576)[0m     @     0x56031b7e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64576)[0m     @     0x56031b756689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x56031b7e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64576)[0m     @     0x56031b7e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64576)[0m     @     0x56031b756689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64576)[0m     @     0x56031b7e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64576)[0m     @     0x56031b7e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64576)[0m     @     0x56031b756689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x7f288aa4ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64561)[0m     @     0x7f288aa49388 at::native::copy_impl()
[2m[36m(pid=64561)[0m     @     0x7f288aa4b5a4 at::native::copy_()
[2m[36m(pid=64550)[0m     @     0x7f47ce641d91 at::TensorIterator::for_each()
[2m[36m(pid=64550)[0m     @     0x7f47cef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64550)[0m     @     0x7f47cef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64550)[0m     @     0x7f47ce3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64550)[0m     @     0x7f47ce3e7388 at::native::copy_impl()
[2m[36m(pid=64563)[0m     @     0x7f9d245dad91 at::TensorIterator::for_each()
[2m[36m(pid=64563)[0m     @     0x7f9d24ebdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64563)[0m     @     0x7f9d24ee0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64563)[0m     @     0x7f9d24382a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64563)[0m     @     0x7f9d24380388 at::native::copy_impl()
[2m[36m(pid=64506)[0m     @     0x7fcb5aed7d91 at::TensorIterator::for_each()
[2m[36m(pid=64506)[0m     @     0x7fcb5b7bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64506)[0m     @     0x7fcb5b7ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64506)[0m     @     0x7fcb5ac7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64506)[0m     @     0x7fcb5ac7d388 at::native::copy_impl()
[2m[36m(pid=64565)[0m     @     0x561412e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64565)[0m     @     0x561412da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x7fb09c4b7d91 at::TensorIterator::for_each()
[2m[36m(pid=64575)[0m     @     0x7fb09cd9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64575)[0m     @     0x7fb09cdbdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64575)[0m     @     0x7fb09c25fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64575)[0m     @     0x7fb09c25d388 at::native::copy_impl()
[2m[36m(pid=64490)[0m     @     0x7f75c85d2d91 at::TensorIterator::for_each()
[2m[36m(pid=64490)[0m     @     0x7f75c8eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64490)[0m     @     0x7f75c8ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64490)[0m     @     0x7f75c837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64490)[0m     @     0x7f75c8378388 at::native::copy_impl()
[2m[36m(pid=64582)[0m     @     0x7ee26fa5aad3 at::TensorIterator::for_each()
[2m[36m(pid=64582)[0m     @     0x7ee26fa5ad91 at::TensorIterator::for_each()
[2m[36m(pid=64582)[0m     @     0x7ee27033db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64582)[0m     @     0x7ee270360c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64567)[0m     @     0x7fae25c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64567)[0m     @     0x7fae253387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64567)[0m     @     0x7fae2533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64471)[0m     @     0x7ee9edd2fd91 at::TensorIterator::for_each()
[2m[36m(pid=64471)[0m     @     0x7ee9ee612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64471)[0m     @     0x7ee9ee635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64471)[0m     @     0x7ee9edad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64556)[0m     @     0x7f1a9bccfd91 at::TensorIterator::for_each()
[2m[36m(pid=64556)[0m     @     0x7f1a9c5b2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64556)[0m     @     0x7f1a9c5d5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64556)[0m     @     0x7f1a9ba77a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64569)[0m     @     0x5628290f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64569)[0m     @     0x5628290f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64569)[0m     @     0x562829069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x7facc49934f5 at::Tensor::copy_()
[2m[36m(pid=64533)[0m     @     0x7faccaa3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64533)[0m     @     0x55601cc18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64533)[0m     @     0x55601cb73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x55601cbfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64533)[0m     @     0x55601cbffa20 method_vectorcall
[2m[36m(pid=64533)[0m     @     0x55601cb73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x55601cbfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64533)[0m     @     0x55601cbff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64533)[0m     @     0x55601cb74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x55601cbfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64533)[0m     @     0x55601cbff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64533)[0m     @     0x55601cb74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x55601cbfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64533)[0m     @     0x55601cbff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64533)[0m     @     0x55601cb74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64533)[0m     @     0x55601cbfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64533)[0m     @     0x55601cbff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64533)[0m     @     0x55601cb74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b532b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64573)[0m     @     0x561b5333fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64573)[0m     @     0x561b53340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64573)[0m     @     0x561b532b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x7f303c7a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64474)[0m     @     0x7f303c7a1388 at::native::copy_impl()
[2m[36m(pid=64474)[0m     @     0x7f303c7a35a4 at::native::copy_()
[2m[36m(pid=64474)[0m     @     0x7f303ce8e4f5 at::Tensor::copy_()
[2m[36m(pid=64474)[0m     @     0x7f303f3618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64597)[0m     @     0x7ee304afad91 at::TensorIterator::for_each()
[2m[36m(pid=64597)[0m     @     0x7ee3053ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64597)[0m     @     0x7ee305400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64597)[0m     @     0x7ee3048a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64597)[0m     @     0x7ee3048a0388 at::native::copy_impl()
[2m[36m(pid=64597)[0m     @     0x7ee3048a25a4 at::native::copy_()
[2m[36m(pid=64595)[0m     @     0x561ae6bb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64595)[0m     @     0x561ae6bb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64595)[0m     @     0x561ae6b2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64595)[0m     @     0x561ae6bb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64595)[0m     @     0x561ae6bb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64595)[0m     @     0x561ae6b2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x7f2cad7a8d91 at::TensorIterator::for_each()
[2m[36m(pid=64476)[0m     @     0x7f2cae08bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64476)[0m     @     0x7f2cae0aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64476)[0m     @     0x7f2cad550a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64476)[0m     @     0x7f2cad54e388 at::native::copy_impl()
[2m[36m(pid=64480)[0m     @     0x7f8072343d91 at::TensorIterator::for_each()
[2m[36m(pid=64480)[0m     @     0x7f8072c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64480)[0m     @     0x7f8072c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64480)[0m     @     0x7f80720eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64480)[0m     @     0x7f80720e9388 at::native::copy_impl()
[2m[36m(pid=64480)[0m     @     0x7f80720eb5a4 at::native::copy_()
[2m[36m(pid=64544)[0m     @     0x7f99b36bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64544)[0m     @     0x7f99b36e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64544)[0m     @     0x7f99b2b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64544)[0m     @     0x7f99b2b82388 at::native::copy_impl()
[2m[36m(pid=64544)[0m     @     0x7f99b2b845a4 at::native::copy_()
[2m[36m(pid=64481)[0m     @     0x7eeb6bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64481)[0m     @     0x7eeb6bc48388 at::native::copy_impl()
[2m[36m(pid=64481)[0m     @     0x7eeb6bc4a5a4 at::native::copy_()
[2m[36m(pid=64481)[0m     @     0x7eeb6c3354f5 at::Tensor::copy_()
[2m[36m(pid=64481)[0m     @     0x7eeb6e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64489)[0m     @     0x7eebdc274b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64489)[0m     @     0x7eebdc297c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64489)[0m     @     0x7eebdb739a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64489)[0m     @     0x7eebdb737388 at::native::copy_impl()
[2m[36m(pid=64489)[0m     @     0x7eebdb7395a4 at::native::copy_()
[2m[36m(pid=64499)[0m     @     0x7f9e6ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=64499)[0m     @     0x7f9e72ef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64499)[0m     @     0x55dfe78d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64499)[0m     @     0x55dfe782eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64499)[0m     @     0x55dfe78b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64499)[0m     @     0x55dfe78baa20 method_vectorcall
[2m[36m(pid=64499)[0m     @     0x55dfe782ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64499)[0m     @     0x55dfe78b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64499)[0m     @     0x55dfe78ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64499)[0m     @     0x55dfe782f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64499)[0m     @     0x55dfe78b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64499)[0m     @     0x55dfe78ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64499)[0m     @     0x55dfe782f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64499)[0m     @     0x55dfe78b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64499)[0m     @     0x55dfe78ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64499)[0m     @     0x55dfe782f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64499)[0m     @     0x55dfe78b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64499)[0m     @     0x55dfe78ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64499)[0m     @     0x55dfe782f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x7fbb5edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64555)[0m     @     0x7fbb5edb2388 at::native::copy_impl()
[2m[36m(pid=64555)[0m     @     0x7fbb5edb45a4 at::native::copy_()
[2m[36m(pid=64555)[0m     @     0x7fbb5f49f4f5 at::Tensor::copy_()
[2m[36m(pid=64555)[0m     @     0x7fbb619728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64543)[0m     @     0x7f7489525d91 at::TensorIterator::for_each()
[2m[36m(pid=64543)[0m     @     0x7f7489e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64543)[0m     @     0x7f7489e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64543)[0m     @     0x7f74892cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64543)[0m     @     0x7f74892cb388 at::native::copy_impl()
[2m[36m(pid=64543)[0m     @     0x7f74892cd5a4 at::native::copy_()
[2m[36m(pid=64546)[0m     @     0x7efbb99b84f5 at::Tensor::copy_()
[2m[36m(pid=64546)[0m     @     0x7efbbfa6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64546)[0m     @     0x55bf8ac0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64546)[0m     @     0x55bf8ab68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x55bf8abf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64546)[0m     @     0x55bf8abf4a20 method_vectorcall
[2m[36m(pid=64546)[0m     @     0x55bf8ab68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x55bf8abf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64546)[0m     @     0x55bf8abf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64546)[0m     @     0x55bf8ab69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x55bf8abf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64546)[0m     @     0x55bf8abf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64546)[0m     @     0x55bf8ab69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x55bf8abf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64546)[0m     @     0x55bf8abf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64546)[0m     @     0x55bf8ab69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64546)[0m     @     0x55bf8abf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64546)[0m     @     0x55bf8abf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64546)[0m     @     0x55bf8ab69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x7fc43f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64493)[0m     @     0x7fc43f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64493)[0m     @     0x7fc43edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64493)[0m     @     0x7fc43edb2388 at::native::copy_impl()
[2m[36m(pid=64493)[0m     @     0x7fc43edb45a4 at::native::copy_()
[2m[36m(pid=64491)[0m     @     0x7fae5437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64491)[0m     @     0x7fae54378388 at::native::copy_impl()
[2m[36m(pid=64491)[0m     @     0x7fae5437a5a4 at::native::copy_()
[2m[36m(pid=64491)[0m     @     0x7fae54a654f5 at::Tensor::copy_()
[2m[36m(pid=64491)[0m     @     0x7fae56f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64538)[0m     @     0x7f01780a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64538)[0m     @     0x7f01780a5388 at::native::copy_impl()
[2m[36m(pid=64538)[0m     @     0x7f01780a75a4 at::native::copy_()
[2m[36m(pid=64538)[0m     @     0x7f01787924f5 at::Tensor::copy_()
[2m[36m(pid=64538)[0m     @     0x7f017ac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64475)[0m     @     0x7f47fc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64475)[0m     @     0x7f47fc589388 at::native::copy_impl()
[2m[36m(pid=64475)[0m     @     0x7f47fc58b5a4 at::native::copy_()
[2m[36m(pid=64475)[0m     @     0x7f47fcc764f5 at::Tensor::copy_()
[2m[36m(pid=64475)[0m     @     0x7f47ff1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64534)[0m     @     0x7eeb3d57c388 at::native::copy_impl()
[2m[36m(pid=64534)[0m     @     0x7eeb3d57e5a4 at::native::copy_()
[2m[36m(pid=64534)[0m     @     0x7eeb3dc694f5 at::Tensor::copy_()
[2m[36m(pid=64534)[0m     @     0x7eeb4013c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64487)[0m     @     0x7f2fd8bc8388 at::native::copy_impl()
[2m[36m(pid=64487)[0m     @     0x7f2fd8bca5a4 at::native::copy_()
[2m[36m(pid=64487)[0m     @     0x7f2fd92b54f5 at::Tensor::copy_()
[2m[36m(pid=64487)[0m     @     0x7f2fdb7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64497)[0m     @     0x7f145e369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64497)[0m     @     0x7f145e367388 at::native::copy_impl()
[2m[36m(pid=64497)[0m     @     0x7f145e3695a4 at::native::copy_()
[2m[36m(pid=64497)[0m     @     0x7f145ea544f5 at::Tensor::copy_()
[2m[36m(pid=64497)[0m     @     0x7f1460f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64500)[0m     @     0x7fa8e0505388 at::native::copy_impl()
[2m[36m(pid=64500)[0m     @     0x7fa8e05075a4 at::native::copy_()
[2m[36m(pid=64500)[0m     @     0x7fa8e0bf24f5 at::Tensor::copy_()
[2m[36m(pid=64500)[0m     @     0x7fa8e30c58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64537)[0m     @     0x7f0552286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64537)[0m     @     0x7f0552284388 at::native::copy_impl()
[2m[36m(pid=64537)[0m     @     0x7f05522865a4 at::native::copy_()
[2m[36m(pid=64537)[0m     @     0x7f05529714f5 at::Tensor::copy_()
[2m[36m(pid=64537)[0m     @     0x7f0554e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64560)[0m     @     0x7f079aa00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64560)[0m     @     0x7f0799ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64560)[0m     @     0x7f0799ea0388 at::native::copy_impl()
[2m[36m(pid=64560)[0m     @     0x7f0799ea25a4 at::native::copy_()
[2m[36m(pid=64503)[0m     @     0x7edaa02a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64503)[0m     @     0x7edaa02c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64503)[0m     @     0x7eda9f766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64503)[0m     @     0x7eda9f764388 at::native::copy_impl()
[2m[36m(pid=64503)[0m     @     0x7eda9f7665a4 at::native::copy_()
[2m[36m(pid=64503)[0m     @     0x7eda9fe514f5 at::Tensor::copy_()
[2m[36m(pid=64472)[0m     @     0x7f5189d6da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64472)[0m     @     0x7f5189d6b388 at::native::copy_impl()
[2m[36m(pid=64472)[0m     @     0x7f5189d6d5a4 at::native::copy_()
[2m[36m(pid=64472)[0m     @     0x7f518a4584f5 at::Tensor::copy_()
[2m[36m(pid=64472)[0m     @     0x7f518c92b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64473)[0m     @     0x7f3d4c9b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64473)[0m     @     0x7f3d4c9b7388 at::native::copy_impl()
[2m[36m(pid=64473)[0m     @     0x7f3d4c9b95a4 at::native::copy_()
[2m[36m(pid=64473)[0m     @     0x7f3d4d0a44f5 at::Tensor::copy_()
[2m[36m(pid=64482)[0m     @     0x7f48ab0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=64482)[0m     @     0x7f48ab9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64482)[0m     @     0x7f48ab9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64482)[0m     @     0x7f48aae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64482)[0m     @     0x7f48aae99388 at::native::copy_impl()
[2m[36m(pid=64545)[0m     @     0x7f707be3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64545)[0m     @     0x7f707be3cad3 at::TensorIterator::for_each()
[2m[36m(pid=64545)[0m     @     0x7f707be3cd91 at::TensorIterator::for_each()
[2m[36m(pid=64545)[0m     @     0x7f707c71fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64545)[0m     @     0x7f707c742c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64536)[0m     @     0x7f37b700cd91 at::TensorIterator::for_each()
[2m[36m(pid=64536)[0m     @     0x7f37b78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64536)[0m     @     0x7f37b7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64536)[0m     @     0x7f37b6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64536)[0m     @     0x7f37b6db2388 at::native::copy_impl()
[2m[36m(pid=64485)[0m     @     0x7f0c17c8ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64485)[0m     @     0x7f0c1712ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64485)[0m     @     0x7f0c1712a388 at::native::copy_impl()
[2m[36m(pid=64485)[0m     @     0x7f0c1712c5a4 at::native::copy_()
[2m[36m(pid=64492)[0m     @     0x7f269e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=64492)[0m     @     0x7f269e957d91 at::TensorIterator::for_each()
[2m[36m(pid=64492)[0m     @     0x7f269f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64492)[0m     @     0x7f269f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64574)[0m     @     0x7f9d87229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64486)[0m     @     0x7f0ef451c388 at::native::copy_impl()
[2m[36m(pid=64486)[0m     @     0x7f0ef451e5a4 at::native::copy_()
[2m[36m(pid=64486)[0m     @     0x7f0ef4c094f5 at::Tensor::copy_()
[2m[36m(pid=64486)[0m     @     0x7f0ef70dc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64572)[0m     @     0x7efe20f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64572)[0m     @     0x7efe20425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64572)[0m     @     0x7efe20423388 at::native::copy_impl()
[2m[36m(pid=64572)[0m     @     0x7efe204255a4 at::native::copy_()
[2m[36m(pid=64572)[0m     @     0x7efe20b104f5 at::Tensor::copy_()
[2m[36m(pid=64495)[0m     @     0x7f6658836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64495)[0m     @     0x7f6658859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64495)[0m     @     0x7f6657cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64495)[0m     @     0x7f6657cf9388 at::native::copy_impl()
[2m[36m(pid=64547)[0m     @     0x7f91692edad3 at::TensorIterator::for_each()
[2m[36m(pid=64547)[0m     @     0x7f91692edd91 at::TensorIterator::for_each()
[2m[36m(pid=64547)[0m     @     0x7f9169bd0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64547)[0m     @     0x7f9169bf3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64547)[0m     @     0x7f9169095a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64547)[0m     @     0x7f9169093388 at::native::copy_impl()
[2m[36m(pid=64508)[0m     @     0x7f2483ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64508)[0m     @     0x7f2483ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=64508)[0m     @     0x7f2483ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=64508)[0m     @     0x7f2484785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64508)[0m     @     0x7f24847a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64535)[0m     @     0x7ef0af864d91 at::TensorIterator::for_each()
[2m[36m(pid=64535)[0m     @     0x7ef0b0147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64535)[0m     @     0x7ef0b016ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64535)[0m     @     0x7ef0af60ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64535)[0m     @     0x7ef0af60a388 at::native::copy_impl()
[2m[36m(pid=64507)[0m     @     0x7f2edf9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64507)[0m     @     0x7f2edf9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64507)[0m     @     0x7f2edee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64507)[0m     @     0x7f2edee99388 at::native::copy_impl()
[2m[36m(pid=64478)[0m     @     0x7f38bb43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64478)[0m     @     0x7f38bab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64539)[0m PC: @                0x0 (unknown)
[2m[36m(pid=64539)[0m *** SIGSEGV (@0x0) received by PID 64539 (TID 0x7ff5203c1700) from PID 0; stack trace: ***
[2m[36m(pid=64539)[0m     @     0x7ff51ff9a390 (unknown)
[2m[36m(pid=64554)[0m     @     0x7f868f8095a4 at::native::copy_()
[2m[36m(pid=64554)[0m     @     0x7f868fef44f5 at::Tensor::copy_()
[2m[36m(pid=64570)[0m     @     0x7f50b82e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64570)[0m     @     0x7f50b82e6388 at::native::copy_impl()
[2m[36m(pid=64570)[0m     @     0x7f50b82e85a4 at::native::copy_()
[2m[36m(pid=64502)[0m     @     0x7f2ee104e388 at::native::copy_impl()
[2m[36m(pid=64502)[0m     @     0x7f2ee10505a4 at::native::copy_()
[2m[36m(pid=64502)[0m     @     0x7f2ee173b4f5 at::Tensor::copy_()
[2m[36m(pid=64502)[0m     @     0x7f2ee3c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64548)[0m     @     0x55a2f99f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64548)[0m     @     0x55a2f9a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=64548)[0m     @     0x55a2f9a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64548)[0m     @     0x55a2f99f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x7f791d2f8388 at::native::copy_impl()
[2m[36m(pid=64488)[0m     @     0x7f791d2fa5a4 at::native::copy_()
[2m[36m(pid=64488)[0m     @     0x7f791d9e54f5 at::Tensor::copy_()
[2m[36m(pid=64488)[0m     @     0x7f791feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64561)[0m     @     0x7f288b1364f5 at::Tensor::copy_()
[2m[36m(pid=64561)[0m     @     0x7f288d6098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64561)[0m     @     0x7f288b1364f5 at::Tensor::copy_()
[2m[36m(pid=64561)[0m     @     0x7f28911e179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64561)[0m     @     0x5635c61cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64561)[0m     @     0x5635c6125b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x5635c61b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64561)[0m     @     0x5635c61b1a20 method_vectorcall
[2m[36m(pid=64561)[0m     @     0x5635c6125bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x5635c61b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64561)[0m     @     0x5635c61b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64561)[0m     @     0x5635c6126689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x5635c61b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64561)[0m     @     0x5635c61b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64561)[0m     @     0x5635c6126689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x5635c61b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64561)[0m     @     0x5635c61b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64561)[0m     @     0x5635c6126689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64561)[0m     @     0x5635c61b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64561)[0m     @     0x5635c61b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64561)[0m     @     0x5635c6126689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x7f47ce3e95a4 at::native::copy_()
[2m[36m(pid=64550)[0m     @     0x7f47cead44f5 at::Tensor::copy_()
[2m[36m(pid=64550)[0m     @     0x7f47d0fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64550)[0m     @     0x7f47cead44f5 at::Tensor::copy_()
[2m[36m(pid=64550)[0m     @     0x7f47d4b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64550)[0m     @     0x5630e2439fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64550)[0m     @     0x5630e2394b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x5630e241fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64550)[0m     @     0x5630e2420a20 method_vectorcall
[2m[36m(pid=64550)[0m     @     0x5630e2394bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x5630e241fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64550)[0m     @     0x5630e2420643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64550)[0m     @     0x5630e2395689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x5630e241fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64550)[0m     @     0x5630e2420643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64550)[0m     @     0x5630e2395689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x7f9d243825a4 at::native::copy_()
[2m[36m(pid=64563)[0m     @     0x7f9d24a6d4f5 at::Tensor::copy_()
[2m[36m(pid=64563)[0m     @     0x7f9d26f408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64506)[0m     @     0x7fcb5ac7f5a4 at::native::copy_()
[2m[36m(pid=64506)[0m     @     0x7fcb5b36a4f5 at::Tensor::copy_()
[2m[36m(pid=64506)[0m     @     0x7fcb5d83d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64575)[0m     @     0x7fb09c25f5a4 at::native::copy_()
[2m[36m(pid=64575)[0m     @     0x7fb09c94a4f5 at::Tensor::copy_()
[2m[36m(pid=64575)[0m     @     0x7fb09ee1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64490)[0m     @     0x7f75c837a5a4 at::native::copy_()
[2m[36m(pid=64490)[0m     @     0x7f75c8a654f5 at::Tensor::copy_()
[2m[36m(pid=64490)[0m     @     0x7f75caf388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64490)[0m     @     0x7f75c8a654f5 at::Tensor::copy_()
[2m[36m(pid=64582)[0m     @     0x7ee26f802a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64582)[0m     @     0x7ee26f800388 at::native::copy_impl()
[2m[36m(pid=64582)[0m     @     0x7ee26f8025a4 at::native::copy_()
[2m[36m(pid=64582)[0m     @     0x7ee26feed4f5 at::Tensor::copy_()
[2m[36m(pid=64582)[0m     @     0x7ee2723c08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64567)[0m     @     0x7fae2533bad3 at::TensorIterator::for_each()
[2m[36m(pid=64567)[0m     @     0x7fae2533bd91 at::TensorIterator::for_each()
[2m[36m(pid=64567)[0m     @     0x7fae25c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64567)[0m     @     0x7fae25c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64567)[0m     @     0x7fae250e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64567)[0m     @     0x7fae250e1388 at::native::copy_impl()
[2m[36m(pid=64471)[0m     @     0x7ee9edad5388 at::native::copy_impl()
[2m[36m(pid=64471)[0m     @     0x7ee9edad75a4 at::native::copy_()
[2m[36m(pid=64471)[0m     @     0x7ee9ee1c24f5 at::Tensor::copy_()
[2m[36m(pid=64471)[0m     @     0x7ee9f06958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64556)[0m     @     0x7f1a9ba75388 at::native::copy_impl()
[2m[36m(pid=64556)[0m     @     0x7f1a9ba775a4 at::native::copy_()
[2m[36m(pid=64556)[0m     @     0x7f1a9c1624f5 at::Tensor::copy_()
[2m[36m(pid=64556)[0m     @     0x7f1a9e6358de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64474)[0m     @     0x7f303ce8e4f5 at::Tensor::copy_()
[2m[36m(pid=64474)[0m     @     0x7f3042f3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64474)[0m     @     0x55d68cef5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64474)[0m     @     0x55d68ce50b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x55d68cedbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64474)[0m     @     0x55d68cedca20 method_vectorcall
[2m[36m(pid=64474)[0m     @     0x55d68ce50bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x55d68cedbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64474)[0m     @     0x55d68cedc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64474)[0m     @     0x55d68ce51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x55d68cedbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64474)[0m     @     0x55d68cedc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64474)[0m     @     0x55d68ce51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x55d68cedbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64474)[0m     @     0x55d68cedc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64474)[0m     @     0x55d68ce51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64474)[0m     @     0x55d68cedbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64474)[0m     @     0x55d68cedc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64474)[0m     @     0x55d68ce51689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x7ee304f8d4f5 at::Tensor::copy_()
[2m[36m(pid=64597)[0m     @     0x7ee3074608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64476)[0m     @     0x7f2cad5505a4 at::native::copy_()
[2m[36m(pid=64476)[0m     @     0x7f2cadc3b4f5 at::Tensor::copy_()
[2m[36m(pid=64476)[0m     @     0x7f2cb010e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64480)[0m     @     0x7f80727d64f5 at::Tensor::copy_()
[2m[36m(pid=64480)[0m     @     0x7f8074ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64544)[0m     @     0x7f99b326f4f5 at::Tensor::copy_()
[2m[36m(pid=64544)[0m     @     0x7f99b57428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64544)[0m     @     0x7f99b326f4f5 at::Tensor::copy_()
[2m[36m(pid=64481)[0m     @     0x7eeb6c3354f5 at::Tensor::copy_()
[2m[36m(pid=64481)[0m     @     0x7eeb723e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64481)[0m     @     0x55c267dcffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64481)[0m     @     0x55c267d2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x55c267db5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64481)[0m     @     0x55c267db6a20 method_vectorcall
[2m[36m(pid=64481)[0m     @     0x55c267d2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x55c267db5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64481)[0m     @     0x55c267db6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64481)[0m     @     0x55c267d2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x55c267db5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64481)[0m     @     0x55c267db6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64481)[0m     @     0x55c267d2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x55c267db5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64481)[0m     @     0x55c267db6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64481)[0m     @     0x55c267d2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64481)[0m     @     0x55c267db5baf _PyEval_EvalCodeWithName
[2m[36m(pid=64481)[0m     @     0x55c267db6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64481)[0m     @     0x55c267d2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x7eebdbe244f5 at::Tensor::copy_()
[2m[36m(pid=64489)[0m     @     0x7eebde2f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64489)[0m     @     0x7eebdbe244f5 at::Tensor::copy_()
[2m[36m(pid=64489)[0m     @     0x7eebe1ecf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64489)[0m     @     0x55b2b5ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64489)[0m     @     0x55b2b5e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64489)[0m     @     0x55b2b5eaaa20 method_vectorcall
[2m[36m(pid=64489)[0m     @     0x55b2b5e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64489)[0m     @     0x55b2b5eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64489)[0m     @     0x55b2b5e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x7fbb5f49f4f5 at::Tensor::copy_()
[2m[36m(pid=64555)[0m     @     0x7fbb6554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64555)[0m     @     0x560199e09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64555)[0m     @     0x560199d64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x560199defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x560199df0a20 method_vectorcall
[2m[36m(pid=64555)[0m     @     0x560199d64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x560199defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x560199df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64555)[0m     @     0x560199d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x560199defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x560199df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64555)[0m     @     0x560199d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x560199defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x560199df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64555)[0m     @     0x560199d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64555)[0m     @     0x560199defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64555)[0m     @     0x560199df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64555)[0m     @     0x560199d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x7f74899b84f5 at::Tensor::copy_()
[2m[36m(pid=64543)[0m     @     0x7f748be8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64543)[0m     @     0x7f74899b84f5 at::Tensor::copy_()
[2m[36m(pid=64493)[0m     @     0x7fc43f49f4f5 at::Tensor::copy_()
[2m[36m(pid=64493)[0m     @     0x7fc4419728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64493)[0m     @     0x7fc43f49f4f5 at::Tensor::copy_()
[2m[36m(pid=64493)[0m     @     0x7fc44554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64493)[0m     @     0x557c53baefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64493)[0m     @     0x557c53b09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x557c53b94baf _PyEval_EvalCodeWithName
[2m[36m(pid=64493)[0m     @     0x557c53b95a20 method_vectorcall
[2m[36m(pid=64493)[0m     @     0x557c53b09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x7fae54a654f5 at::Tensor::copy_()
[2m[36m(pid=64491)[0m     @     0x7fae5ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64491)[0m     @     0x55b2c7d04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64491)[0m     @     0x55b2c7c5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x55b2c7ceabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64491)[0m     @     0x55b2c7ceba20 method_vectorcall
[2m[36m(pid=64491)[0m     @     0x55b2c7c5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x55b2c7ceabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64491)[0m     @     0x55b2c7ceb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64491)[0m     @     0x55b2c7c60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x55b2c7ceabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64491)[0m     @     0x55b2c7ceb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64491)[0m     @     0x55b2c7c60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x55b2c7ceabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64491)[0m     @     0x55b2c7ceb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64491)[0m     @     0x55b2c7c60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64491)[0m     @     0x55b2c7ceabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64491)[0m     @     0x55b2c7ceb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64491)[0m     @     0x55b2c7c60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x7f01787924f5 at::Tensor::copy_()
[2m[36m(pid=64538)[0m     @     0x7f017e83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64538)[0m     @     0x563a46074fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64538)[0m     @     0x563a45fcfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x563a4605abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64538)[0m     @     0x563a4605ba20 method_vectorcall
[2m[36m(pid=64538)[0m     @     0x563a45fcfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x563a4605abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64538)[0m     @     0x563a4605b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64538)[0m     @     0x563a45fd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x563a4605abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64538)[0m     @     0x563a4605b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64538)[0m     @     0x563a45fd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x563a4605abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64538)[0m     @     0x563a4605b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64538)[0m     @     0x563a45fd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64538)[0m     @     0x563a4605abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64538)[0m     @     0x563a4605b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64538)[0m     @     0x563a45fd0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x7f47fcc764f5 at::Tensor::copy_()
[2m[36m(pid=64475)[0m     @     0x7f4802d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64475)[0m     @     0x55db2cb6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64475)[0m     @     0x55db2cac5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x55db2cb50baf _PyEval_EvalCodeWithName
[2m[36m(pid=64475)[0m     @     0x55db2cb51a20 method_vectorcall
[2m[36m(pid=64475)[0m     @     0x55db2cac5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x55db2cb50baf _PyEval_EvalCodeWithName
[2m[36m(pid=64475)[0m     @     0x55db2cb51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64475)[0m     @     0x55db2cac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x55db2cb50baf _PyEval_EvalCodeWithName
[2m[36m(pid=64475)[0m     @     0x55db2cb51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64475)[0m     @     0x55db2cac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x55db2cb50baf _PyEval_EvalCodeWithName
[2m[36m(pid=64475)[0m     @     0x55db2cb51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64475)[0m     @     0x55db2cac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64475)[0m     @     0x55db2cb50baf _PyEval_EvalCodeWithName
[2m[36m(pid=64475)[0m     @     0x55db2cb51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64475)[0m     @     0x55db2cac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x7eeb3dc694f5 at::Tensor::copy_()
[2m[36m(pid=64534)[0m     @     0x7eeb43d1479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64534)[0m     @     0x55d69434efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64534)[0m     @     0x55d6942a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x55d694334baf _PyEval_EvalCodeWithName
[2m[36m(pid=64534)[0m     @     0x55d694335a20 method_vectorcall
[2m[36m(pid=64534)[0m     @     0x55d6942a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x55d694334baf _PyEval_EvalCodeWithName
[2m[36m(pid=64534)[0m     @     0x55d694335643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64534)[0m     @     0x55d6942aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x55d694334baf _PyEval_EvalCodeWithName
[2m[36m(pid=64534)[0m     @     0x55d694335643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64534)[0m     @     0x55d6942aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x55d694334baf _PyEval_EvalCodeWithName
[2m[36m(pid=64534)[0m     @     0x55d694335643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64534)[0m     @     0x55d6942aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64534)[0m     @     0x55d694334baf _PyEval_EvalCodeWithName
[2m[36m(pid=64534)[0m     @     0x55d694335643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64534)[0m     @     0x55d6942aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x7f2fd92b54f5 at::Tensor::copy_()
[2m[36m(pid=64487)[0m     @     0x7f2fdf36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64487)[0m     @     0x555b5232bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64487)[0m     @     0x555b52286b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x555b52311baf _PyEval_EvalCodeWithName
[2m[36m(pid=64487)[0m     @     0x555b52312a20 method_vectorcall
[2m[36m(pid=64487)[0m     @     0x555b52286bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x555b52311baf _PyEval_EvalCodeWithName
[2m[36m(pid=64487)[0m     @     0x555b52312643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64487)[0m     @     0x555b52287689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x555b52311baf _PyEval_EvalCodeWithName
[2m[36m(pid=64487)[0m     @     0x555b52312643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64487)[0m     @     0x555b52287689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x555b52311baf _PyEval_EvalCodeWithName
[2m[36m(pid=64487)[0m     @     0x555b52312643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64487)[0m     @     0x555b52287689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64487)[0m     @     0x555b52311baf _PyEval_EvalCodeWithName
[2m[36m(pid=64487)[0m     @     0x555b52312643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64487)[0m     @     0x555b52287689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x7f145ea544f5 at::Tensor::copy_()
[2m[36m(pid=64497)[0m     @     0x7f1464aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64497)[0m     @     0x55f3d59abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64497)[0m     @     0x55f3d5906b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x55f3d5991baf _PyEval_EvalCodeWithName
[2m[36m(pid=64497)[0m     @     0x55f3d5992a20 method_vectorcall
[2m[36m(pid=64497)[0m     @     0x55f3d5906bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x55f3d5991baf _PyEval_EvalCodeWithName
[2m[36m(pid=64497)[0m     @     0x55f3d5992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64497)[0m     @     0x55f3d5907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x55f3d5991baf _PyEval_EvalCodeWithName
[2m[36m(pid=64497)[0m     @     0x55f3d5992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64497)[0m     @     0x55f3d5907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x55f3d5991baf _PyEval_EvalCodeWithName
[2m[36m(pid=64497)[0m     @     0x55f3d5992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64497)[0m     @     0x55f3d5907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64497)[0m     @     0x55f3d5991baf _PyEval_EvalCodeWithName
[2m[36m(pid=64497)[0m     @     0x55f3d5992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64497)[0m     @     0x55f3d5907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x7fa8e0bf24f5 at::Tensor::copy_()
[2m[36m(pid=64500)[0m     @     0x7fa8e6c9d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64500)[0m     @     0x5621fec65fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64500)[0m     @     0x5621febc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x5621fec4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64500)[0m     @     0x5621fec4ca20 method_vectorcall
[2m[36m(pid=64500)[0m     @     0x5621febc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x5621fec4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64500)[0m     @     0x5621fec4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64500)[0m     @     0x5621febc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x5621fec4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64500)[0m     @     0x5621fec4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64500)[0m     @     0x5621febc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x5621fec4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64500)[0m     @     0x5621fec4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64500)[0m     @     0x5621febc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64500)[0m     @     0x5621fec4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64500)[0m     @     0x5621fec4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64500)[0m     @     0x5621febc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x7f05529714f5 at::Tensor::copy_()
[2m[36m(pid=64537)[0m     @     0x7f0558a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64537)[0m     @     0x5655237a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64537)[0m     @     0x5655236fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x565523787baf _PyEval_EvalCodeWithName
[2m[36m(pid=64537)[0m     @     0x565523788a20 method_vectorcall
[2m[36m(pid=64537)[0m     @     0x5655236fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x565523787baf _PyEval_EvalCodeWithName
[2m[36m(pid=64537)[0m     @     0x565523788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64537)[0m     @     0x5655236fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x565523787baf _PyEval_EvalCodeWithName
[2m[36m(pid=64537)[0m     @     0x565523788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64537)[0m     @     0x5655236fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x565523787baf _PyEval_EvalCodeWithName
[2m[36m(pid=64537)[0m     @     0x565523788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64537)[0m     @     0x5655236fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64537)[0m     @     0x565523787baf _PyEval_EvalCodeWithName
[2m[36m(pid=64537)[0m     @     0x565523788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64537)[0m     @     0x5655236fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x7f079a58d4f5 at::Tensor::copy_()
[2m[36m(pid=64560)[0m     @     0x7f079ca608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64560)[0m     @     0x7f079a58d4f5 at::Tensor::copy_()
[2m[36m(pid=64560)[0m     @     0x7f07a063879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64560)[0m     @     0x557883f57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64560)[0m     @     0x557883eb2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64560)[0m     @     0x557883f3ea20 method_vectorcall
[2m[36m(pid=64560)[0m     @     0x557883eb2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64560)[0m     @     0x557883f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64560)[0m     @     0x557883eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64560)[0m     @     0x557883f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64503)[0m     @     0x7edaa23248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64503)[0m     @     0x7eda9fe514f5 at::Tensor::copy_()
[2m[36m(pid=64503)[0m     @     0x7edaa5efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64503)[0m     @     0x561983cc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64503)[0m     @     0x561983c1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64503)[0m     @     0x561983ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64503)[0m     @     0x561983ca8a20 method_vectorcall
[2m[36m(pid=64503)[0m     @     0x561983c1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64503)[0m     @     0x561983ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64503)[0m     @     0x561983ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64503)[0m     @     0x561983c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64503)[0m     @     0x561983ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64503)[0m     @     0x561983ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64503)[0m     @     0x561983c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64503)[0m     @     0x561983ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64503)[0m     @     0x561983ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64503)[0m     @     0x561983c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64503)[0m     @     0x561983ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64503)[0m     @     0x561983ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64503)[0m     @     0x561983c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x7f518a4584f5 at::Tensor::copy_()
[2m[36m(pid=64472)[0m     @     0x7f519050379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64472)[0m     @     0x56369b050fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64472)[0m     @     0x56369afabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x56369b036baf _PyEval_EvalCodeWithName
[2m[36m(pid=64472)[0m     @     0x56369b037a20 method_vectorcall
[2m[36m(pid=64472)[0m     @     0x56369afabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x56369b036baf _PyEval_EvalCodeWithName
[2m[36m(pid=64472)[0m     @     0x56369b037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64472)[0m     @     0x56369afac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x56369b036baf _PyEval_EvalCodeWithName
[2m[36m(pid=64472)[0m     @     0x56369b037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64472)[0m     @     0x56369afac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x56369b036baf _PyEval_EvalCodeWithName
[2m[36m(pid=64472)[0m     @     0x56369b037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64472)[0m     @     0x56369afac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64472)[0m     @     0x56369b036baf _PyEval_EvalCodeWithName
[2m[36m(pid=64472)[0m     @     0x56369b037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64472)[0m     @     0x56369afac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x7f3d4f5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64473)[0m     @     0x7f3d4d0a44f5 at::Tensor::copy_()
[2m[36m(pid=64473)[0m     @     0x7f3d5314f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64473)[0m     @     0x559c1091efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64473)[0m     @     0x559c10879b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x559c10904baf _PyEval_EvalCodeWithName
[2m[36m(pid=64473)[0m     @     0x559c10905a20 method_vectorcall
[2m[36m(pid=64473)[0m     @     0x559c10879bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x559c10904baf _PyEval_EvalCodeWithName
[2m[36m(pid=64473)[0m     @     0x559c10905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64473)[0m     @     0x559c1087a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x559c10904baf _PyEval_EvalCodeWithName
[2m[36m(pid=64473)[0m     @     0x559c10905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64473)[0m     @     0x559c1087a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x559c10904baf _PyEval_EvalCodeWithName
[2m[36m(pid=64473)[0m     @     0x559c10905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64473)[0m     @     0x559c1087a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64473)[0m     @     0x559c10904baf _PyEval_EvalCodeWithName
[2m[36m(pid=64473)[0m     @     0x559c10905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64473)[0m     @     0x559c1087a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x7f48aae9b5a4 at::native::copy_()
[2m[36m(pid=64482)[0m     @     0x7f48ab5864f5 at::Tensor::copy_()
[2m[36m(pid=64482)[0m     @     0x7f48ada598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64482)[0m     @     0x7f48ab5864f5 at::Tensor::copy_()
[2m[36m(pid=64482)[0m     @     0x7f48b163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64482)[0m     @     0x5635a2238fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64482)[0m     @     0x5635a2193b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a221ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64482)[0m     @     0x5635a221fa20 method_vectorcall
[2m[36m(pid=64482)[0m     @     0x5635a2193bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a221ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64482)[0m     @     0x5635a221f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64545)[0m     @     0x7f707bbe4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64545)[0m     @     0x7f707bbe2388 at::native::copy_impl()
[2m[36m(pid=64545)[0m     @     0x7f707bbe45a4 at::native::copy_()
[2m[36m(pid=64545)[0m     @     0x7f707c2cf4f5 at::Tensor::copy_()
[2m[36m(pid=64545)[0m     @     0x7f707e7a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64536)[0m     @     0x7f37b6db45a4 at::native::copy_()
[2m[36m(pid=64536)[0m     @     0x7f37b749f4f5 at::Tensor::copy_()
[2m[36m(pid=64536)[0m     @     0x7f37b99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64536)[0m     @     0x7f37b749f4f5 at::Tensor::copy_()
[2m[36m(pid=64485)[0m     @     0x7f0c178174f5 at::Tensor::copy_()
[2m[36m(pid=64485)[0m     @     0x7f0c19cea8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64485)[0m     @     0x7f0c178174f5 at::Tensor::copy_()
[2m[36m(pid=64485)[0m     @     0x7f0c1d8c279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64485)[0m     @     0x55ef203dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64485)[0m     @     0x55ef20336b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64485)[0m     @     0x55ef203c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64485)[0m     @     0x55ef203c2a20 method_vectorcall
[2m[36m(pid=64485)[0m     @     0x55ef20336bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64485)[0m     @     0x55ef203c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64485)[0m     @     0x55ef203c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64485)[0m     @     0x55ef20337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64485)[0m     @     0x55ef203c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64485)[0m     @     0x55ef203c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64485)[0m     @     0x55ef20337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64485)[0m     @     0x55ef203c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64485)[0m     @     0x55ef203c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64485)[0m     @     0x55ef20337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64485)[0m     @     0x55ef203c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64485)[0m     @     0x55ef203c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64485)[0m     @     0x55ef20337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x7f269e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64492)[0m     @     0x7f269e6fd388 at::native::copy_impl()
[2m[36m(pid=64492)[0m     @     0x7f269e6ff5a4 at::native::copy_()
[2m[36m(pid=64492)[0m     @     0x7f269edea4f5 at::Tensor::copy_()
[2m[36m(pid=64492)[0m     @     0x7f26a12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64574)[0m     @     0x7f9d869547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64574)[0m     @     0x7f9d869578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64486)[0m     @     0x7f0ef4c094f5 at::Tensor::copy_()
[2m[36m(pid=64486)[0m     @     0x7f0efacb479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64486)[0m     @     0x558680d1cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64486)[0m     @     0x558680c77b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64486)[0m     @     0x558680d02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64486)[0m     @     0x558680d03a20 method_vectorcall
[2m[36m(pid=64486)[0m     @     0x558680c77bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64486)[0m     @     0x558680d02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64486)[0m     @     0x558680d03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64486)[0m     @     0x558680c78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64486)[0m     @     0x558680d02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64486)[0m     @     0x558680d03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64486)[0m     @     0x558680c78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64486)[0m     @     0x558680d02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64486)[0m     @     0x558680d03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64486)[0m     @     0x558680c78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64486)[0m     @     0x558680d02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64486)[0m     @     0x558680d03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64486)[0m     @     0x558680c78689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x7efe22fe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64572)[0m     @     0x7efe20b104f5 at::Tensor::copy_()
[2m[36m(pid=64572)[0m     @     0x7efe26bbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64572)[0m     @     0x56092d0befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64572)[0m     @     0x56092d019b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x56092d0a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64572)[0m     @     0x56092d0a5a20 method_vectorcall
[2m[36m(pid=64572)[0m     @     0x56092d019bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x56092d0a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64572)[0m     @     0x56092d0a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64572)[0m     @     0x56092d01a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x56092d0a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64572)[0m     @     0x56092d0a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64572)[0m     @     0x56092d01a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x56092d0a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64572)[0m     @     0x56092d0a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64572)[0m     @     0x56092d01a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64572)[0m     @     0x56092d0a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=64572)[0m     @     0x56092d0a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64572)[0m     @     0x56092d01a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x7f6657cfb5a4 at::native::copy_()
[2m[36m(pid=64495)[0m     @     0x7f66583e64f5 at::Tensor::copy_()
[2m[36m(pid=64547)[0m     @     0x7f91690955a4 at::native::copy_()
[2m[36m(pid=64547)[0m     @     0x7f91697804f5 at::Tensor::copy_()
[2m[36m(pid=64547)[0m     @     0x7f916bc538de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64547)[0m     @     0x7f91697804f5 at::Tensor::copy_()
[2m[36m(pid=64547)[0m     @     0x7f916f82b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64547)[0m     @     0x55d754a1cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64547)[0m     @     0x55d754977b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64547)[0m     @     0x55d754a02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64547)[0m     @     0x55d754a03a20 method_vectorcall
[2m[36m(pid=64547)[0m     @     0x55d754977bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64547)[0m     @     0x55d754a02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64547)[0m     @     0x55d754a03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64547)[0m     @     0x55d754978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x7f2483c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64508)[0m     @     0x7f2483c48388 at::native::copy_impl()
[2m[36m(pid=64508)[0m     @     0x7f2483c4a5a4 at::native::copy_()
[2m[36m(pid=64508)[0m     @     0x7f24843354f5 at::Tensor::copy_()
[2m[36m(pid=64508)[0m     @     0x7f24868088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64535)[0m     @     0x7ef0af60c5a4 at::native::copy_()
[2m[36m(pid=64535)[0m     @     0x7ef0afcf74f5 at::Tensor::copy_()
[2m[36m(pid=64535)[0m     @     0x7ef0b21ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64535)[0m     @     0x7ef0afcf74f5 at::Tensor::copy_()
[2m[36m(pid=64535)[0m     @     0x7ef0b5da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64535)[0m     @     0x5588fb01ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64535)[0m     @     0x5588faf7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64535)[0m     @     0x5588fb005baf _PyEval_EvalCodeWithName
[2m[36m(pid=64535)[0m     @     0x5588fb006a20 method_vectorcall
[2m[36m(pid=64507)[0m     @     0x7f2edee9b5a4 at::native::copy_()
[2m[36m(pid=64507)[0m     @     0x7f2edf5864f5 at::Tensor::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38bab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64539)[0m     @     0x7fc61feb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=64539)[0m     @     0x7fc61f5e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=64539)[0m     @     0x7fc61f5e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=64554)[0m     @     0x7f86923c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64554)[0m     @     0x7f868fef44f5 at::Tensor::copy_()
[2m[36m(pid=64554)[0m     @     0x7f8695f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64554)[0m     @     0x558035ef1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64554)[0m     @     0x558035e4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64554)[0m     @     0x558035ed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64554)[0m     @     0x558035ed8a20 method_vectorcall
[2m[36m(pid=64554)[0m     @     0x558035e4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64554)[0m     @     0x558035ed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64554)[0m     @     0x558035ed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64554)[0m     @     0x558035e4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64554)[0m     @     0x558035ed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64554)[0m     @     0x558035ed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64554)[0m     @     0x558035e4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64554)[0m     @     0x558035ed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64554)[0m     @     0x558035ed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64554)[0m     @     0x558035e4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64554)[0m     @     0x558035ed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=64554)[0m     @     0x558035ed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64554)[0m     @     0x558035e4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x7f50b89d34f5 at::Tensor::copy_()
[2m[36m(pid=64570)[0m     @     0x7f50baea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64570)[0m     @     0x7f50b89d34f5 at::Tensor::copy_()
[2m[36m(pid=64570)[0m     @     0x7f50bea7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64570)[0m     @     0x562a7ecaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64570)[0m     @     0x562a7ec0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x562a7ec95baf _PyEval_EvalCodeWithName
[2m[36m(pid=64570)[0m     @     0x562a7ec96a20 method_vectorcall
[2m[36m(pid=64570)[0m     @     0x562a7ec0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x562a7ec95baf _PyEval_EvalCodeWithName
[2m[36m(pid=64570)[0m     @     0x562a7ec96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64570)[0m     @     0x562a7ec0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x562a7ec95baf _PyEval_EvalCodeWithName
[2m[36m(pid=64570)[0m     @     0x562a7ec96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64570)[0m     @     0x562a7ec0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x562a7ec95baf _PyEval_EvalCodeWithName
[2m[36m(pid=64570)[0m     @     0x562a7ec96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64570)[0m     @     0x562a7ec0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64570)[0m     @     0x562a7ec95baf _PyEval_EvalCodeWithName
[2m[36m(pid=64570)[0m     @     0x562a7ec96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64570)[0m     @     0x562a7ec0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64502)[0m     @     0x7f2ee173b4f5 at::Tensor::copy_()
[2m[36m(pid=64502)[0m     @     0x7f2ee77e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64502)[0m     @     0x563ff2835fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64502)[0m     @     0x563ff2790b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64502)[0m     @     0x563ff281bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64502)[0m     @     0x563ff281ca20 method_vectorcall
[2m[36m(pid=64502)[0m     @     0x563ff2790bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64502)[0m     @     0x563ff281bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64502)[0m     @     0x563ff281c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64502)[0m     @     0x563ff2791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64502)[0m     @     0x563ff281bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64502)[0m     @     0x563ff281c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64502)[0m     @     0x563ff2791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x7f791d9e54f5 at::Tensor::copy_()
[2m[36m(pid=64488)[0m     @     0x7f7923a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64488)[0m     @     0x5583115c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64488)[0m     @     0x55831151db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x5583115a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=64488)[0m     @     0x5583115a9a20 method_vectorcall
[2m[36m(pid=64488)[0m     @     0x55831151dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x5583115a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=64488)[0m     @     0x5583115a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64488)[0m     @     0x55831151e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x5583115a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=64488)[0m     @     0x5583115a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64488)[0m     @     0x55831151e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x5583115a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=64488)[0m     @     0x5583115a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64488)[0m     @     0x55831151e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64488)[0m     @     0x5583115a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=64488)[0m     @     0x5583115a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64488)[0m     @     0x55831151e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x5630e241fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64550)[0m     @     0x5630e2420643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64550)[0m     @     0x5630e2395689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64550)[0m     @     0x5630e241fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64550)[0m     @     0x5630e2420643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64550)[0m     @     0x5630e2395689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x7f9d24a6d4f5 at::Tensor::copy_()
[2m[36m(pid=64563)[0m     @     0x7f9d2ab1879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64563)[0m     @     0x5624fc596fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64563)[0m     @     0x5624fc4f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x5624fc57cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64563)[0m     @     0x5624fc57da20 method_vectorcall
[2m[36m(pid=64563)[0m     @     0x5624fc4f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x5624fc57cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64563)[0m     @     0x5624fc57d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64563)[0m     @     0x5624fc4f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x5624fc57cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64563)[0m     @     0x5624fc57d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64563)[0m     @     0x5624fc4f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x5624fc57cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64563)[0m     @     0x5624fc57d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64563)[0m     @     0x5624fc4f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64563)[0m     @     0x5624fc57cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64563)[0m     @     0x5624fc57d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64563)[0m     @     0x5624fc4f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x7fcb5b36a4f5 at::Tensor::copy_()
[2m[36m(pid=64506)[0m     @     0x7fcb6141579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64506)[0m     @     0x561bb65b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64506)[0m     @     0x561bb6512b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x561bb659dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64506)[0m     @     0x561bb659ea20 method_vectorcall
[2m[36m(pid=64506)[0m     @     0x561bb6512bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x561bb659dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64506)[0m     @     0x561bb659e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64506)[0m     @     0x561bb6513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x561bb659dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64506)[0m     @     0x561bb659e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64506)[0m     @     0x561bb6513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x561bb659dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64506)[0m     @     0x561bb659e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64506)[0m     @     0x561bb6513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64506)[0m     @     0x561bb659dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64506)[0m     @     0x561bb659e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64506)[0m     @     0x561bb6513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x7fb09c94a4f5 at::Tensor::copy_()
[2m[36m(pid=64575)[0m     @     0x7fb0a29f579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64575)[0m     @     0x5567e7778fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64575)[0m     @     0x5567e76d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x5567e775ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64575)[0m     @     0x5567e775fa20 method_vectorcall
[2m[36m(pid=64575)[0m     @     0x5567e76d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x5567e775ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64575)[0m     @     0x5567e775f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64575)[0m     @     0x5567e76d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x5567e775ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64575)[0m     @     0x5567e775f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64575)[0m     @     0x5567e76d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x5567e775ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64575)[0m     @     0x5567e775f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64575)[0m     @     0x5567e76d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64575)[0m     @     0x5567e775ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64575)[0m     @     0x5567e775f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64575)[0m     @     0x5567e76d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x7f75ceb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64490)[0m     @     0x55ed9bebdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64490)[0m     @     0x55ed9be18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x55ed9bea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64490)[0m     @     0x55ed9bea4a20 method_vectorcall
[2m[36m(pid=64490)[0m     @     0x55ed9be18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x55ed9bea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64490)[0m     @     0x55ed9bea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64490)[0m     @     0x55ed9be19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x55ed9bea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64490)[0m     @     0x55ed9bea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64490)[0m     @     0x55ed9be19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x55ed9bea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64490)[0m     @     0x55ed9bea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64490)[0m     @     0x55ed9be19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64490)[0m     @     0x55ed9bea3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64490)[0m     @     0x55ed9bea4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64490)[0m     @     0x55ed9be19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x7ee26feed4f5 at::Tensor::copy_()
[2m[36m(pid=64582)[0m     @     0x7ee275f9879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64582)[0m     @     0x55fb98989fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64582)[0m     @     0x55fb988e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x55fb9896fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64582)[0m     @     0x55fb98970a20 method_vectorcall
[2m[36m(pid=64582)[0m     @     0x55fb988e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x55fb9896fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64582)[0m     @     0x55fb98970643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64582)[0m     @     0x55fb988e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x55fb9896fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64582)[0m     @     0x55fb98970643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64582)[0m     @     0x55fb988e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x55fb9896fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64582)[0m     @     0x55fb98970643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64582)[0m     @     0x55fb988e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64582)[0m     @     0x55fb9896fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64582)[0m     @     0x55fb98970643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64582)[0m     @     0x55fb988e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x7fae250e35a4 at::native::copy_()
[2m[36m(pid=64471)[0m     @     0x7ee9ee1c24f5 at::Tensor::copy_()
[2m[36m(pid=64471)[0m     @     0x7ee9f426d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64471)[0m     @     0x55a37d916fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64471)[0m     @     0x55a37d871b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64471)[0m     @     0x55a37d8fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64471)[0m     @     0x55a37d8fda20 method_vectorcall
[2m[36m(pid=64471)[0m     @     0x55a37d871bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64471)[0m     @     0x55a37d8fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64471)[0m     @     0x55a37d8fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64471)[0m     @     0x55a37d872689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64471)[0m     @     0x55a37d8fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64471)[0m     @     0x55a37d8fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64471)[0m     @     0x55a37d872689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64471)[0m     @     0x55a37d8fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64471)[0m     @     0x55a37d8fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64471)[0m     @     0x55a37d872689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64471)[0m     @     0x55a37d8fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64471)[0m     @     0x55a37d8fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64471)[0m     @     0x55a37d872689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x7f1a9c1624f5 at::Tensor::copy_()
[2m[36m(pid=64556)[0m     @     0x7f1aa220d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64556)[0m     @     0x55ad615dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64556)[0m     @     0x55ad61535b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x55ad615c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64556)[0m     @     0x55ad615c1a20 method_vectorcall
[2m[36m(pid=64556)[0m     @     0x55ad61535bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x55ad615c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64556)[0m     @     0x55ad615c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64556)[0m     @     0x55ad61536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x55ad615c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64556)[0m     @     0x55ad615c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64556)[0m     @     0x55ad61536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x55ad615c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64556)[0m     @     0x55ad615c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64556)[0m     @     0x55ad61536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64556)[0m     @     0x55ad615c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=64556)[0m     @     0x55ad615c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64556)[0m     @     0x55ad61536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x7ee304f8d4f5 at::Tensor::copy_()
[2m[36m(pid=64597)[0m     @     0x7ee30b03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64597)[0m     @     0x56331eb2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64597)[0m     @     0x56331ea86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x56331eb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=64597)[0m     @     0x56331eb12a20 method_vectorcall
[2m[36m(pid=64597)[0m     @     0x56331ea86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x56331eb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=64597)[0m     @     0x56331eb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64597)[0m     @     0x56331ea87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x56331eb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=64597)[0m     @     0x56331eb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64597)[0m     @     0x56331ea87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x56331eb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=64597)[0m     @     0x56331eb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64597)[0m     @     0x56331ea87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64597)[0m     @     0x56331eb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=64597)[0m     @     0x56331eb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64597)[0m     @     0x56331ea87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x7f2cadc3b4f5 at::Tensor::copy_()
[2m[36m(pid=64476)[0m     @     0x7f2cb3ce679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64476)[0m     @     0x55ca740cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64476)[0m     @     0x55ca74028b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x55ca740b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64476)[0m     @     0x55ca740b4a20 method_vectorcall
[2m[36m(pid=64476)[0m     @     0x55ca74028bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x55ca740b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64476)[0m     @     0x55ca740b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64476)[0m     @     0x55ca74029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x55ca740b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64476)[0m     @     0x55ca740b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64476)[0m     @     0x55ca74029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x55ca740b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64476)[0m     @     0x55ca740b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64476)[0m     @     0x55ca74029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64476)[0m     @     0x55ca740b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=64476)[0m     @     0x55ca740b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64476)[0m     @     0x55ca74029689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x7f80727d64f5 at::Tensor::copy_()
[2m[36m(pid=64480)[0m     @     0x7f807847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64480)[0m     @     0x559cd48e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64480)[0m     @     0x559cd483bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x559cd48c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=64480)[0m     @     0x559cd48c7a20 method_vectorcall
[2m[36m(pid=64480)[0m     @     0x559cd483bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x559cd48c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=64480)[0m     @     0x559cd48c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64480)[0m     @     0x559cd483c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x559cd48c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=64480)[0m     @     0x559cd48c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64480)[0m     @     0x559cd483c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x559cd48c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=64480)[0m     @     0x559cd48c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64480)[0m     @     0x559cd483c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64480)[0m     @     0x559cd48c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=64480)[0m     @     0x559cd48c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64480)[0m     @     0x559cd483c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x7f99b931a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64544)[0m     @     0x558b7e90bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64544)[0m     @     0x558b7e866b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x558b7e8f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64544)[0m     @     0x558b7e8f2a20 method_vectorcall
[2m[36m(pid=64544)[0m     @     0x558b7e866bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x558b7e8f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64544)[0m     @     0x558b7e8f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64544)[0m     @     0x558b7e867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x558b7e8f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64544)[0m     @     0x558b7e8f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64544)[0m     @     0x558b7e867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x558b7e8f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64544)[0m     @     0x558b7e8f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64544)[0m     @     0x558b7e867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64544)[0m     @     0x558b7e8f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64544)[0m     @     0x558b7e8f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64544)[0m     @     0x558b7e867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64489)[0m     @     0x55b2b5e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64489)[0m     @     0x55b2b5eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64489)[0m     @     0x55b2b5e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64489)[0m     @     0x55b2b5ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64489)[0m     @     0x55b2b5eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64489)[0m     @     0x55b2b5e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x7f748fa6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64543)[0m     @     0x563296771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64543)[0m     @     0x5632966ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x563296757baf _PyEval_EvalCodeWithName
[2m[36m(pid=64543)[0m     @     0x563296758a20 method_vectorcall
[2m[36m(pid=64543)[0m     @     0x5632966ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x563296757baf _PyEval_EvalCodeWithName
[2m[36m(pid=64543)[0m     @     0x563296758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64543)[0m     @     0x5632966cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x563296757baf _PyEval_EvalCodeWithName
[2m[36m(pid=64543)[0m     @     0x563296758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64543)[0m     @     0x5632966cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x563296757baf _PyEval_EvalCodeWithName
[2m[36m(pid=64543)[0m     @     0x563296758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64543)[0m     @     0x5632966cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64543)[0m     @     0x563296757baf _PyEval_EvalCodeWithName
[2m[36m(pid=64543)[0m     @     0x563296758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64543)[0m     @     0x5632966cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x557c53b94baf _PyEval_EvalCodeWithName
[2m[36m(pid=64493)[0m     @     0x557c53b95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64493)[0m     @     0x557c53b0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x557c53b94baf _PyEval_EvalCodeWithName
[2m[36m(pid=64493)[0m     @     0x557c53b95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64493)[0m     @     0x557c53b0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x557c53b94baf _PyEval_EvalCodeWithName
[2m[36m(pid=64493)[0m     @     0x557c53b95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64493)[0m     @     0x557c53b0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64493)[0m     @     0x557c53b94baf _PyEval_EvalCodeWithName
[2m[36m(pid=64493)[0m     @     0x557c53b95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64493)[0m     @     0x557c53b0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64560)[0m     @     0x557883f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64560)[0m     @     0x557883eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64560)[0m     @     0x557883f3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64560)[0m     @     0x557883f3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64560)[0m     @     0x557883eb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a2194689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a221ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64482)[0m     @     0x5635a221f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64482)[0m     @     0x5635a2194689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a221ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64482)[0m     @     0x5635a221f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64482)[0m     @     0x5635a2194689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64482)[0m     @     0x5635a221ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=64482)[0m     @     0x5635a221f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64482)[0m     @     0x5635a2194689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x7f707c2cf4f5 at::Tensor::copy_()
[2m[36m(pid=64536)[0m     @     0x7f37bd54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64536)[0m     @     0x5642578bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64536)[0m     @     0x564257816b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64536)[0m     @     0x5642578a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64536)[0m     @     0x5642578a2a20 method_vectorcall
[2m[36m(pid=64536)[0m     @     0x564257816bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64536)[0m     @     0x5642578a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64536)[0m     @     0x5642578a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64536)[0m     @     0x564257817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64536)[0m     @     0x5642578a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64536)[0m     @     0x5642578a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64536)[0m     @     0x564257817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64536)[0m     @     0x5642578a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64536)[0m     @     0x5642578a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64536)[0m     @     0x564257817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64536)[0m     @     0x5642578a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=64536)[0m     @     0x5642578a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64536)[0m     @     0x564257817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x7f269edea4f5 at::Tensor::copy_()
[2m[36m(pid=64492)[0m     @     0x7f26a4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64492)[0m     @     0x55ac53655fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64492)[0m     @     0x55ac535b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x55ac5363bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64492)[0m     @     0x55ac5363ca20 method_vectorcall
[2m[36m(pid=64492)[0m     @     0x55ac535b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x55ac5363bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64492)[0m     @     0x55ac5363c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64492)[0m     @     0x55ac535b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x55ac5363bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64492)[0m     @     0x55ac5363c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64492)[0m     @     0x55ac535b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x55ac5363bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64492)[0m     @     0x55ac5363c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64492)[0m     @     0x55ac535b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64492)[0m     @     0x55ac5363bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64492)[0m     @     0x55ac5363c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64492)[0m     @     0x55ac535b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x7f9d86957ad3 at::TensorIterator::for_each()
[2m[36m(pid=64574)[0m     @     0x7f9d86957d91 at::TensorIterator::for_each()
[2m[36m(pid=64574)[0m     @     0x7f9d8723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64495)[0m     @     0x7f665a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64495)[0m     @     0x7f66583e64f5 at::Tensor::copy_()
[2m[36m(pid=64547)[0m     @     0x55d754a02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64547)[0m     @     0x55d754a03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64547)[0m     @     0x55d754978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64547)[0m     @     0x55d754a02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64547)[0m     @     0x55d754a03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64547)[0m     @     0x55d754978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64547)[0m     @     0x55d754a02baf _PyEval_EvalCodeWithName
[2m[36m(pid=64547)[0m     @     0x55d754a03643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64547)[0m     @     0x55d754978689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x7f24843354f5 at::Tensor::copy_()
[2m[36m(pid=64535)[0m     @     0x5588faf7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64535)[0m     @     0x5588fb005baf _PyEval_EvalCodeWithName
[2m[36m(pid=64535)[0m     @     0x5588fb006643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64535)[0m     @     0x5588faf7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64535)[0m     @     0x5588fb005baf _PyEval_EvalCodeWithName
[2m[36m(pid=64535)[0m     @     0x5588fb006643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64535)[0m     @     0x5588faf7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64535)[0m     @     0x5588fb005baf _PyEval_EvalCodeWithName
[2m[36m(pid=64535)[0m     @     0x5588fb006643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64535)[0m     @     0x5588faf7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64535)[0m     @     0x5588fb005baf _PyEval_EvalCodeWithName
[2m[36m(pid=64535)[0m     @     0x5588fb006643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64535)[0m     @     0x5588faf7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x7f2ee1a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38bab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=64478)[0m     @     0x7f38bab68d91 at::TensorIterator::for_each()
[2m[36m(pid=64478)[0m     @     0x7f38bb44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64478)[0m     @     0x7f38bb46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64478)[0m     @     0x7f38ba910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64478)[0m     @     0x7f38ba90e388 at::native::copy_impl()
[2m[36m(pid=64539)[0m     @     0x7fc61f5e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=64539)[0m     @     0x7fc61f5e4d91 at::TensorIterator::for_each()
[2m[36m(pid=64539)[0m     @     0x7fc61fec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=64539)[0m     @     0x7fc61feeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64539)[0m     @     0x7fc61f38ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64539)[0m     @     0x7fc61f38a388 at::native::copy_impl()
[2m[36m(pid=64502)[0m     @     0x563ff281bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64502)[0m     @     0x563ff281c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64502)[0m     @     0x563ff2791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64502)[0m     @     0x563ff281bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64502)[0m     @     0x563ff281c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64502)[0m     @     0x563ff2791689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x7fae257ce4f5 at::Tensor::copy_()
[2m[36m(pid=64545)[0m     @     0x7f708237a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64545)[0m     @     0x564e1ad9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64545)[0m     @     0x564e1acf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x564e1ad81baf _PyEval_EvalCodeWithName
[2m[36m(pid=64545)[0m     @     0x564e1ad82a20 method_vectorcall
[2m[36m(pid=64545)[0m     @     0x564e1acf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x564e1ad81baf _PyEval_EvalCodeWithName
[2m[36m(pid=64545)[0m     @     0x564e1ad82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64545)[0m     @     0x564e1acf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x564e1ad81baf _PyEval_EvalCodeWithName
[2m[36m(pid=64545)[0m     @     0x564e1ad82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64545)[0m     @     0x564e1acf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x564e1ad81baf _PyEval_EvalCodeWithName
[2m[36m(pid=64545)[0m     @     0x564e1ad82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64545)[0m     @     0x564e1acf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64545)[0m     @     0x564e1ad81baf _PyEval_EvalCodeWithName
[2m[36m(pid=64545)[0m     @     0x564e1ad82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64545)[0m     @     0x564e1acf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x7f9d8725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=64574)[0m     @     0x7f9d866ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=64574)[0m     @     0x7f9d866fd388 at::native::copy_impl()
[2m[36m(pid=64574)[0m     @     0x7f9d866ff5a4 at::native::copy_()
[2m[36m(pid=64495)[0m     @     0x7f665e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64495)[0m     @     0x56317b0f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64495)[0m     @     0x56317b04fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x56317b0dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64495)[0m     @     0x56317b0dba20 method_vectorcall
[2m[36m(pid=64495)[0m     @     0x56317b04fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x56317b0dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64495)[0m     @     0x56317b0db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64495)[0m     @     0x56317b050689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x56317b0dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64495)[0m     @     0x56317b0db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64495)[0m     @     0x56317b050689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x56317b0dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64495)[0m     @     0x56317b0db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64495)[0m     @     0x56317b050689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64495)[0m     @     0x56317b0dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=64495)[0m     @     0x56317b0db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64495)[0m     @     0x56317b050689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x7f248a3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64508)[0m     @     0x55fae65a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64508)[0m     @     0x55fae6501b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x55fae658cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64508)[0m     @     0x55fae658da20 method_vectorcall
[2m[36m(pid=64508)[0m     @     0x55fae6501bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x55fae658cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64508)[0m     @     0x55fae658d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64508)[0m     @     0x55fae6502689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x55fae658cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64508)[0m     @     0x55fae658d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64508)[0m     @     0x55fae6502689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x55fae658cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64508)[0m     @     0x55fae658d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64508)[0m     @     0x55fae6502689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64508)[0m     @     0x55fae658cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64508)[0m     @     0x55fae658d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64508)[0m     @     0x55fae6502689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x7f2edf5864f5 at::Tensor::copy_()
[2m[36m(pid=64507)[0m     @     0x7f2ee563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64507)[0m     @     0x55e170ea4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64507)[0m     @     0x55e170dffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x55e170e8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64507)[0m     @     0x55e170e8ba20 method_vectorcall
[2m[36m(pid=64507)[0m     @     0x55e170dffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x55e170e8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64507)[0m     @     0x55e170e8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64507)[0m     @     0x55e170e00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x55e170e8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64507)[0m     @     0x55e170e8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64507)[0m     @     0x55e170e00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x55e170e8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64507)[0m     @     0x55e170e8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64507)[0m     @     0x55e170e00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64507)[0m     @     0x55e170e8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=64507)[0m     @     0x55e170e8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64507)[0m     @     0x55e170e00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x7f38ba9105a4 at::native::copy_()
[2m[36m(pid=64539)[0m     @     0x7fc61f38c5a4 at::native::copy_()
[2m[36m(pid=64567)[0m     @     0x7fae27ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64567)[0m     @     0x7fae257ce4f5 at::Tensor::copy_()
[2m[36m(pid=64567)[0m     @     0x7fae2b87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64574)[0m     @     0x7f9d86dea4f5 at::Tensor::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38baffb4f5 at::Tensor::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38bd4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38baffb4f5 at::Tensor::copy_()
[2m[36m(pid=64478)[0m     @     0x7f38c10a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64478)[0m     @     0x558429e79fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64478)[0m     @     0x558429dd4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x558429e5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64478)[0m     @     0x558429e60a20 method_vectorcall
[2m[36m(pid=64478)[0m     @     0x558429dd4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x558429e5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64478)[0m     @     0x558429e60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64478)[0m     @     0x558429dd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x558429e5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64478)[0m     @     0x558429e60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64478)[0m     @     0x558429dd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x558429e5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64478)[0m     @     0x558429e60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64478)[0m     @     0x558429dd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64478)[0m     @     0x558429e5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64478)[0m     @     0x558429e60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64478)[0m     @     0x558429dd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x7fc61fa774f5 at::Tensor::copy_()
[2m[36m(pid=64539)[0m     @     0x7fc621f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64539)[0m     @     0x7fc61fa774f5 at::Tensor::copy_()
[2m[36m(pid=64539)[0m     @     0x7fc625b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64539)[0m     @     0x5617a4ad3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64539)[0m     @     0x5617a4a2eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x5617a4ab9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64539)[0m     @     0x5617a4abaa20 method_vectorcall
[2m[36m(pid=64539)[0m     @     0x5617a4a2ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x5617a4ab9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64539)[0m     @     0x5617a4aba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64539)[0m     @     0x5617a4a2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x5617a4ab9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64539)[0m     @     0x5617a4aba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64539)[0m     @     0x5617a4a2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x5617a4ab9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64539)[0m     @     0x5617a4aba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64539)[0m     @     0x5617a4a2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64539)[0m     @     0x5617a4ab9baf _PyEval_EvalCodeWithName
[2m[36m(pid=64539)[0m     @     0x5617a4aba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64539)[0m     @     0x5617a4a2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e12997fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64567)[0m     @     0x556e128f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e1297dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64567)[0m     @     0x556e1297ea20 method_vectorcall
[2m[36m(pid=64567)[0m     @     0x556e128f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e1297dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64567)[0m     @     0x556e1297e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64567)[0m     @     0x556e128f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e1297dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64567)[0m     @     0x556e1297e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64567)[0m     @     0x556e128f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e1297dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64567)[0m     @     0x556e1297e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64567)[0m     @     0x556e128f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64567)[0m     @     0x556e1297dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=64567)[0m     @     0x556e1297e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64567)[0m     @     0x556e128f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x7f9d892bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=64574)[0m     @     0x7f9d86dea4f5 at::Tensor::copy_()
[2m[36m(pid=64574)[0m     @     0x7f9d8ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=64574)[0m     @     0x5588c46b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=64574)[0m     @     0x5588c460db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x5588c4698baf _PyEval_EvalCodeWithName
[2m[36m(pid=64574)[0m     @     0x5588c4699a20 method_vectorcall
[2m[36m(pid=64574)[0m     @     0x5588c460dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x5588c4698baf _PyEval_EvalCodeWithName
[2m[36m(pid=64574)[0m     @     0x5588c4699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64574)[0m     @     0x5588c460e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x5588c4698baf _PyEval_EvalCodeWithName
[2m[36m(pid=64574)[0m     @     0x5588c4699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64574)[0m     @     0x5588c460e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x5588c4698baf _PyEval_EvalCodeWithName
[2m[36m(pid=64574)[0m     @     0x5588c4699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64574)[0m     @     0x5588c460e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=64574)[0m     @     0x5588c4698baf _PyEval_EvalCodeWithName
[2m[36m(pid=64574)[0m     @     0x5588c4699643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=64574)[0m     @     0x5588c460e689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:51:01,428	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:51:01,434	ERROR trial_runner.py:567 -- Trial PPO_jss_env_c6e89_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=64579, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:51:01,438	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:51:01,449	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:51:01,449	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:51:01,450	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 22.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c6e89_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_c6e89_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_c6e89_00000_0_2020-11-05_10-50-53/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:51:01,461	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.

2020-11-05 10:51:01,461	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff51728d3301000000.
2020-11-05 10:51:01,461	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:51:01,461	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:51:01,461	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
== Status ==
Memory usage on this node: 22.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c6e89_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_c6e89_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_c6e89_00000_0_2020-11-05_10-50-53/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_c6e89_00000])
2020-11-05 10:51:01,471	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:51:01,472	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
