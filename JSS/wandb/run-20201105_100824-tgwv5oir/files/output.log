2020-11-05 10:08:28,510	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da72d_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=42291)[0m 2020-11-05 10:08:31,294	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=42317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42317)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42317)[0m *** SIGSEGV (@0x0) received by PID 42317 (TID 0x7f9b90c61700) from PID 0; stack trace: ***
[2m[36m(pid=42317)[0m     @     0x7f9b9083a390 (unknown)
[2m[36m(pid=42317)[0m     @     0x7f6c9060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42317)[0m     @     0x7f6c8fd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42283)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42283)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42283)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42283)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42283)[0m *** SIGSEGV (@0x0) received by PID 42283 (TID 0x7efe20dfc700) from PID 0; stack trace: ***
[2m[36m(pid=42283)[0m     @     0x7efe209d5390 (unknown)
[2m[36m(pid=42283)[0m     @     0x7ecf20774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42283)[0m     @     0x7ecf1fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42283)[0m     @     0x7ecf1fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42288)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42288)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42288)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42288)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42288)[0m *** SIGSEGV (@0x0) received by PID 42288 (TID 0x7f60f7577700) from PID 0; stack trace: ***
[2m[36m(pid=42288)[0m     @     0x7f60f7150390 (unknown)
[2m[36m(pid=42288)[0m     @     0x7f31f70f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42288)[0m     @     0x7f31f68227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42277)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42277)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42277)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42277)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42277)[0m *** SIGSEGV (@0x0) received by PID 42277 (TID 0x7fe9d88a1700) from PID 0; stack trace: ***
[2m[36m(pid=42277)[0m     @     0x7fe9d847a390 (unknown)
[2m[36m(pid=42277)[0m     @     0x7fbad82def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42277)[0m     @     0x7fbad7a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42319)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42319)[0m *** SIGSEGV (@0x0) received by PID 42319 (TID 0x7f53a797c700) from PID 0; stack trace: ***
[2m[36m(pid=42319)[0m     @     0x7f53a7555390 (unknown)
[2m[36m(pid=42319)[0m     @     0x7f24a74eaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42319)[0m     @     0x7f24a6c157db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42266)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42266)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42266)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42266)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42266)[0m *** SIGSEGV (@0x0) received by PID 42266 (TID 0x7f10c9900700) from PID 0; stack trace: ***
[2m[36m(pid=42266)[0m     @     0x7f10c94d9390 (unknown)
[2m[36m(pid=42266)[0m     @     0x7ee1c9476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42266)[0m     @     0x7ee1c8ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42266)[0m     @     0x7ee1c8ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42300)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42300)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42300)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42300)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42300)[0m *** SIGSEGV (@0x0) received by PID 42300 (TID 0x7fa3ae74d700) from PID 0; stack trace: ***
[2m[36m(pid=42300)[0m     @     0x7fa3ae326390 (unknown)
[2m[36m(pid=42300)[0m     @     0x7f74ae2b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42300)[0m     @     0x7f74ad9e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42300)[0m     @     0x7f74ad9e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42275)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42275)[0m *** SIGSEGV (@0x0) received by PID 42275 (TID 0x7f5fc4ee6700) from PID 0; stack trace: ***
[2m[36m(pid=42275)[0m     @     0x7f5fc4abf390 (unknown)
[2m[36m(pid=42275)[0m     @     0x7f30c49e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42275)[0m     @     0x7f30c41137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42275)[0m     @     0x7f30c41168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42324)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42324)[0m *** SIGSEGV (@0x0) received by PID 42324 (TID 0x7f6f317dd700) from PID 0; stack trace: ***
[2m[36m(pid=42324)[0m     @     0x7f6f313b6390 (unknown)
[2m[36m(pid=42324)[0m     @     0x7f403135ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42324)[0m     @     0x7f4030a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42324)[0m     @     0x7f4030a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42315)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42315)[0m *** SIGSEGV (@0x0) received by PID 42315 (TID 0x7fcc10a03700) from PID 0; stack trace: ***
[2m[36m(pid=42315)[0m     @     0x7fcc105dc390 (unknown)
[2m[36m(pid=42315)[0m     @     0x7f9d10339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42315)[0m     @     0x7f9d0fa647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42292)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42292)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42292)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42292)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42292)[0m *** SIGSEGV (@0x0) received by PID 42292 (TID 0x7fe6086d7700) from PID 0; stack trace: ***
[2m[36m(pid=42292)[0m     @     0x7fe6082b0390 (unknown)
[2m[36m(pid=42292)[0m     @     0x7fb7080cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42292)[0m     @     0x7fb7077f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42292)[0m     @     0x7fb7077fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42331)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42331)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42331)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42331)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42331)[0m *** SIGSEGV (@0x0) received by PID 42331 (TID 0x7fb352140700) from PID 0; stack trace: ***
[2m[36m(pid=42331)[0m     @     0x7fb351d19390 (unknown)
[2m[36m(pid=42331)[0m     @     0x7f8451c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42331)[0m     @     0x7f84513387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42301)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42301)[0m *** SIGSEGV (@0x0) received by PID 42301 (TID 0x7f0cab162700) from PID 0; stack trace: ***
[2m[36m(pid=42301)[0m     @     0x7f0caad3b390 (unknown)
[2m[36m(pid=42301)[0m     @     0x7eddaaccff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42301)[0m     @     0x7eddaa3fa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42301)[0m     @     0x7eddaa3fd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42273)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42273)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42273)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42273)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42273)[0m *** SIGSEGV (@0x0) received by PID 42273 (TID 0x7efd79275700) from PID 0; stack trace: ***
[2m[36m(pid=42273)[0m     @     0x7efd78e4e390 (unknown)
[2m[36m(pid=42273)[0m     @     0x7ece78dd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42273)[0m     @     0x7ece784fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42273)[0m     @     0x7ece785008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42267)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42267)[0m *** SIGSEGV (@0x0) received by PID 42267 (TID 0x7fb30e2d5700) from PID 0; stack trace: ***
[2m[36m(pid=42267)[0m     @     0x7fb30deae390 (unknown)
[2m[36m(pid=42267)[0m     @     0x7f840de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42267)[0m     @     0x7f840d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42222)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42222)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42222)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42222)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42222)[0m *** SIGSEGV (@0x0) received by PID 42222 (TID 0x7fad289dd700) from PID 0; stack trace: ***
[2m[36m(pid=42222)[0m     @     0x7fad285b6390 (unknown)
[2m[36m(pid=42281)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42281)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42281)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42281)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42281)[0m *** SIGSEGV (@0x0) received by PID 42281 (TID 0x7f1185d9e700) from PID 0; stack trace: ***
[2m[36m(pid=42281)[0m     @     0x7f1185977390 (unknown)
[2m[36m(pid=42281)[0m     @     0x7ee285701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42281)[0m     @     0x7ee284e2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42282)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42282)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42282)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42282)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42282)[0m *** SIGSEGV (@0x0) received by PID 42282 (TID 0x7f24b6706700) from PID 0; stack trace: ***
[2m[36m(pid=42282)[0m     @     0x7f24b62df390 (unknown)
[2m[36m(pid=42282)[0m     @     0x7ef5b6279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42282)[0m     @     0x7ef5b59a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42282)[0m     @     0x7ef5b59a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42295)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42295)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42295)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42295)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42295)[0m *** SIGSEGV (@0x0) received by PID 42295 (TID 0x7f730eb3b700) from PID 0; stack trace: ***
[2m[36m(pid=42295)[0m     @     0x7f730e714390 (unknown)
[2m[36m(pid=42295)[0m     @     0x7f440e57cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42295)[0m     @     0x7f440dca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42286)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42286)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42286)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42286)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42286)[0m *** SIGSEGV (@0x0) received by PID 42286 (TID 0x7f1057b81700) from PID 0; stack trace: ***
[2m[36m(pid=42286)[0m     @     0x7f105775a390 (unknown)
[2m[36m(pid=42286)[0m     @     0x7ee1576aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42286)[0m     @     0x7ee156dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42286)[0m     @     0x7ee156ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42276)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42276)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42276)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42276)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42276)[0m *** SIGSEGV (@0x0) received by PID 42276 (TID 0x7faf6ce36700) from PID 0; stack trace: ***
[2m[36m(pid=42276)[0m     @     0x7faf6ca0f390 (unknown)
[2m[36m(pid=42276)[0m     @     0x7f806c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42276)[0m     @     0x7f806be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42276)[0m     @     0x7f806bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42195)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42195)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42317)[0m     @     0x7f6c8fd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42317)[0m     @     0x7f6c8fd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=42317)[0m     @     0x7f6c8fd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=42317)[0m     @     0x7f6c9061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42317)[0m     @     0x7f6c90642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42283)[0m     @     0x7ecf1fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42283)[0m     @     0x7ecf1fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=42283)[0m     @     0x7ecf20785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42283)[0m     @     0x7ecf207a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42288)[0m     @     0x7f31f68258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42288)[0m     @     0x7f31f6825ad3 at::TensorIterator::for_each()
[2m[36m(pid=42277)[0m     @     0x7fbad7a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42277)[0m     @     0x7fbad7a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=42277)[0m     @     0x7fbad7a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=42277)[0m     @     0x7fbad82efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42319)[0m     @     0x7f24a6c188f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42319)[0m     @     0x7f24a6c18ad3 at::TensorIterator::for_each()
[2m[36m(pid=42266)[0m     @     0x7ee1c8ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=42266)[0m     @     0x7ee1c8ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=42266)[0m     @     0x7ee1c9487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42300)[0m     @     0x7f74ad9e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=42300)[0m     @     0x7f74ad9e7d91 at::TensorIterator::for_each()
[2m[36m(pid=42300)[0m     @     0x7f74ae2cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42300)[0m     @     0x7f74ae2edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42213)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42231)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42231)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42231)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42231)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42231)[0m *** SIGSEGV (@0x0) received by PID 42231 (TID 0x7fabf70df700) from PID 0; stack trace: ***
[2m[36m(pid=42193)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42193)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42193)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42204)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42204)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42204)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42304)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42297)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42297)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42226)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42226)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42226)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42274)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42274)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42274)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42199)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42199)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42279)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42279)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42279)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42275)[0m     @     0x7f30c4116ad3 at::TensorIterator::for_each()
[2m[36m(pid=42275)[0m     @     0x7f30c4116d91 at::TensorIterator::for_each()
[2m[36m(pid=42275)[0m     @     0x7f30c49f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42275)[0m     @     0x7f30c4a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42324)[0m     @     0x7f4030a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=42324)[0m     @     0x7f4030a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=42324)[0m     @     0x7f4031370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42324)[0m     @     0x7f4031393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42315)[0m     @     0x7f9d0fa678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42315)[0m     @     0x7f9d0fa67ad3 at::TensorIterator::for_each()
[2m[36m(pid=42315)[0m     @     0x7f9d0fa67d91 at::TensorIterator::for_each()
[2m[36m(pid=42315)[0m     @     0x7f9d1034ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42292)[0m     @     0x7fb7077fbad3 at::TensorIterator::for_each()
[2m[36m(pid=42292)[0m     @     0x7fb7077fbd91 at::TensorIterator::for_each()
[2m[36m(pid=42292)[0m     @     0x7fb7080deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42292)[0m     @     0x7fb708101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42331)[0m     @     0x7f845133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42331)[0m     @     0x7f845133bad3 at::TensorIterator::for_each()
[2m[36m(pid=42331)[0m     @     0x7f845133bd91 at::TensorIterator::for_each()
[2m[36m(pid=42331)[0m     @     0x7f8451c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42301)[0m     @     0x7eddaa3fdad3 at::TensorIterator::for_each()
[2m[36m(pid=42301)[0m     @     0x7eddaa3fdd91 at::TensorIterator::for_each()
[2m[36m(pid=42301)[0m     @     0x7eddaace0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42301)[0m     @     0x7eddaad03c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42273)[0m     @     0x7ece78500ad3 at::TensorIterator::for_each()
[2m[36m(pid=42273)[0m     @     0x7ece78500d91 at::TensorIterator::for_each()
[2m[36m(pid=42273)[0m     @     0x7ece78de3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42273)[0m     @     0x7ece78e06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42197)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42197)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42197)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42305)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42305)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42305)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42305)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42305)[0m *** SIGSEGV (@0x0) received by PID 42305 (TID 0x7f180e8f3700) from PID 0; stack trace: ***
[2m[36m(pid=42201)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42201)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42201)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42212)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42212)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42212)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42262)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42218)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42218)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42218)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42218)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42218)[0m *** SIGSEGV (@0x0) received by PID 42218 (TID 0x7f8627987700) from PID 0; stack trace: ***
[2m[36m(pid=42218)[0m     @     0x7f8627560390 (unknown)
[2m[36m(pid=42210)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42210)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42210)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42196)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42196)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42196)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42267)[0m     @     0x7f840d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42267)[0m     @     0x7f840d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=42267)[0m     @     0x7f840d552d91 at::TensorIterator::for_each()
[2m[36m(pid=42267)[0m     @     0x7f840de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42267)[0m     @     0x7f840de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42312)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42312)[0m *** SIGSEGV (@0x0) received by PID 42312 (TID 0x7fe51aa65700) from PID 0; stack trace: ***
[2m[36m(pid=42312)[0m     @     0x7fe51a63e390 (unknown)
[2m[36m(pid=42312)[0m     @     0x7fb61a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42312)[0m     @     0x7fb619c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42222)[0m     @     0x7f7e28536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42222)[0m     @     0x7f7e27c617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42222)[0m     @     0x7f7e27c648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42281)[0m     @     0x7ee284e2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42281)[0m     @     0x7ee284e2fad3 at::TensorIterator::for_each()
[2m[36m(pid=42281)[0m     @     0x7ee284e2fd91 at::TensorIterator::for_each()
[2m[36m(pid=42281)[0m     @     0x7ee285712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42281)[0m     @     0x7ee285735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42206)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42206)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42206)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42258)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42258)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42258)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42258)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42258)[0m *** SIGSEGV (@0x0) received by PID 42258 (TID 0x7fd7cbf8c700) from PID 0; stack trace: ***
[2m[36m(pid=42203)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42203)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42203)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42282)[0m     @     0x7ef5b59a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=42282)[0m     @     0x7ef5b59a7d91 at::TensorIterator::for_each()
[2m[36m(pid=42282)[0m     @     0x7ef5b628ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42295)[0m     @     0x7f440dcaa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42295)[0m     @     0x7f440dcaaad3 at::TensorIterator::for_each()
[2m[36m(pid=42286)[0m     @     0x7ee156ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=42286)[0m     @     0x7ee156ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=42286)[0m     @     0x7ee1576bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42276)[0m     @     0x7f806bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42276)[0m     @     0x7f806bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=42276)[0m     @     0x7f806c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42329)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42198)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42198)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42198)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42198)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42198)[0m *** SIGSEGV (@0x0) received by PID 42198 (TID 0x7f78413a3700) from PID 0; stack trace: ***
[2m[36m(pid=42308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42308)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42326)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42326)[0m *** SIGSEGV (@0x0) received by PID 42326 (TID 0x7f0779144700) from PID 0; stack trace: ***
[2m[36m(pid=42326)[0m     @     0x7f0778d1d390 (unknown)
[2m[36m(pid=42224)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42224)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42224)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42310)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42310)[0m *** SIGSEGV (@0x0) received by PID 42310 (TID 0x7f267495d700) from PID 0; stack trace: ***
[2m[36m(pid=42310)[0m     @     0x7f2674536390 (unknown)
[2m[36m(pid=42310)[0m     @     0x7ef7743e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42192)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42192)[0m *** SIGSEGV (@0x0) received by PID 42192 (TID 0x7fac85d1c700) from PID 0; stack trace: ***
[2m[36m(pid=42192)[0m     @     0x7fac858f5390 (unknown)
[2m[36m(pid=42192)[0m     @     0x7f7d85749f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42208)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42200)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42200)[0m *** SIGSEGV (@0x0) received by PID 42200 (TID 0x7ff59675d700) from PID 0; stack trace: ***
[2m[36m(pid=42195)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42195)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42195)[0m *** SIGSEGV (@0x0) received by PID 42195 (TID 0x7fe35077c700) from PID 0; stack trace: ***
[2m[36m(pid=42195)[0m     @     0x7fe350355390 (unknown)
[2m[36m(pid=42195)[0m     @     0x7fb4502f3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42211)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42211)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42211)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42228)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42228)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42228)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42317)[0m     @     0x7f6c8fae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42317)[0m     @     0x7f6c8fae2388 at::native::copy_impl()
[2m[36m(pid=42317)[0m     @     0x7f6c8fae45a4 at::native::copy_()
[2m[36m(pid=42283)[0m     @     0x7ecf1fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42283)[0m     @     0x7ecf1fc48388 at::native::copy_impl()
[2m[36m(pid=42283)[0m     @     0x7ecf1fc4a5a4 at::native::copy_()
[2m[36m(pid=42288)[0m     @     0x7f31f6825d91 at::TensorIterator::for_each()
[2m[36m(pid=42288)[0m     @     0x7f31f7108b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42288)[0m     @     0x7f31f712bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42277)[0m     @     0x7fbad8312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42277)[0m     @     0x7fbad77b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42277)[0m     @     0x7fbad77b2388 at::native::copy_impl()
[2m[36m(pid=42277)[0m     @     0x7fbad77b45a4 at::native::copy_()
[2m[36m(pid=42319)[0m     @     0x7f24a6c18d91 at::TensorIterator::for_each()
[2m[36m(pid=42319)[0m     @     0x7f24a74fbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42319)[0m     @     0x7f24a751ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42266)[0m     @     0x7ee1c94aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42266)[0m     @     0x7ee1c894ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42266)[0m     @     0x7ee1c894a388 at::native::copy_impl()
[2m[36m(pid=42300)[0m     @     0x7f74ad78fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42300)[0m     @     0x7f74ad78d388 at::native::copy_impl()
[2m[36m(pid=42300)[0m     @     0x7f74ad78f5a4 at::native::copy_()
[2m[36m(pid=42213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42213)[0m *** SIGSEGV (@0x0) received by PID 42213 (TID 0x7f96b8b1b700) from PID 0; stack trace: ***
[2m[36m(pid=42213)[0m     @     0x7f96b86f4390 (unknown)
[2m[36m(pid=42213)[0m     @     0x7f67b869ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42213)[0m     @     0x7f67b7dca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42231)[0m     @     0x7fabf6cb8390 (unknown)
[2m[36m(pid=42231)[0m     @     0x7f7cf6c50f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42231)[0m     @     0x7f7cf637b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42193)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42193)[0m *** SIGSEGV (@0x0) received by PID 42193 (TID 0x7f23f90ed700) from PID 0; stack trace: ***
[2m[36m(pid=42193)[0m     @     0x7f23f8cc6390 (unknown)
[2m[36m(pid=42204)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42204)[0m *** SIGSEGV (@0x0) received by PID 42204 (TID 0x7fdf374a5700) from PID 0; stack trace: ***
[2m[36m(pid=42204)[0m     @     0x7fdf3707e390 (unknown)
[2m[36m(pid=42304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42304)[0m *** SIGSEGV (@0x0) received by PID 42304 (TID 0x7f61d8617700) from PID 0; stack trace: ***
[2m[36m(pid=42304)[0m     @     0x7f61d81f0390 (unknown)
[2m[36m(pid=42304)[0m     @     0x7f32d801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42297)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42297)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42297)[0m *** SIGSEGV (@0x0) received by PID 42297 (TID 0x7f25b9364700) from PID 0; stack trace: ***
[2m[36m(pid=42297)[0m     @     0x7f25b8f3d390 (unknown)
[2m[36m(pid=42226)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42226)[0m *** SIGSEGV (@0x0) received by PID 42226 (TID 0x7f5d4a006700) from PID 0; stack trace: ***
[2m[36m(pid=42226)[0m     @     0x7f5d49bdf390 (unknown)
[2m[36m(pid=42226)[0m     @     0x7f2e49b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42194)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42194)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42194)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42194)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42194)[0m *** SIGSEGV (@0x0) received by PID 42194 (TID 0x7f585d91c700) from PID 0; stack trace: ***
[2m[36m(pid=42274)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42274)[0m *** SIGSEGV (@0x0) received by PID 42274 (TID 0x7fc779b90700) from PID 0; stack trace: ***
[2m[36m(pid=42274)[0m     @     0x7fc779769390 (unknown)
[2m[36m(pid=42274)[0m     @     0x7f98796f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42274)[0m     @     0x7f9878e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42199)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42199)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42199)[0m *** SIGSEGV (@0x0) received by PID 42199 (TID 0x7fcfcd675700) from PID 0; stack trace: ***
[2m[36m(pid=42199)[0m     @     0x7fcfcd24e390 (unknown)
[2m[36m(pid=42279)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42279)[0m *** SIGSEGV (@0x0) received by PID 42279 (TID 0x7f66c8e52700) from PID 0; stack trace: ***
[2m[36m(pid=42279)[0m     @     0x7f66c8a2b390 (unknown)
[2m[36m(pid=42279)[0m     @     0x7f37c8911f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42279)[0m     @     0x7f37c803c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42275)[0m     @     0x7f30c3ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42275)[0m     @     0x7f30c3ebc388 at::native::copy_impl()
[2m[36m(pid=42275)[0m     @     0x7f30c3ebe5a4 at::native::copy_()
[2m[36m(pid=42324)[0m     @     0x7f4030835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42324)[0m     @     0x7f4030833388 at::native::copy_impl()
[2m[36m(pid=42324)[0m     @     0x7f40308355a4 at::native::copy_()
[2m[36m(pid=42315)[0m     @     0x7f9d1036dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42315)[0m     @     0x7f9d0f80fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42315)[0m     @     0x7f9d0f80d388 at::native::copy_impl()
[2m[36m(pid=42315)[0m     @     0x7f9d0f80f5a4 at::native::copy_()
[2m[36m(pid=42292)[0m     @     0x7fb7075a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42292)[0m     @     0x7fb7075a1388 at::native::copy_impl()
[2m[36m(pid=42292)[0m     @     0x7fb7075a35a4 at::native::copy_()
[2m[36m(pid=42292)[0m     @     0x7fb707c8e4f5 at::Tensor::copy_()
[2m[36m(pid=42292)[0m     @     0x7fb70a1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42331)[0m     @     0x7f8451c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42331)[0m     @     0x7f84510e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42331)[0m     @     0x7f84510e1388 at::native::copy_impl()
[2m[36m(pid=42331)[0m     @     0x7f84510e35a4 at::native::copy_()
[2m[36m(pid=42301)[0m     @     0x7eddaa1a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42301)[0m     @     0x7eddaa1a3388 at::native::copy_impl()
[2m[36m(pid=42301)[0m     @     0x7eddaa1a55a4 at::native::copy_()
[2m[36m(pid=42301)[0m     @     0x7eddaa8904f5 at::Tensor::copy_()
[2m[36m(pid=42301)[0m     @     0x7eddacd638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42301)[0m     @     0x7eddaa8904f5 at::Tensor::copy_()
[2m[36m(pid=42301)[0m     @     0x7eddb093b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42301)[0m     @     0x558777690fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42301)[0m     @     0x5587775ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42301)[0m     @     0x558777676baf _PyEval_EvalCodeWithName
[2m[36m(pid=42301)[0m     @     0x558777677a20 method_vectorcall
[2m[36m(pid=42301)[0m     @     0x5587775ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x7ece782a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42273)[0m     @     0x7ece782a6388 at::native::copy_impl()
[2m[36m(pid=42273)[0m     @     0x7ece782a85a4 at::native::copy_()
[2m[36m(pid=42273)[0m     @     0x7ece789934f5 at::Tensor::copy_()
[2m[36m(pid=42273)[0m     @     0x7ece7ae668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42273)[0m     @     0x7ece789934f5 at::Tensor::copy_()
[2m[36m(pid=42273)[0m     @     0x7ece7ea3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42197)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42197)[0m *** SIGSEGV (@0x0) received by PID 42197 (TID 0x7f4ac25e5700) from PID 0; stack trace: ***
[2m[36m(pid=42197)[0m     @     0x7f4ac21be390 (unknown)
[2m[36m(pid=42197)[0m     @     0x7f1bc213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42197)[0m     @     0x7f1bc18657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42197)[0m     @     0x7f1bc18688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42305)[0m     @     0x7f180e4cc390 (unknown)
[2m[36m(pid=42305)[0m     @     0x7ee90e467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42305)[0m     @     0x7ee90db927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42305)[0m     @     0x7ee90db958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42305)[0m     @     0x7ee90db95ad3 at::TensorIterator::for_each()
[2m[36m(pid=42201)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42201)[0m *** SIGSEGV (@0x0) received by PID 42201 (TID 0x7f9bdbb81700) from PID 0; stack trace: ***
[2m[36m(pid=42201)[0m     @     0x7f9bdb75a390 (unknown)
[2m[36m(pid=42201)[0m     @     0x7f6cdb70bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42201)[0m     @     0x7f6cdae367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42201)[0m     @     0x7f6cdae398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42212)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42212)[0m *** SIGSEGV (@0x0) received by PID 42212 (TID 0x7fd6623a0700) from PID 0; stack trace: ***
[2m[36m(pid=42212)[0m     @     0x7fd661f79390 (unknown)
[2m[36m(pid=42212)[0m     @     0x7fa761e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42212)[0m     @     0x7fa76154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42212)[0m     @     0x7fa7615528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42212)[0m     @     0x7fa761552ad3 at::TensorIterator::for_each()
[2m[36m(pid=42262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42262)[0m *** SIGSEGV (@0x0) received by PID 42262 (TID 0x7f2aeab4a700) from PID 0; stack trace: ***
[2m[36m(pid=42262)[0m     @     0x7f2aea723390 (unknown)
[2m[36m(pid=42262)[0m     @     0x7efbea361f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42262)[0m     @     0x7efbe9a8c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42262)[0m     @     0x7efbe9a8f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42262)[0m     @     0x7efbe9a8fad3 at::TensorIterator::for_each()
[2m[36m(pid=42218)[0m     @     0x7f572750df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42218)[0m     @     0x7f5726c387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42218)[0m     @     0x7f5726c3b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42218)[0m     @     0x7f5726c3bad3 at::TensorIterator::for_each()
[2m[36m(pid=42218)[0m     @     0x7f5726c3bd91 at::TensorIterator::for_each()
[2m[36m(pid=42218)[0m     @     0x7f572751eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42218)[0m     @     0x7f5727541c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42210)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42210)[0m *** SIGSEGV (@0x0) received by PID 42210 (TID 0x7f5c48f72700) from PID 0; stack trace: ***
[2m[36m(pid=42210)[0m     @     0x7f5c48b4b390 (unknown)
[2m[36m(pid=42210)[0m     @     0x7f2d48af2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42210)[0m     @     0x7f2d4821d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42210)[0m     @     0x7f2d482208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42210)[0m     @     0x7f2d48220ad3 at::TensorIterator::for_each()
[2m[36m(pid=42196)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42196)[0m *** SIGSEGV (@0x0) received by PID 42196 (TID 0x7f4bdbe4a700) from PID 0; stack trace: ***
[2m[36m(pid=42196)[0m     @     0x7f4bdba23390 (unknown)
[2m[36m(pid=42196)[0m     @     0x7f1cdb8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42196)[0m     @     0x7f1cdb0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42196)[0m     @     0x7f1cdb00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42267)[0m     @     0x7f840d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42267)[0m     @     0x7f840d2f8388 at::native::copy_impl()
[2m[36m(pid=42267)[0m     @     0x7f840d2fa5a4 at::native::copy_()
[2m[36m(pid=42267)[0m     @     0x7f840d9e54f5 at::Tensor::copy_()
[2m[36m(pid=42267)[0m     @     0x7f840feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42267)[0m     @     0x7f840d9e54f5 at::Tensor::copy_()
[2m[36m(pid=42312)[0m     @     0x7fb619c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42312)[0m     @     0x7fb619c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=42312)[0m     @     0x7fb619c27d91 at::TensorIterator::for_each()
[2m[36m(pid=42312)[0m     @     0x7fb61a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42312)[0m     @     0x7fb61a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42222)[0m     @     0x7f7e27c64ad3 at::TensorIterator::for_each()
[2m[36m(pid=42222)[0m     @     0x7f7e27c64d91 at::TensorIterator::for_each()
[2m[36m(pid=42222)[0m     @     0x7f7e28547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42222)[0m     @     0x7f7e2856ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42222)[0m     @     0x7f7e27a0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42222)[0m     @     0x7f7e27a0a388 at::native::copy_impl()
[2m[36m(pid=42281)[0m     @     0x7ee284bd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42281)[0m     @     0x7ee284bd5388 at::native::copy_impl()
[2m[36m(pid=42281)[0m     @     0x7ee284bd75a4 at::native::copy_()
[2m[36m(pid=42281)[0m     @     0x7ee2852c24f5 at::Tensor::copy_()
[2m[36m(pid=42281)[0m     @     0x7ee2877958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42206)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42206)[0m *** SIGSEGV (@0x0) received by PID 42206 (TID 0x7f5530417700) from PID 0; stack trace: ***
[2m[36m(pid=42206)[0m     @     0x7f552fff0390 (unknown)
[2m[36m(pid=42206)[0m     @     0x7f262fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42206)[0m     @     0x7f262f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42206)[0m     @     0x7f262f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42206)[0m     @     0x7f262f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=42258)[0m     @     0x7fd7cbb65390 (unknown)
[2m[36m(pid=42258)[0m     @     0x7fa8cb9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42258)[0m     @     0x7fa8cb0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42258)[0m     @     0x7fa8cb0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42258)[0m     @     0x7fa8cb0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=42203)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42203)[0m *** SIGSEGV (@0x0) received by PID 42203 (TID 0x7fa2c68f2700) from PID 0; stack trace: ***
[2m[36m(pid=42203)[0m     @     0x7fa2c64cb390 (unknown)
[2m[36m(pid=42203)[0m     @     0x7f73c634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42203)[0m     @     0x7f73c5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42203)[0m     @     0x7f73c5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42203)[0m     @     0x7f73c5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=42282)[0m     @     0x7ef5b62adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42282)[0m     @     0x7ef5b574fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42282)[0m     @     0x7ef5b574d388 at::native::copy_impl()
[2m[36m(pid=42282)[0m     @     0x7ef5b574f5a4 at::native::copy_()
[2m[36m(pid=42282)[0m     @     0x7ef5b5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=42295)[0m     @     0x7f440dcaad91 at::TensorIterator::for_each()
[2m[36m(pid=42295)[0m     @     0x7f440e58db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42295)[0m     @     0x7f440e5b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42295)[0m     @     0x7f440da52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42295)[0m     @     0x7f440da50388 at::native::copy_impl()
[2m[36m(pid=42295)[0m     @     0x7f440da525a4 at::native::copy_()
[2m[36m(pid=42286)[0m     @     0x7ee1576e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42286)[0m     @     0x7ee156b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42286)[0m     @     0x7ee156b82388 at::native::copy_impl()
[2m[36m(pid=42286)[0m     @     0x7ee156b845a4 at::native::copy_()
[2m[36m(pid=42286)[0m     @     0x7ee15726f4f5 at::Tensor::copy_()
[2m[36m(pid=42286)[0m     @     0x7ee1597428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42276)[0m     @     0x7f806c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42276)[0m     @     0x7f806bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42276)[0m     @     0x7f806bc48388 at::native::copy_impl()
[2m[36m(pid=42276)[0m     @     0x7f806bc4a5a4 at::native::copy_()
[2m[36m(pid=42276)[0m     @     0x7f806c3354f5 at::Tensor::copy_()
[2m[36m(pid=42276)[0m     @     0x7f806e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42205)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42205)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42205)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42205)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42205)[0m *** SIGSEGV (@0x0) received by PID 42205 (TID 0x7fce44183700) from PID 0; stack trace: ***
[2m[36m(pid=42205)[0m     @     0x7fce43d5c390 (unknown)
[2m[36m(pid=42205)[0m     @     0x7f9f43cf9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42205)[0m     @     0x7f9f434247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42313)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42313)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42313)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42313)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42313)[0m *** SIGSEGV (@0x0) received by PID 42313 (TID 0x7f3695244700) from PID 0; stack trace: ***
[2m[36m(pid=42313)[0m     @     0x7f3694e1d390 (unknown)
[2m[36m(pid=42313)[0m     @     0x7f0794da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42313)[0m     @     0x7f07944cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42256)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42256)[0m *** SIGSEGV (@0x0) received by PID 42256 (TID 0x7f085a959700) from PID 0; stack trace: ***
[2m[36m(pid=42256)[0m     @     0x7f085a532390 (unknown)
[2m[36m(pid=42256)[0m     @     0x7ed95a4b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42256)[0m     @     0x7ed959be47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42329)[0m *** SIGSEGV (@0x0) received by PID 42329 (TID 0x7f7662216700) from PID 0; stack trace: ***
[2m[36m(pid=42329)[0m     @     0x7f7661def390 (unknown)
[2m[36m(pid=42329)[0m     @     0x7f4761d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42329)[0m     @     0x7f47614a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42329)[0m     @     0x7f47614a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42329)[0m     @     0x7f47614a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=42263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42263)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42263)[0m *** SIGSEGV (@0x0) received by PID 42263 (TID 0x7f22c5fc1700) from PID 0; stack trace: ***
[2m[36m(pid=42263)[0m     @     0x7f22c5b9a390 (unknown)
[2m[36m(pid=42263)[0m     @     0x7ef3c5b3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42263)[0m     @     0x7ef3c52657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42232)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42232)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42232)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42232)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42232)[0m *** SIGSEGV (@0x0) received by PID 42232 (TID 0x7f57371e4700) from PID 0; stack trace: ***
[2m[36m(pid=42232)[0m     @     0x7f5736dbd390 (unknown)
[2m[36m(pid=42232)[0m     @     0x7f2836d5ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42232)[0m     @     0x7f28364897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42198)[0m     @     0x7f7840f7c390 (unknown)
[2m[36m(pid=42198)[0m     @     0x7f4940ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42198)[0m     @     0x7f49405cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42198)[0m     @     0x7f49405d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42198)[0m     @     0x7f49405d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42278)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42278)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42278)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42278)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42278)[0m *** SIGSEGV (@0x0) received by PID 42278 (TID 0x7fef01b7e700) from PID 0; stack trace: ***
[2m[36m(pid=42278)[0m     @     0x7fef01757390 (unknown)
[2m[36m(pid=42278)[0m     @     0x7fc0016f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42278)[0m     @     0x7fc000e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42308)[0m *** SIGSEGV (@0x0) received by PID 42308 (TID 0x7f6e6bd87700) from PID 0; stack trace: ***
[2m[36m(pid=42308)[0m     @     0x7f6e6b960390 (unknown)
[2m[36m(pid=42308)[0m     @     0x7f3f6b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42308)[0m     @     0x7f3f6b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42308)[0m     @     0x7f3f6b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42287)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42287)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42287)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42287)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42287)[0m *** SIGSEGV (@0x0) received by PID 42287 (TID 0x7f420da21700) from PID 0; stack trace: ***
[2m[36m(pid=42326)[0m     @     0x7ed878bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42326)[0m     @     0x7ed8782fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42326)[0m     @     0x7ed8782ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42326)[0m     @     0x7ed8782ffad3 at::TensorIterator::for_each()
[2m[36m(pid=42259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42259)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42259)[0m *** SIGSEGV (@0x0) received by PID 42259 (TID 0x7f04bd0e1700) from PID 0; stack trace: ***
[2m[36m(pid=42259)[0m     @     0x7f04bccba390 (unknown)
[2m[36m(pid=42259)[0m     @     0x7ed5bcbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42259)[0m     @     0x7ed5bc2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42259)[0m     @     0x7ed5bc2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42224)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42224)[0m *** SIGSEGV (@0x0) received by PID 42224 (TID 0x7f5f8ed59700) from PID 0; stack trace: ***
[2m[36m(pid=42224)[0m     @     0x7f5f8e932390 (unknown)
[2m[36m(pid=42224)[0m     @     0x7f308e8baf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42224)[0m     @     0x7f308dfe57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42224)[0m     @     0x7f308dfe88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42310)[0m     @     0x7ef773b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42310)[0m     @     0x7ef773b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42310)[0m     @     0x7ef773b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=42310)[0m     @     0x7ef773b11d91 at::TensorIterator::for_each()
[2m[36m(pid=42192)[0m     @     0x7f7d84e747db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42192)[0m     @     0x7f7d84e778f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42192)[0m     @     0x7f7d84e77ad3 at::TensorIterator::for_each()
[2m[36m(pid=42192)[0m     @     0x7f7d84e77d91 at::TensorIterator::for_each()
[2m[36m(pid=42192)[0m     @     0x7f7d8575ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42220)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42220)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42220)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42220)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42220)[0m *** SIGSEGV (@0x0) received by PID 42220 (TID 0x7fc01d4c7700) from PID 0; stack trace: ***
[2m[36m(pid=42220)[0m     @     0x7fc01d0a0390 (unknown)
[2m[36m(pid=42220)[0m     @     0x7f911d048f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42220)[0m     @     0x7f911c7737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42220)[0m     @     0x7f911c7768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42306)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42306)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42306)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42306)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42306)[0m *** SIGSEGV (@0x0) received by PID 42306 (TID 0x7f0d30caa700) from PID 0; stack trace: ***
[2m[36m(pid=42306)[0m     @     0x7f0d30883390 (unknown)
[2m[36m(pid=42306)[0m     @     0x7ede30774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42306)[0m     @     0x7ede2fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42260)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42260)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42260)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42260)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42260)[0m *** SIGSEGV (@0x0) received by PID 42260 (TID 0x7f37c7351700) from PID 0; stack trace: ***
[2m[36m(pid=42260)[0m     @     0x7f37c6f2a390 (unknown)
[2m[36m(pid=42260)[0m     @     0x7f08c6ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42260)[0m     @     0x7f08c65fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42257)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42257)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42257)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42257)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42257)[0m *** SIGSEGV (@0x0) received by PID 42257 (TID 0x7f117e5f0700) from PID 0; stack trace: ***
[2m[36m(pid=42257)[0m     @     0x7f117e1c9390 (unknown)
[2m[36m(pid=42257)[0m     @     0x7ee27e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42257)[0m     @     0x7ee27d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42257)[0m     @     0x7ee27d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42265)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42265)[0m *** SIGSEGV (@0x0) received by PID 42265 (TID 0x7f4e9b8fc700) from PID 0; stack trace: ***
[2m[36m(pid=42265)[0m     @     0x7f4e9b4d5390 (unknown)
[2m[36m(pid=42265)[0m     @     0x7f1f9b46af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42265)[0m     @     0x7f1f9ab957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42265)[0m     @     0x7f1f9ab988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42208)[0m *** SIGSEGV (@0x0) received by PID 42208 (TID 0x7ff62fe7a700) from PID 0; stack trace: ***
[2m[36m(pid=42208)[0m     @     0x7ff62fa53390 (unknown)
[2m[36m(pid=42208)[0m     @     0x7fc72f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42208)[0m     @     0x7fc72f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42208)[0m     @     0x7fc72f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42208)[0m     @     0x7fc72f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=42200)[0m     @     0x7ff596336390 (unknown)
[2m[36m(pid=42200)[0m     @     0x7fc695f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42200)[0m     @     0x7fc6956b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42200)[0m     @     0x7fc6956bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42200)[0m     @     0x7fc6956bbad3 at::TensorIterator::for_each()
[2m[36m(pid=42200)[0m     @     0x7fc6956bbd91 at::TensorIterator::for_each()
[2m[36m(pid=42200)[0m     @     0x7fc695f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42200)[0m     @     0x7fc695fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42195)[0m     @     0x7fb44fa1e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42195)[0m     @     0x7fb44fa218f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42195)[0m     @     0x7fb44fa21ad3 at::TensorIterator::for_each()
[2m[36m(pid=42195)[0m     @     0x7fb44fa21d91 at::TensorIterator::for_each()
[2m[36m(pid=42195)[0m     @     0x7fb450304b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42195)[0m     @     0x7fb450327c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42211)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42211)[0m *** SIGSEGV (@0x0) received by PID 42211 (TID 0x7fd2f52b2700) from PID 0; stack trace: ***
[2m[36m(pid=42211)[0m     @     0x7fd2f4e8b390 (unknown)
[2m[36m(pid=42211)[0m     @     0x7fa3f4e1af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42211)[0m     @     0x7fa3f45457db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42211)[0m     @     0x7fa3f45488f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42211)[0m     @     0x7fa3f4548ad3 at::TensorIterator::for_each()
[2m[36m(pid=42211)[0m     @     0x7fa3f4548d91 at::TensorIterator::for_each()
[2m[36m(pid=42211)[0m     @     0x7fa3f4e2bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42302)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42302)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42302)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42302)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42302)[0m *** SIGSEGV (@0x0) received by PID 42302 (TID 0x7f1fd48c2700) from PID 0; stack trace: ***
[2m[36m(pid=42302)[0m     @     0x7f1fd449b390 (unknown)
[2m[36m(pid=42302)[0m     @     0x7ef0d4333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42302)[0m     @     0x7ef0d3a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42302)[0m     @     0x7ef0d3a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42228)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42228)[0m *** SIGSEGV (@0x0) received by PID 42228 (TID 0x7f755b46e700) from PID 0; stack trace: ***
[2m[36m(pid=42228)[0m     @     0x7f755b047390 (unknown)
[2m[36m(pid=42228)[0m     @     0x7f465afd4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42228)[0m     @     0x7f465a6ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42228)[0m     @     0x7f465a7028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42228)[0m     @     0x7f465a702ad3 at::TensorIterator::for_each()
[2m[36m(pid=42317)[0m     @     0x7f6c901cf4f5 at::Tensor::copy_()
[2m[36m(pid=42317)[0m     @     0x7f6c926a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42317)[0m     @     0x7f6c901cf4f5 at::Tensor::copy_()
[2m[36m(pid=42317)[0m     @     0x7f6c9627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42317)[0m     @     0x56223e5e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42317)[0m     @     0x56223e53db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42317)[0m     @     0x56223e5c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42317)[0m     @     0x56223e5c9a20 method_vectorcall
[2m[36m(pid=42317)[0m     @     0x56223e53dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42317)[0m     @     0x56223e5c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42317)[0m     @     0x56223e5c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42317)[0m     @     0x56223e53e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42317)[0m     @     0x56223e5c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42317)[0m     @     0x56223e5c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42317)[0m     @     0x56223e53e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42317)[0m     @     0x56223e5c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42317)[0m     @     0x56223e5c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42317)[0m     @     0x56223e53e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42317)[0m     @     0x56223e5c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42317)[0m     @     0x56223e5c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42317)[0m     @     0x56223e53e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x7ecf203354f5 at::Tensor::copy_()
[2m[36m(pid=42283)[0m     @     0x7ecf228088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42283)[0m     @     0x7ecf203354f5 at::Tensor::copy_()
[2m[36m(pid=42283)[0m     @     0x7ecf263e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42283)[0m     @     0x5617da600fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42283)[0m     @     0x5617da55bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x5617da5e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42283)[0m     @     0x5617da5e7a20 method_vectorcall
[2m[36m(pid=42283)[0m     @     0x5617da55bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x5617da5e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42283)[0m     @     0x5617da5e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42283)[0m     @     0x5617da55c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x5617da5e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42283)[0m     @     0x5617da5e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42283)[0m     @     0x5617da55c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x5617da5e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42283)[0m     @     0x5617da5e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42283)[0m     @     0x5617da55c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42283)[0m     @     0x5617da5e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42283)[0m     @     0x5617da5e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42283)[0m     @     0x5617da55c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x7f31f65cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42288)[0m     @     0x7f31f65cb388 at::native::copy_impl()
[2m[36m(pid=42288)[0m     @     0x7f31f65cd5a4 at::native::copy_()
[2m[36m(pid=42288)[0m     @     0x7f31f6cb84f5 at::Tensor::copy_()
[2m[36m(pid=42288)[0m     @     0x7f31f918b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42277)[0m     @     0x7fbad7e9f4f5 at::Tensor::copy_()
[2m[36m(pid=42277)[0m     @     0x7fbada3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42277)[0m     @     0x7fbad7e9f4f5 at::Tensor::copy_()
[2m[36m(pid=42277)[0m     @     0x7fbaddf4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42277)[0m     @     0x55aa1d15afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42277)[0m     @     0x55aa1d0b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42277)[0m     @     0x55aa1d140baf _PyEval_EvalCodeWithName
[2m[36m(pid=42277)[0m     @     0x55aa1d141a20 method_vectorcall
[2m[36m(pid=42277)[0m     @     0x55aa1d0b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42277)[0m     @     0x55aa1d140baf _PyEval_EvalCodeWithName
[2m[36m(pid=42277)[0m     @     0x55aa1d141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42277)[0m     @     0x55aa1d0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42277)[0m     @     0x55aa1d140baf _PyEval_EvalCodeWithName
[2m[36m(pid=42277)[0m     @     0x55aa1d141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42277)[0m     @     0x55aa1d0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42277)[0m     @     0x55aa1d140baf _PyEval_EvalCodeWithName
[2m[36m(pid=42277)[0m     @     0x55aa1d141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42277)[0m     @     0x55aa1d0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42277)[0m     @     0x55aa1d140baf _PyEval_EvalCodeWithName
[2m[36m(pid=42277)[0m     @     0x55aa1d141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42277)[0m     @     0x55aa1d0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x7f24a69c0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42319)[0m     @     0x7f24a69be388 at::native::copy_impl()
[2m[36m(pid=42319)[0m     @     0x7f24a69c05a4 at::native::copy_()
[2m[36m(pid=42319)[0m     @     0x7f24a70ab4f5 at::Tensor::copy_()
[2m[36m(pid=42319)[0m     @     0x7f24a957e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42319)[0m     @     0x7f24a70ab4f5 at::Tensor::copy_()
[2m[36m(pid=42266)[0m     @     0x7ee1c894c5a4 at::native::copy_()
[2m[36m(pid=42266)[0m     @     0x7ee1c90374f5 at::Tensor::copy_()
[2m[36m(pid=42266)[0m     @     0x7ee1cb50a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42266)[0m     @     0x7ee1c90374f5 at::Tensor::copy_()
[2m[36m(pid=42266)[0m     @     0x7ee1cf0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42266)[0m     @     0x561de908ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42266)[0m     @     0x561de8feab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42266)[0m     @     0x561de9075baf _PyEval_EvalCodeWithName
[2m[36m(pid=42266)[0m     @     0x561de9076a20 method_vectorcall
[2m[36m(pid=42266)[0m     @     0x561de8feabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42266)[0m     @     0x561de9075baf _PyEval_EvalCodeWithName
[2m[36m(pid=42266)[0m     @     0x561de9076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42266)[0m     @     0x561de8feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42266)[0m     @     0x561de9075baf _PyEval_EvalCodeWithName
[2m[36m(pid=42266)[0m     @     0x561de9076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42266)[0m     @     0x561de8feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42266)[0m     @     0x561de9075baf _PyEval_EvalCodeWithName
[2m[36m(pid=42266)[0m     @     0x561de9076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42266)[0m     @     0x561de8feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42266)[0m     @     0x561de9075baf _PyEval_EvalCodeWithName
[2m[36m(pid=42266)[0m     @     0x561de9076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42266)[0m     @     0x561de8feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x7f74ade7a4f5 at::Tensor::copy_()
[2m[36m(pid=42300)[0m     @     0x7f74b034d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42300)[0m     @     0x7f74ade7a4f5 at::Tensor::copy_()
[2m[36m(pid=42300)[0m     @     0x7f74b3f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42300)[0m     @     0x564d9f68afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42300)[0m     @     0x564d9f5e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x564d9f670baf _PyEval_EvalCodeWithName
[2m[36m(pid=42300)[0m     @     0x564d9f671a20 method_vectorcall
[2m[36m(pid=42300)[0m     @     0x564d9f5e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x564d9f670baf _PyEval_EvalCodeWithName
[2m[36m(pid=42300)[0m     @     0x564d9f671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42300)[0m     @     0x564d9f5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x564d9f670baf _PyEval_EvalCodeWithName
[2m[36m(pid=42300)[0m     @     0x564d9f671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42300)[0m     @     0x564d9f5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x564d9f670baf _PyEval_EvalCodeWithName
[2m[36m(pid=42300)[0m     @     0x564d9f671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42300)[0m     @     0x564d9f5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42300)[0m     @     0x564d9f670baf _PyEval_EvalCodeWithName
[2m[36m(pid=42300)[0m     @     0x564d9f671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42300)[0m     @     0x564d9f5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x7f67b7dcd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42213)[0m     @     0x7f67b7dcdad3 at::TensorIterator::for_each()
[2m[36m(pid=42213)[0m     @     0x7f67b7dcdd91 at::TensorIterator::for_each()
[2m[36m(pid=42213)[0m     @     0x7f67b86b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42213)[0m     @     0x7f67b86d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42213)[0m     @     0x7f67b7b75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42231)[0m     @     0x7f7cf637e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42231)[0m     @     0x7f7cf637ead3 at::TensorIterator::for_each()
[2m[36m(pid=42231)[0m     @     0x7f7cf637ed91 at::TensorIterator::for_each()
[2m[36m(pid=42231)[0m     @     0x7f7cf6c61b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42231)[0m     @     0x7f7cf6c84c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42231)[0m     @     0x7f7cf6126a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42231)[0m     @     0x7f7cf6124388 at::native::copy_impl()
[2m[36m(pid=42193)[0m     @     0x7ef4f8c1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42193)[0m     @     0x7ef4f834a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42193)[0m     @     0x7ef4f834d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42193)[0m     @     0x7ef4f834dad3 at::TensorIterator::for_each()
[2m[36m(pid=42193)[0m     @     0x7ef4f834dd91 at::TensorIterator::for_each()
[2m[36m(pid=42193)[0m     @     0x7ef4f8c30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42193)[0m     @     0x7ef4f8c53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42204)[0m     @     0x7fb037029f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42204)[0m     @     0x7fb0367547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42204)[0m     @     0x7fb0367578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42204)[0m     @     0x7fb036757ad3 at::TensorIterator::for_each()
[2m[36m(pid=42204)[0m     @     0x7fb036757d91 at::TensorIterator::for_each()
[2m[36m(pid=42204)[0m     @     0x7fb03703ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42204)[0m     @     0x7fb03705dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42223)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42223)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42223)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42223)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42223)[0m *** SIGSEGV (@0x0) received by PID 42223 (TID 0x7f084c028700) from PID 0; stack trace: ***
[2m[36m(pid=42223)[0m     @     0x7f084bc01390 (unknown)
[2m[36m(pid=42223)[0m     @     0x7ed94b900f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42223)[0m     @     0x7ed94b02b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42223)[0m     @     0x7ed94b02e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42223)[0m     @     0x7ed94b02ead3 at::TensorIterator::for_each()
[2m[36m(pid=42304)[0m     @     0x7f32d77477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42304)[0m     @     0x7f32d774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42304)[0m     @     0x7f32d774aad3 at::TensorIterator::for_each()
[2m[36m(pid=42304)[0m     @     0x7f32d774ad91 at::TensorIterator::for_each()
[2m[36m(pid=42304)[0m     @     0x7f32d802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42304)[0m     @     0x7f32d8050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42304)[0m     @     0x7f32d74f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42297)[0m     @     0x7ef6b8ee6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42297)[0m     @     0x7ef6b86117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42297)[0m     @     0x7ef6b86148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42297)[0m     @     0x7ef6b8614ad3 at::TensorIterator::for_each()
[2m[36m(pid=42297)[0m     @     0x7ef6b8614d91 at::TensorIterator::for_each()
[2m[36m(pid=42297)[0m     @     0x7ef6b8ef7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42297)[0m     @     0x7ef6b8f1ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42226)[0m     @     0x7f2e492a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42226)[0m     @     0x7f2e492a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42226)[0m     @     0x7f2e492a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=42226)[0m     @     0x7f2e492a8d91 at::TensorIterator::for_each()
[2m[36m(pid=42226)[0m     @     0x7f2e49b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42226)[0m     @     0x7f2e49baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42194)[0m     @     0x7f585d4f5390 (unknown)
[2m[36m(pid=42194)[0m     @     0x7f295d432f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42194)[0m     @     0x7f295cb5d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42194)[0m     @     0x7f295cb608f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42194)[0m     @     0x7f295cb60ad3 at::TensorIterator::for_each()
[2m[36m(pid=42194)[0m     @     0x7f295cb60d91 at::TensorIterator::for_each()
[2m[36m(pid=42194)[0m     @     0x7f295d443b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42274)[0m     @     0x7f9878e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42274)[0m     @     0x7f9878e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=42274)[0m     @     0x7f9878e22d91 at::TensorIterator::for_each()
[2m[36m(pid=42274)[0m     @     0x7f9879705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42274)[0m     @     0x7f9879728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42274)[0m     @     0x7f9878bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42274)[0m     @     0x7f9878bc8388 at::native::copy_impl()
[2m[36m(pid=42199)[0m     @     0x7fa0cd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42199)[0m     @     0x7fa0cc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42199)[0m     @     0x7fa0cc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42199)[0m     @     0x7fa0cc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=42199)[0m     @     0x7fa0cc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=42199)[0m     @     0x7fa0cd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42199)[0m     @     0x7fa0cd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42279)[0m     @     0x7f37c803f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42279)[0m     @     0x7f37c803fad3 at::TensorIterator::for_each()
[2m[36m(pid=42279)[0m     @     0x7f37c803fd91 at::TensorIterator::for_each()
[2m[36m(pid=42279)[0m     @     0x7f37c8922b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42279)[0m     @     0x7f37c8945c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42279)[0m     @     0x7f37c7de7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42279)[0m     @     0x7f37c7de5388 at::native::copy_impl()
[2m[36m(pid=42261)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42261)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42261)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42261)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42261)[0m *** SIGSEGV (@0x0) received by PID 42261 (TID 0x7f0d25a81700) from PID 0; stack trace: ***
[2m[36m(pid=42261)[0m     @     0x7f0d2565a390 (unknown)
[2m[36m(pid=42261)[0m     @     0x7ede255e2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42261)[0m     @     0x7ede24d0d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42261)[0m     @     0x7ede24d108f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42261)[0m     @     0x7ede24d10ad3 at::TensorIterator::for_each()
[2m[36m(pid=42209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42209)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42209)[0m *** SIGSEGV (@0x0) received by PID 42209 (TID 0x7f55b97e0700) from PID 0; stack trace: ***
[2m[36m(pid=42209)[0m     @     0x7f55b93b9390 (unknown)
[2m[36m(pid=42209)[0m     @     0x7f26b935ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42209)[0m     @     0x7f26b8a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42209)[0m     @     0x7f26b8a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42230)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42230)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42230)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42230)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42230)[0m *** SIGSEGV (@0x0) received by PID 42230 (TID 0x7ff695b5d700) from PID 0; stack trace: ***
[2m[36m(pid=42230)[0m     @     0x7ff695736390 (unknown)
[2m[36m(pid=42230)[0m     @     0x7fc7956b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42230)[0m     @     0x7fc794ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42230)[0m     @     0x7fc794de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42280)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42280)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42280)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42280)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42280)[0m *** SIGSEGV (@0x0) received by PID 42280 (TID 0x7ff7ea3e7700) from PID 0; stack trace: ***
[2m[36m(pid=42280)[0m     @     0x7ff7e9fc0390 (unknown)
[2m[36m(pid=42280)[0m     @     0x7fc8e9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42280)[0m     @     0x7fc8e954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42280)[0m     @     0x7fc8e95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42280)[0m     @     0x7fc8e9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=42303)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42303)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42303)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42303)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42303)[0m *** SIGSEGV (@0x0) received by PID 42303 (TID 0x7f76b9ccf700) from PID 0; stack trace: ***
[2m[36m(pid=42303)[0m     @     0x7f76b98a8390 (unknown)
[2m[36m(pid=42303)[0m     @     0x7f47b97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42303)[0m     @     0x7f47b8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42303)[0m     @     0x7f47b8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42303)[0m     @     0x7f47b8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=42268)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42268)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42268)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42268)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42268)[0m *** SIGSEGV (@0x0) received by PID 42268 (TID 0x7f40a7870700) from PID 0; stack trace: ***
[2m[36m(pid=42268)[0m     @     0x7f40a7449390 (unknown)
[2m[36m(pid=42268)[0m     @     0x7f11a7229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42268)[0m     @     0x7f11a69547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42268)[0m     @     0x7f11a69578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42268)[0m     @     0x7f11a6957ad3 at::TensorIterator::for_each()
[2m[36m(pid=42284)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42284)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42284)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42284)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42284)[0m *** SIGSEGV (@0x0) received by PID 42284 (TID 0x7ff42444a700) from PID 0; stack trace: ***
[2m[36m(pid=42284)[0m     @     0x7ff424023390 (unknown)
[2m[36m(pid=42284)[0m     @     0x7fc523e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42284)[0m     @     0x7fc5235367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42284)[0m     @     0x7fc5235398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42284)[0m     @     0x7fc523539ad3 at::TensorIterator::for_each()
[2m[36m(pid=42321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42321)[0m *** Aborted at 1604570916 (unix time) try "date -d @1604570916" if you are using GNU date ***
[2m[36m(pid=42321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42321)[0m *** SIGSEGV (@0x0) received by PID 42321 (TID 0x7fc2613cb700) from PID 0; stack trace: ***
[2m[36m(pid=42321)[0m     @     0x7fc260fa4390 (unknown)
[2m[36m(pid=42321)[0m     @     0x7f9360ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42321)[0m     @     0x7f93605cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42321)[0m     @     0x7f93605d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42321)[0m     @     0x7f93605d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42275)[0m     @     0x7f30c45a94f5 at::Tensor::copy_()
[2m[36m(pid=42275)[0m     @     0x7f30c6a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42275)[0m     @     0x7f30c45a94f5 at::Tensor::copy_()
[2m[36m(pid=42275)[0m     @     0x7f30ca65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42275)[0m     @     0x5573272eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42275)[0m     @     0x557327249b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42275)[0m     @     0x5573272d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42275)[0m     @     0x5573272d5a20 method_vectorcall
[2m[36m(pid=42275)[0m     @     0x557327249bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42275)[0m     @     0x5573272d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42275)[0m     @     0x5573272d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42275)[0m     @     0x55732724a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42275)[0m     @     0x5573272d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42275)[0m     @     0x5573272d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42275)[0m     @     0x55732724a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42275)[0m     @     0x5573272d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42275)[0m     @     0x5573272d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42275)[0m     @     0x55732724a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42275)[0m     @     0x5573272d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42275)[0m     @     0x5573272d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42275)[0m     @     0x55732724a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x7f4030f204f5 at::Tensor::copy_()
[2m[36m(pid=42324)[0m     @     0x7f40333f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42324)[0m     @     0x7f4030f204f5 at::Tensor::copy_()
[2m[36m(pid=42324)[0m     @     0x7f4036fcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42324)[0m     @     0x556a624eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42324)[0m     @     0x556a62449b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x556a624d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42324)[0m     @     0x556a624d5a20 method_vectorcall
[2m[36m(pid=42324)[0m     @     0x556a62449bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x556a624d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42324)[0m     @     0x556a624d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42324)[0m     @     0x556a6244a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x556a624d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42324)[0m     @     0x556a624d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42324)[0m     @     0x556a6244a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x556a624d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42324)[0m     @     0x556a624d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42324)[0m     @     0x556a6244a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42324)[0m     @     0x556a624d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42324)[0m     @     0x556a624d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42324)[0m     @     0x556a6244a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x7f9d0fefa4f5 at::Tensor::copy_()
[2m[36m(pid=42315)[0m     @     0x7f9d123cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42315)[0m     @     0x7f9d0fefa4f5 at::Tensor::copy_()
[2m[36m(pid=42315)[0m     @     0x7f9d15fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42315)[0m     @     0x563cb6723fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42315)[0m     @     0x563cb667eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x563cb6709baf _PyEval_EvalCodeWithName
[2m[36m(pid=42315)[0m     @     0x563cb670aa20 method_vectorcall
[2m[36m(pid=42315)[0m     @     0x563cb667ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x563cb6709baf _PyEval_EvalCodeWithName
[2m[36m(pid=42315)[0m     @     0x563cb670a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42315)[0m     @     0x563cb667f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x563cb6709baf _PyEval_EvalCodeWithName
[2m[36m(pid=42315)[0m     @     0x563cb670a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42315)[0m     @     0x563cb667f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x563cb6709baf _PyEval_EvalCodeWithName
[2m[36m(pid=42315)[0m     @     0x563cb670a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42315)[0m     @     0x563cb667f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42315)[0m     @     0x563cb6709baf _PyEval_EvalCodeWithName
[2m[36m(pid=42315)[0m     @     0x563cb670a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42315)[0m     @     0x563cb667f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x7fb707c8e4f5 at::Tensor::copy_()
[2m[36m(pid=42292)[0m     @     0x7fb70dd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42292)[0m     @     0x55dfcce46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42292)[0m     @     0x55dfccda1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x55dfcce2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42292)[0m     @     0x55dfcce2da20 method_vectorcall
[2m[36m(pid=42292)[0m     @     0x55dfccda1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x55dfcce2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42292)[0m     @     0x55dfcce2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42292)[0m     @     0x55dfccda2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x55dfcce2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42292)[0m     @     0x55dfcce2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42292)[0m     @     0x55dfccda2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x55dfcce2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42292)[0m     @     0x55dfcce2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42292)[0m     @     0x55dfccda2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42292)[0m     @     0x55dfcce2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42292)[0m     @     0x55dfcce2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42292)[0m     @     0x55dfccda2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x7f84517ce4f5 at::Tensor::copy_()
[2m[36m(pid=42331)[0m     @     0x7f8453ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42331)[0m     @     0x7f84517ce4f5 at::Tensor::copy_()
[2m[36m(pid=42331)[0m     @     0x7f845787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42331)[0m     @     0x55f9f6bb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42331)[0m     @     0x55f9f6b14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x55f9f6b9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42331)[0m     @     0x55f9f6ba0a20 method_vectorcall
[2m[36m(pid=42331)[0m     @     0x55f9f6b14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x55f9f6b9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42331)[0m     @     0x55f9f6ba0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42331)[0m     @     0x55f9f6b15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x55f9f6b9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42331)[0m     @     0x55f9f6ba0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42331)[0m     @     0x55f9f6b15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x55f9f6b9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42331)[0m     @     0x55f9f6ba0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42331)[0m     @     0x55f9f6b15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42331)[0m     @     0x55f9f6b9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42331)[0m     @     0x55f9f6ba0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42331)[0m     @     0x55f9f6b15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42301)[0m     @     0x558777676baf _PyEval_EvalCodeWithName
[2m[36m(pid=42301)[0m     @     0x558777677643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42301)[0m     @     0x5587775ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42301)[0m     @     0x558777676baf _PyEval_EvalCodeWithName
[2m[36m(pid=42301)[0m     @     0x558777677643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42301)[0m     @     0x5587775ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42301)[0m     @     0x558777676baf _PyEval_EvalCodeWithName
[2m[36m(pid=42301)[0m     @     0x558777677643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42301)[0m     @     0x5587775ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42301)[0m     @     0x558777676baf _PyEval_EvalCodeWithName
[2m[36m(pid=42301)[0m     @     0x558777677643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42301)[0m     @     0x5587775ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fba4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42273)[0m     @     0x562c9faffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fb8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42273)[0m     @     0x562c9fb8ba20 method_vectorcall
[2m[36m(pid=42273)[0m     @     0x562c9faffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fb8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42273)[0m     @     0x562c9fb8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42273)[0m     @     0x562c9fb00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fb8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42273)[0m     @     0x562c9fb8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42273)[0m     @     0x562c9fb00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fb8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42273)[0m     @     0x562c9fb8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42273)[0m     @     0x562c9fb00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42273)[0m     @     0x562c9fb8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42273)[0m     @     0x562c9fb8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42273)[0m     @     0x562c9fb00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x7f1bc1868ad3 at::TensorIterator::for_each()
[2m[36m(pid=42197)[0m     @     0x7f1bc1868d91 at::TensorIterator::for_each()
[2m[36m(pid=42197)[0m     @     0x7f1bc214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42197)[0m     @     0x7f1bc216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42305)[0m     @     0x7ee90db95d91 at::TensorIterator::for_each()
[2m[36m(pid=42305)[0m     @     0x7ee90e478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42305)[0m     @     0x7ee90e49bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42305)[0m     @     0x7ee90d93da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42305)[0m     @     0x7ee90d93b388 at::native::copy_impl()
[2m[36m(pid=42201)[0m     @     0x7f6cdae39ad3 at::TensorIterator::for_each()
[2m[36m(pid=42201)[0m     @     0x7f6cdae39d91 at::TensorIterator::for_each()
[2m[36m(pid=42201)[0m     @     0x7f6cdb71cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42201)[0m     @     0x7f6cdb73fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42212)[0m     @     0x7fa761552d91 at::TensorIterator::for_each()
[2m[36m(pid=42212)[0m     @     0x7fa761e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42212)[0m     @     0x7fa761e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42212)[0m     @     0x7fa7612faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42212)[0m     @     0x7fa7612f8388 at::native::copy_impl()
[2m[36m(pid=42262)[0m     @     0x7efbe9a8fd91 at::TensorIterator::for_each()
[2m[36m(pid=42262)[0m     @     0x7efbea372b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42262)[0m     @     0x7efbea395c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42262)[0m     @     0x7efbe9837a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42262)[0m     @     0x7efbe9835388 at::native::copy_impl()
[2m[36m(pid=42218)[0m     @     0x7f57269e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42218)[0m     @     0x7f57269e1388 at::native::copy_impl()
[2m[36m(pid=42218)[0m     @     0x7f57269e35a4 at::native::copy_()
[2m[36m(pid=42210)[0m     @     0x7f2d48220d91 at::TensorIterator::for_each()
[2m[36m(pid=42210)[0m     @     0x7f2d48b03b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42210)[0m     @     0x7f2d48b26c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42210)[0m     @     0x7f2d47fc8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42210)[0m     @     0x7f2d47fc6388 at::native::copy_impl()
[2m[36m(pid=42196)[0m     @     0x7f1cdb00cad3 at::TensorIterator::for_each()
[2m[36m(pid=42196)[0m     @     0x7f1cdb00cd91 at::TensorIterator::for_each()
[2m[36m(pid=42196)[0m     @     0x7f1cdb8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42196)[0m     @     0x7f1cdb912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42196)[0m     @     0x7f1cdadb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42267)[0m     @     0x7f8413a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42267)[0m     @     0x55b828d8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42267)[0m     @     0x55b828ce6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42267)[0m     @     0x55b828d71baf _PyEval_EvalCodeWithName
[2m[36m(pid=42267)[0m     @     0x55b828d72a20 method_vectorcall
[2m[36m(pid=42267)[0m     @     0x55b828ce6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42267)[0m     @     0x55b828d71baf _PyEval_EvalCodeWithName
[2m[36m(pid=42267)[0m     @     0x55b828d72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42267)[0m     @     0x55b828ce7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42267)[0m     @     0x55b828d71baf _PyEval_EvalCodeWithName
[2m[36m(pid=42267)[0m     @     0x55b828d72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42267)[0m     @     0x55b828ce7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42267)[0m     @     0x55b828d71baf _PyEval_EvalCodeWithName
[2m[36m(pid=42267)[0m     @     0x55b828d72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42267)[0m     @     0x55b828ce7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42267)[0m     @     0x55b828d71baf _PyEval_EvalCodeWithName
[2m[36m(pid=42267)[0m     @     0x55b828d72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42267)[0m     @     0x55b828ce7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x7fb6199cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42312)[0m     @     0x7fb6199cd388 at::native::copy_impl()
[2m[36m(pid=42312)[0m     @     0x7fb6199cf5a4 at::native::copy_()
[2m[36m(pid=42222)[0m     @     0x7f7e27a0c5a4 at::native::copy_()
[2m[36m(pid=42222)[0m     @     0x7f7e280f74f5 at::Tensor::copy_()
[2m[36m(pid=42222)[0m     @     0x7f7e2a5ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42281)[0m     @     0x7ee2852c24f5 at::Tensor::copy_()
[2m[36m(pid=42281)[0m     @     0x7ee28b36d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42281)[0m     @     0x56448baf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42281)[0m     @     0x56448ba51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42281)[0m     @     0x56448badcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42281)[0m     @     0x56448badda20 method_vectorcall
[2m[36m(pid=42281)[0m     @     0x56448ba51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42281)[0m     @     0x56448badcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42281)[0m     @     0x56448badd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42281)[0m     @     0x56448ba52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42281)[0m     @     0x56448badcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42281)[0m     @     0x56448badd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42281)[0m     @     0x56448ba52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42281)[0m     @     0x56448badcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42281)[0m     @     0x56448badd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42281)[0m     @     0x56448ba52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42281)[0m     @     0x56448badcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42281)[0m     @     0x56448badd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42281)[0m     @     0x56448ba52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x7f262f539d91 at::TensorIterator::for_each()
[2m[36m(pid=42206)[0m     @     0x7f262fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42206)[0m     @     0x7f262fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42206)[0m     @     0x7f262f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42206)[0m     @     0x7f262f2df388 at::native::copy_impl()
[2m[36m(pid=42258)[0m     @     0x7fa8cb0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=42258)[0m     @     0x7fa8cb9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42258)[0m     @     0x7fa8cb9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42258)[0m     @     0x7fa8cae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42258)[0m     @     0x7fa8cae99388 at::native::copy_impl()
[2m[36m(pid=42203)[0m     @     0x7f73c5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=42203)[0m     @     0x7f73c635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42203)[0m     @     0x7f73c637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42203)[0m     @     0x7f73c5821a93 at::native::DispatchStub<>::operator()<>()
2020-11-05 10:08:36,765	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=42282)[0m     @     0x7ef5b830d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42282)[0m     @     0x7ef5b5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=42282)[0m     @     0x7ef5bbee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42282)[0m     @     0x561c49809fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42282)[0m     @     0x561c49764b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42282)[0m     @     0x561c497efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42282)[0m     @     0x561c497f0a20 method_vectorcall
[2m[36m(pid=42282)[0m     @     0x561c49764bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42282)[0m     @     0x561c497efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42282)[0m     @     0x561c497f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42282)[0m     @     0x561c49765689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42282)[0m     @     0x561c497efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42282)[0m     @     0x561c497f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42282)[0m     @     0x561c49765689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42282)[0m     @     0x561c497efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42282)[0m     @     0x561c497f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42282)[0m     @     0x561c49765689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42282)[0m     @     0x561c497efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42282)[0m     @     0x561c497f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42282)[0m     @     0x561c49765689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x7f440e13d4f5 at::Tensor::copy_()
[2m[36m(pid=42295)[0m     @     0x7f44106108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42295)[0m     @     0x7f440e13d4f5 at::Tensor::copy_()
[2m[36m(pid=42286)[0m     @     0x7ee15726f4f5 at::Tensor::copy_()
[2m[36m(pid=42286)[0m     @     0x7ee15d31a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42286)[0m     @     0x55cf51271fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42286)[0m     @     0x55cf511ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42286)[0m     @     0x55cf51257baf _PyEval_EvalCodeWithName
[2m[36m(pid=42286)[0m     @     0x55cf51258a20 method_vectorcall
[2m[36m(pid=42286)[0m     @     0x55cf511ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42286)[0m     @     0x55cf51257baf _PyEval_EvalCodeWithName
[2m[36m(pid=42286)[0m     @     0x55cf51258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42286)[0m     @     0x55cf511cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42286)[0m     @     0x55cf51257baf _PyEval_EvalCodeWithName
[2m[36m(pid=42286)[0m     @     0x55cf51258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42286)[0m     @     0x55cf511cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42286)[0m     @     0x55cf51257baf _PyEval_EvalCodeWithName
[2m[36m(pid=42286)[0m     @     0x55cf51258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42286)[0m     @     0x55cf511cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42286)[0m     @     0x55cf51257baf _PyEval_EvalCodeWithName
[2m[36m(pid=42286)[0m     @     0x55cf51258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42286)[0m     @     0x55cf511cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x7f806c3354f5 at::Tensor::copy_()
[2m[36m(pid=42276)[0m     @     0x7f80723e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42276)[0m     @     0x55d90edbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42276)[0m     @     0x55d90ed16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x55d90eda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42276)[0m     @     0x55d90eda2a20 method_vectorcall
[2m[36m(pid=42276)[0m     @     0x55d90ed16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x55d90eda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42276)[0m     @     0x55d90eda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42276)[0m     @     0x55d90ed17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x55d90eda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42276)[0m     @     0x55d90eda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42276)[0m     @     0x55d90ed17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x55d90eda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42276)[0m     @     0x55d90eda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42276)[0m     @     0x55d90ed17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42276)[0m     @     0x55d90eda1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42276)[0m     @     0x55d90eda2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42276)[0m     @     0x55d90ed17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x7f9f434278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42205)[0m     @     0x7f9f43427ad3 at::TensorIterator::for_each()
[2m[36m(pid=42313)[0m     @     0x7f07944d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42313)[0m     @     0x7f07944d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42313)[0m     @     0x7f07944d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42313)[0m     @     0x7f0794db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42313)[0m     @     0x7f0794dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42256)[0m     @     0x7ed959be78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42256)[0m     @     0x7ed959be7ad3 at::TensorIterator::for_each()
[2m[36m(pid=42256)[0m     @     0x7ed959be7d91 at::TensorIterator::for_each()
[2m[36m(pid=42256)[0m     @     0x7ed95a4cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42256)[0m     @     0x7ed95a4edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42329)[0m     @     0x7f47614a5d91 at::TensorIterator::for_each()
[2m[36m(pid=42329)[0m     @     0x7f4761d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42329)[0m     @     0x7f4761dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42329)[0m     @     0x7f476124da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42329)[0m     @     0x7f476124b388 at::native::copy_impl()
[2m[36m(pid=42263)[0m     @     0x7ef3c52688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42263)[0m     @     0x7ef3c5268ad3 at::TensorIterator::for_each()
[2m[36m(pid=42263)[0m     @     0x7ef3c5268d91 at::TensorIterator::for_each()
[2m[36m(pid=42263)[0m     @     0x7ef3c5b4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42263)[0m     @     0x7ef3c5b6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42232)[0m     @     0x7f283648c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42232)[0m     @     0x7f283648cad3 at::TensorIterator::for_each()
[2m[36m(pid=42232)[0m     @     0x7f283648cd91 at::TensorIterator::for_each()
[2m[36m(pid=42232)[0m     @     0x7f2836d6fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42232)[0m     @     0x7f2836d92c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42198)[0m     @     0x7f49405d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42198)[0m     @     0x7f4940eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42198)[0m     @     0x7f4940ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42198)[0m     @     0x7f494037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42198)[0m     @     0x7f4940378388 at::native::copy_impl()
[2m[36m(pid=42278)[0m     @     0x7fc000e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42278)[0m     @     0x7fc000e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=42278)[0m     @     0x7fc000e22d91 at::TensorIterator::for_each()
[2m[36m(pid=42278)[0m     @     0x7fc001705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42278)[0m     @     0x7fc001728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42308)[0m     @     0x7f3f6b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=42308)[0m     @     0x7f3f6b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=42308)[0m     @     0x7f3f6b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42308)[0m     @     0x7f3f6b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42308)[0m     @     0x7f3f6adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42308)[0m     @     0x7f3f6adb2388 at::native::copy_impl()
[2m[36m(pid=42287)[0m     @     0x7f420d5fa390 (unknown)
[2m[36m(pid=42287)[0m     @     0x7f130d57ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42287)[0m     @     0x7f130ccaa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42287)[0m     @     0x7f130ccad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42287)[0m     @     0x7f130ccadad3 at::TensorIterator::for_each()
[2m[36m(pid=42326)[0m     @     0x7ed8782ffd91 at::TensorIterator::for_each()
[2m[36m(pid=42326)[0m     @     0x7ed878be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42326)[0m     @     0x7ed878c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42326)[0m     @     0x7ed8780a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42326)[0m     @     0x7ed8780a5388 at::native::copy_impl()
[2m[36m(pid=42326)[0m     @     0x7ed8780a75a4 at::native::copy_()
[2m[36m(pid=42259)[0m     @     0x7ed5bc2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=42259)[0m     @     0x7ed5bc2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=42259)[0m     @     0x7ed5bcbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42259)[0m     @     0x7ed5bcc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42224)[0m     @     0x7f308dfe8ad3 at::TensorIterator::for_each()
[2m[36m(pid=42224)[0m     @     0x7f308dfe8d91 at::TensorIterator::for_each()
[2m[36m(pid=42224)[0m     @     0x7f308e8cbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42224)[0m     @     0x7f308e8eec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42310)[0m     @     0x7ef7743f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42310)[0m     @     0x7ef774417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42310)[0m     @     0x7ef7738b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42310)[0m     @     0x7ef7738b7388 at::native::copy_impl()
[2m[36m(pid=42310)[0m     @     0x7ef7738b95a4 at::native::copy_()
[2m[36m(pid=42192)[0m     @     0x7f7d8577dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42192)[0m     @     0x7f7d84c1fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42192)[0m     @     0x7f7d84c1d388 at::native::copy_impl()
[2m[36m(pid=42192)[0m     @     0x7f7d84c1f5a4 at::native::copy_()
[2m[36m(pid=42220)[0m     @     0x7f911c776ad3 at::TensorIterator::for_each()
[2m[36m(pid=42220)[0m     @     0x7f911c776d91 at::TensorIterator::for_each()
[2m[36m(pid=42220)[0m     @     0x7f911d059b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42220)[0m     @     0x7f911d07cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42306)[0m     @     0x7ede2fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42306)[0m     @     0x7ede2fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42260)[0m     @     0x7f08c66018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42260)[0m     @     0x7f08c6601ad3 at::TensorIterator::for_each()
[2m[36m(pid=42260)[0m     @     0x7f08c6601d91 at::TensorIterator::for_each()
[2m[36m(pid=42260)[0m     @     0x7f08c6ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42257)[0m     @     0x7ee27d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=42257)[0m     @     0x7ee27d868d91 at::TensorIterator::for_each()
[2m[36m(pid=42257)[0m     @     0x7ee27e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42257)[0m     @     0x7ee27e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42265)[0m     @     0x7f1f9ab98ad3 at::TensorIterator::for_each()
[2m[36m(pid=42265)[0m     @     0x7f1f9ab98d91 at::TensorIterator::for_each()
[2m[36m(pid=42208)[0m     @     0x7fc72f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=42208)[0m     @     0x7fc72f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42208)[0m     @     0x7fc72f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42208)[0m     @     0x7fc72edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42208)[0m     @     0x7fc72edb2388 at::native::copy_impl()
[2m[36m(pid=42200)[0m     @     0x7fc695463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42200)[0m     @     0x7fc695461388 at::native::copy_impl()
[2m[36m(pid=42200)[0m     @     0x7fc6954635a4 at::native::copy_()
[2m[36m(pid=42195)[0m     @     0x7fb44f7c9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42195)[0m     @     0x7fb44f7c7388 at::native::copy_impl()
[2m[36m(pid=42195)[0m     @     0x7fb44f7c95a4 at::native::copy_()
[2m[36m(pid=42211)[0m     @     0x7fa3f4e4ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42211)[0m     @     0x7fa3f42f0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42211)[0m     @     0x7fa3f42ee388 at::native::copy_impl()
[2m[36m(pid=42302)[0m     @     0x7ef0d3a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=42302)[0m     @     0x7ef0d3a61d91 at::TensorIterator::for_each()
[2m[36m(pid=42228)[0m     @     0x7f465a702d91 at::TensorIterator::for_each()
[2m[36m(pid=42228)[0m     @     0x7f465afe5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42228)[0m     @     0x7f465b008c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42288)[0m     @     0x7f31f6cb84f5 at::Tensor::copy_()
[2m[36m(pid=42288)[0m     @     0x7f31fcd6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42288)[0m     @     0x55e483186fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42288)[0m     @     0x55e4830e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x55e48316cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42288)[0m     @     0x55e48316da20 method_vectorcall
[2m[36m(pid=42288)[0m     @     0x55e4830e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x55e48316cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42288)[0m     @     0x55e48316d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42288)[0m     @     0x55e4830e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x55e48316cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42288)[0m     @     0x55e48316d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42288)[0m     @     0x55e4830e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x55e48316cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42288)[0m     @     0x55e48316d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42288)[0m     @     0x55e4830e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42288)[0m     @     0x55e48316cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42288)[0m     @     0x55e48316d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42288)[0m     @     0x55e4830e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x7f24ad15679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42319)[0m     @     0x55d362089fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42319)[0m     @     0x55d361fe4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x55d36206fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42319)[0m     @     0x55d362070a20 method_vectorcall
[2m[36m(pid=42319)[0m     @     0x55d361fe4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x55d36206fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42319)[0m     @     0x55d362070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42319)[0m     @     0x55d361fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x55d36206fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42319)[0m     @     0x55d362070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42319)[0m     @     0x55d361fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x55d36206fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42319)[0m     @     0x55d362070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42319)[0m     @     0x55d361fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42319)[0m     @     0x55d36206fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42319)[0m     @     0x55d362070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42319)[0m     @     0x55d361fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x7f67b7b73388 at::native::copy_impl()
[2m[36m(pid=42213)[0m     @     0x7f67b7b755a4 at::native::copy_()
[2m[36m(pid=42231)[0m     @     0x7f7cf61265a4 at::native::copy_()
[2m[36m(pid=42231)[0m     @     0x7f7cf68114f5 at::Tensor::copy_()
[2m[36m(pid=42231)[0m     @     0x7f7cf8ce48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42193)[0m     @     0x7ef4f80f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42193)[0m     @     0x7ef4f80f3388 at::native::copy_impl()
[2m[36m(pid=42193)[0m     @     0x7ef4f80f55a4 at::native::copy_()
[2m[36m(pid=42193)[0m     @     0x7ef4f87e04f5 at::Tensor::copy_()
[2m[36m(pid=42204)[0m     @     0x7fb0364ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42204)[0m     @     0x7fb0364fd388 at::native::copy_impl()
[2m[36m(pid=42204)[0m     @     0x7fb0364ff5a4 at::native::copy_()
[2m[36m(pid=42204)[0m     @     0x7fb036bea4f5 at::Tensor::copy_()
[2m[36m(pid=42223)[0m     @     0x7ed94b02ed91 at::TensorIterator::for_each()
[2m[36m(pid=42223)[0m     @     0x7ed94b911b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42223)[0m     @     0x7ed94b934c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42223)[0m     @     0x7ed94add6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42223)[0m     @     0x7ed94add4388 at::native::copy_impl()
[2m[36m(pid=42304)[0m     @     0x7f32d74f0388 at::native::copy_impl()
[2m[36m(pid=42304)[0m     @     0x7f32d74f25a4 at::native::copy_()
[2m[36m(pid=42304)[0m     @     0x7f32d7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=42304)[0m     @     0x7f32da0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42297)[0m     @     0x7ef6b83bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42297)[0m     @     0x7ef6b83ba388 at::native::copy_impl()
[2m[36m(pid=42297)[0m     @     0x7ef6b83bc5a4 at::native::copy_()
[2m[36m(pid=42297)[0m     @     0x7ef6b8aa74f5 at::Tensor::copy_()
[2m[36m(pid=42226)[0m     @     0x7f2e49050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42226)[0m     @     0x7f2e4904e388 at::native::copy_impl()
[2m[36m(pid=42226)[0m     @     0x7f2e490505a4 at::native::copy_()
[2m[36m(pid=42226)[0m     @     0x7f2e4973b4f5 at::Tensor::copy_()
[2m[36m(pid=42194)[0m     @     0x7f295d466c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42194)[0m     @     0x7f295c908a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42194)[0m     @     0x7f295c906388 at::native::copy_impl()
[2m[36m(pid=42194)[0m     @     0x7f295c9085a4 at::native::copy_()
[2m[36m(pid=42274)[0m     @     0x7f9878bca5a4 at::native::copy_()
[2m[36m(pid=42274)[0m     @     0x7f98792b54f5 at::Tensor::copy_()
[2m[36m(pid=42274)[0m     @     0x7f987b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42199)[0m     @     0x7fa0cc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42199)[0m     @     0x7fa0cc589388 at::native::copy_impl()
[2m[36m(pid=42199)[0m     @     0x7fa0cc58b5a4 at::native::copy_()
[2m[36m(pid=42199)[0m     @     0x7fa0ccc764f5 at::Tensor::copy_()
[2m[36m(pid=42279)[0m     @     0x7f37c7de75a4 at::native::copy_()
[2m[36m(pid=42279)[0m     @     0x7f37c84d24f5 at::Tensor::copy_()
[2m[36m(pid=42279)[0m     @     0x7f37ca9a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42261)[0m     @     0x7ede24d10d91 at::TensorIterator::for_each()
[2m[36m(pid=42261)[0m     @     0x7ede255f3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42261)[0m     @     0x7ede25616c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42261)[0m     @     0x7ede24ab8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42209)[0m     @     0x7f26b8a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=42209)[0m     @     0x7f26b8a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=42209)[0m     @     0x7f26b9370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42209)[0m     @     0x7f26b9393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42209)[0m     @     0x7f26b8835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42230)[0m     @     0x7fc794de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42230)[0m     @     0x7fc794de2d91 at::TensorIterator::for_each()
[2m[36m(pid=42230)[0m     @     0x7fc7956c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42230)[0m     @     0x7fc7956e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42280)[0m     @     0x7fc8e9552d91 at::TensorIterator::for_each()
[2m[36m(pid=42280)[0m     @     0x7fc8e9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42280)[0m     @     0x7fc8e9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42280)[0m     @     0x7fc8e92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42280)[0m     @     0x7fc8e92f8388 at::native::copy_impl()
[2m[36m(pid=42303)[0m     @     0x7f47b8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=42303)[0m     @     0x7f47b980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42303)[0m     @     0x7f47b982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42303)[0m     @     0x7f47b8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42303)[0m     @     0x7f47b8ccd388 at::native::copy_impl()
[2m[36m(pid=42268)[0m     @     0x7f11a6957d91 at::TensorIterator::for_each()
[2m[36m(pid=42268)[0m     @     0x7f11a723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42268)[0m     @     0x7f11a725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42268)[0m     @     0x7f11a66ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42268)[0m     @     0x7f11a66fd388 at::native::copy_impl()
[2m[36m(pid=42284)[0m     @     0x7fc523539d91 at::TensorIterator::for_each()
[2m[36m(pid=42284)[0m     @     0x7fc523e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42284)[0m     @     0x7fc523e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42284)[0m     @     0x7fc5232e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42284)[0m     @     0x7fc5232df388 at::native::copy_impl()
[2m[36m(pid=42284)[0m     @     0x7fc5232e15a4 at::native::copy_()
[2m[36m(pid=42321)[0m     @     0x7f93605d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42321)[0m     @     0x7f9360eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42321)[0m     @     0x7f9360ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42321)[0m     @     0x7f936037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42321)[0m     @     0x7f9360378388 at::native::copy_impl()
[2m[36m(pid=42197)[0m     @     0x7f1bc1610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42197)[0m     @     0x7f1bc160e388 at::native::copy_impl()
[2m[36m(pid=42197)[0m     @     0x7f1bc16105a4 at::native::copy_()
[2m[36m(pid=42305)[0m     @     0x7ee90d93d5a4 at::native::copy_()
[2m[36m(pid=42305)[0m     @     0x7ee90e0284f5 at::Tensor::copy_()
[2m[36m(pid=42305)[0m     @     0x7ee9104fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42201)[0m     @     0x7f6cdabe1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42201)[0m     @     0x7f6cdabdf388 at::native::copy_impl()
[2m[36m(pid=42201)[0m     @     0x7f6cdabe15a4 at::native::copy_()
[2m[36m(pid=42201)[0m     @     0x7f6cdb2cc4f5 at::Tensor::copy_()
[2m[36m(pid=42212)[0m     @     0x7fa7612fa5a4 at::native::copy_()
[2m[36m(pid=42212)[0m     @     0x7fa7619e54f5 at::Tensor::copy_()
[2m[36m(pid=42212)[0m     @     0x7fa763eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42262)[0m     @     0x7efbe98375a4 at::native::copy_()
[2m[36m(pid=42262)[0m     @     0x7efbe9f224f5 at::Tensor::copy_()
[2m[36m(pid=42262)[0m     @     0x7efbec3f58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42218)[0m     @     0x7f57270ce4f5 at::Tensor::copy_()
[2m[36m(pid=42218)[0m     @     0x7f57295a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42218)[0m     @     0x7f57270ce4f5 at::Tensor::copy_()
[2m[36m(pid=42218)[0m     @     0x7f572d17979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42218)[0m     @     0x563f4d0dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42218)[0m     @     0x563f4d03ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42218)[0m     @     0x563f4d0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42218)[0m     @     0x563f4d0c6a20 method_vectorcall
[2m[36m(pid=42218)[0m     @     0x563f4d03abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42218)[0m     @     0x563f4d0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42218)[0m     @     0x563f4d0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42218)[0m     @     0x563f4d03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42218)[0m     @     0x563f4d0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42218)[0m     @     0x563f4d0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42218)[0m     @     0x563f4d03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42218)[0m     @     0x563f4d0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42218)[0m     @     0x563f4d0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42218)[0m     @     0x563f4d03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42218)[0m     @     0x563f4d0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42218)[0m     @     0x563f4d0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42218)[0m     @     0x563f4d03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x7f2d47fc85a4 at::native::copy_()
[2m[36m(pid=42210)[0m     @     0x7f2d486b34f5 at::Tensor::copy_()
[2m[36m(pid=42210)[0m     @     0x7f2d4ab868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42196)[0m     @     0x7f1cdadb2388 at::native::copy_impl()
[2m[36m(pid=42196)[0m     @     0x7f1cdadb45a4 at::native::copy_()
[2m[36m(pid=42196)[0m     @     0x7f1cdb49f4f5 at::Tensor::copy_()
[2m[36m(pid=42196)[0m     @     0x7f1cdd9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42312)[0m     @     0x7fb61a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=42312)[0m     @     0x7fb61c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42312)[0m     @     0x7fb61a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=42312)[0m     @     0x7fb62016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42312)[0m     @     0x55591f4a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42312)[0m     @     0x55591f3fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x55591f488baf _PyEval_EvalCodeWithName
[2m[36m(pid=42312)[0m     @     0x55591f489a20 method_vectorcall
[2m[36m(pid=42312)[0m     @     0x55591f3fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x55591f488baf _PyEval_EvalCodeWithName
[2m[36m(pid=42312)[0m     @     0x55591f489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42312)[0m     @     0x55591f3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x55591f488baf _PyEval_EvalCodeWithName
[2m[36m(pid=42312)[0m     @     0x55591f489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42312)[0m     @     0x55591f3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x55591f488baf _PyEval_EvalCodeWithName
[2m[36m(pid=42312)[0m     @     0x55591f489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42312)[0m     @     0x55591f3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42312)[0m     @     0x55591f488baf _PyEval_EvalCodeWithName
[2m[36m(pid=42312)[0m     @     0x55591f489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42312)[0m     @     0x55591f3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x7f7e280f74f5 at::Tensor::copy_()
[2m[36m(pid=42222)[0m     @     0x7f7e2e1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42222)[0m     @     0x5650ae033fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42222)[0m     @     0x5650adf8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x5650ae019baf _PyEval_EvalCodeWithName
[2m[36m(pid=42222)[0m     @     0x5650ae01aa20 method_vectorcall
[2m[36m(pid=42222)[0m     @     0x5650adf8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x5650ae019baf _PyEval_EvalCodeWithName
[2m[36m(pid=42222)[0m     @     0x5650ae01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42222)[0m     @     0x5650adf8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x5650ae019baf _PyEval_EvalCodeWithName
[2m[36m(pid=42222)[0m     @     0x5650ae01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42222)[0m     @     0x5650adf8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x5650ae019baf _PyEval_EvalCodeWithName
[2m[36m(pid=42222)[0m     @     0x5650ae01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42222)[0m     @     0x5650adf8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42222)[0m     @     0x5650ae019baf _PyEval_EvalCodeWithName
[2m[36m(pid=42222)[0m     @     0x5650ae01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42222)[0m     @     0x5650adf8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x7f262f2e15a4 at::native::copy_()
[2m[36m(pid=42206)[0m     @     0x7f262f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42206)[0m     @     0x7f2631e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42206)[0m     @     0x7f262f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42258)[0m     @     0x7fa8cae9b5a4 at::native::copy_()
[2m[36m(pid=42258)[0m     @     0x7fa8cb5864f5 at::Tensor::copy_()
[2m[36m(pid=42258)[0m     @     0x7fa8cda598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42203)[0m     @     0x7f73c581f388 at::native::copy_impl()
[2m[36m(pid=42203)[0m     @     0x7f73c58215a4 at::native::copy_()
[2m[36m(pid=42203)[0m     @     0x7f73c5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=42203)[0m     @     0x7f73c83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42295)[0m     @     0x7f44141e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42295)[0m     @     0x5624d900ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42295)[0m     @     0x5624d8f6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x5624d8ff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42295)[0m     @     0x5624d8ff6a20 method_vectorcall
[2m[36m(pid=42295)[0m     @     0x5624d8f6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x5624d8ff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42295)[0m     @     0x5624d8ff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42295)[0m     @     0x5624d8f6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x5624d8ff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42295)[0m     @     0x5624d8ff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42295)[0m     @     0x5624d8f6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x5624d8ff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42295)[0m     @     0x5624d8ff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42295)[0m     @     0x5624d8f6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42295)[0m     @     0x5624d8ff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42295)[0m     @     0x5624d8ff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42295)[0m     @     0x5624d8f6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x7f9f43427d91 at::TensorIterator::for_each()
[2m[36m(pid=42205)[0m     @     0x7f9f43d0ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42205)[0m     @     0x7f9f43d2dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42205)[0m     @     0x7f9f431cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42205)[0m     @     0x7f9f431cd388 at::native::copy_impl()
[2m[36m(pid=42313)[0m     @     0x7f079427aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42313)[0m     @     0x7f0794278388 at::native::copy_impl()
[2m[36m(pid=42313)[0m     @     0x7f079427a5a4 at::native::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed95998fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42256)[0m     @     0x7ed95998d388 at::native::copy_impl()
[2m[36m(pid=42329)[0m     @     0x7f476124d5a4 at::native::copy_()
[2m[36m(pid=42329)[0m     @     0x7f47619384f5 at::Tensor::copy_()
[2m[36m(pid=42329)[0m     @     0x7f4763e0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42263)[0m     @     0x7ef3c5010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42263)[0m     @     0x7ef3c500e388 at::native::copy_impl()
[2m[36m(pid=42263)[0m     @     0x7ef3c50105a4 at::native::copy_()
[2m[36m(pid=42232)[0m     @     0x7f2836234a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42232)[0m     @     0x7f2836232388 at::native::copy_impl()
[2m[36m(pid=42232)[0m     @     0x7f28362345a4 at::native::copy_()
[2m[36m(pid=42198)[0m     @     0x7f494037a5a4 at::native::copy_()
[2m[36m(pid=42198)[0m     @     0x7f4940a654f5 at::Tensor::copy_()
[2m[36m(pid=42278)[0m     @     0x7fc000bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42278)[0m     @     0x7fc000bc8388 at::native::copy_impl()
[2m[36m(pid=42278)[0m     @     0x7fc000bca5a4 at::native::copy_()
[2m[36m(pid=42308)[0m     @     0x7f3f6adb45a4 at::native::copy_()
[2m[36m(pid=42308)[0m     @     0x7f3f6b49f4f5 at::Tensor::copy_()
[2m[36m(pid=42308)[0m     @     0x7f3f6d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42287)[0m     @     0x7f130ccadd91 at::TensorIterator::for_each()
[2m[36m(pid=42287)[0m     @     0x7f130d590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42287)[0m     @     0x7f130d5b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42287)[0m     @     0x7f130ca55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42287)[0m     @     0x7f130ca53388 at::native::copy_impl()
[2m[36m(pid=42326)[0m     @     0x7ed8787924f5 at::Tensor::copy_()
[2m[36m(pid=42326)[0m     @     0x7ed87ac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42326)[0m     @     0x7ed8787924f5 at::Tensor::copy_()
[2m[36m(pid=42326)[0m     @     0x7ed87e83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42326)[0m     @     0x55e27f29bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42259)[0m     @     0x7ed5bc0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42259)[0m     @     0x7ed5bc0a5388 at::native::copy_impl()
[2m[36m(pid=42259)[0m     @     0x7ed5bc0a75a4 at::native::copy_()
[2m[36m(pid=42259)[0m     @     0x7ed5bc7924f5 at::Tensor::copy_()
[2m[36m(pid=42224)[0m     @     0x7f308dd90a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42224)[0m     @     0x7f308dd8e388 at::native::copy_impl()
[2m[36m(pid=42224)[0m     @     0x7f308dd905a4 at::native::copy_()
[2m[36m(pid=42224)[0m     @     0x7f308e47b4f5 at::Tensor::copy_()
[2m[36m(pid=42310)[0m     @     0x7ef773fa44f5 at::Tensor::copy_()
[2m[36m(pid=42310)[0m     @     0x7ef7764778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42310)[0m     @     0x7ef773fa44f5 at::Tensor::copy_()
[2m[36m(pid=42310)[0m     @     0x7ef77a04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42310)[0m     @     0x562661b49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42310)[0m     @     0x562661aa4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42310)[0m     @     0x562661b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42310)[0m     @     0x562661b30a20 method_vectorcall
[2m[36m(pid=42310)[0m     @     0x562661aa4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42310)[0m     @     0x562661b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42310)[0m     @     0x562661b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42310)[0m     @     0x562661aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42310)[0m     @     0x562661b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42310)[0m     @     0x562661b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42310)[0m     @     0x562661aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42310)[0m     @     0x562661b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42310)[0m     @     0x562661b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42310)[0m     @     0x562661aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42310)[0m     @     0x562661b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42310)[0m     @     0x562661b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42310)[0m     @     0x562661aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x7f7d8530a4f5 at::Tensor::copy_()
[2m[36m(pid=42192)[0m     @     0x7f7d877dd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42192)[0m     @     0x7f7d8530a4f5 at::Tensor::copy_()
[2m[36m(pid=42192)[0m     @     0x7f7d8b3b579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42192)[0m     @     0x5574000e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42192)[0m     @     0x55740003cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x5574000c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42192)[0m     @     0x5574000c8a20 method_vectorcall
[2m[36m(pid=42192)[0m     @     0x55740003cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x5574000c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42192)[0m     @     0x5574000c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42192)[0m     @     0x55740003d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x5574000c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42192)[0m     @     0x5574000c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42192)[0m     @     0x55740003d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x5574000c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42192)[0m     @     0x5574000c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42192)[0m     @     0x55740003d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42192)[0m     @     0x5574000c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42192)[0m     @     0x5574000c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42192)[0m     @     0x55740003d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x7f911c51ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42220)[0m     @     0x7f911c51c388 at::native::copy_impl()
[2m[36m(pid=42220)[0m     @     0x7f911c51e5a4 at::native::copy_()
[2m[36m(pid=42306)[0m     @     0x7ede2fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=42306)[0m     @     0x7ede30785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42306)[0m     @     0x7ede307a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42306)[0m     @     0x7ede2fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42306)[0m     @     0x7ede2fc48388 at::native::copy_impl()
[2m[36m(pid=42260)[0m     @     0x7f08c6f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42260)[0m     @     0x7f08c63a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42260)[0m     @     0x7f08c63a7388 at::native::copy_impl()
[2m[36m(pid=42260)[0m     @     0x7f08c63a95a4 at::native::copy_()
[2m[36m(pid=42257)[0m     @     0x7ee27d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42257)[0m     @     0x7ee27d60e388 at::native::copy_impl()
[2m[36m(pid=42257)[0m     @     0x7ee27d6105a4 at::native::copy_()
[2m[36m(pid=42257)[0m     @     0x7ee27dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=42257)[0m     @     0x7ee2801ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42265)[0m     @     0x7f1f9b47bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42265)[0m     @     0x7f1f9b49ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42265)[0m     @     0x7f1f9a940a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42265)[0m     @     0x7f1f9a93e388 at::native::copy_impl()
[2m[36m(pid=42265)[0m     @     0x7f1f9a9405a4 at::native::copy_()
[2m[36m(pid=42208)[0m     @     0x7fc72edb45a4 at::native::copy_()
[2m[36m(pid=42208)[0m     @     0x7fc72f49f4f5 at::Tensor::copy_()
[2m[36m(pid=42208)[0m     @     0x7fc7319728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42200)[0m     @     0x7fc695b4e4f5 at::Tensor::copy_()
[2m[36m(pid=42200)[0m     @     0x7fc6980218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42200)[0m     @     0x7fc695b4e4f5 at::Tensor::copy_()
[2m[36m(pid=42200)[0m     @     0x7fc69bbf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42200)[0m     @     0x557bd77dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42200)[0m     @     0x557bd7737b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd77c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42200)[0m     @     0x557bd77c3a20 method_vectorcall
[2m[36m(pid=42195)[0m     @     0x7fb44feb44f5 at::Tensor::copy_()
[2m[36m(pid=42195)[0m     @     0x7fb4523878de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42195)[0m     @     0x7fb44feb44f5 at::Tensor::copy_()
[2m[36m(pid=42195)[0m     @     0x7fb455f5f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42195)[0m     @     0x55bdea692fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42195)[0m     @     0x55bdea5edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42195)[0m     @     0x55bdea678baf _PyEval_EvalCodeWithName
[2m[36m(pid=42195)[0m     @     0x55bdea679a20 method_vectorcall
[2m[36m(pid=42195)[0m     @     0x55bdea5edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42195)[0m     @     0x55bdea678baf _PyEval_EvalCodeWithName
[2m[36m(pid=42195)[0m     @     0x55bdea679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42195)[0m     @     0x55bdea5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42195)[0m     @     0x55bdea678baf _PyEval_EvalCodeWithName
[2m[36m(pid=42195)[0m     @     0x55bdea679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42195)[0m     @     0x55bdea5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42195)[0m     @     0x55bdea678baf _PyEval_EvalCodeWithName
[2m[36m(pid=42195)[0m     @     0x55bdea679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42195)[0m     @     0x55bdea5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42195)[0m     @     0x55bdea678baf _PyEval_EvalCodeWithName
[2m[36m(pid=42195)[0m     @     0x55bdea679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42195)[0m     @     0x55bdea5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x7fa3f42f05a4 at::native::copy_()
[2m[36m(pid=42211)[0m     @     0x7fa3f49db4f5 at::Tensor::copy_()
[2m[36m(pid=42211)[0m     @     0x7fa3f6eae8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42302)[0m     @     0x7ef0d4344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42302)[0m     @     0x7ef0d4367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42302)[0m     @     0x7ef0d3809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42302)[0m     @     0x7ef0d3807388 at::native::copy_impl()
[2m[36m(pid=42302)[0m     @     0x7ef0d38095a4 at::native::copy_()
[2m[36m(pid=42228)[0m     @     0x7f465a4aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42228)[0m     @     0x7f465a4a8388 at::native::copy_impl()
[2m[36m(pid=42228)[0m     @     0x7f465a4aa5a4 at::native::copy_()
[2m[36m(pid=42228)[0m     @     0x7f465ab954f5 at::Tensor::copy_()
[2m[36m(pid=42213)[0m     @     0x7f67b82604f5 at::Tensor::copy_()
[2m[36m(pid=42213)[0m     @     0x7f67ba7338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42213)[0m     @     0x7f67b82604f5 at::Tensor::copy_()
[2m[36m(pid=42213)[0m     @     0x7f67be30b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42213)[0m     @     0x562b7acc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42213)[0m     @     0x562b7ac1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x562b7aca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42213)[0m     @     0x562b7aca8a20 method_vectorcall
[2m[36m(pid=42213)[0m     @     0x562b7ac1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x562b7aca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42213)[0m     @     0x562b7aca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42213)[0m     @     0x562b7ac1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x562b7aca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42213)[0m     @     0x562b7aca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42213)[0m     @     0x562b7ac1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x562b7aca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42213)[0m     @     0x562b7aca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42213)[0m     @     0x562b7ac1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42213)[0m     @     0x562b7aca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42213)[0m     @     0x562b7aca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42213)[0m     @     0x562b7ac1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x7f7cf68114f5 at::Tensor::copy_()
[2m[36m(pid=42231)[0m     @     0x7f7cfc8bc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42231)[0m     @     0x56429a705fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42231)[0m     @     0x56429a660b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42231)[0m     @     0x56429a6eca20 method_vectorcall
[2m[36m(pid=42231)[0m     @     0x56429a660bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42231)[0m     @     0x56429a6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42193)[0m     @     0x7ef4facb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42193)[0m     @     0x7ef4f87e04f5 at::Tensor::copy_()
[2m[36m(pid=42193)[0m     @     0x7ef4fe88b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42193)[0m     @     0x5653d7efafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42193)[0m     @     0x5653d7e55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42193)[0m     @     0x5653d7ee0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42193)[0m     @     0x5653d7ee1a20 method_vectorcall
[2m[36m(pid=42193)[0m     @     0x5653d7e55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42193)[0m     @     0x5653d7ee0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42193)[0m     @     0x5653d7ee1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42193)[0m     @     0x5653d7e56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42193)[0m     @     0x5653d7ee0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42193)[0m     @     0x5653d7ee1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42193)[0m     @     0x5653d7e56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42193)[0m     @     0x5653d7ee0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42193)[0m     @     0x5653d7ee1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42193)[0m     @     0x5653d7e56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x7fb0390bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42204)[0m     @     0x7fb036bea4f5 at::Tensor::copy_()
[2m[36m(pid=42204)[0m     @     0x7fb03cc9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42223)[0m     @     0x7ed94add65a4 at::native::copy_()
[2m[36m(pid=42223)[0m     @     0x7ed94b4c14f5 at::Tensor::copy_()
[2m[36m(pid=42304)[0m     @     0x7f32d7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=42304)[0m     @     0x7f32ddc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42304)[0m     @     0x5586becb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42304)[0m     @     0x5586bec0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42304)[0m     @     0x5586bec96baf _PyEval_EvalCodeWithName
[2m[36m(pid=42304)[0m     @     0x5586bec97a20 method_vectorcall
[2m[36m(pid=42304)[0m     @     0x5586bec0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42304)[0m     @     0x5586bec96baf _PyEval_EvalCodeWithName
[2m[36m(pid=42304)[0m     @     0x5586bec97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42304)[0m     @     0x5586bec0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42304)[0m     @     0x5586bec96baf _PyEval_EvalCodeWithName
[2m[36m(pid=42304)[0m     @     0x5586bec97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42304)[0m     @     0x5586bec0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42304)[0m     @     0x5586bec96baf _PyEval_EvalCodeWithName
[2m[36m(pid=42304)[0m     @     0x5586bec97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42304)[0m     @     0x5586bec0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42304)[0m     @     0x5586bec96baf _PyEval_EvalCodeWithName
[2m[36m(pid=42304)[0m     @     0x5586bec97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42304)[0m     @     0x5586bec0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x7ef6baf7a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42297)[0m     @     0x7ef6b8aa74f5 at::Tensor::copy_()
[2m[36m(pid=42297)[0m     @     0x7ef6beb5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42297)[0m     @     0x55fc8bc03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42297)[0m     @     0x55fc8bb5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42297)[0m     @     0x55fc8bbeaa20 method_vectorcall
[2m[36m(pid=42226)[0m     @     0x7f2e4bc0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42226)[0m     @     0x7f2e4973b4f5 at::Tensor::copy_()
[2m[36m(pid=42226)[0m     @     0x7f2e4f7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42226)[0m     @     0x55a6f2341fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42226)[0m     @     0x55a6f229cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42226)[0m     @     0x55a6f2327baf _PyEval_EvalCodeWithName
[2m[36m(pid=42226)[0m     @     0x55a6f2328a20 method_vectorcall
[2m[36m(pid=42226)[0m     @     0x55a6f229cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42226)[0m     @     0x55a6f2327baf _PyEval_EvalCodeWithName
[2m[36m(pid=42226)[0m     @     0x55a6f2328643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42226)[0m     @     0x55a6f229d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42226)[0m     @     0x55a6f2327baf _PyEval_EvalCodeWithName
[2m[36m(pid=42226)[0m     @     0x55a6f2328643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42226)[0m     @     0x55a6f229d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42226)[0m     @     0x55a6f2327baf _PyEval_EvalCodeWithName
[2m[36m(pid=42226)[0m     @     0x55a6f2328643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42226)[0m     @     0x55a6f229d689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:08:36,797	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=42194)[0m     @     0x7f295cff34f5 at::Tensor::copy_()
[2m[36m(pid=42194)[0m     @     0x7f295f4c68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42194)[0m     @     0x7f295cff34f5 at::Tensor::copy_()
[2m[36m(pid=42274)[0m     @     0x7f98792b54f5 at::Tensor::copy_()
[2m[36m(pid=42274)[0m     @     0x7f987f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42274)[0m     @     0x55c1da247fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42274)[0m     @     0x55c1da1a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42274)[0m     @     0x55c1da22dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42274)[0m     @     0x55c1da22ea20 method_vectorcall
[2m[36m(pid=42274)[0m     @     0x55c1da1a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42274)[0m     @     0x55c1da22dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42274)[0m     @     0x55c1da22e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42274)[0m     @     0x55c1da1a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42274)[0m     @     0x55c1da22dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42274)[0m     @     0x55c1da22e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42274)[0m     @     0x55c1da1a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42274)[0m     @     0x55c1da22dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42274)[0m     @     0x55c1da22e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42274)[0m     @     0x55c1da1a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42274)[0m     @     0x55c1da22dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42274)[0m     @     0x55c1da22e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42274)[0m     @     0x55c1da1a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x7fa0cf1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42199)[0m     @     0x7fa0ccc764f5 at::Tensor::copy_()
[2m[36m(pid=42199)[0m     @     0x7fa0d2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42199)[0m     @     0x56177bd73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42199)[0m     @     0x56177bcceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd59baf _PyEval_EvalCodeWithName
[2m[36m(pid=42199)[0m     @     0x56177bd5aa20 method_vectorcall
[2m[36m(pid=42199)[0m     @     0x56177bccebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd59baf _PyEval_EvalCodeWithName
[2m[36m(pid=42199)[0m     @     0x56177bd5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42199)[0m     @     0x56177bccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd59baf _PyEval_EvalCodeWithName
[2m[36m(pid=42199)[0m     @     0x56177bd5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42199)[0m     @     0x56177bccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd59baf _PyEval_EvalCodeWithName
[2m[36m(pid=42199)[0m     @     0x56177bd5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42199)[0m     @     0x56177bccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd59baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x7f37c84d24f5 at::Tensor::copy_()
[2m[36m(pid=42279)[0m     @     0x7f37ce57d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42279)[0m     @     0x558c324befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42279)[0m     @     0x558c32419b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42279)[0m     @     0x558c324a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x558c324a5a20 method_vectorcall
[2m[36m(pid=42279)[0m     @     0x558c32419bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42279)[0m     @     0x558c324a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x558c324a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42279)[0m     @     0x558c3241a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42279)[0m     @     0x558c324a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x558c324a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42279)[0m     @     0x558c3241a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42279)[0m     @     0x558c324a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x558c324a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42279)[0m     @     0x558c3241a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42279)[0m     @     0x558c324a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42279)[0m     @     0x558c324a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42279)[0m     @     0x558c3241a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x7ede24ab6388 at::native::copy_impl()
[2m[36m(pid=42261)[0m     @     0x7ede24ab85a4 at::native::copy_()
[2m[36m(pid=42209)[0m     @     0x7f26b8833388 at::native::copy_impl()
[2m[36m(pid=42209)[0m     @     0x7f26b88355a4 at::native::copy_()
[2m[36m(pid=42230)[0m     @     0x7fc794b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42230)[0m     @     0x7fc794b88388 at::native::copy_impl()
[2m[36m(pid=42230)[0m     @     0x7fc794b8a5a4 at::native::copy_()
[2m[36m(pid=42280)[0m     @     0x7fc8e92fa5a4 at::native::copy_()
[2m[36m(pid=42280)[0m     @     0x7fc8e99e54f5 at::Tensor::copy_()
[2m[36m(pid=42303)[0m     @     0x7f47b8ccf5a4 at::native::copy_()
[2m[36m(pid=42303)[0m     @     0x7f47b93ba4f5 at::Tensor::copy_()
[2m[36m(pid=42268)[0m     @     0x7f11a66ff5a4 at::native::copy_()
[2m[36m(pid=42268)[0m     @     0x7f11a6dea4f5 at::Tensor::copy_()
[2m[36m(pid=42268)[0m     @     0x7f11a92bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42284)[0m     @     0x7fc5239cc4f5 at::Tensor::copy_()
[2m[36m(pid=42284)[0m     @     0x7fc525e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42321)[0m     @     0x7f936037a5a4 at::native::copy_()
[2m[36m(pid=42321)[0m     @     0x7f9360a654f5 at::Tensor::copy_()
[2m[36m(pid=42321)[0m     @     0x7f9362f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42197)[0m     @     0x7f1bc1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=42197)[0m     @     0x7f1bc41ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42197)[0m     @     0x7f1bc1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=42305)[0m     @     0x7ee90e0284f5 at::Tensor::copy_()
[2m[36m(pid=42305)[0m     @     0x7ee9140d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42305)[0m     @     0x564ffb988fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42305)[0m     @     0x564ffb8e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42305)[0m     @     0x564ffb96ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42305)[0m     @     0x564ffb96fa20 method_vectorcall
[2m[36m(pid=42305)[0m     @     0x564ffb8e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42305)[0m     @     0x564ffb96ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42305)[0m     @     0x564ffb96f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42305)[0m     @     0x564ffb8e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42305)[0m     @     0x564ffb96ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42305)[0m     @     0x564ffb96f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42305)[0m     @     0x564ffb8e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42305)[0m     @     0x564ffb96ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42305)[0m     @     0x564ffb96f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42305)[0m     @     0x564ffb8e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42305)[0m     @     0x564ffb96ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42305)[0m     @     0x564ffb96f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42305)[0m     @     0x564ffb8e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x7f6cdd79f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42201)[0m     @     0x7f6cdb2cc4f5 at::Tensor::copy_()
[2m[36m(pid=42201)[0m     @     0x7f6ce137779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42201)[0m     @     0x55b99f23ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42201)[0m     @     0x55b99f19ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f225baf _PyEval_EvalCodeWithName
[2m[36m(pid=42201)[0m     @     0x55b99f226a20 method_vectorcall
[2m[36m(pid=42212)[0m     @     0x7fa7619e54f5 at::Tensor::copy_()
[2m[36m(pid=42212)[0m     @     0x7fa767a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42212)[0m     @     0x55bc65785fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42212)[0m     @     0x55bc656e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42212)[0m     @     0x55bc6576bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42212)[0m     @     0x55bc6576ca20 method_vectorcall
[2m[36m(pid=42212)[0m     @     0x55bc656e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42212)[0m     @     0x55bc6576bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42212)[0m     @     0x55bc6576c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42212)[0m     @     0x55bc656e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42212)[0m     @     0x55bc6576bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42212)[0m     @     0x55bc6576c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42212)[0m     @     0x55bc656e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42212)[0m     @     0x55bc6576bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42212)[0m     @     0x55bc6576c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42212)[0m     @     0x55bc656e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42212)[0m     @     0x55bc6576bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42212)[0m     @     0x55bc6576c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42212)[0m     @     0x55bc656e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x7efbe9f224f5 at::Tensor::copy_()
[2m[36m(pid=42262)[0m     @     0x7efbeffcd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42262)[0m     @     0x55b6854fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42262)[0m     @     0x55b68545ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x55b6854e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42262)[0m     @     0x55b6854e6a20 method_vectorcall
[2m[36m(pid=42262)[0m     @     0x55b68545abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x55b6854e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42262)[0m     @     0x55b6854e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42262)[0m     @     0x55b68545b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x55b6854e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42262)[0m     @     0x55b6854e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42262)[0m     @     0x55b68545b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x55b6854e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42262)[0m     @     0x55b6854e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42262)[0m     @     0x55b68545b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42262)[0m     @     0x55b6854e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42262)[0m     @     0x55b6854e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42262)[0m     @     0x55b68545b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x7f2d486b34f5 at::Tensor::copy_()
[2m[36m(pid=42210)[0m     @     0x7f2d4e75e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42210)[0m     @     0x55bcf8197fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42210)[0m     @     0x55bcf80f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x55bcf817dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42210)[0m     @     0x55bcf817ea20 method_vectorcall
[2m[36m(pid=42210)[0m     @     0x55bcf80f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x55bcf817dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42210)[0m     @     0x55bcf817e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42210)[0m     @     0x55bcf80f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x55bcf817dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42210)[0m     @     0x55bcf817e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42210)[0m     @     0x55bcf80f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x55bcf817dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42210)[0m     @     0x55bcf817e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42210)[0m     @     0x55bcf80f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42210)[0m     @     0x55bcf817dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42210)[0m     @     0x55bcf817e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42210)[0m     @     0x55bcf80f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x7f1cdb49f4f5 at::Tensor::copy_()
[2m[36m(pid=42196)[0m     @     0x7f1ce154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42196)[0m     @     0x559ed0190fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42196)[0m     @     0x559ed00ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x559ed0176baf _PyEval_EvalCodeWithName
[2m[36m(pid=42196)[0m     @     0x559ed0177a20 method_vectorcall
[2m[36m(pid=42196)[0m     @     0x559ed00ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x559ed0176baf _PyEval_EvalCodeWithName
[2m[36m(pid=42196)[0m     @     0x559ed0177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42196)[0m     @     0x559ed00ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x559ed0176baf _PyEval_EvalCodeWithName
[2m[36m(pid=42196)[0m     @     0x559ed0177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42196)[0m     @     0x559ed00ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x559ed0176baf _PyEval_EvalCodeWithName
[2m[36m(pid=42196)[0m     @     0x559ed0177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42196)[0m     @     0x559ed00ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42196)[0m     @     0x559ed0176baf _PyEval_EvalCodeWithName
[2m[36m(pid=42196)[0m     @     0x559ed0177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42196)[0m     @     0x559ed00ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x7f2635a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42206)[0m     @     0x5609793b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42206)[0m     @     0x56097930eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x560979399baf _PyEval_EvalCodeWithName
[2m[36m(pid=42206)[0m     @     0x56097939aa20 method_vectorcall
[2m[36m(pid=42206)[0m     @     0x56097930ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x560979399baf _PyEval_EvalCodeWithName
[2m[36m(pid=42206)[0m     @     0x56097939a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42206)[0m     @     0x56097930f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x560979399baf _PyEval_EvalCodeWithName
[2m[36m(pid=42206)[0m     @     0x56097939a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42206)[0m     @     0x56097930f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x560979399baf _PyEval_EvalCodeWithName
[2m[36m(pid=42206)[0m     @     0x56097939a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42206)[0m     @     0x56097930f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42206)[0m     @     0x560979399baf _PyEval_EvalCodeWithName
[2m[36m(pid=42206)[0m     @     0x56097939a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42206)[0m     @     0x56097930f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x7fa8cb5864f5 at::Tensor::copy_()
[2m[36m(pid=42258)[0m     @     0x7fa8d163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42258)[0m     @     0x561f583ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42258)[0m     @     0x561f58327b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x561f583b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42258)[0m     @     0x561f583b3a20 method_vectorcall
[2m[36m(pid=42258)[0m     @     0x561f58327bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x561f583b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42258)[0m     @     0x561f583b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42258)[0m     @     0x561f58328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x561f583b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42258)[0m     @     0x561f583b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42258)[0m     @     0x561f58328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x561f583b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42258)[0m     @     0x561f583b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42258)[0m     @     0x561f58328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42258)[0m     @     0x561f583b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42258)[0m     @     0x561f583b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42258)[0m     @     0x561f58328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x7f73c5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=42203)[0m     @     0x7f73cbfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42203)[0m     @     0x555b041c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42203)[0m     @     0x555b0411cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x555b041a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42203)[0m     @     0x555b041a8a20 method_vectorcall
[2m[36m(pid=42203)[0m     @     0x555b0411cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x555b041a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42203)[0m     @     0x555b041a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42203)[0m     @     0x555b0411d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x555b041a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42203)[0m     @     0x555b041a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42203)[0m     @     0x555b0411d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x555b041a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42203)[0m     @     0x555b041a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42203)[0m     @     0x555b0411d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42203)[0m     @     0x555b041a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42203)[0m     @     0x555b041a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42203)[0m     @     0x555b0411d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x7f9f431cf5a4 at::native::copy_()
[2m[36m(pid=42205)[0m     @     0x7f9f438ba4f5 at::Tensor::copy_()
[2m[36m(pid=42205)[0m     @     0x7f9f45d8d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42313)[0m     @     0x7f07949654f5 at::Tensor::copy_()
[2m[36m(pid=42313)[0m     @     0x7f0796e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed95998f5a4 at::native::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed95a07a4f5 at::Tensor::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed95c54d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed95a07a4f5 at::Tensor::copy_()
[2m[36m(pid=42256)[0m     @     0x7ed96012579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42256)[0m     @     0x55ccd43c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42256)[0m     @     0x55ccd431db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42256)[0m     @     0x55ccd43a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42256)[0m     @     0x55ccd43a9a20 method_vectorcall
[2m[36m(pid=42329)[0m     @     0x7f47619384f5 at::Tensor::copy_()
[2m[36m(pid=42329)[0m     @     0x7f47679e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42329)[0m     @     0x55677f7dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42329)[0m     @     0x55677f736b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42329)[0m     @     0x55677f7c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42329)[0m     @     0x55677f7c2a20 method_vectorcall
[2m[36m(pid=42329)[0m     @     0x55677f736bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42329)[0m     @     0x55677f7c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42329)[0m     @     0x55677f7c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42329)[0m     @     0x55677f737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42329)[0m     @     0x55677f7c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42329)[0m     @     0x55677f7c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42329)[0m     @     0x55677f737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42329)[0m     @     0x55677f7c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42329)[0m     @     0x55677f7c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42329)[0m     @     0x55677f737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42329)[0m     @     0x55677f7c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42329)[0m     @     0x55677f7c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42329)[0m     @     0x55677f737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x7ef3c56fb4f5 at::Tensor::copy_()
[2m[36m(pid=42263)[0m     @     0x7ef3c7bce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42263)[0m     @     0x7ef3c56fb4f5 at::Tensor::copy_()
[2m[36m(pid=42263)[0m     @     0x7ef3cb7a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42263)[0m     @     0x559acb6e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42263)[0m     @     0x559acb63bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x559acb6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42263)[0m     @     0x559acb6c7a20 method_vectorcall
[2m[36m(pid=42263)[0m     @     0x559acb63bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x559acb6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42263)[0m     @     0x559acb6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42263)[0m     @     0x559acb63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x559acb6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42263)[0m     @     0x559acb6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42263)[0m     @     0x559acb63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x559acb6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42263)[0m     @     0x559acb6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42263)[0m     @     0x559acb63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x7f283691f4f5 at::Tensor::copy_()
[2m[36m(pid=42232)[0m     @     0x7f2838df28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42232)[0m     @     0x7f283691f4f5 at::Tensor::copy_()
[2m[36m(pid=42232)[0m     @     0x7f283c9ca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42232)[0m     @     0x56374f0f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42232)[0m     @     0x56374f052b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x56374f0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42232)[0m     @     0x56374f0dea20 method_vectorcall
[2m[36m(pid=42232)[0m     @     0x56374f052bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x56374f0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42232)[0m     @     0x56374f0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42232)[0m     @     0x56374f053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x56374f0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42232)[0m     @     0x56374f0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42232)[0m     @     0x56374f053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x56374f0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42232)[0m     @     0x56374f0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42232)[0m     @     0x56374f053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x7f4942f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42198)[0m     @     0x7f4940a654f5 at::Tensor::copy_()
[2m[36m(pid=42198)[0m     @     0x7f4946b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42198)[0m     @     0x563c51b61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42198)[0m     @     0x563c51abcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x563c51b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=42198)[0m     @     0x563c51b48a20 method_vectorcall
[2m[36m(pid=42198)[0m     @     0x563c51abcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x563c51b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=42198)[0m     @     0x563c51b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42198)[0m     @     0x563c51abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x563c51b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=42198)[0m     @     0x563c51b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42198)[0m     @     0x563c51abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x563c51b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=42198)[0m     @     0x563c51b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42198)[0m     @     0x563c51abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42198)[0m     @     0x563c51b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=42198)[0m     @     0x563c51b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42198)[0m     @     0x563c51abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x7fc0012b54f5 at::Tensor::copy_()
[2m[36m(pid=42278)[0m     @     0x7fc0037888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42278)[0m     @     0x7fc0012b54f5 at::Tensor::copy_()
[2m[36m(pid=42278)[0m     @     0x7fc00736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42278)[0m     @     0x564998002fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42278)[0m     @     0x564997f5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x564997fe8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42278)[0m     @     0x564997fe9a20 method_vectorcall
[2m[36m(pid=42278)[0m     @     0x564997f5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x564997fe8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42278)[0m     @     0x564997fe9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42278)[0m     @     0x564997f5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x564997fe8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42278)[0m     @     0x564997fe9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42278)[0m     @     0x564997f5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x564997fe8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42278)[0m     @     0x564997fe9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42278)[0m     @     0x564997f5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42278)[0m     @     0x564997fe8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42278)[0m     @     0x564997fe9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42278)[0m     @     0x564997f5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x7f3f6b49f4f5 at::Tensor::copy_()
[2m[36m(pid=42308)[0m     @     0x7f3f7154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42308)[0m     @     0x555aa9c3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42308)[0m     @     0x555aa9b95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x555aa9c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=42308)[0m     @     0x555aa9c21a20 method_vectorcall
[2m[36m(pid=42308)[0m     @     0x555aa9b95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x555aa9c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=42308)[0m     @     0x555aa9c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42308)[0m     @     0x555aa9b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x555aa9c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=42308)[0m     @     0x555aa9c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42308)[0m     @     0x555aa9b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x555aa9c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=42308)[0m     @     0x555aa9c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42308)[0m     @     0x555aa9b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42308)[0m     @     0x555aa9c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=42308)[0m     @     0x555aa9c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42308)[0m     @     0x555aa9b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x7f130ca555a4 at::native::copy_()
[2m[36m(pid=42287)[0m     @     0x7f130d1404f5 at::Tensor::copy_()
[2m[36m(pid=42326)[0m     @     0x55e27f1f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42326)[0m     @     0x55e27f281baf _PyEval_EvalCodeWithName
[2m[36m(pid=42326)[0m     @     0x55e27f282a20 method_vectorcall
[2m[36m(pid=42326)[0m     @     0x55e27f1f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42326)[0m     @     0x55e27f281baf _PyEval_EvalCodeWithName
[2m[36m(pid=42326)[0m     @     0x55e27f282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42326)[0m     @     0x55e27f1f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42326)[0m     @     0x55e27f281baf _PyEval_EvalCodeWithName
[2m[36m(pid=42326)[0m     @     0x55e27f282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42326)[0m     @     0x55e27f1f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42326)[0m     @     0x55e27f281baf _PyEval_EvalCodeWithName
[2m[36m(pid=42326)[0m     @     0x55e27f282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42326)[0m     @     0x55e27f1f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42326)[0m     @     0x55e27f281baf _PyEval_EvalCodeWithName
[2m[36m(pid=42326)[0m     @     0x55e27f282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42326)[0m     @     0x55e27f1f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x7ed5bec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42259)[0m     @     0x7ed5bc7924f5 at::Tensor::copy_()
[2m[36m(pid=42259)[0m     @     0x7ed5c283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42259)[0m     @     0x5562b2f95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42259)[0m     @     0x5562b2ef0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x5562b2f7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42259)[0m     @     0x5562b2f7ca20 method_vectorcall
[2m[36m(pid=42259)[0m     @     0x5562b2ef0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x5562b2f7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42259)[0m     @     0x5562b2f7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42259)[0m     @     0x5562b2ef1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x5562b2f7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42259)[0m     @     0x5562b2f7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42259)[0m     @     0x5562b2ef1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x5562b2f7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42259)[0m     @     0x5562b2f7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42259)[0m     @     0x5562b2ef1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42259)[0m     @     0x5562b2f7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42259)[0m     @     0x5562b2f7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42259)[0m     @     0x5562b2ef1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x7f309094e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42224)[0m     @     0x7f308e47b4f5 at::Tensor::copy_()
[2m[36m(pid=42224)[0m     @     0x7f309452679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42224)[0m     @     0x55caea092fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42224)[0m     @     0x55cae9fedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea078baf _PyEval_EvalCodeWithName
[2m[36m(pid=42224)[0m     @     0x55caea079a20 method_vectorcall
[2m[36m(pid=42224)[0m     @     0x55cae9fedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea078baf _PyEval_EvalCodeWithName
[2m[36m(pid=42224)[0m     @     0x55caea079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42224)[0m     @     0x55cae9fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea078baf _PyEval_EvalCodeWithName
[2m[36m(pid=42224)[0m     @     0x55caea079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42224)[0m     @     0x55cae9fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea078baf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x7f911cc094f5 at::Tensor::copy_()
[2m[36m(pid=42220)[0m     @     0x7f911f0dc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42220)[0m     @     0x7f911cc094f5 at::Tensor::copy_()
[2m[36m(pid=42220)[0m     @     0x7f9122cb479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42220)[0m     @     0x555eead98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42220)[0m     @     0x555eeacf3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x555eead7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x555eead7fa20 method_vectorcall
[2m[36m(pid=42220)[0m     @     0x555eeacf3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x7ede2fc4a5a4 at::native::copy_()
[2m[36m(pid=42306)[0m     @     0x7ede303354f5 at::Tensor::copy_()
[2m[36m(pid=42306)[0m     @     0x7ede328088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42260)[0m     @     0x7f08c6a944f5 at::Tensor::copy_()
[2m[36m(pid=42260)[0m     @     0x7f08c8f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42260)[0m     @     0x7f08c6a944f5 at::Tensor::copy_()
[2m[36m(pid=42257)[0m     @     0x7ee27dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=42257)[0m     @     0x7ee283da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42257)[0m     @     0x561489ba8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42257)[0m     @     0x561489b03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42257)[0m     @     0x561489b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42257)[0m     @     0x561489b8fa20 method_vectorcall
[2m[36m(pid=42257)[0m     @     0x561489b03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42257)[0m     @     0x561489b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42257)[0m     @     0x561489b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42257)[0m     @     0x561489b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42257)[0m     @     0x561489b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42257)[0m     @     0x561489b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42257)[0m     @     0x561489b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42257)[0m     @     0x561489b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42257)[0m     @     0x561489b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42257)[0m     @     0x561489b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42257)[0m     @     0x561489b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42257)[0m     @     0x561489b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42257)[0m     @     0x561489b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x7f1f9b02b4f5 at::Tensor::copy_()
[2m[36m(pid=42265)[0m     @     0x7f1f9d4fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42208)[0m     @     0x7fc72f49f4f5 at::Tensor::copy_()
[2m[36m(pid=42208)[0m     @     0x7fc73554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42208)[0m     @     0x563315ffbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42208)[0m     @     0x563315f56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42208)[0m     @     0x563315fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42208)[0m     @     0x563315fe2a20 method_vectorcall
[2m[36m(pid=42208)[0m     @     0x563315f56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42208)[0m     @     0x563315fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42208)[0m     @     0x563315fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42208)[0m     @     0x563315f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42208)[0m     @     0x563315fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42208)[0m     @     0x563315fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42208)[0m     @     0x563315f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42208)[0m     @     0x563315fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42208)[0m     @     0x563315fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42208)[0m     @     0x563315f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42208)[0m     @     0x563315fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42208)[0m     @     0x563315fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42208)[0m     @     0x563315f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd7737bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd77c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42200)[0m     @     0x557bd77c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42200)[0m     @     0x557bd7738689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd77c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42200)[0m     @     0x557bd77c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42200)[0m     @     0x557bd7738689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd77c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42200)[0m     @     0x557bd77c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42200)[0m     @     0x557bd7738689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42200)[0m     @     0x557bd77c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42200)[0m     @     0x557bd77c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42200)[0m     @     0x557bd7738689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x7fa3f49db4f5 at::Tensor::copy_()
[2m[36m(pid=42211)[0m     @     0x7fa3faa8679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42211)[0m     @     0x5610e8c69fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42211)[0m     @     0x5610e8bc4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x5610e8c4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42211)[0m     @     0x5610e8c50a20 method_vectorcall
[2m[36m(pid=42211)[0m     @     0x5610e8bc4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x5610e8c4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42211)[0m     @     0x5610e8c50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42211)[0m     @     0x5610e8bc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x5610e8c4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42211)[0m     @     0x5610e8c50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42211)[0m     @     0x5610e8bc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x5610e8c4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42211)[0m     @     0x5610e8c50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42211)[0m     @     0x5610e8bc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42211)[0m     @     0x5610e8c4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42211)[0m     @     0x5610e8c50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42211)[0m     @     0x5610e8bc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x7ef0d3ef44f5 at::Tensor::copy_()
[2m[36m(pid=42302)[0m     @     0x7ef0d63c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42302)[0m     @     0x7ef0d3ef44f5 at::Tensor::copy_()
[2m[36m(pid=42302)[0m     @     0x7ef0d9f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42302)[0m     @     0x55af736c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42302)[0m     @     0x55af73620b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42302)[0m     @     0x55af736aca20 method_vectorcall
[2m[36m(pid=42302)[0m     @     0x55af73620bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x7f465d0688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42228)[0m     @     0x7f465ab954f5 at::Tensor::copy_()
[2m[36m(pid=42228)[0m     @     0x7f4660c4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42228)[0m     @     0x55a3ad233fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42228)[0m     @     0x55a3ad18eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42228)[0m     @     0x55a3ad219baf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x55a3ad21aa20 method_vectorcall
[2m[36m(pid=42228)[0m     @     0x55a3ad18ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42228)[0m     @     0x55a3ad219baf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x55a3ad21a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42228)[0m     @     0x55a3ad18f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42228)[0m     @     0x55a3ad219baf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x55a3ad21a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42228)[0m     @     0x55a3ad18f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42228)[0m     @     0x55a3ad219baf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x55a3ad21a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42228)[0m     @     0x55a3ad18f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42228)[0m     @     0x55a3ad219baf _PyEval_EvalCodeWithName
[2m[36m(pid=42228)[0m     @     0x55a3ad21a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42228)[0m     @     0x55a3ad18f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42193)[0m     @     0x5653d7ee0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42193)[0m     @     0x5653d7ee1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42193)[0m     @     0x5653d7e56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e37dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42204)[0m     @     0x55bd8e2d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e363baf _PyEval_EvalCodeWithName
[2m[36m(pid=42204)[0m     @     0x55bd8e364a20 method_vectorcall
[2m[36m(pid=42204)[0m     @     0x55bd8e2d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e363baf _PyEval_EvalCodeWithName
[2m[36m(pid=42204)[0m     @     0x55bd8e364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42204)[0m     @     0x55bd8e2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e363baf _PyEval_EvalCodeWithName
[2m[36m(pid=42204)[0m     @     0x55bd8e364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42204)[0m     @     0x55bd8e2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e363baf _PyEval_EvalCodeWithName
[2m[36m(pid=42204)[0m     @     0x55bd8e364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42204)[0m     @     0x55bd8e2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42204)[0m     @     0x55bd8e363baf _PyEval_EvalCodeWithName
[2m[36m(pid=42204)[0m     @     0x55bd8e364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42204)[0m     @     0x55bd8e2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x7ed94d9948de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42223)[0m     @     0x7ed94b4c14f5 at::Tensor::copy_()
[2m[36m(pid=42223)[0m     @     0x7ed95156c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42223)[0m     @     0x556c45fabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42223)[0m     @     0x556c45f06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x556c45f91baf _PyEval_EvalCodeWithName
[2m[36m(pid=42223)[0m     @     0x556c45f92a20 method_vectorcall
[2m[36m(pid=42223)[0m     @     0x556c45f06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x556c45f91baf _PyEval_EvalCodeWithName
[2m[36m(pid=42223)[0m     @     0x556c45f92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42223)[0m     @     0x556c45f07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x556c45f91baf _PyEval_EvalCodeWithName
[2m[36m(pid=42223)[0m     @     0x556c45f92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42223)[0m     @     0x556c45f07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x556c45f91baf _PyEval_EvalCodeWithName
[2m[36m(pid=42223)[0m     @     0x556c45f92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42223)[0m     @     0x556c45f07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42223)[0m     @     0x556c45f91baf _PyEval_EvalCodeWithName
[2m[36m(pid=42223)[0m     @     0x556c45f92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42223)[0m     @     0x556c45f07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bb5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42297)[0m     @     0x55fc8bbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42297)[0m     @     0x55fc8bb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42297)[0m     @     0x55fc8bbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42297)[0m     @     0x55fc8bb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42297)[0m     @     0x55fc8bbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42297)[0m     @     0x55fc8bb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42297)[0m     @     0x55fc8bbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42297)[0m     @     0x55fc8bbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42297)[0m     @     0x55fc8bb5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42226)[0m     @     0x55a6f2327baf _PyEval_EvalCodeWithName
[2m[36m(pid=42226)[0m     @     0x55a6f2328643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42226)[0m     @     0x55a6f229d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x7f296309e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42194)[0m     @     0x55cd66e7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42194)[0m     @     0x55cd66ddab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x55cd66e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=42194)[0m     @     0x55cd66e66a20 method_vectorcall
[2m[36m(pid=42194)[0m     @     0x55cd66ddabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x55cd66e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=42194)[0m     @     0x55cd66e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42194)[0m     @     0x55cd66ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x55cd66e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=42194)[0m     @     0x55cd66e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42194)[0m     @     0x55cd66ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x55cd66e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=42194)[0m     @     0x55cd66e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42194)[0m     @     0x55cd66ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42194)[0m     @     0x55cd66e65baf _PyEval_EvalCodeWithName
[2m[36m(pid=42194)[0m     @     0x55cd66e66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42194)[0m     @     0x55cd66ddb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42199)[0m     @     0x56177bd5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42199)[0m     @     0x56177bccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x7ede251a34f5 at::Tensor::copy_()
[2m[36m(pid=42261)[0m     @     0x7ede276768de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42261)[0m     @     0x7ede251a34f5 at::Tensor::copy_()
[2m[36m(pid=42261)[0m     @     0x7ede2b24e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42261)[0m     @     0x56411c8fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42261)[0m     @     0x56411c856b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x56411c8e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42261)[0m     @     0x56411c8e2a20 method_vectorcall
[2m[36m(pid=42261)[0m     @     0x56411c856bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x56411c8e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42261)[0m     @     0x56411c8e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42261)[0m     @     0x56411c857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x56411c8e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42261)[0m     @     0x56411c8e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42261)[0m     @     0x56411c857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x56411c8e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42261)[0m     @     0x56411c8e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42261)[0m     @     0x56411c857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42261)[0m     @     0x56411c8e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42261)[0m     @     0x56411c8e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42261)[0m     @     0x56411c857689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x7f26b8f204f5 at::Tensor::copy_()
[2m[36m(pid=42209)[0m     @     0x7f26bb3f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42209)[0m     @     0x7f26b8f204f5 at::Tensor::copy_()
[2m[36m(pid=42209)[0m     @     0x7f26befcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42209)[0m     @     0x5633cfdcefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42209)[0m     @     0x5633cfd29b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x5633cfdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42209)[0m     @     0x5633cfdb5a20 method_vectorcall
[2m[36m(pid=42209)[0m     @     0x5633cfd29bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x5633cfdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42209)[0m     @     0x5633cfdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42209)[0m     @     0x5633cfd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x5633cfdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42209)[0m     @     0x5633cfdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42209)[0m     @     0x5633cfd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x5633cfdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42209)[0m     @     0x5633cfdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42209)[0m     @     0x5633cfd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42209)[0m     @     0x5633cfdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42209)[0m     @     0x5633cfdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42209)[0m     @     0x5633cfd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x7fc7952754f5 at::Tensor::copy_()
[2m[36m(pid=42230)[0m     @     0x7fc7977488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42230)[0m     @     0x7fc7952754f5 at::Tensor::copy_()
[2m[36m(pid=42230)[0m     @     0x7fc79b32079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42230)[0m     @     0x55ad60575fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42230)[0m     @     0x55ad604d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad6055bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42230)[0m     @     0x55ad6055ca20 method_vectorcall
[2m[36m(pid=42280)[0m     @     0x7fc8ebeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42280)[0m     @     0x7fc8e99e54f5 at::Tensor::copy_()
[2m[36m(pid=42280)[0m     @     0x7fc8efa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42280)[0m     @     0x55a04e643fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42280)[0m     @     0x55a04e59eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42280)[0m     @     0x55a04e629baf _PyEval_EvalCodeWithName
[2m[36m(pid=42280)[0m     @     0x55a04e62aa20 method_vectorcall
[2m[36m(pid=42280)[0m     @     0x55a04e59ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42280)[0m     @     0x55a04e629baf _PyEval_EvalCodeWithName
[2m[36m(pid=42280)[0m     @     0x55a04e62a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42280)[0m     @     0x55a04e59f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42280)[0m     @     0x55a04e629baf _PyEval_EvalCodeWithName
[2m[36m(pid=42280)[0m     @     0x55a04e62a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42280)[0m     @     0x55a04e59f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42280)[0m     @     0x55a04e629baf _PyEval_EvalCodeWithName
[2m[36m(pid=42280)[0m     @     0x55a04e62a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42280)[0m     @     0x55a04e59f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42280)[0m     @     0x55a04e629baf _PyEval_EvalCodeWithName
[2m[36m(pid=42280)[0m     @     0x55a04e62a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42280)[0m     @     0x55a04e59f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x7f47bb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42303)[0m     @     0x7f47b93ba4f5 at::Tensor::copy_()
[2m[36m(pid=42303)[0m     @     0x7f47bf46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42303)[0m     @     0x558bb6914fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42303)[0m     @     0x558bb686fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x558bb68fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42303)[0m     @     0x558bb68fba20 method_vectorcall
[2m[36m(pid=42303)[0m     @     0x558bb686fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x558bb68fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42303)[0m     @     0x558bb68fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42303)[0m     @     0x558bb6870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x558bb68fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42303)[0m     @     0x558bb68fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42303)[0m     @     0x558bb6870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x558bb68fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42303)[0m     @     0x558bb68fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42303)[0m     @     0x558bb6870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42303)[0m     @     0x558bb68fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42303)[0m     @     0x558bb68fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42303)[0m     @     0x558bb6870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x7f11a6dea4f5 at::Tensor::copy_()
[2m[36m(pid=42268)[0m     @     0x7f11ace9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42268)[0m     @     0x55c2d8bf9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42268)[0m     @     0x55c2d8b54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x55c2d8bdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42268)[0m     @     0x55c2d8be0a20 method_vectorcall
[2m[36m(pid=42268)[0m     @     0x55c2d8b54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x55c2d8bdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42268)[0m     @     0x55c2d8be0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42268)[0m     @     0x55c2d8b55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x55c2d8bdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42268)[0m     @     0x55c2d8be0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42268)[0m     @     0x55c2d8b55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x55c2d8bdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42268)[0m     @     0x55c2d8be0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42268)[0m     @     0x55c2d8b55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42268)[0m     @     0x55c2d8bdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42268)[0m     @     0x55c2d8be0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42268)[0m     @     0x55c2d8b55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x7fc5239cc4f5 at::Tensor::copy_()
[2m[36m(pid=42284)[0m     @     0x7fc529a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42284)[0m     @     0x556644081fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42284)[0m     @     0x556643fdcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x556644067baf _PyEval_EvalCodeWithName
[2m[36m(pid=42284)[0m     @     0x556644068a20 method_vectorcall
[2m[36m(pid=42284)[0m     @     0x556643fdcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x556644067baf _PyEval_EvalCodeWithName
[2m[36m(pid=42284)[0m     @     0x556644068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42284)[0m     @     0x556643fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x556644067baf _PyEval_EvalCodeWithName
[2m[36m(pid=42284)[0m     @     0x556644068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42284)[0m     @     0x556643fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x556644067baf _PyEval_EvalCodeWithName
[2m[36m(pid=42284)[0m     @     0x556644068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42284)[0m     @     0x556643fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42284)[0m     @     0x556644067baf _PyEval_EvalCodeWithName
[2m[36m(pid=42284)[0m     @     0x556644068643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42284)[0m     @     0x556643fdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x7f9360a654f5 at::Tensor::copy_()
[2m[36m(pid=42321)[0m     @     0x7f9366b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42321)[0m     @     0x556f5c6d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42321)[0m     @     0x556f5c62eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x556f5c6b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42321)[0m     @     0x556f5c6baa20 method_vectorcall
[2m[36m(pid=42321)[0m     @     0x556f5c62ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x556f5c6b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42321)[0m     @     0x556f5c6ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42321)[0m     @     0x556f5c62f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x556f5c6b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42321)[0m     @     0x556f5c6ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42321)[0m     @     0x556f5c62f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x556f5c6b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42321)[0m     @     0x556f5c6ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42321)[0m     @     0x556f5c62f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42321)[0m     @     0x556f5c6b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42321)[0m     @     0x556f5c6ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42321)[0m     @     0x556f5c62f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x7f1bc7da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42197)[0m     @     0x558dfb845fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42197)[0m     @     0x558dfb7a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x558dfb82bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42197)[0m     @     0x558dfb82ca20 method_vectorcall
[2m[36m(pid=42197)[0m     @     0x558dfb7a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x558dfb82bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42197)[0m     @     0x558dfb82c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42197)[0m     @     0x558dfb7a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x558dfb82bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42197)[0m     @     0x558dfb82c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42197)[0m     @     0x558dfb7a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x558dfb82bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42197)[0m     @     0x558dfb82c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42197)[0m     @     0x558dfb7a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42197)[0m     @     0x558dfb82bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42197)[0m     @     0x558dfb82c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42197)[0m     @     0x558dfb7a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f19abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f225baf _PyEval_EvalCodeWithName
[2m[36m(pid=42201)[0m     @     0x55b99f226643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42201)[0m     @     0x55b99f19b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f225baf _PyEval_EvalCodeWithName
[2m[36m(pid=42201)[0m     @     0x55b99f226643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42201)[0m     @     0x55b99f19b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f225baf _PyEval_EvalCodeWithName
[2m[36m(pid=42201)[0m     @     0x55b99f226643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42201)[0m     @     0x55b99f19b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42201)[0m     @     0x55b99f225baf _PyEval_EvalCodeWithName
[2m[36m(pid=42201)[0m     @     0x55b99f226643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42201)[0m     @     0x55b99f19b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x7f9f438ba4f5 at::Tensor::copy_()
[2m[36m(pid=42205)[0m     @     0x7f9f4996579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42205)[0m     @     0x56243a6eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42205)[0m     @     0x56243a649b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x56243a6d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42205)[0m     @     0x56243a6d5a20 method_vectorcall
[2m[36m(pid=42205)[0m     @     0x56243a649bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x56243a6d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42205)[0m     @     0x56243a6d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42205)[0m     @     0x56243a64a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x56243a6d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42205)[0m     @     0x56243a6d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42205)[0m     @     0x56243a64a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x56243a6d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42205)[0m     @     0x56243a6d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42205)[0m     @     0x56243a64a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42205)[0m     @     0x56243a6d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=42205)[0m     @     0x56243a6d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42205)[0m     @     0x56243a64a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x7f07949654f5 at::Tensor::copy_()
[2m[36m(pid=42256)[0m     @     0x55ccd431dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42256)[0m     @     0x55ccd43a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42256)[0m     @     0x55ccd43a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42256)[0m     @     0x55ccd431e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42256)[0m     @     0x55ccd43a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42256)[0m     @     0x55ccd43a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42256)[0m     @     0x55ccd431e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42256)[0m     @     0x55ccd43a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42256)[0m     @     0x55ccd43a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42256)[0m     @     0x55ccd431e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42256)[0m     @     0x55ccd43a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42256)[0m     @     0x55ccd43a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42256)[0m     @     0x55ccd431e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42263)[0m     @     0x559acb6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42263)[0m     @     0x559acb6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42263)[0m     @     0x559acb63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42232)[0m     @     0x56374f0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42232)[0m     @     0x56374f0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42232)[0m     @     0x56374f053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x7f130f6138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42287)[0m     @     0x7f130d1404f5 at::Tensor::copy_()
[2m[36m(pid=42287)[0m     @     0x7f13131eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42287)[0m     @     0x555ea508dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42287)[0m     @     0x555ea4fe8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x555ea5073baf _PyEval_EvalCodeWithName
[2m[36m(pid=42287)[0m     @     0x555ea5074a20 method_vectorcall
[2m[36m(pid=42287)[0m     @     0x555ea4fe8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x555ea5073baf _PyEval_EvalCodeWithName
[2m[36m(pid=42287)[0m     @     0x555ea5074643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42287)[0m     @     0x555ea4fe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x555ea5073baf _PyEval_EvalCodeWithName
[2m[36m(pid=42287)[0m     @     0x555ea5074643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42287)[0m     @     0x555ea4fe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x555ea5073baf _PyEval_EvalCodeWithName
[2m[36m(pid=42287)[0m     @     0x555ea5074643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42287)[0m     @     0x555ea4fe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42287)[0m     @     0x555ea5073baf _PyEval_EvalCodeWithName
[2m[36m(pid=42287)[0m     @     0x555ea5074643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42287)[0m     @     0x555ea4fe9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42224)[0m     @     0x55cae9fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42224)[0m     @     0x55caea078baf _PyEval_EvalCodeWithName
[2m[36m(pid=42224)[0m     @     0x55caea079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42224)[0m     @     0x55cae9fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x555eead7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x555eead7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42220)[0m     @     0x555eeacf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x555eead7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x555eead7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42220)[0m     @     0x555eeacf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x555eead7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x555eead7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42220)[0m     @     0x555eeacf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42220)[0m     @     0x555eead7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42220)[0m     @     0x555eead7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42220)[0m     @     0x555eeacf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x7ede303354f5 at::Tensor::copy_()
[2m[36m(pid=42306)[0m     @     0x7ede363e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42306)[0m     @     0x562c41881fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42306)[0m     @     0x562c417dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x562c41867baf _PyEval_EvalCodeWithName
[2m[36m(pid=42306)[0m     @     0x562c41868a20 method_vectorcall
[2m[36m(pid=42306)[0m     @     0x562c417dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x562c41867baf _PyEval_EvalCodeWithName
[2m[36m(pid=42306)[0m     @     0x562c41868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42306)[0m     @     0x562c417dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x562c41867baf _PyEval_EvalCodeWithName
[2m[36m(pid=42306)[0m     @     0x562c41868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42306)[0m     @     0x562c417dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x562c41867baf _PyEval_EvalCodeWithName
[2m[36m(pid=42306)[0m     @     0x562c41868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42306)[0m     @     0x562c417dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42306)[0m     @     0x562c41867baf _PyEval_EvalCodeWithName
[2m[36m(pid=42306)[0m     @     0x562c41868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42306)[0m     @     0x562c417dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x7f08ccb3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42260)[0m     @     0x55be0a6d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42260)[0m     @     0x55be0a633b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x55be0a6bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42260)[0m     @     0x55be0a6bfa20 method_vectorcall
[2m[36m(pid=42260)[0m     @     0x55be0a633bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x55be0a6bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42260)[0m     @     0x55be0a6bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42260)[0m     @     0x55be0a634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x55be0a6bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42260)[0m     @     0x55be0a6bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42260)[0m     @     0x55be0a634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x55be0a6bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42260)[0m     @     0x55be0a6bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42260)[0m     @     0x55be0a634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42260)[0m     @     0x55be0a6bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42260)[0m     @     0x55be0a6bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42260)[0m     @     0x55be0a634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x7f1f9b02b4f5 at::Tensor::copy_()
[2m[36m(pid=42265)[0m     @     0x7f1fa10d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42265)[0m     @     0x55758c3b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42265)[0m     @     0x55758c30bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x55758c396baf _PyEval_EvalCodeWithName
[2m[36m(pid=42265)[0m     @     0x55758c397a20 method_vectorcall
[2m[36m(pid=42265)[0m     @     0x55758c30bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x55758c396baf _PyEval_EvalCodeWithName
[2m[36m(pid=42265)[0m     @     0x55758c397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42265)[0m     @     0x55758c30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x55758c396baf _PyEval_EvalCodeWithName
[2m[36m(pid=42265)[0m     @     0x55758c397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42265)[0m     @     0x55758c30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x55758c396baf _PyEval_EvalCodeWithName
[2m[36m(pid=42265)[0m     @     0x55758c397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42265)[0m     @     0x55758c30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42265)[0m     @     0x55758c396baf _PyEval_EvalCodeWithName
[2m[36m(pid=42265)[0m     @     0x55758c397643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42265)[0m     @     0x55758c30c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42302)[0m     @     0x55af73621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42302)[0m     @     0x55af736ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42302)[0m     @     0x55af73621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42302)[0m     @     0x55af736ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42302)[0m     @     0x55af73621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42302)[0m     @     0x55af736abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42302)[0m     @     0x55af736ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42302)[0m     @     0x55af73621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad604d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad6055bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42230)[0m     @     0x55ad6055c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42230)[0m     @     0x55ad604d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad6055bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42230)[0m     @     0x55ad6055c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42230)[0m     @     0x55ad604d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad6055bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42230)[0m     @     0x55ad6055c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42230)[0m     @     0x55ad604d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42230)[0m     @     0x55ad6055bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42230)[0m     @     0x55ad6055c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42230)[0m     @     0x55ad604d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42231)[0m     @     0x56429a6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42231)[0m     @     0x56429a661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42231)[0m     @     0x56429a6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42231)[0m     @     0x56429a661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42231)[0m     @     0x56429a6ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42231)[0m     @     0x56429a6ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42231)[0m     @     0x56429a661689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x7f079aa1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42313)[0m     @     0x556487208fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42313)[0m     @     0x556487163b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x5564871eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42313)[0m     @     0x5564871efa20 method_vectorcall
[2m[36m(pid=42313)[0m     @     0x556487163bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x5564871eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42313)[0m     @     0x5564871ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42313)[0m     @     0x556487164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x5564871eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42313)[0m     @     0x5564871ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42313)[0m     @     0x556487164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x5564871eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42313)[0m     @     0x5564871ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42313)[0m     @     0x556487164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42313)[0m     @     0x5564871eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42313)[0m     @     0x5564871ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42313)[0m     @     0x556487164689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:08:36,936	ERROR trial_runner.py:567 -- Trial PPO_jss_env_da72d_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=42291, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:08:36,937	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:08:36,940	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:08:36,940	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:08:36,940	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
== Status ==
Memory usage on this node: 24.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da72d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_da72d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_da72d_00000_0_2020-11-05_10-08-29/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[33m(pid=raylet)[0m E1105 10:08:36.932224 42151 42151 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:36.936425 42151 42151 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:36.937510 42151 42151 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:36.939029 42151 42151 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
== Status ==
Memory usage on this node: 23.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_da72d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_da72d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_da72d_00000_0_2020-11-05_10-08-29/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:08:36,952	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:08:36,952	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:08:36,953	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_da72d_00000])
[2m[36m(pid=42291)[0m E1105 10:08:36.929256 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.929442 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.933148 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.933274 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.937363 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.937487 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.938704 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=efaf5dbfabc208739f3cc57a01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.938815 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=b3b45bae970c41729f3cc57a01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.943383 42291 43449 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.943768 42291 43449 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=37f711ca0d66f5bd4100f4fd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.943935 42291 43449 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=c6f8a2750fad0b0de0497dac01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.944869 42291 43449 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=4f22c19b5f703db99f3cc57a01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.946653 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.946769 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.946821 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=457f03c785986c89252160a301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.949249 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.949378 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.949435 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42291)[0m E1105 10:08:36.949549 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1f6f5417a7b065f9091d563401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42291)[0m E1105 10:08:36.949605 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e76b5820fbdeb0f2091d563401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42291)[0m E1105 10:08:36.949661 42291 43449 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=7249131d8582b825091d563401000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=091d563401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[33m(pid=raylet)[0m E1105 10:08:36.9