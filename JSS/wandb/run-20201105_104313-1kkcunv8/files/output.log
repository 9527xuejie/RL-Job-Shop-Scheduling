2020-11-05 10:43:17,282	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b77b2_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=41234)[0m 2020-11-05 10:43:20,090	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=41234)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=41234)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=41234)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=41234)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=41234)[0m 
[2m[36m(pid=41234)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=41148)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41148)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41148)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41183)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41183)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41183)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41212)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41212)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41212)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41212)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41212)[0m *** SIGSEGV (@0x0) received by PID 41212 (TID 0x7f05183d3700) from PID 0; stack trace: ***
[2m[36m(pid=41212)[0m     @     0x7f0517fac390 (unknown)
[2m[36m(pid=41212)[0m     @     0x7ed617eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41212)[0m     @     0x7ed6175e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41212)[0m     @     0x7ed6175e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41212)[0m     @     0x7ed6175e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=41212)[0m     @     0x7ed6175e4d91 at::TensorIterator::for_each()
[2m[36m(pid=41212)[0m     @     0x7ed617ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41212)[0m     @     0x7ed617eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41212)[0m     @     0x7ed61738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41212)[0m     @     0x7ed61738a388 at::native::copy_impl()
[2m[36m(pid=41273)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41273)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41273)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41273)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41273)[0m *** SIGSEGV (@0x0) received by PID 41273 (TID 0x7fd16e7ef700) from PID 0; stack trace: ***
[2m[36m(pid=41273)[0m     @     0x7fd16e3c8390 (unknown)
[2m[36m(pid=41273)[0m     @     0x7fa26e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41273)[0m     @     0x7fa26da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41273)[0m     @     0x7fa26da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41273)[0m     @     0x7fa26da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=41273)[0m     @     0x7fa26da79d91 at::TensorIterator::for_each()
[2m[36m(pid=41273)[0m     @     0x7fa26e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41273)[0m     @     0x7fa26e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41273)[0m     @     0x7fa26d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41273)[0m     @     0x7fa26d81f388 at::native::copy_impl()
[2m[36m(pid=41207)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41207)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41207)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41250)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41250)[0m *** SIGSEGV (@0x0) received by PID 41250 (TID 0x7f04e2340700) from PID 0; stack trace: ***
[2m[36m(pid=41250)[0m     @     0x7f04e1f19390 (unknown)
[2m[36m(pid=41250)[0m     @     0x7ed5e1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41250)[0m     @     0x7ed5e154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41250)[0m     @     0x7ed5e15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41250)[0m     @     0x7ed5e1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=41250)[0m     @     0x7ed5e1552d91 at::TensorIterator::for_each()
[2m[36m(pid=41250)[0m     @     0x7ed5e1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41250)[0m     @     0x7ed5e1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41250)[0m     @     0x7ed5e12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41250)[0m     @     0x7ed5e12f8388 at::native::copy_impl()
[2m[36m(pid=41214)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41214)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41214)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41214)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41214)[0m *** SIGSEGV (@0x0) received by PID 41214 (TID 0x7f97110b3700) from PID 0; stack trace: ***
[2m[36m(pid=41149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41149)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41149)[0m *** SIGSEGV (@0x0) received by PID 41149 (TID 0x7f4c08910700) from PID 0; stack trace: ***
[2m[36m(pid=41239)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41239)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41239)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41239)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41239)[0m *** SIGSEGV (@0x0) received by PID 41239 (TID 0x7fe17016e700) from PID 0; stack trace: ***
[2m[36m(pid=41239)[0m     @     0x7fe16fd47390 (unknown)
[2m[36m(pid=41239)[0m     @     0x7fb26fbf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41239)[0m     @     0x7fb26f3227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41239)[0m     @     0x7fb26f3258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41239)[0m     @     0x7fb26f325ad3 at::TensorIterator::for_each()
[2m[36m(pid=41239)[0m     @     0x7fb26f325d91 at::TensorIterator::for_each()
[2m[36m(pid=41239)[0m     @     0x7fb26fc08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41239)[0m     @     0x7fb26fc2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41239)[0m     @     0x7fb26f0cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41239)[0m     @     0x7fb26f0cb388 at::native::copy_impl()
[2m[36m(pid=41237)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41237)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41237)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41237)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41237)[0m *** SIGSEGV (@0x0) received by PID 41237 (TID 0x7f0c97298700) from PID 0; stack trace: ***
[2m[36m(pid=41237)[0m     @     0x7f0c96e71390 (unknown)
[2m[36m(pid=41237)[0m     @     0x7edd96e26f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41237)[0m     @     0x7edd965517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41237)[0m     @     0x7edd965548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41237)[0m     @     0x7edd96554ad3 at::TensorIterator::for_each()
[2m[36m(pid=41237)[0m     @     0x7edd96554d91 at::TensorIterator::for_each()
[2m[36m(pid=41184)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41184)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41184)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41184)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41184)[0m *** SIGSEGV (@0x0) received by PID 41184 (TID 0x7f019c440700) from PID 0; stack trace: ***
[2m[36m(pid=41150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41150)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41227)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41227)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41227)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41174)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41174)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41174)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41226)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41226)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41226)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41226)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41226)[0m *** SIGSEGV (@0x0) received by PID 41226 (TID 0x7f1c32c83700) from PID 0; stack trace: ***
[2m[36m(pid=41226)[0m     @     0x7f1c3285c390 (unknown)
[2m[36m(pid=41226)[0m     @     0x7eed3270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41226)[0m     @     0x7eed31e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41226)[0m     @     0x7eed31e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41226)[0m     @     0x7eed31e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=41226)[0m     @     0x7eed31e38d91 at::TensorIterator::for_each()
[2m[36m(pid=41226)[0m     @     0x7eed3271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41215)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41215)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41215)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41215)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41215)[0m *** SIGSEGV (@0x0) received by PID 41215 (TID 0x7f0e4dfee700) from PID 0; stack trace: ***
[2m[36m(pid=41215)[0m     @     0x7f0e4dbc7390 (unknown)
[2m[36m(pid=41215)[0m     @     0x7edf4db5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41162)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41162)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41162)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41162)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41162)[0m *** SIGSEGV (@0x0) received by PID 41162 (TID 0x7fdcf2c09700) from PID 0; stack trace: ***
[2m[36m(pid=41253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41253)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41253)[0m *** SIGSEGV (@0x0) received by PID 41253 (TID 0x7f201efec700) from PID 0; stack trace: ***
[2m[36m(pid=41253)[0m     @     0x7f201ebc5390 (unknown)
[2m[36m(pid=41253)[0m     @     0x7ef11ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41253)[0m     @     0x7ef11e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41253)[0m     @     0x7ef11e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41253)[0m     @     0x7ef11e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=41253)[0m     @     0x7ef11e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=41253)[0m     @     0x7ef11ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41253)[0m     @     0x7ef11ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41253)[0m     @     0x7ef11def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41253)[0m     @     0x7ef11def5388 at::native::copy_impl()
[2m[36m(pid=41253)[0m     @     0x7ef11def75a4 at::native::copy_()
[2m[36m(pid=41225)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41225)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41225)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41225)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41225)[0m *** SIGSEGV (@0x0) received by PID 41225 (TID 0x7fab27c0c700) from PID 0; stack trace: ***
[2m[36m(pid=41225)[0m     @     0x7fab277e5390 (unknown)
[2m[36m(pid=41225)[0m     @     0x7f7c2761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41225)[0m     @     0x7f7c26d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41225)[0m     @     0x7f7c26d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41225)[0m     @     0x7f7c26d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=41225)[0m     @     0x7f7c26d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=41225)[0m     @     0x7f7c27630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41225)[0m     @     0x7f7c27653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41225)[0m     @     0x7f7c26af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41225)[0m     @     0x7f7c26af3388 at::native::copy_impl()
[2m[36m(pid=41225)[0m     @     0x7f7c26af55a4 at::native::copy_()
[2m[36m(pid=41270)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41270)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41270)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41270)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41270)[0m *** SIGSEGV (@0x0) received by PID 41270 (TID 0x7fbf915d9700) from PID 0; stack trace: ***
[2m[36m(pid=41270)[0m     @     0x7fbf911b2390 (unknown)
[2m[36m(pid=41270)[0m     @     0x7f9091166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41270)[0m     @     0x7f90908917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41270)[0m     @     0x7f90908948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41270)[0m     @     0x7f9090894ad3 at::TensorIterator::for_each()
[2m[36m(pid=41270)[0m     @     0x7f9090894d91 at::TensorIterator::for_each()
[2m[36m(pid=41270)[0m     @     0x7f9091177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41270)[0m     @     0x7f909119ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41270)[0m     @     0x7f909063ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41270)[0m     @     0x7f909063a388 at::native::copy_impl()
[2m[36m(pid=41270)[0m     @     0x7f909063c5a4 at::native::copy_()
[2m[36m(pid=41166)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41166)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41166)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41166)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41166)[0m *** SIGSEGV (@0x0) received by PID 41166 (TID 0x7fd8fff6d700) from PID 0; stack trace: ***
[2m[36m(pid=41267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41267)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41267)[0m *** SIGSEGV (@0x0) received by PID 41267 (TID 0x7f77b8e5a700) from PID 0; stack trace: ***
[2m[36m(pid=41267)[0m     @     0x7f77b8a33390 (unknown)
[2m[36m(pid=41267)[0m     @     0x7f48b8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41267)[0m     @     0x7f48b7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41267)[0m     @     0x7f48b7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41267)[0m     @     0x7f48b7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=41267)[0m     @     0x7f48b7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=41267)[0m     @     0x7f48b8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41267)[0m     @     0x7f48b87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41267)[0m     @     0x7f48b7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41267)[0m     @     0x7f48b7c48388 at::native::copy_impl()
[2m[36m(pid=41267)[0m     @     0x7f48b7c4a5a4 at::native::copy_()
[2m[36m(pid=41147)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41147)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41147)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41147)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41147)[0m *** SIGSEGV (@0x0) received by PID 41147 (TID 0x7ff87cdad700) from PID 0; stack trace: ***
[2m[36m(pid=41147)[0m     @     0x7ff87c986390 (unknown)
[2m[36m(pid=41144)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41144)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41144)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41236)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41236)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41236)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41210)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41210)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41210)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41217)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41217)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41217)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41247)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41247)[0m *** SIGSEGV (@0x0) received by PID 41247 (TID 0x7fef6f0d1700) from PID 0; stack trace: ***
[2m[36m(pid=41247)[0m     @     0x7fef6ecaa390 (unknown)
[2m[36m(pid=41247)[0m     @     0x7fc06ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41247)[0m     @     0x7fc06e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41231)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41231)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41231)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41231)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41231)[0m *** SIGSEGV (@0x0) received by PID 41231 (TID 0x7f083a125700) from PID 0; stack trace: ***
[2m[36m(pid=41159)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41159)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41159)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41159)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41159)[0m *** SIGSEGV (@0x0) received by PID 41159 (TID 0x7fe65c20a700) from PID 0; stack trace: ***
[2m[36m(pid=41159)[0m     @     0x7fe65bde3390 (unknown)
[2m[36m(pid=41233)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41233)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41233)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41233)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41233)[0m *** SIGSEGV (@0x0) received by PID 41233 (TID 0x7fe8e1a8f700) from PID 0; stack trace: ***
[2m[36m(pid=41233)[0m     @     0x7fe8e1668390 (unknown)
[2m[36m(pid=41233)[0m     @     0x7fb9e15e2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41233)[0m     @     0x7fb9e0d0d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41233)[0m     @     0x7fb9e0d108f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41233)[0m     @     0x7fb9e0d10ad3 at::TensorIterator::for_each()
[2m[36m(pid=41233)[0m     @     0x7fb9e0d10d91 at::TensorIterator::for_each()
[2m[36m(pid=41233)[0m     @     0x7fb9e15f3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41233)[0m     @     0x7fb9e1616c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41233)[0m     @     0x7fb9e0ab8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41233)[0m     @     0x7fb9e0ab6388 at::native::copy_impl()
[2m[36m(pid=41233)[0m     @     0x7fb9e0ab85a4 at::native::copy_()
[2m[36m(pid=41160)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41160)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41160)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41160)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41160)[0m *** SIGSEGV (@0x0) received by PID 41160 (TID 0x7fa7d8755700) from PID 0; stack trace: ***
[2m[36m(pid=41160)[0m     @     0x7fa7d832e390 (unknown)
[2m[36m(pid=41151)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41151)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41151)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41151)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41151)[0m *** SIGSEGV (@0x0) received by PID 41151 (TID 0x7f283f504700) from PID 0; stack trace: ***
[2m[36m(pid=41216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41216)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41216)[0m *** SIGSEGV (@0x0) received by PID 41216 (TID 0x7fec9fadd700) from PID 0; stack trace: ***
[2m[36m(pid=41216)[0m     @     0x7fec9f6b6390 (unknown)
[2m[36m(pid=41265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41265)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41265)[0m *** SIGSEGV (@0x0) received by PID 41265 (TID 0x7fa4765f9700) from PID 0; stack trace: ***
[2m[36m(pid=41265)[0m     @     0x7fa4761d2390 (unknown)
[2m[36m(pid=41265)[0m     @     0x7f757613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41265)[0m     @     0x7f75758657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41265)[0m     @     0x7f75758688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41265)[0m     @     0x7f7575868ad3 at::TensorIterator::for_each()
[2m[36m(pid=41265)[0m     @     0x7f7575868d91 at::TensorIterator::for_each()
[2m[36m(pid=41265)[0m     @     0x7f757614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41265)[0m     @     0x7f757616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41265)[0m     @     0x7f7575610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41265)[0m     @     0x7f757560e388 at::native::copy_impl()
[2m[36m(pid=41265)[0m     @     0x7f75756105a4 at::native::copy_()
[2m[36m(pid=41265)[0m     @     0x7f7575cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41277)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41277)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41277)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41277)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41277)[0m *** SIGSEGV (@0x0) received by PID 41277 (TID 0x7f12f59f6700) from PID 0; stack trace: ***
[2m[36m(pid=41277)[0m     @     0x7f12f55cf390 (unknown)
[2m[36m(pid=41277)[0m     @     0x7ee3f5564f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41277)[0m     @     0x7ee3f4c8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41277)[0m     @     0x7ee3f4c928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41277)[0m     @     0x7ee3f4c92ad3 at::TensorIterator::for_each()
[2m[36m(pid=41277)[0m     @     0x7ee3f4c92d91 at::TensorIterator::for_each()
[2m[36m(pid=41277)[0m     @     0x7ee3f5575b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41277)[0m     @     0x7ee3f5598c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41277)[0m     @     0x7ee3f4a3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41277)[0m     @     0x7ee3f4a38388 at::native::copy_impl()
[2m[36m(pid=41277)[0m     @     0x7ee3f4a3a5a4 at::native::copy_()
[2m[36m(pid=41277)[0m     @     0x7ee3f51254f5 at::Tensor::copy_()
[2m[36m(pid=41281)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41281)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41281)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41281)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41281)[0m *** SIGSEGV (@0x0) received by PID 41281 (TID 0x7f4335908700) from PID 0; stack trace: ***
[2m[36m(pid=41281)[0m     @     0x7f43354e1390 (unknown)
[2m[36m(pid=41281)[0m     @     0x7f14354a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41281)[0m     @     0x7f1434bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41281)[0m     @     0x7f1434bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41281)[0m     @     0x7f1434bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=41281)[0m     @     0x7f1434bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=41281)[0m     @     0x7f14354b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41281)[0m     @     0x7f14354d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41281)[0m     @     0x7f1434979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41281)[0m     @     0x7f1434977388 at::native::copy_impl()
[2m[36m(pid=41272)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41272)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41272)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41272)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41272)[0m *** SIGSEGV (@0x0) received by PID 41272 (TID 0x7ff268a6e700) from PID 0; stack trace: ***
[2m[36m(pid=41272)[0m     @     0x7ff268647390 (unknown)
[2m[36m(pid=41272)[0m     @     0x7fc3683e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41272)[0m     @     0x7fc367b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41272)[0m     @     0x7fc367b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41272)[0m     @     0x7fc367b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=41272)[0m     @     0x7fc367b11d91 at::TensorIterator::for_each()
[2m[36m(pid=41272)[0m     @     0x7fc3683f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41272)[0m     @     0x7fc368417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41272)[0m     @     0x7fc3678b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41272)[0m     @     0x7fc3678b7388 at::native::copy_impl()
[2m[36m(pid=41272)[0m     @     0x7fc3678b95a4 at::native::copy_()
[2m[36m(pid=41260)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41260)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41260)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41260)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41260)[0m *** SIGSEGV (@0x0) received by PID 41260 (TID 0x7f0feec7c700) from PID 0; stack trace: ***
[2m[36m(pid=41260)[0m     @     0x7f0fee855390 (unknown)
[2m[36m(pid=41260)[0m     @     0x7ee0ee70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41260)[0m     @     0x7ee0ede357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41260)[0m     @     0x7ee0ede388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41260)[0m     @     0x7ee0ede38ad3 at::TensorIterator::for_each()
[2m[36m(pid=41260)[0m     @     0x7ee0ede38d91 at::TensorIterator::for_each()
[2m[36m(pid=41260)[0m     @     0x7ee0ee71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41260)[0m     @     0x7ee0ee73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41260)[0m     @     0x7ee0edbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41260)[0m     @     0x7ee0edbde388 at::native::copy_impl()
[2m[36m(pid=41260)[0m     @     0x7ee0edbe05a4 at::native::copy_()
[2m[36m(pid=41157)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41157)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41157)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41157)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41157)[0m *** SIGSEGV (@0x0) received by PID 41157 (TID 0x7f02a1791700) from PID 0; stack trace: ***
[2m[36m(pid=41157)[0m     @     0x7f02a136a390 (unknown)
[2m[36m(pid=41256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41256)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41232)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41232)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41232)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41206)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41206)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41206)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41206)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41206)[0m *** SIGSEGV (@0x0) received by PID 41206 (TID 0x7fa472259700) from PID 0; stack trace: ***
[2m[36m(pid=41171)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41171)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41171)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41158)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41158)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41158)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41158)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41158)[0m *** SIGSEGV (@0x0) received by PID 41158 (TID 0x7f57008a7700) from PID 0; stack trace: ***
[2m[36m(pid=41152)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41152)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41152)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41152)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41152)[0m *** SIGSEGV (@0x0) received by PID 41152 (TID 0x7fa4fd67c700) from PID 0; stack trace: ***
[2m[36m(pid=41152)[0m     @     0x7fa4fd255390 (unknown)
[2m[36m(pid=41153)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41153)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41153)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41153)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41153)[0m *** SIGSEGV (@0x0) received by PID 41153 (TID 0x7f3e82244700) from PID 0; stack trace: ***
[2m[36m(pid=41222)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41222)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41222)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41155)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41155)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41155)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41155)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41155)[0m *** SIGSEGV (@0x0) received by PID 41155 (TID 0x7fe7c9e0d700) from PID 0; stack trace: ***
[2m[36m(pid=41155)[0m     @     0x7fe7c99e6390 (unknown)
[2m[36m(pid=41155)[0m     @     0x7fb8c9701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41145)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41145)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41145)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41145)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41145)[0m *** SIGSEGV (@0x0) received by PID 41145 (TID 0x7f5a39ec6700) from PID 0; stack trace: ***
[2m[36m(pid=41145)[0m     @     0x7f5a39a9f390 (unknown)
[2m[36m(pid=41145)[0m     @     0x7f2b39a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41145)[0m     @     0x7f2b391357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41220)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41220)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41220)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41220)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41220)[0m *** SIGSEGV (@0x0) received by PID 41220 (TID 0x7f156d911700) from PID 0; stack trace: ***
[2m[36m(pid=41220)[0m     @     0x7f156d4ea390 (unknown)
[2m[36m(pid=41284)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41284)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41284)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41229)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41229)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41229)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41229)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41229)[0m *** SIGSEGV (@0x0) received by PID 41229 (TID 0x7faf23f41700) from PID 0; stack trace: ***
[2m[36m(pid=41229)[0m     @     0x7faf23b1a390 (unknown)
[2m[36m(pid=41229)[0m     @     0x7f8023ab5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41235)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41235)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41235)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41235)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41235)[0m *** SIGSEGV (@0x0) received by PID 41235 (TID 0x7ffaf18d6700) from PID 0; stack trace: ***
[2m[36m(pid=41187)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41187)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41187)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41187)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41187)[0m *** SIGSEGV (@0x0) received by PID 41187 (TID 0x7f7cb2bc2700) from PID 0; stack trace: ***
[2m[36m(pid=41187)[0m     @     0x7f7cb279b390 (unknown)
[2m[36m(pid=41228)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41228)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41228)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41228)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41228)[0m *** SIGSEGV (@0x0) received by PID 41228 (TID 0x7f5d957d1700) from PID 0; stack trace: ***
[2m[36m(pid=41228)[0m     @     0x7f5d953aa390 (unknown)
[2m[36m(pid=41228)[0m     @     0x7f2e9533af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41228)[0m     @     0x7f2e94a657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41240)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41240)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41240)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41240)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41240)[0m *** SIGSEGV (@0x0) received by PID 41240 (TID 0x7f7313c8e700) from PID 0; stack trace: ***
[2m[36m(pid=41240)[0m     @     0x7f7313867390 (unknown)
[2m[36m(pid=41240)[0m     @     0x7f4413751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41224)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41224)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41224)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41224)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41224)[0m *** SIGSEGV (@0x0) received by PID 41224 (TID 0x7fb0d726f700) from PID 0; stack trace: ***
[2m[36m(pid=41177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41177)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41177)[0m *** SIGSEGV (@0x0) received by PID 41177 (TID 0x7f82415b9700) from PID 0; stack trace: ***
[2m[36m(pid=41177)[0m     @     0x7f8241192390 (unknown)
[2m[36m(pid=41249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41249)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41249)[0m *** SIGSEGV (@0x0) received by PID 41249 (TID 0x7fae97f98700) from PID 0; stack trace: ***
[2m[36m(pid=41249)[0m     @     0x7fae97b71390 (unknown)
[2m[36m(pid=41249)[0m     @     0x7f7f97af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41249)[0m     @     0x7f7f972207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41161)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41161)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41161)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41161)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41161)[0m *** SIGSEGV (@0x0) received by PID 41161 (TID 0x7f4f273ee700) from PID 0; stack trace: ***
[2m[36m(pid=41161)[0m     @     0x7f4f26fc7390 (unknown)
[2m[36m(pid=41161)[0m     @     0x7f2026f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41161)[0m     @     0x7f202663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41163)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41163)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41163)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41163)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41163)[0m *** SIGSEGV (@0x0) received by PID 41163 (TID 0x7f72036b8700) from PID 0; stack trace: ***
[2m[36m(pid=41163)[0m     @     0x7f7203291390 (unknown)
[2m[36m(pid=41241)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41241)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41241)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41213)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41213)[0m *** SIGSEGV (@0x0) received by PID 41213 (TID 0x7f8db612f700) from PID 0; stack trace: ***
[2m[36m(pid=41246)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41246)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41246)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41246)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41246)[0m *** SIGSEGV (@0x0) received by PID 41246 (TID 0x7f163ffaf700) from PID 0; stack trace: ***
[2m[36m(pid=41279)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41279)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41279)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41279)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41279)[0m *** SIGSEGV (@0x0) received by PID 41279 (TID 0x7f72466a0700) from PID 0; stack trace: ***
[2m[36m(pid=41279)[0m     @     0x7f7246279390 (unknown)
[2m[36m(pid=41279)[0m     @     0x7f434613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41279)[0m     @     0x7f43458657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41209)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41178)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41178)[0m *** SIGSEGV (@0x0) received by PID 41178 (TID 0x7f2773545700) from PID 0; stack trace: ***
[2m[36m(pid=41178)[0m     @     0x7f277311e390 (unknown)
[2m[36m(pid=41218)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41218)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41218)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41218)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41218)[0m *** SIGSEGV (@0x0) received by PID 41218 (TID 0x7f57c2e50700) from PID 0; stack trace: ***
[2m[36m(pid=41218)[0m     @     0x7f57c2a29390 (unknown)
[2m[36m(pid=41218)[0m     @     0x7f28c299ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41218)[0m     @     0x7f28c20ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41262)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41262)[0m *** SIGSEGV (@0x0) received by PID 41262 (TID 0x7fc8f378b700) from PID 0; stack trace: ***
[2m[36m(pid=41262)[0m     @     0x7fc8f3364390 (unknown)
[2m[36m(pid=41262)[0m     @     0x7f99f3229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41262)[0m     @     0x7f99f29547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41148)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41148)[0m *** SIGSEGV (@0x0) received by PID 41148 (TID 0x7f6378d28700) from PID 0; stack trace: ***
[2m[36m(pid=41148)[0m     @     0x7f6378901390 (unknown)
[2m[36m(pid=41148)[0m     @     0x7f3475940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41148)[0m     @     0x7f347506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41148)[0m     @     0x7f347506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41183)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41183)[0m *** SIGSEGV (@0x0) received by PID 41183 (TID 0x7fd74b8d1700) from PID 0; stack trace: ***
[2m[36m(pid=41183)[0m     @     0x7fd74b4aa390 (unknown)
[2m[36m(pid=41183)[0m     @     0x7fa84b43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41183)[0m     @     0x7fa84ab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41212)[0m     @     0x7ed61738c5a4 at::native::copy_()
[2m[36m(pid=41212)[0m     @     0x7ed617a774f5 at::Tensor::copy_()
[2m[36m(pid=41212)[0m     @     0x7ed619f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41273)[0m     @     0x7fa26d8215a4 at::native::copy_()
[2m[36m(pid=41273)[0m     @     0x7fa26df0c4f5 at::Tensor::copy_()
[2m[36m(pid=41273)[0m     @     0x7fa2703df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41207)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41207)[0m *** SIGSEGV (@0x0) received by PID 41207 (TID 0x7fac48681700) from PID 0; stack trace: ***
[2m[36m(pid=41207)[0m     @     0x7fac4825a390 (unknown)
[2m[36m(pid=41207)[0m     @     0x7f7d48101f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41207)[0m     @     0x7f7d4782c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41207)[0m     @     0x7f7d4782f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41250)[0m     @     0x7ed5e12fa5a4 at::native::copy_()
[2m[36m(pid=41250)[0m     @     0x7ed5e19e54f5 at::Tensor::copy_()
[2m[36m(pid=41250)[0m     @     0x7ed5e3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41250)[0m     @     0x7ed5e19e54f5 at::Tensor::copy_()
[2m[36m(pid=41250)[0m     @     0x7ed5e7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41250)[0m     @     0x564bb7b8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41250)[0m     @     0x564bb7ae5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41250)[0m     @     0x564bb7b70baf _PyEval_EvalCodeWithName
[2m[36m(pid=41250)[0m     @     0x564bb7b71a20 method_vectorcall
[2m[36m(pid=41250)[0m     @     0x564bb7ae5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41250)[0m     @     0x564bb7b70baf _PyEval_EvalCodeWithName
[2m[36m(pid=41250)[0m     @     0x564bb7b71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x7f9710c8c390 (unknown)
[2m[36m(pid=41214)[0m     @     0x7f681097ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41214)[0m     @     0x7f68100aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41214)[0m     @     0x7f68100ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41149)[0m     @     0x7f4c084e9390 (unknown)
[2m[36m(pid=41149)[0m     @     0x7f1d08475f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41149)[0m     @     0x7f1d07ba07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41149)[0m     @     0x7f1d07ba38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41239)[0m     @     0x7fb26f0cd5a4 at::native::copy_()
[2m[36m(pid=41239)[0m     @     0x7fb26f7b84f5 at::Tensor::copy_()
[2m[36m(pid=41239)[0m     @     0x7fb271c8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41237)[0m     @     0x7edd96e37b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41237)[0m     @     0x7edd96e5ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41237)[0m     @     0x7edd962fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41237)[0m     @     0x7edd962fa388 at::native::copy_impl()
[2m[36m(pid=41184)[0m     @     0x7f019c019390 (unknown)
[2m[36m(pid=41184)[0m     @     0x7ed29be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41184)[0m     @     0x7ed29b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41184)[0m     @     0x7ed29b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41150)[0m *** SIGSEGV (@0x0) received by PID 41150 (TID 0x7fd5231c9700) from PID 0; stack trace: ***
[2m[36m(pid=41150)[0m     @     0x7fd522da2390 (unknown)
[2m[36m(pid=41150)[0m     @     0x7fa622cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41150)[0m     @     0x7fa6224277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41150)[0m     @     0x7fa62242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41227)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41227)[0m *** SIGSEGV (@0x0) received by PID 41227 (TID 0x7ffad5657700) from PID 0; stack trace: ***
[2m[36m(pid=41227)[0m     @     0x7ffad5230390 (unknown)
[2m[36m(pid=41227)[0m     @     0x7fcbd50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41227)[0m     @     0x7fcbd47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41174)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41174)[0m *** SIGSEGV (@0x0) received by PID 41174 (TID 0x7f65448c1700) from PID 0; stack trace: ***
[2m[36m(pid=41174)[0m     @     0x7f654449a390 (unknown)
[2m[36m(pid=41174)[0m     @     0x7f36443e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41174)[0m     @     0x7f3643b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41226)[0m     @     0x7eed3273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41226)[0m     @     0x7eed31be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41226)[0m     @     0x7eed31bde388 at::native::copy_impl()
[2m[36m(pid=41226)[0m     @     0x7eed31be05a4 at::native::copy_()
[2m[36m(pid=41215)[0m     @     0x7edf4d28a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41215)[0m     @     0x7edf4d28d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41215)[0m     @     0x7edf4d28dad3 at::TensorIterator::for_each()
[2m[36m(pid=41162)[0m     @     0x7fdcf27e2390 (unknown)
[2m[36m(pid=41162)[0m     @     0x7fadf257cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41162)[0m     @     0x7fadf1ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41162)[0m     @     0x7fadf1caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41253)[0m     @     0x7ef11e5e24f5 at::Tensor::copy_()
[2m[36m(pid=41253)[0m     @     0x7ef120ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41253)[0m     @     0x7ef11e5e24f5 at::Tensor::copy_()
[2m[36m(pid=41253)[0m     @     0x7ef12468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41253)[0m     @     0x564073bf8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41253)[0m     @     0x564073b53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41253)[0m     @     0x564073bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41253)[0m     @     0x564073bdfa20 method_vectorcall
[2m[36m(pid=41253)[0m     @     0x564073b53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41253)[0m     @     0x564073bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41253)[0m     @     0x564073bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41253)[0m     @     0x564073b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41253)[0m     @     0x564073bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41253)[0m     @     0x564073bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41253)[0m     @     0x564073b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41253)[0m     @     0x564073bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41253)[0m     @     0x564073bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41253)[0m     @     0x564073b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41253)[0m     @     0x564073bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41253)[0m     @     0x564073bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41253)[0m     @     0x564073b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41225)[0m     @     0x7f7c271e04f5 at::Tensor::copy_()
[2m[36m(pid=41225)[0m     @     0x7f7c296b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41225)[0m     @     0x7f7c271e04f5 at::Tensor::copy_()
[2m[36m(pid=41225)[0m     @     0x7f7c2d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41225)[0m     @     0x55c486a92fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41225)[0m     @     0x55c4869edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41225)[0m     @     0x55c486a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=41225)[0m     @     0x55c486a79a20 method_vectorcall
[2m[36m(pid=41225)[0m     @     0x55c4869edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x7f9090d274f5 at::Tensor::copy_()
[2m[36m(pid=41270)[0m     @     0x7f90931fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41270)[0m     @     0x7f9090d274f5 at::Tensor::copy_()
[2m[36m(pid=41270)[0m     @     0x7f9096dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41270)[0m     @     0x55f4a9204fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41270)[0m     @     0x55f4a915fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x55f4a91eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41270)[0m     @     0x55f4a91eba20 method_vectorcall
[2m[36m(pid=41270)[0m     @     0x55f4a915fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x55f4a91eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41270)[0m     @     0x55f4a91eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41270)[0m     @     0x55f4a9160689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x55f4a91eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41270)[0m     @     0x55f4a91eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41270)[0m     @     0x55f4a9160689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x55f4a91eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41270)[0m     @     0x55f4a91eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41270)[0m     @     0x55f4a9160689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41270)[0m     @     0x55f4a91eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41270)[0m     @     0x55f4a91eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41270)[0m     @     0x55f4a9160689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x7fd8ffb46390 (unknown)
[2m[36m(pid=41166)[0m     @     0x7fa9ffaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41166)[0m     @     0x7fa9ff2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41166)[0m     @     0x7fa9ff2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41166)[0m     @     0x7fa9ff223ad3 at::TensorIterator::for_each()
[2m[36m(pid=41267)[0m     @     0x7f48b83354f5 at::Tensor::copy_()
[2m[36m(pid=41267)[0m     @     0x7f48ba8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41267)[0m     @     0x7f48b83354f5 at::Tensor::copy_()
[2m[36m(pid=41267)[0m     @     0x7f48be3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41267)[0m     @     0x564463565fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41267)[0m     @     0x5644634c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41267)[0m     @     0x56446354bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41267)[0m     @     0x56446354ca20 method_vectorcall
[2m[36m(pid=41267)[0m     @     0x5644634c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41267)[0m     @     0x56446354bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41267)[0m     @     0x56446354c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41267)[0m     @     0x5644634c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41267)[0m     @     0x56446354bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41267)[0m     @     0x56446354c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41267)[0m     @     0x5644634c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41267)[0m     @     0x56446354bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41267)[0m     @     0x56446354c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41267)[0m     @     0x5644634c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41267)[0m     @     0x56446354bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41267)[0m     @     0x56446354c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41267)[0m     @     0x5644634c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x7fc97c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41147)[0m     @     0x7fc97be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41147)[0m     @     0x7fc97bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41147)[0m     @     0x7fc97bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=41147)[0m     @     0x7fc97bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=41147)[0m     @     0x7fc97c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41144)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41144)[0m *** SIGSEGV (@0x0) received by PID 41144 (TID 0x7ff8619b8700) from PID 0; stack trace: ***
[2m[36m(pid=41144)[0m     @     0x7ff861591390 (unknown)
[2m[36m(pid=41144)[0m     @     0x7fc9614e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41144)[0m     @     0x7fc960c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41144)[0m     @     0x7fc960c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41144)[0m     @     0x7fc960c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=41230)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41230)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41230)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41230)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41230)[0m *** SIGSEGV (@0x0) received by PID 41230 (TID 0x7fd58cd34700) from PID 0; stack trace: ***
[2m[36m(pid=41230)[0m     @     0x7fd58c90d390 (unknown)
[2m[36m(pid=41230)[0m     @     0x7fa68c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41230)[0m     @     0x7fa68bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41230)[0m     @     0x7fa68bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41146)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41146)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41146)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41146)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41146)[0m *** SIGSEGV (@0x0) received by PID 41146 (TID 0x7f8f116e1700) from PID 0; stack trace: ***
[2m[36m(pid=41146)[0m     @     0x7f8f112ba390 (unknown)
[2m[36m(pid=41146)[0m     @     0x7f60110c1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41146)[0m     @     0x7f60107ec7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41146)[0m     @     0x7f60107ef8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41219)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41219)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41219)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41219)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41219)[0m *** SIGSEGV (@0x0) received by PID 41219 (TID 0x7f98a08a1700) from PID 0; stack trace: ***
[2m[36m(pid=41219)[0m     @     0x7f98a047a390 (unknown)
[2m[36m(pid=41219)[0m     @     0x7f69a00acf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41219)[0m     @     0x7f699f7d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41219)[0m     @     0x7f699f7da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41236)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41236)[0m *** SIGSEGV (@0x0) received by PID 41236 (TID 0x7f215ff8c700) from PID 0; stack trace: ***
[2m[36m(pid=41236)[0m     @     0x7f215fb65390 (unknown)
[2m[36m(pid=41236)[0m     @     0x7ef25faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41236)[0m     @     0x7ef25f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41236)[0m     @     0x7ef25f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41236)[0m     @     0x7ef25f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=41236)[0m     @     0x7ef25f223d91 at::TensorIterator::for_each()
[2m[36m(pid=41210)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41210)[0m *** SIGSEGV (@0x0) received by PID 41210 (TID 0x7f48965f7700) from PID 0; stack trace: ***
[2m[36m(pid=41210)[0m     @     0x7f48961d0390 (unknown)
[2m[36m(pid=41210)[0m     @     0x7f199613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41210)[0m     @     0x7f19958657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41164)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41164)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41164)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41164)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41164)[0m *** SIGSEGV (@0x0) received by PID 41164 (TID 0x7fdab3b21700) from PID 0; stack trace: ***
[2m[36m(pid=41164)[0m     @     0x7fdab36fa390 (unknown)
[2m[36m(pid=41164)[0m     @     0x7fabb3681f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41164)[0m     @     0x7fabb2dac7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41164)[0m     @     0x7fabb2daf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41164)[0m     @     0x7fabb2dafad3 at::TensorIterator::for_each()
[2m[36m(pid=41176)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41176)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41176)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41176)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41176)[0m *** SIGSEGV (@0x0) received by PID 41176 (TID 0x7f1f0fd09700) from PID 0; stack trace: ***
[2m[36m(pid=41176)[0m     @     0x7f1f0f8e2390 (unknown)
[2m[36m(pid=41176)[0m     @     0x7ef00f5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41176)[0m     @     0x7ef00ed1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41176)[0m     @     0x7ef00ed1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41176)[0m     @     0x7ef00ed1dad3 at::TensorIterator::for_each()
[2m[36m(pid=41180)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41180)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41180)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41180)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41180)[0m *** SIGSEGV (@0x0) received by PID 41180 (TID 0x7f36da177700) from PID 0; stack trace: ***
[2m[36m(pid=41180)[0m     @     0x7f36d9d50390 (unknown)
[2m[36m(pid=41180)[0m     @     0x7f07d9ceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41180)[0m     @     0x7f07d941a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41180)[0m     @     0x7f07d941d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41221)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41221)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41221)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41221)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41221)[0m *** SIGSEGV (@0x0) received by PID 41221 (TID 0x7f4e7b115700) from PID 0; stack trace: ***
[2m[36m(pid=41221)[0m     @     0x7f4e7acee390 (unknown)
[2m[36m(pid=41221)[0m     @     0x7f1f7ac50f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41221)[0m     @     0x7f1f7a37b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41221)[0m     @     0x7f1f7a37e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41217)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41217)[0m *** SIGSEGV (@0x0) received by PID 41217 (TID 0x7fdb56d66700) from PID 0; stack trace: ***
[2m[36m(pid=41217)[0m     @     0x7fdb5693f390 (unknown)
[2m[36m(pid=41217)[0m     @     0x7fac567bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41217)[0m     @     0x7fac55ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41217)[0m     @     0x7fac55ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41217)[0m     @     0x7fac55ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=41217)[0m     @     0x7fac55ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=41217)[0m     @     0x7fac567ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41247)[0m     @     0x7fc06e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41247)[0m     @     0x7fc06e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=41247)[0m     @     0x7fc06e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=41247)[0m     @     0x7fc06ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41247)[0m     @     0x7fc06ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41247)[0m     @     0x7fc06def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41247)[0m     @     0x7fc06def5388 at::native::copy_impl()
[2m[36m(pid=41247)[0m     @     0x7fc06def75a4 at::native::copy_()
[2m[36m(pid=41231)[0m     @     0x7f0839cfe390 (unknown)
[2m[36m(pid=41231)[0m     @     0x7ed939c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41231)[0m     @     0x7ed9393387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41231)[0m     @     0x7ed93933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41231)[0m     @     0x7ed93933bad3 at::TensorIterator::for_each()
[2m[36m(pid=41231)[0m     @     0x7ed93933bd91 at::TensorIterator::for_each()
[2m[36m(pid=41231)[0m     @     0x7ed939c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41231)[0m     @     0x7ed939c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41159)[0m     @     0x7fb75bd79f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41159)[0m     @     0x7fb75b4a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41159)[0m     @     0x7fb75b4a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41159)[0m     @     0x7fb75b4a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=41159)[0m     @     0x7fb75b4a7d91 at::TensorIterator::for_each()
[2m[36m(pid=41159)[0m     @     0x7fb75bd8ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41159)[0m     @     0x7fb75bdadc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41233)[0m     @     0x7fb9e11a34f5 at::Tensor::copy_()
[2m[36m(pid=41233)[0m     @     0x7fb9e36768de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41233)[0m     @     0x7fb9e11a34f5 at::Tensor::copy_()
[2m[36m(pid=41233)[0m     @     0x7fb9e724e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41233)[0m     @     0x55c6662d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41233)[0m     @     0x55c66622fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41233)[0m     @     0x55c6662babaf _PyEval_EvalCodeWithName
[2m[36m(pid=41233)[0m     @     0x55c6662bba20 method_vectorcall
[2m[36m(pid=41233)[0m     @     0x55c66622fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41233)[0m     @     0x55c6662babaf _PyEval_EvalCodeWithName
[2m[36m(pid=41233)[0m     @     0x55c6662bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41233)[0m     @     0x55c666230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41233)[0m     @     0x55c6662babaf _PyEval_EvalCodeWithName
[2m[36m(pid=41233)[0m     @     0x55c6662bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41233)[0m     @     0x55c666230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41233)[0m     @     0x55c6662babaf _PyEval_EvalCodeWithName
[2m[36m(pid=41233)[0m     @     0x55c6662bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41233)[0m     @     0x55c666230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41233)[0m     @     0x55c6662babaf _PyEval_EvalCodeWithName
[2m[36m(pid=41233)[0m     @     0x55c6662bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41233)[0m     @     0x55c666230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x7f78d82c6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41160)[0m     @     0x7f78d79f17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41160)[0m     @     0x7f78d79f48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41160)[0m     @     0x7f78d79f4ad3 at::TensorIterator::for_each()
[2m[36m(pid=41160)[0m     @     0x7f78d79f4d91 at::TensorIterator::for_each()
[2m[36m(pid=41160)[0m     @     0x7f78d82d7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41160)[0m     @     0x7f78d82fac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41151)[0m     @     0x7f283f0dd390 (unknown)
[2m[36m(pid=41151)[0m     @     0x7ef93f077f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41151)[0m     @     0x7ef93e7a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41151)[0m     @     0x7ef93e7a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41151)[0m     @     0x7ef93e7a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=41151)[0m     @     0x7ef93e7a5d91 at::TensorIterator::for_each()
[2m[36m(pid=41151)[0m     @     0x7ef93f088b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41151)[0m     @     0x7ef93f0abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41216)[0m     @     0x7fbd9f641f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41216)[0m     @     0x7fbd9ed6c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41216)[0m     @     0x7fbd9ed6f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41216)[0m     @     0x7fbd9ed6fad3 at::TensorIterator::for_each()
[2m[36m(pid=41216)[0m     @     0x7fbd9ed6fd91 at::TensorIterator::for_each()
[2m[36m(pid=41216)[0m     @     0x7fbd9f652b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41265)[0m     @     0x7f75781ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41265)[0m     @     0x7f7575cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41265)[0m     @     0x7f757bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41265)[0m     @     0x55dfba993fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41265)[0m     @     0x55dfba8eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41265)[0m     @     0x55dfba979baf _PyEval_EvalCodeWithName
[2m[36m(pid=41265)[0m     @     0x55dfba97aa20 method_vectorcall
[2m[36m(pid=41265)[0m     @     0x55dfba8eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41265)[0m     @     0x55dfba979baf _PyEval_EvalCodeWithName
[2m[36m(pid=41265)[0m     @     0x55dfba97a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41265)[0m     @     0x55dfba8ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41265)[0m     @     0x55dfba979baf _PyEval_EvalCodeWithName
[2m[36m(pid=41265)[0m     @     0x55dfba97a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41265)[0m     @     0x55dfba8ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41265)[0m     @     0x55dfba979baf _PyEval_EvalCodeWithName
[2m[36m(pid=41265)[0m     @     0x55dfba97a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41265)[0m     @     0x55dfba8ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41265)[0m     @     0x55dfba979baf _PyEval_EvalCodeWithName
[2m[36m(pid=41265)[0m     @     0x55dfba97a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41265)[0m     @     0x55dfba8ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x7ee3f75f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41277)[0m     @     0x7ee3f51254f5 at::Tensor::copy_()
[2m[36m(pid=41277)[0m     @     0x7ee3fb1d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41277)[0m     @     0x55c722451fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41277)[0m     @     0x55c7223acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x55c722437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41277)[0m     @     0x55c722438a20 method_vectorcall
[2m[36m(pid=41277)[0m     @     0x55c7223acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x55c722437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41277)[0m     @     0x55c722438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41277)[0m     @     0x55c7223ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x55c722437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41277)[0m     @     0x55c722438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41277)[0m     @     0x55c7223ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x55c722437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41277)[0m     @     0x55c722438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41277)[0m     @     0x55c7223ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41277)[0m     @     0x55c722437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41277)[0m     @     0x55c722438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41277)[0m     @     0x55c7223ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x7f14349795a4 at::native::copy_()
[2m[36m(pid=41281)[0m     @     0x7f14350644f5 at::Tensor::copy_()
[2m[36m(pid=41281)[0m     @     0x7f14375378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41281)[0m     @     0x7f14350644f5 at::Tensor::copy_()
[2m[36m(pid=41281)[0m     @     0x7f143b10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41281)[0m     @     0x5581c903afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41281)[0m     @     0x5581c8f95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x5581c9020baf _PyEval_EvalCodeWithName
[2m[36m(pid=41281)[0m     @     0x5581c9021a20 method_vectorcall
[2m[36m(pid=41281)[0m     @     0x5581c8f95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x5581c9020baf _PyEval_EvalCodeWithName
[2m[36m(pid=41281)[0m     @     0x5581c9021643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41281)[0m     @     0x5581c8f96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x5581c9020baf _PyEval_EvalCodeWithName
[2m[36m(pid=41281)[0m     @     0x5581c9021643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41281)[0m     @     0x5581c8f96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x5581c9020baf _PyEval_EvalCodeWithName
[2m[36m(pid=41281)[0m     @     0x5581c9021643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41281)[0m     @     0x5581c8f96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41281)[0m     @     0x5581c9020baf _PyEval_EvalCodeWithName
[2m[36m(pid=41281)[0m     @     0x5581c9021643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41281)[0m     @     0x5581c8f96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x7fc367fa44f5 at::Tensor::copy_()
[2m[36m(pid=41272)[0m     @     0x7fc36a4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41272)[0m     @     0x7fc367fa44f5 at::Tensor::copy_()
[2m[36m(pid=41272)[0m     @     0x7fc36e04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41272)[0m     @     0x555b43060fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41272)[0m     @     0x555b42fbbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x555b43046baf _PyEval_EvalCodeWithName
[2m[36m(pid=41272)[0m     @     0x555b43047a20 method_vectorcall
[2m[36m(pid=41272)[0m     @     0x555b42fbbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x555b43046baf _PyEval_EvalCodeWithName
[2m[36m(pid=41272)[0m     @     0x555b43047643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41272)[0m     @     0x555b42fbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x555b43046baf _PyEval_EvalCodeWithName
[2m[36m(pid=41272)[0m     @     0x555b43047643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41272)[0m     @     0x555b42fbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x555b43046baf _PyEval_EvalCodeWithName
[2m[36m(pid=41272)[0m     @     0x555b43047643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41272)[0m     @     0x555b42fbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41272)[0m     @     0x555b43046baf _PyEval_EvalCodeWithName
[2m[36m(pid=41272)[0m     @     0x555b43047643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41272)[0m     @     0x555b42fbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x7ee0ee2cb4f5 at::Tensor::copy_()
[2m[36m(pid=41260)[0m     @     0x7ee0f079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41260)[0m     @     0x7ee0ee2cb4f5 at::Tensor::copy_()
[2m[36m(pid=41260)[0m     @     0x7ee0f437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41260)[0m     @     0x55bf4901afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41260)[0m     @     0x55bf48f75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x55bf49000baf _PyEval_EvalCodeWithName
[2m[36m(pid=41260)[0m     @     0x55bf49001a20 method_vectorcall
[2m[36m(pid=41260)[0m     @     0x55bf48f75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x55bf49000baf _PyEval_EvalCodeWithName
[2m[36m(pid=41260)[0m     @     0x55bf49001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41260)[0m     @     0x55bf48f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x55bf49000baf _PyEval_EvalCodeWithName
[2m[36m(pid=41260)[0m     @     0x55bf49001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41260)[0m     @     0x55bf48f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x55bf49000baf _PyEval_EvalCodeWithName
[2m[36m(pid=41260)[0m     @     0x55bf49001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41260)[0m     @     0x55bf48f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41260)[0m     @     0x55bf49000baf _PyEval_EvalCodeWithName
[2m[36m(pid=41260)[0m     @     0x55bf49001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41260)[0m     @     0x55bf48f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x7ed3a12fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41157)[0m     @     0x7ed3a0a277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41157)[0m     @     0x7ed3a0a2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41157)[0m     @     0x7ed3a0a2aad3 at::TensorIterator::for_each()
[2m[36m(pid=41157)[0m     @     0x7ed3a0a2ad91 at::TensorIterator::for_each()
[2m[36m(pid=41157)[0m     @     0x7ed3a130db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41157)[0m     @     0x7ed3a1330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41256)[0m *** SIGSEGV (@0x0) received by PID 41256 (TID 0x7f1391eba700) from PID 0; stack trace: ***
[2m[36m(pid=41256)[0m     @     0x7f1391a93390 (unknown)
[2m[36m(pid=41256)[0m     @     0x7ee491a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41256)[0m     @     0x7ee4911357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41256)[0m     @     0x7ee4911388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41256)[0m     @     0x7ee491138ad3 at::TensorIterator::for_each()
[2m[36m(pid=41256)[0m     @     0x7ee491138d91 at::TensorIterator::for_each()
[2m[36m(pid=41256)[0m     @     0x7ee491a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41232)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41232)[0m *** SIGSEGV (@0x0) received by PID 41232 (TID 0x7f16dbdd9700) from PID 0; stack trace: ***
[2m[36m(pid=41232)[0m     @     0x7f16db9b2390 (unknown)
[2m[36m(pid=41232)[0m     @     0x7ee7db8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41232)[0m     @     0x7ee7db0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41206)[0m     @     0x7fa471e32390 (unknown)
[2m[36m(pid=41206)[0m     @     0x7f7571de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41206)[0m     @     0x7f757150f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41206)[0m     @     0x7f75715128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41206)[0m     @     0x7f7571512ad3 at::TensorIterator::for_each()
[2m[36m(pid=41206)[0m     @     0x7f7571512d91 at::TensorIterator::for_each()
[2m[36m(pid=41206)[0m     @     0x7f7571df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41206)[0m     @     0x7f7571e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41171)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41171)[0m *** SIGSEGV (@0x0) received by PID 41171 (TID 0x7f515ad98700) from PID 0; stack trace: ***
[2m[36m(pid=41171)[0m     @     0x7f515a971390 (unknown)
[2m[36m(pid=41171)[0m     @     0x7f225a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41171)[0m     @     0x7f2259ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41171)[0m     @     0x7f2259ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41171)[0m     @     0x7f2259ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=41171)[0m     @     0x7f2259ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=41171)[0m     @     0x7f225a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41223)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41223)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41223)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41223)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41223)[0m *** SIGSEGV (@0x0) received by PID 41223 (TID 0x7f898adfa700) from PID 0; stack trace: ***
[2m[36m(pid=41223)[0m     @     0x7f898a9d3390 (unknown)
[2m[36m(pid=41223)[0m     @     0x7f5a8a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41223)[0m     @     0x7f5a89ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41158)[0m     @     0x7f5700480390 (unknown)
[2m[36m(pid=41158)[0m     @     0x7f2800304f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41158)[0m     @     0x7f27ffa2f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41158)[0m     @     0x7f27ffa328f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41158)[0m     @     0x7f27ffa32ad3 at::TensorIterator::for_each()
[2m[36m(pid=41158)[0m     @     0x7f27ffa32d91 at::TensorIterator::for_each()
[2m[36m(pid=41158)[0m     @     0x7f2800315b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41158)[0m     @     0x7f2800338c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41152)[0m     @     0x7f75fd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41152)[0m     @     0x7f75fc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41152)[0m     @     0x7f75fc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41152)[0m     @     0x7f75fc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41152)[0m     @     0x7f75fc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=41152)[0m     @     0x7f75fd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41152)[0m     @     0x7f75fd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41152)[0m     @     0x7f75fc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41152)[0m     @     0x7f75fc589388 at::native::copy_impl()
[2m[36m(pid=41153)[0m     @     0x7f3e81e1d390 (unknown)
[2m[36m(pid=41153)[0m     @     0x7f0f81d1df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41153)[0m     @     0x7f0f814487db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41153)[0m     @     0x7f0f8144b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41153)[0m     @     0x7f0f8144bad3 at::TensorIterator::for_each()
[2m[36m(pid=41153)[0m     @     0x7f0f8144bd91 at::TensorIterator::for_each()
[2m[36m(pid=41153)[0m     @     0x7f0f81d2eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41153)[0m     @     0x7f0f81d51c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41222)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41222)[0m *** SIGSEGV (@0x0) received by PID 41222 (TID 0x7fd2e9c93700) from PID 0; stack trace: ***
[2m[36m(pid=41222)[0m     @     0x7fd2e986c390 (unknown)
[2m[36m(pid=41222)[0m     @     0x7fa3e97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41222)[0m     @     0x7fa3e8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41222)[0m     @     0x7fa3e8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41222)[0m     @     0x7fa3e8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=41222)[0m     @     0x7fa3e8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=41222)[0m     @     0x7fa3e980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41170)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=41170)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=41170)[0m *** Aborted at 1604573005 (unix time) try "date -d @1604573005" if you are using GNU date ***
[2m[36m(pid=41170)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41170)[0m *** SIGSEGV (@0x0) received by PID 41170 (TID 0x7f006e371700) from PID 0; stack trace: ***
[2m[36m(pid=41170)[0m     @     0x7f006df4a390 (unknown)
[2m[36m(pid=41170)[0m     @     0x7ed16de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41170)[0m     @     0x7ed16d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41170)[0m     @     0x7ed16d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41170)[0m     @     0x7ed16d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=41170)[0m     @     0x7ed16d552d91 at::TensorIterator::for_each()
[2m[36m(pid=41170)[0m     @     0x7ed16de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41155)[0m     @     0x7fb8c8e2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41155)[0m     @     0x7fb8c8e2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41155)[0m     @     0x7fb8c8e2fad3 at::TensorIterator::for_each()
[2m[36m(pid=41155)[0m     @     0x7fb8c8e2fd91 at::TensorIterator::for_each()
[2m[36m(pid=41155)[0m     @     0x7fb8c9712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41155)[0m     @     0x7fb8c9735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41145)[0m     @     0x7f2b391388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41145)[0m     @     0x7f2b39138ad3 at::TensorIterator::for_each()
[2m[36m(pid=41145)[0m     @     0x7f2b39138d91 at::TensorIterator::for_each()
[2m[36m(pid=41145)[0m     @     0x7f2b39a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41145)[0m     @     0x7f2b39a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41145)[0m     @     0x7f2b38ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41145)[0m     @     0x7f2b38ede388 at::native::copy_impl()
[2m[36m(pid=41220)[0m     @     0x7ee66d4a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41220)[0m     @     0x7ee66cbce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41220)[0m     @     0x7ee66cbd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41220)[0m     @     0x7ee66cbd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=41220)[0m     @     0x7ee66cbd1d91 at::TensorIterator::for_each()
[2m[36m(pid=41220)[0m     @     0x7ee66d4b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41284)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41284)[0m *** SIGSEGV (@0x0) received by PID 41284 (TID 0x7f23d5ad2700) from PID 0; stack trace: ***
[2m[36m(pid=41284)[0m     @     0x7f23d56ab390 (unknown)
[2m[36m(pid=41284)[0m     @     0x7ef4d5626f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41284)[0m     @     0x7ef4d4d517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41284)[0m     @     0x7ef4d4d548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41284)[0m     @     0x7ef4d4d54ad3 at::TensorIterator::for_each()
[2m[36m(pid=41229)[0m     @     0x7f80231e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41229)[0m     @     0x7f80231e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41229)[0m     @     0x7f80231e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41229)[0m     @     0x7f80231e3d91 at::TensorIterator::for_each()
[2m[36m(pid=41229)[0m     @     0x7f8023ac6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41229)[0m     @     0x7f8023ae9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41235)[0m     @     0x7ffaf14af390 (unknown)
[2m[36m(pid=41235)[0m     @     0x7fcbf13ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41235)[0m     @     0x7fcbf0af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41235)[0m     @     0x7fcbf0afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41235)[0m     @     0x7fcbf0afaad3 at::TensorIterator::for_each()
[2m[36m(pid=41187)[0m     @     0x7f4db2601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41187)[0m     @     0x7f4db1d2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41187)[0m     @     0x7f4db1d2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41187)[0m     @     0x7f4db1d2fad3 at::TensorIterator::for_each()
[2m[36m(pid=41187)[0m     @     0x7f4db1d2fd91 at::TensorIterator::for_each()
[2m[36m(pid=41187)[0m     @     0x7f4db2612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41187)[0m     @     0x7f4db2635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41228)[0m     @     0x7f2e94a688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41228)[0m     @     0x7f2e94a68ad3 at::TensorIterator::for_each()
[2m[36m(pid=41228)[0m     @     0x7f2e94a68d91 at::TensorIterator::for_each()
[2m[36m(pid=41228)[0m     @     0x7f2e9534bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41228)[0m     @     0x7f2e9536ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41228)[0m     @     0x7f2e94810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41240)[0m     @     0x7f4412e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41240)[0m     @     0x7f4412e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41240)[0m     @     0x7f4412e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=41240)[0m     @     0x7f4412e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=41240)[0m     @     0x7f4413762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41240)[0m     @     0x7f4413785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41224)[0m     @     0x7fb0d6e48390 (unknown)
[2m[36m(pid=41224)[0m     @     0x7f81d6df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41224)[0m     @     0x7f81d651b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41224)[0m     @     0x7f81d651e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41224)[0m     @     0x7f81d651ead3 at::TensorIterator::for_each()
[2m[36m(pid=41177)[0m     @     0x7f53410b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41177)[0m     @     0x7f53407e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41177)[0m     @     0x7f53407e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41177)[0m     @     0x7f53407e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41177)[0m     @     0x7f53407e3d91 at::TensorIterator::for_each()
[2m[36m(pid=41177)[0m     @     0x7f53410c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41249)[0m     @     0x7f7f972238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41249)[0m     @     0x7f7f97223ad3 at::TensorIterator::for_each()
[2m[36m(pid=41249)[0m     @     0x7f7f97223d91 at::TensorIterator::for_each()
[2m[36m(pid=41249)[0m     @     0x7f7f97b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41249)[0m     @     0x7f7f97b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41249)[0m     @     0x7f7f96fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41249)[0m     @     0x7f7f96fc9388 at::native::copy_impl()
[2m[36m(pid=41161)[0m     @     0x7f20266418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41161)[0m     @     0x7f2026641ad3 at::TensorIterator::for_each()
[2m[36m(pid=41161)[0m     @     0x7f2026641d91 at::TensorIterator::for_each()
[2m[36m(pid=41161)[0m     @     0x7f2026f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41161)[0m     @     0x7f2026f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41161)[0m     @     0x7f20263e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41161)[0m     @     0x7f20263e7388 at::native::copy_impl()
[2m[36m(pid=41161)[0m     @     0x7f20263e95a4 at::native::copy_()
[2m[36m(pid=41163)[0m     @     0x7f4303229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41163)[0m     @     0x7f43029547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41163)[0m     @     0x7f43029578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41163)[0m     @     0x7f4302957ad3 at::TensorIterator::for_each()
[2m[36m(pid=41163)[0m     @     0x7f4302957d91 at::TensorIterator::for_each()
[2m[36m(pid=41241)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41241)[0m *** SIGSEGV (@0x0) received by PID 41241 (TID 0x7ff798085700) from PID 0; stack trace: ***
[2m[36m(pid=41241)[0m     @     0x7ff797c5e390 (unknown)
[2m[36m(pid=41241)[0m     @     0x7fc897af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41241)[0m     @     0x7fc8972207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41241)[0m     @     0x7fc8972238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41213)[0m     @     0x7f8db5d08390 (unknown)
[2m[36m(pid=41213)[0m     @     0x7f5eb5c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41213)[0m     @     0x7f5eb53387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41213)[0m     @     0x7f5eb533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41213)[0m     @     0x7f5eb533bad3 at::TensorIterator::for_each()
[2m[36m(pid=41213)[0m     @     0x7f5eb533bd91 at::TensorIterator::for_each()
[2m[36m(pid=41213)[0m     @     0x7f5eb5c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41213)[0m     @     0x7f5eb5c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41246)[0m     @     0x7f163fb88390 (unknown)
[2m[36m(pid=41246)[0m     @     0x7ee73f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41246)[0m     @     0x7ee73f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41246)[0m     @     0x7ee73f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41246)[0m     @     0x7ee73f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41246)[0m     @     0x7ee73f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=41246)[0m     @     0x7ee73f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41246)[0m     @     0x7ee73f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41279)[0m     @     0x7f43458688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41279)[0m     @     0x7f4345868ad3 at::TensorIterator::for_each()
[2m[36m(pid=41279)[0m     @     0x7f4345868d91 at::TensorIterator::for_each()
[2m[36m(pid=41279)[0m     @     0x7f434614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41279)[0m     @     0x7f434616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41279)[0m     @     0x7f4345610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41279)[0m     @     0x7f434560e388 at::native::copy_impl()
[2m[36m(pid=41209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=41209)[0m *** SIGSEGV (@0x0) received by PID 41209 (TID 0x7fe8d5a20700) from PID 0; stack trace: ***
[2m[36m(pid=41209)[0m     @     0x7fe8d55f9390 (unknown)
[2m[36m(pid=41209)[0m     @     0x7fb9d557ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41209)[0m     @     0x7fb9d4caa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41209)[0m     @     0x7fb9d4cad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41178)[0m     @     0x7ef872f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=41178)[0m     @     0x7ef87263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=41178)[0m     @     0x7ef8726418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41178)[0m     @     0x7ef872641ad3 at::TensorIterator::for_each()
[2m[36m(pid=41178)[0m     @     0x7ef872641d91 at::TensorIterator::for_each()
[2m[36m(pid=41178)[0m     @     0x7ef872f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41178)[0m     @     0x7ef872f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41218)[0m     @     0x7f28c20cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41218)[0m     @     0x7f28c20cdad3 at::TensorIterator::for_each()
[2m[36m(pid=41218)[0m     @     0x7f28c20cdd91 at::TensorIterator::for_each()
[2m[36m(pid=41218)[0m     @     0x7f28c29b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41218)[0m     @     0x7f28c29d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41218)[0m     @     0x7f28c1e75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41218)[0m     @     0x7f28c1e73388 at::native::copy_impl()
[2m[36m(pid=41218)[0m     @     0x7f28c1e755a4 at::native::copy_()
[2m[36m(pid=41262)[0m     @     0x7f99f29578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41262)[0m     @     0x7f99f2957ad3 at::TensorIterator::for_each()
[2m[36m(pid=41262)[0m     @     0x7f99f2957d91 at::TensorIterator::for_each()
[2m[36m(pid=41262)[0m     @     0x7f99f323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41262)[0m     @     0x7f99f325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41262)[0m     @     0x7f99f26ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41262)[0m     @     0x7f99f26fd388 at::native::copy_impl()
[2m[36m(pid=41262)[0m     @     0x7f99f26ff5a4 at::native::copy_()
[2m[36m(pid=41148)[0m     @     0x7f347506ead3 at::TensorIterator::for_each()
[2m[36m(pid=41148)[0m     @     0x7f347506ed91 at::TensorIterator::for_each()
[2m[36m(pid=41148)[0m     @     0x7f3475951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41148)[0m     @     0x7f3475974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41183)[0m     @     0x7fa84ab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41183)[0m     @     0x7fa84ab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=41183)[0m     @     0x7fa84ab68d91 at::TensorIterator::for_each()
[2m[36m(pid=41183)[0m     @     0x7fa84b44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41183)[0m     @     0x7fa84b46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41183)[0m     @     0x7fa84a910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41183)[0m     @     0x7fa84a90e388 at::native::copy_impl()
[2m[36m(pid=41183)[0m     @     0x7fa84a9105a4 at::native::copy_()
[2m[36m(pid=41212)[0m     @     0x7ed617a774f5 at::Tensor::copy_()
[2m[36m(pid=41212)[0m     @     0x7ed61db2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41212)[0m     @     0x55624b8cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41212)[0m     @     0x55624b826b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41212)[0m     @     0x55624b8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41212)[0m     @     0x55624b8b2a20 method_vectorcall
[2m[36m(pid=41212)[0m     @     0x55624b826bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41212)[0m     @     0x55624b8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41212)[0m     @     0x55624b8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41212)[0m     @     0x55624b827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41212)[0m     @     0x55624b8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41212)[0m     @     0x55624b8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41212)[0m     @     0x55624b827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41212)[0m     @     0x55624b8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41212)[0m     @     0x55624b8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41212)[0m     @     0x55624b827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41212)[0m     @     0x55624b8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41212)[0m     @     0x55624b8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41212)[0m     @     0x55624b827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x7fa26df0c4f5 at::Tensor::copy_()
[2m[36m(pid=41273)[0m     @     0x7fa273fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41273)[0m     @     0x56222e77bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41273)[0m     @     0x56222e6d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x56222e761baf _PyEval_EvalCodeWithName
[2m[36m(pid=41273)[0m     @     0x56222e762a20 method_vectorcall
[2m[36m(pid=41273)[0m     @     0x56222e6d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x56222e761baf _PyEval_EvalCodeWithName
[2m[36m(pid=41273)[0m     @     0x56222e762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41273)[0m     @     0x56222e6d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x56222e761baf _PyEval_EvalCodeWithName
[2m[36m(pid=41273)[0m     @     0x56222e762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41273)[0m     @     0x56222e6d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x56222e761baf _PyEval_EvalCodeWithName
[2m[36m(pid=41273)[0m     @     0x56222e762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41273)[0m     @     0x56222e6d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41273)[0m     @     0x56222e761baf _PyEval_EvalCodeWithName
[2m[36m(pid=41273)[0m     @     0x56222e762643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41273)[0m     @     0x56222e6d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x7f7d4782fad3 at::TensorIterator::for_each()
[2m[36m(pid=41207)[0m     @     0x7f7d4782fd91 at::TensorIterator::for_each()
[2m[36m(pid=41207)[0m     @     0x7f7d48112b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41207)[0m     @     0x7f7d48135c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41207)[0m     @     0x7f7d475d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41207)[0m     @     0x7f7d475d5388 at::native::copy_impl()
[2m[36m(pid=41207)[0m     @     0x7f7d475d75a4 at::native::copy_()
[2m[36m(pid=41250)[0m     @     0x564bb7ae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41250)[0m     @     0x564bb7b70baf _PyEval_EvalCodeWithName
[2m[36m(pid=41250)[0m     @     0x564bb7b71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41250)[0m     @     0x564bb7ae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41250)[0m     @     0x564bb7b70baf _PyEval_EvalCodeWithName
[2m[36m(pid=41250)[0m     @     0x564bb7b71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41250)[0m     @     0x564bb7ae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41250)[0m     @     0x564bb7b70baf _PyEval_EvalCodeWithName
[2m[36m(pid=41250)[0m     @     0x564bb7b71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41250)[0m     @     0x564bb7ae6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x7f68100adad3 at::TensorIterator::for_each()
[2m[36m(pid=41214)[0m     @     0x7f68100add91 at::TensorIterator::for_each()
[2m[36m(pid=41214)[0m     @     0x7f6810990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41214)[0m     @     0x7f68109b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41214)[0m     @     0x7f680fe55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41214)[0m     @     0x7f680fe53388 at::native::copy_impl()
[2m[36m(pid=41214)[0m     @     0x7f680fe555a4 at::native::copy_()
[2m[36m(pid=41214)[0m     @     0x7f68105404f5 at::Tensor::copy_()
[2m[36m(pid=41214)[0m     @     0x7f6812a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41149)[0m     @     0x7f1d07ba3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41149)[0m     @     0x7f1d07ba3d91 at::TensorIterator::for_each()
[2m[36m(pid=41149)[0m     @     0x7f1d08486b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41149)[0m     @     0x7f1d084a9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41149)[0m     @     0x7f1d0794ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41149)[0m     @     0x7f1d07949388 at::native::copy_impl()
[2m[36m(pid=41149)[0m     @     0x7f1d0794b5a4 at::native::copy_()
[2m[36m(pid=41149)[0m     @     0x7f1d080364f5 at::Tensor::copy_()
[2m[36m(pid=41239)[0m     @     0x7fb26f7b84f5 at::Tensor::copy_()
[2m[36m(pid=41239)[0m     @     0x7fb27586379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41239)[0m     @     0x564211237fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41239)[0m     @     0x564211192b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41239)[0m     @     0x56421121dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41239)[0m     @     0x56421121ea20 method_vectorcall
[2m[36m(pid=41239)[0m     @     0x564211192bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41239)[0m     @     0x56421121dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41239)[0m     @     0x56421121e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41239)[0m     @     0x564211193689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41239)[0m     @     0x56421121dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41239)[0m     @     0x56421121e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41239)[0m     @     0x564211193689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41239)[0m     @     0x56421121dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41239)[0m     @     0x56421121e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41239)[0m     @     0x564211193689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41239)[0m     @     0x56421121dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41239)[0m     @     0x56421121e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41239)[0m     @     0x564211193689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x7edd962fc5a4 at::native::copy_()
[2m[36m(pid=41237)[0m     @     0x7edd969e74f5 at::Tensor::copy_()
[2m[36m(pid=41237)[0m     @     0x7edd98eba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41237)[0m     @     0x7edd969e74f5 at::Tensor::copy_()
[2m[36m(pid=41237)[0m     @     0x7edd9ca9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41237)[0m     @     0x560a29f26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41237)[0m     @     0x560a29e81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x560a29f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41237)[0m     @     0x560a29f0da20 method_vectorcall
[2m[36m(pid=41237)[0m     @     0x560a29e81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x560a29f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41237)[0m     @     0x560a29f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41237)[0m     @     0x560a29e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x560a29f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41237)[0m     @     0x560a29f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41237)[0m     @     0x560a29e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x560a29f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41237)[0m     @     0x560a29f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41237)[0m     @     0x560a29e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41237)[0m     @     0x560a29f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41237)[0m     @     0x560a29f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41237)[0m     @     0x560a29e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x7ed29b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=41184)[0m     @     0x7ed29b539d91 at::TensorIterator::for_each()
[2m[36m(pid=41184)[0m     @     0x7ed29be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41184)[0m     @     0x7ed29be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41184)[0m     @     0x7ed29b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41184)[0m     @     0x7ed29b2df388 at::native::copy_impl()
[2m[36m(pid=41184)[0m     @     0x7ed29b2e15a4 at::native::copy_()
[2m[36m(pid=41150)[0m     @     0x7fa62242aad3 at::TensorIterator::for_each()
[2m[36m(pid=41150)[0m     @     0x7fa62242ad91 at::TensorIterator::for_each()
[2m[36m(pid=41150)[0m     @     0x7fa622d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41150)[0m     @     0x7fa622d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41150)[0m     @     0x7fa6221d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41150)[0m     @     0x7fa6221d0388 at::native::copy_impl()
[2m[36m(pid=41150)[0m     @     0x7fa6221d25a4 at::native::copy_()
[2m[36m(pid=41227)[0m     @     0x7fcbd47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41227)[0m     @     0x7fcbd47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=41227)[0m     @     0x7fcbd47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=41227)[0m     @     0x7fcbd50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41227)[0m     @     0x7fcbd50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41227)[0m     @     0x7fcbd458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41227)[0m     @     0x7fcbd4589388 at::native::copy_impl()
[2m[36m(pid=41227)[0m     @     0x7fcbd458b5a4 at::native::copy_()
[2m[36m(pid=41174)[0m     @     0x7f3643b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41174)[0m     @     0x7f3643b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=41174)[0m     @     0x7f3643b11d91 at::TensorIterator::for_each()
[2m[36m(pid=41174)[0m     @     0x7f36443f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41174)[0m     @     0x7f3644417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41174)[0m     @     0x7f36438b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41174)[0m     @     0x7f36438b7388 at::native::copy_impl()
[2m[36m(pid=41226)[0m     @     0x7eed322cb4f5 at::Tensor::copy_()
[2m[36m(pid=41226)[0m     @     0x7eed3479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41226)[0m     @     0x7eed322cb4f5 at::Tensor::copy_()
[2m[36m(pid=41226)[0m     @     0x7eed3837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41226)[0m     @     0x55a8ca3b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41226)[0m     @     0x55a8ca30cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41226)[0m     @     0x55a8ca397baf _PyEval_EvalCodeWithName
[2m[36m(pid=41226)[0m     @     0x55a8ca398a20 method_vectorcall
[2m[36m(pid=41226)[0m     @     0x55a8ca30cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41226)[0m     @     0x55a8ca397baf _PyEval_EvalCodeWithName
[2m[36m(pid=41226)[0m     @     0x55a8ca398643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41226)[0m     @     0x55a8ca30d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41226)[0m     @     0x55a8ca397baf _PyEval_EvalCodeWithName
[2m[36m(pid=41226)[0m     @     0x55a8ca398643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41226)[0m     @     0x55a8ca30d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41226)[0m     @     0x55a8ca397baf _PyEval_EvalCodeWithName
[2m[36m(pid=41226)[0m     @     0x55a8ca398643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41226)[0m     @     0x55a8ca30d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41226)[0m     @     0x55a8ca397baf _PyEval_EvalCodeWithName
[2m[36m(pid=41226)[0m     @     0x55a8ca398643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41226)[0m     @     0x55a8ca30d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x7edf4d28dd91 at::TensorIterator::for_each()
[2m[36m(pid=41215)[0m     @     0x7edf4db70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41215)[0m     @     0x7edf4db93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41215)[0m     @     0x7edf4d035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41215)[0m     @     0x7edf4d033388 at::native::copy_impl()
[2m[36m(pid=41215)[0m     @     0x7edf4d0355a4 at::native::copy_()
[2m[36m(pid=41215)[0m     @     0x7edf4d7204f5 at::Tensor::copy_()
[2m[36m(pid=41215)[0m     @     0x7edf4fbf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41215)[0m     @     0x7edf4d7204f5 at::Tensor::copy_()
[2m[36m(pid=41215)[0m     @     0x7edf537cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41215)[0m     @     0x55de5f073fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41215)[0m     @     0x55de5efceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x55de5f059baf _PyEval_EvalCodeWithName
[2m[36m(pid=41215)[0m     @     0x55de5f05aa20 method_vectorcall
[2m[36m(pid=41215)[0m     @     0x55de5efcebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x55de5f059baf _PyEval_EvalCodeWithName
[2m[36m(pid=41215)[0m     @     0x55de5f05a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41162)[0m     @     0x7fadf1caaad3 at::TensorIterator::for_each()
[2m[36m(pid=41162)[0m     @     0x7fadf1caad91 at::TensorIterator::for_each()
[2m[36m(pid=41162)[0m     @     0x7fadf258db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41162)[0m     @     0x7fadf25b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41162)[0m     @     0x7fadf1a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41162)[0m     @     0x7fadf1a50388 at::native::copy_impl()
[2m[36m(pid=41162)[0m     @     0x7fadf1a525a4 at::native::copy_()
[2m[36m(pid=41162)[0m     @     0x7fadf213d4f5 at::Tensor::copy_()
[2m[36m(pid=41225)[0m     @     0x55c486a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=41225)[0m     @     0x55c486a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41225)[0m     @     0x55c4869ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41225)[0m     @     0x55c486a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=41225)[0m     @     0x55c486a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41225)[0m     @     0x55c4869ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41225)[0m     @     0x55c486a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=41225)[0m     @     0x55c486a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41225)[0m     @     0x55c4869ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41225)[0m     @     0x55c486a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=41225)[0m     @     0x55c486a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41225)[0m     @     0x55c4869ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x7fa9ff223d91 at::TensorIterator::for_each()
[2m[36m(pid=41166)[0m     @     0x7fa9ffb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41166)[0m     @     0x7fa9ffb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41166)[0m     @     0x7fa9fefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41166)[0m     @     0x7fa9fefc9388 at::native::copy_impl()
[2m[36m(pid=41166)[0m     @     0x7fa9fefcb5a4 at::native::copy_()
[2m[36m(pid=41147)[0m     @     0x7fc97c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41147)[0m     @     0x7fc97bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41147)[0m     @     0x7fc97bc48388 at::native::copy_impl()
[2m[36m(pid=41147)[0m     @     0x7fc97bc4a5a4 at::native::copy_()
[2m[36m(pid=41147)[0m     @     0x7fc97c3354f5 at::Tensor::copy_()
[2m[36m(pid=41147)[0m     @     0x7fc97e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41144)[0m     @     0x7fc960c11d91 at::TensorIterator::for_each()
[2m[36m(pid=41144)[0m     @     0x7fc9614f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41144)[0m     @     0x7fc961517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41144)[0m     @     0x7fc9609b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41144)[0m     @     0x7fc9609b7388 at::native::copy_impl()
[2m[36m(pid=41144)[0m     @     0x7fc9609b95a4 at::native::copy_()
[2m[36m(pid=41230)[0m     @     0x7fa68bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=41230)[0m     @     0x7fa68bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=41230)[0m     @     0x7fa68c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41230)[0m     @     0x7fa68c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41230)[0m     @     0x7fa68bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41230)[0m     @     0x7fa68bcf9388 at::native::copy_impl()
[2m[36m(pid=41146)[0m     @     0x7f60107efad3 at::TensorIterator::for_each()
[2m[36m(pid=41146)[0m     @     0x7f60107efd91 at::TensorIterator::for_each()
[2m[36m(pid=41146)[0m     @     0x7f60110d2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41146)[0m     @     0x7f60110f5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41219)[0m     @     0x7f699f7daad3 at::TensorIterator::for_each()
[2m[36m(pid=41219)[0m     @     0x7f699f7dad91 at::TensorIterator::for_each()
[2m[36m(pid=41219)[0m     @     0x7f69a00bdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41219)[0m     @     0x7f69a00e0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41236)[0m     @     0x7ef25fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41236)[0m     @     0x7ef25fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41236)[0m     @     0x7ef25efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41236)[0m     @     0x7ef25efc9388 at::native::copy_impl()
[2m[36m(pid=41236)[0m     @     0x7ef25efcb5a4 at::native::copy_()
[2m[36m(pid=41210)[0m     @     0x7f19958688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41210)[0m     @     0x7f1995868ad3 at::TensorIterator::for_each()
[2m[36m(pid=41210)[0m     @     0x7f1995868d91 at::TensorIterator::for_each()
[2m[36m(pid=41210)[0m     @     0x7f199614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41164)[0m     @     0x7fabb2dafd91 at::TensorIterator::for_each()
[2m[36m(pid=41164)[0m     @     0x7fabb3692b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41164)[0m     @     0x7fabb36b5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41164)[0m     @     0x7fabb2b57a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41164)[0m     @     0x7fabb2b55388 at::native::copy_impl()
[2m[36m(pid=41176)[0m     @     0x7ef00ed1dd91 at::TensorIterator::for_each()
[2m[36m(pid=41176)[0m     @     0x7ef00f600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41176)[0m     @     0x7ef00f623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41176)[0m     @     0x7ef00eac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41176)[0m     @     0x7ef00eac3388 at::native::copy_impl()
[2m[36m(pid=41180)[0m     @     0x7f07d941dad3 at::TensorIterator::for_each()
[2m[36m(pid=41180)[0m     @     0x7f07d941dd91 at::TensorIterator::for_each()
[2m[36m(pid=41180)[0m     @     0x7f07d9d00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41180)[0m     @     0x7f07d9d23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41221)[0m     @     0x7f1f7a37ead3 at::TensorIterator::for_each()
[2m[36m(pid=41221)[0m     @     0x7f1f7a37ed91 at::TensorIterator::for_each()
[2m[36m(pid=41221)[0m     @     0x7f1f7ac61b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41221)[0m     @     0x7f1f7ac84c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41221)[0m     @     0x7f1f7a126a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41221)[0m     @     0x7f1f7a124388 at::native::copy_impl()
[2m[36m(pid=41217)[0m     @     0x7fac567efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41217)[0m     @     0x7fac55c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41217)[0m     @     0x7fac55c8f388 at::native::copy_impl()
[2m[36m(pid=41217)[0m     @     0x7fac55c915a4 at::native::copy_()
[2m[36m(pid=41247)[0m     @     0x7fc06e5e24f5 at::Tensor::copy_()
[2m[36m(pid=41247)[0m     @     0x7fc070ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41247)[0m     @     0x7fc06e5e24f5 at::Tensor::copy_()
[2m[36m(pid=41247)[0m     @     0x7fc07468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41247)[0m     @     0x55aeea249fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41247)[0m     @     0x55aeea1a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41247)[0m     @     0x55aeea230a20 method_vectorcall
[2m[36m(pid=41247)[0m     @     0x55aeea1a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41247)[0m     @     0x55aeea230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41247)[0m     @     0x55aeea1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41247)[0m     @     0x55aeea230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41247)[0m     @     0x55aeea1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x7ed9390e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41231)[0m     @     0x7ed9390e1388 at::native::copy_impl()
[2m[36m(pid=41231)[0m     @     0x7ed9390e35a4 at::native::copy_()
[2m[36m(pid=41231)[0m     @     0x7ed9397ce4f5 at::Tensor::copy_()
[2m[36m(pid=41159)[0m     @     0x7fb75b24fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41159)[0m     @     0x7fb75b24d388 at::native::copy_impl()
[2m[36m(pid=41159)[0m     @     0x7fb75b24f5a4 at::native::copy_()
[2m[36m(pid=41159)[0m     @     0x7fb75b93a4f5 at::Tensor::copy_()
[2m[36m(pid=41159)[0m     @     0x7fb75de0d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41160)[0m     @     0x7f78d779ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41160)[0m     @     0x7f78d779a388 at::native::copy_impl()
[2m[36m(pid=41160)[0m     @     0x7f78d779c5a4 at::native::copy_()
[2m[36m(pid=41160)[0m     @     0x7f78d7e874f5 at::Tensor::copy_()
[2m[36m(pid=41151)[0m     @     0x7ef93e54da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41151)[0m     @     0x7ef93e54b388 at::native::copy_impl()
[2m[36m(pid=41151)[0m     @     0x7ef93e54d5a4 at::native::copy_()
[2m[36m(pid=41151)[0m     @     0x7ef93ec384f5 at::Tensor::copy_()
[2m[36m(pid=41216)[0m     @     0x7fbd9f675c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41216)[0m     @     0x7fbd9eb17a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41216)[0m     @     0x7fbd9eb15388 at::native::copy_impl()
[2m[36m(pid=41157)[0m     @     0x7ed3a07d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41157)[0m     @     0x7ed3a07d0388 at::native::copy_impl()
[2m[36m(pid=41157)[0m     @     0x7ed3a07d25a4 at::native::copy_()
[2m[36m(pid=41157)[0m     @     0x7ed3a0ebd4f5 at::Tensor::copy_()
[2m[36m(pid=41157)[0m     @     0x7ed3a33908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41256)[0m     @     0x7ee491a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41256)[0m     @     0x7ee490ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41256)[0m     @     0x7ee490ede388 at::native::copy_impl()
[2m[36m(pid=41256)[0m     @     0x7ee490ee05a4 at::native::copy_()
[2m[36m(pid=41256)[0m     @     0x7ee4915cb4f5 at::Tensor::copy_()
[2m[36m(pid=41232)[0m     @     0x7ee7db00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41232)[0m     @     0x7ee7db00cad3 at::TensorIterator::for_each()
[2m[36m(pid=41206)[0m     @     0x7f75712baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41206)[0m     @     0x7f75712b8388 at::native::copy_impl()
[2m[36m(pid=41206)[0m     @     0x7f75712ba5a4 at::native::copy_()
[2m[36m(pid=41206)[0m     @     0x7f75719a54f5 at::Tensor::copy_()
[2m[36m(pid=41171)[0m     @     0x7f225a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41171)[0m     @     0x7f2259c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41171)[0m     @     0x7f2259c8f388 at::native::copy_impl()
[2m[36m(pid=41171)[0m     @     0x7f2259c915a4 at::native::copy_()
[2m[36m(pid=41171)[0m     @     0x7f225a37c4f5 at::Tensor::copy_()
[2m[36m(pid=41223)[0m     @     0x7f5a89ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=41158)[0m     @     0x7f27ff7daa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41158)[0m     @     0x7f27ff7d8388 at::native::copy_impl()
[2m[36m(pid=41158)[0m     @     0x7f27ff7da5a4 at::native::copy_()
[2m[36m(pid=41158)[0m     @     0x7f27ffec54f5 at::Tensor::copy_()
[2m[36m(pid=41152)[0m     @     0x7f75fc58b5a4 at::native::copy_()
[2m[36m(pid=41152)[0m     @     0x7f75fcc764f5 at::Tensor::copy_()
[2m[36m(pid=41152)[0m     @     0x7f75ff1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41152)[0m     @     0x7f75fcc764f5 at::Tensor::copy_()
[2m[36m(pid=41153)[0m     @     0x7f0f811f3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41153)[0m     @     0x7f0f811f1388 at::native::copy_impl()
[2m[36m(pid=41153)[0m     @     0x7f0f811f35a4 at::native::copy_()
[2m[36m(pid=41153)[0m     @     0x7f0f818de4f5 at::Tensor::copy_()
[2m[36m(pid=41222)[0m     @     0x7fa3e982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41222)[0m     @     0x7fa3e8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41222)[0m     @     0x7fa3e8ccd388 at::native::copy_impl()
[2m[36m(pid=41222)[0m     @     0x7fa3e8ccf5a4 at::native::copy_()
[2m[36m(pid=41170)[0m     @     0x7ed16de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41170)[0m     @     0x7ed16d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41170)[0m     @     0x7ed16d2f8388 at::native::copy_impl()
[2m[36m(pid=41170)[0m     @     0x7ed16d2fa5a4 at::native::copy_()
[2m[36m(pid=41170)[0m     @     0x7ed16d9e54f5 at::Tensor::copy_()
[2m[36m(pid=41155)[0m     @     0x7fb8c8bd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41155)[0m     @     0x7fb8c8bd5388 at::native::copy_impl()
[2m[36m(pid=41155)[0m     @     0x7fb8c8bd75a4 at::native::copy_()
[2m[36m(pid=41155)[0m     @     0x7fb8c92c24f5 at::Tensor::copy_()
[2m[36m(pid=41145)[0m     @     0x7f2b38ee05a4 at::native::copy_()
[2m[36m(pid=41145)[0m     @     0x7f2b395cb4f5 at::Tensor::copy_()
[2m[36m(pid=41145)[0m     @     0x7f2b3ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41220)[0m     @     0x7ee66d4d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41220)[0m     @     0x7ee66c979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41220)[0m     @     0x7ee66c977388 at::native::copy_impl()
[2m[36m(pid=41220)[0m     @     0x7ee66c9795a4 at::native::copy_()
[2m[36m(pid=41284)[0m     @     0x7ef4d4d54d91 at::TensorIterator::for_each()
[2m[36m(pid=41284)[0m     @     0x7ef4d5637b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41284)[0m     @     0x7ef4d565ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41284)[0m     @     0x7ef4d4afca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41284)[0m     @     0x7ef4d4afa388 at::native::copy_impl()
[2m[36m(pid=41284)[0m     @     0x7ef4d4afc5a4 at::native::copy_()
[2m[36m(pid=41229)[0m     @     0x7f8022f8ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41229)[0m     @     0x7f8022f89388 at::native::copy_impl()
[2m[36m(pid=41229)[0m     @     0x7f8022f8b5a4 at::native::copy_()
[2m[36m(pid=41229)[0m     @     0x7f80236764f5 at::Tensor::copy_()
[2m[36m(pid=41235)[0m     @     0x7fcbf0afad91 at::TensorIterator::for_each()
[2m[36m(pid=41235)[0m     @     0x7fcbf13ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41235)[0m     @     0x7fcbf1400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41235)[0m     @     0x7fcbf08a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41235)[0m     @     0x7fcbf08a0388 at::native::copy_impl()
[2m[36m(pid=41235)[0m     @     0x7fcbf08a25a4 at::native::copy_()
[2m[36m(pid=41187)[0m     @     0x7f4db1ad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41187)[0m     @     0x7f4db1ad5388 at::native::copy_impl()
[2m[36m(pid=41187)[0m     @     0x7f4db1ad75a4 at::native::copy_()
[2m[36m(pid=41187)[0m     @     0x7f4db21c24f5 at::Tensor::copy_()
[2m[36m(pid=41228)[0m     @     0x7f2e9480e388 at::native::copy_impl()
[2m[36m(pid=41228)[0m     @     0x7f2e948105a4 at::native::copy_()
[2m[36m(pid=41228)[0m     @     0x7f2e94efb4f5 at::Tensor::copy_()
[2m[36m(pid=41228)[0m     @     0x7f2e973ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41240)[0m     @     0x7f4412c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41240)[0m     @     0x7f4412c25388 at::native::copy_impl()
[2m[36m(pid=41240)[0m     @     0x7f4412c275a4 at::native::copy_()
[2m[36m(pid=41240)[0m     @     0x7f44133124f5 at::Tensor::copy_()
[2m[36m(pid=41224)[0m     @     0x7f81d651ed91 at::TensorIterator::for_each()
[2m[36m(pid=41224)[0m     @     0x7f81d6e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41224)[0m     @     0x7f81d6e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41224)[0m     @     0x7f81d62c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41224)[0m     @     0x7f81d62c4388 at::native::copy_impl()
[2m[36m(pid=41224)[0m     @     0x7f81d62c65a4 at::native::copy_()
[2m[36m(pid=41177)[0m     @     0x7f53410e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41177)[0m     @     0x7f534058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41177)[0m     @     0x7f5340589388 at::native::copy_impl()
[2m[36m(pid=41177)[0m     @     0x7f534058b5a4 at::native::copy_()
[2m[36m(pid=41249)[0m     @     0x7f7f96fcb5a4 at::native::copy_()
[2m[36m(pid=41249)[0m     @     0x7f7f976b64f5 at::Tensor::copy_()
[2m[36m(pid=41249)[0m     @     0x7f7f99b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41161)[0m     @     0x7f2026ad44f5 at::Tensor::copy_()
[2m[36m(pid=41161)[0m     @     0x7f2028fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41163)[0m     @     0x7f430323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41163)[0m     @     0x7f430325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41163)[0m     @     0x7f43026ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41241)[0m     @     0x7fc897223ad3 at::TensorIterator::for_each()
[2m[36m(pid=41213)[0m     @     0x7f5eb50e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41213)[0m     @     0x7f5eb50e1388 at::native::copy_impl()
[2m[36m(pid=41213)[0m     @     0x7f5eb50e35a4 at::native::copy_()
[2m[36m(pid=41246)[0m     @     0x7ee73ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41246)[0m     @     0x7ee73ee99388 at::native::copy_impl()
[2m[36m(pid=41279)[0m     @     0x7f43456105a4 at::native::copy_()
[2m[36m(pid=41279)[0m     @     0x7f4345cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41279)[0m     @     0x7f43481ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41178)[0m     @     0x7ef8723e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41178)[0m     @     0x7ef8723e7388 at::native::copy_impl()
[2m[36m(pid=41178)[0m     @     0x7ef8723e95a4 at::native::copy_()
[2m[36m(pid=41218)[0m     @     0x7f28c25604f5 at::Tensor::copy_()
[2m[36m(pid=41218)[0m     @     0x7f28c4a338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41262)[0m     @     0x7f99f2dea4f5 at::Tensor::copy_()
[2m[36m(pid=41262)[0m     @     0x7f99f52bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41148)[0m     @     0x7f3474e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41148)[0m     @     0x7f3474e14388 at::native::copy_impl()
[2m[36m(pid=41183)[0m     @     0x7fa84affb4f5 at::Tensor::copy_()
[2m[36m(pid=41183)[0m     @     0x7fa84d4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41207)[0m     @     0x7f7d47cc24f5 at::Tensor::copy_()
[2m[36m(pid=41207)[0m     @     0x7f7d4a1958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41207)[0m     @     0x7f7d47cc24f5 at::Tensor::copy_()
[2m[36m(pid=41207)[0m     @     0x7f7d4dd6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41207)[0m     @     0x5619dca21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41207)[0m     @     0x5619dc97cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=41207)[0m     @     0x5619dca08a20 method_vectorcall
[2m[36m(pid=41207)[0m     @     0x5619dc97cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=41207)[0m     @     0x5619dca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41207)[0m     @     0x5619dc97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=41207)[0m     @     0x5619dca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41207)[0m     @     0x5619dc97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=41207)[0m     @     0x5619dca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x7f68105404f5 at::Tensor::copy_()
[2m[36m(pid=41214)[0m     @     0x7f68165eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41214)[0m     @     0x557b9523bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41214)[0m     @     0x557b95196b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95221baf _PyEval_EvalCodeWithName
[2m[36m(pid=41214)[0m     @     0x557b95222a20 method_vectorcall
[2m[36m(pid=41214)[0m     @     0x557b95196bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95221baf _PyEval_EvalCodeWithName
[2m[36m(pid=41214)[0m     @     0x557b95222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x557b95197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95221baf _PyEval_EvalCodeWithName
[2m[36m(pid=41214)[0m     @     0x557b95222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x557b95197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95221baf _PyEval_EvalCodeWithName
[2m[36m(pid=41214)[0m     @     0x557b95222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x557b95197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95221baf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x7f1d0a5098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41149)[0m     @     0x7f1d080364f5 at::Tensor::copy_()
[2m[36m(pid=41149)[0m     @     0x7f1d0e0e179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41149)[0m     @     0x55ab0b6e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41149)[0m     @     0x55ab0b640b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x55ab0b6cca20 method_vectorcall
[2m[36m(pid=41149)[0m     @     0x55ab0b640bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x55ab0b6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41149)[0m     @     0x55ab0b641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x55ab0b6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41149)[0m     @     0x55ab0b641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x55ab0b6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41149)[0m     @     0x55ab0b641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41149)[0m     @     0x55ab0b6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41184)[0m     @     0x7ed29b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=41184)[0m     @     0x7ed29de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41184)[0m     @     0x7ed29b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=41184)[0m     @     0x7ed2a1a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41184)[0m     @     0x56369b21afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41184)[0m     @     0x56369b175b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x56369b200baf _PyEval_EvalCodeWithName
[2m[36m(pid=41184)[0m     @     0x56369b201a20 method_vectorcall
[2m[36m(pid=41184)[0m     @     0x56369b175bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x56369b200baf _PyEval_EvalCodeWithName
[2m[36m(pid=41184)[0m     @     0x56369b201643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41184)[0m     @     0x56369b176689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x7fa6228bd4f5 at::Tensor::copy_()
[2m[36m(pid=41150)[0m     @     0x7fa624d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41150)[0m     @     0x7fa6228bd4f5 at::Tensor::copy_()
[2m[36m(pid=41227)[0m     @     0x7fcbd4c764f5 at::Tensor::copy_()
[2m[36m(pid=41227)[0m     @     0x7fcbd71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41227)[0m     @     0x7fcbd4c764f5 at::Tensor::copy_()
[2m[36m(pid=41174)[0m     @     0x7f36438b95a4 at::native::copy_()
[2m[36m(pid=41174)[0m     @     0x7f3643fa44f5 at::Tensor::copy_()
[2m[36m(pid=41174)[0m     @     0x7f36464778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41215)[0m     @     0x55de5efcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x55de5f059baf _PyEval_EvalCodeWithName
[2m[36m(pid=41215)[0m     @     0x55de5f05a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41215)[0m     @     0x55de5efcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x55de5f059baf _PyEval_EvalCodeWithName
[2m[36m(pid=41215)[0m     @     0x55de5f05a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41215)[0m     @     0x55de5efcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41215)[0m     @     0x55de5f059baf _PyEval_EvalCodeWithName
[2m[36m(pid=41215)[0m     @     0x55de5f05a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41215)[0m     @     0x55de5efcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x7fadf46108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41162)[0m     @     0x7fadf213d4f5 at::Tensor::copy_()
[2m[36m(pid=41162)[0m     @     0x7fadf81e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41162)[0m     @     0x5629851a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41162)[0m     @     0x562985103b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x56298518ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41162)[0m     @     0x56298518fa20 method_vectorcall
[2m[36m(pid=41162)[0m     @     0x562985103bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x56298518ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41162)[0m     @     0x56298518f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41162)[0m     @     0x562985104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x56298518ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41162)[0m     @     0x56298518f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41162)[0m     @     0x562985104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x56298518ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41162)[0m     @     0x56298518f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41162)[0m     @     0x562985104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41162)[0m     @     0x56298518ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=41162)[0m     @     0x56298518f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41162)[0m     @     0x562985104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x7fa9ff6b64f5 at::Tensor::copy_()
[2m[36m(pid=41166)[0m     @     0x7faa01b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41166)[0m     @     0x7fa9ff6b64f5 at::Tensor::copy_()
[2m[36m(pid=41166)[0m     @     0x7faa0576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41166)[0m     @     0x5560d934ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41166)[0m     @     0x5560d92aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d9335baf _PyEval_EvalCodeWithName
[2m[36m(pid=41166)[0m     @     0x5560d9336a20 method_vectorcall
[2m[36m(pid=41166)[0m     @     0x5560d92aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d9335baf _PyEval_EvalCodeWithName
[2m[36m(pid=41166)[0m     @     0x5560d9336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41166)[0m     @     0x5560d92ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d9335baf _PyEval_EvalCodeWithName
[2m[36m(pid=41166)[0m     @     0x5560d9336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41147)[0m     @     0x7fc97c3354f5 at::Tensor::copy_()
[2m[36m(pid=41147)[0m     @     0x7fc9823e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41147)[0m     @     0x5606c1b67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41147)[0m     @     0x5606c1ac2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x5606c1b4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41147)[0m     @     0x5606c1b4ea20 method_vectorcall
[2m[36m(pid=41147)[0m     @     0x5606c1ac2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x5606c1b4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41147)[0m     @     0x5606c1b4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41147)[0m     @     0x5606c1ac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x5606c1b4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41147)[0m     @     0x5606c1b4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41147)[0m     @     0x5606c1ac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x5606c1b4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41147)[0m     @     0x5606c1b4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41147)[0m     @     0x5606c1ac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41147)[0m     @     0x5606c1b4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41147)[0m     @     0x5606c1b4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41147)[0m     @     0x5606c1ac3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x7fc9610a44f5 at::Tensor::copy_()
[2m[36m(pid=41144)[0m     @     0x7fc9635778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41144)[0m     @     0x7fc9610a44f5 at::Tensor::copy_()
[2m[36m(pid=41230)[0m     @     0x7fa68bcfb5a4 at::native::copy_()
[2m[36m(pid=41230)[0m     @     0x7fa68c3e64f5 at::Tensor::copy_()
[2m[36m(pid=41230)[0m     @     0x7fa68e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41146)[0m     @     0x7f6010597a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41146)[0m     @     0x7f6010595388 at::native::copy_impl()
[2m[36m(pid=41219)[0m     @     0x7f699f582a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41219)[0m     @     0x7f699f580388 at::native::copy_impl()
[2m[36m(pid=41219)[0m     @     0x7f699f5825a4 at::native::copy_()
[2m[36m(pid=41236)[0m     @     0x7ef25f6b64f5 at::Tensor::copy_()
[2m[36m(pid=41236)[0m     @     0x7ef261b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41236)[0m     @     0x7ef25f6b64f5 at::Tensor::copy_()
[2m[36m(pid=41210)[0m     @     0x7f199616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41210)[0m     @     0x7f1995610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41210)[0m     @     0x7f199560e388 at::native::copy_impl()
[2m[36m(pid=41210)[0m     @     0x7f19956105a4 at::native::copy_()
[2m[36m(pid=41164)[0m     @     0x7fabb2b575a4 at::native::copy_()
[2m[36m(pid=41164)[0m     @     0x7fabb32424f5 at::Tensor::copy_()
[2m[36m(pid=41164)[0m     @     0x7fabb57158de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41176)[0m     @     0x7ef00eac55a4 at::native::copy_()
[2m[36m(pid=41176)[0m     @     0x7ef00f1b04f5 at::Tensor::copy_()
[2m[36m(pid=41176)[0m     @     0x7ef0116838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41180)[0m     @     0x7f07d91c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41180)[0m     @     0x7f07d91c3388 at::native::copy_impl()
[2m[36m(pid=41180)[0m     @     0x7f07d91c55a4 at::native::copy_()
[2m[36m(pid=41221)[0m     @     0x7f1f7a1265a4 at::native::copy_()
[2m[36m(pid=41221)[0m     @     0x7f1f7a8114f5 at::Tensor::copy_()
[2m[36m(pid=41217)[0m     @     0x7fac5637c4f5 at::Tensor::copy_()
[2m[36m(pid=41217)[0m     @     0x7fac5884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41217)[0m     @     0x7fac5637c4f5 at::Tensor::copy_()
[2m[36m(pid=41217)[0m     @     0x7fac5c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41217)[0m     @     0x5627aae29fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41217)[0m     @     0x5627aad84b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41247)[0m     @     0x55aeea1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41247)[0m     @     0x55aeea22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41247)[0m     @     0x55aeea230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41247)[0m     @     0x55aeea1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x7ed93bca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41231)[0m     @     0x7ed9397ce4f5 at::Tensor::copy_()
[2m[36m(pid=41231)[0m     @     0x7ed93f87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41231)[0m     @     0x5639106fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41231)[0m     @     0x563910658b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x5639106e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x5639106e4a20 method_vectorcall
[2m[36m(pid=41231)[0m     @     0x563910658bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x5639106e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x5639106e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41231)[0m     @     0x563910659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x5639106e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x5639106e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41231)[0m     @     0x563910659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x5639106e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x5639106e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41231)[0m     @     0x563910659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41231)[0m     @     0x5639106e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41231)[0m     @     0x5639106e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41231)[0m     @     0x563910659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x7fb75b93a4f5 at::Tensor::copy_()
[2m[36m(pid=41159)[0m     @     0x7fb7619e579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41159)[0m     @     0x55980f2d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41159)[0m     @     0x55980f22cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x55980f2b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=41159)[0m     @     0x55980f2b8a20 method_vectorcall
[2m[36m(pid=41159)[0m     @     0x55980f22cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x55980f2b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=41159)[0m     @     0x55980f2b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41159)[0m     @     0x55980f22d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x55980f2b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=41159)[0m     @     0x55980f2b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41159)[0m     @     0x55980f22d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x55980f2b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=41159)[0m     @     0x55980f2b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41159)[0m     @     0x55980f22d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41159)[0m     @     0x55980f2b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=41159)[0m     @     0x55980f2b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41159)[0m     @     0x55980f22d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x7f78da35a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41160)[0m     @     0x7f78d7e874f5 at::Tensor::copy_()
[2m[36m(pid=41160)[0m     @     0x7f78ddf3279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41160)[0m     @     0x564586fa0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41160)[0m     @     0x564586efbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x564586f86baf _PyEval_EvalCodeWithName
[2m[36m(pid=41160)[0m     @     0x564586f87a20 method_vectorcall
[2m[36m(pid=41160)[0m     @     0x564586efbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x564586f86baf _PyEval_EvalCodeWithName
[2m[36m(pid=41160)[0m     @     0x564586f87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41160)[0m     @     0x564586efc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x564586f86baf _PyEval_EvalCodeWithName
[2m[36m(pid=41160)[0m     @     0x564586f87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41160)[0m     @     0x564586efc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x564586f86baf _PyEval_EvalCodeWithName
[2m[36m(pid=41160)[0m     @     0x564586f87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41160)[0m     @     0x564586efc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41160)[0m     @     0x564586f86baf _PyEval_EvalCodeWithName
[2m[36m(pid=41160)[0m     @     0x564586f87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41160)[0m     @     0x564586efc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x7ef94110b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41151)[0m     @     0x7ef93ec384f5 at::Tensor::copy_()
[2m[36m(pid=41151)[0m     @     0x7ef944ce379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41151)[0m     @     0x561038359fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41151)[0m     @     0x5610382b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x56103833fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41151)[0m     @     0x561038340a20 method_vectorcall
[2m[36m(pid=41151)[0m     @     0x5610382b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x56103833fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41151)[0m     @     0x561038340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41151)[0m     @     0x5610382b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x56103833fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41151)[0m     @     0x561038340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41151)[0m     @     0x5610382b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x56103833fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41151)[0m     @     0x561038340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41151)[0m     @     0x5610382b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41151)[0m     @     0x56103833fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41151)[0m     @     0x561038340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41151)[0m     @     0x5610382b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x7fbd9eb175a4 at::native::copy_()
[2m[36m(pid=41216)[0m     @     0x7fbd9f2024f5 at::Tensor::copy_()
[2m[36m(pid=41216)[0m     @     0x7fbda16d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41157)[0m     @     0x7ed3a0ebd4f5 at::Tensor::copy_()
[2m[36m(pid=41157)[0m     @     0x7ed3a6f6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41157)[0m     @     0x559478469fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41157)[0m     @     0x5594783c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x55947844fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41157)[0m     @     0x559478450a20 method_vectorcall
[2m[36m(pid=41157)[0m     @     0x5594783c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x55947844fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41157)[0m     @     0x559478450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41157)[0m     @     0x5594783c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x55947844fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41157)[0m     @     0x559478450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41157)[0m     @     0x5594783c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x55947844fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41157)[0m     @     0x559478450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41157)[0m     @     0x5594783c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41157)[0m     @     0x55947844fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41157)[0m     @     0x559478450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41157)[0m     @     0x5594783c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x7ee493a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41256)[0m     @     0x7ee4915cb4f5 at::Tensor::copy_()
[2m[36m(pid=41232)[0m     @     0x7ee7db00cd91 at::TensorIterator::for_each()
[2m[36m(pid=41206)[0m     @     0x7f7573e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41171)[0m     @     0x7f225c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41171)[0m     @     0x7f225a37c4f5 at::Tensor::copy_()
[2m[36m(pid=41171)[0m     @     0x7f226042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41171)[0m     @     0x564ea45fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41171)[0m     @     0x564ea4556b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x7f5a89ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=41223)[0m     @     0x7f5a89ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=41158)[0m     @     0x7f28023988de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41158)[0m     @     0x7f27ffec54f5 at::Tensor::copy_()
[2m[36m(pid=41152)[0m     @     0x7f7602d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41152)[0m     @     0x55fe8e8bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41152)[0m     @     0x55fe8e816b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41152)[0m     @     0x55fe8e8a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41152)[0m     @     0x55fe8e8a2a20 method_vectorcall
[2m[36m(pid=41152)[0m     @     0x55fe8e816bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41152)[0m     @     0x55fe8e8a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41152)[0m     @     0x55fe8e8a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41152)[0m     @     0x55fe8e817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41152)[0m     @     0x55fe8e8a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41152)[0m     @     0x55fe8e8a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41152)[0m     @     0x55fe8e817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41152)[0m     @     0x55fe8e8a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41152)[0m     @     0x55fe8e8a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41152)[0m     @     0x55fe8e817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41152)[0m     @     0x55fe8e8a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41152)[0m     @     0x55fe8e8a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41152)[0m     @     0x55fe8e817689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x7f0f83db18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41153)[0m     @     0x7f0f818de4f5 at::Tensor::copy_()
[2m[36m(pid=41153)[0m     @     0x7f0f8798979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41153)[0m     @     0x55d772b2afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41153)[0m     @     0x55d772a85b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x55d772b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=41153)[0m     @     0x55d772b11a20 method_vectorcall
[2m[36m(pid=41153)[0m     @     0x55d772a85bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x7fa3e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=41222)[0m     @     0x7fa3eb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41170)[0m     @     0x7ed16feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41170)[0m     @     0x7ed16d9e54f5 at::Tensor::copy_()
[2m[36m(pid=41170)[0m     @     0x7ed173a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41170)[0m     @     0x559cee89afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41170)[0m     @     0x559cee7f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41170)[0m     @     0x559cee880baf _PyEval_EvalCodeWithName
[2m[36m(pid=41170)[0m     @     0x559cee881a20 method_vectorcall
[2m[36m(pid=41170)[0m     @     0x559cee7f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41170)[0m     @     0x559cee880baf _PyEval_EvalCodeWithName
[2m[36m(pid=41170)[0m     @     0x559cee881643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41170)[0m     @     0x559cee7f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41170)[0m     @     0x559cee880baf _PyEval_EvalCodeWithName
[2m[36m(pid=41170)[0m     @     0x559cee881643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41170)[0m     @     0x559cee7f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41170)[0m     @     0x559cee880baf _PyEval_EvalCodeWithName
[2m[36m(pid=41170)[0m     @     0x559cee881643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41170)[0m     @     0x559cee7f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41170)[0m     @     0x559cee880baf _PyEval_EvalCodeWithName
[2m[36m(pid=41170)[0m     @     0x559cee881643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41170)[0m     @     0x559cee7f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x7fb8cb7958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41155)[0m     @     0x7fb8c92c24f5 at::Tensor::copy_()
[2m[36m(pid=41155)[0m     @     0x7fb8cf36d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41155)[0m     @     0x55f6e9abdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41155)[0m     @     0x55f6e9a18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x55f6e9aa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41155)[0m     @     0x55f6e9aa4a20 method_vectorcall
[2m[36m(pid=41155)[0m     @     0x55f6e9a18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x55f6e9aa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41155)[0m     @     0x55f6e9aa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41155)[0m     @     0x55f6e9a19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x55f6e9aa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41155)[0m     @     0x55f6e9aa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41155)[0m     @     0x55f6e9a19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x55f6e9aa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41155)[0m     @     0x55f6e9aa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41155)[0m     @     0x55f6e9a19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41155)[0m     @     0x55f6e9aa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=41155)[0m     @     0x55f6e9aa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41155)[0m     @     0x55f6e9a19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x7f2b395cb4f5 at::Tensor::copy_()
[2m[36m(pid=41145)[0m     @     0x7f2b3f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41145)[0m     @     0x561adeab9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41145)[0m     @     0x561adea14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x561adea9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41145)[0m     @     0x561adeaa0a20 method_vectorcall
[2m[36m(pid=41145)[0m     @     0x561adea14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x561adea9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41145)[0m     @     0x561adeaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41145)[0m     @     0x561adea15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x561adea9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41145)[0m     @     0x561adeaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41145)[0m     @     0x561adea15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x561adea9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41145)[0m     @     0x561adeaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41145)[0m     @     0x561adea15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41145)[0m     @     0x561adea9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41145)[0m     @     0x561adeaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41145)[0m     @     0x561adea15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x7ee66d0644f5 at::Tensor::copy_()
[2m[36m(pid=41220)[0m     @     0x7ee66f5378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41220)[0m     @     0x7ee66d0644f5 at::Tensor::copy_()
[2m[36m(pid=41220)[0m     @     0x7ee67310f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41220)[0m     @     0x5637809ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41220)[0m     @     0x563780946b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x5637809d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41220)[0m     @     0x5637809d2a20 method_vectorcall
[2m[36m(pid=41220)[0m     @     0x563780946bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x5637809d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41220)[0m     @     0x5637809d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41220)[0m     @     0x563780947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x5637809d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41220)[0m     @     0x5637809d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41220)[0m     @     0x563780947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x5637809d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41220)[0m     @     0x5637809d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41220)[0m     @     0x563780947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41220)[0m     @     0x5637809d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41220)[0m     @     0x5637809d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41220)[0m     @     0x563780947689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x7ef4d51e74f5 at::Tensor::copy_()
[2m[36m(pid=41284)[0m     @     0x7ef4d76ba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41284)[0m     @     0x7ef4d51e74f5 at::Tensor::copy_()
[2m[36m(pid=41284)[0m     @     0x7ef4db29279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41284)[0m     @     0x55eb3daebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41284)[0m     @     0x55eb3da46b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x55eb3dad1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41284)[0m     @     0x55eb3dad2a20 method_vectorcall
[2m[36m(pid=41284)[0m     @     0x55eb3da46bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x55eb3dad1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41284)[0m     @     0x55eb3dad2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41284)[0m     @     0x55eb3da47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x55eb3dad1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41284)[0m     @     0x55eb3dad2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41284)[0m     @     0x55eb3da47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x55eb3dad1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41284)[0m     @     0x55eb3dad2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41284)[0m     @     0x55eb3da47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41284)[0m     @     0x55eb3dad1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41284)[0m     @     0x55eb3dad2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41284)[0m     @     0x55eb3da47689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x7f8025b498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41229)[0m     @     0x7f80236764f5 at::Tensor::copy_()
[2m[36m(pid=41229)[0m     @     0x7f802972179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41229)[0m     @     0x55e497473fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41229)[0m     @     0x55e4973ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x55e497459baf _PyEval_EvalCodeWithName
[2m[36m(pid=41229)[0m     @     0x55e49745aa20 method_vectorcall
[2m[36m(pid=41229)[0m     @     0x55e4973cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x55e497459baf _PyEval_EvalCodeWithName
[2m[36m(pid=41229)[0m     @     0x55e49745a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41229)[0m     @     0x55e4973cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x55e497459baf _PyEval_EvalCodeWithName
[2m[36m(pid=41229)[0m     @     0x55e49745a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41229)[0m     @     0x55e4973cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x55e497459baf _PyEval_EvalCodeWithName
[2m[36m(pid=41229)[0m     @     0x55e49745a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41229)[0m     @     0x55e4973cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41229)[0m     @     0x55e497459baf _PyEval_EvalCodeWithName
[2m[36m(pid=41229)[0m     @     0x55e49745a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41229)[0m     @     0x55e4973cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x7fcbf0f8d4f5 at::Tensor::copy_()
[2m[36m(pid=41235)[0m     @     0x7fcbf34608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41235)[0m     @     0x7fcbf0f8d4f5 at::Tensor::copy_()
[2m[36m(pid=41187)[0m     @     0x7f4db46958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41187)[0m     @     0x7f4db21c24f5 at::Tensor::copy_()
[2m[36m(pid=41187)[0m     @     0x7f4db826d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41187)[0m     @     0x55d8f7df2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41187)[0m     @     0x55d8f7d4db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41187)[0m     @     0x55d8f7dd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41187)[0m     @     0x55d8f7dd9a20 method_vectorcall
[2m[36m(pid=41187)[0m     @     0x55d8f7d4dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41187)[0m     @     0x55d8f7dd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41187)[0m     @     0x55d8f7dd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41187)[0m     @     0x55d8f7d4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41187)[0m     @     0x55d8f7dd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41187)[0m     @     0x55d8f7dd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41187)[0m     @     0x55d8f7d4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41187)[0m     @     0x55d8f7dd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41187)[0m     @     0x55d8f7dd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41187)[0m     @     0x55d8f7d4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41187)[0m     @     0x55d8f7dd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41187)[0m     @     0x55d8f7dd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41187)[0m     @     0x55d8f7d4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x7f2e94efb4f5 at::Tensor::copy_()
[2m[36m(pid=41228)[0m     @     0x7f2e9afa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41228)[0m     @     0x562582a8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41228)[0m     @     0x5625829e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x562582a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=41228)[0m     @     0x562582a72a20 method_vectorcall
[2m[36m(pid=41228)[0m     @     0x5625829e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x562582a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=41228)[0m     @     0x562582a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41228)[0m     @     0x5625829e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x562582a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=41228)[0m     @     0x562582a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41228)[0m     @     0x5625829e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x562582a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=41228)[0m     @     0x562582a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41228)[0m     @     0x5625829e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41228)[0m     @     0x562582a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=41228)[0m     @     0x562582a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41228)[0m     @     0x5625829e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x7f44157e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41240)[0m     @     0x7f44133124f5 at::Tensor::copy_()
[2m[36m(pid=41240)[0m     @     0x7f44193bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41240)[0m     @     0x562fbd121fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41240)[0m     @     0x562fbd07cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x562fbd107baf _PyEval_EvalCodeWithName
[2m[36m(pid=41240)[0m     @     0x562fbd108a20 method_vectorcall
[2m[36m(pid=41240)[0m     @     0x562fbd07cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x562fbd107baf _PyEval_EvalCodeWithName
[2m[36m(pid=41240)[0m     @     0x562fbd108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41240)[0m     @     0x562fbd07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x562fbd107baf _PyEval_EvalCodeWithName
[2m[36m(pid=41240)[0m     @     0x562fbd108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41240)[0m     @     0x562fbd07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x562fbd107baf _PyEval_EvalCodeWithName
[2m[36m(pid=41240)[0m     @     0x562fbd108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41240)[0m     @     0x562fbd07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41240)[0m     @     0x562fbd107baf _PyEval_EvalCodeWithName
[2m[36m(pid=41240)[0m     @     0x562fbd108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41240)[0m     @     0x562fbd07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x7f81d69b14f5 at::Tensor::copy_()
[2m[36m(pid=41224)[0m     @     0x7f81d8e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41224)[0m     @     0x7f81d69b14f5 at::Tensor::copy_()
[2m[36m(pid=41177)[0m     @     0x7f5340c764f5 at::Tensor::copy_()
[2m[36m(pid=41177)[0m     @     0x7f53431498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41177)[0m     @     0x7f5340c764f5 at::Tensor::copy_()
[2m[36m(pid=41177)[0m     @     0x7f5346d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41177)[0m     @     0x55eeb973cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41177)[0m     @     0x55eeb9697b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41177)[0m     @     0x55eeb9722baf _PyEval_EvalCodeWithName
[2m[36m(pid=41177)[0m     @     0x55eeb9723a20 method_vectorcall
[2m[36m(pid=41177)[0m     @     0x55eeb9697bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41177)[0m     @     0x55eeb9722baf _PyEval_EvalCodeWithName
[2m[36m(pid=41177)[0m     @     0x55eeb9723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41177)[0m     @     0x55eeb9698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41177)[0m     @     0x55eeb9722baf _PyEval_EvalCodeWithName
[2m[36m(pid=41177)[0m     @     0x55eeb9723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41177)[0m     @     0x55eeb9698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41177)[0m     @     0x55eeb9722baf _PyEval_EvalCodeWithName
[2m[36m(pid=41177)[0m     @     0x55eeb9723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41177)[0m     @     0x55eeb9698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41177)[0m     @     0x55eeb9722baf _PyEval_EvalCodeWithName
[2m[36m(pid=41177)[0m     @     0x55eeb9723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41177)[0m     @     0x55eeb9698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x7f7f976b64f5 at::Tensor::copy_()
[2m[36m(pid=41249)[0m     @     0x7f7f9d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41249)[0m     @     0x55ba22540fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41249)[0m     @     0x55ba2249bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x55ba22526baf _PyEval_EvalCodeWithName
[2m[36m(pid=41249)[0m     @     0x55ba22527a20 method_vectorcall
[2m[36m(pid=41249)[0m     @     0x55ba2249bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x55ba22526baf _PyEval_EvalCodeWithName
[2m[36m(pid=41249)[0m     @     0x55ba22527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41249)[0m     @     0x55ba2249c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x55ba22526baf _PyEval_EvalCodeWithName
[2m[36m(pid=41249)[0m     @     0x55ba22527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41249)[0m     @     0x55ba2249c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x55ba22526baf _PyEval_EvalCodeWithName
[2m[36m(pid=41249)[0m     @     0x55ba22527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41249)[0m     @     0x55ba2249c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41249)[0m     @     0x55ba22526baf _PyEval_EvalCodeWithName
[2m[36m(pid=41249)[0m     @     0x55ba22527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41249)[0m     @     0x55ba2249c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x7f2026ad44f5 at::Tensor::copy_()
[2m[36m(pid=41161)[0m     @     0x7f202cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41161)[0m     @     0x562ed0bcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41161)[0m     @     0x562ed0b26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x562ed0bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41161)[0m     @     0x562ed0bb2a20 method_vectorcall
[2m[36m(pid=41161)[0m     @     0x562ed0b26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x562ed0bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41161)[0m     @     0x562ed0bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41161)[0m     @     0x562ed0b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x562ed0bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41161)[0m     @     0x562ed0bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41161)[0m     @     0x562ed0b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x562ed0bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41161)[0m     @     0x562ed0bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41161)[0m     @     0x562ed0b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41161)[0m     @     0x562ed0bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41161)[0m     @     0x562ed0bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41161)[0m     @     0x562ed0b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x7f43026fd388 at::native::copy_impl()
[2m[36m(pid=41163)[0m     @     0x7f43026ff5a4 at::native::copy_()
[2m[36m(pid=41163)[0m     @     0x7f4302dea4f5 at::Tensor::copy_()
[2m[36m(pid=41241)[0m     @     0x7fc897223d91 at::TensorIterator::for_each()
[2m[36m(pid=41241)[0m     @     0x7fc897b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41241)[0m     @     0x7fc897b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41241)[0m     @     0x7fc896fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41241)[0m     @     0x7fc896fc9388 at::native::copy_impl()
[2m[36m(pid=41213)[0m     @     0x7f5eb57ce4f5 at::Tensor::copy_()
[2m[36m(pid=41213)[0m     @     0x7f5eb7ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41213)[0m     @     0x7f5eb57ce4f5 at::Tensor::copy_()
[2m[36m(pid=41213)[0m     @     0x7f5ebb87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41213)[0m     @     0x558f5544afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41213)[0m     @     0x558f553a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41213)[0m     @     0x558f55430baf _PyEval_EvalCodeWithName
[2m[36m(pid=41213)[0m     @     0x558f55431a20 method_vectorcall
[2m[36m(pid=41213)[0m     @     0x558f553a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41213)[0m     @     0x558f55430baf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x7ee73ee9b5a4 at::native::copy_()
[2m[36m(pid=41246)[0m     @     0x7ee73f5864f5 at::Tensor::copy_()
[2m[36m(pid=41246)[0m     @     0x7ee741a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41246)[0m     @     0x7ee73f5864f5 at::Tensor::copy_()
[2m[36m(pid=41279)[0m     @     0x7f4345cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41279)[0m     @     0x7f434bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41279)[0m     @     0x560dab015fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41279)[0m     @     0x560daaf70b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41279)[0m     @     0x560daaffbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41279)[0m     @     0x560daaffca20 method_vectorcall
[2m[36m(pid=41279)[0m     @     0x560daaf70bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41279)[0m     @     0x560daaffbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41279)[0m     @     0x560daaffc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41279)[0m     @     0x560daaf71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41279)[0m     @     0x560daaffbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41279)[0m     @     0x560daaffc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41279)[0m     @     0x560daaf71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41279)[0m     @     0x560daaffbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41279)[0m     @     0x560daaffc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41279)[0m     @     0x560daaf71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41279)[0m     @     0x560daaffbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41279)[0m     @     0x560daaffc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41279)[0m     @     0x560daaf71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x7fb9d4cadad3 at::TensorIterator::for_each()
[2m[36m(pid=41209)[0m     @     0x7fb9d4cadd91 at::TensorIterator::for_each()
[2m[36m(pid=41209)[0m     @     0x7fb9d5590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41209)[0m     @     0x7fb9d55b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41178)[0m     @     0x7ef872ad44f5 at::Tensor::copy_()
[2m[36m(pid=41178)[0m     @     0x7ef874fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41178)[0m     @     0x7ef872ad44f5 at::Tensor::copy_()
[2m[36m(pid=41218)[0m     @     0x7f28c25604f5 at::Tensor::copy_()
[2m[36m(pid=41218)[0m     @     0x7f28c860b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41218)[0m     @     0x555f67092fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41218)[0m     @     0x555f66fedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41218)[0m     @     0x555f67078baf _PyEval_EvalCodeWithName
[2m[36m(pid=41218)[0m     @     0x555f67079a20 method_vectorcall
[2m[36m(pid=41218)[0m     @     0x555f66fedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41218)[0m     @     0x555f67078baf _PyEval_EvalCodeWithName
[2m[36m(pid=41218)[0m     @     0x555f67079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41218)[0m     @     0x555f66fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41218)[0m     @     0x555f67078baf _PyEval_EvalCodeWithName
[2m[36m(pid=41218)[0m     @     0x555f67079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41218)[0m     @     0x555f66fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41218)[0m     @     0x555f67078baf _PyEval_EvalCodeWithName
[2m[36m(pid=41218)[0m     @     0x555f67079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41218)[0m     @     0x555f66fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41218)[0m     @     0x555f67078baf _PyEval_EvalCodeWithName
[2m[36m(pid=41218)[0m     @     0x555f67079643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41218)[0m     @     0x555f66fee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x7f99f2dea4f5 at::Tensor::copy_()
[2m[36m(pid=41262)[0m     @     0x7f99f8e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41262)[0m     @     0x55ef48766fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41262)[0m     @     0x55ef486c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x55ef4874cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41262)[0m     @     0x55ef4874da20 method_vectorcall
[2m[36m(pid=41262)[0m     @     0x55ef486c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x55ef4874cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41262)[0m     @     0x55ef4874d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41262)[0m     @     0x55ef486c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x55ef4874cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41262)[0m     @     0x55ef4874d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41262)[0m     @     0x55ef486c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x55ef4874cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41262)[0m     @     0x55ef4874d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41262)[0m     @     0x55ef486c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41262)[0m     @     0x55ef4874cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41262)[0m     @     0x55ef4874d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41262)[0m     @     0x55ef486c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x7f3474e165a4 at::native::copy_()
[2m[36m(pid=41148)[0m     @     0x7f34755014f5 at::Tensor::copy_()
[2m[36m(pid=41183)[0m     @     0x7fa84affb4f5 at::Tensor::copy_()
[2m[36m(pid=41183)[0m     @     0x7fa8510a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41183)[0m     @     0x55b377b5cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41183)[0m     @     0x55b377ab7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41183)[0m     @     0x55b377b42baf _PyEval_EvalCodeWithName
[2m[36m(pid=41183)[0m     @     0x55b377b43a20 method_vectorcall
[2m[36m(pid=41183)[0m     @     0x55b377ab7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41183)[0m     @     0x55b377b42baf _PyEval_EvalCodeWithName
[2m[36m(pid=41183)[0m     @     0x55b377b43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41183)[0m     @     0x55b377ab8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41183)[0m     @     0x55b377b42baf _PyEval_EvalCodeWithName
[2m[36m(pid=41183)[0m     @     0x55b377b43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41183)[0m     @     0x55b377ab8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41183)[0m     @     0x55b377b42baf _PyEval_EvalCodeWithName
[2m[36m(pid=41183)[0m     @     0x55b377b43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41183)[0m     @     0x55b377ab8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41183)[0m     @     0x55b377b42baf _PyEval_EvalCodeWithName
[2m[36m(pid=41183)[0m     @     0x55b377b43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41183)[0m     @     0x55b377ab8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dc97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41207)[0m     @     0x5619dca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=41207)[0m     @     0x5619dca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41207)[0m     @     0x5619dc97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41214)[0m     @     0x557b95222643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41214)[0m     @     0x557b95197689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41149)[0m     @     0x55ab0b641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x56369b200baf _PyEval_EvalCodeWithName
[2m[36m(pid=41184)[0m     @     0x56369b201643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41184)[0m     @     0x56369b176689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x56369b200baf _PyEval_EvalCodeWithName
[2m[36m(pid=41184)[0m     @     0x56369b201643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41184)[0m     @     0x56369b176689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41184)[0m     @     0x56369b200baf _PyEval_EvalCodeWithName
[2m[36m(pid=41184)[0m     @     0x56369b201643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41184)[0m     @     0x56369b176689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x7fa62896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41150)[0m     @     0x55a384d0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41150)[0m     @     0x55a384c67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x55a384cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41150)[0m     @     0x55a384cf3a20 method_vectorcall
[2m[36m(pid=41150)[0m     @     0x55a384c67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x55a384cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41150)[0m     @     0x55a384cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41150)[0m     @     0x55a384c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x55a384cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41150)[0m     @     0x55a384cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41150)[0m     @     0x55a384c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x55a384cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41150)[0m     @     0x55a384cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41150)[0m     @     0x55a384c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41150)[0m     @     0x55a384cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41150)[0m     @     0x55a384cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41150)[0m     @     0x55a384c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x7fcbdad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41227)[0m     @     0x55a5f52bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41227)[0m     @     0x55a5f5217b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x55a5f52a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41227)[0m     @     0x55a5f52a3a20 method_vectorcall
[2m[36m(pid=41227)[0m     @     0x55a5f5217bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x55a5f52a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41227)[0m     @     0x55a5f52a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41227)[0m     @     0x55a5f5218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x55a5f52a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41227)[0m     @     0x55a5f52a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41227)[0m     @     0x55a5f5218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x55a5f52a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41227)[0m     @     0x55a5f52a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41227)[0m     @     0x55a5f5218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41227)[0m     @     0x55a5f52a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=41227)[0m     @     0x55a5f52a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41227)[0m     @     0x55a5f5218689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x7f3643fa44f5 at::Tensor::copy_()
[2m[36m(pid=41174)[0m     @     0x7f364a04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41174)[0m     @     0x556d5e618fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41174)[0m     @     0x556d5e573b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x556d5e5febaf _PyEval_EvalCodeWithName
[2m[36m(pid=41174)[0m     @     0x556d5e5ffa20 method_vectorcall
[2m[36m(pid=41174)[0m     @     0x556d5e573bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x556d5e5febaf _PyEval_EvalCodeWithName
[2m[36m(pid=41174)[0m     @     0x556d5e5ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41174)[0m     @     0x556d5e574689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x556d5e5febaf _PyEval_EvalCodeWithName
[2m[36m(pid=41174)[0m     @     0x556d5e5ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41174)[0m     @     0x556d5e574689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x556d5e5febaf _PyEval_EvalCodeWithName
[2m[36m(pid=41174)[0m     @     0x556d5e5ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41174)[0m     @     0x556d5e574689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41174)[0m     @     0x556d5e5febaf _PyEval_EvalCodeWithName
[2m[36m(pid=41174)[0m     @     0x556d5e5ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41174)[0m     @     0x556d5e574689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d92ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d9335baf _PyEval_EvalCodeWithName
[2m[36m(pid=41166)[0m     @     0x5560d9336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41166)[0m     @     0x5560d92ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41166)[0m     @     0x5560d9335baf _PyEval_EvalCodeWithName
[2m[36m(pid=41166)[0m     @     0x5560d9336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41166)[0m     @     0x5560d92ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x7fc96714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41144)[0m     @     0x55d9a5822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41144)[0m     @     0x55d9a577db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x55d9a5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=41144)[0m     @     0x55d9a5809a20 method_vectorcall
[2m[36m(pid=41144)[0m     @     0x55d9a577dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x55d9a5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=41144)[0m     @     0x55d9a5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41144)[0m     @     0x55d9a577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x55d9a5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=41144)[0m     @     0x55d9a5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41144)[0m     @     0x55d9a577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x55d9a5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=41144)[0m     @     0x55d9a5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41144)[0m     @     0x55d9a577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41144)[0m     @     0x55d9a5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=41144)[0m     @     0x55d9a5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41144)[0m     @     0x55d9a577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x7fa68c3e64f5 at::Tensor::copy_()
[2m[36m(pid=41230)[0m     @     0x7fa69249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41230)[0m     @     0x55780a0a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41230)[0m     @     0x55780a000b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x55780a08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41230)[0m     @     0x55780a08ca20 method_vectorcall
[2m[36m(pid=41230)[0m     @     0x55780a000bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x55780a08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41230)[0m     @     0x55780a08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41230)[0m     @     0x55780a001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x55780a08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41230)[0m     @     0x55780a08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41230)[0m     @     0x55780a001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x55780a08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41230)[0m     @     0x55780a08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41230)[0m     @     0x55780a001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41230)[0m     @     0x55780a08bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41230)[0m     @     0x55780a08c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41230)[0m     @     0x55780a001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x7f60105975a4 at::native::copy_()
[2m[36m(pid=41146)[0m     @     0x7f6010c824f5 at::Tensor::copy_()
[2m[36m(pid=41146)[0m     @     0x7f60131558de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41219)[0m     @     0x7f699fc6d4f5 at::Tensor::copy_()
[2m[36m(pid=41219)[0m     @     0x7f69a21408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41219)[0m     @     0x7f699fc6d4f5 at::Tensor::copy_()
[2m[36m(pid=41219)[0m     @     0x7f69d462879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41219)[0m     @     0x562adf5f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41219)[0m     @     0x562adf54bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41219)[0m     @     0x562adf5d7a20 method_vectorcall
[2m[36m(pid=41236)[0m     @     0x7ef26576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41236)[0m     @     0x5555bdac6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41236)[0m     @     0x5555bda21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41236)[0m     @     0x5555bdaacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41236)[0m     @     0x5555bdaada20 method_vectorcall
[2m[36m(pid=41236)[0m     @     0x5555bda21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41236)[0m     @     0x5555bdaacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41236)[0m     @     0x5555bdaad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41236)[0m     @     0x5555bda22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41236)[0m     @     0x5555bdaacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41236)[0m     @     0x5555bdaad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41236)[0m     @     0x5555bda22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41236)[0m     @     0x5555bdaacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41236)[0m     @     0x5555bdaad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41236)[0m     @     0x5555bda22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41236)[0m     @     0x5555bdaacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41236)[0m     @     0x5555bdaad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41236)[0m     @     0x5555bda22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x7f1995cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41210)[0m     @     0x7f19981ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41164)[0m     @     0x7fabb32424f5 at::Tensor::copy_()
[2m[36m(pid=41164)[0m     @     0x7fabb92ed79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41164)[0m     @     0x564d4cfa4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41164)[0m     @     0x564d4ceffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41164)[0m     @     0x564d4cf8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=41164)[0m     @     0x564d4cf8ba20 method_vectorcall
[2m[36m(pid=41164)[0m     @     0x564d4ceffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41164)[0m     @     0x564d4cf8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=41164)[0m     @     0x564d4cf8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41164)[0m     @     0x564d4cf00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41164)[0m     @     0x564d4cf8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=41164)[0m     @     0x564d4cf8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41164)[0m     @     0x564d4cf00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41164)[0m     @     0x564d4cf8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=41164)[0m     @     0x564d4cf8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41164)[0m     @     0x564d4cf00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41164)[0m     @     0x564d4cf8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=41164)[0m     @     0x564d4cf8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41164)[0m     @     0x564d4cf00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x7ef00f1b04f5 at::Tensor::copy_()
[2m[36m(pid=41176)[0m     @     0x7ef01525b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41176)[0m     @     0x5637d741cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41176)[0m     @     0x5637d7377b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x5637d7402baf _PyEval_EvalCodeWithName
[2m[36m(pid=41176)[0m     @     0x5637d7403a20 method_vectorcall
[2m[36m(pid=41176)[0m     @     0x5637d7377bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x5637d7402baf _PyEval_EvalCodeWithName
[2m[36m(pid=41176)[0m     @     0x5637d7403643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41176)[0m     @     0x5637d7378689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x5637d7402baf _PyEval_EvalCodeWithName
[2m[36m(pid=41176)[0m     @     0x5637d7403643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41176)[0m     @     0x5637d7378689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x5637d7402baf _PyEval_EvalCodeWithName
[2m[36m(pid=41176)[0m     @     0x5637d7403643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41176)[0m     @     0x5637d7378689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41176)[0m     @     0x5637d7402baf _PyEval_EvalCodeWithName
[2m[36m(pid=41176)[0m     @     0x5637d7403643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41176)[0m     @     0x5637d7378689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x7f07d98b04f5 at::Tensor::copy_()
[2m[36m(pid=41180)[0m     @     0x7f07dbd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41180)[0m     @     0x7f07d98b04f5 at::Tensor::copy_()
[2m[36m(pid=41180)[0m     @     0x7f07df95b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41180)[0m     @     0x55e3ed451fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41180)[0m     @     0x55e3ed3acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x55e3ed437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41180)[0m     @     0x55e3ed438a20 method_vectorcall
[2m[36m(pid=41180)[0m     @     0x55e3ed3acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x55e3ed437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41180)[0m     @     0x55e3ed438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41180)[0m     @     0x55e3ed3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x55e3ed437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41180)[0m     @     0x55e3ed438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41180)[0m     @     0x55e3ed3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x7f1f7cce48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41221)[0m     @     0x7f1f7a8114f5 at::Tensor::copy_()
[2m[36m(pid=41221)[0m     @     0x7f1f808bc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41221)[0m     @     0x56007274afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41221)[0m     @     0x5600726a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x560072730baf _PyEval_EvalCodeWithName
[2m[36m(pid=41221)[0m     @     0x560072731a20 method_vectorcall
[2m[36m(pid=41221)[0m     @     0x5600726a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x560072730baf _PyEval_EvalCodeWithName
[2m[36m(pid=41221)[0m     @     0x560072731643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41221)[0m     @     0x5600726a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x560072730baf _PyEval_EvalCodeWithName
[2m[36m(pid=41221)[0m     @     0x560072731643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41221)[0m     @     0x5600726a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x560072730baf _PyEval_EvalCodeWithName
[2m[36m(pid=41221)[0m     @     0x560072731643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41221)[0m     @     0x5600726a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x560072730baf _PyEval_EvalCodeWithName
[2m[36m(pid=41221)[0m     @     0x560072731643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41217)[0m     @     0x5627aae0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41217)[0m     @     0x5627aae10a20 method_vectorcall
[2m[36m(pid=41217)[0m     @     0x5627aad84bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41217)[0m     @     0x5627aae0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41217)[0m     @     0x5627aae10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41217)[0m     @     0x5627aad85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41217)[0m     @     0x5627aae0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41217)[0m     @     0x5627aae10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41217)[0m     @     0x5627aad85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41217)[0m     @     0x5627aae0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41217)[0m     @     0x5627aae10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41217)[0m     @     0x5627aad85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41217)[0m     @     0x5627aae0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41217)[0m     @     0x5627aae10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41217)[0m     @     0x5627aad85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x7fbd9f2024f5 at::Tensor::copy_()
[2m[36m(pid=41216)[0m     @     0x7fbda52ad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41216)[0m     @     0x557837b6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41216)[0m     @     0x557837ac6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x557837b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=41216)[0m     @     0x557837b52a20 method_vectorcall
[2m[36m(pid=41216)[0m     @     0x557837ac6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x557837b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=41216)[0m     @     0x557837b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41216)[0m     @     0x557837ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x557837b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=41216)[0m     @     0x557837b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41216)[0m     @     0x557837ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x557837b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=41216)[0m     @     0x557837b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41216)[0m     @     0x557837ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41216)[0m     @     0x557837b51baf _PyEval_EvalCodeWithName
[2m[36m(pid=41216)[0m     @     0x557837b52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41216)[0m     @     0x557837ac7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x7ee49767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41256)[0m     @     0x561187f3bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41256)[0m     @     0x561187e96b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x561187f21baf _PyEval_EvalCodeWithName
[2m[36m(pid=41256)[0m     @     0x561187f22a20 method_vectorcall
[2m[36m(pid=41256)[0m     @     0x561187e96bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x561187f21baf _PyEval_EvalCodeWithName
[2m[36m(pid=41256)[0m     @     0x561187f22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41256)[0m     @     0x561187e97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x561187f21baf _PyEval_EvalCodeWithName
[2m[36m(pid=41256)[0m     @     0x561187f22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41256)[0m     @     0x561187e97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x561187f21baf _PyEval_EvalCodeWithName
[2m[36m(pid=41256)[0m     @     0x561187f22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41256)[0m     @     0x561187e97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41256)[0m     @     0x561187f21baf _PyEval_EvalCodeWithName
[2m[36m(pid=41256)[0m     @     0x561187f22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41256)[0m     @     0x561187e97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x7ee7db8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41232)[0m     @     0x7ee7db912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41232)[0m     @     0x7ee7dadb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41232)[0m     @     0x7ee7dadb2388 at::native::copy_impl()
[2m[36m(pid=41206)[0m     @     0x7f75719a54f5 at::Tensor::copy_()
[2m[36m(pid=41206)[0m     @     0x7f7577a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41206)[0m     @     0x5563d58a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41206)[0m     @     0x5563d57feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41206)[0m     @     0x5563d5889baf _PyEval_EvalCodeWithName
[2m[36m(pid=41206)[0m     @     0x5563d588aa20 method_vectorcall
[2m[36m(pid=41206)[0m     @     0x5563d57febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41206)[0m     @     0x5563d5889baf _PyEval_EvalCodeWithName
[2m[36m(pid=41206)[0m     @     0x5563d588a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41206)[0m     @     0x5563d57ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41206)[0m     @     0x5563d5889baf _PyEval_EvalCodeWithName
[2m[36m(pid=41206)[0m     @     0x5563d588a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41206)[0m     @     0x5563d57ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41206)[0m     @     0x5563d5889baf _PyEval_EvalCodeWithName
[2m[36m(pid=41206)[0m     @     0x5563d588a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41206)[0m     @     0x5563d57ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41171)[0m     @     0x564ea45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41171)[0m     @     0x564ea45e2a20 method_vectorcall
[2m[36m(pid=41171)[0m     @     0x564ea4556bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41171)[0m     @     0x564ea45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41171)[0m     @     0x564ea45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41171)[0m     @     0x564ea4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41171)[0m     @     0x564ea45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41171)[0m     @     0x564ea45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41171)[0m     @     0x564ea4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41171)[0m     @     0x564ea45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41171)[0m     @     0x564ea45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41171)[0m     @     0x564ea4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41171)[0m     @     0x564ea45e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=41171)[0m     @     0x564ea45e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41171)[0m     @     0x564ea4557689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x7f5a8a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=41223)[0m     @     0x7f5a8a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=41223)[0m     @     0x7f5a89c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41158)[0m     @     0x7f2805f7079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41158)[0m     @     0x55c9798e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41158)[0m     @     0x55c979841b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41158)[0m     @     0x55c9798ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41158)[0m     @     0x55c9798cda20 method_vectorcall
[2m[36m(pid=41158)[0m     @     0x55c979841bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41158)[0m     @     0x55c9798ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41158)[0m     @     0x55c9798cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41158)[0m     @     0x55c979842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41158)[0m     @     0x55c9798ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41158)[0m     @     0x55c9798cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41158)[0m     @     0x55c979842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41158)[0m     @     0x55c9798ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41158)[0m     @     0x55c9798cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41158)[0m     @     0x55c979842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41158)[0m     @     0x55c9798ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41158)[0m     @     0x55c9798cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41158)[0m     @     0x55c979842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x55d772b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=41153)[0m     @     0x55d772b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41153)[0m     @     0x55d772a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x55d772b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=41153)[0m     @     0x55d772b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41153)[0m     @     0x55d772a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x55d772b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=41153)[0m     @     0x55d772b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41153)[0m     @     0x55d772a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41153)[0m     @     0x55d772b10baf _PyEval_EvalCodeWithName
[2m[36m(pid=41153)[0m     @     0x55d772b11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41153)[0m     @     0x55d772a86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x7fa3e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=41222)[0m     @     0x7fa3ef46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41222)[0m     @     0x55b40e083fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41222)[0m     @     0x55b40dfdeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x55b40e069baf _PyEval_EvalCodeWithName
[2m[36m(pid=41222)[0m     @     0x55b40e06aa20 method_vectorcall
[2m[36m(pid=41222)[0m     @     0x55b40dfdebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x55b40e069baf _PyEval_EvalCodeWithName
[2m[36m(pid=41222)[0m     @     0x55b40e06a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41222)[0m     @     0x55b40dfdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x55b40e069baf _PyEval_EvalCodeWithName
[2m[36m(pid=41222)[0m     @     0x55b40e06a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41222)[0m     @     0x55b40dfdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x55b40e069baf _PyEval_EvalCodeWithName
[2m[36m(pid=41222)[0m     @     0x55b40e06a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41222)[0m     @     0x55b40dfdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41222)[0m     @     0x55b40e069baf _PyEval_EvalCodeWithName
[2m[36m(pid=41222)[0m     @     0x55b40e06a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41222)[0m     @     0x55b40dfdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x7fcbf703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41235)[0m     @     0x56535bb2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41235)[0m     @     0x56535ba86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x56535bb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=41235)[0m     @     0x56535bb12a20 method_vectorcall
[2m[36m(pid=41235)[0m     @     0x56535ba86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x56535bb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=41235)[0m     @     0x56535bb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41235)[0m     @     0x56535ba87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x56535bb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=41235)[0m     @     0x56535bb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41235)[0m     @     0x56535ba87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x56535bb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=41235)[0m     @     0x56535bb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41235)[0m     @     0x56535ba87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41235)[0m     @     0x56535bb11baf _PyEval_EvalCodeWithName
[2m[36m(pid=41235)[0m     @     0x56535bb12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41235)[0m     @     0x56535ba87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x7f81dca5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41224)[0m     @     0x557887cf2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41224)[0m     @     0x557887c4db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x557887cd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41224)[0m     @     0x557887cd9a20 method_vectorcall
[2m[36m(pid=41224)[0m     @     0x557887c4dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x557887cd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41224)[0m     @     0x557887cd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41224)[0m     @     0x557887c4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x557887cd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41224)[0m     @     0x557887cd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41224)[0m     @     0x557887c4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x557887cd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41224)[0m     @     0x557887cd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41224)[0m     @     0x557887c4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41224)[0m     @     0x557887cd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41224)[0m     @     0x557887cd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41224)[0m     @     0x557887c4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x7f43052bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41163)[0m     @     0x7f4302dea4f5 at::Tensor::copy_()
[2m[36m(pid=41163)[0m     @     0x7f4308e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41163)[0m     @     0x56074cf16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41163)[0m     @     0x56074ce71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x56074cefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41163)[0m     @     0x56074cefda20 method_vectorcall
[2m[36m(pid=41163)[0m     @     0x56074ce71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x56074cefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41163)[0m     @     0x56074cefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41163)[0m     @     0x56074ce72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x56074cefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41163)[0m     @     0x56074cefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41163)[0m     @     0x56074ce72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x56074cefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41163)[0m     @     0x56074cefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41163)[0m     @     0x56074ce72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41163)[0m     @     0x56074cefcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41163)[0m     @     0x56074cefd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41163)[0m     @     0x56074ce72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x7fc896fcb5a4 at::native::copy_()
[2m[36m(pid=41241)[0m     @     0x7fc8976b64f5 at::Tensor::copy_()
[2m[36m(pid=41241)[0m     @     0x7fc899b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41213)[0m     @     0x558f55431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41213)[0m     @     0x558f553a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41213)[0m     @     0x558f55430baf _PyEval_EvalCodeWithName
[2m[36m(pid=41213)[0m     @     0x558f55431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41213)[0m     @     0x558f553a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41213)[0m     @     0x558f55430baf _PyEval_EvalCodeWithName
[2m[36m(pid=41213)[0m     @     0x558f55431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41213)[0m     @     0x558f553a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41213)[0m     @     0x558f55430baf _PyEval_EvalCodeWithName
[2m[36m(pid=41213)[0m     @     0x558f55431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41213)[0m     @     0x558f553a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x7ee74563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41246)[0m     @     0x562922bd4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41246)[0m     @     0x562922b2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x562922bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x562922bbba20 method_vectorcall
[2m[36m(pid=41246)[0m     @     0x562922b2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x562922bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x562922bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41246)[0m     @     0x562922b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x562922bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x562922bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41246)[0m     @     0x562922b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x562922bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x562922bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41246)[0m     @     0x562922b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41246)[0m     @     0x562922bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=41246)[0m     @     0x562922bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41246)[0m     @     0x562922b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x7fb9d4a55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=41209)[0m     @     0x7fb9d4a53388 at::native::copy_impl()
[2m[36m(pid=41209)[0m     @     0x7fb9d4a555a4 at::native::copy_()
[2m[36m(pid=41178)[0m     @     0x7ef878b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41178)[0m     @     0x559f7cb02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41178)[0m     @     0x559f7ca5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41178)[0m     @     0x559f7cae8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41178)[0m     @     0x559f7cae9a20 method_vectorcall
[2m[36m(pid=41178)[0m     @     0x559f7ca5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41178)[0m     @     0x559f7cae8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41178)[0m     @     0x559f7cae9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41178)[0m     @     0x559f7ca5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41178)[0m     @     0x559f7cae8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41178)[0m     @     0x559f7cae9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41178)[0m     @     0x559f7ca5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41178)[0m     @     0x559f7cae8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41178)[0m     @     0x559f7cae9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41178)[0m     @     0x559f7ca5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41178)[0m     @     0x559f7cae8baf _PyEval_EvalCodeWithName
[2m[36m(pid=41178)[0m     @     0x559f7cae9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41178)[0m     @     0x559f7ca5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x7f34779d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41148)[0m     @     0x7f34755014f5 at::Tensor::copy_()
[2m[36m(pid=41148)[0m     @     0x7f634035979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41148)[0m     @     0x560972a9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41148)[0m     @     0x5609729f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x560972a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=41148)[0m     @     0x560972a83a20 method_vectorcall
[2m[36m(pid=41148)[0m     @     0x5609729f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x560972a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=41148)[0m     @     0x560972a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41148)[0m     @     0x5609729f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x560972a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=41148)[0m     @     0x560972a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41148)[0m     @     0x5609729f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x560972a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=41148)[0m     @     0x560972a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41148)[0m     @     0x5609729f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41148)[0m     @     0x560972a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=41148)[0m     @     0x560972a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41148)[0m     @     0x5609729f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x7f6010c824f5 at::Tensor::copy_()
[2m[36m(pid=41146)[0m     @     0x7f6016d2d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41146)[0m     @     0x5592a1f20fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41146)[0m     @     0x5592a1e7bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x5592a1f06baf _PyEval_EvalCodeWithName
[2m[36m(pid=41146)[0m     @     0x5592a1f07a20 method_vectorcall
[2m[36m(pid=41146)[0m     @     0x5592a1e7bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x5592a1f06baf _PyEval_EvalCodeWithName
[2m[36m(pid=41146)[0m     @     0x5592a1f07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41146)[0m     @     0x5592a1e7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x5592a1f06baf _PyEval_EvalCodeWithName
[2m[36m(pid=41146)[0m     @     0x5592a1f07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41146)[0m     @     0x5592a1e7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x5592a1f06baf _PyEval_EvalCodeWithName
[2m[36m(pid=41146)[0m     @     0x5592a1f07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41146)[0m     @     0x5592a1e7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41146)[0m     @     0x5592a1f06baf _PyEval_EvalCodeWithName
[2m[36m(pid=41146)[0m     @     0x5592a1f07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41146)[0m     @     0x5592a1e7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf54bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41219)[0m     @     0x562adf5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41219)[0m     @     0x562adf54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41219)[0m     @     0x562adf5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41219)[0m     @     0x562adf54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41219)[0m     @     0x562adf5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41219)[0m     @     0x562adf54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41219)[0m     @     0x562adf5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41219)[0m     @     0x562adf5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41219)[0m     @     0x562adf54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x7f1995cfb4f5 at::Tensor::copy_()
[2m[36m(pid=41210)[0m     @     0x7f199bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41210)[0m     @     0x5608cc0bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41210)[0m     @     0x5608cc015b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x5608cc0a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=41210)[0m     @     0x5608cc0a1a20 method_vectorcall
[2m[36m(pid=41210)[0m     @     0x5608cc015bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x5608cc0a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=41210)[0m     @     0x5608cc0a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41210)[0m     @     0x5608cc016689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x5608cc0a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=41210)[0m     @     0x5608cc0a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41210)[0m     @     0x5608cc016689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x5608cc0a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=41210)[0m     @     0x5608cc0a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41210)[0m     @     0x5608cc016689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41210)[0m     @     0x5608cc0a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=41210)[0m     @     0x5608cc0a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41210)[0m     @     0x5608cc016689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x55e3ed437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41180)[0m     @     0x55e3ed438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41180)[0m     @     0x55e3ed3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41180)[0m     @     0x55e3ed437baf _PyEval_EvalCodeWithName
[2m[36m(pid=41180)[0m     @     0x55e3ed438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41180)[0m     @     0x55e3ed3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41221)[0m     @     0x5600726a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x7ee7dadb45a4 at::native::copy_()
[2m[36m(pid=41206)[0m     @     0x5563d5889baf _PyEval_EvalCodeWithName
[2m[36m(pid=41206)[0m     @     0x5563d588a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41206)[0m     @     0x5563d57ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x7f5a89c8f388 at::native::copy_impl()
[2m[36m(pid=41223)[0m     @     0x7f5a89c915a4 at::native::copy_()
[2m[36m(pid=41241)[0m     @     0x7fc8976b64f5 at::Tensor::copy_()
[2m[36m(pid=41241)[0m     @     0x7fc89d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41241)[0m     @     0x555f6d7d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41241)[0m     @     0x555f6d72bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x555f6d7b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41241)[0m     @     0x555f6d7b7a20 method_vectorcall
[2m[36m(pid=41241)[0m     @     0x555f6d72bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x555f6d7b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41241)[0m     @     0x555f6d7b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41241)[0m     @     0x555f6d72c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x555f6d7b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41241)[0m     @     0x555f6d7b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41241)[0m     @     0x555f6d72c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x555f6d7b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41241)[0m     @     0x555f6d7b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41241)[0m     @     0x555f6d72c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41241)[0m     @     0x555f6d7b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=41241)[0m     @     0x555f6d7b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41241)[0m     @     0x555f6d72c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x7fb9d51404f5 at::Tensor::copy_()
[2m[36m(pid=41209)[0m     @     0x7fb9d76138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41209)[0m     @     0x7fb9d51404f5 at::Tensor::copy_()
[2m[36m(pid=41209)[0m     @     0x7fb9db1eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41209)[0m     @     0x55bca636cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41209)[0m     @     0x55bca62c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x55bca6352baf _PyEval_EvalCodeWithName
[2m[36m(pid=41209)[0m     @     0x55bca6353a20 method_vectorcall
[2m[36m(pid=41232)[0m     @     0x7ee7db49f4f5 at::Tensor::copy_()
[2m[36m(pid=41232)[0m     @     0x7ee7dd9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41223)[0m     @     0x7f5a8a37c4f5 at::Tensor::copy_()
[2m[36m(pid=41223)[0m     @     0x7f5a8c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=41223)[0m     @     0x7f5a8a37c4f5 at::Tensor::copy_()
[2m[36m(pid=41209)[0m     @     0x55bca62c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x55bca6352baf _PyEval_EvalCodeWithName
[2m[36m(pid=41209)[0m     @     0x55bca6353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41209)[0m     @     0x55bca62c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x55bca6352baf _PyEval_EvalCodeWithName
[2m[36m(pid=41209)[0m     @     0x55bca6353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41209)[0m     @     0x55bca62c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x55bca6352baf _PyEval_EvalCodeWithName
[2m[36m(pid=41209)[0m     @     0x55bca6353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41209)[0m     @     0x55bca62c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41209)[0m     @     0x55bca6352baf _PyEval_EvalCodeWithName
[2m[36m(pid=41209)[0m     @     0x55bca6353643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41209)[0m     @     0x55bca62c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x7ee7db49f4f5 at::Tensor::copy_()
[2m[36m(pid=41232)[0m     @     0x7ee7e154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41232)[0m     @     0x558040779fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41232)[0m     @     0x5580406d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x55804075fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41232)[0m     @     0x558040760a20 method_vectorcall
[2m[36m(pid=41232)[0m     @     0x5580406d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x55804075fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41232)[0m     @     0x558040760643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41232)[0m     @     0x5580406d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x55804075fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41232)[0m     @     0x558040760643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41232)[0m     @     0x5580406d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x55804075fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41232)[0m     @     0x558040760643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41232)[0m     @     0x5580406d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41232)[0m     @     0x55804075fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=41232)[0m     @     0x558040760643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41232)[0m     @     0x5580406d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x7f5a9042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=41223)[0m     @     0x56116e213fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=41223)[0m     @     0x56116e16eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x56116e1f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=41223)[0m     @     0x56116e1faa20 method_vectorcall
[2m[36m(pid=41223)[0m     @     0x56116e16ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x56116e1f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=41223)[0m     @     0x56116e1fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41223)[0m     @     0x56116e16f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x56116e1f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=41223)[0m     @     0x56116e1fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41223)[0m     @     0x56116e16f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x56116e1f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=41223)[0m     @     0x56116e1fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41223)[0m     @     0x56116e16f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=41223)[0m     @     0x56116e1f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=41223)[0m     @     0x56116e1fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=41223)[0m     @     0x56116e16f689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:43:26,017	ERROR trial_runner.py:567 -- Trial PPO_jss_env_b77b2_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=41234, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:43:26,021	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:43:26,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:43:26,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:43:26,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
== Status ==
Memory usage on this node: 24.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b77b2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b77b2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b77b2_00000_0_2020-11-05_10-43-18/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:43:26,032	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b77b2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b77b2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b77b2_00000_0_2020-11-05_10-43-18/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_b77b2_00000])
